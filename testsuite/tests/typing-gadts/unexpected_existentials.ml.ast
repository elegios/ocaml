[
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[6,112+0]..[6,112+25])
    Pstr_type Rec
    [
      type_declaration "any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[6,112+5]..[6,112+8]) (testsuite/tests/typing-gadts/unexpected_existentials.ml[6,112+0]..[6,112+25])
        attribute "ocaml.doc"
          [
            structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[4,21+0]..[5,82+29])
              Pstr_eval
              expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[4,21+0]..[5,82+29])
                Pexp_constant PConst_string(" Test the error message for existential types apparearing\n    in unexpected position ",(testsuite/tests/typing-gadts/unexpected_existentials.ml[4,21+0]..[5,82+29]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (testsuite/tests/typing-gadts/unexpected_existentials.ml[6,112+11]..[6,112+25])
                "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[6,112+11]..[6,112+14])
                [
                  core_type (testsuite/tests/typing-gadts/unexpected_existentials.ml[6,112+16]..[6,112+18])
                    Ptyp_var a
                ]
                Some
                  core_type (testsuite/tests/typing-gadts/unexpected_existentials.ml[6,112+22]..[6,112+25])
                    Ptyp_constr "any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[6,112+22]..[6,112+25])
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[7,138+0]..[9,178+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[7,138+10]..[9,178+2])
        Pstr_eval
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[7,138+10]..[9,178+2])
          Pexp_constant PConst_string ("\ntype any = Any : 'a -> any\n",(testsuite/tests/typing-gadts/unexpected_existentials.ml[7,138+12]..[9,178+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[11,183+0]..[11,183+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[11,183+4]..[11,183+9])
          Ppat_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[11,183+4]..[11,183+7])
          Some
            []
            pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[11,183+8]..[11,183+9])
              Ppat_var "x" (testsuite/tests/typing-gadts/unexpected_existentials.ml[11,183+8]..[11,183+9])
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[11,183+12]..[11,183+18])
          Pexp_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[11,183+12]..[11,183+15])
          Some
            expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[11,183+16]..[11,183+18])
              Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[11,183+16]..[11,183+18])
              None
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[12,202+0]..[18,404+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[12,202+10]..[18,404+2])
        Pstr_eval
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[12,202+10]..[18,404+2])
          Pexp_constant PConst_string ("\nLine 1, characters 4-9:\n1 | let Any x = Any ()\n        ^^^^^\nError: Existential types are not allowed in toplevel bindings,\n       but this pattern introduces the existential type $Any_'a.\n",(testsuite/tests/typing-gadts/unexpected_existentials.ml[12,202+12]..[18,404+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[20,409+0]..[22,454+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[20,409+4]..[20,409+6])
          Ppat_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[20,409+4]..[20,409+6])
          None
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[21,418+2]..[22,454+4])
          Pexp_let Nonrec
          [
            <def>
              pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[21,418+6]..[21,418+11])
                Ppat_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[21,418+6]..[21,418+9])
                Some
                  []
                  pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[21,418+10]..[21,418+11])
                    Ppat_var "x" (testsuite/tests/typing-gadts/unexpected_existentials.ml[21,418+10]..[21,418+11])
              expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[21,418+14]..[21,418+20])
                Pexp_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[21,418+14]..[21,418+17])
                Some
                  expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[21,418+18]..[21,418+20])
                    Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[21,418+18]..[21,418+20])
                    None
            <def>
              pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[21,418+25]..[21,418+27])
                Ppat_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[21,418+25]..[21,418+27])
                None
              expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[21,418+30]..[21,418+32])
                Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[21,418+30]..[21,418+32])
                None
          ]
          expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[22,454+2]..[22,454+4])
            Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[22,454+2]..[22,454+4])
            None
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[23,459+0]..[29,690+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[23,459+10]..[29,690+2])
        Pstr_eval
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[23,459+10]..[29,690+2])
          Pexp_constant PConst_string ("\nLine 2, characters 6-11:\n2 |   let Any x = Any () and () = () in\n          ^^^^^\nError: Existential types are not allowed in \"let ... and ...\" bindings,\n       but this pattern introduces the existential type $Any_'a.\n",(testsuite/tests/typing-gadts/unexpected_existentials.ml[23,459+12]..[29,690+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[32,696+0]..[34,733+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[32,696+4]..[32,696+6])
          Ppat_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[32,696+4]..[32,696+6])
          None
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[33,705+2]..[34,733+4])
          Pexp_let Rec
          [
            <def>
              pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[33,705+10]..[33,705+15])
                Ppat_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[33,705+10]..[33,705+13])
                Some
                  []
                  pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[33,705+14]..[33,705+15])
                    Ppat_var "x" (testsuite/tests/typing-gadts/unexpected_existentials.ml[33,705+14]..[33,705+15])
              expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[33,705+18]..[33,705+24])
                Pexp_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[33,705+18]..[33,705+21])
                Some
                  expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[33,705+22]..[33,705+24])
                    Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[33,705+22]..[33,705+24])
                    None
          ]
          expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[34,733+2]..[34,733+4])
            Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[34,733+2]..[34,733+4])
            None
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[35,738+0]..[41,958+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[35,738+10]..[41,958+2])
        Pstr_eval
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[35,738+10]..[41,958+2])
          Pexp_constant PConst_string ("\nLine 2, characters 10-15:\n2 |   let rec Any x = Any () in\n              ^^^^^\nError: Existential types are not allowed in recursive bindings,\n       but this pattern introduces the existential type $Any_'a.\n",(testsuite/tests/typing-gadts/unexpected_existentials.ml[35,738+12]..[41,958+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[44,964+0]..[46,1009+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[44,964+4]..[44,964+6])
          Ppat_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[44,964+4]..[44,964+6])
          None
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[45,973+2]..[46,1009+4])
          Pexp_let Nonrec
          [
            <def>
                attribute "attribute"
                  []
              pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[45,973+18]..[45,973+23])
                Ppat_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[45,973+18]..[45,973+21])
                Some
                  []
                  pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[45,973+22]..[45,973+23])
                    Ppat_var "x" (testsuite/tests/typing-gadts/unexpected_existentials.ml[45,973+22]..[45,973+23])
              expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[45,973+26]..[45,973+32])
                Pexp_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[45,973+26]..[45,973+29])
                Some
                  expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[45,973+30]..[45,973+32])
                    Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[45,973+30]..[45,973+32])
                    None
          ]
          expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[46,1009+2]..[46,1009+4])
            Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[46,1009+2]..[46,1009+4])
            None
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[47,1014+0]..[53,1254+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[47,1014+10]..[53,1254+2])
        Pstr_eval
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[47,1014+10]..[53,1254+2])
          Pexp_constant PConst_string ("\nLine 2, characters 18-23:\n2 |   let[@attribute] Any x = Any () in\n                      ^^^^^\nError: Existential types are not allowed in presence of attributes,\n       but this pattern introduces the existential type $Any_'a.\n",(testsuite/tests/typing-gadts/unexpected_existentials.ml[47,1014+12]..[53,1254+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[56,1260+0]..[56,1260+28])
    Pstr_class
    [
      class_declaration (testsuite/tests/typing-gadts/unexpected_existentials.ml[56,1260+0]..[56,1260+28])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "c" (testsuite/tests/typing-gadts/unexpected_existentials.ml[56,1260+6]..[56,1260+7])
        pci_expr =
          class_expr (testsuite/tests/typing-gadts/unexpected_existentials.ml[56,1260+8]..[56,1260+28])
            Pcl_fun
            Nolabel
            None
            pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[56,1260+8]..[56,1260+15])
              Ppat_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[56,1260+9]..[56,1260+12])
              Some
                []
                pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[56,1260+13]..[56,1260+14])
                  Ppat_var "x" (testsuite/tests/typing-gadts/unexpected_existentials.ml[56,1260+13]..[56,1260+14])
            class_expr (testsuite/tests/typing-gadts/unexpected_existentials.ml[56,1260+18]..[56,1260+28])
              Pcl_structure
              class_structure
                pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[56,1260+24]..[56,1260+24]) ghost
                  Ppat_any
                []
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[57,1289+0]..[63,1506+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[57,1289+10]..[63,1506+2])
        Pstr_eval
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[57,1289+10]..[63,1506+2])
          Pexp_constant PConst_string ("\nLine 1, characters 8-15:\n1 | class c (Any x) = object end\n            ^^^^^^^\nError: Existential types are not allowed in class arguments,\n       but this pattern introduces the existential type $Any_'a.\n",(testsuite/tests/typing-gadts/unexpected_existentials.ml[57,1289+12]..[63,1506+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[65,1511+0]..[65,1511+26])
    Pstr_class
    [
      class_declaration (testsuite/tests/typing-gadts/unexpected_existentials.ml[65,1511+0]..[65,1511+26])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "c" (testsuite/tests/typing-gadts/unexpected_existentials.ml[65,1511+6]..[65,1511+7])
        pci_expr =
          class_expr (testsuite/tests/typing-gadts/unexpected_existentials.ml[65,1511+10]..[65,1511+26])
            Pcl_structure
            class_structure
              pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[65,1511+16]..[65,1511+23])
                Ppat_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[65,1511+17]..[65,1511+20])
                Some
                  []
                  pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[65,1511+21]..[65,1511+22])
                    Ppat_var "x" (testsuite/tests/typing-gadts/unexpected_existentials.ml[65,1511+21]..[65,1511+22])
              []
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[66,1538+0]..[72,1760+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[66,1538+10]..[72,1760+2])
        Pstr_eval
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[66,1538+10]..[72,1760+2])
          Pexp_constant PConst_string ("\nLine 1, characters 16-23:\n1 | class c = object(Any x)end\n                    ^^^^^^^\nError: Existential types are not allowed in self patterns,\n       but this pattern introduces the existential type $Any_'a.\n",(testsuite/tests/typing-gadts/unexpected_existentials.ml[66,1538+12]..[72,1760+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[74,1765+0]..[74,1765+28])
    Pstr_type Rec
    [
      type_declaration "other" (testsuite/tests/typing-gadts/unexpected_existentials.ml[74,1765+5]..[74,1765+10]) (testsuite/tests/typing-gadts/unexpected_existentials.ml[74,1765+0]..[74,1765+28])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (testsuite/tests/typing-gadts/unexpected_existentials.ml[74,1765+13]..[74,1765+28])
                "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[74,1765+13]..[74,1765+16])
                [
                  core_type (testsuite/tests/typing-gadts/unexpected_existentials.ml[74,1765+18]..[74,1765+19])
                    Ptyp_any
                ]
                Some
                  core_type (testsuite/tests/typing-gadts/unexpected_existentials.ml[74,1765+23]..[74,1765+28])
                    Ptyp_constr "other" (testsuite/tests/typing-gadts/unexpected_existentials.ml[74,1765+23]..[74,1765+28])
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[75,1794+0]..[77,1838+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[75,1794+10]..[77,1838+2])
        Pstr_eval
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[75,1794+10]..[77,1838+2])
          Pexp_constant PConst_string ("\ntype other = Any : 'a -> other\n",(testsuite/tests/typing-gadts/unexpected_existentials.ml[75,1794+12]..[77,1838+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[79,1843+0]..[79,1843+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[79,1843+4]..[79,1843+9])
          Ppat_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[79,1843+4]..[79,1843+7])
          Some
            []
            pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[79,1843+8]..[79,1843+9])
              Ppat_var "x" (testsuite/tests/typing-gadts/unexpected_existentials.ml[79,1843+8]..[79,1843+9])
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[79,1843+12]..[79,1843+18])
          Pexp_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[79,1843+12]..[79,1843+15])
          Some
            expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[79,1843+16]..[79,1843+18])
              Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[79,1843+16]..[79,1843+18])
              None
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[80,1862+0]..[86,2060+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[80,1862+10]..[86,2060+2])
        Pstr_eval
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[80,1862+10]..[86,2060+2])
          Pexp_constant PConst_string ("\nLine 1, characters 4-9:\n1 | let Any x = Any ()\n        ^^^^^\nError: Existential types are not allowed in toplevel bindings,\n       but the constructor Any introduces existential types.\n",(testsuite/tests/typing-gadts/unexpected_existentials.ml[80,1862+12]..[86,2060+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[89,2066+0]..[89,2066+39])
    Pstr_class
    [
      class_declaration (testsuite/tests/typing-gadts/unexpected_existentials.ml[89,2066+0]..[89,2066+39])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "c" (testsuite/tests/typing-gadts/unexpected_existentials.ml[89,2066+6]..[89,2066+7])
        pci_expr =
          class_expr (testsuite/tests/typing-gadts/unexpected_existentials.ml[89,2066+10]..[89,2066+39])
            Pcl_let Nonrec
            [
              <def>
                pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[89,2066+14]..[89,2066+20])
                  Ppat_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[89,2066+14]..[89,2066+17])
                  Some
                    []
                    pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[89,2066+18]..[89,2066+20])
                      Ppat_var "_x" (testsuite/tests/typing-gadts/unexpected_existentials.ml[89,2066+18]..[89,2066+20])
                expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[89,2066+23]..[89,2066+25])
                  Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[89,2066+23]..[89,2066+25])
                  None
            ]
            class_expr (testsuite/tests/typing-gadts/unexpected_existentials.ml[89,2066+29]..[89,2066+39])
              Pcl_structure
              class_structure
                pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[89,2066+35]..[89,2066+35]) ghost
                  Ppat_any
                []
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[90,2106+0]..[96,2353+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[90,2106+10]..[96,2353+2])
        Pstr_eval
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[90,2106+10]..[96,2353+2])
          Pexp_constant PConst_string ("\nLine 1, characters 14-20:\n1 | class c = let Any _x = () in object end\n                  ^^^^^^\nError: Existential types are not allowed in bindings inside class definition,\n       but the constructor Any introduces existential types.\n",(testsuite/tests/typing-gadts/unexpected_existentials.ml[90,2106+12]..[96,2353+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[98,2358+0]..[100,2403+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[98,2358+4]..[98,2358+6])
          Ppat_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[98,2358+4]..[98,2358+6])
          None
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[99,2367+2]..[100,2403+4])
          Pexp_let Nonrec
          [
            <def>
              pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[99,2367+6]..[99,2367+11])
                Ppat_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[99,2367+6]..[99,2367+9])
                Some
                  []
                  pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[99,2367+10]..[99,2367+11])
                    Ppat_var "x" (testsuite/tests/typing-gadts/unexpected_existentials.ml[99,2367+10]..[99,2367+11])
              expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[99,2367+14]..[99,2367+20])
                Pexp_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[99,2367+14]..[99,2367+17])
                Some
                  expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[99,2367+18]..[99,2367+20])
                    Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[99,2367+18]..[99,2367+20])
                    None
            <def>
              pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[99,2367+25]..[99,2367+27])
                Ppat_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[99,2367+25]..[99,2367+27])
                None
              expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[99,2367+30]..[99,2367+32])
                Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[99,2367+30]..[99,2367+32])
                None
          ]
          expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[100,2403+2]..[100,2403+4])
            Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[100,2403+2]..[100,2403+4])
            None
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[101,2408+0]..[107,2635+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[101,2408+10]..[107,2635+2])
        Pstr_eval
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[101,2408+10]..[107,2635+2])
          Pexp_constant PConst_string ("\nLine 2, characters 6-11:\n2 |   let Any x = Any () and () = () in\n          ^^^^^\nError: Existential types are not allowed in \"let ... and ...\" bindings,\n       but the constructor Any introduces existential types.\n",(testsuite/tests/typing-gadts/unexpected_existentials.ml[101,2408+12]..[107,2635+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[110,2641+0]..[112,2678+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[110,2641+4]..[110,2641+6])
          Ppat_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[110,2641+4]..[110,2641+6])
          None
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[111,2650+2]..[112,2678+4])
          Pexp_let Rec
          [
            <def>
              pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[111,2650+10]..[111,2650+15])
                Ppat_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[111,2650+10]..[111,2650+13])
                Some
                  []
                  pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[111,2650+14]..[111,2650+15])
                    Ppat_var "x" (testsuite/tests/typing-gadts/unexpected_existentials.ml[111,2650+14]..[111,2650+15])
              expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[111,2650+18]..[111,2650+24])
                Pexp_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[111,2650+18]..[111,2650+21])
                Some
                  expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[111,2650+22]..[111,2650+24])
                    Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[111,2650+22]..[111,2650+24])
                    None
          ]
          expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[112,2678+2]..[112,2678+4])
            Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[112,2678+2]..[112,2678+4])
            None
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[113,2683+0]..[119,2899+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[113,2683+10]..[119,2899+2])
        Pstr_eval
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[113,2683+10]..[119,2899+2])
          Pexp_constant PConst_string ("\nLine 2, characters 10-15:\n2 |   let rec Any x = Any () in\n              ^^^^^\nError: Existential types are not allowed in recursive bindings,\n       but the constructor Any introduces existential types.\n",(testsuite/tests/typing-gadts/unexpected_existentials.ml[113,2683+12]..[119,2899+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[122,2905+0]..[124,2950+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[122,2905+4]..[122,2905+6])
          Ppat_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[122,2905+4]..[122,2905+6])
          None
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[123,2914+2]..[124,2950+4])
          Pexp_let Nonrec
          [
            <def>
                attribute "attribute"
                  []
              pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[123,2914+18]..[123,2914+23])
                Ppat_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[123,2914+18]..[123,2914+21])
                Some
                  []
                  pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[123,2914+22]..[123,2914+23])
                    Ppat_var "x" (testsuite/tests/typing-gadts/unexpected_existentials.ml[123,2914+22]..[123,2914+23])
              expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[123,2914+26]..[123,2914+32])
                Pexp_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[123,2914+26]..[123,2914+29])
                Some
                  expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[123,2914+30]..[123,2914+32])
                    Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[123,2914+30]..[123,2914+32])
                    None
          ]
          expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[124,2950+2]..[124,2950+4])
            Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[124,2950+2]..[124,2950+4])
            None
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[125,2955+0]..[131,3191+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[125,2955+10]..[131,3191+2])
        Pstr_eval
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[125,2955+10]..[131,3191+2])
          Pexp_constant PConst_string ("\nLine 2, characters 18-23:\n2 |   let[@attribute] Any x = Any () in\n                      ^^^^^\nError: Existential types are not allowed in presence of attributes,\n       but the constructor Any introduces existential types.\n",(testsuite/tests/typing-gadts/unexpected_existentials.ml[125,2955+12]..[131,3191+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[133,3196+0]..[133,3196+28])
    Pstr_class
    [
      class_declaration (testsuite/tests/typing-gadts/unexpected_existentials.ml[133,3196+0]..[133,3196+28])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "c" (testsuite/tests/typing-gadts/unexpected_existentials.ml[133,3196+6]..[133,3196+7])
        pci_expr =
          class_expr (testsuite/tests/typing-gadts/unexpected_existentials.ml[133,3196+8]..[133,3196+28])
            Pcl_fun
            Nolabel
            None
            pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[133,3196+8]..[133,3196+15])
              Ppat_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[133,3196+9]..[133,3196+12])
              Some
                []
                pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[133,3196+13]..[133,3196+14])
                  Ppat_var "x" (testsuite/tests/typing-gadts/unexpected_existentials.ml[133,3196+13]..[133,3196+14])
            class_expr (testsuite/tests/typing-gadts/unexpected_existentials.ml[133,3196+18]..[133,3196+28])
              Pcl_structure
              class_structure
                pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[133,3196+24]..[133,3196+24]) ghost
                  Ppat_any
                []
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[134,3225+0]..[140,3438+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[134,3225+10]..[140,3438+2])
        Pstr_eval
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[134,3225+10]..[140,3438+2])
          Pexp_constant PConst_string ("\nLine 1, characters 8-15:\n1 | class c (Any x) = object end\n            ^^^^^^^\nError: Existential types are not allowed in class arguments,\n       but the constructor Any introduces existential types.\n",(testsuite/tests/typing-gadts/unexpected_existentials.ml[134,3225+12]..[140,3438+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[142,3443+0]..[142,3443+27])
    Pstr_class
    [
      class_declaration (testsuite/tests/typing-gadts/unexpected_existentials.ml[142,3443+0]..[142,3443+27])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "c" (testsuite/tests/typing-gadts/unexpected_existentials.ml[142,3443+6]..[142,3443+7])
        pci_expr =
          class_expr (testsuite/tests/typing-gadts/unexpected_existentials.ml[142,3443+10]..[142,3443+27])
            Pcl_structure
            class_structure
              pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[142,3443+16]..[142,3443+23])
                Ppat_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[142,3443+17]..[142,3443+20])
                Some
                  []
                  pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[142,3443+21]..[142,3443+22])
                    Ppat_var "x" (testsuite/tests/typing-gadts/unexpected_existentials.ml[142,3443+21]..[142,3443+22])
              []
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[143,3471+0]..[149,3690+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[143,3471+10]..[149,3690+2])
        Pstr_eval
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[143,3471+10]..[149,3690+2])
          Pexp_constant PConst_string ("\nLine 1, characters 16-23:\n1 | class c = object(Any x) end\n                    ^^^^^^^\nError: Existential types are not allowed in self patterns,\n       but the constructor Any introduces existential types.\n",(testsuite/tests/typing-gadts/unexpected_existentials.ml[143,3471+12]..[149,3690+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[151,3695+0]..[151,3695+39])
    Pstr_class
    [
      class_declaration (testsuite/tests/typing-gadts/unexpected_existentials.ml[151,3695+0]..[151,3695+39])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "c" (testsuite/tests/typing-gadts/unexpected_existentials.ml[151,3695+6]..[151,3695+7])
        pci_expr =
          class_expr (testsuite/tests/typing-gadts/unexpected_existentials.ml[151,3695+10]..[151,3695+39])
            Pcl_let Nonrec
            [
              <def>
                pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[151,3695+14]..[151,3695+20])
                  Ppat_construct "Any" (testsuite/tests/typing-gadts/unexpected_existentials.ml[151,3695+14]..[151,3695+17])
                  Some
                    []
                    pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[151,3695+18]..[151,3695+20])
                      Ppat_var "_x" (testsuite/tests/typing-gadts/unexpected_existentials.ml[151,3695+18]..[151,3695+20])
                expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[151,3695+23]..[151,3695+25])
                  Pexp_construct "()" (testsuite/tests/typing-gadts/unexpected_existentials.ml[151,3695+23]..[151,3695+25])
                  None
            ]
            class_expr (testsuite/tests/typing-gadts/unexpected_existentials.ml[151,3695+29]..[151,3695+39])
              Pcl_structure
              class_structure
                pattern (testsuite/tests/typing-gadts/unexpected_existentials.ml[151,3695+35]..[151,3695+35]) ghost
                  Ppat_any
                []
    ]
  structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[152,3735+0]..[158,3982+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-gadts/unexpected_existentials.ml[152,3735+10]..[158,3982+2])
        Pstr_eval
        expression (testsuite/tests/typing-gadts/unexpected_existentials.ml[152,3735+10]..[158,3982+2])
          Pexp_constant PConst_string ("\nLine 1, characters 14-20:\n1 | class c = let Any _x = () in object end\n                  ^^^^^^\nError: Existential types are not allowed in bindings inside class definition,\n       but the constructor Any introduces existential types.\n",(testsuite/tests/typing-gadts/unexpected_existentials.ml[152,3735+12]..[158,3982+0]),Some "")
    ]
]

