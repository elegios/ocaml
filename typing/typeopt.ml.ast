[
  structure_item (typing/typeopt.ml[18,1145+0]..[18,1145+9])
    Pstr_open Fresh
    module_expr (typing/typeopt.ml[18,1145+5]..[18,1145+9])
      Pmod_ident "Path" (typing/typeopt.ml[18,1145+5]..[18,1145+9])
  structure_item (typing/typeopt.ml[19,1155+0]..[19,1155+10])
    Pstr_open Fresh
    module_expr (typing/typeopt.ml[19,1155+5]..[19,1155+10])
      Pmod_ident "Types" (typing/typeopt.ml[19,1155+5]..[19,1155+10])
  structure_item (typing/typeopt.ml[20,1166+0]..[20,1166+13])
    Pstr_open Fresh
    module_expr (typing/typeopt.ml[20,1166+5]..[20,1166+13])
      Pmod_ident "Asttypes" (typing/typeopt.ml[20,1166+5]..[20,1166+13])
  structure_item (typing/typeopt.ml[21,1180+0]..[21,1180+14])
    Pstr_open Fresh
    module_expr (typing/typeopt.ml[21,1180+5]..[21,1180+14])
      Pmod_ident "Typedtree" (typing/typeopt.ml[21,1180+5]..[21,1180+14])
  structure_item (typing/typeopt.ml[22,1195+0]..[22,1195+11])
    Pstr_open Fresh
    module_expr (typing/typeopt.ml[22,1195+5]..[22,1195+11])
      Pmod_ident "Lambda" (typing/typeopt.ml[22,1195+5]..[22,1195+11])
  structure_item (typing/typeopt.ml[24,1208+0]..[38,1719+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[24,1208+4]..[24,1208+13])
          Ppat_var "scrape_ty" (typing/typeopt.ml[24,1208+4]..[24,1208+13])
        expression (typing/typeopt.ml[24,1208+14]..[38,1719+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[24,1208+14]..[24,1208+17])
            Ppat_var "env" (typing/typeopt.ml[24,1208+14]..[24,1208+17])
          expression (typing/typeopt.ml[24,1208+18]..[38,1719+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typeopt.ml[24,1208+18]..[24,1208+20])
              Ppat_var "ty" (typing/typeopt.ml[24,1208+18]..[24,1208+20])
            expression (typing/typeopt.ml[25,1231+2]..[38,1719+11])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typeopt.ml[25,1231+6]..[25,1231+8])
                    Ppat_var "ty" (typing/typeopt.ml[25,1231+6]..[25,1231+8])
                  expression (typing/typeopt.ml[25,1231+11]..[25,1231+62])
                    Pexp_apply
                    expression (typing/typeopt.ml[25,1231+11]..[25,1231+32])
                      Pexp_ident "Ctype.expand_head_opt" (typing/typeopt.ml[25,1231+11]..[25,1231+32])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typeopt.ml[25,1231+33]..[25,1231+36])
                          Pexp_ident "env" (typing/typeopt.ml[25,1231+33]..[25,1231+36])
                      <arg>
                      Nolabel
                        expression (typing/typeopt.ml[25,1231+37]..[25,1231+62])
                          Pexp_apply
                          expression (typing/typeopt.ml[25,1231+38]..[25,1231+58])
                            Pexp_ident "Ctype.correct_levels" (typing/typeopt.ml[25,1231+38]..[25,1231+58])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typeopt.ml[25,1231+59]..[25,1231+61])
                                Pexp_ident "ty" (typing/typeopt.ml[25,1231+59]..[25,1231+61])
                          ]
                    ]
              ]
              expression (typing/typeopt.ml[26,1297+2]..[38,1719+11])
                Pexp_match
                expression (typing/typeopt.ml[26,1297+8]..[26,1297+19])
                  Pexp_apply
                  expression (typing/typeopt.ml[26,1297+8]..[26,1297+16])
                    Pexp_ident "get_desc" (typing/typeopt.ml[26,1297+8]..[26,1297+16])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typeopt.ml[26,1297+17]..[26,1297+19])
                        Pexp_ident "ty" (typing/typeopt.ml[26,1297+17]..[26,1297+19])
                  ]
                [
                  <case>
                    pattern (typing/typeopt.ml[27,1322+4]..[27,1322+21])
                      Ppat_construct "Tconstr" (typing/typeopt.ml[27,1322+4]..[27,1322+11])
                      Some
                        []
                        pattern (typing/typeopt.ml[27,1322+12]..[27,1322+21])
                          Ppat_tuple
                          [
                            pattern (typing/typeopt.ml[27,1322+13]..[27,1322+14])
                              Ppat_var "p" (typing/typeopt.ml[27,1322+13]..[27,1322+14])
                            pattern (typing/typeopt.ml[27,1322+16]..[27,1322+17])
                              Ppat_any
                            pattern (typing/typeopt.ml[27,1322+19]..[27,1322+20])
                              Ppat_any
                          ]
                    expression (typing/typeopt.ml[28,1347+6]..[37,1709+9])
                      Pexp_match
                      expression (typing/typeopt.ml[28,1347+18]..[28,1347+37])
                        Pexp_apply
                        expression (typing/typeopt.ml[28,1347+18]..[28,1347+31])
                          Pexp_ident "Env.find_type" (typing/typeopt.ml[28,1347+18]..[28,1347+31])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typeopt.ml[28,1347+32]..[28,1347+33])
                              Pexp_ident "p" (typing/typeopt.ml[28,1347+32]..[28,1347+33])
                          <arg>
                          Nolabel
                            expression (typing/typeopt.ml[28,1347+34]..[28,1347+37])
                              Pexp_ident "env" (typing/typeopt.ml[28,1347+34]..[28,1347+37])
                        ]
                      [
                        <case>
                          pattern (typing/typeopt.ml[29,1390+8]..[30,1447+62])
                            Ppat_record Open
                            [
                              "type_kind" (typing/typeopt.ml[29,1390+9]..[29,1390+18])
                                pattern (typing/typeopt.ml[29,1390+21]..[30,1447+58])
                                  Ppat_or
                                  pattern (typing/typeopt.ml[29,1390+23]..[29,1390+56])
                                    Ppat_construct "Type_variant" (typing/typeopt.ml[29,1390+23]..[29,1390+35])
                                    Some
                                      []
                                      pattern (typing/typeopt.ml[29,1390+36]..[29,1390+56])
                                        Ppat_tuple
                                        [
                                          pattern (typing/typeopt.ml[29,1390+37]..[29,1390+38])
                                            Ppat_any
                                          pattern (typing/typeopt.ml[29,1390+40]..[29,1390+55])
                                            Ppat_construct "Variant_unboxed" (typing/typeopt.ml[29,1390+40]..[29,1390+55])
                                            None
                                        ]
                                  pattern (typing/typeopt.ml[30,1447+23]..[30,1447+56])
                                    Ppat_construct "Type_record" (typing/typeopt.ml[30,1447+23]..[30,1447+34])
                                    Some
                                      []
                                      pattern (typing/typeopt.ml[30,1447+35]..[30,1447+56])
                                        Ppat_tuple
                                        [
                                          pattern (typing/typeopt.ml[30,1447+36]..[30,1447+37])
                                            Ppat_any
                                          pattern (typing/typeopt.ml[30,1447+39]..[30,1447+55])
                                            Ppat_construct "Record_unboxed" (typing/typeopt.ml[30,1447+39]..[30,1447+53])
                                            Some
                                              []
                                              pattern (typing/typeopt.ml[30,1447+54]..[30,1447+55])
                                                Ppat_any
                                        ]
                            ]
                          expression (typing/typeopt.ml[30,1447+66]..[34,1647+11])
                            Pexp_match
                            expression (typing/typeopt.ml[31,1519+16]..[31,1519+71])
                              Pexp_apply
                              expression (typing/typeopt.ml[31,1519+16]..[31,1519+64])
                                Pexp_ident "Typedecl_unboxed.get_unboxed_type_representation" (typing/typeopt.ml[31,1519+16]..[31,1519+64])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typeopt.ml[31,1519+65]..[31,1519+68])
                                    Pexp_ident "env" (typing/typeopt.ml[31,1519+65]..[31,1519+68])
                                <arg>
                                Nolabel
                                  expression (typing/typeopt.ml[31,1519+69]..[31,1519+71])
                                    Pexp_ident "ty" (typing/typeopt.ml[31,1519+69]..[31,1519+71])
                              ]
                            [
                              <case>
                                pattern (typing/typeopt.ml[32,1596+12]..[32,1596+16])
                                  Ppat_construct "None" (typing/typeopt.ml[32,1596+12]..[32,1596+16])
                                  None
                                expression (typing/typeopt.ml[32,1596+20]..[32,1596+22])
                                  Pexp_ident "ty" (typing/typeopt.ml[32,1596+20]..[32,1596+22])
                              <case>
                                pattern (typing/typeopt.ml[33,1619+12]..[33,1619+20])
                                  Ppat_construct "Some" (typing/typeopt.ml[33,1619+12]..[33,1619+16])
                                  Some
                                    []
                                    pattern (typing/typeopt.ml[33,1619+17]..[33,1619+20])
                                      Ppat_var "ty2" (typing/typeopt.ml[33,1619+17]..[33,1619+20])
                                expression (typing/typeopt.ml[33,1619+24]..[33,1619+27])
                                  Pexp_ident "ty2" (typing/typeopt.ml[33,1619+24]..[33,1619+27])
                            ]
                        <case>
                          pattern (typing/typeopt.ml[35,1659+8]..[35,1659+9])
                            Ppat_any
                          expression (typing/typeopt.ml[35,1659+13]..[35,1659+15])
                            Pexp_ident "ty" (typing/typeopt.ml[35,1659+13]..[35,1659+15])
                        <case>
                          pattern (typing/typeopt.ml[36,1675+8]..[36,1675+27])
                            Ppat_exception
                            pattern (typing/typeopt.ml[36,1675+18]..[36,1675+27])
                              Ppat_construct "Not_found" (typing/typeopt.ml[36,1675+18]..[36,1675+27])
                              None
                          expression (typing/typeopt.ml[36,1675+31]..[36,1675+33])
                            Pexp_ident "ty" (typing/typeopt.ml[36,1675+31]..[36,1675+33])
                      ]
                  <case>
                    pattern (typing/typeopt.ml[38,1719+4]..[38,1719+5])
                      Ppat_any
                    expression (typing/typeopt.ml[38,1719+9]..[38,1719+11])
                      Pexp_ident "ty" (typing/typeopt.ml[38,1719+9]..[38,1719+11])
                ]
    ]
  structure_item (typing/typeopt.ml[40,1732+0]..[41,1752+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[40,1732+4]..[40,1732+10])
          Ppat_var "scrape" (typing/typeopt.ml[40,1732+4]..[40,1732+10])
        expression (typing/typeopt.ml[40,1732+11]..[41,1752+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[40,1732+11]..[40,1732+14])
            Ppat_var "env" (typing/typeopt.ml[40,1732+11]..[40,1732+14])
          expression (typing/typeopt.ml[40,1732+15]..[41,1752+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typeopt.ml[40,1732+15]..[40,1732+17])
              Ppat_var "ty" (typing/typeopt.ml[40,1732+15]..[40,1732+17])
            expression (typing/typeopt.ml[41,1752+2]..[41,1752+29])
              Pexp_apply
              expression (typing/typeopt.ml[41,1752+2]..[41,1752+10])
                Pexp_ident "get_desc" (typing/typeopt.ml[41,1752+2]..[41,1752+10])
              [
                <arg>
                Nolabel
                  expression (typing/typeopt.ml[41,1752+11]..[41,1752+29])
                    Pexp_apply
                    expression (typing/typeopt.ml[41,1752+12]..[41,1752+21])
                      Pexp_ident "scrape_ty" (typing/typeopt.ml[41,1752+12]..[41,1752+21])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typeopt.ml[41,1752+22]..[41,1752+25])
                          Pexp_ident "env" (typing/typeopt.ml[41,1752+22]..[41,1752+25])
                      <arg>
                      Nolabel
                        expression (typing/typeopt.ml[41,1752+26]..[41,1752+28])
                          Pexp_ident "ty" (typing/typeopt.ml[41,1752+26]..[41,1752+28])
                    ]
              ]
    ]
  structure_item (typing/typeopt.ml[43,1783+0]..[47,1897+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[43,1783+4]..[43,1783+15])
          Ppat_var "scrape_poly" (typing/typeopt.ml[43,1783+4]..[43,1783+15])
        expression (typing/typeopt.ml[43,1783+16]..[47,1897+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[43,1783+16]..[43,1783+19])
            Ppat_var "env" (typing/typeopt.ml[43,1783+16]..[43,1783+19])
          expression (typing/typeopt.ml[43,1783+20]..[47,1897+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typeopt.ml[43,1783+20]..[43,1783+22])
              Ppat_var "ty" (typing/typeopt.ml[43,1783+20]..[43,1783+22])
            expression (typing/typeopt.ml[44,1808+2]..[47,1897+10])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typeopt.ml[44,1808+6]..[44,1808+8])
                    Ppat_var "ty" (typing/typeopt.ml[44,1808+6]..[44,1808+8])
                  expression (typing/typeopt.ml[44,1808+11]..[44,1808+27])
                    Pexp_apply
                    expression (typing/typeopt.ml[44,1808+11]..[44,1808+20])
                      Pexp_ident "scrape_ty" (typing/typeopt.ml[44,1808+11]..[44,1808+20])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typeopt.ml[44,1808+21]..[44,1808+24])
                          Pexp_ident "env" (typing/typeopt.ml[44,1808+21]..[44,1808+24])
                      <arg>
                      Nolabel
                        expression (typing/typeopt.ml[44,1808+25]..[44,1808+27])
                          Pexp_ident "ty" (typing/typeopt.ml[44,1808+25]..[44,1808+27])
                    ]
              ]
              expression (typing/typeopt.ml[45,1839+2]..[47,1897+10])
                Pexp_match
                expression (typing/typeopt.ml[45,1839+8]..[45,1839+19])
                  Pexp_apply
                  expression (typing/typeopt.ml[45,1839+8]..[45,1839+16])
                    Pexp_ident "get_desc" (typing/typeopt.ml[45,1839+8]..[45,1839+16])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typeopt.ml[45,1839+17]..[45,1839+19])
                        Pexp_ident "ty" (typing/typeopt.ml[45,1839+17]..[45,1839+19])
                  ]
                [
                  <case>
                    pattern (typing/typeopt.ml[46,1864+4]..[46,1864+17])
                      Ppat_construct "Tpoly" (typing/typeopt.ml[46,1864+4]..[46,1864+9])
                      Some
                        []
                        pattern (typing/typeopt.ml[46,1864+10]..[46,1864+17])
                          Ppat_tuple
                          [
                            pattern (typing/typeopt.ml[46,1864+11]..[46,1864+13])
                              Ppat_var "ty" (typing/typeopt.ml[46,1864+11]..[46,1864+13])
                            pattern (typing/typeopt.ml[46,1864+15]..[46,1864+16])
                              Ppat_any
                          ]
                    expression (typing/typeopt.ml[46,1864+21]..[46,1864+32])
                      Pexp_apply
                      expression (typing/typeopt.ml[46,1864+21]..[46,1864+29])
                        Pexp_ident "get_desc" (typing/typeopt.ml[46,1864+21]..[46,1864+29])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typeopt.ml[46,1864+30]..[46,1864+32])
                            Pexp_ident "ty" (typing/typeopt.ml[46,1864+30]..[46,1864+32])
                      ]
                  <case>
                    pattern (typing/typeopt.ml[47,1897+4]..[47,1897+5])
                      Ppat_var "d" (typing/typeopt.ml[47,1897+4]..[47,1897+5])
                    expression (typing/typeopt.ml[47,1897+9]..[47,1897+10])
                      Pexp_ident "d" (typing/typeopt.ml[47,1897+9]..[47,1897+10])
                ]
    ]
  structure_item (typing/typeopt.ml[49,1909+0]..[52,2013+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[49,1909+4]..[49,1909+20])
          Ppat_var "is_function_type" (typing/typeopt.ml[49,1909+4]..[49,1909+20])
        expression (typing/typeopt.ml[49,1909+21]..[52,2013+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[49,1909+21]..[49,1909+24])
            Ppat_var "env" (typing/typeopt.ml[49,1909+21]..[49,1909+24])
          expression (typing/typeopt.ml[49,1909+25]..[52,2013+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typeopt.ml[49,1909+25]..[49,1909+27])
              Ppat_var "ty" (typing/typeopt.ml[49,1909+25]..[49,1909+27])
            expression (typing/typeopt.ml[50,1939+2]..[52,2013+13])
              Pexp_match
              expression (typing/typeopt.ml[50,1939+8]..[50,1939+21])
                Pexp_apply
                expression (typing/typeopt.ml[50,1939+8]..[50,1939+14])
                  Pexp_ident "scrape" (typing/typeopt.ml[50,1939+8]..[50,1939+14])
                [
                  <arg>
                  Nolabel
                    expression (typing/typeopt.ml[50,1939+15]..[50,1939+18])
                      Pexp_ident "env" (typing/typeopt.ml[50,1939+15]..[50,1939+18])
                  <arg>
                  Nolabel
                    expression (typing/typeopt.ml[50,1939+19]..[50,1939+21])
                      Pexp_ident "ty" (typing/typeopt.ml[50,1939+19]..[50,1939+21])
                ]
              [
                <case>
                  pattern (typing/typeopt.ml[51,1966+4]..[51,1966+27])
                    Ppat_construct "Tarrow" (typing/typeopt.ml[51,1966+4]..[51,1966+10])
                    Some
                      []
                      pattern (typing/typeopt.ml[51,1966+11]..[51,1966+27])
                        Ppat_tuple
                        [
                          pattern (typing/typeopt.ml[51,1966+12]..[51,1966+13])
                            Ppat_any
                          pattern (typing/typeopt.ml[51,1966+15]..[51,1966+18])
                            Ppat_var "lhs" (typing/typeopt.ml[51,1966+15]..[51,1966+18])
                          pattern (typing/typeopt.ml[51,1966+20]..[51,1966+23])
                            Ppat_var "rhs" (typing/typeopt.ml[51,1966+20]..[51,1966+23])
                          pattern (typing/typeopt.ml[51,1966+25]..[51,1966+26])
                            Ppat_any
                        ]
                  expression (typing/typeopt.ml[51,1966+31]..[51,1966+46])
                    Pexp_construct "Some" (typing/typeopt.ml[51,1966+31]..[51,1966+35])
                    Some
                      expression (typing/typeopt.ml[51,1966+36]..[51,1966+46])
                        Pexp_tuple
                        [
                          expression (typing/typeopt.ml[51,1966+37]..[51,1966+40])
                            Pexp_ident "lhs" (typing/typeopt.ml[51,1966+37]..[51,1966+40])
                          expression (typing/typeopt.ml[51,1966+42]..[51,1966+45])
                            Pexp_ident "rhs" (typing/typeopt.ml[51,1966+42]..[51,1966+45])
                        ]
                <case>
                  pattern (typing/typeopt.ml[52,2013+4]..[52,2013+5])
                    Ppat_any
                  expression (typing/typeopt.ml[52,2013+9]..[52,2013+13])
                    Pexp_construct "None" (typing/typeopt.ml[52,2013+9]..[52,2013+13])
                    None
              ]
    ]
  structure_item (typing/typeopt.ml[54,2028+0]..[57,2143+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[54,2028+4]..[54,2028+16])
          Ppat_var "is_base_type" (typing/typeopt.ml[54,2028+4]..[54,2028+16])
        expression (typing/typeopt.ml[54,2028+17]..[57,2143+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[54,2028+17]..[54,2028+20])
            Ppat_var "env" (typing/typeopt.ml[54,2028+17]..[54,2028+20])
          expression (typing/typeopt.ml[54,2028+21]..[57,2143+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typeopt.ml[54,2028+21]..[54,2028+23])
              Ppat_var "ty" (typing/typeopt.ml[54,2028+21]..[54,2028+23])
            expression (typing/typeopt.ml[54,2028+24]..[57,2143+14]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typeopt.ml[54,2028+24]..[54,2028+36])
                Ppat_var "base_ty_path" (typing/typeopt.ml[54,2028+24]..[54,2028+36])
              expression (typing/typeopt.ml[55,2067+2]..[57,2143+14])
                Pexp_match
                expression (typing/typeopt.ml[55,2067+8]..[55,2067+21])
                  Pexp_apply
                  expression (typing/typeopt.ml[55,2067+8]..[55,2067+14])
                    Pexp_ident "scrape" (typing/typeopt.ml[55,2067+8]..[55,2067+14])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typeopt.ml[55,2067+15]..[55,2067+18])
                        Pexp_ident "env" (typing/typeopt.ml[55,2067+15]..[55,2067+18])
                    <arg>
                    Nolabel
                      expression (typing/typeopt.ml[55,2067+19]..[55,2067+21])
                        Pexp_ident "ty" (typing/typeopt.ml[55,2067+19]..[55,2067+21])
                  ]
                [
                  <case>
                    pattern (typing/typeopt.ml[56,2094+4]..[56,2094+20])
                      Ppat_construct "Tconstr" (typing/typeopt.ml[56,2094+4]..[56,2094+11])
                      Some
                        []
                        pattern (typing/typeopt.ml[56,2094+11]..[56,2094+20])
                          Ppat_tuple
                          [
                            pattern (typing/typeopt.ml[56,2094+12]..[56,2094+13])
                              Ppat_var "p" (typing/typeopt.ml[56,2094+12]..[56,2094+13])
                            pattern (typing/typeopt.ml[56,2094+15]..[56,2094+16])
                              Ppat_any
                            pattern (typing/typeopt.ml[56,2094+18]..[56,2094+19])
                              Ppat_any
                          ]
                    expression (typing/typeopt.ml[56,2094+24]..[56,2094+48])
                      Pexp_apply
                      expression (typing/typeopt.ml[56,2094+24]..[56,2094+33])
                        Pexp_ident "Path.same" (typing/typeopt.ml[56,2094+24]..[56,2094+33])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typeopt.ml[56,2094+34]..[56,2094+35])
                            Pexp_ident "p" (typing/typeopt.ml[56,2094+34]..[56,2094+35])
                        <arg>
                        Nolabel
                          expression (typing/typeopt.ml[56,2094+36]..[56,2094+48])
                            Pexp_ident "base_ty_path" (typing/typeopt.ml[56,2094+36]..[56,2094+48])
                      ]
                  <case>
                    pattern (typing/typeopt.ml[57,2143+4]..[57,2143+5])
                      Ppat_any
                    expression (typing/typeopt.ml[57,2143+9]..[57,2143+14])
                      Pexp_construct "false" (typing/typeopt.ml[57,2143+9]..[57,2143+14])
                      None
                ]
    ]
  structure_item (typing/typeopt.ml[59,2159+0]..[65,2400+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[59,2159+4]..[59,2159+16])
          Ppat_var "is_immediate" (typing/typeopt.ml[59,2159+4]..[59,2159+16])
        expression (typing/typeopt.ml[59,2159+19]..[65,2400+48])
          Pexp_function
          [
            <case>
              pattern (typing/typeopt.ml[60,2187+4]..[60,2187+26])
                Ppat_construct "Type_immediacy.Unknown" (typing/typeopt.ml[60,2187+4]..[60,2187+26])
                None
              expression (typing/typeopt.ml[60,2187+30]..[60,2187+35])
                Pexp_construct "false" (typing/typeopt.ml[60,2187+30]..[60,2187+35])
                None
            <case>
              pattern (typing/typeopt.ml[61,2223+4]..[61,2223+25])
                Ppat_construct "Type_immediacy.Always" (typing/typeopt.ml[61,2223+4]..[61,2223+25])
                None
              expression (typing/typeopt.ml[61,2223+29]..[61,2223+33])
                Pexp_construct "true" (typing/typeopt.ml[61,2223+29]..[61,2223+33])
                None
            <case>
              pattern (typing/typeopt.ml[62,2257+4]..[62,2257+35])
                Ppat_construct "Type_immediacy.Always_on_64bits" (typing/typeopt.ml[62,2257+4]..[62,2257+35])
                None
              expression (typing/typeopt.ml[65,2400+6]..[65,2400+48])
                Pexp_apply
                expression (typing/typeopt.ml[65,2400+27]..[65,2400+29])
                  Pexp_ident "&&" (typing/typeopt.ml[65,2400+27]..[65,2400+29])
                [
                  <arg>
                  Nolabel
                    expression (typing/typeopt.ml[65,2400+6]..[65,2400+26])
                      Pexp_apply
                      expression (typing/typeopt.ml[65,2400+6]..[65,2400+7])
                        Pexp_ident "!" (typing/typeopt.ml[65,2400+6]..[65,2400+7])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typeopt.ml[65,2400+7]..[65,2400+26])
                            Pexp_ident "Clflags.native_code" (typing/typeopt.ml[65,2400+7]..[65,2400+26])
                      ]
                  <arg>
                  Nolabel
                    expression (typing/typeopt.ml[65,2400+30]..[65,2400+48])
                      Pexp_apply
                      expression (typing/typeopt.ml[65,2400+44]..[65,2400+45])
                        Pexp_ident "=" (typing/typeopt.ml[65,2400+44]..[65,2400+45])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typeopt.ml[65,2400+30]..[65,2400+43])
                            Pexp_ident "Sys.word_size" (typing/typeopt.ml[65,2400+30]..[65,2400+43])
                        <arg>
                        Nolabel
                          expression (typing/typeopt.ml[65,2400+46]..[65,2400+48])
                            Pexp_constant PConst_int (64,None)
                      ]
                ]
          ]
    ]
  structure_item (typing/typeopt.ml[67,2450+0]..[70,2571+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[67,2450+4]..[67,2450+22])
          Ppat_var "maybe_pointer_type" (typing/typeopt.ml[67,2450+4]..[67,2450+22])
        expression (typing/typeopt.ml[67,2450+23]..[70,2571+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[67,2450+23]..[67,2450+26])
            Ppat_var "env" (typing/typeopt.ml[67,2450+23]..[67,2450+26])
          expression (typing/typeopt.ml[67,2450+27]..[70,2571+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typeopt.ml[67,2450+27]..[67,2450+29])
              Ppat_var "ty" (typing/typeopt.ml[67,2450+27]..[67,2450+29])
            expression (typing/typeopt.ml[68,2482+2]..[70,2571+14])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typeopt.ml[68,2482+6]..[68,2482+8])
                    Ppat_var "ty" (typing/typeopt.ml[68,2482+6]..[68,2482+8])
                  expression (typing/typeopt.ml[68,2482+11]..[68,2482+27])
                    Pexp_apply
                    expression (typing/typeopt.ml[68,2482+11]..[68,2482+20])
                      Pexp_ident "scrape_ty" (typing/typeopt.ml[68,2482+11]..[68,2482+20])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typeopt.ml[68,2482+21]..[68,2482+24])
                          Pexp_ident "env" (typing/typeopt.ml[68,2482+21]..[68,2482+24])
                      <arg>
                      Nolabel
                        expression (typing/typeopt.ml[68,2482+25]..[68,2482+27])
                          Pexp_ident "ty" (typing/typeopt.ml[68,2482+25]..[68,2482+27])
                    ]
              ]
              expression (typing/typeopt.ml[69,2513+2]..[70,2571+14])
                Pexp_ifthenelse
                expression (typing/typeopt.ml[69,2513+5]..[69,2513+42])
                  Pexp_apply
                  expression (typing/typeopt.ml[69,2513+5]..[69,2513+17])
                    Pexp_ident "is_immediate" (typing/typeopt.ml[69,2513+5]..[69,2513+17])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typeopt.ml[69,2513+18]..[69,2513+42])
                        Pexp_apply
                        expression (typing/typeopt.ml[69,2513+19]..[69,2513+34])
                          Pexp_ident "Ctype.immediacy" (typing/typeopt.ml[69,2513+19]..[69,2513+34])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typeopt.ml[69,2513+35]..[69,2513+38])
                              Pexp_ident "env" (typing/typeopt.ml[69,2513+35]..[69,2513+38])
                          <arg>
                          Nolabel
                            expression (typing/typeopt.ml[69,2513+39]..[69,2513+41])
                              Pexp_ident "ty" (typing/typeopt.ml[69,2513+39]..[69,2513+41])
                        ]
                  ]
                expression (typing/typeopt.ml[69,2513+48]..[69,2513+57])
                  Pexp_construct "Immediate" (typing/typeopt.ml[69,2513+48]..[69,2513+57])
                  None
                Some
                  expression (typing/typeopt.ml[70,2571+7]..[70,2571+14])
                    Pexp_construct "Pointer" (typing/typeopt.ml[70,2571+7]..[70,2571+14])
                    None
    ]
  structure_item (typing/typeopt.ml[72,2587+0]..[72,2587+67])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[72,2587+4]..[72,2587+17])
          Ppat_var "maybe_pointer" (typing/typeopt.ml[72,2587+4]..[72,2587+17])
        expression (typing/typeopt.ml[72,2587+18]..[72,2587+67]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[72,2587+18]..[72,2587+21])
            Ppat_var "exp" (typing/typeopt.ml[72,2587+18]..[72,2587+21])
          expression (typing/typeopt.ml[72,2587+24]..[72,2587+67])
            Pexp_apply
            expression (typing/typeopt.ml[72,2587+24]..[72,2587+42])
              Pexp_ident "maybe_pointer_type" (typing/typeopt.ml[72,2587+24]..[72,2587+42])
            [
              <arg>
              Nolabel
                expression (typing/typeopt.ml[72,2587+43]..[72,2587+54])
                  Pexp_field
                  expression (typing/typeopt.ml[72,2587+43]..[72,2587+46])
                    Pexp_ident "exp" (typing/typeopt.ml[72,2587+43]..[72,2587+46])
                  "exp_env" (typing/typeopt.ml[72,2587+47]..[72,2587+54])
              <arg>
              Nolabel
                expression (typing/typeopt.ml[72,2587+55]..[72,2587+67])
                  Pexp_field
                  expression (typing/typeopt.ml[72,2587+55]..[72,2587+58])
                    Pexp_ident "exp" (typing/typeopt.ml[72,2587+55]..[72,2587+58])
                  "exp_type" (typing/typeopt.ml[72,2587+59]..[72,2587+67])
            ]
    ]
  structure_item (typing/typeopt.ml[74,2656+0]..[79,2755+7])
    Pstr_type Rec
    [
      type_declaration "classification" (typing/typeopt.ml[74,2656+5]..[74,2656+19]) (typing/typeopt.ml[74,2656+0]..[79,2755+7])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typeopt.ml[75,2678+2]..[75,2678+7])
                "Int" (typing/typeopt.ml[75,2678+4]..[75,2678+7])
                []
                None
              (typing/typeopt.ml[76,2686+2]..[76,2686+9])
                "Float" (typing/typeopt.ml[76,2686+4]..[76,2686+9])
                []
                None
              (typing/typeopt.ml[77,2696+2]..[77,2696+8])
                "Lazy" (typing/typeopt.ml[77,2696+4]..[77,2696+8])
                []
                None
              (typing/typeopt.ml[78,2705+2]..[78,2705+8])
                "Addr" (typing/typeopt.ml[78,2705+4]..[78,2705+8])
                []
                None
              (typing/typeopt.ml[79,2755+2]..[79,2755+7])
                "Any" (typing/typeopt.ml[79,2755+4]..[79,2755+7])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/typeopt.ml[81,2764+0]..[112,3905+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[81,2764+4]..[81,2764+12])
          Ppat_var "classify" (typing/typeopt.ml[81,2764+4]..[81,2764+12])
        expression (typing/typeopt.ml[81,2764+13]..[112,3905+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[81,2764+13]..[81,2764+16])
            Ppat_var "env" (typing/typeopt.ml[81,2764+13]..[81,2764+16])
          expression (typing/typeopt.ml[81,2764+17]..[112,3905+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typeopt.ml[81,2764+17]..[81,2764+19])
              Ppat_var "ty" (typing/typeopt.ml[81,2764+17]..[81,2764+19])
            expression (typing/typeopt.ml[82,2786+2]..[112,3905+18])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typeopt.ml[82,2786+6]..[82,2786+8])
                    Ppat_var "ty" (typing/typeopt.ml[82,2786+6]..[82,2786+8])
                  expression (typing/typeopt.ml[82,2786+11]..[82,2786+27])
                    Pexp_apply
                    expression (typing/typeopt.ml[82,2786+11]..[82,2786+20])
                      Pexp_ident "scrape_ty" (typing/typeopt.ml[82,2786+11]..[82,2786+20])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typeopt.ml[82,2786+21]..[82,2786+24])
                          Pexp_ident "env" (typing/typeopt.ml[82,2786+21]..[82,2786+24])
                      <arg>
                      Nolabel
                        expression (typing/typeopt.ml[82,2786+25]..[82,2786+27])
                          Pexp_ident "ty" (typing/typeopt.ml[82,2786+25]..[82,2786+27])
                    ]
              ]
              expression (typing/typeopt.ml[83,2817+2]..[112,3905+18])
                Pexp_ifthenelse
                expression (typing/typeopt.ml[83,2817+5]..[83,2817+42])
                  Pexp_apply
                  expression (typing/typeopt.ml[83,2817+31]..[83,2817+32])
                    Pexp_ident "=" (typing/typeopt.ml[83,2817+31]..[83,2817+32])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typeopt.ml[83,2817+5]..[83,2817+30])
                        Pexp_apply
                        expression (typing/typeopt.ml[83,2817+5]..[83,2817+23])
                          Pexp_ident "maybe_pointer_type" (typing/typeopt.ml[83,2817+5]..[83,2817+23])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typeopt.ml[83,2817+24]..[83,2817+27])
                              Pexp_ident "env" (typing/typeopt.ml[83,2817+24]..[83,2817+27])
                          <arg>
                          Nolabel
                            expression (typing/typeopt.ml[83,2817+28]..[83,2817+30])
                              Pexp_ident "ty" (typing/typeopt.ml[83,2817+28]..[83,2817+30])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/typeopt.ml[83,2817+33]..[83,2817+42])
                        Pexp_construct "Immediate" (typing/typeopt.ml[83,2817+33]..[83,2817+42])
                        None
                  ]
                expression (typing/typeopt.ml[83,2817+48]..[83,2817+51])
                  Pexp_construct "Int" (typing/typeopt.ml[83,2817+48]..[83,2817+51])
                  None
                Some
                  expression (typing/typeopt.ml[84,2869+7]..[112,3905+18])
                    Pexp_match
                    expression (typing/typeopt.ml[84,2869+13]..[84,2869+24])
                      Pexp_apply
                      expression (typing/typeopt.ml[84,2869+13]..[84,2869+21])
                        Pexp_ident "get_desc" (typing/typeopt.ml[84,2869+13]..[84,2869+21])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typeopt.ml[84,2869+22]..[84,2869+24])
                            Pexp_ident "ty" (typing/typeopt.ml[84,2869+22]..[84,2869+24])
                      ]
                    [
                      <case>
                        pattern (typing/typeopt.ml[85,2899+4]..[85,2899+22])
                          Ppat_or
                          pattern (typing/typeopt.ml[85,2899+4]..[85,2899+10])
                            Ppat_construct "Tvar" (typing/typeopt.ml[85,2899+4]..[85,2899+8])
                            Some
                              []
                              pattern (typing/typeopt.ml[85,2899+9]..[85,2899+10])
                                Ppat_any
                          pattern (typing/typeopt.ml[85,2899+13]..[85,2899+22])
                            Ppat_construct "Tunivar" (typing/typeopt.ml[85,2899+13]..[85,2899+20])
                            Some
                              []
                              pattern (typing/typeopt.ml[85,2899+21]..[85,2899+22])
                                Ppat_any
                        expression (typing/typeopt.ml[86,2925+6]..[86,2925+9])
                          Pexp_construct "Any" (typing/typeopt.ml[86,2925+6]..[86,2925+9])
                          None
                      <case>
                        pattern (typing/typeopt.ml[87,2935+4]..[87,2935+31])
                          Ppat_construct "Tconstr" (typing/typeopt.ml[87,2935+4]..[87,2935+11])
                          Some
                            []
                            pattern (typing/typeopt.ml[87,2935+12]..[87,2935+31])
                              Ppat_tuple
                              [
                                pattern (typing/typeopt.ml[87,2935+13]..[87,2935+14])
                                  Ppat_var "p" (typing/typeopt.ml[87,2935+13]..[87,2935+14])
                                pattern (typing/typeopt.ml[87,2935+16]..[87,2935+21])
                                  Ppat_var "_args" (typing/typeopt.ml[87,2935+16]..[87,2935+21])
                                pattern (typing/typeopt.ml[87,2935+23]..[87,2935+30])
                                  Ppat_var "_abbrev" (typing/typeopt.ml[87,2935+23]..[87,2935+30])
                              ]
                        expression (typing/typeopt.ml[88,2970+6]..[108,3765+9])
                          Pexp_ifthenelse
                          expression (typing/typeopt.ml[88,2970+9]..[88,2970+38])
                            Pexp_apply
                            expression (typing/typeopt.ml[88,2970+9]..[88,2970+18])
                              Pexp_ident "Path.same" (typing/typeopt.ml[88,2970+9]..[88,2970+18])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typeopt.ml[88,2970+19]..[88,2970+20])
                                  Pexp_ident "p" (typing/typeopt.ml[88,2970+19]..[88,2970+20])
                              <arg>
                              Nolabel
                                expression (typing/typeopt.ml[88,2970+21]..[88,2970+38])
                                  Pexp_ident "Predef.path_float" (typing/typeopt.ml[88,2970+21]..[88,2970+38])
                            ]
                          expression (typing/typeopt.ml[88,2970+44]..[88,2970+49])
                            Pexp_construct "Float" (typing/typeopt.ml[88,2970+44]..[88,2970+49])
                            None
                          Some
                            expression (typing/typeopt.ml[89,3020+11]..[108,3765+9])
                              Pexp_ifthenelse
                              expression (typing/typeopt.ml[89,3020+14]..[89,3020+44])
                                Pexp_apply
                                expression (typing/typeopt.ml[89,3020+14]..[89,3020+23])
                                  Pexp_ident "Path.same" (typing/typeopt.ml[89,3020+14]..[89,3020+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typeopt.ml[89,3020+24]..[89,3020+25])
                                      Pexp_ident "p" (typing/typeopt.ml[89,3020+24]..[89,3020+25])
                                  <arg>
                                  Nolabel
                                    expression (typing/typeopt.ml[89,3020+26]..[89,3020+44])
                                      Pexp_ident "Predef.path_lazy_t" (typing/typeopt.ml[89,3020+26]..[89,3020+44])
                                ]
                              expression (typing/typeopt.ml[89,3020+50]..[89,3020+54])
                                Pexp_construct "Lazy" (typing/typeopt.ml[89,3020+50]..[89,3020+54])
                                None
                              Some
                                expression (typing/typeopt.ml[90,3075+11]..[108,3765+9])
                                  Pexp_ifthenelse
                                  expression (typing/typeopt.ml[90,3075+14]..[95,3300+43])
                                    Pexp_apply
                                    expression (typing/typeopt.ml[91,3120+11]..[91,3120+13])
                                      Pexp_ident "||" (typing/typeopt.ml[91,3120+11]..[91,3120+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typeopt.ml[90,3075+14]..[90,3075+44])
                                          Pexp_apply
                                          expression (typing/typeopt.ml[90,3075+14]..[90,3075+23])
                                            Pexp_ident "Path.same" (typing/typeopt.ml[90,3075+14]..[90,3075+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typeopt.ml[90,3075+24]..[90,3075+25])
                                                Pexp_ident "p" (typing/typeopt.ml[90,3075+24]..[90,3075+25])
                                            <arg>
                                            Nolabel
                                              expression (typing/typeopt.ml[90,3075+26]..[90,3075+44])
                                                Pexp_ident "Predef.path_string" (typing/typeopt.ml[90,3075+26]..[90,3075+44])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typeopt.ml[91,3120+14]..[95,3300+43])
                                          Pexp_apply
                                          expression (typing/typeopt.ml[92,3164+11]..[92,3164+13])
                                            Pexp_ident "||" (typing/typeopt.ml[92,3164+11]..[92,3164+13])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typeopt.ml[91,3120+14]..[91,3120+43])
                                                Pexp_apply
                                                expression (typing/typeopt.ml[91,3120+14]..[91,3120+23])
                                                  Pexp_ident "Path.same" (typing/typeopt.ml[91,3120+14]..[91,3120+23])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typeopt.ml[91,3120+24]..[91,3120+25])
                                                      Pexp_ident "p" (typing/typeopt.ml[91,3120+24]..[91,3120+25])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typeopt.ml[91,3120+26]..[91,3120+43])
                                                      Pexp_ident "Predef.path_bytes" (typing/typeopt.ml[91,3120+26]..[91,3120+43])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typeopt.ml[92,3164+14]..[95,3300+43])
                                                Pexp_apply
                                                expression (typing/typeopt.ml[93,3208+11]..[93,3208+13])
                                                  Pexp_ident "||" (typing/typeopt.ml[93,3208+11]..[93,3208+13])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typeopt.ml[92,3164+14]..[92,3164+43])
                                                      Pexp_apply
                                                      expression (typing/typeopt.ml[92,3164+14]..[92,3164+23])
                                                        Pexp_ident "Path.same" (typing/typeopt.ml[92,3164+14]..[92,3164+23])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typeopt.ml[92,3164+24]..[92,3164+25])
                                                            Pexp_ident "p" (typing/typeopt.ml[92,3164+24]..[92,3164+25])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typeopt.ml[92,3164+26]..[92,3164+43])
                                                            Pexp_ident "Predef.path_array" (typing/typeopt.ml[92,3164+26]..[92,3164+43])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typeopt.ml[93,3208+14]..[95,3300+43])
                                                      Pexp_apply
                                                      expression (typing/typeopt.ml[94,3256+11]..[94,3256+13])
                                                        Pexp_ident "||" (typing/typeopt.ml[94,3256+11]..[94,3256+13])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typeopt.ml[93,3208+14]..[93,3208+47])
                                                            Pexp_apply
                                                            expression (typing/typeopt.ml[93,3208+14]..[93,3208+23])
                                                              Pexp_ident "Path.same" (typing/typeopt.ml[93,3208+14]..[93,3208+23])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typeopt.ml[93,3208+24]..[93,3208+25])
                                                                  Pexp_ident "p" (typing/typeopt.ml[93,3208+24]..[93,3208+25])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typeopt.ml[93,3208+26]..[93,3208+47])
                                                                  Pexp_ident "Predef.path_nativeint" (typing/typeopt.ml[93,3208+26]..[93,3208+47])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typeopt.ml[94,3256+14]..[95,3300+43])
                                                            Pexp_apply
                                                            expression (typing/typeopt.ml[95,3300+11]..[95,3300+13])
                                                              Pexp_ident "||" (typing/typeopt.ml[95,3300+11]..[95,3300+13])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typeopt.ml[94,3256+14]..[94,3256+43])
                                                                  Pexp_apply
                                                                  expression (typing/typeopt.ml[94,3256+14]..[94,3256+23])
                                                                    Pexp_ident "Path.same" (typing/typeopt.ml[94,3256+14]..[94,3256+23])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typeopt.ml[94,3256+24]..[94,3256+25])
Pexp_ident "p" (typing/typeopt.ml[94,3256+24]..[94,3256+25])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typeopt.ml[94,3256+26]..[94,3256+43])
Pexp_ident "Predef.path_int32" (typing/typeopt.ml[94,3256+26]..[94,3256+43])
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typeopt.ml[95,3300+14]..[95,3300+43])
                                                                  Pexp_apply
                                                                  expression (typing/typeopt.ml[95,3300+14]..[95,3300+23])
                                                                    Pexp_ident "Path.same" (typing/typeopt.ml[95,3300+14]..[95,3300+23])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typeopt.ml[95,3300+24]..[95,3300+25])
Pexp_ident "p" (typing/typeopt.ml[95,3300+24]..[95,3300+25])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typeopt.ml[95,3300+26]..[95,3300+43])
Pexp_ident "Predef.path_int64" (typing/typeopt.ml[95,3300+26]..[95,3300+43])
                                                                  ]
                                                            ]
                                                      ]
                                                ]
                                          ]
                                    ]
                                  expression (typing/typeopt.ml[95,3300+49]..[95,3300+53])
                                    Pexp_construct "Addr" (typing/typeopt.ml[95,3300+49]..[95,3300+53])
                                    None
                                  Some
                                    expression (typing/typeopt.ml[96,3354+11]..[108,3765+9])
                                      Pexp_try
                                      expression (typing/typeopt.ml[98,3383+10]..[102,3541+18])
                                        Pexp_match
                                        expression (typing/typeopt.ml[98,3383+16]..[98,3383+47])
                                          Pexp_field
                                          expression (typing/typeopt.ml[98,3383+16]..[98,3383+37])
                                            Pexp_apply
                                            expression (typing/typeopt.ml[98,3383+17]..[98,3383+30])
                                              Pexp_ident "Env.find_type" (typing/typeopt.ml[98,3383+17]..[98,3383+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typeopt.ml[98,3383+31]..[98,3383+32])
                                                  Pexp_ident "p" (typing/typeopt.ml[98,3383+31]..[98,3383+32])
                                              <arg>
                                              Nolabel
                                                expression (typing/typeopt.ml[98,3383+33]..[98,3383+36])
                                                  Pexp_ident "env" (typing/typeopt.ml[98,3383+33]..[98,3383+36])
                                            ]
                                          "type_kind" (typing/typeopt.ml[98,3383+38]..[98,3383+47])
                                        [
                                          <case>
                                            pattern (typing/typeopt.ml[99,3436+12]..[99,3436+25])
                                              Ppat_construct "Type_abstract" (typing/typeopt.ml[99,3436+12]..[99,3436+25])
                                              None
                                            expression (typing/typeopt.ml[100,3465+14]..[100,3465+17])
                                              Pexp_construct "Any" (typing/typeopt.ml[100,3465+14]..[100,3465+17])
                                              None
                                          <case>
                                            pattern (typing/typeopt.ml[101,3483+12]..[101,3483+54])
                                              Ppat_or
                                              pattern (typing/typeopt.ml[101,3483+12]..[101,3483+42])
                                                Ppat_or
                                                pattern (typing/typeopt.ml[101,3483+12]..[101,3483+25])
                                                  Ppat_construct "Type_record" (typing/typeopt.ml[101,3483+12]..[101,3483+23])
                                                  Some
                                                    []
                                                    pattern (typing/typeopt.ml[101,3483+24]..[101,3483+25])
                                                      Ppat_any
                                                pattern (typing/typeopt.ml[101,3483+28]..[101,3483+42])
                                                  Ppat_construct "Type_variant" (typing/typeopt.ml[101,3483+28]..[101,3483+40])
                                                  Some
                                                    []
                                                    pattern (typing/typeopt.ml[101,3483+41]..[101,3483+42])
                                                      Ppat_any
                                              pattern (typing/typeopt.ml[101,3483+45]..[101,3483+54])
                                                Ppat_construct "Type_open" (typing/typeopt.ml[101,3483+45]..[101,3483+54])
                                                None
                                            expression (typing/typeopt.ml[102,3541+14]..[102,3541+18])
                                              Pexp_construct "Addr" (typing/typeopt.ml[102,3541+14]..[102,3541+18])
                                              None
                                        ]
                                      [
                                        <case>
                                          pattern (typing/typeopt.ml[103,3560+13]..[103,3560+22])
                                            Ppat_construct "Not_found" (typing/typeopt.ml[103,3560+13]..[103,3560+22])
                                            None
                                          expression (typing/typeopt.ml[107,3751+10]..[107,3751+13])
                                            Pexp_construct "Any" (typing/typeopt.ml[107,3751+10]..[107,3751+13])
                                            None
                                      ]
                      <case>
                        pattern (typing/typeopt.ml[109,3775+4]..[109,3775+68])
                          Ppat_or
                          pattern (typing/typeopt.ml[109,3775+4]..[109,3775+55])
                            Ppat_or
                            pattern (typing/typeopt.ml[109,3775+4]..[109,3775+48])
                              Ppat_or
                              pattern (typing/typeopt.ml[109,3775+4]..[109,3775+36])
                                Ppat_or
                                pattern (typing/typeopt.ml[109,3775+4]..[109,3775+23])
                                  Ppat_or
                                  pattern (typing/typeopt.ml[109,3775+4]..[109,3775+12])
                                    Ppat_construct "Tarrow" (typing/typeopt.ml[109,3775+4]..[109,3775+10])
                                    Some
                                      []
                                      pattern (typing/typeopt.ml[109,3775+11]..[109,3775+12])
                                        Ppat_any
                                  pattern (typing/typeopt.ml[109,3775+15]..[109,3775+23])
                                    Ppat_construct "Ttuple" (typing/typeopt.ml[109,3775+15]..[109,3775+21])
                                    Some
                                      []
                                      pattern (typing/typeopt.ml[109,3775+22]..[109,3775+23])
                                        Ppat_any
                                pattern (typing/typeopt.ml[109,3775+26]..[109,3775+36])
                                  Ppat_construct "Tpackage" (typing/typeopt.ml[109,3775+26]..[109,3775+34])
                                  Some
                                    []
                                    pattern (typing/typeopt.ml[109,3775+35]..[109,3775+36])
                                      Ppat_any
                              pattern (typing/typeopt.ml[109,3775+39]..[109,3775+48])
                                Ppat_construct "Tobject" (typing/typeopt.ml[109,3775+39]..[109,3775+46])
                                Some
                                  []
                                  pattern (typing/typeopt.ml[109,3775+47]..[109,3775+48])
                                    Ppat_any
                            pattern (typing/typeopt.ml[109,3775+51]..[109,3775+55])
                              Ppat_construct "Tnil" (typing/typeopt.ml[109,3775+51]..[109,3775+55])
                              None
                          pattern (typing/typeopt.ml[109,3775+58]..[109,3775+68])
                            Ppat_construct "Tvariant" (typing/typeopt.ml[109,3775+58]..[109,3775+66])
                            Some
                              []
                              pattern (typing/typeopt.ml[109,3775+67]..[109,3775+68])
                                Ppat_any
                        expression (typing/typeopt.ml[110,3847+6]..[110,3847+10])
                          Pexp_construct "Addr" (typing/typeopt.ml[110,3847+6]..[110,3847+10])
                          None
                      <case>
                        pattern (typing/typeopt.ml[111,3858+4]..[111,3858+43])
                          Ppat_or
                          pattern (typing/typeopt.ml[111,3858+4]..[111,3858+32])
                            Ppat_or
                            pattern (typing/typeopt.ml[111,3858+4]..[111,3858+22])
                              Ppat_or
                              pattern (typing/typeopt.ml[111,3858+4]..[111,3858+11])
                                Ppat_construct "Tlink" (typing/typeopt.ml[111,3858+4]..[111,3858+9])
                                Some
                                  []
                                  pattern (typing/typeopt.ml[111,3858+10]..[111,3858+11])
                                    Ppat_any
                              pattern (typing/typeopt.ml[111,3858+14]..[111,3858+22])
                                Ppat_construct "Tsubst" (typing/typeopt.ml[111,3858+14]..[111,3858+20])
                                Some
                                  []
                                  pattern (typing/typeopt.ml[111,3858+21]..[111,3858+22])
                                    Ppat_any
                            pattern (typing/typeopt.ml[111,3858+25]..[111,3858+32])
                              Ppat_construct "Tpoly" (typing/typeopt.ml[111,3858+25]..[111,3858+30])
                              Some
                                []
                                pattern (typing/typeopt.ml[111,3858+31]..[111,3858+32])
                                  Ppat_any
                          pattern (typing/typeopt.ml[111,3858+35]..[111,3858+43])
                            Ppat_construct "Tfield" (typing/typeopt.ml[111,3858+35]..[111,3858+41])
                            Some
                              []
                              pattern (typing/typeopt.ml[111,3858+42]..[111,3858+43])
                                Ppat_any
                        expression (typing/typeopt.ml[112,3905+6]..[112,3905+18])
                          Pexp_assert
                          expression (typing/typeopt.ml[112,3905+13]..[112,3905+18])
                            Pexp_construct "false" (typing/typeopt.ml[112,3905+13]..[112,3905+18])
                            None
                    ]
    ]
  structure_item (typing/typeopt.ml[114,3925+0]..[127,4454+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[114,3925+4]..[114,3925+19])
          Ppat_var "array_type_kind" (typing/typeopt.ml[114,3925+4]..[114,3925+19])
        expression (typing/typeopt.ml[114,3925+20]..[127,4454+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[114,3925+20]..[114,3925+23])
            Ppat_var "env" (typing/typeopt.ml[114,3925+20]..[114,3925+23])
          expression (typing/typeopt.ml[114,3925+24]..[127,4454+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typeopt.ml[114,3925+24]..[114,3925+26])
              Ppat_var "ty" (typing/typeopt.ml[114,3925+24]..[114,3925+26])
            expression (typing/typeopt.ml[115,3954+2]..[127,4454+15])
              Pexp_match
              expression (typing/typeopt.ml[115,3954+8]..[115,3954+26])
                Pexp_apply
                expression (typing/typeopt.ml[115,3954+8]..[115,3954+19])
                  Pexp_ident "scrape_poly" (typing/typeopt.ml[115,3954+8]..[115,3954+19])
                [
                  <arg>
                  Nolabel
                    expression (typing/typeopt.ml[115,3954+20]..[115,3954+23])
                      Pexp_ident "env" (typing/typeopt.ml[115,3954+20]..[115,3954+23])
                  <arg>
                  Nolabel
                    expression (typing/typeopt.ml[115,3954+24]..[115,3954+26])
                      Pexp_ident "ty" (typing/typeopt.ml[115,3954+24]..[115,3954+26])
                ]
              [
                <case>
                  pattern (typing/typeopt.ml[116,3986+4]..[116,3986+27])
                    Ppat_construct "Tconstr" (typing/typeopt.ml[116,3986+4]..[116,3986+11])
                    Some
                      []
                      pattern (typing/typeopt.ml[116,3986+11]..[116,3986+27])
                        Ppat_tuple
                        [
                          pattern (typing/typeopt.ml[116,3986+12]..[116,3986+13])
                            Ppat_var "p" (typing/typeopt.ml[116,3986+12]..[116,3986+13])
                          pattern (typing/typeopt.ml[116,3986+15]..[116,3986+23])
                            Ppat_construct "::" (typing/typeopt.ml[116,3986+16]..[116,3986+23]) ghost
                            Some
                              []
                              pattern (typing/typeopt.ml[116,3986+16]..[116,3986+23]) ghost
                                Ppat_tuple
                                [
                                  pattern (typing/typeopt.ml[116,3986+16]..[116,3986+22])
                                    Ppat_var "elt_ty" (typing/typeopt.ml[116,3986+16]..[116,3986+22])
                                  pattern (typing/typeopt.ml[116,3986+22]..[116,3986+23]) ghost
                                    Ppat_construct "[]" (typing/typeopt.ml[116,3986+22]..[116,3986+23]) ghost
                                    None
                                ]
                          pattern (typing/typeopt.ml[116,3986+25]..[116,3986+26])
                            Ppat_any
                        ]
                  <when>
                    expression (typing/typeopt.ml[116,3986+33]..[116,3986+62])
                      Pexp_apply
                      expression (typing/typeopt.ml[116,3986+33]..[116,3986+42])
                        Pexp_ident "Path.same" (typing/typeopt.ml[116,3986+33]..[116,3986+42])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typeopt.ml[116,3986+43]..[116,3986+44])
                            Pexp_ident "p" (typing/typeopt.ml[116,3986+43]..[116,3986+44])
                        <arg>
                        Nolabel
                          expression (typing/typeopt.ml[116,3986+45]..[116,3986+62])
                            Pexp_ident "Predef.path_array" (typing/typeopt.ml[116,3986+45]..[116,3986+62])
                      ]
                  expression (typing/typeopt.ml[117,4052+6]..[122,4304+9])
                    Pexp_match
                    expression (typing/typeopt.ml[117,4052+18]..[117,4052+37])
                      Pexp_apply
                      expression (typing/typeopt.ml[117,4052+18]..[117,4052+26])
                        Pexp_ident "classify" (typing/typeopt.ml[117,4052+18]..[117,4052+26])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typeopt.ml[117,4052+27]..[117,4052+30])
                            Pexp_ident "env" (typing/typeopt.ml[117,4052+27]..[117,4052+30])
                        <arg>
                        Nolabel
                          expression (typing/typeopt.ml[117,4052+31]..[117,4052+37])
                            Pexp_ident "elt_ty" (typing/typeopt.ml[117,4052+31]..[117,4052+37])
                      ]
                    [
                      <case>
                        pattern (typing/typeopt.ml[118,4095+8]..[118,4095+11])
                          Ppat_construct "Any" (typing/typeopt.ml[118,4095+8]..[118,4095+11])
                          None
                        expression (typing/typeopt.ml[118,4095+15]..[118,4095+72])
                          Pexp_ifthenelse
                          expression (typing/typeopt.ml[118,4095+18]..[118,4095+41])
                            Pexp_ident "Config.flat_float_array" (typing/typeopt.ml[118,4095+18]..[118,4095+41])
                          expression (typing/typeopt.ml[118,4095+47]..[118,4095+56])
                            Pexp_construct "Pgenarray" (typing/typeopt.ml[118,4095+47]..[118,4095+56])
                            None
                          Some
                            expression (typing/typeopt.ml[118,4095+62]..[118,4095+72])
                              Pexp_construct "Paddrarray" (typing/typeopt.ml[118,4095+62]..[118,4095+72])
                              None
                      <case>
                        pattern (typing/typeopt.ml[119,4168+8]..[119,4168+13])
                          Ppat_construct "Float" (typing/typeopt.ml[119,4168+8]..[119,4168+13])
                          None
                        expression (typing/typeopt.ml[119,4168+17]..[119,4168+76])
                          Pexp_ifthenelse
                          expression (typing/typeopt.ml[119,4168+20]..[119,4168+43])
                            Pexp_ident "Config.flat_float_array" (typing/typeopt.ml[119,4168+20]..[119,4168+43])
                          expression (typing/typeopt.ml[119,4168+49]..[119,4168+60])
                            Pexp_construct "Pfloatarray" (typing/typeopt.ml[119,4168+49]..[119,4168+60])
                            None
                          Some
                            expression (typing/typeopt.ml[119,4168+66]..[119,4168+76])
                              Pexp_construct "Paddrarray" (typing/typeopt.ml[119,4168+66]..[119,4168+76])
                              None
                      <case>
                        pattern (typing/typeopt.ml[120,4245+8]..[120,4245+19])
                          Ppat_or
                          pattern (typing/typeopt.ml[120,4245+8]..[120,4245+12])
                            Ppat_construct "Addr" (typing/typeopt.ml[120,4245+8]..[120,4245+12])
                            None
                          pattern (typing/typeopt.ml[120,4245+15]..[120,4245+19])
                            Ppat_construct "Lazy" (typing/typeopt.ml[120,4245+15]..[120,4245+19])
                            None
                        expression (typing/typeopt.ml[120,4245+23]..[120,4245+33])
                          Pexp_construct "Paddrarray" (typing/typeopt.ml[120,4245+23]..[120,4245+33])
                          None
                      <case>
                        pattern (typing/typeopt.ml[121,4279+8]..[121,4279+11])
                          Ppat_construct "Int" (typing/typeopt.ml[121,4279+8]..[121,4279+11])
                          None
                        expression (typing/typeopt.ml[121,4279+15]..[121,4279+24])
                          Pexp_construct "Pintarray" (typing/typeopt.ml[121,4279+15]..[121,4279+24])
                          None
                    ]
                <case>
                  pattern (typing/typeopt.ml[123,4314+4]..[123,4314+21])
                    Ppat_construct "Tconstr" (typing/typeopt.ml[123,4314+4]..[123,4314+11])
                    Some
                      []
                      pattern (typing/typeopt.ml[123,4314+11]..[123,4314+21])
                        Ppat_tuple
                        [
                          pattern (typing/typeopt.ml[123,4314+12]..[123,4314+13])
                            Ppat_var "p" (typing/typeopt.ml[123,4314+12]..[123,4314+13])
                          pattern (typing/typeopt.ml[123,4314+15]..[123,4314+17])
                            Ppat_construct "[]" (typing/typeopt.ml[123,4314+15]..[123,4314+17])
                            None
                          pattern (typing/typeopt.ml[123,4314+19]..[123,4314+20])
                            Ppat_any
                        ]
                  <when>
                    expression (typing/typeopt.ml[123,4314+27]..[123,4314+61])
                      Pexp_apply
                      expression (typing/typeopt.ml[123,4314+27]..[123,4314+36])
                        Pexp_ident "Path.same" (typing/typeopt.ml[123,4314+27]..[123,4314+36])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typeopt.ml[123,4314+37]..[123,4314+38])
                            Pexp_ident "p" (typing/typeopt.ml[123,4314+37]..[123,4314+38])
                        <arg>
                        Nolabel
                          expression (typing/typeopt.ml[123,4314+39]..[123,4314+61])
                            Pexp_ident "Predef.path_floatarray" (typing/typeopt.ml[123,4314+39]..[123,4314+61])
                      ]
                  expression (typing/typeopt.ml[124,4379+6]..[124,4379+17])
                    Pexp_construct "Pfloatarray" (typing/typeopt.ml[124,4379+6]..[124,4379+17])
                    None
                <case>
                  pattern (typing/typeopt.ml[125,4397+4]..[125,4397+5])
                    Ppat_any
                  expression (typing/typeopt.ml[127,4454+6]..[127,4454+15])
                    Pexp_construct "Pgenarray" (typing/typeopt.ml[127,4454+6]..[127,4454+15])
                    None
              ]
    ]
  structure_item (typing/typeopt.ml[129,4471+0]..[129,4471+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[129,4471+4]..[129,4471+14])
          Ppat_var "array_kind" (typing/typeopt.ml[129,4471+4]..[129,4471+14])
        expression (typing/typeopt.ml[129,4471+15]..[129,4471+61]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[129,4471+15]..[129,4471+18])
            Ppat_var "exp" (typing/typeopt.ml[129,4471+15]..[129,4471+18])
          expression (typing/typeopt.ml[129,4471+21]..[129,4471+61])
            Pexp_apply
            expression (typing/typeopt.ml[129,4471+21]..[129,4471+36])
              Pexp_ident "array_type_kind" (typing/typeopt.ml[129,4471+21]..[129,4471+36])
            [
              <arg>
              Nolabel
                expression (typing/typeopt.ml[129,4471+37]..[129,4471+48])
                  Pexp_field
                  expression (typing/typeopt.ml[129,4471+37]..[129,4471+40])
                    Pexp_ident "exp" (typing/typeopt.ml[129,4471+37]..[129,4471+40])
                  "exp_env" (typing/typeopt.ml[129,4471+41]..[129,4471+48])
              <arg>
              Nolabel
                expression (typing/typeopt.ml[129,4471+49]..[129,4471+61])
                  Pexp_field
                  expression (typing/typeopt.ml[129,4471+49]..[129,4471+52])
                    Pexp_ident "exp" (typing/typeopt.ml[129,4471+49]..[129,4471+52])
                  "exp_type" (typing/typeopt.ml[129,4471+53]..[129,4471+61])
            ]
    ]
  structure_item (typing/typeopt.ml[131,4534+0]..[131,4534+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[131,4534+4]..[131,4534+22])
          Ppat_var "array_pattern_kind" (typing/typeopt.ml[131,4534+4]..[131,4534+22])
        expression (typing/typeopt.ml[131,4534+23]..[131,4534+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[131,4534+23]..[131,4534+26])
            Ppat_var "pat" (typing/typeopt.ml[131,4534+23]..[131,4534+26])
          expression (typing/typeopt.ml[131,4534+29]..[131,4534+69])
            Pexp_apply
            expression (typing/typeopt.ml[131,4534+29]..[131,4534+44])
              Pexp_ident "array_type_kind" (typing/typeopt.ml[131,4534+29]..[131,4534+44])
            [
              <arg>
              Nolabel
                expression (typing/typeopt.ml[131,4534+45]..[131,4534+56])
                  Pexp_field
                  expression (typing/typeopt.ml[131,4534+45]..[131,4534+48])
                    Pexp_ident "pat" (typing/typeopt.ml[131,4534+45]..[131,4534+48])
                  "pat_env" (typing/typeopt.ml[131,4534+49]..[131,4534+56])
              <arg>
              Nolabel
                expression (typing/typeopt.ml[131,4534+57]..[131,4534+69])
                  Pexp_field
                  expression (typing/typeopt.ml[131,4534+57]..[131,4534+60])
                    Pexp_ident "pat" (typing/typeopt.ml[131,4534+57]..[131,4534+60])
                  "pat_type" (typing/typeopt.ml[131,4534+61]..[131,4534+69])
            ]
    ]
  structure_item (typing/typeopt.ml[133,4605+0]..[139,4852+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[133,4605+4]..[133,4605+24])
          Ppat_var "bigarray_decode_type" (typing/typeopt.ml[133,4605+4]..[133,4605+24])
        expression (typing/typeopt.ml[133,4605+25]..[139,4852+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[133,4605+25]..[133,4605+28])
            Ppat_var "env" (typing/typeopt.ml[133,4605+25]..[133,4605+28])
          expression (typing/typeopt.ml[133,4605+29]..[139,4852+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typeopt.ml[133,4605+29]..[133,4605+31])
              Ppat_var "ty" (typing/typeopt.ml[133,4605+29]..[133,4605+31])
            expression (typing/typeopt.ml[133,4605+32]..[139,4852+9]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typeopt.ml[133,4605+32]..[133,4605+35])
                Ppat_var "tbl" (typing/typeopt.ml[133,4605+32]..[133,4605+35])
              expression (typing/typeopt.ml[133,4605+36]..[139,4852+9]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typeopt.ml[133,4605+36]..[133,4605+39])
                  Ppat_var "dfl" (typing/typeopt.ml[133,4605+36]..[133,4605+39])
                expression (typing/typeopt.ml[134,4647+2]..[139,4852+9])
                  Pexp_match
                  expression (typing/typeopt.ml[134,4647+8]..[134,4647+21])
                    Pexp_apply
                    expression (typing/typeopt.ml[134,4647+8]..[134,4647+14])
                      Pexp_ident "scrape" (typing/typeopt.ml[134,4647+8]..[134,4647+14])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typeopt.ml[134,4647+15]..[134,4647+18])
                          Pexp_ident "env" (typing/typeopt.ml[134,4647+15]..[134,4647+18])
                      <arg>
                      Nolabel
                        expression (typing/typeopt.ml[134,4647+19]..[134,4647+21])
                          Pexp_ident "ty" (typing/typeopt.ml[134,4647+19]..[134,4647+21])
                    ]
                  [
                    <case>
                      pattern (typing/typeopt.ml[135,4674+4]..[135,4674+50])
                        Ppat_construct "Tconstr" (typing/typeopt.ml[135,4674+4]..[135,4674+11])
                        Some
                          []
                          pattern (typing/typeopt.ml[135,4674+11]..[135,4674+50])
                            Ppat_tuple
                            [
                              pattern (typing/typeopt.ml[135,4674+12]..[135,4674+42])
                                Ppat_construct "Pdot" (typing/typeopt.ml[135,4674+12]..[135,4674+16])
                                Some
                                  []
                                  pattern (typing/typeopt.ml[135,4674+16]..[135,4674+42])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typeopt.ml[135,4674+17]..[135,4674+30])
                                        Ppat_construct "Pident" (typing/typeopt.ml[135,4674+17]..[135,4674+23])
                                        Some
                                          []
                                          pattern (typing/typeopt.ml[135,4674+24]..[135,4674+30])
                                            Ppat_var "mod_id" (typing/typeopt.ml[135,4674+24]..[135,4674+30])
                                      pattern (typing/typeopt.ml[135,4674+32]..[135,4674+41])
                                        Ppat_var "type_name" (typing/typeopt.ml[135,4674+32]..[135,4674+41])
                                    ]
                              pattern (typing/typeopt.ml[135,4674+44]..[135,4674+46])
                                Ppat_construct "[]" (typing/typeopt.ml[135,4674+44]..[135,4674+46])
                                None
                              pattern (typing/typeopt.ml[135,4674+48]..[135,4674+49])
                                Ppat_any
                            ]
                      <when>
                        expression (typing/typeopt.ml[136,4725+9]..[136,4725+47])
                          Pexp_apply
                          expression (typing/typeopt.ml[136,4725+27]..[136,4725+28])
                            Pexp_ident "=" (typing/typeopt.ml[136,4725+27]..[136,4725+28])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typeopt.ml[136,4725+9]..[136,4725+26])
                                Pexp_apply
                                expression (typing/typeopt.ml[136,4725+9]..[136,4725+19])
                                  Pexp_ident "Ident.name" (typing/typeopt.ml[136,4725+9]..[136,4725+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typeopt.ml[136,4725+20]..[136,4725+26])
                                      Pexp_ident "mod_id" (typing/typeopt.ml[136,4725+20]..[136,4725+26])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/typeopt.ml[136,4725+29]..[136,4725+47])
                                Pexp_constant PConst_string("Stdlib__Bigarray",(typing/typeopt.ml[136,4725+30]..[136,4725+46]),None)
                          ]
                      expression (typing/typeopt.ml[137,4776+6]..[137,4776+66])
                        Pexp_try
                        expression (typing/typeopt.ml[137,4776+16]..[137,4776+40])
                          Pexp_apply
                          expression (typing/typeopt.ml[137,4776+16]..[137,4776+26])
                            Pexp_ident "List.assoc" (typing/typeopt.ml[137,4776+16]..[137,4776+26])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typeopt.ml[137,4776+27]..[137,4776+36])
                                Pexp_ident "type_name" (typing/typeopt.ml[137,4776+27]..[137,4776+36])
                            <arg>
                            Nolabel
                              expression (typing/typeopt.ml[137,4776+37]..[137,4776+40])
                                Pexp_ident "tbl" (typing/typeopt.ml[137,4776+37]..[137,4776+40])
                          ]
                        [
                          <case>
                            pattern (typing/typeopt.ml[137,4776+46]..[137,4776+55])
                              Ppat_construct "Not_found" (typing/typeopt.ml[137,4776+46]..[137,4776+55])
                              None
                            expression (typing/typeopt.ml[137,4776+59]..[137,4776+62])
                              Pexp_ident "dfl" (typing/typeopt.ml[137,4776+59]..[137,4776+62])
                        ]
                    <case>
                      pattern (typing/typeopt.ml[138,4843+4]..[138,4843+5])
                        Ppat_any
                      expression (typing/typeopt.ml[139,4852+6]..[139,4852+9])
                        Pexp_ident "dfl" (typing/typeopt.ml[139,4852+6]..[139,4852+9])
                  ]
    ]
  structure_item (typing/typeopt.ml[141,4863+0]..[153,5301+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[141,4863+4]..[141,4863+14])
          Ppat_var "kind_table" (typing/typeopt.ml[141,4863+4]..[141,4863+14])
        expression (typing/typeopt.ml[142,4880+2]..[153,5301+40])
          Pexp_construct "::" (typing/typeopt.ml[142,4880+3]..[153,5301+40]) ghost
          Some
            expression (typing/typeopt.ml[142,4880+3]..[153,5301+40]) ghost
              Pexp_tuple
              [
                expression (typing/typeopt.ml[142,4880+3]..[142,4880+35])
                  Pexp_tuple
                  [
                    expression (typing/typeopt.ml[142,4880+3]..[142,4880+16])
                      Pexp_constant PConst_string("float32_elt",(typing/typeopt.ml[142,4880+4]..[142,4880+15]),None)
                    expression (typing/typeopt.ml[142,4880+18]..[142,4880+35])
                      Pexp_construct "Pbigarray_float32" (typing/typeopt.ml[142,4880+18]..[142,4880+35])
                      None
                  ]
                expression (typing/typeopt.ml[143,4917+3]..[153,5301+40]) ghost
                  Pexp_construct "::" (typing/typeopt.ml[143,4917+3]..[153,5301+40]) ghost
                  Some
                    expression (typing/typeopt.ml[143,4917+3]..[153,5301+40]) ghost
                      Pexp_tuple
                      [
                        expression (typing/typeopt.ml[143,4917+3]..[143,4917+35])
                          Pexp_tuple
                          [
                            expression (typing/typeopt.ml[143,4917+3]..[143,4917+16])
                              Pexp_constant PConst_string("float64_elt",(typing/typeopt.ml[143,4917+4]..[143,4917+15]),None)
                            expression (typing/typeopt.ml[143,4917+18]..[143,4917+35])
                              Pexp_construct "Pbigarray_float64" (typing/typeopt.ml[143,4917+18]..[143,4917+35])
                              None
                          ]
                        expression (typing/typeopt.ml[144,4954+3]..[153,5301+40]) ghost
                          Pexp_construct "::" (typing/typeopt.ml[144,4954+3]..[153,5301+40]) ghost
                          Some
                            expression (typing/typeopt.ml[144,4954+3]..[153,5301+40]) ghost
                              Pexp_tuple
                              [
                                expression (typing/typeopt.ml[144,4954+3]..[144,4954+37])
                                  Pexp_tuple
                                  [
                                    expression (typing/typeopt.ml[144,4954+3]..[144,4954+20])
                                      Pexp_constant PConst_string("int8_signed_elt",(typing/typeopt.ml[144,4954+4]..[144,4954+19]),None)
                                    expression (typing/typeopt.ml[144,4954+22]..[144,4954+37])
                                      Pexp_construct "Pbigarray_sint8" (typing/typeopt.ml[144,4954+22]..[144,4954+37])
                                      None
                                  ]
                                expression (typing/typeopt.ml[145,4993+3]..[153,5301+40]) ghost
                                  Pexp_construct "::" (typing/typeopt.ml[145,4993+3]..[153,5301+40]) ghost
                                  Some
                                    expression (typing/typeopt.ml[145,4993+3]..[153,5301+40]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/typeopt.ml[145,4993+3]..[145,4993+39])
                                          Pexp_tuple
                                          [
                                            expression (typing/typeopt.ml[145,4993+3]..[145,4993+22])
                                              Pexp_constant PConst_string("int8_unsigned_elt",(typing/typeopt.ml[145,4993+4]..[145,4993+21]),None)
                                            expression (typing/typeopt.ml[145,4993+24]..[145,4993+39])
                                              Pexp_construct "Pbigarray_uint8" (typing/typeopt.ml[145,4993+24]..[145,4993+39])
                                              None
                                          ]
                                        expression (typing/typeopt.ml[146,5034+3]..[153,5301+40]) ghost
                                          Pexp_construct "::" (typing/typeopt.ml[146,5034+3]..[153,5301+40]) ghost
                                          Some
                                            expression (typing/typeopt.ml[146,5034+3]..[153,5301+40]) ghost
                                              Pexp_tuple
                                              [
                                                expression (typing/typeopt.ml[146,5034+3]..[146,5034+39])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typeopt.ml[146,5034+3]..[146,5034+21])
                                                      Pexp_constant PConst_string("int16_signed_elt",(typing/typeopt.ml[146,5034+4]..[146,5034+20]),None)
                                                    expression (typing/typeopt.ml[146,5034+23]..[146,5034+39])
                                                      Pexp_construct "Pbigarray_sint16" (typing/typeopt.ml[146,5034+23]..[146,5034+39])
                                                      None
                                                  ]
                                                expression (typing/typeopt.ml[147,5075+3]..[153,5301+40]) ghost
                                                  Pexp_construct "::" (typing/typeopt.ml[147,5075+3]..[153,5301+40]) ghost
                                                  Some
                                                    expression (typing/typeopt.ml[147,5075+3]..[153,5301+40]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typeopt.ml[147,5075+3]..[147,5075+41])
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/typeopt.ml[147,5075+3]..[147,5075+23])
                                                              Pexp_constant PConst_string("int16_unsigned_elt",(typing/typeopt.ml[147,5075+4]..[147,5075+22]),None)
                                                            expression (typing/typeopt.ml[147,5075+25]..[147,5075+41])
                                                              Pexp_construct "Pbigarray_uint16" (typing/typeopt.ml[147,5075+25]..[147,5075+41])
                                                              None
                                                          ]
                                                        expression (typing/typeopt.ml[148,5118+3]..[153,5301+40]) ghost
                                                          Pexp_construct "::" (typing/typeopt.ml[148,5118+3]..[153,5301+40]) ghost
                                                          Some
                                                            expression (typing/typeopt.ml[148,5118+3]..[153,5301+40]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (typing/typeopt.ml[148,5118+3]..[148,5118+31])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (typing/typeopt.ml[148,5118+3]..[148,5118+14])
                                                                      Pexp_constant PConst_string("int32_elt",(typing/typeopt.ml[148,5118+4]..[148,5118+13]),None)
                                                                    expression (typing/typeopt.ml[148,5118+16]..[148,5118+31])
                                                                      Pexp_construct "Pbigarray_int32" (typing/typeopt.ml[148,5118+16]..[148,5118+31])
                                                                      None
                                                                  ]
                                                                expression (typing/typeopt.ml[149,5151+3]..[153,5301+40]) ghost
                                                                  Pexp_construct "::" (typing/typeopt.ml[149,5151+3]..[153,5301+40]) ghost
                                                                  Some
                                                                    expression (typing/typeopt.ml[149,5151+3]..[153,5301+40]) ghost
                                                                      Pexp_tuple
                                                                      [
expression (typing/typeopt.ml[149,5151+3]..[149,5151+31])
  Pexp_tuple
  [
    expression (typing/typeopt.ml[149,5151+3]..[149,5151+14])
      Pexp_constant PConst_string("int64_elt",(typing/typeopt.ml[149,5151+4]..[149,5151+13]),None)
    expression (typing/typeopt.ml[149,5151+16]..[149,5151+31])
      Pexp_construct "Pbigarray_int64" (typing/typeopt.ml[149,5151+16]..[149,5151+31])
      None
  ]
expression (typing/typeopt.ml[150,5184+3]..[153,5301+40]) ghost
  Pexp_construct "::" (typing/typeopt.ml[150,5184+3]..[153,5301+40]) ghost
  Some
    expression (typing/typeopt.ml[150,5184+3]..[153,5301+40]) ghost
      Pexp_tuple
      [
        expression (typing/typeopt.ml[150,5184+3]..[150,5184+32])
          Pexp_tuple
          [
            expression (typing/typeopt.ml[150,5184+3]..[150,5184+12])
              Pexp_constant PConst_string("int_elt",(typing/typeopt.ml[150,5184+4]..[150,5184+11]),None)
            expression (typing/typeopt.ml[150,5184+14]..[150,5184+32])
              Pexp_construct "Pbigarray_caml_int" (typing/typeopt.ml[150,5184+14]..[150,5184+32])
              None
          ]
        expression (typing/typeopt.ml[151,5218+3]..[153,5301+40]) ghost
          Pexp_construct "::" (typing/typeopt.ml[151,5218+3]..[153,5301+40]) ghost
          Some
            expression (typing/typeopt.ml[151,5218+3]..[153,5301+40]) ghost
              Pexp_tuple
              [
                expression (typing/typeopt.ml[151,5218+3]..[151,5218+40])
                  Pexp_tuple
                  [
                    expression (typing/typeopt.ml[151,5218+3]..[151,5218+18])
                      Pexp_constant PConst_string("nativeint_elt",(typing/typeopt.ml[151,5218+4]..[151,5218+17]),None)
                    expression (typing/typeopt.ml[151,5218+20]..[151,5218+40])
                      Pexp_construct "Pbigarray_native_int" (typing/typeopt.ml[151,5218+20]..[151,5218+40])
                      None
                  ]
                expression (typing/typeopt.ml[152,5260+3]..[153,5301+40]) ghost
                  Pexp_construct "::" (typing/typeopt.ml[152,5260+3]..[153,5301+40]) ghost
                  Some
                    expression (typing/typeopt.ml[152,5260+3]..[153,5301+40]) ghost
                      Pexp_tuple
                      [
                        expression (typing/typeopt.ml[152,5260+3]..[152,5260+39])
                          Pexp_tuple
                          [
                            expression (typing/typeopt.ml[152,5260+3]..[152,5260+18])
                              Pexp_constant PConst_string("complex32_elt",(typing/typeopt.ml[152,5260+4]..[152,5260+17]),None)
                            expression (typing/typeopt.ml[152,5260+20]..[152,5260+39])
                              Pexp_construct "Pbigarray_complex32" (typing/typeopt.ml[152,5260+20]..[152,5260+39])
                              None
                          ]
                        expression (typing/typeopt.ml[153,5301+3]..[153,5301+40]) ghost
                          Pexp_construct "::" (typing/typeopt.ml[153,5301+3]..[153,5301+40]) ghost
                          Some
                            expression (typing/typeopt.ml[153,5301+3]..[153,5301+40]) ghost
                              Pexp_tuple
                              [
                                expression (typing/typeopt.ml[153,5301+3]..[153,5301+39])
                                  Pexp_tuple
                                  [
                                    expression (typing/typeopt.ml[153,5301+3]..[153,5301+18])
                                      Pexp_constant PConst_string("complex64_elt",(typing/typeopt.ml[153,5301+4]..[153,5301+17]),None)
                                    expression (typing/typeopt.ml[153,5301+20]..[153,5301+39])
                                      Pexp_construct "Pbigarray_complex64" (typing/typeopt.ml[153,5301+20]..[153,5301+39])
                                      None
                                  ]
                                expression (typing/typeopt.ml[153,5301+39]..[153,5301+40]) ghost
                                  Pexp_construct "[]" (typing/typeopt.ml[153,5301+39]..[153,5301+40]) ghost
                                  None
                              ]
                      ]
              ]
      ]
                                                                      ]
                                                              ]
                                                      ]
                                              ]
                                      ]
                              ]
                      ]
              ]
    ]
  structure_item (typing/typeopt.ml[155,5343+0]..[157,5397+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[155,5343+4]..[155,5343+16])
          Ppat_var "layout_table" (typing/typeopt.ml[155,5343+4]..[155,5343+16])
        expression (typing/typeopt.ml[156,5362+2]..[157,5397+46])
          Pexp_construct "::" (typing/typeopt.ml[156,5362+3]..[157,5397+46]) ghost
          Some
            expression (typing/typeopt.ml[156,5362+3]..[157,5397+46]) ghost
              Pexp_tuple
              [
                expression (typing/typeopt.ml[156,5362+3]..[156,5362+33])
                  Pexp_tuple
                  [
                    expression (typing/typeopt.ml[156,5362+3]..[156,5362+13])
                      Pexp_constant PConst_string("c_layout",(typing/typeopt.ml[156,5362+4]..[156,5362+12]),None)
                    expression (typing/typeopt.ml[156,5362+15]..[156,5362+33])
                      Pexp_construct "Pbigarray_c_layout" (typing/typeopt.ml[156,5362+15]..[156,5362+33])
                      None
                  ]
                expression (typing/typeopt.ml[157,5397+3]..[157,5397+46]) ghost
                  Pexp_construct "::" (typing/typeopt.ml[157,5397+3]..[157,5397+46]) ghost
                  Some
                    expression (typing/typeopt.ml[157,5397+3]..[157,5397+46]) ghost
                      Pexp_tuple
                      [
                        expression (typing/typeopt.ml[157,5397+3]..[157,5397+45])
                          Pexp_tuple
                          [
                            expression (typing/typeopt.ml[157,5397+3]..[157,5397+19])
                              Pexp_constant PConst_string("fortran_layout",(typing/typeopt.ml[157,5397+4]..[157,5397+18]),None)
                            expression (typing/typeopt.ml[157,5397+21]..[157,5397+45])
                              Pexp_construct "Pbigarray_fortran_layout" (typing/typeopt.ml[157,5397+21]..[157,5397+45])
                              None
                          ]
                        expression (typing/typeopt.ml[157,5397+45]..[157,5397+46]) ghost
                          Pexp_construct "[]" (typing/typeopt.ml[157,5397+45]..[157,5397+46]) ghost
                          None
                      ]
              ]
    ]
  structure_item (typing/typeopt.ml[159,5445+0]..[166,5773+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[159,5445+4]..[159,5445+33])
          Ppat_var "bigarray_type_kind_and_layout" (typing/typeopt.ml[159,5445+4]..[159,5445+33])
        expression (typing/typeopt.ml[159,5445+34]..[166,5773+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[159,5445+34]..[159,5445+37])
            Ppat_var "env" (typing/typeopt.ml[159,5445+34]..[159,5445+37])
          expression (typing/typeopt.ml[159,5445+38]..[166,5773+51]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typeopt.ml[159,5445+38]..[159,5445+41])
              Ppat_var "typ" (typing/typeopt.ml[159,5445+38]..[159,5445+41])
            expression (typing/typeopt.ml[160,5489+2]..[166,5773+51])
              Pexp_match
              expression (typing/typeopt.ml[160,5489+8]..[160,5489+22])
                Pexp_apply
                expression (typing/typeopt.ml[160,5489+8]..[160,5489+14])
                  Pexp_ident "scrape" (typing/typeopt.ml[160,5489+8]..[160,5489+14])
                [
                  <arg>
                  Nolabel
                    expression (typing/typeopt.ml[160,5489+15]..[160,5489+18])
                      Pexp_ident "env" (typing/typeopt.ml[160,5489+15]..[160,5489+18])
                  <arg>
                  Nolabel
                    expression (typing/typeopt.ml[160,5489+19]..[160,5489+22])
                      Pexp_ident "typ" (typing/typeopt.ml[160,5489+19]..[160,5489+22])
                ]
              [
                <case>
                  pattern (typing/typeopt.ml[161,5517+4]..[161,5517+61])
                    Ppat_construct "Tconstr" (typing/typeopt.ml[161,5517+4]..[161,5517+11])
                    Some
                      []
                      pattern (typing/typeopt.ml[161,5517+11]..[161,5517+61])
                        Ppat_tuple
                        [
                          pattern (typing/typeopt.ml[161,5517+12]..[161,5517+14])
                            Ppat_var "_p" (typing/typeopt.ml[161,5517+12]..[161,5517+14])
                          pattern (typing/typeopt.ml[161,5517+16]..[161,5517+51])
                            Ppat_construct "::" (typing/typeopt.ml[161,5517+17]..[161,5517+51]) ghost
                            Some
                              []
                              pattern (typing/typeopt.ml[161,5517+17]..[161,5517+51]) ghost
                                Ppat_tuple
                                [
                                  pattern (typing/typeopt.ml[161,5517+17]..[161,5517+27])
                                    Ppat_var "_caml_type" (typing/typeopt.ml[161,5517+17]..[161,5517+27])
                                  pattern (typing/typeopt.ml[161,5517+29]..[161,5517+51]) ghost
                                    Ppat_construct "::" (typing/typeopt.ml[161,5517+29]..[161,5517+51]) ghost
                                    Some
                                      []
                                      pattern (typing/typeopt.ml[161,5517+29]..[161,5517+51]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (typing/typeopt.ml[161,5517+29]..[161,5517+37])
                                            Ppat_var "elt_type" (typing/typeopt.ml[161,5517+29]..[161,5517+37])
                                          pattern (typing/typeopt.ml[161,5517+39]..[161,5517+51]) ghost
                                            Ppat_construct "::" (typing/typeopt.ml[161,5517+39]..[161,5517+51]) ghost
                                            Some
                                              []
                                              pattern (typing/typeopt.ml[161,5517+39]..[161,5517+51]) ghost
                                                Ppat_tuple
                                                [
                                                  pattern (typing/typeopt.ml[161,5517+39]..[161,5517+50])
                                                    Ppat_var "layout_type" (typing/typeopt.ml[161,5517+39]..[161,5517+50])
                                                  pattern (typing/typeopt.ml[161,5517+50]..[161,5517+51]) ghost
                                                    Ppat_construct "[]" (typing/typeopt.ml[161,5517+50]..[161,5517+51]) ghost
                                                    None
                                                ]
                                        ]
                                ]
                          pattern (typing/typeopt.ml[161,5517+53]..[161,5517+60])
                            Ppat_var "_abbrev" (typing/typeopt.ml[161,5517+53]..[161,5517+60])
                        ]
                  expression (typing/typeopt.ml[162,5582+6]..[164,5710+53])
                    Pexp_tuple
                    [
                      expression (typing/typeopt.ml[162,5582+7]..[162,5582+69])
                        Pexp_apply
                        expression (typing/typeopt.ml[162,5582+7]..[162,5582+27])
                          Pexp_ident "bigarray_decode_type" (typing/typeopt.ml[162,5582+7]..[162,5582+27])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typeopt.ml[162,5582+28]..[162,5582+31])
                              Pexp_ident "env" (typing/typeopt.ml[162,5582+28]..[162,5582+31])
                          <arg>
                          Nolabel
                            expression (typing/typeopt.ml[162,5582+32]..[162,5582+40])
                              Pexp_ident "elt_type" (typing/typeopt.ml[162,5582+32]..[162,5582+40])
                          <arg>
                          Nolabel
                            expression (typing/typeopt.ml[162,5582+41]..[162,5582+51])
                              Pexp_ident "kind_table" (typing/typeopt.ml[162,5582+41]..[162,5582+51])
                          <arg>
                          Nolabel
                            expression (typing/typeopt.ml[162,5582+52]..[162,5582+69])
                              Pexp_construct "Pbigarray_unknown" (typing/typeopt.ml[162,5582+52]..[162,5582+69])
                              None
                        ]
                      expression (typing/typeopt.ml[163,5653+7]..[164,5710+52])
                        Pexp_apply
                        expression (typing/typeopt.ml[163,5653+7]..[163,5653+27])
                          Pexp_ident "bigarray_decode_type" (typing/typeopt.ml[163,5653+7]..[163,5653+27])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typeopt.ml[163,5653+28]..[163,5653+31])
                              Pexp_ident "env" (typing/typeopt.ml[163,5653+28]..[163,5653+31])
                          <arg>
                          Nolabel
                            expression (typing/typeopt.ml[163,5653+32]..[163,5653+43])
                              Pexp_ident "layout_type" (typing/typeopt.ml[163,5653+32]..[163,5653+43])
                          <arg>
                          Nolabel
                            expression (typing/typeopt.ml[163,5653+44]..[163,5653+56])
                              Pexp_ident "layout_table" (typing/typeopt.ml[163,5653+44]..[163,5653+56])
                          <arg>
                          Nolabel
                            expression (typing/typeopt.ml[164,5710+28]..[164,5710+52])
                              Pexp_construct "Pbigarray_unknown_layout" (typing/typeopt.ml[164,5710+28]..[164,5710+52])
                              None
                        ]
                    ]
                <case>
                  pattern (typing/typeopt.ml[165,5764+4]..[165,5764+5])
                    Ppat_any
                  expression (typing/typeopt.ml[166,5773+6]..[166,5773+51])
                    Pexp_tuple
                    [
                      expression (typing/typeopt.ml[166,5773+7]..[166,5773+24])
                        Pexp_construct "Pbigarray_unknown" (typing/typeopt.ml[166,5773+7]..[166,5773+24])
                        None
                      expression (typing/typeopt.ml[166,5773+26]..[166,5773+50])
                        Pexp_construct "Pbigarray_unknown_layout" (typing/typeopt.ml[166,5773+26]..[166,5773+50])
                        None
                    ]
              ]
    ]
  structure_item (typing/typeopt.ml[168,5826+0]..[183,6358+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[168,5826+4]..[168,5826+14])
          Ppat_var "value_kind" (typing/typeopt.ml[168,5826+4]..[168,5826+14])
        expression (typing/typeopt.ml[168,5826+15]..[183,6358+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[168,5826+15]..[168,5826+18])
            Ppat_var "env" (typing/typeopt.ml[168,5826+15]..[168,5826+18])
          expression (typing/typeopt.ml[168,5826+19]..[183,6358+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typeopt.ml[168,5826+19]..[168,5826+21])
              Ppat_var "ty" (typing/typeopt.ml[168,5826+19]..[168,5826+21])
            expression (typing/typeopt.ml[169,5850+2]..[183,6358+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typeopt.ml[169,5850+6]..[169,5850+8])
                    Ppat_var "ty" (typing/typeopt.ml[169,5850+6]..[169,5850+8])
                  expression (typing/typeopt.ml[169,5850+11]..[169,5850+27])
                    Pexp_apply
                    expression (typing/typeopt.ml[169,5850+11]..[169,5850+20])
                      Pexp_ident "scrape_ty" (typing/typeopt.ml[169,5850+11]..[169,5850+20])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typeopt.ml[169,5850+21]..[169,5850+24])
                          Pexp_ident "env" (typing/typeopt.ml[169,5850+21]..[169,5850+24])
                      <arg>
                      Nolabel
                        expression (typing/typeopt.ml[169,5850+25]..[169,5850+27])
                          Pexp_ident "ty" (typing/typeopt.ml[169,5850+25]..[169,5850+27])
                    ]
              ]
              expression (typing/typeopt.ml[170,5881+2]..[183,6358+5])
                Pexp_ifthenelse
                expression (typing/typeopt.ml[170,5881+5]..[170,5881+42])
                  Pexp_apply
                  expression (typing/typeopt.ml[170,5881+5]..[170,5881+17])
                    Pexp_ident "is_immediate" (typing/typeopt.ml[170,5881+5]..[170,5881+17])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typeopt.ml[170,5881+18]..[170,5881+42])
                        Pexp_apply
                        expression (typing/typeopt.ml[170,5881+19]..[170,5881+34])
                          Pexp_ident "Ctype.immediacy" (typing/typeopt.ml[170,5881+19]..[170,5881+34])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typeopt.ml[170,5881+35]..[170,5881+38])
                              Pexp_ident "env" (typing/typeopt.ml[170,5881+35]..[170,5881+38])
                          <arg>
                          Nolabel
                            expression (typing/typeopt.ml[170,5881+39]..[170,5881+41])
                              Pexp_ident "ty" (typing/typeopt.ml[170,5881+39]..[170,5881+41])
                        ]
                  ]
                expression (typing/typeopt.ml[170,5881+48]..[170,5881+55])
                  Pexp_construct "Pintval" (typing/typeopt.ml[170,5881+48]..[170,5881+55])
                  None
                Some
                  expression (typing/typeopt.ml[171,5937+7]..[183,6358+5])
                    Pexp_match
                    expression (typing/typeopt.ml[172,5950+10]..[172,5950+21])
                      Pexp_apply
                      expression (typing/typeopt.ml[172,5950+10]..[172,5950+18])
                        Pexp_ident "get_desc" (typing/typeopt.ml[172,5950+10]..[172,5950+18])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typeopt.ml[172,5950+19]..[172,5950+21])
                            Pexp_ident "ty" (typing/typeopt.ml[172,5950+19]..[172,5950+21])
                      ]
                    [
                      <case>
                        pattern (typing/typeopt.ml[173,5977+6]..[173,5977+22])
                          Ppat_construct "Tconstr" (typing/typeopt.ml[173,5977+6]..[173,5977+13])
                          Some
                            []
                            pattern (typing/typeopt.ml[173,5977+13]..[173,5977+22])
                              Ppat_tuple
                              [
                                pattern (typing/typeopt.ml[173,5977+14]..[173,5977+15])
                                  Ppat_var "p" (typing/typeopt.ml[173,5977+14]..[173,5977+15])
                                pattern (typing/typeopt.ml[173,5977+17]..[173,5977+18])
                                  Ppat_any
                                pattern (typing/typeopt.ml[173,5977+20]..[173,5977+21])
                                  Ppat_any
                              ]
                        <when>
                          expression (typing/typeopt.ml[173,5977+28]..[173,5977+57])
                            Pexp_apply
                            expression (typing/typeopt.ml[173,5977+28]..[173,5977+37])
                              Pexp_ident "Path.same" (typing/typeopt.ml[173,5977+28]..[173,5977+37])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typeopt.ml[173,5977+38]..[173,5977+39])
                                  Pexp_ident "p" (typing/typeopt.ml[173,5977+38]..[173,5977+39])
                              <arg>
                              Nolabel
                                expression (typing/typeopt.ml[173,5977+40]..[173,5977+57])
                                  Pexp_ident "Predef.path_float" (typing/typeopt.ml[173,5977+40]..[173,5977+57])
                            ]
                        expression (typing/typeopt.ml[174,6038+8]..[174,6038+17])
                          Pexp_construct "Pfloatval" (typing/typeopt.ml[174,6038+8]..[174,6038+17])
                          None
                      <case>
                        pattern (typing/typeopt.ml[175,6056+6]..[175,6056+22])
                          Ppat_construct "Tconstr" (typing/typeopt.ml[175,6056+6]..[175,6056+13])
                          Some
                            []
                            pattern (typing/typeopt.ml[175,6056+13]..[175,6056+22])
                              Ppat_tuple
                              [
                                pattern (typing/typeopt.ml[175,6056+14]..[175,6056+15])
                                  Ppat_var "p" (typing/typeopt.ml[175,6056+14]..[175,6056+15])
                                pattern (typing/typeopt.ml[175,6056+17]..[175,6056+18])
                                  Ppat_any
                                pattern (typing/typeopt.ml[175,6056+20]..[175,6056+21])
                                  Ppat_any
                              ]
                        <when>
                          expression (typing/typeopt.ml[175,6056+28]..[175,6056+57])
                            Pexp_apply
                            expression (typing/typeopt.ml[175,6056+28]..[175,6056+37])
                              Pexp_ident "Path.same" (typing/typeopt.ml[175,6056+28]..[175,6056+37])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typeopt.ml[175,6056+38]..[175,6056+39])
                                  Pexp_ident "p" (typing/typeopt.ml[175,6056+38]..[175,6056+39])
                              <arg>
                              Nolabel
                                expression (typing/typeopt.ml[175,6056+40]..[175,6056+57])
                                  Pexp_ident "Predef.path_int32" (typing/typeopt.ml[175,6056+40]..[175,6056+57])
                            ]
                        expression (typing/typeopt.ml[176,6117+8]..[176,6117+27])
                          Pexp_construct "Pboxedintval" (typing/typeopt.ml[176,6117+8]..[176,6117+20])
                          Some
                            expression (typing/typeopt.ml[176,6117+21]..[176,6117+27])
                              Pexp_construct "Pint32" (typing/typeopt.ml[176,6117+21]..[176,6117+27])
                              None
                      <case>
                        pattern (typing/typeopt.ml[177,6145+6]..[177,6145+22])
                          Ppat_construct "Tconstr" (typing/typeopt.ml[177,6145+6]..[177,6145+13])
                          Some
                            []
                            pattern (typing/typeopt.ml[177,6145+13]..[177,6145+22])
                              Ppat_tuple
                              [
                                pattern (typing/typeopt.ml[177,6145+14]..[177,6145+15])
                                  Ppat_var "p" (typing/typeopt.ml[177,6145+14]..[177,6145+15])
                                pattern (typing/typeopt.ml[177,6145+17]..[177,6145+18])
                                  Ppat_any
                                pattern (typing/typeopt.ml[177,6145+20]..[177,6145+21])
                                  Ppat_any
                              ]
                        <when>
                          expression (typing/typeopt.ml[177,6145+28]..[177,6145+57])
                            Pexp_apply
                            expression (typing/typeopt.ml[177,6145+28]..[177,6145+37])
                              Pexp_ident "Path.same" (typing/typeopt.ml[177,6145+28]..[177,6145+37])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typeopt.ml[177,6145+38]..[177,6145+39])
                                  Pexp_ident "p" (typing/typeopt.ml[177,6145+38]..[177,6145+39])
                              <arg>
                              Nolabel
                                expression (typing/typeopt.ml[177,6145+40]..[177,6145+57])
                                  Pexp_ident "Predef.path_int64" (typing/typeopt.ml[177,6145+40]..[177,6145+57])
                            ]
                        expression (typing/typeopt.ml[178,6206+8]..[178,6206+27])
                          Pexp_construct "Pboxedintval" (typing/typeopt.ml[178,6206+8]..[178,6206+20])
                          Some
                            expression (typing/typeopt.ml[178,6206+21]..[178,6206+27])
                              Pexp_construct "Pint64" (typing/typeopt.ml[178,6206+21]..[178,6206+27])
                              None
                      <case>
                        pattern (typing/typeopt.ml[179,6234+6]..[179,6234+22])
                          Ppat_construct "Tconstr" (typing/typeopt.ml[179,6234+6]..[179,6234+13])
                          Some
                            []
                            pattern (typing/typeopt.ml[179,6234+13]..[179,6234+22])
                              Ppat_tuple
                              [
                                pattern (typing/typeopt.ml[179,6234+14]..[179,6234+15])
                                  Ppat_var "p" (typing/typeopt.ml[179,6234+14]..[179,6234+15])
                                pattern (typing/typeopt.ml[179,6234+17]..[179,6234+18])
                                  Ppat_any
                                pattern (typing/typeopt.ml[179,6234+20]..[179,6234+21])
                                  Ppat_any
                              ]
                        <when>
                          expression (typing/typeopt.ml[179,6234+28]..[179,6234+61])
                            Pexp_apply
                            expression (typing/typeopt.ml[179,6234+28]..[179,6234+37])
                              Pexp_ident "Path.same" (typing/typeopt.ml[179,6234+28]..[179,6234+37])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typeopt.ml[179,6234+38]..[179,6234+39])
                                  Pexp_ident "p" (typing/typeopt.ml[179,6234+38]..[179,6234+39])
                              <arg>
                              Nolabel
                                expression (typing/typeopt.ml[179,6234+40]..[179,6234+61])
                                  Pexp_ident "Predef.path_nativeint" (typing/typeopt.ml[179,6234+40]..[179,6234+61])
                            ]
                        expression (typing/typeopt.ml[180,6299+8]..[180,6299+31])
                          Pexp_construct "Pboxedintval" (typing/typeopt.ml[180,6299+8]..[180,6299+20])
                          Some
                            expression (typing/typeopt.ml[180,6299+21]..[180,6299+31])
                              Pexp_construct "Pnativeint" (typing/typeopt.ml[180,6299+21]..[180,6299+31])
                              None
                      <case>
                        pattern (typing/typeopt.ml[181,6331+6]..[181,6331+7])
                          Ppat_any
                        expression (typing/typeopt.ml[182,6342+8]..[182,6342+15])
                          Pexp_construct "Pgenval" (typing/typeopt.ml[182,6342+8]..[182,6342+15])
                          None
                    ]
    ]
  structure_item (typing/typeopt.ml[185,6365+0]..[188,6485+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[185,6365+4]..[185,6365+30])
          Ppat_var "function_return_value_kind" (typing/typeopt.ml[185,6365+4]..[185,6365+30])
        expression (typing/typeopt.ml[185,6365+31]..[188,6485+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[185,6365+31]..[185,6365+34])
            Ppat_var "env" (typing/typeopt.ml[185,6365+31]..[185,6365+34])
          expression (typing/typeopt.ml[185,6365+35]..[188,6485+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typeopt.ml[185,6365+35]..[185,6365+37])
              Ppat_var "ty" (typing/typeopt.ml[185,6365+35]..[185,6365+37])
            expression (typing/typeopt.ml[186,6405+2]..[188,6485+19])
              Pexp_match
              expression (typing/typeopt.ml[186,6405+8]..[186,6405+31])
                Pexp_apply
                expression (typing/typeopt.ml[186,6405+8]..[186,6405+24])
                  Pexp_ident "is_function_type" (typing/typeopt.ml[186,6405+8]..[186,6405+24])
                [
                  <arg>
                  Nolabel
                    expression (typing/typeopt.ml[186,6405+25]..[186,6405+28])
                      Pexp_ident "env" (typing/typeopt.ml[186,6405+25]..[186,6405+28])
                  <arg>
                  Nolabel
                    expression (typing/typeopt.ml[186,6405+29]..[186,6405+31])
                      Pexp_ident "ty" (typing/typeopt.ml[186,6405+29]..[186,6405+31])
                ]
              [
                <case>
                  pattern (typing/typeopt.ml[187,6442+4]..[187,6442+20])
                    Ppat_construct "Some" (typing/typeopt.ml[187,6442+4]..[187,6442+8])
                    Some
                      []
                      pattern (typing/typeopt.ml[187,6442+9]..[187,6442+20])
                        Ppat_tuple
                        [
                          pattern (typing/typeopt.ml[187,6442+10]..[187,6442+14])
                            Ppat_var "_lhs" (typing/typeopt.ml[187,6442+10]..[187,6442+14])
                          pattern (typing/typeopt.ml[187,6442+16]..[187,6442+19])
                            Ppat_var "rhs" (typing/typeopt.ml[187,6442+16]..[187,6442+19])
                        ]
                  expression (typing/typeopt.ml[187,6442+24]..[187,6442+42])
                    Pexp_apply
                    expression (typing/typeopt.ml[187,6442+24]..[187,6442+34])
                      Pexp_ident "value_kind" (typing/typeopt.ml[187,6442+24]..[187,6442+34])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typeopt.ml[187,6442+35]..[187,6442+38])
                          Pexp_ident "env" (typing/typeopt.ml[187,6442+35]..[187,6442+38])
                      <arg>
                      Nolabel
                        expression (typing/typeopt.ml[187,6442+39]..[187,6442+42])
                          Pexp_ident "rhs" (typing/typeopt.ml[187,6442+39]..[187,6442+42])
                    ]
                <case>
                  pattern (typing/typeopt.ml[188,6485+4]..[188,6485+8])
                    Ppat_construct "None" (typing/typeopt.ml[188,6485+4]..[188,6485+8])
                    None
                  expression (typing/typeopt.ml[188,6485+12]..[188,6485+19])
                    Pexp_construct "Pgenval" (typing/typeopt.ml[188,6485+12]..[188,6485+19])
                    None
              ]
    ]
  structure_item (typing/typeopt.ml[192,6641+0]..[196,6769+23])
    Pstr_value Nonrec
    [
      <def>
          attribute "ocaml.doc"
            [
              structure_item (typing/typeopt.ml[190,6506+0]..[191,6578+62])
                Pstr_eval
                expression (typing/typeopt.ml[190,6506+0]..[191,6578+62])
                  Pexp_constant PConst_string(" Whether a forward block is needed for a lazy thunk on a value, i.e.\n    if the value can be represented as a float/forward/lazy ",(typing/typeopt.ml[190,6506+0]..[191,6578+62]),None)
            ]
        pattern (typing/typeopt.ml[192,6641+4]..[192,6641+29])
          Ppat_var "lazy_val_requires_forward" (typing/typeopt.ml[192,6641+4]..[192,6641+29])
        expression (typing/typeopt.ml[192,6641+30]..[196,6769+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[192,6641+30]..[192,6641+33])
            Ppat_var "env" (typing/typeopt.ml[192,6641+30]..[192,6641+33])
          expression (typing/typeopt.ml[192,6641+34]..[196,6769+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typeopt.ml[192,6641+34]..[192,6641+36])
              Ppat_var "ty" (typing/typeopt.ml[192,6641+34]..[192,6641+36])
            expression (typing/typeopt.ml[193,6680+2]..[196,6769+23])
              Pexp_match
              expression (typing/typeopt.ml[193,6680+8]..[193,6680+23])
                Pexp_apply
                expression (typing/typeopt.ml[193,6680+8]..[193,6680+16])
                  Pexp_ident "classify" (typing/typeopt.ml[193,6680+8]..[193,6680+16])
                [
                  <arg>
                  Nolabel
                    expression (typing/typeopt.ml[193,6680+17]..[193,6680+20])
                      Pexp_ident "env" (typing/typeopt.ml[193,6680+17]..[193,6680+20])
                  <arg>
                  Nolabel
                    expression (typing/typeopt.ml[193,6680+21]..[193,6680+23])
                      Pexp_ident "ty" (typing/typeopt.ml[193,6680+21]..[193,6680+23])
                ]
              [
                <case>
                  pattern (typing/typeopt.ml[194,6709+4]..[194,6709+14])
                    Ppat_or
                    pattern (typing/typeopt.ml[194,6709+4]..[194,6709+7])
                      Ppat_construct "Any" (typing/typeopt.ml[194,6709+4]..[194,6709+7])
                      None
                    pattern (typing/typeopt.ml[194,6709+10]..[194,6709+14])
                      Ppat_construct "Lazy" (typing/typeopt.ml[194,6709+10]..[194,6709+14])
                      None
                  expression (typing/typeopt.ml[194,6709+18]..[194,6709+22])
                    Pexp_construct "true" (typing/typeopt.ml[194,6709+18]..[194,6709+22])
                    None
                <case>
                  pattern (typing/typeopt.ml[195,6732+4]..[195,6732+9])
                    Ppat_construct "Float" (typing/typeopt.ml[195,6732+4]..[195,6732+9])
                    None
                  expression (typing/typeopt.ml[195,6732+13]..[195,6732+36])
                    Pexp_ident "Config.flat_float_array" (typing/typeopt.ml[195,6732+13]..[195,6732+36])
                <case>
                  pattern (typing/typeopt.ml[196,6769+4]..[196,6769+14])
                    Ppat_or
                    pattern (typing/typeopt.ml[196,6769+4]..[196,6769+8])
                      Ppat_construct "Addr" (typing/typeopt.ml[196,6769+4]..[196,6769+8])
                      None
                    pattern (typing/typeopt.ml[196,6769+11]..[196,6769+14])
                      Ppat_construct "Int" (typing/typeopt.ml[196,6769+11]..[196,6769+14])
                      None
                  expression (typing/typeopt.ml[196,6769+18]..[196,6769+23])
                    Pexp_construct "false" (typing/typeopt.ml[196,6769+18]..[196,6769+23])
                    None
              ]
    ]
  structure_item (typing/typeopt.ml[201,7026+0]..[222,7886+13])
    Pstr_value Nonrec
    [
      <def>
          attribute "ocaml.doc"
            [
              structure_item (typing/typeopt.ml[198,6794+0]..[200,6946+79])
                Pstr_eval
                expression (typing/typeopt.ml[198,6794+0]..[200,6946+79])
                  Pexp_constant PConst_string(" The compilation of the expression [lazy e] depends on the form of e:\n    constants, floats and identifiers are optimized.  The optimization must be\n    taken into account when determining whether a recursive binding is safe. ",(typing/typeopt.ml[198,6794+0]..[200,6946+79]),None)
            ]
        pattern (typing/typeopt.ml[201,7026+4]..[205,7261+37]) ghost
          Ppat_constraint
          pattern (typing/typeopt.ml[201,7026+4]..[201,7026+26])
            Ppat_var "classify_lazy_argument" (typing/typeopt.ml[201,7026+4]..[201,7026+26])
          core_type (typing/typeopt.ml[201,7026+29]..[205,7261+37]) ghost
            Ptyp_poly
            core_type (typing/typeopt.ml[201,7026+29]..[205,7261+37])
              Ptyp_arrow
              Nolabel
              core_type (typing/typeopt.ml[201,7026+29]..[201,7026+49])
                Ptyp_constr "Typedtree.expression" (typing/typeopt.ml[201,7026+29]..[201,7026+49])
                []
              core_type (typing/typeopt.ml[202,7079+29]..[205,7261+37])
                Ptyp_variant closed=Closed
                [
                  Rtag "Constant_or_function" true
                    []
                  Rtag "Float_that_cannot_be_shortcut" true
                    []
                  Rtag "Identifier" false
                    [
                      core_type (typing/typeopt.ml[204,7192+45]..[204,7192+68])
                        Ptyp_variant closed=Closed
                        [
                          Rtag "Forward_value" true
                            []
                          Rtag "Other" true
                            []
                        ]
                        None
                    ]
                  Rtag "Other" true
                    []
                ]
                None
        expression (typing/typeopt.ml[201,7026+4]..[222,7886+13])
          Pexp_constraint
          expression (typing/typeopt.ml[206,7301+2]..[222,7886+13])
            Pexp_fun
            Nolabel
            None
            pattern (typing/typeopt.ml[206,7301+6]..[206,7301+7])
              Ppat_var "e" (typing/typeopt.ml[206,7301+6]..[206,7301+7])
            expression (typing/typeopt.ml[206,7301+11]..[222,7886+13])
              Pexp_match
              expression (typing/typeopt.ml[206,7301+17]..[206,7301+27])
                Pexp_field
                expression (typing/typeopt.ml[206,7301+17]..[206,7301+18])
                  Pexp_ident "e" (typing/typeopt.ml[206,7301+17]..[206,7301+18])
                "exp_desc" (typing/typeopt.ml[206,7301+19]..[206,7301+27])
              [
                <case>
                  pattern (typing/typeopt.ml[207,7334+6]..[211,7492+45])
                    Ppat_or
                    pattern (typing/typeopt.ml[207,7334+6]..[210,7470+21])
                      Ppat_or
                      pattern (typing/typeopt.ml[207,7334+6]..[209,7408+61])
                        Ppat_construct "Texp_constant" (typing/typeopt.ml[207,7334+6]..[207,7334+19])
                        Some
                          []
                          pattern (typing/typeopt.ml[208,7354+8]..[209,7408+61])
                            Ppat_or
                            pattern (typing/typeopt.ml[208,7354+10]..[209,7408+39])
                              Ppat_or
                              pattern (typing/typeopt.ml[208,7354+10]..[209,7408+23])
                                Ppat_or
                                pattern (typing/typeopt.ml[208,7354+10]..[208,7354+53])
                                  Ppat_or
                                  pattern (typing/typeopt.ml[208,7354+10]..[208,7354+36])
                                    Ppat_or
                                    pattern (typing/typeopt.ml[208,7354+10]..[208,7354+21])
                                      Ppat_construct "Const_int" (typing/typeopt.ml[208,7354+10]..[208,7354+19])
                                      Some
                                        []
                                        pattern (typing/typeopt.ml[208,7354+20]..[208,7354+21])
                                          Ppat_any
                                    pattern (typing/typeopt.ml[208,7354+24]..[208,7354+36])
                                      Ppat_construct "Const_char" (typing/typeopt.ml[208,7354+24]..[208,7354+34])
                                      Some
                                        []
                                        pattern (typing/typeopt.ml[208,7354+35]..[208,7354+36])
                                          Ppat_any
                                  pattern (typing/typeopt.ml[208,7354+39]..[208,7354+53])
                                    Ppat_construct "Const_string" (typing/typeopt.ml[208,7354+39]..[208,7354+51])
                                    Some
                                      []
                                      pattern (typing/typeopt.ml[208,7354+52]..[208,7354+53])
                                        Ppat_any
                                pattern (typing/typeopt.ml[209,7408+10]..[209,7408+23])
                                  Ppat_construct "Const_int32" (typing/typeopt.ml[209,7408+10]..[209,7408+21])
                                  Some
                                    []
                                    pattern (typing/typeopt.ml[209,7408+22]..[209,7408+23])
                                      Ppat_any
                              pattern (typing/typeopt.ml[209,7408+26]..[209,7408+39])
                                Ppat_construct "Const_int64" (typing/typeopt.ml[209,7408+26]..[209,7408+37])
                                Some
                                  []
                                  pattern (typing/typeopt.ml[209,7408+38]..[209,7408+39])
                                    Ppat_any
                            pattern (typing/typeopt.ml[209,7408+42]..[209,7408+59])
                              Ppat_construct "Const_nativeint" (typing/typeopt.ml[209,7408+42]..[209,7408+57])
                              Some
                                []
                                pattern (typing/typeopt.ml[209,7408+58]..[209,7408+59])
                                  Ppat_any
                      pattern (typing/typeopt.ml[210,7470+6]..[210,7470+21])
                        Ppat_construct "Texp_function" (typing/typeopt.ml[210,7470+6]..[210,7470+19])
                        Some
                          []
                          pattern (typing/typeopt.ml[210,7470+20]..[210,7470+21])
                            Ppat_any
                    pattern (typing/typeopt.ml[211,7492+6]..[211,7492+45])
                      Ppat_construct "Texp_construct" (typing/typeopt.ml[211,7492+6]..[211,7492+20])
                      Some
                        []
                        pattern (typing/typeopt.ml[211,7492+21]..[211,7492+45])
                          Ppat_tuple
                          [
                            pattern (typing/typeopt.ml[211,7492+22]..[211,7492+23])
                              Ppat_any
                            pattern (typing/typeopt.ml[211,7492+25]..[211,7492+41])
                              Ppat_record Closed
                              [
                                "cstr_arity" (typing/typeopt.ml[211,7492+26]..[211,7492+36])
                                  pattern (typing/typeopt.ml[211,7492+39]..[211,7492+40])
                                    Ppat_constant PConst_int (0,None)
                              ]
                            pattern (typing/typeopt.ml[211,7492+43]..[211,7492+44])
                              Ppat_any
                          ]
                  expression (typing/typeopt.ml[212,7541+7]..[212,7541+28])
                    Pexp_variant "Constant_or_function"
                    None
                <case>
                  pattern (typing/typeopt.ml[213,7570+6]..[213,7570+34])
                    Ppat_construct "Texp_constant" (typing/typeopt.ml[213,7570+6]..[213,7570+19])
                    Some
                      []
                      pattern (typing/typeopt.ml[213,7570+19]..[213,7570+34])
                        Ppat_construct "Const_float" (typing/typeopt.ml[213,7570+20]..[213,7570+31])
                        Some
                          []
                          pattern (typing/typeopt.ml[213,7570+32]..[213,7570+33])
                            Ppat_any
                  expression (typing/typeopt.ml[214,7608+7]..[216,7685+33])
                    Pexp_ifthenelse
                    expression (typing/typeopt.ml[214,7608+10]..[214,7608+33])
                      Pexp_ident "Config.flat_float_array" (typing/typeopt.ml[214,7608+10]..[214,7608+33])
                    expression (typing/typeopt.ml[215,7642+12]..[215,7642+42])
                      Pexp_variant "Float_that_cannot_be_shortcut"
                      None
                    Some
                      expression (typing/typeopt.ml[216,7685+12]..[216,7685+33])
                        Pexp_variant "Constant_or_function"
                        None
                <case>
                  pattern (typing/typeopt.ml[217,7719+6]..[217,7719+18])
                    Ppat_construct "Texp_ident" (typing/typeopt.ml[217,7719+6]..[217,7719+16])
                    Some
                      []
                      pattern (typing/typeopt.ml[217,7719+17]..[217,7719+18])
                        Ppat_any
                  <when>
                    expression (typing/typeopt.ml[217,7719+24]..[217,7719+70])
                      Pexp_apply
                      expression (typing/typeopt.ml[217,7719+24]..[217,7719+49])
                        Pexp_ident "lazy_val_requires_forward" (typing/typeopt.ml[217,7719+24]..[217,7719+49])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typeopt.ml[217,7719+50]..[217,7719+59])
                            Pexp_field
                            expression (typing/typeopt.ml[217,7719+50]..[217,7719+51])
                              Pexp_ident "e" (typing/typeopt.ml[217,7719+50]..[217,7719+51])
                            "exp_env" (typing/typeopt.ml[217,7719+52]..[217,7719+59])
                        <arg>
                        Nolabel
                          expression (typing/typeopt.ml[217,7719+60]..[217,7719+70])
                            Pexp_field
                            expression (typing/typeopt.ml[217,7719+60]..[217,7719+61])
                              Pexp_ident "e" (typing/typeopt.ml[217,7719+60]..[217,7719+61])
                            "exp_type" (typing/typeopt.ml[217,7719+62]..[217,7719+70])
                      ]
                  expression (typing/typeopt.ml[218,7793+7]..[218,7793+33])
                    Pexp_variant "Identifier"
                    Some
                      expression (typing/typeopt.ml[218,7793+19]..[218,7793+33])
                        Pexp_variant "Forward_value"
                        None
                <case>
                  pattern (typing/typeopt.ml[219,7827+6]..[219,7827+18])
                    Ppat_construct "Texp_ident" (typing/typeopt.ml[219,7827+6]..[219,7827+16])
                    Some
                      []
                      pattern (typing/typeopt.ml[219,7827+17]..[219,7827+18])
                        Ppat_any
                  expression (typing/typeopt.ml[220,7849+7]..[220,7849+25])
                    Pexp_variant "Identifier"
                    Some
                      expression (typing/typeopt.ml[220,7849+19]..[220,7849+25])
                        Pexp_variant "Other"
                        None
                <case>
                  pattern (typing/typeopt.ml[221,7875+6]..[221,7875+7])
                    Ppat_any
                  expression (typing/typeopt.ml[222,7886+7]..[222,7886+13])
                    Pexp_variant "Other"
                    None
              ]
          core_type (typing/typeopt.ml[201,7026+29]..[205,7261+37])
            Ptyp_arrow
            Nolabel
            core_type (typing/typeopt.ml[201,7026+29]..[201,7026+49])
              Ptyp_constr "Typedtree.expression" (typing/typeopt.ml[201,7026+29]..[201,7026+49])
              []
            core_type (typing/typeopt.ml[202,7079+29]..[205,7261+37])
              Ptyp_variant closed=Closed
              [
                Rtag "Constant_or_function" true
                  []
                Rtag "Float_that_cannot_be_shortcut" true
                  []
                Rtag "Identifier" false
                  [
                    core_type (typing/typeopt.ml[204,7192+45]..[204,7192+68])
                      Ptyp_variant closed=Closed
                      [
                        Rtag "Forward_value" true
                          []
                        Rtag "Other" true
                          []
                      ]
                      None
                  ]
                Rtag "Other" true
                  []
              ]
              None
    ]
  structure_item (typing/typeopt.ml[224,7901+0]..[226,7951+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typeopt.ml[224,7901+4]..[224,7901+20])
          Ppat_var "value_kind_union" (typing/typeopt.ml[224,7901+4]..[224,7901+20])
        expression (typing/typeopt.ml[224,7901+21]..[226,7951+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typeopt.ml[224,7901+21]..[224,7901+23])
            Ppat_var "k1" (typing/typeopt.ml[224,7901+21]..[224,7901+23])
          expression (typing/typeopt.ml[224,7901+24]..[226,7951+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typeopt.ml[224,7901+24]..[224,7901+26])
              Ppat_var "k2" (typing/typeopt.ml[224,7901+24]..[224,7901+26])
            expression (typing/typeopt.ml[225,7930+2]..[226,7951+14])
              Pexp_ifthenelse
              expression (typing/typeopt.ml[225,7930+5]..[225,7930+12])
                Pexp_apply
                expression (typing/typeopt.ml[225,7930+8]..[225,7930+9])
                  Pexp_ident "=" (typing/typeopt.ml[225,7930+8]..[225,7930+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/typeopt.ml[225,7930+5]..[225,7930+7])
                      Pexp_ident "k1" (typing/typeopt.ml[225,7930+5]..[225,7930+7])
                  <arg>
                  Nolabel
                    expression (typing/typeopt.ml[225,7930+10]..[225,7930+12])
                      Pexp_ident "k2" (typing/typeopt.ml[225,7930+10]..[225,7930+12])
                ]
              expression (typing/typeopt.ml[225,7930+18]..[225,7930+20])
                Pexp_ident "k1" (typing/typeopt.ml[225,7930+18]..[225,7930+20])
              Some
                expression (typing/typeopt.ml[226,7951+7]..[226,7951+14])
                  Pexp_construct "Pgenval" (typing/typeopt.ml[226,7951+7]..[226,7951+14])
                  None
    ]
]

