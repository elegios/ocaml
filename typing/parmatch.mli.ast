[
  signature_item (typing/parmatch.mli[16,1079+0]..[16,1079+59])
    Psig_attribute "ocaml.text"
    [
      structure_item (typing/parmatch.mli[16,1079+0]..[16,1079+59])
        Pstr_eval
        expression (typing/parmatch.mli[16,1079+0]..[16,1079+59])
          Pexp_constant PConst_string(" Detection of partial matches and unused match cases. ",(typing/parmatch.mli[16,1079+0]..[16,1079+59]),None)
    ]
  signature_item (typing/parmatch.mli[18,1140+0]..[18,1140+13])
    Psig_open Fresh "Asttypes" (typing/parmatch.mli[18,1140+5]..[18,1140+13])
  signature_item (typing/parmatch.mli[19,1154+0]..[19,1154+14])
    Psig_open Fresh "Typedtree" (typing/parmatch.mli[19,1154+5]..[19,1154+14])
  signature_item (typing/parmatch.mli[20,1169+0]..[20,1169+10])
    Psig_open Fresh "Types" (typing/parmatch.mli[20,1169+5]..[20,1169+10])
  signature_item (typing/parmatch.mli[22,1181+0]..[22,1181+47])
    Psig_value
    value_description "const_compare" (typing/parmatch.mli[22,1181+4]..[22,1181+17]) (typing/parmatch.mli[22,1181+0]..[22,1181+47])
      attribute "ocaml.doc"
        [
          structure_item (typing/parmatch.mli[23,1229+0]..[27,1392+19])
            Pstr_eval
            expression (typing/parmatch.mli[23,1229+0]..[27,1392+19])
              Pexp_constant PConst_string(" [const_compare c1 c2] compares the actual values represented by [c1] and\n    [c2], while simply using [Stdlib.compare] would compare the\n    representations.\n\n    cf. MPR#5758 ",(typing/parmatch.mli[23,1229+0]..[27,1392+19]),None)
        ]
      core_type (typing/parmatch.mli[22,1181+20]..[22,1181+47])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[22,1181+20]..[22,1181+28])
          Ptyp_constr "constant" (typing/parmatch.mli[22,1181+20]..[22,1181+28])
          []
        core_type (typing/parmatch.mli[22,1181+32]..[22,1181+47])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[22,1181+32]..[22,1181+40])
            Ptyp_constr "constant" (typing/parmatch.mli[22,1181+32]..[22,1181+40])
            []
          core_type (typing/parmatch.mli[22,1181+44]..[22,1181+47])
            Ptyp_constr "int" (typing/parmatch.mli[22,1181+44]..[22,1181+47])
            []
      []
  signature_item (typing/parmatch.mli[29,1413+0]..[29,1413+39])
    Psig_value
    value_description "le_pat" (typing/parmatch.mli[29,1413+4]..[29,1413+10]) (typing/parmatch.mli[29,1413+0]..[29,1413+39])
      attribute "ocaml.doc"
        [
          structure_item (typing/parmatch.mli[30,1453+0]..[30,1453+70])
            Pstr_eval
            expression (typing/parmatch.mli[30,1453+0]..[30,1453+70])
              Pexp_constant PConst_string(" [le_pat p q]  means: forall V,  V matches q implies V matches p ",(typing/parmatch.mli[30,1453+0]..[30,1453+70]),None)
        ]
      core_type (typing/parmatch.mli[29,1413+13]..[29,1413+39])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[29,1413+13]..[29,1413+20])
          Ptyp_constr "pattern" (typing/parmatch.mli[29,1413+13]..[29,1413+20])
          []
        core_type (typing/parmatch.mli[29,1413+24]..[29,1413+39])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[29,1413+24]..[29,1413+31])
            Ptyp_constr "pattern" (typing/parmatch.mli[29,1413+24]..[29,1413+31])
            []
          core_type (typing/parmatch.mli[29,1413+35]..[29,1413+39])
            Ptyp_constr "bool" (typing/parmatch.mli[29,1413+35]..[29,1413+39])
            []
      []
  signature_item (typing/parmatch.mli[32,1525+0]..[32,1525+50])
    Psig_value
    value_description "le_pats" (typing/parmatch.mli[32,1525+4]..[32,1525+11]) (typing/parmatch.mli[32,1525+0]..[32,1525+50])
      attribute "ocaml.doc"
        [
          structure_item (typing/parmatch.mli[33,1576+0]..[33,1576+75])
            Pstr_eval
            expression (typing/parmatch.mli[33,1576+0]..[33,1576+75])
              Pexp_constant PConst_string(" [le_pats (p1 .. pm) (q1 .. qn)] means: forall i <= m, [le_pat pi qi] ",(typing/parmatch.mli[33,1576+0]..[33,1576+75]),None)
        ]
      core_type (typing/parmatch.mli[32,1525+14]..[32,1525+50])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[32,1525+14]..[32,1525+26])
          Ptyp_constr "list" (typing/parmatch.mli[32,1525+22]..[32,1525+26])
          [
            core_type (typing/parmatch.mli[32,1525+14]..[32,1525+21])
              Ptyp_constr "pattern" (typing/parmatch.mli[32,1525+14]..[32,1525+21])
              []
          ]
        core_type (typing/parmatch.mli[32,1525+30]..[32,1525+50])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[32,1525+30]..[32,1525+42])
            Ptyp_constr "list" (typing/parmatch.mli[32,1525+38]..[32,1525+42])
            [
              core_type (typing/parmatch.mli[32,1525+30]..[32,1525+37])
                Ptyp_constr "pattern" (typing/parmatch.mli[32,1525+30]..[32,1525+37])
                []
            ]
          core_type (typing/parmatch.mli[32,1525+46]..[32,1525+50])
            Ptyp_constr "bool" (typing/parmatch.mli[32,1525+46]..[32,1525+50])
            []
      []
  signature_item (typing/parmatch.mli[36,1729+0]..[46,2015+8])
    Psig_module "Compat" (typing/parmatch.mli[36,1729+7]..[36,1729+13])
      attribute "ocaml.doc"
        [
          structure_item (typing/parmatch.mli[35,1653+0]..[35,1653+75])
            Pstr_eval
            expression (typing/parmatch.mli[35,1653+0]..[35,1653+75])
              Pexp_constant PConst_string(" Exported compatibility functor, abstracted over constructor equality ",(typing/parmatch.mli[35,1653+0]..[35,1653+75]),None)
        ]
    module_type (typing/parmatch.mli[38,1755+4]..[46,2015+8])
      Pmty_functor "_" (typing/parmatch.mli[38,1755+5]..[38,1755+6])
      module_type (typing/parmatch.mli[38,1755+9]..[43,1893+8])
        Pmty_signature
        [
          signature_item (typing/parmatch.mli[39,1768+6]..[42,1874+18])
            Psig_value
            value_description "equal" (typing/parmatch.mli[39,1768+10]..[39,1768+15]) (typing/parmatch.mli[39,1768+6]..[42,1874+18])
              core_type (typing/parmatch.mli[40,1786+10]..[42,1874+18])
                Ptyp_arrow
                Nolabel
                core_type (typing/parmatch.mli[40,1786+10]..[40,1786+39])
                  Ptyp_constr "Types.constructor_description" (typing/parmatch.mli[40,1786+10]..[40,1786+39])
                  []
                core_type (typing/parmatch.mli[41,1829+12]..[42,1874+18])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/parmatch.mli[41,1829+12]..[41,1829+41])
                    Ptyp_constr "Types.constructor_description" (typing/parmatch.mli[41,1829+12]..[41,1829+41])
                    []
                  core_type (typing/parmatch.mli[42,1874+14]..[42,1874+18])
                    Ptyp_constr "bool" (typing/parmatch.mli[42,1874+14]..[42,1874+18])
                    []
              []
        ]
      module_type (typing/parmatch.mli[43,1893+13]..[46,2015+8])
        Pmty_signature
        [
          signature_item (typing/parmatch.mli[44,1910+7]..[44,1910+46])
            Psig_value
            value_description "compat" (typing/parmatch.mli[44,1910+11]..[44,1910+17]) (typing/parmatch.mli[44,1910+7]..[44,1910+46])
              core_type (typing/parmatch.mli[44,1910+20]..[44,1910+46])
                Ptyp_arrow
                Nolabel
                core_type (typing/parmatch.mli[44,1910+20]..[44,1910+27])
                  Ptyp_constr "pattern" (typing/parmatch.mli[44,1910+20]..[44,1910+27])
                  []
                core_type (typing/parmatch.mli[44,1910+31]..[44,1910+46])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/parmatch.mli[44,1910+31]..[44,1910+38])
                    Ptyp_constr "pattern" (typing/parmatch.mli[44,1910+31]..[44,1910+38])
                    []
                  core_type (typing/parmatch.mli[44,1910+42]..[44,1910+46])
                    Ptyp_constr "bool" (typing/parmatch.mli[44,1910+42]..[44,1910+46])
                    []
              []
          signature_item (typing/parmatch.mli[45,1957+7]..[45,1957+57])
            Psig_value
            value_description "compats" (typing/parmatch.mli[45,1957+11]..[45,1957+18]) (typing/parmatch.mli[45,1957+7]..[45,1957+57])
              core_type (typing/parmatch.mli[45,1957+21]..[45,1957+57])
                Ptyp_arrow
                Nolabel
                core_type (typing/parmatch.mli[45,1957+21]..[45,1957+33])
                  Ptyp_constr "list" (typing/parmatch.mli[45,1957+29]..[45,1957+33])
                  [
                    core_type (typing/parmatch.mli[45,1957+21]..[45,1957+28])
                      Ptyp_constr "pattern" (typing/parmatch.mli[45,1957+21]..[45,1957+28])
                      []
                  ]
                core_type (typing/parmatch.mli[45,1957+37]..[45,1957+57])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/parmatch.mli[45,1957+37]..[45,1957+49])
                    Ptyp_constr "list" (typing/parmatch.mli[45,1957+45]..[45,1957+49])
                    [
                      core_type (typing/parmatch.mli[45,1957+37]..[45,1957+44])
                        Ptyp_constr "pattern" (typing/parmatch.mli[45,1957+37]..[45,1957+44])
                        []
                    ]
                  core_type (typing/parmatch.mli[45,1957+53]..[45,1957+57])
                    Ptyp_constr "bool" (typing/parmatch.mli[45,1957+53]..[45,1957+57])
                    []
              []
        ]
  signature_item (typing/parmatch.mli[48,2025+0]..[48,2025+15])
    Psig_exception
    type_exception
      ptyext_constructor =
        extension_constructor (typing/parmatch.mli[48,2025+0]..[48,2025+15])
          pext_name = "Empty"
          pext_kind =
            Pext_decl
              []
              None
  signature_item (typing/parmatch.mli[50,2042+0]..[50,2042+39])
    Psig_value
    value_description "lub" (typing/parmatch.mli[50,2042+4]..[50,2042+7]) (typing/parmatch.mli[50,2042+0]..[50,2042+39])
      attribute "ocaml.doc"
        [
          structure_item (typing/parmatch.mli[51,2082+0]..[52,2157+62])
            Pstr_eval
            expression (typing/parmatch.mli[51,2082+0]..[52,2157+62])
              Pexp_constant PConst_string(" [lub p q] is a pattern that matches all values matched by [p] and [q].\n    May raise [Empty], when [p] and [q] are not compatible. ",(typing/parmatch.mli[51,2082+0]..[52,2157+62]),None)
        ]
      core_type (typing/parmatch.mli[50,2042+10]..[50,2042+39])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[50,2042+10]..[50,2042+17])
          Ptyp_constr "pattern" (typing/parmatch.mli[50,2042+10]..[50,2042+17])
          []
        core_type (typing/parmatch.mli[50,2042+21]..[50,2042+39])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[50,2042+21]..[50,2042+28])
            Ptyp_constr "pattern" (typing/parmatch.mli[50,2042+21]..[50,2042+28])
            []
          core_type (typing/parmatch.mli[50,2042+32]..[50,2042+39])
            Ptyp_constr "pattern" (typing/parmatch.mli[50,2042+32]..[50,2042+39])
            []
      []
  signature_item (typing/parmatch.mli[54,2221+0]..[54,2221+55])
    Psig_value
    value_description "lubs" (typing/parmatch.mli[54,2221+4]..[54,2221+8]) (typing/parmatch.mli[54,2221+0]..[54,2221+55])
      attribute "ocaml.doc"
        [
          structure_item (typing/parmatch.mli[55,2277+0]..[56,2335+38])
            Pstr_eval
            expression (typing/parmatch.mli[55,2277+0]..[56,2335+38])
              Pexp_constant PConst_string(" [lubs [p1; ...; pn] [q1; ...; qk]], where [n < k], is\n    [[lub p1 q1; ...; lub pk qk]].  ",(typing/parmatch.mli[55,2277+0]..[56,2335+38]),None)
        ]
      core_type (typing/parmatch.mli[54,2221+11]..[54,2221+55])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[54,2221+11]..[54,2221+23])
          Ptyp_constr "list" (typing/parmatch.mli[54,2221+19]..[54,2221+23])
          [
            core_type (typing/parmatch.mli[54,2221+11]..[54,2221+18])
              Ptyp_constr "pattern" (typing/parmatch.mli[54,2221+11]..[54,2221+18])
              []
          ]
        core_type (typing/parmatch.mli[54,2221+27]..[54,2221+55])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[54,2221+27]..[54,2221+39])
            Ptyp_constr "list" (typing/parmatch.mli[54,2221+35]..[54,2221+39])
            [
              core_type (typing/parmatch.mli[54,2221+27]..[54,2221+34])
                Ptyp_constr "pattern" (typing/parmatch.mli[54,2221+27]..[54,2221+34])
                []
            ]
          core_type (typing/parmatch.mli[54,2221+43]..[54,2221+55])
            Ptyp_constr "list" (typing/parmatch.mli[54,2221+51]..[54,2221+55])
            [
              core_type (typing/parmatch.mli[54,2221+43]..[54,2221+50])
                Ptyp_constr "pattern" (typing/parmatch.mli[54,2221+43]..[54,2221+50])
                []
            ]
      []
  signature_item (typing/parmatch.mli[58,2375+0]..[58,2375+55])
    Psig_value
    value_description "get_mins" (typing/parmatch.mli[58,2375+4]..[58,2375+12]) (typing/parmatch.mli[58,2375+0]..[58,2375+55])
      core_type (typing/parmatch.mli[58,2375+15]..[58,2375+55])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[58,2375+16]..[58,2375+32])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[58,2375+16]..[58,2375+18])
            Ptyp_var a
          core_type (typing/parmatch.mli[58,2375+22]..[58,2375+32])
            Ptyp_arrow
            Nolabel
            core_type (typing/parmatch.mli[58,2375+22]..[58,2375+24])
              Ptyp_var a
            core_type (typing/parmatch.mli[58,2375+28]..[58,2375+32])
              Ptyp_constr "bool" (typing/parmatch.mli[58,2375+28]..[58,2375+32])
              []
        core_type (typing/parmatch.mli[58,2375+37]..[58,2375+55])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[58,2375+37]..[58,2375+44])
            Ptyp_constr "list" (typing/parmatch.mli[58,2375+40]..[58,2375+44])
            [
              core_type (typing/parmatch.mli[58,2375+37]..[58,2375+39])
                Ptyp_var a
            ]
          core_type (typing/parmatch.mli[58,2375+48]..[58,2375+55])
            Ptyp_constr "list" (typing/parmatch.mli[58,2375+51]..[58,2375+55])
            [
              core_type (typing/parmatch.mli[58,2375+48]..[58,2375+50])
                Ptyp_var a
            ]
      []
  signature_item (typing/parmatch.mli[65,2617+0]..[65,2617+54])
    Psig_value
    value_description "set_args" (typing/parmatch.mli[65,2617+4]..[65,2617+12]) (typing/parmatch.mli[65,2617+0]..[65,2617+54])
      attribute "ocaml.doc"
        [
          structure_item (typing/parmatch.mli[60,2432+0]..[64,2614+2])
            Pstr_eval
            expression (typing/parmatch.mli[60,2432+0]..[64,2614+2])
              Pexp_constant PConst_string(" Those two functions recombine one pattern and its arguments:\n    For instance:\n      (_,_)::p1::p2::rem -> (p1, p2)::rem\n    The second one will replace mutable arguments by '_'\n",(typing/parmatch.mli[60,2432+0]..[64,2614+2]),None)
        ]
      core_type (typing/parmatch.mli[65,2617+15]..[65,2617+54])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[65,2617+15]..[65,2617+22])
          Ptyp_constr "pattern" (typing/parmatch.mli[65,2617+15]..[65,2617+22])
          []
        core_type (typing/parmatch.mli[65,2617+26]..[65,2617+54])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[65,2617+26]..[65,2617+38])
            Ptyp_constr "list" (typing/parmatch.mli[65,2617+34]..[65,2617+38])
            [
              core_type (typing/parmatch.mli[65,2617+26]..[65,2617+33])
                Ptyp_constr "pattern" (typing/parmatch.mli[65,2617+26]..[65,2617+33])
                []
            ]
          core_type (typing/parmatch.mli[65,2617+42]..[65,2617+54])
            Ptyp_constr "list" (typing/parmatch.mli[65,2617+50]..[65,2617+54])
            [
              core_type (typing/parmatch.mli[65,2617+42]..[65,2617+49])
                Ptyp_constr "pattern" (typing/parmatch.mli[65,2617+42]..[65,2617+49])
                []
            ]
      []
  signature_item (typing/parmatch.mli[66,2672+0]..[66,2672+68])
    Psig_value
    value_description "set_args_erase_mutable" (typing/parmatch.mli[66,2672+4]..[66,2672+26]) (typing/parmatch.mli[66,2672+0]..[66,2672+68])
      core_type (typing/parmatch.mli[66,2672+29]..[66,2672+68])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[66,2672+29]..[66,2672+36])
          Ptyp_constr "pattern" (typing/parmatch.mli[66,2672+29]..[66,2672+36])
          []
        core_type (typing/parmatch.mli[66,2672+40]..[66,2672+68])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[66,2672+40]..[66,2672+52])
            Ptyp_constr "list" (typing/parmatch.mli[66,2672+48]..[66,2672+52])
            [
              core_type (typing/parmatch.mli[66,2672+40]..[66,2672+47])
                Ptyp_constr "pattern" (typing/parmatch.mli[66,2672+40]..[66,2672+47])
                []
            ]
          core_type (typing/parmatch.mli[66,2672+56]..[66,2672+68])
            Ptyp_constr "list" (typing/parmatch.mli[66,2672+64]..[66,2672+68])
            [
              core_type (typing/parmatch.mli[66,2672+56]..[66,2672+63])
                Ptyp_constr "pattern" (typing/parmatch.mli[66,2672+56]..[66,2672+63])
                []
            ]
      []
  signature_item (typing/parmatch.mli[68,2742+0]..[68,2742+65])
    Psig_value
    value_description "pat_of_constr" (typing/parmatch.mli[68,2742+4]..[68,2742+17]) (typing/parmatch.mli[68,2742+0]..[68,2742+65])
      core_type (typing/parmatch.mli[68,2742+20]..[68,2742+65])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[68,2742+20]..[68,2742+27])
          Ptyp_constr "pattern" (typing/parmatch.mli[68,2742+20]..[68,2742+27])
          []
        core_type (typing/parmatch.mli[68,2742+31]..[68,2742+65])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[68,2742+31]..[68,2742+54])
            Ptyp_constr "constructor_description" (typing/parmatch.mli[68,2742+31]..[68,2742+54])
            []
          core_type (typing/parmatch.mli[68,2742+58]..[68,2742+65])
            Ptyp_constr "pattern" (typing/parmatch.mli[68,2742+58]..[68,2742+65])
            []
      []
  signature_item (typing/parmatch.mli[69,2808+0]..[72,2911+32])
    Psig_value
    value_description "complete_constrs" (typing/parmatch.mli[69,2808+4]..[69,2808+20]) (typing/parmatch.mli[69,2808+0]..[72,2911+32])
      core_type (typing/parmatch.mli[70,2831+4]..[72,2911+32])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[70,2831+4]..[70,2831+40])
          Ptyp_constr "pattern_data" (typing/parmatch.mli[70,2831+28]..[70,2831+40])
          [
            core_type (typing/parmatch.mli[70,2831+4]..[70,2831+27])
              Ptyp_constr "constructor_description" (typing/parmatch.mli[70,2831+4]..[70,2831+27])
              []
          ]
        core_type (typing/parmatch.mli[71,2875+4]..[72,2911+32])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[71,2875+4]..[71,2875+32])
            Ptyp_constr "list" (typing/parmatch.mli[71,2875+28]..[71,2875+32])
            [
              core_type (typing/parmatch.mli[71,2875+4]..[71,2875+27])
                Ptyp_constr "constructor_description" (typing/parmatch.mli[71,2875+4]..[71,2875+27])
                []
            ]
          core_type (typing/parmatch.mli[72,2911+4]..[72,2911+32])
            Ptyp_constr "list" (typing/parmatch.mli[72,2911+28]..[72,2911+32])
            [
              core_type (typing/parmatch.mli[72,2911+4]..[72,2911+27])
                Ptyp_constr "constructor_description" (typing/parmatch.mli[72,2911+4]..[72,2911+27])
                []
            ]
      []
  signature_item (typing/parmatch.mli[85,3427+0]..[85,3427+46])
    Psig_type Rec
    [
      type_declaration "pat_explosion" (typing/parmatch.mli[85,3427+5]..[85,3427+18]) (typing/parmatch.mli[85,3427+0]..[85,3427+46])
        attribute "ocaml.doc"
          [
            structure_item (typing/parmatch.mli[74,2945+0]..[84,3423+3])
              Pstr_eval
              expression (typing/parmatch.mli[74,2945+0]..[84,3423+3])
                Pexp_constant PConst_string(" [ppat_of_type] builds an untyped pattern from its expected type,\n    for explosion of wildcard patterns in Typecore.type_pat.\n\n    There are four interesting cases:\n    - the type is empty ([PT_empty])\n    - no further explosion is necessary ([PT_any])\n    - a single pattern is generated, from a record or tuple type\n      or a single-variant type ([PE_single])\n    - an or-pattern is generated, in the case that all branches\n      are GADT constructors ([PE_gadt_cases]).\n ",(typing/parmatch.mli[74,2945+0]..[84,3423+3]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/parmatch.mli[85,3427+21]..[85,3427+30])
                "PE_single" (typing/parmatch.mli[85,3427+21]..[85,3427+30])
                []
                None
              (typing/parmatch.mli[85,3427+31]..[85,3427+46])
                "PE_gadt_cases" (typing/parmatch.mli[85,3427+33]..[85,3427+46])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/parmatch.mli[86,3474+0]..[93,3636+43])
    Psig_type Rec
    [
      type_declaration "ppat_of_type" (typing/parmatch.mli[86,3474+5]..[86,3474+17]) (typing/parmatch.mli[86,3474+0]..[93,3636+43])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/parmatch.mli[87,3494+2]..[87,3494+12])
                "PT_empty" (typing/parmatch.mli[87,3494+4]..[87,3494+12])
                []
                None
              (typing/parmatch.mli[88,3507+2]..[88,3507+10])
                "PT_any" (typing/parmatch.mli[88,3507+4]..[88,3507+10])
                []
                None
              (typing/parmatch.mli[89,3518+2]..[93,3636+43])
                "PT_pattern" (typing/parmatch.mli[89,3518+4]..[89,3518+14])
                [
                  core_type (typing/parmatch.mli[90,3536+6]..[90,3536+19])
                    Ptyp_constr "pat_explosion" (typing/parmatch.mli[90,3536+6]..[90,3536+19])
                    []
                  core_type (typing/parmatch.mli[91,3558+6]..[91,3558+23])
                    Ptyp_constr "Parsetree.pattern" (typing/parmatch.mli[91,3558+6]..[91,3558+23])
                    []
                  core_type (typing/parmatch.mli[92,3584+6]..[92,3584+49])
                    Ptyp_constr "Hashtbl.t" (typing/parmatch.mli[92,3584+40]..[92,3584+49])
                    [
                      core_type (typing/parmatch.mli[92,3584+7]..[92,3584+13])
                        Ptyp_constr "string" (typing/parmatch.mli[92,3584+7]..[92,3584+13])
                        []
                      core_type (typing/parmatch.mli[92,3584+15]..[92,3584+38])
                        Ptyp_constr "constructor_description" (typing/parmatch.mli[92,3584+15]..[92,3584+38])
                        []
                    ]
                  core_type (typing/parmatch.mli[93,3636+6]..[93,3636+43])
                    Ptyp_constr "Hashtbl.t" (typing/parmatch.mli[93,3636+34]..[93,3636+43])
                    [
                      core_type (typing/parmatch.mli[93,3636+7]..[93,3636+13])
                        Ptyp_constr "string" (typing/parmatch.mli[93,3636+7]..[93,3636+13])
                        []
                      core_type (typing/parmatch.mli[93,3636+15]..[93,3636+32])
                        Ptyp_constr "label_description" (typing/parmatch.mli[93,3636+15]..[93,3636+32])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/parmatch.mli[95,3681+0]..[95,3681+52])
    Psig_value
    value_description "ppat_of_type" (typing/parmatch.mli[95,3681+4]..[95,3681+16]) (typing/parmatch.mli[95,3681+0]..[95,3681+52])
      core_type (typing/parmatch.mli[95,3681+18]..[95,3681+52])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[95,3681+18]..[95,3681+23])
          Ptyp_constr "Env.t" (typing/parmatch.mli[95,3681+18]..[95,3681+23])
          []
        core_type (typing/parmatch.mli[95,3681+27]..[95,3681+52])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[95,3681+27]..[95,3681+36])
            Ptyp_constr "type_expr" (typing/parmatch.mli[95,3681+27]..[95,3681+36])
            []
          core_type (typing/parmatch.mli[95,3681+40]..[95,3681+52])
            Ptyp_constr "ppat_of_type" (typing/parmatch.mli[95,3681+40]..[95,3681+52])
            []
      []
  signature_item (typing/parmatch.mli[97,3735+0]..[98,3758+31])
    Psig_value
    value_description "pressure_variants" (typing/parmatch.mli[97,3735+4]..[97,3735+21]) (typing/parmatch.mli[97,3735+0]..[98,3758+31])
      core_type (typing/parmatch.mli[98,3758+2]..[98,3758+31])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[98,3758+2]..[98,3758+7])
          Ptyp_constr "Env.t" (typing/parmatch.mli[98,3758+2]..[98,3758+7])
          []
        core_type (typing/parmatch.mli[98,3758+11]..[98,3758+31])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[98,3758+11]..[98,3758+23])
            Ptyp_constr "list" (typing/parmatch.mli[98,3758+19]..[98,3758+23])
            [
              core_type (typing/parmatch.mli[98,3758+11]..[98,3758+18])
                Ptyp_constr "pattern" (typing/parmatch.mli[98,3758+11]..[98,3758+18])
                []
            ]
          core_type (typing/parmatch.mli[98,3758+27]..[98,3758+31])
            Ptyp_constr "unit" (typing/parmatch.mli[98,3758+27]..[98,3758+31])
            []
      []
  signature_item (typing/parmatch.mli[99,3790+0]..[100,3836+51])
    Psig_value
    value_description "pressure_variants_in_computation_pattern" (typing/parmatch.mli[99,3790+4]..[99,3790+44]) (typing/parmatch.mli[99,3790+0]..[100,3836+51])
      core_type (typing/parmatch.mli[100,3836+2]..[100,3836+51])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[100,3836+2]..[100,3836+7])
          Ptyp_constr "Env.t" (typing/parmatch.mli[100,3836+2]..[100,3836+7])
          []
        core_type (typing/parmatch.mli[100,3836+11]..[100,3836+51])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[100,3836+11]..[100,3836+43])
            Ptyp_constr "list" (typing/parmatch.mli[100,3836+39]..[100,3836+43])
            [
              core_type (typing/parmatch.mli[100,3836+11]..[100,3836+38])
                Ptyp_constr "general_pattern" (typing/parmatch.mli[100,3836+23]..[100,3836+38])
                [
                  core_type (typing/parmatch.mli[100,3836+11]..[100,3836+22])
                    Ptyp_constr "computation" (typing/parmatch.mli[100,3836+11]..[100,3836+22])
                    []
                ]
            ]
          core_type (typing/parmatch.mli[100,3836+47]..[100,3836+51])
            Ptyp_constr "unit" (typing/parmatch.mli[100,3836+47]..[100,3836+51])
            []
      []
  signature_item (typing/parmatch.mli[109,4294+0]..[113,4456+44])
    Psig_value
    value_description "check_partial" (typing/parmatch.mli[109,4294+4]..[109,4294+17]) (typing/parmatch.mli[109,4294+0]..[113,4456+44])
      attribute "ocaml.doc"
        [
          structure_item (typing/parmatch.mli[102,3889+0]..[108,4290+3])
            Pstr_eval
            expression (typing/parmatch.mli[102,3889+0]..[108,4290+3])
              Pexp_constant PConst_string(" [check_partial pred loc caselist] and [check_unused refute pred caselist]\n    are called with a function [pred] which will be given counter-example\n    candidates: they may be partially ill-typed, and have to be type-checked\n    to extract a valid counter-example.\n    [pred] returns a valid counter-example or [None].\n    [refute] indicates that [check_unused] was called on a refutation clause.\n ",(typing/parmatch.mli[102,3889+0]..[108,4290+3]),None)
        ]
      core_type (typing/parmatch.mli[110,4313+4]..[113,4456+44])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[110,4313+5]..[112,4411+40])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[110,4313+5]..[110,4313+48])
            Ptyp_constr "Hashtbl.t" (typing/parmatch.mli[110,4313+39]..[110,4313+48])
            [
              core_type (typing/parmatch.mli[110,4313+6]..[110,4313+12])
                Ptyp_constr "string" (typing/parmatch.mli[110,4313+6]..[110,4313+12])
                []
              core_type (typing/parmatch.mli[110,4313+14]..[110,4313+37])
                Ptyp_constr "constructor_description" (typing/parmatch.mli[110,4313+14]..[110,4313+37])
                []
            ]
          core_type (typing/parmatch.mli[111,4365+5]..[112,4411+40])
            Ptyp_arrow
            Nolabel
            core_type (typing/parmatch.mli[111,4365+5]..[111,4365+42])
              Ptyp_constr "Hashtbl.t" (typing/parmatch.mli[111,4365+33]..[111,4365+42])
              [
                core_type (typing/parmatch.mli[111,4365+6]..[111,4365+12])
                  Ptyp_constr "string" (typing/parmatch.mli[111,4365+6]..[111,4365+12])
                  []
                core_type (typing/parmatch.mli[111,4365+14]..[111,4365+31])
                  Ptyp_constr "label_description" (typing/parmatch.mli[111,4365+14]..[111,4365+31])
                  []
              ]
            core_type (typing/parmatch.mli[112,4411+5]..[112,4411+40])
              Ptyp_arrow
              Nolabel
              core_type (typing/parmatch.mli[112,4411+5]..[112,4411+22])
                Ptyp_constr "Parsetree.pattern" (typing/parmatch.mli[112,4411+5]..[112,4411+22])
                []
              core_type (typing/parmatch.mli[112,4411+26]..[112,4411+40])
                Ptyp_constr "option" (typing/parmatch.mli[112,4411+34]..[112,4411+40])
                [
                  core_type (typing/parmatch.mli[112,4411+26]..[112,4411+33])
                    Ptyp_constr "pattern" (typing/parmatch.mli[112,4411+26]..[112,4411+33])
                    []
                ]
        core_type (typing/parmatch.mli[113,4456+4]..[113,4456+44])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[113,4456+4]..[113,4456+14])
            Ptyp_constr "Location.t" (typing/parmatch.mli[113,4456+4]..[113,4456+14])
            []
          core_type (typing/parmatch.mli[113,4456+18]..[113,4456+44])
            Ptyp_arrow
            Nolabel
            core_type (typing/parmatch.mli[113,4456+18]..[113,4456+33])
              Ptyp_constr "list" (typing/parmatch.mli[113,4456+29]..[113,4456+33])
              [
                core_type (typing/parmatch.mli[113,4456+18]..[113,4456+28])
                  Ptyp_constr "case" (typing/parmatch.mli[113,4456+24]..[113,4456+28])
                  [
                    core_type (typing/parmatch.mli[113,4456+18]..[113,4456+23])
                      Ptyp_constr "value" (typing/parmatch.mli[113,4456+18]..[113,4456+23])
                      []
                  ]
              ]
            core_type (typing/parmatch.mli[113,4456+37]..[113,4456+44])
              Ptyp_constr "partial" (typing/parmatch.mli[113,4456+37]..[113,4456+44])
              []
      []
  signature_item (typing/parmatch.mli[114,4501+0]..[119,4675+27])
    Psig_value
    value_description "check_unused" (typing/parmatch.mli[114,4501+4]..[114,4501+16]) (typing/parmatch.mli[114,4501+0]..[119,4675+27])
      core_type (typing/parmatch.mli[115,4519+4]..[119,4675+27])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[115,4519+5]..[118,4630+40])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[115,4519+5]..[115,4519+9])
            Ptyp_constr "bool" (typing/parmatch.mli[115,4519+5]..[115,4519+9])
            []
          core_type (typing/parmatch.mli[116,4532+5]..[118,4630+40])
            Ptyp_arrow
            Nolabel
            core_type (typing/parmatch.mli[116,4532+5]..[116,4532+48])
              Ptyp_constr "Hashtbl.t" (typing/parmatch.mli[116,4532+39]..[116,4532+48])
              [
                core_type (typing/parmatch.mli[116,4532+6]..[116,4532+12])
                  Ptyp_constr "string" (typing/parmatch.mli[116,4532+6]..[116,4532+12])
                  []
                core_type (typing/parmatch.mli[116,4532+14]..[116,4532+37])
                  Ptyp_constr "constructor_description" (typing/parmatch.mli[116,4532+14]..[116,4532+37])
                  []
              ]
            core_type (typing/parmatch.mli[117,4584+5]..[118,4630+40])
              Ptyp_arrow
              Nolabel
              core_type (typing/parmatch.mli[117,4584+5]..[117,4584+42])
                Ptyp_constr "Hashtbl.t" (typing/parmatch.mli[117,4584+33]..[117,4584+42])
                [
                  core_type (typing/parmatch.mli[117,4584+6]..[117,4584+12])
                    Ptyp_constr "string" (typing/parmatch.mli[117,4584+6]..[117,4584+12])
                    []
                  core_type (typing/parmatch.mli[117,4584+14]..[117,4584+31])
                    Ptyp_constr "label_description" (typing/parmatch.mli[117,4584+14]..[117,4584+31])
                    []
                ]
              core_type (typing/parmatch.mli[118,4630+5]..[118,4630+40])
                Ptyp_arrow
                Nolabel
                core_type (typing/parmatch.mli[118,4630+5]..[118,4630+22])
                  Ptyp_constr "Parsetree.pattern" (typing/parmatch.mli[118,4630+5]..[118,4630+22])
                  []
                core_type (typing/parmatch.mli[118,4630+26]..[118,4630+40])
                  Ptyp_constr "option" (typing/parmatch.mli[118,4630+34]..[118,4630+40])
                  [
                    core_type (typing/parmatch.mli[118,4630+26]..[118,4630+33])
                      Ptyp_constr "pattern" (typing/parmatch.mli[118,4630+26]..[118,4630+33])
                      []
                  ]
        core_type (typing/parmatch.mli[119,4675+4]..[119,4675+27])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[119,4675+4]..[119,4675+19])
            Ptyp_constr "list" (typing/parmatch.mli[119,4675+15]..[119,4675+19])
            [
              core_type (typing/parmatch.mli[119,4675+4]..[119,4675+14])
                Ptyp_constr "case" (typing/parmatch.mli[119,4675+10]..[119,4675+14])
                [
                  core_type (typing/parmatch.mli[119,4675+4]..[119,4675+9])
                    Ptyp_constr "value" (typing/parmatch.mli[119,4675+4]..[119,4675+9])
                    []
                ]
            ]
          core_type (typing/parmatch.mli[119,4675+23]..[119,4675+27])
            Ptyp_constr "unit" (typing/parmatch.mli[119,4675+23]..[119,4675+27])
            []
      []
  signature_item (typing/parmatch.mli[122,4731+0]..[122,4731+33])
    Psig_value
    value_description "irrefutable" (typing/parmatch.mli[122,4731+4]..[122,4731+15]) (typing/parmatch.mli[122,4731+0]..[122,4731+33])
      core_type (typing/parmatch.mli[122,4731+18]..[122,4731+33])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[122,4731+18]..[122,4731+25])
          Ptyp_constr "pattern" (typing/parmatch.mli[122,4731+18]..[122,4731+25])
          []
        core_type (typing/parmatch.mli[122,4731+29]..[122,4731+33])
          Ptyp_constr "bool" (typing/parmatch.mli[122,4731+29]..[122,4731+33])
          []
      []
  signature_item (typing/parmatch.mli[128,5013+0]..[128,5013+49])
    Psig_value
    value_description "inactive" (typing/parmatch.mli[128,5013+4]..[128,5013+12]) (typing/parmatch.mli[128,5013+0]..[128,5013+49])
      attribute "ocaml.doc"
        [
          structure_item (typing/parmatch.mli[124,4766+0]..[127,4998+14])
            Pstr_eval
            expression (typing/parmatch.mli[124,4766+0]..[127,4998+14])
              Pexp_constant PConst_string(" An inactive pattern is a pattern, matching against which can be duplicated,\n    erased or delayed without change in observable behavior of the program.\n    Patterns containing (lazy _) subpatterns or reads of mutable fields are\n    active. ",(typing/parmatch.mli[124,4766+0]..[127,4998+14]),None)
        ]
      core_type (typing/parmatch.mli[128,5013+15]..[128,5013+49])
        Ptyp_arrow
        Labelled "partial"
        core_type (typing/parmatch.mli[128,5013+23]..[128,5013+30])
          Ptyp_constr "partial" (typing/parmatch.mli[128,5013+23]..[128,5013+30])
          []
        core_type (typing/parmatch.mli[128,5013+34]..[128,5013+49])
          Ptyp_arrow
          Nolabel
          core_type (typing/parmatch.mli[128,5013+34]..[128,5013+41])
            Ptyp_constr "pattern" (typing/parmatch.mli[128,5013+34]..[128,5013+41])
            []
          core_type (typing/parmatch.mli[128,5013+45]..[128,5013+49])
            Ptyp_constr "bool" (typing/parmatch.mli[128,5013+45]..[128,5013+49])
            []
      []
  signature_item (typing/parmatch.mli[131,5089+0]..[131,5089+54])
    Psig_value
    value_description "check_ambiguous_bindings" (typing/parmatch.mli[131,5089+4]..[131,5089+28]) (typing/parmatch.mli[131,5089+0]..[131,5089+54])
      core_type (typing/parmatch.mli[131,5089+31]..[131,5089+54])
        Ptyp_arrow
        Nolabel
        core_type (typing/parmatch.mli[131,5089+31]..[131,5089+46])
          Ptyp_constr "list" (typing/parmatch.mli[131,5089+42]..[131,5089+46])
          [
            core_type (typing/parmatch.mli[131,5089+31]..[131,5089+41])
              Ptyp_constr "case" (typing/parmatch.mli[131,5089+37]..[131,5089+41])
              [
                core_type (typing/parmatch.mli[131,5089+31]..[131,5089+36])
                  Ptyp_constr "value" (typing/parmatch.mli[131,5089+31]..[131,5089+36])
                  []
              ]
          ]
        core_type (typing/parmatch.mli[131,5089+50]..[131,5089+54])
          Ptyp_constr "unit" (typing/parmatch.mli[131,5089+50]..[131,5089+54])
          []
      []
  signature_item (typing/parmatch.mli[134,5220+0]..[134,5220+28])
    Psig_value
    value_description "some_private_tag" (typing/parmatch.mli[134,5220+4]..[134,5220+20]) (typing/parmatch.mli[134,5220+0]..[134,5220+28])
      core_type (typing/parmatch.mli[134,5220+23]..[134,5220+28])
        Ptyp_constr "label" (typing/parmatch.mli[134,5220+23]..[134,5220+28])
        []
      []
]

