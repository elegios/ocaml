[
  structure_item (middle_end/flambda/augment_specialised_args.ml[17,1156+0]..[17,1156+42])
    Pstr_attribute "ocaml.warning"
    [
      structure_item (middle_end/flambda/augment_specialised_args.ml[17,1156+18]..[17,1156+41])
        Pstr_eval
        expression (middle_end/flambda/augment_specialised_args.ml[17,1156+18]..[17,1156+41])
          Pexp_constant PConst_string("+a-4-9-30-40-41-42-66",(middle_end/flambda/augment_specialised_args.ml[17,1156+19]..[17,1156+40]),None)
    ]
  structure_item (middle_end/flambda/augment_specialised_args.ml[18,1199+0]..[18,1199+37])
    Pstr_open Override
    module_expr (middle_end/flambda/augment_specialised_args.ml[18,1199+6]..[18,1199+37])
      Pmod_ident "Int_replace_polymorphic_compare" (middle_end/flambda/augment_specialised_args.ml[18,1199+6]..[18,1199+37])
  structure_item (middle_end/flambda/augment_specialised_args.ml[20,1238+0]..[20,1238+38])
    Pstr_module
    "E" (middle_end/flambda/augment_specialised_args.ml[20,1238+7]..[20,1238+8])
      module_expr (middle_end/flambda/augment_specialised_args.ml[20,1238+11]..[20,1238+38])
        Pmod_ident "Inline_and_simplify_aux.Env" (middle_end/flambda/augment_specialised_args.ml[20,1238+11]..[20,1238+38])
  structure_item (middle_end/flambda/augment_specialised_args.ml[21,1277+0]..[21,1277+32])
    Pstr_module
    "B" (middle_end/flambda/augment_specialised_args.ml[21,1277+7]..[21,1277+8])
      module_expr (middle_end/flambda/augment_specialised_args.ml[21,1277+11]..[21,1277+32])
        Pmod_ident "Inlining_cost.Benefit" (middle_end/flambda/augment_specialised_args.ml[21,1277+11]..[21,1277+32])
  structure_item (middle_end/flambda/augment_specialised_args.ml[23,1311+0]..[57,2405+3])
    Pstr_module
    "Definition" (middle_end/flambda/augment_specialised_args.ml[23,1311+7]..[23,1311+17])
      module_expr (middle_end/flambda/augment_specialised_args.ml[23,1311+20]..[57,2405+3])
        Pmod_structure
        [
          structure_item (middle_end/flambda/augment_specialised_args.ml[24,1338+2]..[26,1393+62])
            Pstr_type Rec
            [
              type_declaration "t" (middle_end/flambda/augment_specialised_args.ml[24,1338+7]..[24,1338+8]) (middle_end/flambda/augment_specialised_args.ml[24,1338+2]..[26,1393+62])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (middle_end/flambda/augment_specialised_args.ml[25,1349+4]..[25,1349+43])
                        "Existing_inner_free_var" (middle_end/flambda/augment_specialised_args.ml[25,1349+6]..[25,1349+29])
                        [
                          core_type (middle_end/flambda/augment_specialised_args.ml[25,1349+33]..[25,1349+43])
                            Ptyp_constr "Variable.t" (middle_end/flambda/augment_specialised_args.ml[25,1349+33]..[25,1349+43])
                            []
                        ]
                        None
                      (middle_end/flambda/augment_specialised_args.ml[26,1393+4]..[26,1393+62])
                        "Projection_from_existing_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[26,1393+6]..[26,1393+46])
                        [
                          core_type (middle_end/flambda/augment_specialised_args.ml[26,1393+50]..[26,1393+62])
                            Ptyp_constr "Projection.t" (middle_end/flambda/augment_specialised_args.ml[26,1393+50]..[26,1393+62])
                            []
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (middle_end/flambda/augment_specialised_args.ml[28,1457+2]..[56,2398+6])
            Pstr_include            module_expr (middle_end/flambda/augment_specialised_args.ml[28,1457+10]..[56,2398+6])
              Pmod_apply
              module_expr (middle_end/flambda/augment_specialised_args.ml[28,1457+10]..[28,1457+27])
                Pmod_ident "Identifiable.Make" (middle_end/flambda/augment_specialised_args.ml[28,1457+10]..[28,1457+27])
              module_expr (middle_end/flambda/augment_specialised_args.ml[28,1457+29]..[56,2398+5])
                Pmod_structure
                [
                  structure_item (middle_end/flambda/augment_specialised_args.ml[29,1493+4]..[29,1493+21])
                    Pstr_type Nonrec
                    [
                      type_declaration "t" (middle_end/flambda/augment_specialised_args.ml[29,1493+16]..[29,1493+17]) (middle_end/flambda/augment_specialised_args.ml[29,1493+4]..[29,1493+21])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (middle_end/flambda/augment_specialised_args.ml[29,1493+20]..[29,1493+21])
                              Ptyp_constr "t" (middle_end/flambda/augment_specialised_args.ml[29,1493+20]..[29,1493+21])
                              []
                    ]
                  structure_item (middle_end/flambda/augment_specialised_args.ml[31,1516+4]..[39,1867+41])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/augment_specialised_args.ml[31,1516+8]..[31,1516+15])
                          Ppat_var "compare" (middle_end/flambda/augment_specialised_args.ml[31,1516+8]..[31,1516+15])
                        expression (middle_end/flambda/augment_specialised_args.ml[31,1516+16]..[39,1867+41]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/augment_specialised_args.ml[31,1516+16]..[31,1516+18])
                            Ppat_var "t1" (middle_end/flambda/augment_specialised_args.ml[31,1516+16]..[31,1516+18])
                          expression (middle_end/flambda/augment_specialised_args.ml[31,1516+19]..[39,1867+41]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/augment_specialised_args.ml[31,1516+19]..[31,1516+21])
                              Ppat_var "t2" (middle_end/flambda/augment_specialised_args.ml[31,1516+19]..[31,1516+21])
                            expression (middle_end/flambda/augment_specialised_args.ml[32,1540+6]..[39,1867+41])
                              Pexp_match
                              expression (middle_end/flambda/augment_specialised_args.ml[32,1540+12]..[32,1540+18])
                                Pexp_tuple
                                [
                                  expression (middle_end/flambda/augment_specialised_args.ml[32,1540+12]..[32,1540+14])
                                    Pexp_ident "t1" (middle_end/flambda/augment_specialised_args.ml[32,1540+12]..[32,1540+14])
                                  expression (middle_end/flambda/augment_specialised_args.ml[32,1540+16]..[32,1540+18])
                                    Pexp_ident "t2" (middle_end/flambda/augment_specialised_args.ml[32,1540+16]..[32,1540+18])
                                ]
                              [
                                <case>
                                  pattern (middle_end/flambda/augment_specialised_args.ml[33,1564+8]..[33,1564+66])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/augment_specialised_args.ml[33,1564+8]..[33,1564+36])
                                        Ppat_construct "Existing_inner_free_var" (middle_end/flambda/augment_specialised_args.ml[33,1564+8]..[33,1564+31])
                                        Some
                                          []
                                          pattern (middle_end/flambda/augment_specialised_args.ml[33,1564+32]..[33,1564+36])
                                            Ppat_var "var1" (middle_end/flambda/augment_specialised_args.ml[33,1564+32]..[33,1564+36])
                                      pattern (middle_end/flambda/augment_specialised_args.ml[33,1564+38]..[33,1564+66])
                                        Ppat_construct "Existing_inner_free_var" (middle_end/flambda/augment_specialised_args.ml[33,1564+38]..[33,1564+61])
                                        Some
                                          []
                                          pattern (middle_end/flambda/augment_specialised_args.ml[33,1564+62]..[33,1564+66])
                                            Ppat_var "var2" (middle_end/flambda/augment_specialised_args.ml[33,1564+62]..[33,1564+66])
                                    ]
                                  expression (middle_end/flambda/augment_specialised_args.ml[34,1634+8]..[34,1634+34])
                                    Pexp_apply
                                    expression (middle_end/flambda/augment_specialised_args.ml[34,1634+8]..[34,1634+24])
                                      Pexp_ident "Variable.compare" (middle_end/flambda/augment_specialised_args.ml[34,1634+8]..[34,1634+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[34,1634+25]..[34,1634+29])
                                          Pexp_ident "var1" (middle_end/flambda/augment_specialised_args.ml[34,1634+25]..[34,1634+29])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[34,1634+30]..[34,1634+34])
                                          Pexp_ident "var2" (middle_end/flambda/augment_specialised_args.ml[34,1634+30]..[34,1634+34])
                                    ]
                                <case>
                                  pattern (middle_end/flambda/augment_specialised_args.ml[35,1669+8]..[36,1725+56])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/augment_specialised_args.ml[35,1669+8]..[35,1669+54])
                                        Ppat_construct "Projection_from_existing_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[35,1669+8]..[35,1669+48])
                                        Some
                                          []
                                          pattern (middle_end/flambda/augment_specialised_args.ml[35,1669+49]..[35,1669+54])
                                            Ppat_var "proj1" (middle_end/flambda/augment_specialised_args.ml[35,1669+49]..[35,1669+54])
                                      pattern (middle_end/flambda/augment_specialised_args.ml[36,1725+10]..[36,1725+56])
                                        Ppat_construct "Projection_from_existing_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[36,1725+10]..[36,1725+50])
                                        Some
                                          []
                                          pattern (middle_end/flambda/augment_specialised_args.ml[36,1725+51]..[36,1725+56])
                                            Ppat_var "proj2" (middle_end/flambda/augment_specialised_args.ml[36,1725+51]..[36,1725+56])
                                    ]
                                  expression (middle_end/flambda/augment_specialised_args.ml[37,1785+8]..[37,1785+38])
                                    Pexp_apply
                                    expression (middle_end/flambda/augment_specialised_args.ml[37,1785+8]..[37,1785+26])
                                      Pexp_ident "Projection.compare" (middle_end/flambda/augment_specialised_args.ml[37,1785+8]..[37,1785+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[37,1785+27]..[37,1785+32])
                                          Pexp_ident "proj1" (middle_end/flambda/augment_specialised_args.ml[37,1785+27]..[37,1785+32])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[37,1785+33]..[37,1785+38])
                                          Pexp_ident "proj2" (middle_end/flambda/augment_specialised_args.ml[37,1785+33]..[37,1785+38])
                                    ]
                                <case>
                                  pattern (middle_end/flambda/augment_specialised_args.ml[38,1824+8]..[38,1824+36])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/augment_specialised_args.ml[38,1824+8]..[38,1824+33])
                                        Ppat_construct "Existing_inner_free_var" (middle_end/flambda/augment_specialised_args.ml[38,1824+8]..[38,1824+31])
                                        Some
                                          []
                                          pattern (middle_end/flambda/augment_specialised_args.ml[38,1824+32]..[38,1824+33])
                                            Ppat_any
                                      pattern (middle_end/flambda/augment_specialised_args.ml[38,1824+35]..[38,1824+36])
                                        Ppat_any
                                    ]
                                  expression (middle_end/flambda/augment_specialised_args.ml[38,1824+40]..[38,1824+42])
                                    Pexp_constant PConst_int (-1,None)
                                <case>
                                  pattern (middle_end/flambda/augment_specialised_args.ml[39,1867+8]..[39,1867+36])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/augment_specialised_args.ml[39,1867+8]..[39,1867+9])
                                        Ppat_any
                                      pattern (middle_end/flambda/augment_specialised_args.ml[39,1867+11]..[39,1867+36])
                                        Ppat_construct "Existing_inner_free_var" (middle_end/flambda/augment_specialised_args.ml[39,1867+11]..[39,1867+34])
                                        Some
                                          []
                                          pattern (middle_end/flambda/augment_specialised_args.ml[39,1867+35]..[39,1867+36])
                                            Ppat_any
                                    ]
                                  expression (middle_end/flambda/augment_specialised_args.ml[39,1867+40]..[39,1867+41])
                                    Pexp_constant PConst_int (1,None)
                              ]
                    ]
                  structure_item (middle_end/flambda/augment_specialised_args.ml[41,1910+4]..[42,1932+25])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/augment_specialised_args.ml[41,1910+8]..[41,1910+13])
                          Ppat_var "equal" (middle_end/flambda/augment_specialised_args.ml[41,1910+8]..[41,1910+13])
                        expression (middle_end/flambda/augment_specialised_args.ml[41,1910+14]..[42,1932+25]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/augment_specialised_args.ml[41,1910+14]..[41,1910+16])
                            Ppat_var "t1" (middle_end/flambda/augment_specialised_args.ml[41,1910+14]..[41,1910+16])
                          expression (middle_end/flambda/augment_specialised_args.ml[41,1910+17]..[42,1932+25]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/augment_specialised_args.ml[41,1910+17]..[41,1910+19])
                              Ppat_var "t2" (middle_end/flambda/augment_specialised_args.ml[41,1910+17]..[41,1910+19])
                            expression (middle_end/flambda/augment_specialised_args.ml[42,1932+6]..[42,1932+25])
                              Pexp_apply
                              expression (middle_end/flambda/augment_specialised_args.ml[42,1932+22]..[42,1932+23])
                                Pexp_ident "=" (middle_end/flambda/augment_specialised_args.ml[42,1932+22]..[42,1932+23])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/augment_specialised_args.ml[42,1932+6]..[42,1932+21])
                                    Pexp_apply
                                    expression (middle_end/flambda/augment_specialised_args.ml[42,1932+7]..[42,1932+14])
                                      Pexp_ident "compare" (middle_end/flambda/augment_specialised_args.ml[42,1932+7]..[42,1932+14])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[42,1932+15]..[42,1932+17])
                                          Pexp_ident "t1" (middle_end/flambda/augment_specialised_args.ml[42,1932+15]..[42,1932+17])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[42,1932+18]..[42,1932+20])
                                          Pexp_ident "t2" (middle_end/flambda/augment_specialised_args.ml[42,1932+18]..[42,1932+20])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/augment_specialised_args.ml[42,1932+24]..[42,1932+25])
                                    Pexp_constant PConst_int (0,None)
                              ]
                    ]
                  structure_item (middle_end/flambda/augment_specialised_args.ml[44,1959+4]..[44,1959+27])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/augment_specialised_args.ml[44,1959+8]..[44,1959+12])
                          Ppat_var "hash" (middle_end/flambda/augment_specialised_args.ml[44,1959+8]..[44,1959+12])
                        expression (middle_end/flambda/augment_specialised_args.ml[44,1959+15]..[44,1959+27])
                          Pexp_ident "Hashtbl.hash" (middle_end/flambda/augment_specialised_args.ml[44,1959+15]..[44,1959+27])
                    ]
                  structure_item (middle_end/flambda/augment_specialised_args.ml[46,1988+4]..[53,2289+37])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/augment_specialised_args.ml[46,1988+8]..[46,1988+13])
                          Ppat_var "print" (middle_end/flambda/augment_specialised_args.ml[46,1988+8]..[46,1988+13])
                        expression (middle_end/flambda/augment_specialised_args.ml[46,1988+14]..[53,2289+37]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/augment_specialised_args.ml[46,1988+14]..[46,1988+17])
                            Ppat_var "ppf" (middle_end/flambda/augment_specialised_args.ml[46,1988+14]..[46,1988+17])
                          expression (middle_end/flambda/augment_specialised_args.ml[46,1988+18]..[53,2289+37]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/augment_specialised_args.ml[46,1988+18]..[46,1988+19])
                              Ppat_var "t" (middle_end/flambda/augment_specialised_args.ml[46,1988+18]..[46,1988+19])
                            expression (middle_end/flambda/augment_specialised_args.ml[47,2010+6]..[53,2289+37])
                              Pexp_match
                              expression (middle_end/flambda/augment_specialised_args.ml[47,2010+12]..[47,2010+13])
                                Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[47,2010+12]..[47,2010+13])
                              [
                                <case>
                                  pattern (middle_end/flambda/augment_specialised_args.ml[48,2029+8]..[48,2029+35])
                                    Ppat_construct "Existing_inner_free_var" (middle_end/flambda/augment_specialised_args.ml[48,2029+8]..[48,2029+31])
                                    Some
                                      []
                                      pattern (middle_end/flambda/augment_specialised_args.ml[48,2029+32]..[48,2029+35])
                                        Ppat_var "var" (middle_end/flambda/augment_specialised_args.ml[48,2029+32]..[48,2029+35])
                                  expression (middle_end/flambda/augment_specialised_args.ml[49,2068+8]..[50,2124+28])
                                    Pexp_apply
                                    expression (middle_end/flambda/augment_specialised_args.ml[49,2068+8]..[49,2068+22])
                                      Pexp_ident "Format.fprintf" (middle_end/flambda/augment_specialised_args.ml[49,2068+8]..[49,2068+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[49,2068+23]..[49,2068+26])
                                          Pexp_ident "ppf" (middle_end/flambda/augment_specialised_args.ml[49,2068+23]..[49,2068+26])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[49,2068+27]..[49,2068+55])
                                          Pexp_constant PConst_string("Existing_inner_free_var %a",(middle_end/flambda/augment_specialised_args.ml[49,2068+28]..[49,2068+54]),None)
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[50,2124+10]..[50,2124+24])
                                          Pexp_ident "Variable.print" (middle_end/flambda/augment_specialised_args.ml[50,2124+10]..[50,2124+24])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[50,2124+25]..[50,2124+28])
                                          Pexp_ident "var" (middle_end/flambda/augment_specialised_args.ml[50,2124+25]..[50,2124+28])
                                    ]
                                <case>
                                  pattern (middle_end/flambda/augment_specialised_args.ml[51,2153+8]..[51,2153+59])
                                    Ppat_construct "Projection_from_existing_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[51,2153+8]..[51,2153+48])
                                    Some
                                      []
                                      pattern (middle_end/flambda/augment_specialised_args.ml[51,2153+49]..[51,2153+59])
                                        Ppat_var "projection" (middle_end/flambda/augment_specialised_args.ml[51,2153+49]..[51,2153+59])
                                  expression (middle_end/flambda/augment_specialised_args.ml[52,2216+8]..[53,2289+37])
                                    Pexp_apply
                                    expression (middle_end/flambda/augment_specialised_args.ml[52,2216+8]..[52,2216+22])
                                      Pexp_ident "Format.fprintf" (middle_end/flambda/augment_specialised_args.ml[52,2216+8]..[52,2216+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[52,2216+23]..[52,2216+26])
                                          Pexp_ident "ppf" (middle_end/flambda/augment_specialised_args.ml[52,2216+23]..[52,2216+26])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[52,2216+27]..[52,2216+72])
                                          Pexp_constant PConst_string("Projection_from_existing_specialised_arg %a",(middle_end/flambda/augment_specialised_args.ml[52,2216+28]..[52,2216+71]),None)
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[53,2289+10]..[53,2289+26])
                                          Pexp_ident "Projection.print" (middle_end/flambda/augment_specialised_args.ml[53,2289+10]..[53,2289+26])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[53,2289+27]..[53,2289+37])
                                          Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[53,2289+27]..[53,2289+37])
                                    ]
                              ]
                    ]
                  structure_item (middle_end/flambda/augment_specialised_args.ml[55,2328+4]..[55,2328+69])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/augment_specialised_args.ml[55,2328+8]..[55,2328+14])
                          Ppat_var "output" (middle_end/flambda/augment_specialised_args.ml[55,2328+8]..[55,2328+14])
                        expression (middle_end/flambda/augment_specialised_args.ml[55,2328+15]..[55,2328+69]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/augment_specialised_args.ml[55,2328+15]..[55,2328+16])
                            Ppat_any
                          expression (middle_end/flambda/augment_specialised_args.ml[55,2328+17]..[55,2328+69]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/augment_specialised_args.ml[55,2328+17]..[55,2328+18])
                              Ppat_any
                            expression (middle_end/flambda/augment_specialised_args.ml[55,2328+21]..[55,2328+69])
                              Pexp_apply
                              expression (middle_end/flambda/augment_specialised_args.ml[55,2328+21]..[55,2328+29])
                                Pexp_ident "failwith" (middle_end/flambda/augment_specialised_args.ml[55,2328+21]..[55,2328+29])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/augment_specialised_args.ml[55,2328+30]..[55,2328+69])
                                    Pexp_constant PConst_string("Definition.output not yet implemented",(middle_end/flambda/augment_specialised_args.ml[55,2328+31]..[55,2328+68]),None)
                              ]
                    ]
                ]
        ]
  structure_item (middle_end/flambda/augment_specialised_args.ml[59,2410+0]..[97,3697+3])
    Pstr_module
    "What_to_specialise" (middle_end/flambda/augment_specialised_args.ml[59,2410+7]..[59,2410+25])
      module_expr (middle_end/flambda/augment_specialised_args.ml[59,2410+28]..[97,3697+3])
        Pmod_structure
        [
          structure_item (middle_end/flambda/augment_specialised_args.ml[60,2445+2]..[65,2671+3])
            Pstr_type Rec
            [
              type_declaration "t" (middle_end/flambda/augment_specialised_args.ml[60,2445+7]..[60,2445+8]) (middle_end/flambda/augment_specialised_args.ml[60,2445+2]..[65,2671+3])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (middle_end/flambda/augment_specialised_args.ml[62,2513+4]..[62,2513+56])
                        Immutable
                        "definitions" (middle_end/flambda/augment_specialised_args.ml[62,2513+4]..[62,2513+15])                        core_type (middle_end/flambda/augment_specialised_args.ml[62,2513+18]..[62,2513+55])
                          Ptyp_constr "Variable.Pair.Map.t" (middle_end/flambda/augment_specialised_args.ml[62,2513+36]..[62,2513+55])
                          [
                            core_type (middle_end/flambda/augment_specialised_args.ml[62,2513+18]..[62,2513+35])
                              Ptyp_constr "list" (middle_end/flambda/augment_specialised_args.ml[62,2513+31]..[62,2513+35])
                              [
                                core_type (middle_end/flambda/augment_specialised_args.ml[62,2513+18]..[62,2513+30])
                                  Ptyp_constr "Definition.t" (middle_end/flambda/augment_specialised_args.ml[62,2513+18]..[62,2513+30])
                                  []
                              ]
                          ]
                      (middle_end/flambda/augment_specialised_args.ml[63,2570+4]..[63,2570+46])
                        Immutable
                        "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[63,2570+4]..[63,2570+19])                        core_type (middle_end/flambda/augment_specialised_args.ml[63,2570+22]..[63,2570+45])
                          Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/augment_specialised_args.ml[63,2570+22]..[63,2570+45])
                          []
                      (middle_end/flambda/augment_specialised_args.ml[64,2617+4]..[64,2617+53])
                        Immutable
                        "make_direct_call_surrogates_for" (middle_end/flambda/augment_specialised_args.ml[64,2617+4]..[64,2617+35])                        core_type (middle_end/flambda/augment_specialised_args.ml[64,2617+38]..[64,2617+52])
                          Ptyp_constr "Variable.Set.t" (middle_end/flambda/augment_specialised_args.ml[64,2617+38]..[64,2617+52])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (middle_end/flambda/augment_specialised_args.ml[67,2676+2]..[71,2836+5])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/augment_specialised_args.ml[67,2676+6]..[67,2676+12])
                  Ppat_var "create" (middle_end/flambda/augment_specialised_args.ml[67,2676+6]..[67,2676+12])
                expression (middle_end/flambda/augment_specialised_args.ml[67,2676+13]..[71,2836+5]) ghost
                  Pexp_fun
                  Labelled "set_of_closures"
                  None
                  pattern (middle_end/flambda/augment_specialised_args.ml[67,2676+14]..[67,2676+29])
                    Ppat_var "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[67,2676+14]..[67,2676+29])
                  expression (middle_end/flambda/augment_specialised_args.ml[68,2708+4]..[71,2836+5])
                    Pexp_record
                    [
                      "definitions" (middle_end/flambda/augment_specialised_args.ml[68,2708+6]..[68,2708+17])
                        expression (middle_end/flambda/augment_specialised_args.ml[68,2708+20]..[68,2708+43])
                          Pexp_ident "Variable.Pair.Map.empty" (middle_end/flambda/augment_specialised_args.ml[68,2708+20]..[68,2708+43])
                      "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[69,2753+6]..[69,2753+21]) ghost
                        expression (middle_end/flambda/augment_specialised_args.ml[69,2753+6]..[69,2753+21])
                          Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[69,2753+6]..[69,2753+21])
                      "make_direct_call_surrogates_for" (middle_end/flambda/augment_specialised_args.ml[70,2776+6]..[70,2776+37])
                        expression (middle_end/flambda/augment_specialised_args.ml[70,2776+40]..[70,2776+58])
                          Pexp_ident "Variable.Set.empty" (middle_end/flambda/augment_specialised_args.ml[70,2776+40]..[70,2776+58])
                    ]
                    None
            ]
          structure_item (middle_end/flambda/augment_specialised_args.ml[73,2843+2]..[84,3213+27])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/augment_specialised_args.ml[73,2843+6]..[73,2843+25])
                  Ppat_var "new_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[73,2843+6]..[73,2843+25])
                expression (middle_end/flambda/augment_specialised_args.ml[73,2843+26]..[84,3213+27]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/augment_specialised_args.ml[73,2843+26]..[73,2843+27])
                    Ppat_var "t" (middle_end/flambda/augment_specialised_args.ml[73,2843+26]..[73,2843+27])
                  expression (middle_end/flambda/augment_specialised_args.ml[73,2843+28]..[84,3213+27]) ghost
                    Pexp_fun
                    Labelled "fun_var"
                    None
                    pattern (middle_end/flambda/augment_specialised_args.ml[73,2843+29]..[73,2843+36])
                      Ppat_var "fun_var" (middle_end/flambda/augment_specialised_args.ml[73,2843+29]..[73,2843+36])
                    expression (middle_end/flambda/augment_specialised_args.ml[73,2843+37]..[84,3213+27]) ghost
                      Pexp_fun
                      Labelled "group"
                      None
                      pattern (middle_end/flambda/augment_specialised_args.ml[73,2843+38]..[73,2843+43])
                        Ppat_var "group" (middle_end/flambda/augment_specialised_args.ml[73,2843+38]..[73,2843+43])
                      expression (middle_end/flambda/augment_specialised_args.ml[73,2843+44]..[84,3213+27]) ghost
                        Pexp_fun
                        Labelled "definition"
                        None
                        pattern (middle_end/flambda/augment_specialised_args.ml[73,2843+45]..[73,2843+55])
                          Ppat_var "definition" (middle_end/flambda/augment_specialised_args.ml[73,2843+45]..[73,2843+55])
                        expression (middle_end/flambda/augment_specialised_args.ml[74,2901+4]..[84,3213+27])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/augment_specialised_args.ml[74,2901+8]..[74,2901+11])
                                Ppat_var "key" (middle_end/flambda/augment_specialised_args.ml[74,2901+8]..[74,2901+11])
                              expression (middle_end/flambda/augment_specialised_args.ml[74,2901+14]..[74,2901+28])
                                Pexp_tuple
                                [
                                  expression (middle_end/flambda/augment_specialised_args.ml[74,2901+14]..[74,2901+21])
                                    Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[74,2901+14]..[74,2901+21])
                                  expression (middle_end/flambda/augment_specialised_args.ml[74,2901+23]..[74,2901+28])
                                    Pexp_ident "group" (middle_end/flambda/augment_specialised_args.ml[74,2901+23]..[74,2901+28])
                                ]
                          ]
                          expression (middle_end/flambda/augment_specialised_args.ml[75,2933+4]..[84,3213+27])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/augment_specialised_args.ml[75,2933+8]..[75,2933+19])
                                  Ppat_var "definitions" (middle_end/flambda/augment_specialised_args.ml[75,2933+8]..[75,2933+19])
                                expression (middle_end/flambda/augment_specialised_args.ml[76,2955+6]..[78,3047+34])
                                  Pexp_match
                                  expression (middle_end/flambda/augment_specialised_args.ml[76,2955+12]..[76,2955+52])
                                    Pexp_apply
                                    expression (middle_end/flambda/augment_specialised_args.ml[76,2955+12]..[76,2955+34])
                                      Pexp_ident "Variable.Pair.Map.find" (middle_end/flambda/augment_specialised_args.ml[76,2955+12]..[76,2955+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[76,2955+35]..[76,2955+38])
                                          Pexp_ident "key" (middle_end/flambda/augment_specialised_args.ml[76,2955+35]..[76,2955+38])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[76,2955+39]..[76,2955+52])
                                          Pexp_field
                                          expression (middle_end/flambda/augment_specialised_args.ml[76,2955+39]..[76,2955+40])
                                            Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[76,2955+39]..[76,2955+40])
                                          "definitions" (middle_end/flambda/augment_specialised_args.ml[76,2955+41]..[76,2955+52])
                                    ]
                                  [
                                    <case>
                                      pattern (middle_end/flambda/augment_specialised_args.ml[77,3013+8]..[77,3013+27])
                                        Ppat_exception
                                        pattern (middle_end/flambda/augment_specialised_args.ml[77,3013+18]..[77,3013+27])
                                          Ppat_construct "Not_found" (middle_end/flambda/augment_specialised_args.ml[77,3013+18]..[77,3013+27])
                                          None
                                      expression (middle_end/flambda/augment_specialised_args.ml[77,3013+31]..[77,3013+33])
                                        Pexp_construct "[]" (middle_end/flambda/augment_specialised_args.ml[77,3013+31]..[77,3013+33])
                                        None
                                    <case>
                                      pattern (middle_end/flambda/augment_specialised_args.ml[78,3047+8]..[78,3047+19])
                                        Ppat_var "definitions" (middle_end/flambda/augment_specialised_args.ml[78,3047+8]..[78,3047+19])
                                      expression (middle_end/flambda/augment_specialised_args.ml[78,3047+23]..[78,3047+34])
                                        Pexp_ident "definitions" (middle_end/flambda/augment_specialised_args.ml[78,3047+23]..[78,3047+34])
                                  ]
                            ]
                            expression (middle_end/flambda/augment_specialised_args.ml[80,3089+4]..[84,3213+27])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/augment_specialised_args.ml[80,3089+8]..[80,3089+19])
                                    Ppat_var "definitions" (middle_end/flambda/augment_specialised_args.ml[80,3089+8]..[80,3089+19])
                                  expression (middle_end/flambda/augment_specialised_args.ml[81,3111+6]..[82,3184+21])
                                    Pexp_apply
                                    expression (middle_end/flambda/augment_specialised_args.ml[81,3111+6]..[81,3111+27])
                                      Pexp_ident "Variable.Pair.Map.add" (middle_end/flambda/augment_specialised_args.ml[81,3111+6]..[81,3111+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[81,3111+28]..[81,3111+44])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/augment_specialised_args.ml[81,3111+29]..[81,3111+36])
                                              Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[81,3111+29]..[81,3111+36])
                                            expression (middle_end/flambda/augment_specialised_args.ml[81,3111+38]..[81,3111+43])
                                              Pexp_ident "group" (middle_end/flambda/augment_specialised_args.ml[81,3111+38]..[81,3111+43])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[81,3111+45]..[81,3111+72])
                                          Pexp_construct "::" (middle_end/flambda/augment_specialised_args.ml[81,3111+57]..[81,3111+59])
                                          Some
                                            expression (middle_end/flambda/augment_specialised_args.ml[81,3111+46]..[81,3111+71]) ghost
                                              Pexp_tuple
                                              [
                                                expression (middle_end/flambda/augment_specialised_args.ml[81,3111+46]..[81,3111+56])
                                                  Pexp_ident "definition" (middle_end/flambda/augment_specialised_args.ml[81,3111+46]..[81,3111+56])
                                                expression (middle_end/flambda/augment_specialised_args.ml[81,3111+60]..[81,3111+71])
                                                  Pexp_ident "definitions" (middle_end/flambda/augment_specialised_args.ml[81,3111+60]..[81,3111+71])
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[82,3184+8]..[82,3184+21])
                                          Pexp_field
                                          expression (middle_end/flambda/augment_specialised_args.ml[82,3184+8]..[82,3184+9])
                                            Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[82,3184+8]..[82,3184+9])
                                          "definitions" (middle_end/flambda/augment_specialised_args.ml[82,3184+10]..[82,3184+21])
                                    ]
                              ]
                              expression (middle_end/flambda/augment_specialised_args.ml[84,3213+4]..[84,3213+27])
                                Pexp_record
                                [
                                  "definitions" (middle_end/flambda/augment_specialised_args.ml[84,3213+13]..[84,3213+24]) ghost
                                    expression (middle_end/flambda/augment_specialised_args.ml[84,3213+13]..[84,3213+24])
                                      Pexp_ident "definitions" (middle_end/flambda/augment_specialised_args.ml[84,3213+13]..[84,3213+24])
                                ]
                                Some
                                  expression (middle_end/flambda/augment_specialised_args.ml[84,3213+6]..[84,3213+7])
                                    Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[84,3213+6]..[84,3213+7])
            ]
          structure_item (middle_end/flambda/augment_specialised_args.ml[86,3242+2]..[96,3689+7])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/augment_specialised_args.ml[86,3242+6]..[86,3242+36])
                  Ppat_var "make_direct_call_surrogate_for" (middle_end/flambda/augment_specialised_args.ml[86,3242+6]..[86,3242+36])
                expression (middle_end/flambda/augment_specialised_args.ml[86,3242+37]..[96,3689+7]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/augment_specialised_args.ml[86,3242+37]..[86,3242+38])
                    Ppat_var "t" (middle_end/flambda/augment_specialised_args.ml[86,3242+37]..[86,3242+38])
                  expression (middle_end/flambda/augment_specialised_args.ml[86,3242+39]..[96,3689+7]) ghost
                    Pexp_fun
                    Labelled "fun_var"
                    None
                    pattern (middle_end/flambda/augment_specialised_args.ml[86,3242+40]..[86,3242+47])
                      Ppat_var "fun_var" (middle_end/flambda/augment_specialised_args.ml[86,3242+40]..[86,3242+47])
                    expression (middle_end/flambda/augment_specialised_args.ml[87,3292+4]..[96,3689+7])
                      Pexp_match
                      expression (middle_end/flambda/augment_specialised_args.ml[87,3292+10]..[87,3292+73])
                        Pexp_apply
                        expression (middle_end/flambda/augment_specialised_args.ml[87,3292+10]..[87,3292+27])
                          Pexp_ident "Variable.Map.find" (middle_end/flambda/augment_specialised_args.ml[87,3292+10]..[87,3292+27])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/augment_specialised_args.ml[87,3292+28]..[87,3292+35])
                              Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[87,3292+28]..[87,3292+35])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/augment_specialised_args.ml[87,3292+36]..[87,3292+73])
                              Pexp_field
                              expression (middle_end/flambda/augment_specialised_args.ml[87,3292+36]..[87,3292+68])
                                Pexp_field
                                expression (middle_end/flambda/augment_specialised_args.ml[87,3292+36]..[87,3292+53])
                                  Pexp_field
                                  expression (middle_end/flambda/augment_specialised_args.ml[87,3292+36]..[87,3292+37])
                                    Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[87,3292+36]..[87,3292+37])
                                  "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[87,3292+38]..[87,3292+53])
                                "function_decls" (middle_end/flambda/augment_specialised_args.ml[87,3292+54]..[87,3292+68])
                              "funs" (middle_end/flambda/augment_specialised_args.ml[87,3292+69]..[87,3292+73])
                        ]
                      [
                        <case>
                          pattern (middle_end/flambda/augment_specialised_args.ml[88,3371+6]..[88,3371+25])
                            Ppat_exception
                            pattern (middle_end/flambda/augment_specialised_args.ml[88,3371+16]..[88,3371+25])
                              Ppat_construct "Not_found" (middle_end/flambda/augment_specialised_args.ml[88,3371+16]..[88,3371+25])
                              None
                          expression (middle_end/flambda/augment_specialised_args.ml[89,3400+6]..[91,3520+30])
                            Pexp_apply
                            expression (middle_end/flambda/augment_specialised_args.ml[89,3400+6]..[89,3400+23])
                              Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/augment_specialised_args.ml[89,3400+6]..[89,3400+23])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/augment_specialised_args.ml[89,3400+24]..[90,3478+41])
                                  Pexp_constant PConst_string("use_direct_call_surrogate_for: %a is not a fun_var from the given set of closures",(middle_end/flambda/augment_specialised_args.ml[89,3400+25]..[90,3478+40]),None)
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/augment_specialised_args.ml[91,3520+8]..[91,3520+22])
                                  Pexp_ident "Variable.print" (middle_end/flambda/augment_specialised_args.ml[91,3520+8]..[91,3520+22])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/augment_specialised_args.ml[91,3520+23]..[91,3520+30])
                                  Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[91,3520+23]..[91,3520+30])
                            ]
                        <case>
                          pattern (middle_end/flambda/augment_specialised_args.ml[92,3551+6]..[92,3551+7])
                            Ppat_any
                          expression (middle_end/flambda/augment_specialised_args.ml[93,3562+6]..[96,3689+7])
                            Pexp_record
                            [
                              "make_direct_call_surrogates_for" (middle_end/flambda/augment_specialised_args.ml[94,3577+8]..[94,3577+39])
                                expression (middle_end/flambda/augment_specialised_args.ml[95,3619+10]..[95,3619+68])
                                  Pexp_apply
                                  expression (middle_end/flambda/augment_specialised_args.ml[95,3619+10]..[95,3619+26])
                                    Pexp_ident "Variable.Set.add" (middle_end/flambda/augment_specialised_args.ml[95,3619+10]..[95,3619+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/augment_specialised_args.ml[95,3619+27]..[95,3619+34])
                                        Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[95,3619+27]..[95,3619+34])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/augment_specialised_args.ml[95,3619+35]..[95,3619+68])
                                        Pexp_field
                                        expression (middle_end/flambda/augment_specialised_args.ml[95,3619+35]..[95,3619+36])
                                          Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[95,3619+35]..[95,3619+36])
                                        "make_direct_call_surrogates_for" (middle_end/flambda/augment_specialised_args.ml[95,3619+37]..[95,3619+68])
                                  ]
                            ]
                            Some
                              expression (middle_end/flambda/augment_specialised_args.ml[93,3562+8]..[93,3562+9])
                                Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[93,3562+8]..[93,3562+9])
                      ]
            ]
        ]
  structure_item (middle_end/flambda/augment_specialised_args.ml[99,3702+0]..[99,3702+29])
    Pstr_module
    "W" (middle_end/flambda/augment_specialised_args.ml[99,3702+7]..[99,3702+8])
      module_expr (middle_end/flambda/augment_specialised_args.ml[99,3702+11]..[99,3702+29])
        Pmod_ident "What_to_specialise" (middle_end/flambda/augment_specialised_args.ml[99,3702+11]..[99,3702+29])
  structure_item (middle_end/flambda/augment_specialised_args.ml[101,3733+0]..[108,3920+3])
    Pstr_modtype "S" (middle_end/flambda/augment_specialised_args.ml[101,3733+12]..[101,3733+13])
      module_type (middle_end/flambda/augment_specialised_args.ml[101,3733+16]..[108,3920+3])
        Pmty_signature
        [
          signature_item (middle_end/flambda/augment_specialised_args.ml[102,3753+2]..[102,3753+24])
            Psig_value
            value_description "pass_name" (middle_end/flambda/augment_specialised_args.ml[102,3753+6]..[102,3753+15]) (middle_end/flambda/augment_specialised_args.ml[102,3753+2]..[102,3753+24])
              core_type (middle_end/flambda/augment_specialised_args.ml[102,3753+18]..[102,3753+24])
                Ptyp_constr "string" (middle_end/flambda/augment_specialised_args.ml[102,3753+18]..[102,3753+24])
                []
              []
          signature_item (middle_end/flambda/augment_specialised_args.ml[104,3779+2]..[107,3892+27])
            Psig_value
            value_description "what_to_specialise" (middle_end/flambda/augment_specialised_args.ml[104,3779+6]..[104,3779+24]) (middle_end/flambda/augment_specialised_args.ml[104,3779+2]..[107,3892+27])
              core_type (middle_end/flambda/augment_specialised_args.ml[105,3804+7]..[107,3892+27])
                Ptyp_arrow
                Labelled "env"
                core_type (middle_end/flambda/augment_specialised_args.ml[105,3804+11]..[105,3804+40])
                  Ptyp_constr "Inline_and_simplify_aux.Env.t" (middle_end/flambda/augment_specialised_args.ml[105,3804+11]..[105,3804+40])
                  []
                core_type (middle_end/flambda/augment_specialised_args.ml[106,3845+7]..[107,3892+27])
                  Ptyp_arrow
                  Labelled "set_of_closures"
                  core_type (middle_end/flambda/augment_specialised_args.ml[106,3845+23]..[106,3845+46])
                    Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/augment_specialised_args.ml[106,3845+23]..[106,3845+46])
                    []
                  core_type (middle_end/flambda/augment_specialised_args.ml[107,3892+7]..[107,3892+27])
                    Ptyp_constr "What_to_specialise.t" (middle_end/flambda/augment_specialised_args.ml[107,3892+7]..[107,3892+27])
                    []
              []
        ]
  structure_item (middle_end/flambda/augment_specialised_args.ml[110,3925+0]..[361,14892+3])
    Pstr_module
    "Processed_what_to_specialise" (middle_end/flambda/augment_specialised_args.ml[110,3925+7]..[110,3925+35])
      module_expr (middle_end/flambda/augment_specialised_args.ml[110,3925+38]..[361,14892+3])
        Pmod_structure
        [
          structure_item (middle_end/flambda/augment_specialised_args.ml[111,3970+2]..[120,4399+3])
            Pstr_type Rec
            [
              type_declaration "for_one_function" (middle_end/flambda/augment_specialised_args.ml[111,3970+7]..[111,3970+23]) (middle_end/flambda/augment_specialised_args.ml[111,3970+2]..[120,4399+3])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (middle_end/flambda/augment_specialised_args.ml[112,3998+4]..[112,3998+25])
                        Immutable
                        "fun_var" (middle_end/flambda/augment_specialised_args.ml[112,3998+4]..[112,3998+11])                        core_type (middle_end/flambda/augment_specialised_args.ml[112,3998+14]..[112,3998+24])
                          Ptyp_constr "Variable.t" (middle_end/flambda/augment_specialised_args.ml[112,3998+14]..[112,3998+24])
                          []
                      (middle_end/flambda/augment_specialised_args.ml[113,4024+4]..[113,4024+49])
                        Immutable
                        "function_decl" (middle_end/flambda/augment_specialised_args.ml[113,4024+4]..[113,4024+17])                        core_type (middle_end/flambda/augment_specialised_args.ml[113,4024+20]..[113,4024+48])
                          Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/augment_specialised_args.ml[113,4024+20]..[113,4024+48])
                          []
                      (middle_end/flambda/augment_specialised_args.ml[114,4074+4]..[114,4074+39])
                        Immutable
                        "make_direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[114,4074+4]..[114,4074+31])                        core_type (middle_end/flambda/augment_specialised_args.ml[114,4074+34]..[114,4074+38])
                          Ptyp_constr "bool" (middle_end/flambda/augment_specialised_args.ml[114,4074+34]..[114,4074+38])
                          []
                      (middle_end/flambda/augment_specialised_args.ml[115,4114+4]..[115,4114+76])
                        Immutable
                        "new_definitions_indexed_by_new_inner_vars" (middle_end/flambda/augment_specialised_args.ml[115,4114+4]..[115,4114+45])                        core_type (middle_end/flambda/augment_specialised_args.ml[115,4114+48]..[115,4114+75])
                          Ptyp_constr "Variable.Map.t" (middle_end/flambda/augment_specialised_args.ml[115,4114+61]..[115,4114+75])
                          [
                            core_type (middle_end/flambda/augment_specialised_args.ml[115,4114+48]..[115,4114+60])
                              Ptyp_constr "Definition.t" (middle_end/flambda/augment_specialised_args.ml[115,4114+48]..[115,4114+60])
                              []
                          ]
                      (middle_end/flambda/augment_specialised_args.ml[116,4191+4]..[116,4191+43])
                        Immutable
                        "all_new_definitions" (middle_end/flambda/augment_specialised_args.ml[116,4191+4]..[116,4191+23])                        core_type (middle_end/flambda/augment_specialised_args.ml[116,4191+26]..[116,4191+42])
                          Ptyp_constr "Definition.Set.t" (middle_end/flambda/augment_specialised_args.ml[116,4191+26]..[116,4191+42])
                          []
                      (middle_end/flambda/augment_specialised_args.ml[117,4235+4]..[117,4235+60])
                        Immutable
                        "new_inner_to_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[117,4235+4]..[117,4235+31])                        core_type (middle_end/flambda/augment_specialised_args.ml[117,4235+34]..[117,4235+59])
                          Ptyp_constr "Variable.Map.t" (middle_end/flambda/augment_specialised_args.ml[117,4235+45]..[117,4235+59])
                          [
                            core_type (middle_end/flambda/augment_specialised_args.ml[117,4235+34]..[117,4235+44])
                              Ptyp_constr "Variable.t" (middle_end/flambda/augment_specialised_args.ml[117,4235+34]..[117,4235+44])
                              []
                          ]
                      (middle_end/flambda/augment_specialised_args.ml[118,4296+4]..[118,4296+31])
                        Immutable
                        "total_number_of_args" (middle_end/flambda/augment_specialised_args.ml[118,4296+4]..[118,4296+24])                        core_type (middle_end/flambda/augment_specialised_args.ml[118,4296+27]..[118,4296+30])
                          Ptyp_constr "int" (middle_end/flambda/augment_specialised_args.ml[118,4296+27]..[118,4296+30])
                          []
                      (middle_end/flambda/augment_specialised_args.ml[119,4328+4]..[119,4328+70])
                        Immutable
                        "existing_specialised_args" (middle_end/flambda/augment_specialised_args.ml[119,4328+4]..[119,4328+29])                        core_type (middle_end/flambda/augment_specialised_args.ml[119,4328+32]..[119,4328+69])
                          Ptyp_constr "Variable.Map.t" (middle_end/flambda/augment_specialised_args.ml[119,4328+55]..[119,4328+69])
                          [
                            core_type (middle_end/flambda/augment_specialised_args.ml[119,4328+32]..[119,4328+54])
                              Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/augment_specialised_args.ml[119,4328+32]..[119,4328+54])
                              []
                          ]
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (middle_end/flambda/augment_specialised_args.ml[122,4404+2]..[133,4990+3])
            Pstr_type Rec
            [
              type_declaration "t" (middle_end/flambda/augment_specialised_args.ml[122,4404+7]..[122,4404+8]) (middle_end/flambda/augment_specialised_args.ml[122,4404+2]..[133,4990+3])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (middle_end/flambda/augment_specialised_args.ml[123,4417+4]..[123,4417+46])
                        Immutable
                        "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[123,4417+4]..[123,4417+19])                        core_type (middle_end/flambda/augment_specialised_args.ml[123,4417+22]..[123,4417+45])
                          Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/augment_specialised_args.ml[123,4417+22]..[123,4417+45])
                          []
                      (middle_end/flambda/augment_specialised_args.ml[124,4464+4]..[125,4522+40])
                        Immutable
                        "existing_definitions_via_spec_args_indexed_by_fun_var" (middle_end/flambda/augment_specialised_args.ml[124,4464+4]..[124,4464+57])                        core_type (middle_end/flambda/augment_specialised_args.ml[125,4522+8]..[125,4522+39])
                          Ptyp_constr "Variable.Map.t" (middle_end/flambda/augment_specialised_args.ml[125,4522+25]..[125,4522+39])
                          [
                            core_type (middle_end/flambda/augment_specialised_args.ml[125,4522+8]..[125,4522+24])
                              Ptyp_constr "Definition.Set.t" (middle_end/flambda/augment_specialised_args.ml[125,4522+8]..[125,4522+24])
                              []
                          ]
                      (middle_end/flambda/augment_specialised_args.ml[129,4731+4]..[129,4731+77])
                        Immutable
                        "new_lifted_defns_indexed_by_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[129,4731+4]..[129,4731+46])                        core_type (middle_end/flambda/augment_specialised_args.ml[129,4731+49]..[129,4731+76])
                          Ptyp_constr "Variable.Map.t" (middle_end/flambda/augment_specialised_args.ml[129,4731+62]..[129,4731+76])
                          [
                            core_type (middle_end/flambda/augment_specialised_args.ml[129,4731+49]..[129,4731+61])
                              Ptyp_constr "Projection.t" (middle_end/flambda/augment_specialised_args.ml[129,4731+49]..[129,4731+61])
                              []
                          ]
                      (middle_end/flambda/augment_specialised_args.ml[130,4809+4]..[130,4809+77])
                        Immutable
                        "new_outer_vars_indexed_by_new_lifted_defns" (middle_end/flambda/augment_specialised_args.ml[130,4809+4]..[130,4809+46])                        core_type (middle_end/flambda/augment_specialised_args.ml[130,4809+49]..[130,4809+76])
                          Ptyp_constr "Projection.Map.t" (middle_end/flambda/augment_specialised_args.ml[130,4809+60]..[130,4809+76])
                          [
                            core_type (middle_end/flambda/augment_specialised_args.ml[130,4809+49]..[130,4809+59])
                              Ptyp_constr "Variable.t" (middle_end/flambda/augment_specialised_args.ml[130,4809+49]..[130,4809+59])
                              []
                          ]
                      (middle_end/flambda/augment_specialised_args.ml[131,4887+4]..[131,4887+48])
                        Immutable
                        "functions" (middle_end/flambda/augment_specialised_args.ml[131,4887+4]..[131,4887+13])                        core_type (middle_end/flambda/augment_specialised_args.ml[131,4887+16]..[131,4887+47])
                          Ptyp_constr "Variable.Map.t" (middle_end/flambda/augment_specialised_args.ml[131,4887+33]..[131,4887+47])
                          [
                            core_type (middle_end/flambda/augment_specialised_args.ml[131,4887+16]..[131,4887+32])
                              Ptyp_constr "for_one_function" (middle_end/flambda/augment_specialised_args.ml[131,4887+16]..[131,4887+32])
                              []
                          ]
                      (middle_end/flambda/augment_specialised_args.ml[132,4936+4]..[132,4936+53])
                        Immutable
                        "make_direct_call_surrogates_for" (middle_end/flambda/augment_specialised_args.ml[132,4936+4]..[132,4936+35])                        core_type (middle_end/flambda/augment_specialised_args.ml[132,4936+38]..[132,4936+52])
                          Ptyp_constr "Variable.Set.t" (middle_end/flambda/augment_specialised_args.ml[132,4936+38]..[132,4936+52])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (middle_end/flambda/augment_specialised_args.ml[135,4995+2]..[149,5667+63])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/augment_specialised_args.ml[135,4995+6]..[135,4995+21])
                  Ppat_var "lift_projection" (middle_end/flambda/augment_specialised_args.ml[135,4995+6]..[135,4995+21])
                expression (middle_end/flambda/augment_specialised_args.ml[135,4995+22]..[149,5667+63]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/augment_specialised_args.ml[135,4995+22]..[135,4995+23])
                    Ppat_var "t" (middle_end/flambda/augment_specialised_args.ml[135,4995+22]..[135,4995+23])
                  expression (middle_end/flambda/augment_specialised_args.ml[135,4995+24]..[149,5667+63]) ghost
                    Pexp_fun
                    Labelled "projection"
                    None
                    pattern (middle_end/flambda/augment_specialised_args.ml[135,4995+26]..[135,4995+51])
                      Ppat_constraint
                      pattern (middle_end/flambda/augment_specialised_args.ml[135,4995+26]..[135,4995+36])
                        Ppat_var "projection" (middle_end/flambda/augment_specialised_args.ml[135,4995+26]..[135,4995+36])
                      core_type (middle_end/flambda/augment_specialised_args.ml[135,4995+39]..[135,4995+51])
                        Ptyp_constr "Projection.t" (middle_end/flambda/augment_specialised_args.ml[135,4995+39]..[135,4995+51])
                        []
                    expression (middle_end/flambda/augment_specialised_args.ml[138,5147+4]..[149,5667+63])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/augment_specialised_args.ml[138,5147+8]..[138,5147+22])
                            Ppat_var "find_outer_var" (middle_end/flambda/augment_specialised_args.ml[138,5147+8]..[138,5147+22])
                          expression (middle_end/flambda/augment_specialised_args.ml[138,5147+23]..[147,5602+57]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/augment_specialised_args.ml[138,5147+23]..[138,5147+32])
                              Ppat_var "inner_var" (middle_end/flambda/augment_specialised_args.ml[138,5147+23]..[138,5147+32])
                            expression (middle_end/flambda/augment_specialised_args.ml[139,5182+6]..[147,5602+57])
                              Pexp_match
                              expression (middle_end/flambda/augment_specialised_args.ml[139,5182+12]..[139,5182+74])
                                Pexp_apply
                                expression (middle_end/flambda/augment_specialised_args.ml[139,5182+12]..[139,5182+29])
                                  Pexp_ident "Variable.Map.find" (middle_end/flambda/augment_specialised_args.ml[139,5182+12]..[139,5182+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/augment_specialised_args.ml[139,5182+30]..[139,5182+39])
                                      Pexp_ident "inner_var" (middle_end/flambda/augment_specialised_args.ml[139,5182+30]..[139,5182+39])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/augment_specialised_args.ml[139,5182+40]..[139,5182+74])
                                      Pexp_field
                                      expression (middle_end/flambda/augment_specialised_args.ml[139,5182+40]..[139,5182+57])
                                        Pexp_field
                                        expression (middle_end/flambda/augment_specialised_args.ml[139,5182+40]..[139,5182+41])
                                          Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[139,5182+40]..[139,5182+41])
                                        "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[139,5182+42]..[139,5182+57])
                                      "specialised_args" (middle_end/flambda/augment_specialised_args.ml[139,5182+58]..[139,5182+74])
                                ]
                              [
                                <case>
                                  pattern (middle_end/flambda/augment_specialised_args.ml[140,5262+8]..[140,5262+44])
                                    Ppat_constraint
                                    pattern (middle_end/flambda/augment_specialised_args.ml[140,5262+9]..[140,5262+18])
                                      Ppat_var "outer_var" (middle_end/flambda/augment_specialised_args.ml[140,5262+9]..[140,5262+18])
                                    core_type (middle_end/flambda/augment_specialised_args.ml[140,5262+21]..[140,5262+43])
                                      Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/augment_specialised_args.ml[140,5262+21]..[140,5262+43])
                                      []
                                  expression (middle_end/flambda/augment_specialised_args.ml[140,5262+48]..[140,5262+61])
                                    Pexp_field
                                    expression (middle_end/flambda/augment_specialised_args.ml[140,5262+48]..[140,5262+57])
                                      Pexp_ident "outer_var" (middle_end/flambda/augment_specialised_args.ml[140,5262+48]..[140,5262+57])
                                    "var" (middle_end/flambda/augment_specialised_args.ml[140,5262+58]..[140,5262+61])
                                <case>
                                  pattern (middle_end/flambda/augment_specialised_args.ml[141,5324+8]..[141,5324+27])
                                    Ppat_exception
                                    pattern (middle_end/flambda/augment_specialised_args.ml[141,5324+18]..[141,5324+27])
                                      Ppat_construct "Not_found" (middle_end/flambda/augment_specialised_args.ml[141,5324+18]..[141,5324+27])
                                      None
                                  expression (middle_end/flambda/augment_specialised_args.ml[142,5355+8]..[147,5602+57])
                                    Pexp_apply
                                    expression (middle_end/flambda/augment_specialised_args.ml[142,5355+8]..[142,5355+25])
                                      Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/augment_specialised_args.ml[142,5355+8]..[142,5355+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[142,5355+26]..[144,5465+63])
                                          Pexp_constant PConst_string("find_outer_var: expected %a to be in [specialised_args], but it is not.  The projection was: %a.  Set of closures: %a",(middle_end/flambda/augment_specialised_args.ml[142,5355+27]..[144,5465+62]),None)
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[145,5529+10]..[145,5529+24])
                                          Pexp_ident "Variable.print" (middle_end/flambda/augment_specialised_args.ml[145,5529+10]..[145,5529+24])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[145,5529+25]..[145,5529+34])
                                          Pexp_ident "inner_var" (middle_end/flambda/augment_specialised_args.ml[145,5529+25]..[145,5529+34])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[146,5564+10]..[146,5564+26])
                                          Pexp_ident "Projection.print" (middle_end/flambda/augment_specialised_args.ml[146,5564+10]..[146,5564+26])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[146,5564+27]..[146,5564+37])
                                          Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[146,5564+27]..[146,5564+37])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[147,5602+10]..[147,5602+39])
                                          Pexp_ident "Flambda.print_set_of_closures" (middle_end/flambda/augment_specialised_args.ml[147,5602+10]..[147,5602+39])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[147,5602+40]..[147,5602+57])
                                          Pexp_field
                                          expression (middle_end/flambda/augment_specialised_args.ml[147,5602+40]..[147,5602+41])
                                            Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[147,5602+40]..[147,5602+41])
                                          "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[147,5602+42]..[147,5602+57])
                                    ]
                              ]
                      ]
                      expression (middle_end/flambda/augment_specialised_args.ml[149,5667+4]..[149,5667+63])
                        Pexp_apply
                        expression (middle_end/flambda/augment_specialised_args.ml[149,5667+4]..[149,5667+34])
                          Pexp_ident "Projection.map_projecting_from" (middle_end/flambda/augment_specialised_args.ml[149,5667+4]..[149,5667+34])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/augment_specialised_args.ml[149,5667+35]..[149,5667+45])
                              Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[149,5667+35]..[149,5667+45])
                          <arg>
                          Labelled "f"
                            expression (middle_end/flambda/augment_specialised_args.ml[149,5667+49]..[149,5667+63])
                              Pexp_ident "find_outer_var" (middle_end/flambda/augment_specialised_args.ml[149,5667+49]..[149,5667+63])
                        ]
            ]
          structure_item (middle_end/flambda/augment_specialised_args.ml[151,5732+2]..[233,9254+5])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/augment_specialised_args.ml[151,5732+6]..[151,5732+36])
                  Ppat_var "really_add_new_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[151,5732+6]..[151,5732+36])
                expression (middle_end/flambda/augment_specialised_args.ml[151,5732+37]..[233,9254+5]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/augment_specialised_args.ml[151,5732+37]..[151,5732+38])
                    Ppat_var "t" (middle_end/flambda/augment_specialised_args.ml[151,5732+37]..[151,5732+38])
                  expression (middle_end/flambda/augment_specialised_args.ml[151,5732+39]..[233,9254+5]) ghost
                    Pexp_fun
                    Labelled "group"
                    None
                    pattern (middle_end/flambda/augment_specialised_args.ml[151,5732+40]..[151,5732+45])
                      Ppat_var "group" (middle_end/flambda/augment_specialised_args.ml[151,5732+40]..[151,5732+45])
                    expression (middle_end/flambda/augment_specialised_args.ml[151,5732+46]..[233,9254+5]) ghost
                      Pexp_fun
                      Labelled "definition"
                      None
                      pattern (middle_end/flambda/augment_specialised_args.ml[151,5732+48]..[151,5732+73])
                        Ppat_constraint
                        pattern (middle_end/flambda/augment_specialised_args.ml[151,5732+48]..[151,5732+58])
                          Ppat_var "definition" (middle_end/flambda/augment_specialised_args.ml[151,5732+48]..[151,5732+58])
                        core_type (middle_end/flambda/augment_specialised_args.ml[151,5732+61]..[151,5732+73])
                          Ptyp_constr "Definition.t" (middle_end/flambda/augment_specialised_args.ml[151,5732+61]..[151,5732+73])
                          []
                      expression (middle_end/flambda/augment_specialised_args.ml[152,5807+8]..[233,9254+5]) ghost
                        Pexp_fun
                        Labelled "for_one_function"
                        None
                        pattern (middle_end/flambda/augment_specialised_args.ml[152,5807+10]..[152,5807+45])
                          Ppat_constraint
                          pattern (middle_end/flambda/augment_specialised_args.ml[152,5807+10]..[152,5807+26])
                            Ppat_var "for_one_function" (middle_end/flambda/augment_specialised_args.ml[152,5807+10]..[152,5807+26])
                          core_type (middle_end/flambda/augment_specialised_args.ml[152,5807+29]..[152,5807+45])
                            Ptyp_constr "for_one_function" (middle_end/flambda/augment_specialised_args.ml[152,5807+29]..[152,5807+45])
                            []
                        expression (middle_end/flambda/augment_specialised_args.ml[153,5856+4]..[233,9254+5])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/augment_specialised_args.ml[153,5856+8]..[153,5856+15])
                                Ppat_var "fun_var" (middle_end/flambda/augment_specialised_args.ml[153,5856+8]..[153,5856+15])
                              expression (middle_end/flambda/augment_specialised_args.ml[153,5856+18]..[153,5856+42])
                                Pexp_field
                                expression (middle_end/flambda/augment_specialised_args.ml[153,5856+18]..[153,5856+34])
                                  Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[153,5856+18]..[153,5856+34])
                                "fun_var" (middle_end/flambda/augment_specialised_args.ml[153,5856+35]..[153,5856+42])
                          ]
                          expression (middle_end/flambda/augment_specialised_args.ml[162,6441+4]..[233,9254+5])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/augment_specialised_args.ml[162,6441+8]..[162,6441+24])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/augment_specialised_args.ml[162,6441+8]..[162,6441+21])
                                      Ppat_var "new_outer_var" (middle_end/flambda/augment_specialised_args.ml[162,6441+8]..[162,6441+21])
                                    pattern (middle_end/flambda/augment_specialised_args.ml[162,6441+23]..[162,6441+24])
                                      Ppat_var "t" (middle_end/flambda/augment_specialised_args.ml[162,6441+23]..[162,6441+24])
                                  ]
                                expression (middle_end/flambda/augment_specialised_args.ml[163,6468+6]..[212,8438+26])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/augment_specialised_args.ml[163,6468+10]..[163,6468+28])
                                        Ppat_var "existing_outer_var" (middle_end/flambda/augment_specialised_args.ml[163,6468+10]..[163,6468+28])
                                      expression (middle_end/flambda/augment_specialised_args.ml[164,6499+8]..[173,6879+39])
                                        Pexp_match
                                        expression (middle_end/flambda/augment_specialised_args.ml[164,6499+14]..[164,6499+24])
                                          Pexp_ident "definition" (middle_end/flambda/augment_specialised_args.ml[164,6499+14]..[164,6499+24])
                                        [
                                          <case>
                                            pattern (middle_end/flambda/augment_specialised_args.ml[165,6529+10]..[165,6529+35])
                                              Ppat_construct "Existing_inner_free_var" (middle_end/flambda/augment_specialised_args.ml[165,6529+10]..[165,6529+33])
                                              Some
                                                []
                                                pattern (middle_end/flambda/augment_specialised_args.ml[165,6529+34]..[165,6529+35])
                                                  Ppat_any
                                            expression (middle_end/flambda/augment_specialised_args.ml[165,6529+39]..[165,6529+43])
                                              Pexp_construct "None" (middle_end/flambda/augment_specialised_args.ml[165,6529+39]..[165,6529+43])
                                              None
                                          <case>
                                            pattern (middle_end/flambda/augment_specialised_args.ml[166,6573+10]..[166,6573+61])
                                              Ppat_construct "Projection_from_existing_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[166,6573+10]..[166,6573+50])
                                              Some
                                                []
                                                pattern (middle_end/flambda/augment_specialised_args.ml[166,6573+51]..[166,6573+61])
                                                  Ppat_var "projection" (middle_end/flambda/augment_specialised_args.ml[166,6573+51]..[166,6573+61])
                                            expression (middle_end/flambda/augment_specialised_args.ml[167,6638+10]..[173,6879+39])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/augment_specialised_args.ml[167,6638+14]..[167,6638+24])
                                                    Ppat_var "projection" (middle_end/flambda/augment_specialised_args.ml[167,6638+14]..[167,6638+24])
                                                  expression (middle_end/flambda/augment_specialised_args.ml[167,6638+27]..[167,6638+56])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/augment_specialised_args.ml[167,6638+27]..[167,6638+42])
                                                      Pexp_ident "lift_projection" (middle_end/flambda/augment_specialised_args.ml[167,6638+27]..[167,6638+42])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/augment_specialised_args.ml[167,6638+43]..[167,6638+44])
                                                          Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[167,6638+43]..[167,6638+44])
                                                      <arg>
                                                      Labelled "projection"
                                                        expression (middle_end/flambda/augment_specialised_args.ml[167,6638+46]..[167,6638+56])
                                                          Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[167,6638+46]..[167,6638+56])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/augment_specialised_args.ml[168,6698+10]..[173,6879+39])
                                                Pexp_match
                                                expression (middle_end/flambda/augment_specialised_args.ml[169,6714+12]..[170,6757+58])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/augment_specialised_args.ml[169,6714+12]..[169,6714+31])
                                                    Pexp_ident "Projection.Map.find" (middle_end/flambda/augment_specialised_args.ml[169,6714+12]..[169,6714+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/augment_specialised_args.ml[169,6714+32]..[169,6714+42])
                                                        Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[169,6714+32]..[169,6714+42])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/augment_specialised_args.ml[170,6757+14]..[170,6757+58])
                                                        Pexp_field
                                                        expression (middle_end/flambda/augment_specialised_args.ml[170,6757+14]..[170,6757+15])
                                                          Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[170,6757+14]..[170,6757+15])
                                                        "new_outer_vars_indexed_by_new_lifted_defns" (middle_end/flambda/augment_specialised_args.ml[170,6757+16]..[170,6757+58])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[172,6831+12]..[172,6831+25])
                                                      Ppat_var "new_outer_var" (middle_end/flambda/augment_specialised_args.ml[172,6831+12]..[172,6831+25])
                                                    expression (middle_end/flambda/augment_specialised_args.ml[172,6831+29]..[172,6831+47])
                                                      Pexp_construct "Some" (middle_end/flambda/augment_specialised_args.ml[172,6831+29]..[172,6831+33])
                                                      Some
                                                        expression (middle_end/flambda/augment_specialised_args.ml[172,6831+34]..[172,6831+47])
                                                          Pexp_ident "new_outer_var" (middle_end/flambda/augment_specialised_args.ml[172,6831+34]..[172,6831+47])
                                                  <case>
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[173,6879+12]..[173,6879+31])
                                                      Ppat_exception
                                                      pattern (middle_end/flambda/augment_specialised_args.ml[173,6879+22]..[173,6879+31])
                                                        Ppat_construct "Not_found" (middle_end/flambda/augment_specialised_args.ml[173,6879+22]..[173,6879+31])
                                                        None
                                                    expression (middle_end/flambda/augment_specialised_args.ml[173,6879+35]..[173,6879+39])
                                                      Pexp_construct "None" (middle_end/flambda/augment_specialised_args.ml[173,6879+35]..[173,6879+39])
                                                      None
                                                ]
                                        ]
                                  ]
                                  expression (middle_end/flambda/augment_specialised_args.ml[175,6928+6]..[212,8438+26])
                                    Pexp_match
                                    expression (middle_end/flambda/augment_specialised_args.ml[175,6928+12]..[175,6928+30])
                                      Pexp_ident "existing_outer_var" (middle_end/flambda/augment_specialised_args.ml[175,6928+12]..[175,6928+30])
                                    [
                                      <case>
                                        pattern (middle_end/flambda/augment_specialised_args.ml[176,6964+8]..[176,6964+31])
                                          Ppat_construct "Some" (middle_end/flambda/augment_specialised_args.ml[176,6964+8]..[176,6964+12])
                                          Some
                                            []
                                            pattern (middle_end/flambda/augment_specialised_args.ml[176,6964+13]..[176,6964+31])
                                              Ppat_var "existing_outer_var" (middle_end/flambda/augment_specialised_args.ml[176,6964+13]..[176,6964+31])
                                        expression (middle_end/flambda/augment_specialised_args.ml[176,6964+35]..[176,6964+56])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/augment_specialised_args.ml[176,6964+35]..[176,6964+53])
                                              Pexp_ident "existing_outer_var" (middle_end/flambda/augment_specialised_args.ml[176,6964+35]..[176,6964+53])
                                            expression (middle_end/flambda/augment_specialised_args.ml[176,6964+55]..[176,6964+56])
                                              Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[176,6964+55]..[176,6964+56])
                                          ]
                                      <case>
                                        pattern (middle_end/flambda/augment_specialised_args.ml[177,7021+8]..[177,7021+12])
                                          Ppat_construct "None" (middle_end/flambda/augment_specialised_args.ml[177,7021+8]..[177,7021+12])
                                          None
                                        expression (middle_end/flambda/augment_specialised_args.ml[178,7037+8]..[212,8438+26])
                                          Pexp_match
                                          expression (middle_end/flambda/augment_specialised_args.ml[178,7037+14]..[178,7037+24])
                                            Pexp_ident "definition" (middle_end/flambda/augment_specialised_args.ml[178,7037+14]..[178,7037+24])
                                          [
                                            <case>
                                              pattern (middle_end/flambda/augment_specialised_args.ml[179,7067+10]..[179,7067+52])
                                                Ppat_construct "Existing_inner_free_var" (middle_end/flambda/augment_specialised_args.ml[179,7067+10]..[179,7067+33])
                                                Some
                                                  []
                                                  pattern (middle_end/flambda/augment_specialised_args.ml[179,7067+34]..[179,7067+52])
                                                    Ppat_var "existing_inner_var" (middle_end/flambda/augment_specialised_args.ml[179,7067+34]..[179,7067+52])
                                              expression (middle_end/flambda/augment_specialised_args.ml[180,7123+10]..[192,7662+13])
                                                Pexp_match
                                                expression (middle_end/flambda/augment_specialised_args.ml[181,7145+12]..[182,7194+41])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/augment_specialised_args.ml[181,7145+12]..[181,7145+29])
                                                    Pexp_ident "Variable.Map.find" (middle_end/flambda/augment_specialised_args.ml[181,7145+12]..[181,7145+29])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/augment_specialised_args.ml[181,7145+30]..[181,7145+48])
                                                        Pexp_ident "existing_inner_var" (middle_end/flambda/augment_specialised_args.ml[181,7145+30]..[181,7145+48])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/augment_specialised_args.ml[182,7194+14]..[182,7194+41])
                                                        Pexp_field
                                                        expression (middle_end/flambda/augment_specialised_args.ml[182,7194+14]..[182,7194+31])
                                                          Pexp_field
                                                          expression (middle_end/flambda/augment_specialised_args.ml[182,7194+14]..[182,7194+15])
                                                            Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[182,7194+14]..[182,7194+15])
                                                          "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[182,7194+16]..[182,7194+31])
                                                        "free_vars" (middle_end/flambda/augment_specialised_args.ml[182,7194+32]..[182,7194+41])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[184,7251+12]..[184,7251+31])
                                                      Ppat_exception
                                                      pattern (middle_end/flambda/augment_specialised_args.ml[184,7251+22]..[184,7251+31])
                                                        Ppat_construct "Not_found" (middle_end/flambda/augment_specialised_args.ml[184,7251+22]..[184,7251+31])
                                                        None
                                                    expression (middle_end/flambda/augment_specialised_args.ml[185,7286+12]..[190,7540+61])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/augment_specialised_args.ml[185,7286+12]..[185,7286+29])
                                                        Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/augment_specialised_args.ml[185,7286+12]..[185,7286+29])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[185,7286+30]..[187,7426+28])
                                                            Pexp_constant PConst_string("really_add_new_specialised_arg: Existing_inner_free_var %a is not an inner free variable of %a in %a",(middle_end/flambda/augment_specialised_args.ml[185,7286+31]..[187,7426+27]),None)
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[188,7455+14]..[188,7455+28])
                                                            Pexp_ident "Variable.print" (middle_end/flambda/augment_specialised_args.ml[188,7455+14]..[188,7455+28])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[188,7455+29]..[188,7455+47])
                                                            Pexp_ident "existing_inner_var" (middle_end/flambda/augment_specialised_args.ml[188,7455+29]..[188,7455+47])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[189,7503+14]..[189,7503+28])
                                                            Pexp_ident "Variable.print" (middle_end/flambda/augment_specialised_args.ml[189,7503+14]..[189,7503+28])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[189,7503+29]..[189,7503+36])
                                                            Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[189,7503+29]..[189,7503+36])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[190,7540+14]..[190,7540+43])
                                                            Pexp_ident "Flambda.print_set_of_closures" (middle_end/flambda/augment_specialised_args.ml[190,7540+14]..[190,7540+43])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[190,7540+44]..[190,7540+61])
                                                            Pexp_field
                                                            expression (middle_end/flambda/augment_specialised_args.ml[190,7540+44]..[190,7540+45])
                                                              Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[190,7540+44]..[190,7540+45])
                                                            "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[190,7540+46]..[190,7540+61])
                                                      ]
                                                  <case>
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[191,7602+12]..[191,7602+30])
                                                      Ppat_var "existing_outer_var" (middle_end/flambda/augment_specialised_args.ml[191,7602+12]..[191,7602+30])
                                                    expression (middle_end/flambda/augment_specialised_args.ml[191,7602+34]..[191,7602+59])
                                                      Pexp_tuple
                                                      [
                                                        expression (middle_end/flambda/augment_specialised_args.ml[191,7602+34]..[191,7602+56])
                                                          Pexp_field
                                                          expression (middle_end/flambda/augment_specialised_args.ml[191,7602+34]..[191,7602+52])
                                                            Pexp_ident "existing_outer_var" (middle_end/flambda/augment_specialised_args.ml[191,7602+34]..[191,7602+52])
                                                          "var" (middle_end/flambda/augment_specialised_args.ml[191,7602+53]..[191,7602+56])
                                                        expression (middle_end/flambda/augment_specialised_args.ml[191,7602+58]..[191,7602+59])
                                                          Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[191,7602+58]..[191,7602+59])
                                                      ]
                                                ]
                                            <case>
                                              pattern (middle_end/flambda/augment_specialised_args.ml[193,7676+10]..[193,7676+61])
                                                Ppat_construct "Projection_from_existing_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[193,7676+10]..[193,7676+50])
                                                Some
                                                  []
                                                  pattern (middle_end/flambda/augment_specialised_args.ml[193,7676+51]..[193,7676+61])
                                                    Ppat_var "projection" (middle_end/flambda/augment_specialised_args.ml[193,7676+51]..[193,7676+61])
                                              expression (middle_end/flambda/augment_specialised_args.ml[194,7741+10]..[212,8438+26])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[194,7741+14]..[194,7741+27])
                                                      Ppat_var "new_outer_var" (middle_end/flambda/augment_specialised_args.ml[194,7741+14]..[194,7741+27])
                                                    expression (middle_end/flambda/augment_specialised_args.ml[194,7741+30]..[194,7741+51])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/augment_specialised_args.ml[194,7741+30]..[194,7741+45])
                                                        Pexp_ident "Variable.rename" (middle_end/flambda/augment_specialised_args.ml[194,7741+30]..[194,7741+45])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[194,7741+46]..[194,7741+51])
                                                            Pexp_ident "group" (middle_end/flambda/augment_specialised_args.ml[194,7741+46]..[194,7741+51])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/augment_specialised_args.ml[195,7796+10]..[212,8438+26])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/augment_specialised_args.ml[195,7796+14]..[195,7796+24])
                                                        Ppat_var "projection" (middle_end/flambda/augment_specialised_args.ml[195,7796+14]..[195,7796+24])
                                                      expression (middle_end/flambda/augment_specialised_args.ml[195,7796+27]..[195,7796+56])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/augment_specialised_args.ml[195,7796+27]..[195,7796+42])
                                                          Pexp_ident "lift_projection" (middle_end/flambda/augment_specialised_args.ml[195,7796+27]..[195,7796+42])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/augment_specialised_args.ml[195,7796+43]..[195,7796+44])
                                                              Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[195,7796+43]..[195,7796+44])
                                                          <arg>
                                                          Labelled "projection"
                                                            expression (middle_end/flambda/augment_specialised_args.ml[195,7796+46]..[195,7796+56])
                                                              Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[195,7796+46]..[195,7796+56])
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/augment_specialised_args.ml[196,7856+10]..[212,8438+26])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/flambda/augment_specialised_args.ml[196,7856+14]..[196,7856+56])
                                                          Ppat_var "new_outer_vars_indexed_by_new_lifted_defns" (middle_end/flambda/augment_specialised_args.ml[196,7856+14]..[196,7856+56])
                                                        expression (middle_end/flambda/augment_specialised_args.ml[197,7915+12]..[199,7985+58])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/augment_specialised_args.ml[197,7915+12]..[197,7915+30])
                                                            Pexp_ident "Projection.Map.add" (middle_end/flambda/augment_specialised_args.ml[197,7915+12]..[197,7915+30])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/augment_specialised_args.ml[198,7946+14]..[198,7946+24])
                                                                Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[198,7946+14]..[198,7946+24])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/augment_specialised_args.ml[198,7946+25]..[198,7946+38])
                                                                Pexp_ident "new_outer_var" (middle_end/flambda/augment_specialised_args.ml[198,7946+25]..[198,7946+38])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/augment_specialised_args.ml[199,7985+14]..[199,7985+58])
                                                                Pexp_field
                                                                expression (middle_end/flambda/augment_specialised_args.ml[199,7985+14]..[199,7985+15])
                                                                  Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[199,7985+14]..[199,7985+15])
                                                                "new_outer_vars_indexed_by_new_lifted_defns" (middle_end/flambda/augment_specialised_args.ml[199,7985+16]..[199,7985+58])
                                                          ]
                                                    ]
                                                    expression (middle_end/flambda/augment_specialised_args.ml[201,8057+10]..[212,8438+26])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (middle_end/flambda/augment_specialised_args.ml[201,8057+14]..[201,8057+56])
                                                            Ppat_var "new_lifted_defns_indexed_by_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[201,8057+14]..[201,8057+56])
                                                          expression (middle_end/flambda/augment_specialised_args.ml[202,8116+12]..[204,8184+58])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/augment_specialised_args.ml[202,8116+12]..[202,8116+28])
                                                              Pexp_ident "Variable.Map.add" (middle_end/flambda/augment_specialised_args.ml[202,8116+12]..[202,8116+28])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/augment_specialised_args.ml[203,8145+14]..[203,8145+27])
                                                                  Pexp_ident "new_outer_var" (middle_end/flambda/augment_specialised_args.ml[203,8145+14]..[203,8145+27])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/augment_specialised_args.ml[203,8145+28]..[203,8145+38])
                                                                  Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[203,8145+28]..[203,8145+38])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/augment_specialised_args.ml[204,8184+14]..[204,8184+58])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[204,8184+14]..[204,8184+15])
                                                                    Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[204,8184+14]..[204,8184+15])
                                                                  "new_lifted_defns_indexed_by_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[204,8184+16]..[204,8184+58])
                                                            ]
                                                      ]
                                                      expression (middle_end/flambda/augment_specialised_args.ml[206,8256+10]..[212,8438+26])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (middle_end/flambda/augment_specialised_args.ml[206,8256+14]..[206,8256+15])
                                                              Ppat_var "t" (middle_end/flambda/augment_specialised_args.ml[206,8256+14]..[206,8256+15])
                                                            expression (middle_end/flambda/augment_specialised_args.ml[207,8274+12]..[210,8411+13])
                                                              Pexp_record
                                                              [
                                                                "new_outer_vars_indexed_by_new_lifted_defns" (middle_end/flambda/augment_specialised_args.ml[208,8295+14]..[208,8295+56]) ghost
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[208,8295+14]..[208,8295+56])
                                                                    Pexp_ident "new_outer_vars_indexed_by_new_lifted_defns" (middle_end/flambda/augment_specialised_args.ml[208,8295+14]..[208,8295+56])
                                                                "new_lifted_defns_indexed_by_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[209,8353+14]..[209,8353+56]) ghost
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[209,8353+14]..[209,8353+56])
                                                                    Pexp_ident "new_lifted_defns_indexed_by_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[209,8353+14]..[209,8353+56])
                                                              ]
                                                              Some
                                                                expression (middle_end/flambda/augment_specialised_args.ml[207,8274+14]..[207,8274+15])
                                                                  Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[207,8274+14]..[207,8274+15])
                                                        ]
                                                        expression (middle_end/flambda/augment_specialised_args.ml[212,8438+10]..[212,8438+26])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/augment_specialised_args.ml[212,8438+10]..[212,8438+23])
                                                              Pexp_ident "new_outer_var" (middle_end/flambda/augment_specialised_args.ml[212,8438+10]..[212,8438+23])
                                                            expression (middle_end/flambda/augment_specialised_args.ml[212,8438+25]..[212,8438+26])
                                                              Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[212,8438+25]..[212,8438+26])
                                                          ]
                                          ]
                                    ]
                            ]
                            expression (middle_end/flambda/augment_specialised_args.ml[214,8472+4]..[233,9254+5])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/augment_specialised_args.ml[214,8472+8]..[214,8472+21])
                                    Ppat_var "new_inner_var" (middle_end/flambda/augment_specialised_args.ml[214,8472+8]..[214,8472+21])
                                  expression (middle_end/flambda/augment_specialised_args.ml[214,8472+24]..[214,8472+45])
                                    Pexp_apply
                                    expression (middle_end/flambda/augment_specialised_args.ml[214,8472+24]..[214,8472+39])
                                      Pexp_ident "Variable.rename" (middle_end/flambda/augment_specialised_args.ml[214,8472+24]..[214,8472+39])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[214,8472+40]..[214,8472+45])
                                          Pexp_ident "group" (middle_end/flambda/augment_specialised_args.ml[214,8472+40]..[214,8472+45])
                                    ]
                              ]
                              expression (middle_end/flambda/augment_specialised_args.ml[215,8521+4]..[233,9254+5])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/augment_specialised_args.ml[215,8521+8]..[215,8521+35])
                                      Ppat_var "new_inner_to_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[215,8521+8]..[215,8521+35])
                                    expression (middle_end/flambda/augment_specialised_args.ml[216,8559+6]..[217,8610+52])
                                      Pexp_apply
                                      expression (middle_end/flambda/augment_specialised_args.ml[216,8559+6]..[216,8559+22])
                                        Pexp_ident "Variable.Map.add" (middle_end/flambda/augment_specialised_args.ml[216,8559+6]..[216,8559+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/augment_specialised_args.ml[216,8559+23]..[216,8559+36])
                                            Pexp_ident "new_inner_var" (middle_end/flambda/augment_specialised_args.ml[216,8559+23]..[216,8559+36])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/augment_specialised_args.ml[216,8559+37]..[216,8559+50])
                                            Pexp_ident "new_outer_var" (middle_end/flambda/augment_specialised_args.ml[216,8559+37]..[216,8559+50])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/augment_specialised_args.ml[217,8610+8]..[217,8610+52])
                                            Pexp_field
                                            expression (middle_end/flambda/augment_specialised_args.ml[217,8610+8]..[217,8610+24])
                                              Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[217,8610+8]..[217,8610+24])
                                            "new_inner_to_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[217,8610+25]..[217,8610+52])
                                      ]
                                ]
                                expression (middle_end/flambda/augment_specialised_args.ml[219,8670+4]..[233,9254+5])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/augment_specialised_args.ml[219,8670+8]..[219,8670+43]) ghost
                                        Ppat_constraint
                                        pattern (middle_end/flambda/augment_specialised_args.ml[219,8670+8]..[219,8670+24])
                                          Ppat_var "for_one_function" (middle_end/flambda/augment_specialised_args.ml[219,8670+8]..[219,8670+24])
                                        core_type (middle_end/flambda/augment_specialised_args.ml[219,8670+27]..[219,8670+43]) ghost
                                          Ptyp_poly
                                          core_type (middle_end/flambda/augment_specialised_args.ml[219,8670+27]..[219,8670+43])
                                            Ptyp_constr "for_one_function" (middle_end/flambda/augment_specialised_args.ml[219,8670+27]..[219,8670+43])
                                            []
                                      expression (middle_end/flambda/augment_specialised_args.ml[219,8670+8]..[229,9153+7])
                                        Pexp_constraint
                                        expression (middle_end/flambda/augment_specialised_args.ml[220,8716+6]..[229,9153+7])
                                          Pexp_record
                                          [
                                            "new_definitions_indexed_by_new_inner_vars" (middle_end/flambda/augment_specialised_args.ml[221,8746+8]..[221,8746+49])
                                              expression (middle_end/flambda/augment_specialised_args.ml[222,8798+10]..[223,8850+70])
                                                Pexp_apply
                                                expression (middle_end/flambda/augment_specialised_args.ml[222,8798+10]..[222,8798+26])
                                                  Pexp_ident "Variable.Map.add" (middle_end/flambda/augment_specialised_args.ml[222,8798+10]..[222,8798+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/augment_specialised_args.ml[222,8798+27]..[222,8798+40])
                                                      Pexp_ident "new_inner_var" (middle_end/flambda/augment_specialised_args.ml[222,8798+27]..[222,8798+40])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/augment_specialised_args.ml[222,8798+41]..[222,8798+51])
                                                      Pexp_ident "definition" (middle_end/flambda/augment_specialised_args.ml[222,8798+41]..[222,8798+51])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/augment_specialised_args.ml[223,8850+12]..[223,8850+70])
                                                      Pexp_field
                                                      expression (middle_end/flambda/augment_specialised_args.ml[223,8850+12]..[223,8850+28])
                                                        Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[223,8850+12]..[223,8850+28])
                                                      "new_definitions_indexed_by_new_inner_vars" (middle_end/flambda/augment_specialised_args.ml[223,8850+29]..[223,8850+70])
                                                ]
                                            "all_new_definitions" (middle_end/flambda/augment_specialised_args.ml[224,8922+8]..[224,8922+27])
                                              expression (middle_end/flambda/augment_specialised_args.ml[225,8952+10]..[226,8992+48])
                                                Pexp_apply
                                                expression (middle_end/flambda/augment_specialised_args.ml[225,8952+10]..[225,8952+28])
                                                  Pexp_ident "Definition.Set.add" (middle_end/flambda/augment_specialised_args.ml[225,8952+10]..[225,8952+28])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/augment_specialised_args.ml[225,8952+29]..[225,8952+39])
                                                      Pexp_ident "definition" (middle_end/flambda/augment_specialised_args.ml[225,8952+29]..[225,8952+39])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/augment_specialised_args.ml[226,8992+12]..[226,8992+48])
                                                      Pexp_field
                                                      expression (middle_end/flambda/augment_specialised_args.ml[226,8992+12]..[226,8992+28])
                                                        Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[226,8992+12]..[226,8992+28])
                                                      "all_new_definitions" (middle_end/flambda/augment_specialised_args.ml[226,8992+29]..[226,8992+48])
                                                ]
                                            "new_inner_to_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[227,9042+8]..[227,9042+35]) ghost
                                              expression (middle_end/flambda/augment_specialised_args.ml[227,9042+8]..[227,9042+35])
                                                Pexp_ident "new_inner_to_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[227,9042+8]..[227,9042+35])
                                            "total_number_of_args" (middle_end/flambda/augment_specialised_args.ml[228,9079+8]..[228,9079+28])
                                              expression (middle_end/flambda/augment_specialised_args.ml[228,9079+31]..[228,9079+72])
                                                Pexp_apply
                                                expression (middle_end/flambda/augment_specialised_args.ml[228,9079+69]..[228,9079+70])
                                                  Pexp_ident "+" (middle_end/flambda/augment_specialised_args.ml[228,9079+69]..[228,9079+70])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/augment_specialised_args.ml[228,9079+31]..[228,9079+68])
                                                      Pexp_field
                                                      expression (middle_end/flambda/augment_specialised_args.ml[228,9079+31]..[228,9079+47])
                                                        Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[228,9079+31]..[228,9079+47])
                                                      "total_number_of_args" (middle_end/flambda/augment_specialised_args.ml[228,9079+48]..[228,9079+68])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/augment_specialised_args.ml[228,9079+71]..[228,9079+72])
                                                      Pexp_constant PConst_int (1,None)
                                                ]
                                          ]
                                          Some
                                            expression (middle_end/flambda/augment_specialised_args.ml[220,8716+8]..[220,8716+24])
                                              Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[220,8716+8]..[220,8716+24])
                                        core_type (middle_end/flambda/augment_specialised_args.ml[219,8670+27]..[219,8670+43])
                                          Ptyp_constr "for_one_function" (middle_end/flambda/augment_specialised_args.ml[219,8670+27]..[219,8670+43])
                                          []
                                  ]
                                  expression (middle_end/flambda/augment_specialised_args.ml[231,9168+4]..[233,9254+5])
                                    Pexp_record
                                    [
                                      "functions" (middle_end/flambda/augment_specialised_args.ml[232,9181+6]..[232,9181+15])
                                        expression (middle_end/flambda/augment_specialised_args.ml[232,9181+18]..[232,9181+71])
                                          Pexp_apply
                                          expression (middle_end/flambda/augment_specialised_args.ml[232,9181+18]..[232,9181+34])
                                            Pexp_ident "Variable.Map.add" (middle_end/flambda/augment_specialised_args.ml[232,9181+18]..[232,9181+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/augment_specialised_args.ml[232,9181+35]..[232,9181+42])
                                                Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[232,9181+35]..[232,9181+42])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/augment_specialised_args.ml[232,9181+43]..[232,9181+59])
                                                Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[232,9181+43]..[232,9181+59])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/augment_specialised_args.ml[232,9181+60]..[232,9181+71])
                                                Pexp_field
                                                expression (middle_end/flambda/augment_specialised_args.ml[232,9181+60]..[232,9181+61])
                                                  Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[232,9181+60]..[232,9181+61])
                                                "functions" (middle_end/flambda/augment_specialised_args.ml[232,9181+62]..[232,9181+71])
                                          ]
                                    ]
                                    Some
                                      expression (middle_end/flambda/augment_specialised_args.ml[231,9168+6]..[231,9168+7])
                                        Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[231,9168+6]..[231,9168+7])
            ]
          structure_item (middle_end/flambda/augment_specialised_args.ml[235,9261+2]..[281,11322+78])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/augment_specialised_args.ml[235,9261+6]..[235,9261+25])
                  Ppat_var "new_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[235,9261+6]..[235,9261+25])
                expression (middle_end/flambda/augment_specialised_args.ml[235,9261+26]..[281,11322+78]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/augment_specialised_args.ml[235,9261+26]..[235,9261+27])
                    Ppat_var "t" (middle_end/flambda/augment_specialised_args.ml[235,9261+26]..[235,9261+27])
                  expression (middle_end/flambda/augment_specialised_args.ml[235,9261+28]..[281,11322+78]) ghost
                    Pexp_fun
                    Labelled "fun_var"
                    None
                    pattern (middle_end/flambda/augment_specialised_args.ml[235,9261+29]..[235,9261+36])
                      Ppat_var "fun_var" (middle_end/flambda/augment_specialised_args.ml[235,9261+29]..[235,9261+36])
                    expression (middle_end/flambda/augment_specialised_args.ml[235,9261+37]..[281,11322+78]) ghost
                      Pexp_fun
                      Labelled "group"
                      None
                      pattern (middle_end/flambda/augment_specialised_args.ml[235,9261+38]..[235,9261+43])
                        Ppat_var "group" (middle_end/flambda/augment_specialised_args.ml[235,9261+38]..[235,9261+43])
                      expression (middle_end/flambda/augment_specialised_args.ml[235,9261+44]..[281,11322+78]) ghost
                        Pexp_fun
                        Labelled "definition"
                        None
                        pattern (middle_end/flambda/augment_specialised_args.ml[235,9261+45]..[235,9261+55])
                          Ppat_var "definition" (middle_end/flambda/augment_specialised_args.ml[235,9261+45]..[235,9261+55])
                        expression (middle_end/flambda/augment_specialised_args.ml[236,9319+4]..[281,11322+78])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/augment_specialised_args.ml[236,9319+8]..[236,9319+43]) ghost
                                Ppat_constraint
                                pattern (middle_end/flambda/augment_specialised_args.ml[236,9319+8]..[236,9319+24])
                                  Ppat_var "for_one_function" (middle_end/flambda/augment_specialised_args.ml[236,9319+8]..[236,9319+24])
                                core_type (middle_end/flambda/augment_specialised_args.ml[236,9319+27]..[236,9319+43]) ghost
                                  Ptyp_poly
                                  core_type (middle_end/flambda/augment_specialised_args.ml[236,9319+27]..[236,9319+43])
                                    Ptyp_constr "for_one_function" (middle_end/flambda/augment_specialised_args.ml[236,9319+27]..[236,9319+43])
                                    []
                              expression (middle_end/flambda/augment_specialised_args.ml[236,9319+8]..[265,10604+44])
                                Pexp_constraint
                                expression (middle_end/flambda/augment_specialised_args.ml[237,9365+6]..[265,10604+44])
                                  Pexp_match
                                  expression (middle_end/flambda/augment_specialised_args.ml[237,9365+12]..[237,9365+49])
                                    Pexp_apply
                                    expression (middle_end/flambda/augment_specialised_args.ml[237,9365+12]..[237,9365+29])
                                      Pexp_ident "Variable.Map.find" (middle_end/flambda/augment_specialised_args.ml[237,9365+12]..[237,9365+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[237,9365+30]..[237,9365+37])
                                          Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[237,9365+30]..[237,9365+37])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[237,9365+38]..[237,9365+49])
                                          Pexp_field
                                          expression (middle_end/flambda/augment_specialised_args.ml[237,9365+38]..[237,9365+39])
                                            Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[237,9365+38]..[237,9365+39])
                                          "functions" (middle_end/flambda/augment_specialised_args.ml[237,9365+40]..[237,9365+49])
                                    ]
                                  [
                                    <case>
                                      pattern (middle_end/flambda/augment_specialised_args.ml[238,9420+8]..[238,9420+27])
                                        Ppat_exception
                                        pattern (middle_end/flambda/augment_specialised_args.ml[238,9420+18]..[238,9420+27])
                                          Ppat_construct "Not_found" (middle_end/flambda/augment_specialised_args.ml[238,9420+18]..[238,9420+27])
                                          None
                                      expression (middle_end/flambda/augment_specialised_args.ml[239,9451+8]..[264,10592+11])
                                        Pexp_match
                                        expression (middle_end/flambda/augment_specialised_args.ml[240,9465+16]..[240,9465+79])
                                          Pexp_apply
                                          expression (middle_end/flambda/augment_specialised_args.ml[240,9465+16]..[240,9465+33])
                                            Pexp_ident "Variable.Map.find" (middle_end/flambda/augment_specialised_args.ml[240,9465+16]..[240,9465+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/augment_specialised_args.ml[240,9465+34]..[240,9465+41])
                                                Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[240,9465+34]..[240,9465+41])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/augment_specialised_args.ml[240,9465+42]..[240,9465+79])
                                                Pexp_field
                                                expression (middle_end/flambda/augment_specialised_args.ml[240,9465+42]..[240,9465+74])
                                                  Pexp_field
                                                  expression (middle_end/flambda/augment_specialised_args.ml[240,9465+42]..[240,9465+59])
                                                    Pexp_field
                                                    expression (middle_end/flambda/augment_specialised_args.ml[240,9465+42]..[240,9465+43])
                                                      Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[240,9465+42]..[240,9465+43])
                                                    "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[240,9465+44]..[240,9465+59])
                                                  "function_decls" (middle_end/flambda/augment_specialised_args.ml[240,9465+60]..[240,9465+74])
                                                "funs" (middle_end/flambda/augment_specialised_args.ml[240,9465+75]..[240,9465+79])
                                          ]
                                        [
                                          <case>
                                            pattern (middle_end/flambda/augment_specialised_args.ml[242,9558+10]..[242,9558+29])
                                              Ppat_exception
                                              pattern (middle_end/flambda/augment_specialised_args.ml[242,9558+20]..[242,9558+29])
                                                Ppat_construct "Not_found" (middle_end/flambda/augment_specialised_args.ml[242,9558+20]..[242,9558+29])
                                                None
                                            expression (middle_end/flambda/augment_specialised_args.ml[242,9558+33]..[242,9558+45])
                                              Pexp_assert
                                              expression (middle_end/flambda/augment_specialised_args.ml[242,9558+40]..[242,9558+45])
                                                Pexp_construct "false" (middle_end/flambda/augment_specialised_args.ml[242,9558+40]..[242,9558+45])
                                                None
                                          <case>
                                            pattern (middle_end/flambda/augment_specialised_args.ml[243,9604+10]..[243,9604+56])
                                              Ppat_constraint
                                              pattern (middle_end/flambda/augment_specialised_args.ml[243,9604+11]..[243,9604+24])
                                                Ppat_var "function_decl" (middle_end/flambda/augment_specialised_args.ml[243,9604+11]..[243,9604+24])
                                              core_type (middle_end/flambda/augment_specialised_args.ml[243,9604+27]..[243,9604+55])
                                                Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/augment_specialised_args.ml[243,9604+27]..[243,9604+55])
                                                []
                                            expression (middle_end/flambda/augment_specialised_args.ml[244,9664+10]..[263,10580+11])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/augment_specialised_args.ml[244,9664+14]..[244,9664+20])
                                                    Ppat_var "params" (middle_end/flambda/augment_specialised_args.ml[244,9664+14]..[244,9664+20])
                                                  expression (middle_end/flambda/augment_specialised_args.ml[244,9664+23]..[244,9664+62])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/augment_specialised_args.ml[244,9664+23]..[244,9664+41])
                                                      Pexp_ident "Parameter.Set.vars" (middle_end/flambda/augment_specialised_args.ml[244,9664+23]..[244,9664+41])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/augment_specialised_args.ml[244,9664+42]..[244,9664+62])
                                                          Pexp_field
                                                          expression (middle_end/flambda/augment_specialised_args.ml[244,9664+42]..[244,9664+55])
                                                            Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[244,9664+42]..[244,9664+55])
                                                          "params" (middle_end/flambda/augment_specialised_args.ml[244,9664+56]..[244,9664+62])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/augment_specialised_args.ml[245,9730+10]..[263,10580+11])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[245,9730+14]..[245,9730+39])
                                                      Ppat_var "existing_specialised_args" (middle_end/flambda/augment_specialised_args.ml[245,9730+14]..[245,9730+39])
                                                    expression (middle_end/flambda/augment_specialised_args.ml[246,9772+12]..[248,9882+48])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/augment_specialised_args.ml[246,9772+12]..[246,9772+31])
                                                        Pexp_ident "Variable.Map.filter" (middle_end/flambda/augment_specialised_args.ml[246,9772+12]..[246,9772+31])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[246,9772+32]..[247,9831+50])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (middle_end/flambda/augment_specialised_args.ml[246,9772+37]..[246,9772+46])
                                                              Ppat_var "inner_var" (middle_end/flambda/augment_specialised_args.ml[246,9772+37]..[246,9772+46])
                                                            expression (middle_end/flambda/augment_specialised_args.ml[246,9772+47]..[247,9831+49]) ghost
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (middle_end/flambda/augment_specialised_args.ml[246,9772+47]..[246,9772+55])
                                                                Ppat_var "_spec_to" (middle_end/flambda/augment_specialised_args.ml[246,9772+47]..[246,9772+55])
                                                              expression (middle_end/flambda/augment_specialised_args.ml[247,9831+16]..[247,9831+49])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/augment_specialised_args.ml[247,9831+16]..[247,9831+32])
                                                                  Pexp_ident "Variable.Set.mem" (middle_end/flambda/augment_specialised_args.ml[247,9831+16]..[247,9831+32])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[247,9831+33]..[247,9831+42])
                                                                      Pexp_ident "inner_var" (middle_end/flambda/augment_specialised_args.ml[247,9831+33]..[247,9831+42])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[247,9831+43]..[247,9831+49])
                                                                      Pexp_ident "params" (middle_end/flambda/augment_specialised_args.ml[247,9831+43]..[247,9831+49])
                                                                ]
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[248,9882+14]..[248,9882+48])
                                                            Pexp_field
                                                            expression (middle_end/flambda/augment_specialised_args.ml[248,9882+14]..[248,9882+31])
                                                              Pexp_field
                                                              expression (middle_end/flambda/augment_specialised_args.ml[248,9882+14]..[248,9882+15])
                                                                Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[248,9882+14]..[248,9882+15])
                                                              "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[248,9882+16]..[248,9882+31])
                                                            "specialised_args" (middle_end/flambda/augment_specialised_args.ml[248,9882+32]..[248,9882+48])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/augment_specialised_args.ml[250,9944+10]..[263,10580+11])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/augment_specialised_args.ml[250,9944+14]..[250,9944+41])
                                                        Ppat_var "make_direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[250,9944+14]..[250,9944+41])
                                                      expression (middle_end/flambda/augment_specialised_args.ml[251,9988+12]..[251,9988+70])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/augment_specialised_args.ml[251,9988+12]..[251,9988+28])
                                                          Pexp_ident "Variable.Set.mem" (middle_end/flambda/augment_specialised_args.ml[251,9988+12]..[251,9988+28])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/augment_specialised_args.ml[251,9988+29]..[251,9988+36])
                                                              Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[251,9988+29]..[251,9988+36])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/augment_specialised_args.ml[251,9988+37]..[251,9988+70])
                                                              Pexp_field
                                                              expression (middle_end/flambda/augment_specialised_args.ml[251,9988+37]..[251,9988+38])
                                                                Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[251,9988+37]..[251,9988+38])
                                                              "make_direct_call_surrogates_for" (middle_end/flambda/augment_specialised_args.ml[251,9988+39]..[251,9988+70])
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/augment_specialised_args.ml[253,10072+10]..[263,10580+11])
                                                    Pexp_record
                                                    [
                                                      "fun_var" (middle_end/flambda/augment_specialised_args.ml[253,10072+12]..[253,10072+19]) ghost
                                                        expression (middle_end/flambda/augment_specialised_args.ml[253,10072+12]..[253,10072+19])
                                                          Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[253,10072+12]..[253,10072+19])
                                                      "function_decl" (middle_end/flambda/augment_specialised_args.ml[254,10093+12]..[254,10093+25]) ghost
                                                        expression (middle_end/flambda/augment_specialised_args.ml[254,10093+12]..[254,10093+25])
                                                          Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[254,10093+12]..[254,10093+25])
                                                      "make_direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[255,10120+12]..[255,10120+39]) ghost
                                                        expression (middle_end/flambda/augment_specialised_args.ml[255,10120+12]..[255,10120+39])
                                                          Pexp_ident "make_direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[255,10120+12]..[255,10120+39])
                                                      "new_definitions_indexed_by_new_inner_vars" (middle_end/flambda/augment_specialised_args.ml[256,10161+12]..[256,10161+53])
                                                        expression (middle_end/flambda/augment_specialised_args.ml[256,10161+56]..[256,10161+74])
                                                          Pexp_ident "Variable.Map.empty" (middle_end/flambda/augment_specialised_args.ml[256,10161+56]..[256,10161+74])
                                                      "all_new_definitions" (middle_end/flambda/augment_specialised_args.ml[257,10237+12]..[257,10237+31])
                                                        expression (middle_end/flambda/augment_specialised_args.ml[257,10237+34]..[257,10237+54])
                                                          Pexp_ident "Definition.Set.empty" (middle_end/flambda/augment_specialised_args.ml[257,10237+34]..[257,10237+54])
                                                      "new_inner_to_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[258,10293+12]..[258,10293+39])
                                                        expression (middle_end/flambda/augment_specialised_args.ml[258,10293+42]..[258,10293+60])
                                                          Pexp_ident "Variable.Map.empty" (middle_end/flambda/augment_specialised_args.ml[258,10293+42]..[258,10293+60])
                                                      "total_number_of_args" (middle_end/flambda/augment_specialised_args.ml[261,10468+12]..[261,10468+32])
                                                        expression (middle_end/flambda/augment_specialised_args.ml[261,10468+35]..[261,10468+71])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/augment_specialised_args.ml[261,10468+68]..[261,10468+69])
                                                            Pexp_ident "+" (middle_end/flambda/augment_specialised_args.ml[261,10468+68]..[261,10468+69])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/augment_specialised_args.ml[261,10468+35]..[261,10468+67])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/augment_specialised_args.ml[261,10468+35]..[261,10468+46])
                                                                  Pexp_ident "List.length" (middle_end/flambda/augment_specialised_args.ml[261,10468+35]..[261,10468+46])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[261,10468+47]..[261,10468+67])
                                                                      Pexp_field
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[261,10468+47]..[261,10468+60])
Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[261,10468+47]..[261,10468+60])
                                                                      "params" (middle_end/flambda/augment_specialised_args.ml[261,10468+61]..[261,10468+67])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/augment_specialised_args.ml[261,10468+70]..[261,10468+71])
                                                                Pexp_constant PConst_int (1,None)
                                                          ]
                                                      "existing_specialised_args" (middle_end/flambda/augment_specialised_args.ml[262,10541+12]..[262,10541+37]) ghost
                                                        expression (middle_end/flambda/augment_specialised_args.ml[262,10541+12]..[262,10541+37])
                                                          Pexp_ident "existing_specialised_args" (middle_end/flambda/augment_specialised_args.ml[262,10541+12]..[262,10541+37])
                                                    ]
                                                    None
                                        ]
                                    <case>
                                      pattern (middle_end/flambda/augment_specialised_args.ml[265,10604+8]..[265,10604+24])
                                        Ppat_var "for_one_function" (middle_end/flambda/augment_specialised_args.ml[265,10604+8]..[265,10604+24])
                                      expression (middle_end/flambda/augment_specialised_args.ml[265,10604+28]..[265,10604+44])
                                        Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[265,10604+28]..[265,10604+44])
                                  ]
                                core_type (middle_end/flambda/augment_specialised_args.ml[236,9319+27]..[236,9319+43])
                                  Ptyp_constr "for_one_function" (middle_end/flambda/augment_specialised_args.ml[236,9319+27]..[236,9319+43])
                                  []
                          ]
                          expression (middle_end/flambda/augment_specialised_args.ml[272,11036+4]..[281,11322+78])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/augment_specialised_args.ml[272,11036+8]..[272,11036+22])
                                  Ppat_var "exists_already" (middle_end/flambda/augment_specialised_args.ml[272,11036+8]..[272,11036+22])
                                expression (middle_end/flambda/augment_specialised_args.ml[273,11061+6]..[278,11221+64])
                                  Pexp_match
                                  expression (middle_end/flambda/augment_specialised_args.ml[274,11073+8]..[275,11107+65])
                                    Pexp_apply
                                    expression (middle_end/flambda/augment_specialised_args.ml[274,11073+8]..[274,11073+25])
                                      Pexp_ident "Variable.Map.find" (middle_end/flambda/augment_specialised_args.ml[274,11073+8]..[274,11073+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[274,11073+26]..[274,11073+33])
                                          Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[274,11073+26]..[274,11073+33])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[275,11107+10]..[275,11107+65])
                                          Pexp_field
                                          expression (middle_end/flambda/augment_specialised_args.ml[275,11107+10]..[275,11107+11])
                                            Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[275,11107+10]..[275,11107+11])
                                          "existing_definitions_via_spec_args_indexed_by_fun_var" (middle_end/flambda/augment_specialised_args.ml[275,11107+12]..[275,11107+65])
                                    ]
                                  [
                                    <case>
                                      pattern (middle_end/flambda/augment_specialised_args.ml[277,11184+8]..[277,11184+27])
                                        Ppat_exception
                                        pattern (middle_end/flambda/augment_specialised_args.ml[277,11184+18]..[277,11184+27])
                                          Ppat_construct "Not_found" (middle_end/flambda/augment_specialised_args.ml[277,11184+18]..[277,11184+27])
                                          None
                                      expression (middle_end/flambda/augment_specialised_args.ml[277,11184+31]..[277,11184+36])
                                        Pexp_construct "false" (middle_end/flambda/augment_specialised_args.ml[277,11184+31]..[277,11184+36])
                                        None
                                    <case>
                                      pattern (middle_end/flambda/augment_specialised_args.ml[278,11221+8]..[278,11221+19])
                                        Ppat_var "definitions" (middle_end/flambda/augment_specialised_args.ml[278,11221+8]..[278,11221+19])
                                      expression (middle_end/flambda/augment_specialised_args.ml[278,11221+23]..[278,11221+64])
                                        Pexp_apply
                                        expression (middle_end/flambda/augment_specialised_args.ml[278,11221+23]..[278,11221+41])
                                          Pexp_ident "Definition.Set.mem" (middle_end/flambda/augment_specialised_args.ml[278,11221+23]..[278,11221+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/augment_specialised_args.ml[278,11221+42]..[278,11221+52])
                                              Pexp_ident "definition" (middle_end/flambda/augment_specialised_args.ml[278,11221+42]..[278,11221+52])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/augment_specialised_args.ml[278,11221+53]..[278,11221+64])
                                              Pexp_ident "definitions" (middle_end/flambda/augment_specialised_args.ml[278,11221+53]..[278,11221+64])
                                        ]
                                  ]
                            ]
                            expression (middle_end/flambda/augment_specialised_args.ml[280,11293+4]..[281,11322+78])
                              Pexp_ifthenelse
                              expression (middle_end/flambda/augment_specialised_args.ml[280,11293+7]..[280,11293+21])
                                Pexp_ident "exists_already" (middle_end/flambda/augment_specialised_args.ml[280,11293+7]..[280,11293+21])
                              expression (middle_end/flambda/augment_specialised_args.ml[280,11293+27]..[280,11293+28])
                                Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[280,11293+27]..[280,11293+28])
                              Some
                                expression (middle_end/flambda/augment_specialised_args.ml[281,11322+9]..[281,11322+78])
                                  Pexp_apply
                                  expression (middle_end/flambda/augment_specialised_args.ml[281,11322+9]..[281,11322+39])
                                    Pexp_ident "really_add_new_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[281,11322+9]..[281,11322+39])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/augment_specialised_args.ml[281,11322+40]..[281,11322+41])
                                        Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[281,11322+40]..[281,11322+41])
                                    <arg>
                                    Labelled "group"
                                      expression (middle_end/flambda/augment_specialised_args.ml[281,11322+43]..[281,11322+48])
                                        Pexp_ident "group" (middle_end/flambda/augment_specialised_args.ml[281,11322+43]..[281,11322+48])
                                    <arg>
                                    Labelled "definition"
                                      expression (middle_end/flambda/augment_specialised_args.ml[281,11322+50]..[281,11322+60])
                                        Pexp_ident "definition" (middle_end/flambda/augment_specialised_args.ml[281,11322+50]..[281,11322+60])
                                    <arg>
                                    Labelled "for_one_function"
                                      expression (middle_end/flambda/augment_specialised_args.ml[281,11322+62]..[281,11322+78])
                                        Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[281,11322+62]..[281,11322+78])
                                  ]
            ]
          structure_item (middle_end/flambda/augment_specialised_args.ml[283,11402+2]..[360,14884+7])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/augment_specialised_args.ml[283,11402+6]..[283,11402+12])
                  Ppat_var "create" (middle_end/flambda/augment_specialised_args.ml[283,11402+6]..[283,11402+12])
                expression (middle_end/flambda/augment_specialised_args.ml[283,11402+13]..[360,14884+7]) ghost
                  Pexp_fun
                  Labelled "env"
                  None
                  pattern (middle_end/flambda/augment_specialised_args.ml[283,11402+14]..[283,11402+17])
                    Ppat_var "env" (middle_end/flambda/augment_specialised_args.ml[283,11402+14]..[283,11402+17])
                  expression (middle_end/flambda/augment_specialised_args.ml[283,11402+18]..[360,14884+7]) ghost
                    Pexp_fun
                    Labelled "what_to_specialise"
                    None
                    pattern (middle_end/flambda/augment_specialised_args.ml[283,11402+20]..[283,11402+44])
                      Ppat_constraint
                      pattern (middle_end/flambda/augment_specialised_args.ml[283,11402+20]..[283,11402+38])
                        Ppat_var "what_to_specialise" (middle_end/flambda/augment_specialised_args.ml[283,11402+20]..[283,11402+38])
                      core_type (middle_end/flambda/augment_specialised_args.ml[283,11402+41]..[283,11402+44])
                        Ptyp_constr "W.t" (middle_end/flambda/augment_specialised_args.ml[283,11402+41]..[283,11402+44])
                        []
                    expression (middle_end/flambda/augment_specialised_args.ml[284,11450+4]..[360,14884+7])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/augment_specialised_args.ml[284,11450+8]..[284,11450+61])
                            Ppat_var "existing_definitions_via_spec_args_indexed_by_fun_var" (middle_end/flambda/augment_specialised_args.ml[284,11450+8]..[284,11450+61])
                          expression (middle_end/flambda/augment_specialised_args.ml[285,11514+6]..[304,12440+64])
                            Pexp_apply
                            expression (middle_end/flambda/augment_specialised_args.ml[285,11514+6]..[285,11514+22])
                              Pexp_ident "Variable.Map.map" (middle_end/flambda/augment_specialised_args.ml[285,11514+6]..[285,11514+22])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/augment_specialised_args.ml[285,11514+23]..[303,12404+35])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/augment_specialised_args.ml[285,11514+28]..[285,11514+74])
                                    Ppat_constraint
                                    pattern (middle_end/flambda/augment_specialised_args.ml[285,11514+29]..[285,11514+42])
                                      Ppat_var "function_decl" (middle_end/flambda/augment_specialised_args.ml[285,11514+29]..[285,11514+42])
                                    core_type (middle_end/flambda/augment_specialised_args.ml[285,11514+45]..[285,11514+73])
                                      Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/augment_specialised_args.ml[285,11514+45]..[285,11514+73])
                                      []
                                  expression (middle_end/flambda/augment_specialised_args.ml[286,11592+10]..[303,12404+34])
                                    Pexp_ifthenelse
                                    expression (middle_end/flambda/augment_specialised_args.ml[286,11592+13]..[286,11592+31])
                                      Pexp_field
                                      expression (middle_end/flambda/augment_specialised_args.ml[286,11592+13]..[286,11592+26])
                                        Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[286,11592+13]..[286,11592+26])
                                      "stub" (middle_end/flambda/augment_specialised_args.ml[286,11592+27]..[286,11592+31])
                                    expression (middle_end/flambda/augment_specialised_args.ml[287,11629+12]..[287,11629+32])
                                      Pexp_ident "Definition.Set.empty" (middle_end/flambda/augment_specialised_args.ml[287,11629+12]..[287,11629+32])
                                    Some
                                      expression (middle_end/flambda/augment_specialised_args.ml[289,11677+12]..[303,12404+34])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/augment_specialised_args.ml[289,11677+16]..[289,11677+22])
                                              Ppat_var "params" (middle_end/flambda/augment_specialised_args.ml[289,11677+16]..[289,11677+22])
                                            expression (middle_end/flambda/augment_specialised_args.ml[289,11677+25]..[289,11677+64])
                                              Pexp_apply
                                              expression (middle_end/flambda/augment_specialised_args.ml[289,11677+25]..[289,11677+43])
                                                Pexp_ident "Parameter.Set.vars" (middle_end/flambda/augment_specialised_args.ml[289,11677+25]..[289,11677+43])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/augment_specialised_args.ml[289,11677+44]..[289,11677+64])
                                                    Pexp_field
                                                    expression (middle_end/flambda/augment_specialised_args.ml[289,11677+44]..[289,11677+57])
                                                      Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[289,11677+44]..[289,11677+57])
                                                    "params" (middle_end/flambda/augment_specialised_args.ml[289,11677+58]..[289,11677+64])
                                              ]
                                        ]
                                        expression (middle_end/flambda/augment_specialised_args.ml[290,11745+12]..[303,12404+34])
                                          Pexp_apply
                                          expression (middle_end/flambda/augment_specialised_args.ml[290,11745+12]..[290,11745+29])
                                            Pexp_ident "Variable.Map.fold" (middle_end/flambda/augment_specialised_args.ml[290,11745+12]..[290,11745+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/augment_specialised_args.ml[290,11745+30]..[301,12277+60])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (middle_end/flambda/augment_specialised_args.ml[290,11745+35]..[290,11745+44])
                                                  Ppat_var "inner_var" (middle_end/flambda/augment_specialised_args.ml[290,11745+35]..[290,11745+44])
                                                expression (middle_end/flambda/augment_specialised_args.ml[291,11790+22]..[301,12277+59]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (middle_end/flambda/augment_specialised_args.ml[291,11790+22]..[291,11790+56])
                                                    Ppat_constraint
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[291,11790+23]..[291,11790+30])
                                                      Ppat_var "spec_to" (middle_end/flambda/augment_specialised_args.ml[291,11790+23]..[291,11790+30])
                                                    core_type (middle_end/flambda/augment_specialised_args.ml[291,11790+33]..[291,11790+55])
                                                      Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/augment_specialised_args.ml[291,11790+33]..[291,11790+55])
                                                      []
                                                  expression (middle_end/flambda/augment_specialised_args.ml[291,11790+57]..[301,12277+59]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[291,11790+57]..[291,11790+68])
                                                      Ppat_var "definitions" (middle_end/flambda/augment_specialised_args.ml[291,11790+57]..[291,11790+68])
                                                    expression (middle_end/flambda/augment_specialised_args.ml[292,11862+16]..[301,12277+59])
                                                      Pexp_ifthenelse
                                                      expression (middle_end/flambda/augment_specialised_args.ml[292,11862+19]..[292,11862+58])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/augment_specialised_args.ml[292,11862+19]..[292,11862+22])
                                                          Pexp_ident "not" (middle_end/flambda/augment_specialised_args.ml[292,11862+19]..[292,11862+22])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/augment_specialised_args.ml[292,11862+23]..[292,11862+58])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/augment_specialised_args.ml[292,11862+24]..[292,11862+40])
                                                                Pexp_ident "Variable.Set.mem" (middle_end/flambda/augment_specialised_args.ml[292,11862+24]..[292,11862+40])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[292,11862+41]..[292,11862+50])
                                                                    Pexp_ident "inner_var" (middle_end/flambda/augment_specialised_args.ml[292,11862+41]..[292,11862+50])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[292,11862+51]..[292,11862+57])
                                                                    Pexp_ident "params" (middle_end/flambda/augment_specialised_args.ml[292,11862+51]..[292,11862+57])
                                                              ]
                                                        ]
                                                      expression (middle_end/flambda/augment_specialised_args.ml[293,11926+18]..[293,11926+29])
                                                        Pexp_ident "definitions" (middle_end/flambda/augment_specialised_args.ml[293,11926+18]..[293,11926+29])
                                                      Some
                                                        expression (middle_end/flambda/augment_specialised_args.ml[295,11977+18]..[301,12277+59])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/flambda/augment_specialised_args.ml[295,11977+22]..[295,11977+47]) ghost
                                                                Ppat_constraint
                                                                pattern (middle_end/flambda/augment_specialised_args.ml[295,11977+22]..[295,11977+32])
                                                                  Ppat_var "definition" (middle_end/flambda/augment_specialised_args.ml[295,11977+22]..[295,11977+32])
                                                                core_type (middle_end/flambda/augment_specialised_args.ml[295,11977+35]..[295,11977+47]) ghost
                                                                  Ptyp_poly
                                                                  core_type (middle_end/flambda/augment_specialised_args.ml[295,11977+35]..[295,11977+47])
                                                                    Ptyp_constr "Definition.t" (middle_end/flambda/augment_specialised_args.ml[295,11977+35]..[295,11977+47])
                                                                    []
                                                              expression (middle_end/flambda/augment_specialised_args.ml[295,11977+22]..[299,12182+73])
                                                                Pexp_constraint
                                                                expression (middle_end/flambda/augment_specialised_args.ml[296,12027+20]..[299,12182+73])
                                                                  Pexp_match
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[296,12027+26]..[296,12027+44])
                                                                    Pexp_field
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[296,12027+26]..[296,12027+33])
                                                                      Pexp_ident "spec_to" (middle_end/flambda/augment_specialised_args.ml[296,12027+26]..[296,12027+33])
                                                                    "projection" (middle_end/flambda/augment_specialised_args.ml[296,12027+34]..[296,12027+44])
                                                                  [
                                                                    <case>
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[297,12077+22]..[297,12077+26])
Ppat_construct "None" (middle_end/flambda/augment_specialised_args.ml[297,12077+22]..[297,12077+26])
None
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[297,12077+30]..[297,12077+63])
Pexp_construct "Existing_inner_free_var" (middle_end/flambda/augment_specialised_args.ml[297,12077+30]..[297,12077+53])
Some
  expression (middle_end/flambda/augment_specialised_args.ml[297,12077+54]..[297,12077+63])
    Pexp_ident "inner_var" (middle_end/flambda/augment_specialised_args.ml[297,12077+54]..[297,12077+63])
                                                                    <case>
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[298,12141+22]..[298,12141+37])
Ppat_construct "Some" (middle_end/flambda/augment_specialised_args.ml[298,12141+22]..[298,12141+26])
Some
  []
  pattern (middle_end/flambda/augment_specialised_args.ml[298,12141+27]..[298,12141+37])
    Ppat_var "projection" (middle_end/flambda/augment_specialised_args.ml[298,12141+27]..[298,12141+37])
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[299,12182+22]..[299,12182+73])
Pexp_construct "Projection_from_existing_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[299,12182+22]..[299,12182+62])
Some
  expression (middle_end/flambda/augment_specialised_args.ml[299,12182+63]..[299,12182+73])
    Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[299,12182+63]..[299,12182+73])
                                                                  ]
                                                                core_type (middle_end/flambda/augment_specialised_args.ml[295,11977+35]..[295,11977+47])
                                                                  Ptyp_constr "Definition.t" (middle_end/flambda/augment_specialised_args.ml[295,11977+35]..[295,11977+47])
                                                                  []
                                                          ]
                                                          expression (middle_end/flambda/augment_specialised_args.ml[301,12277+18]..[301,12277+59])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/augment_specialised_args.ml[301,12277+18]..[301,12277+36])
                                                              Pexp_ident "Definition.Set.add" (middle_end/flambda/augment_specialised_args.ml[301,12277+18]..[301,12277+36])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/augment_specialised_args.ml[301,12277+37]..[301,12277+47])
                                                                  Pexp_ident "definition" (middle_end/flambda/augment_specialised_args.ml[301,12277+37]..[301,12277+47])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/augment_specialised_args.ml[301,12277+48]..[301,12277+59])
                                                                  Pexp_ident "definitions" (middle_end/flambda/augment_specialised_args.ml[301,12277+48]..[301,12277+59])
                                                            ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/augment_specialised_args.ml[302,12338+14]..[302,12338+65])
                                                Pexp_field
                                                expression (middle_end/flambda/augment_specialised_args.ml[302,12338+14]..[302,12338+48])
                                                  Pexp_field
                                                  expression (middle_end/flambda/augment_specialised_args.ml[302,12338+14]..[302,12338+32])
                                                    Pexp_ident "what_to_specialise" (middle_end/flambda/augment_specialised_args.ml[302,12338+14]..[302,12338+32])
                                                  "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[302,12338+33]..[302,12338+48])
                                                "specialised_args" (middle_end/flambda/augment_specialised_args.ml[302,12338+49]..[302,12338+65])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/augment_specialised_args.ml[303,12404+14]..[303,12404+34])
                                                Pexp_ident "Definition.Set.empty" (middle_end/flambda/augment_specialised_args.ml[303,12404+14]..[303,12404+34])
                                          ]
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/augment_specialised_args.ml[304,12440+10]..[304,12440+64])
                                  Pexp_field
                                  expression (middle_end/flambda/augment_specialised_args.ml[304,12440+10]..[304,12440+59])
                                    Pexp_field
                                    expression (middle_end/flambda/augment_specialised_args.ml[304,12440+10]..[304,12440+44])
                                      Pexp_field
                                      expression (middle_end/flambda/augment_specialised_args.ml[304,12440+10]..[304,12440+28])
                                        Pexp_ident "what_to_specialise" (middle_end/flambda/augment_specialised_args.ml[304,12440+10]..[304,12440+28])
                                      "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[304,12440+29]..[304,12440+44])
                                    "function_decls" (middle_end/flambda/augment_specialised_args.ml[304,12440+45]..[304,12440+59])
                                  "funs" (middle_end/flambda/augment_specialised_args.ml[304,12440+60]..[304,12440+64])
                            ]
                      ]
                      expression (middle_end/flambda/augment_specialised_args.ml[306,12512+4]..[360,14884+7])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/augment_specialised_args.ml[306,12512+8]..[306,12512+13]) ghost
                              Ppat_constraint
                              pattern (middle_end/flambda/augment_specialised_args.ml[306,12512+8]..[306,12512+9])
                                Ppat_var "t" (middle_end/flambda/augment_specialised_args.ml[306,12512+8]..[306,12512+9])
                              core_type (middle_end/flambda/augment_specialised_args.ml[306,12512+12]..[306,12512+13]) ghost
                                Ptyp_poly
                                core_type (middle_end/flambda/augment_specialised_args.ml[306,12512+12]..[306,12512+13])
                                  Ptyp_constr "t" (middle_end/flambda/augment_specialised_args.ml[306,12512+12]..[306,12512+13])
                                  []
                            expression (middle_end/flambda/augment_specialised_args.ml[306,12512+8]..[314,12945+7])
                              Pexp_constraint
                              expression (middle_end/flambda/augment_specialised_args.ml[307,12528+6]..[314,12945+7])
                                Pexp_record
                                [
                                  "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[307,12528+8]..[307,12528+23])
                                    expression (middle_end/flambda/augment_specialised_args.ml[307,12528+26]..[307,12528+60])
                                      Pexp_field
                                      expression (middle_end/flambda/augment_specialised_args.ml[307,12528+26]..[307,12528+44])
                                        Pexp_ident "what_to_specialise" (middle_end/flambda/augment_specialised_args.ml[307,12528+26]..[307,12528+44])
                                      "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[307,12528+45]..[307,12528+60])
                                  "existing_definitions_via_spec_args_indexed_by_fun_var" (middle_end/flambda/augment_specialised_args.ml[308,12590+8]..[308,12590+61]) ghost
                                    expression (middle_end/flambda/augment_specialised_args.ml[308,12590+8]..[308,12590+61])
                                      Pexp_ident "existing_definitions_via_spec_args_indexed_by_fun_var" (middle_end/flambda/augment_specialised_args.ml[308,12590+8]..[308,12590+61])
                                  "new_lifted_defns_indexed_by_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[309,12653+8]..[309,12653+50])
                                    expression (middle_end/flambda/augment_specialised_args.ml[309,12653+53]..[309,12653+71])
                                      Pexp_ident "Variable.Map.empty" (middle_end/flambda/augment_specialised_args.ml[309,12653+53]..[309,12653+71])
                                  "new_outer_vars_indexed_by_new_lifted_defns" (middle_end/flambda/augment_specialised_args.ml[310,12726+8]..[310,12726+50])
                                    expression (middle_end/flambda/augment_specialised_args.ml[310,12726+53]..[310,12726+73])
                                      Pexp_ident "Projection.Map.empty" (middle_end/flambda/augment_specialised_args.ml[310,12726+53]..[310,12726+73])
                                  "functions" (middle_end/flambda/augment_specialised_args.ml[311,12801+8]..[311,12801+17])
                                    expression (middle_end/flambda/augment_specialised_args.ml[311,12801+20]..[311,12801+38])
                                      Pexp_ident "Variable.Map.empty" (middle_end/flambda/augment_specialised_args.ml[311,12801+20]..[311,12801+38])
                                  "make_direct_call_surrogates_for" (middle_end/flambda/augment_specialised_args.ml[312,12841+8]..[312,12841+39])
                                    expression (middle_end/flambda/augment_specialised_args.ml[313,12883+10]..[313,12883+60])
                                      Pexp_field
                                      expression (middle_end/flambda/augment_specialised_args.ml[313,12883+10]..[313,12883+28])
                                        Pexp_ident "what_to_specialise" (middle_end/flambda/augment_specialised_args.ml[313,12883+10]..[313,12883+28])
                                      "make_direct_call_surrogates_for" (middle_end/flambda/augment_specialised_args.ml[313,12883+29]..[313,12883+60])
                                ]
                                None
                              core_type (middle_end/flambda/augment_specialised_args.ml[306,12512+12]..[306,12512+13])
                                Ptyp_constr "t" (middle_end/flambda/augment_specialised_args.ml[306,12512+12]..[306,12512+13])
                                []
                        ]
                        expression (middle_end/flambda/augment_specialised_args.ml[323,13446+4]..[360,14884+7])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/augment_specialised_args.ml[323,13446+8]..[323,13446+16])
                                Ppat_var "by_group" (middle_end/flambda/augment_specialised_args.ml[323,13446+8]..[323,13446+16])
                              expression (middle_end/flambda/augment_specialised_args.ml[324,13465+6]..[334,13914+26])
                                Pexp_apply
                                expression (middle_end/flambda/augment_specialised_args.ml[324,13465+6]..[324,13465+28])
                                  Pexp_ident "Variable.Pair.Map.fold" (middle_end/flambda/augment_specialised_args.ml[324,13465+6]..[324,13465+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/augment_specialised_args.ml[324,13465+29]..[332,13853+21])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/augment_specialised_args.ml[324,13465+34]..[324,13465+50])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/augment_specialised_args.ml[324,13465+35]..[324,13465+42])
                                            Ppat_var "fun_var" (middle_end/flambda/augment_specialised_args.ml[324,13465+35]..[324,13465+42])
                                          pattern (middle_end/flambda/augment_specialised_args.ml[324,13465+44]..[324,13465+49])
                                            Ppat_var "group" (middle_end/flambda/augment_specialised_args.ml[324,13465+44]..[324,13465+49])
                                        ]
                                      expression (middle_end/flambda/augment_specialised_args.ml[324,13465+51]..[332,13853+20]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/flambda/augment_specialised_args.ml[324,13465+51]..[324,13465+62])
                                          Ppat_var "definitions" (middle_end/flambda/augment_specialised_args.ml[324,13465+51]..[324,13465+62])
                                        expression (middle_end/flambda/augment_specialised_args.ml[324,13465+63]..[332,13853+20]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/flambda/augment_specialised_args.ml[324,13465+63]..[324,13465+71])
                                            Ppat_var "by_group" (middle_end/flambda/augment_specialised_args.ml[324,13465+63]..[324,13465+71])
                                          expression (middle_end/flambda/augment_specialised_args.ml[325,13540+10]..[332,13853+20])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/augment_specialised_args.ml[325,13540+14]..[325,13540+38])
                                                  Ppat_var "fun_vars_and_definitions" (middle_end/flambda/augment_specialised_args.ml[325,13540+14]..[325,13540+38])
                                                expression (middle_end/flambda/augment_specialised_args.ml[326,13581+12]..[328,13677+66])
                                                  Pexp_match
                                                  expression (middle_end/flambda/augment_specialised_args.ml[326,13581+18]..[326,13581+50])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/augment_specialised_args.ml[326,13581+18]..[326,13581+35])
                                                      Pexp_ident "Variable.Map.find" (middle_end/flambda/augment_specialised_args.ml[326,13581+18]..[326,13581+35])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/augment_specialised_args.ml[326,13581+36]..[326,13581+41])
                                                          Pexp_ident "group" (middle_end/flambda/augment_specialised_args.ml[326,13581+36]..[326,13581+41])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/augment_specialised_args.ml[326,13581+42]..[326,13581+50])
                                                          Pexp_ident "by_group" (middle_end/flambda/augment_specialised_args.ml[326,13581+42]..[326,13581+50])
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (middle_end/flambda/augment_specialised_args.ml[327,13637+14]..[327,13637+33])
                                                        Ppat_exception
                                                        pattern (middle_end/flambda/augment_specialised_args.ml[327,13637+24]..[327,13637+33])
                                                          Ppat_construct "Not_found" (middle_end/flambda/augment_specialised_args.ml[327,13637+24]..[327,13637+33])
                                                          None
                                                      expression (middle_end/flambda/augment_specialised_args.ml[327,13637+37]..[327,13637+39])
                                                        Pexp_construct "[]" (middle_end/flambda/augment_specialised_args.ml[327,13637+37]..[327,13637+39])
                                                        None
                                                    <case>
                                                      pattern (middle_end/flambda/augment_specialised_args.ml[328,13677+14]..[328,13677+38])
                                                        Ppat_var "fun_vars_and_definitions" (middle_end/flambda/augment_specialised_args.ml[328,13677+14]..[328,13677+38])
                                                      expression (middle_end/flambda/augment_specialised_args.ml[328,13677+42]..[328,13677+66])
                                                        Pexp_ident "fun_vars_and_definitions" (middle_end/flambda/augment_specialised_args.ml[328,13677+42]..[328,13677+66])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/augment_specialised_args.ml[330,13757+10]..[332,13853+20])
                                              Pexp_apply
                                              expression (middle_end/flambda/augment_specialised_args.ml[330,13757+10]..[330,13757+26])
                                                Pexp_ident "Variable.Map.add" (middle_end/flambda/augment_specialised_args.ml[330,13757+10]..[330,13757+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/augment_specialised_args.ml[330,13757+27]..[330,13757+32])
                                                    Pexp_ident "group" (middle_end/flambda/augment_specialised_args.ml[330,13757+27]..[330,13757+32])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/augment_specialised_args.ml[331,13790+12]..[331,13790+62])
                                                    Pexp_construct "::" (middle_end/flambda/augment_specialised_args.ml[331,13790+35]..[331,13790+37])
                                                    Some
                                                      expression (middle_end/flambda/augment_specialised_args.ml[331,13790+13]..[331,13790+61]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/augment_specialised_args.ml[331,13790+13]..[331,13790+35])
                                                            Pexp_tuple
                                                            [
                                                              expression (middle_end/flambda/augment_specialised_args.ml[331,13790+14]..[331,13790+21])
                                                                Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[331,13790+14]..[331,13790+21])
                                                              expression (middle_end/flambda/augment_specialised_args.ml[331,13790+23]..[331,13790+34])
                                                                Pexp_ident "definitions" (middle_end/flambda/augment_specialised_args.ml[331,13790+23]..[331,13790+34])
                                                            ]
                                                          expression (middle_end/flambda/augment_specialised_args.ml[331,13790+37]..[331,13790+61])
                                                            Pexp_ident "fun_vars_and_definitions" (middle_end/flambda/augment_specialised_args.ml[331,13790+37]..[331,13790+61])
                                                        ]
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/augment_specialised_args.ml[332,13853+12]..[332,13853+20])
                                                    Pexp_ident "by_group" (middle_end/flambda/augment_specialised_args.ml[332,13853+12]..[332,13853+20])
                                              ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/augment_specialised_args.ml[333,13875+8]..[333,13875+38])
                                      Pexp_field
                                      expression (middle_end/flambda/augment_specialised_args.ml[333,13875+8]..[333,13875+26])
                                        Pexp_ident "what_to_specialise" (middle_end/flambda/augment_specialised_args.ml[333,13875+8]..[333,13875+26])
                                      "definitions" (middle_end/flambda/augment_specialised_args.ml[333,13875+27]..[333,13875+38])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/augment_specialised_args.ml[334,13914+8]..[334,13914+26])
                                      Pexp_ident "Variable.Map.empty" (middle_end/flambda/augment_specialised_args.ml[334,13914+8]..[334,13914+26])
                                ]
                          ]
                          expression (middle_end/flambda/augment_specialised_args.ml[336,13948+4]..[360,14884+7])
                            Pexp_letmodule "Backend" (middle_end/flambda/augment_specialised_args.ml[336,13948+15]..[336,13948+22])
                            module_expr (middle_end/flambda/augment_specialised_args.ml[336,13948+25]..[336,13948+63])
                              Pmod_unpack
                              expression (middle_end/flambda/augment_specialised_args.ml[336,13948+30]..[336,13948+62]) ghost
                                Pexp_constraint
                                expression (middle_end/flambda/augment_specialised_args.ml[336,13948+30]..[336,13948+45])
                                  Pexp_apply
                                  expression (middle_end/flambda/augment_specialised_args.ml[336,13948+31]..[336,13948+40])
                                    Pexp_ident "E.backend" (middle_end/flambda/augment_specialised_args.ml[336,13948+31]..[336,13948+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/augment_specialised_args.ml[336,13948+41]..[336,13948+44])
                                        Pexp_ident "env" (middle_end/flambda/augment_specialised_args.ml[336,13948+41]..[336,13948+44])
                                  ]
                                core_type (middle_end/flambda/augment_specialised_args.ml[336,13948+48]..[336,13948+62])
                                  Ptyp_package "Backend_intf.S" (middle_end/flambda/augment_specialised_args.ml[336,13948+48]..[336,13948+62])
                                  []
                            expression (middle_end/flambda/augment_specialised_args.ml[337,14015+4]..[360,14884+7])
                              Pexp_apply
                              expression (middle_end/flambda/augment_specialised_args.ml[337,14015+4]..[337,14015+21])
                                Pexp_ident "Variable.Map.fold" (middle_end/flambda/augment_specialised_args.ml[337,14015+4]..[337,14015+21])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/augment_specialised_args.ml[337,14015+22]..[358,14856+12])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/augment_specialised_args.ml[337,14015+27]..[337,14015+32])
                                      Ppat_var "group" (middle_end/flambda/augment_specialised_args.ml[337,14015+27]..[337,14015+32])
                                    expression (middle_end/flambda/augment_specialised_args.ml[337,14015+33]..[358,14856+11]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/augment_specialised_args.ml[337,14015+33]..[337,14015+57])
                                        Ppat_var "fun_vars_and_definitions" (middle_end/flambda/augment_specialised_args.ml[337,14015+33]..[337,14015+57])
                                      expression (middle_end/flambda/augment_specialised_args.ml[337,14015+58]..[358,14856+11]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/flambda/augment_specialised_args.ml[337,14015+58]..[337,14015+59])
                                          Ppat_var "t" (middle_end/flambda/augment_specialised_args.ml[337,14015+58]..[337,14015+59])
                                        expression (middle_end/flambda/augment_specialised_args.ml[338,14078+8]..[358,14856+11])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/augment_specialised_args.ml[338,14078+12]..[338,14078+22])
                                                Ppat_var "original_t" (middle_end/flambda/augment_specialised_args.ml[338,14078+12]..[338,14078+22])
                                              expression (middle_end/flambda/augment_specialised_args.ml[338,14078+25]..[338,14078+26])
                                                Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[338,14078+25]..[338,14078+26])
                                          ]
                                          expression (middle_end/flambda/augment_specialised_args.ml[339,14108+8]..[358,14856+11])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/augment_specialised_args.ml[339,14108+12]..[339,14108+13])
                                                  Ppat_var "t" (middle_end/flambda/augment_specialised_args.ml[339,14108+12]..[339,14108+13])
                                                expression (middle_end/flambda/augment_specialised_args.ml[341,14194+10]..[347,14432+36])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/augment_specialised_args.ml[341,14194+10]..[341,14194+24])
                                                    Pexp_ident "List.fold_left" (middle_end/flambda/augment_specialised_args.ml[341,14194+10]..[341,14194+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/augment_specialised_args.ml[341,14194+25]..[345,14389+28])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/flambda/augment_specialised_args.ml[341,14194+30]..[341,14194+31])
                                                          Ppat_var "t" (middle_end/flambda/augment_specialised_args.ml[341,14194+30]..[341,14194+31])
                                                        expression (middle_end/flambda/augment_specialised_args.ml[341,14194+32]..[345,14389+27]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (middle_end/flambda/augment_specialised_args.ml[341,14194+32]..[341,14194+54])
                                                            Ppat_tuple
                                                            [
                                                              pattern (middle_end/flambda/augment_specialised_args.ml[341,14194+33]..[341,14194+40])
                                                                Ppat_var "fun_var" (middle_end/flambda/augment_specialised_args.ml[341,14194+33]..[341,14194+40])
                                                              pattern (middle_end/flambda/augment_specialised_args.ml[341,14194+42]..[341,14194+53])
                                                                Ppat_var "definitions" (middle_end/flambda/augment_specialised_args.ml[341,14194+42]..[341,14194+53])
                                                            ]
                                                          expression (middle_end/flambda/augment_specialised_args.ml[342,14252+14]..[345,14389+27])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/augment_specialised_args.ml[342,14252+14]..[342,14252+28])
                                                              Pexp_ident "List.fold_left" (middle_end/flambda/augment_specialised_args.ml[342,14252+14]..[342,14252+28])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/augment_specialised_args.ml[342,14252+29]..[343,14302+68])
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (middle_end/flambda/augment_specialised_args.ml[342,14252+34]..[342,14252+35])
                                                                    Ppat_var "t" (middle_end/flambda/augment_specialised_args.ml[342,14252+34]..[342,14252+35])
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[342,14252+36]..[343,14302+67]) ghost
                                                                    Pexp_fun
                                                                    Nolabel
                                                                    None
                                                                    pattern (middle_end/flambda/augment_specialised_args.ml[342,14252+36]..[342,14252+46])
                                                                      Ppat_var "definition" (middle_end/flambda/augment_specialised_args.ml[342,14252+36]..[342,14252+46])
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[343,14302+18]..[343,14302+67])
                                                                      Pexp_apply
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[343,14302+18]..[343,14302+37])
Pexp_ident "new_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[343,14302+18]..[343,14302+37])
                                                                      [
<arg>
Nolabel
  expression (middle_end/flambda/augment_specialised_args.ml[343,14302+38]..[343,14302+39])
    Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[343,14302+38]..[343,14302+39])
<arg>
Labelled "fun_var"
  expression (middle_end/flambda/augment_specialised_args.ml[343,14302+41]..[343,14302+48])
    Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[343,14302+41]..[343,14302+48])
<arg>
Labelled "group"
  expression (middle_end/flambda/augment_specialised_args.ml[343,14302+50]..[343,14302+55])
    Pexp_ident "group" (middle_end/flambda/augment_specialised_args.ml[343,14302+50]..[343,14302+55])
<arg>
Labelled "definition"
  expression (middle_end/flambda/augment_specialised_args.ml[343,14302+57]..[343,14302+67])
    Pexp_ident "definition" (middle_end/flambda/augment_specialised_args.ml[343,14302+57]..[343,14302+67])
                                                                      ]
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/augment_specialised_args.ml[344,14371+16]..[344,14371+17])
                                                                  Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[344,14371+16]..[344,14371+17])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/augment_specialised_args.ml[345,14389+16]..[345,14389+27])
                                                                  Pexp_ident "definitions" (middle_end/flambda/augment_specialised_args.ml[345,14389+16]..[345,14389+27])
                                                            ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/augment_specialised_args.ml[346,14418+12]..[346,14418+13])
                                                        Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[346,14418+12]..[346,14418+13])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/augment_specialised_args.ml[347,14432+12]..[347,14432+36])
                                                        Pexp_ident "fun_vars_and_definitions" (middle_end/flambda/augment_specialised_args.ml[347,14432+12]..[347,14432+36])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/augment_specialised_args.ml[349,14480+8]..[358,14856+11])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/augment_specialised_args.ml[349,14480+12]..[349,14480+43])
                                                    Ppat_var "some_function_has_too_many_args" (middle_end/flambda/augment_specialised_args.ml[349,14480+12]..[349,14480+43])
                                                  expression (middle_end/flambda/augment_specialised_args.ml[350,14526+10]..[353,14716+23])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/augment_specialised_args.ml[350,14526+10]..[350,14526+29])
                                                      Pexp_ident "Variable.Map.exists" (middle_end/flambda/augment_specialised_args.ml[350,14526+10]..[350,14526+29])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/augment_specialised_args.ml[350,14526+30]..[352,14656+59])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (middle_end/flambda/augment_specialised_args.ml[350,14526+35]..[350,14526+36])
                                                            Ppat_any
                                                          expression (middle_end/flambda/augment_specialised_args.ml[350,14526+37]..[352,14656+58]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (middle_end/flambda/augment_specialised_args.ml[350,14526+37]..[350,14526+74])
                                                              Ppat_constraint
                                                              pattern (middle_end/flambda/augment_specialised_args.ml[350,14526+38]..[350,14526+54])
                                                                Ppat_var "for_one_function" (middle_end/flambda/augment_specialised_args.ml[350,14526+38]..[350,14526+54])
                                                              core_type (middle_end/flambda/augment_specialised_args.ml[350,14526+57]..[350,14526+73])
                                                                Ptyp_constr "for_one_function" (middle_end/flambda/augment_specialised_args.ml[350,14526+57]..[350,14526+73])
                                                                []
                                                            expression (middle_end/flambda/augment_specialised_args.ml[351,14604+14]..[352,14656+58])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/augment_specialised_args.ml[352,14656+16]..[352,14656+17])
                                                                Pexp_ident ">" (middle_end/flambda/augment_specialised_args.ml[352,14656+16]..[352,14656+17])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[351,14604+14]..[351,14604+51])
                                                                    Pexp_field
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[351,14604+14]..[351,14604+30])
                                                                      Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[351,14604+14]..[351,14604+30])
                                                                    "total_number_of_args" (middle_end/flambda/augment_specialised_args.ml[351,14604+31]..[351,14604+51])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[352,14656+18]..[352,14656+58])
                                                                    Pexp_ident "Backend.max_sensible_number_of_arguments" (middle_end/flambda/augment_specialised_args.ml[352,14656+18]..[352,14656+58])
                                                              ]
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/augment_specialised_args.ml[353,14716+12]..[353,14716+23])
                                                          Pexp_field
                                                          expression (middle_end/flambda/augment_specialised_args.ml[353,14716+12]..[353,14716+13])
                                                            Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[353,14716+12]..[353,14716+13])
                                                          "functions" (middle_end/flambda/augment_specialised_args.ml[353,14716+14]..[353,14716+23])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/augment_specialised_args.ml[355,14751+8]..[358,14856+11])
                                                Pexp_ifthenelse
                                                expression (middle_end/flambda/augment_specialised_args.ml[355,14751+11]..[355,14751+42])
                                                  Pexp_ident "some_function_has_too_many_args" (middle_end/flambda/augment_specialised_args.ml[355,14751+11]..[355,14751+42])
                                                expression (middle_end/flambda/augment_specialised_args.ml[356,14799+10]..[356,14799+20])
                                                  Pexp_ident "original_t" (middle_end/flambda/augment_specialised_args.ml[356,14799+10]..[356,14799+20])
                                                Some
                                                  expression (middle_end/flambda/augment_specialised_args.ml[358,14856+10]..[358,14856+11])
                                                    Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[358,14856+10]..[358,14856+11])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/augment_specialised_args.ml[359,14869+6]..[359,14869+14])
                                    Pexp_ident "by_group" (middle_end/flambda/augment_specialised_args.ml[359,14869+6]..[359,14869+14])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/augment_specialised_args.ml[360,14884+6]..[360,14884+7])
                                    Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[360,14884+6]..[360,14884+7])
                              ]
            ]
        ]
  structure_item (middle_end/flambda/augment_specialised_args.ml[363,14897+0]..[363,14897+39])
    Pstr_module
    "P" (middle_end/flambda/augment_specialised_args.ml[363,14897+7]..[363,14897+8])
      module_expr (middle_end/flambda/augment_specialised_args.ml[363,14897+11]..[363,14897+39])
        Pmod_ident "Processed_what_to_specialise" (middle_end/flambda/augment_specialised_args.ml[363,14897+11]..[363,14897+39])
  structure_item (middle_end/flambda/augment_specialised_args.ml[365,14938+0]..[397,16680+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/augment_specialised_args.ml[365,14938+4]..[365,14938+20])
          Ppat_var "check_invariants" (middle_end/flambda/augment_specialised_args.ml[365,14938+4]..[365,14938+20])
        expression (middle_end/flambda/augment_specialised_args.ml[365,14938+21]..[397,16680+5]) ghost
          Pexp_fun
          Labelled "pass_name"
          None
          pattern (middle_end/flambda/augment_specialised_args.ml[365,14938+22]..[365,14938+31])
            Ppat_var "pass_name" (middle_end/flambda/augment_specialised_args.ml[365,14938+22]..[365,14938+31])
          expression (middle_end/flambda/augment_specialised_args.ml[365,14938+32]..[397,16680+5]) ghost
            Pexp_fun
            Labelled "set_of_closures"
            None
            pattern (middle_end/flambda/augment_specialised_args.ml[365,14938+34]..[365,14938+75])
              Ppat_constraint
              pattern (middle_end/flambda/augment_specialised_args.ml[365,14938+34]..[365,14938+49])
                Ppat_var "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[365,14938+34]..[365,14938+49])
              core_type (middle_end/flambda/augment_specialised_args.ml[365,14938+52]..[365,14938+75])
                Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/augment_specialised_args.ml[365,14938+52]..[365,14938+75])
                []
            expression (middle_end/flambda/augment_specialised_args.ml[366,15015+6]..[397,16680+5]) ghost
              Pexp_fun
              Labelled "original_set_of_closures"
              None
              pattern (middle_end/flambda/augment_specialised_args.ml[366,15015+7]..[366,15015+31])
                Ppat_var "original_set_of_closures" (middle_end/flambda/augment_specialised_args.ml[366,15015+7]..[366,15015+31])
              expression (middle_end/flambda/augment_specialised_args.ml[367,15049+2]..[397,16680+5])
                Pexp_ifthenelse
                expression (middle_end/flambda/augment_specialised_args.ml[367,15049+5]..[367,15049+38])
                  Pexp_apply
                  expression (middle_end/flambda/augment_specialised_args.ml[367,15049+5]..[367,15049+6])
                    Pexp_ident "!" (middle_end/flambda/augment_specialised_args.ml[367,15049+5]..[367,15049+6])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/augment_specialised_args.ml[367,15049+6]..[367,15049+38])
                        Pexp_ident "Clflags.flambda_invariant_checks" (middle_end/flambda/augment_specialised_args.ml[367,15049+6]..[367,15049+38])
                  ]
                expression (middle_end/flambda/augment_specialised_args.ml[367,15049+44]..[397,16680+5])
                  Pexp_apply
                  expression (middle_end/flambda/augment_specialised_args.ml[368,15099+4]..[368,15099+21])
                    Pexp_ident "Variable.Map.iter" (middle_end/flambda/augment_specialised_args.ml[368,15099+4]..[368,15099+21])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/augment_specialised_args.ml[368,15099+22]..[395,16594+43])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/augment_specialised_args.ml[368,15099+27]..[368,15099+34])
                          Ppat_var "fun_var" (middle_end/flambda/augment_specialised_args.ml[368,15099+27]..[368,15099+34])
                        expression (middle_end/flambda/augment_specialised_args.ml[369,15134+14]..[395,16594+42]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/augment_specialised_args.ml[369,15134+14]..[369,15134+60])
                            Ppat_constraint
                            pattern (middle_end/flambda/augment_specialised_args.ml[369,15134+15]..[369,15134+28])
                              Ppat_var "function_decl" (middle_end/flambda/augment_specialised_args.ml[369,15134+15]..[369,15134+28])
                            core_type (middle_end/flambda/augment_specialised_args.ml[369,15134+31]..[369,15134+59])
                              Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/augment_specialised_args.ml[369,15134+31]..[369,15134+59])
                              []
                          expression (middle_end/flambda/augment_specialised_args.ml[370,15198+8]..[395,16594+42])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/augment_specialised_args.ml[370,15198+12]..[370,15198+18])
                                  Ppat_var "params" (middle_end/flambda/augment_specialised_args.ml[370,15198+12]..[370,15198+18])
                                expression (middle_end/flambda/augment_specialised_args.ml[370,15198+21]..[370,15198+60])
                                  Pexp_apply
                                  expression (middle_end/flambda/augment_specialised_args.ml[370,15198+21]..[370,15198+39])
                                    Pexp_ident "Parameter.Set.vars" (middle_end/flambda/augment_specialised_args.ml[370,15198+21]..[370,15198+39])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/augment_specialised_args.ml[370,15198+40]..[370,15198+60])
                                        Pexp_field
                                        expression (middle_end/flambda/augment_specialised_args.ml[370,15198+40]..[370,15198+53])
                                          Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[370,15198+40]..[370,15198+53])
                                        "params" (middle_end/flambda/augment_specialised_args.ml[370,15198+54]..[370,15198+60])
                                  ]
                            ]
                            expression (middle_end/flambda/augment_specialised_args.ml[371,15262+8]..[395,16594+42])
                              Pexp_apply
                              expression (middle_end/flambda/augment_specialised_args.ml[371,15262+8]..[371,15262+25])
                                Pexp_ident "Variable.Map.iter" (middle_end/flambda/augment_specialised_args.ml[371,15262+8]..[371,15262+25])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/augment_specialised_args.ml[371,15262+26]..[394,16575+18])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/augment_specialised_args.ml[371,15262+31]..[371,15262+40])
                                      Ppat_var "inner_var" (middle_end/flambda/augment_specialised_args.ml[371,15262+31]..[371,15262+40])
                                    expression (middle_end/flambda/augment_specialised_args.ml[372,15303+20]..[394,16575+17]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/augment_specialised_args.ml[372,15303+20]..[372,15303+56])
                                        Ppat_constraint
                                        pattern (middle_end/flambda/augment_specialised_args.ml[372,15303+21]..[372,15303+30])
                                          Ppat_var "outer_var" (middle_end/flambda/augment_specialised_args.ml[372,15303+21]..[372,15303+30])
                                        core_type (middle_end/flambda/augment_specialised_args.ml[372,15303+33]..[372,15303+55])
                                          Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/augment_specialised_args.ml[372,15303+33]..[372,15303+55])
                                          []
                                      expression (middle_end/flambda/augment_specialised_args.ml[373,15363+14]..[394,16575+17])
                                        Pexp_ifthenelse
                                        expression (middle_end/flambda/augment_specialised_args.ml[373,15363+17]..[373,15363+50])
                                          Pexp_apply
                                          expression (middle_end/flambda/augment_specialised_args.ml[373,15363+17]..[373,15363+33])
                                            Pexp_ident "Variable.Set.mem" (middle_end/flambda/augment_specialised_args.ml[373,15363+17]..[373,15363+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/augment_specialised_args.ml[373,15363+34]..[373,15363+43])
                                                Pexp_ident "inner_var" (middle_end/flambda/augment_specialised_args.ml[373,15363+34]..[373,15363+43])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/augment_specialised_args.ml[373,15363+44]..[373,15363+50])
                                                Pexp_ident "params" (middle_end/flambda/augment_specialised_args.ml[373,15363+44]..[373,15363+50])
                                          ]
                                        expression (middle_end/flambda/augment_specialised_args.ml[373,15363+56]..[394,16575+17])
                                          Pexp_sequence
                                          expression (middle_end/flambda/augment_specialised_args.ml[374,15425+16]..[375,15485+48])
                                            Pexp_assert
                                            expression (middle_end/flambda/augment_specialised_args.ml[374,15425+23]..[375,15485+48])
                                              Pexp_apply
                                              expression (middle_end/flambda/augment_specialised_args.ml[374,15425+24]..[374,15425+27])
                                                Pexp_ident "not" (middle_end/flambda/augment_specialised_args.ml[374,15425+24]..[374,15425+27])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/augment_specialised_args.ml[374,15425+28]..[375,15485+47])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/augment_specialised_args.ml[374,15425+29]..[374,15425+45])
                                                      Pexp_ident "Variable.Set.mem" (middle_end/flambda/augment_specialised_args.ml[374,15425+29]..[374,15425+45])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/augment_specialised_args.ml[374,15425+46]..[374,15425+59])
                                                          Pexp_field
                                                          expression (middle_end/flambda/augment_specialised_args.ml[374,15425+46]..[374,15425+55])
                                                            Pexp_ident "outer_var" (middle_end/flambda/augment_specialised_args.ml[374,15425+46]..[374,15425+55])
                                                          "var" (middle_end/flambda/augment_specialised_args.ml[374,15425+56]..[374,15425+59])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/augment_specialised_args.ml[375,15485+18]..[375,15485+46])
                                                          Pexp_field
                                                          expression (middle_end/flambda/augment_specialised_args.ml[375,15485+18]..[375,15485+31])
                                                            Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[375,15485+18]..[375,15485+31])
                                                          "free_variables" (middle_end/flambda/augment_specialised_args.ml[375,15485+32]..[375,15485+46])
                                                    ]
                                              ]
                                          expression (middle_end/flambda/augment_specialised_args.ml[376,15535+16]..[393,16553+21])
                                            Pexp_match
                                            expression (middle_end/flambda/augment_specialised_args.ml[376,15535+22]..[376,15535+42])
                                              Pexp_field
                                              expression (middle_end/flambda/augment_specialised_args.ml[376,15535+22]..[376,15535+31])
                                                Pexp_ident "outer_var" (middle_end/flambda/augment_specialised_args.ml[376,15535+22]..[376,15535+31])
                                              "projection" (middle_end/flambda/augment_specialised_args.ml[376,15535+32]..[376,15535+42])
                                            [
                                              <case>
                                                pattern (middle_end/flambda/augment_specialised_args.ml[377,15583+18]..[377,15583+22])
                                                  Ppat_construct "None" (middle_end/flambda/augment_specialised_args.ml[377,15583+18]..[377,15583+22])
                                                  None
                                                expression (middle_end/flambda/augment_specialised_args.ml[377,15583+26]..[377,15583+28])
                                                  Pexp_construct "()" (middle_end/flambda/augment_specialised_args.ml[377,15583+26]..[377,15583+28])
                                                  None
                                              <case>
                                                pattern (middle_end/flambda/augment_specialised_args.ml[378,15612+18]..[378,15612+33])
                                                  Ppat_construct "Some" (middle_end/flambda/augment_specialised_args.ml[378,15612+18]..[378,15612+22])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[378,15612+23]..[378,15612+33])
                                                      Ppat_var "projection" (middle_end/flambda/augment_specialised_args.ml[378,15612+23]..[378,15612+33])
                                                expression (middle_end/flambda/augment_specialised_args.ml[379,15649+18]..[393,16553+21])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/augment_specialised_args.ml[379,15649+22]..[379,15649+26])
                                                        Ppat_var "from" (middle_end/flambda/augment_specialised_args.ml[379,15649+22]..[379,15649+26])
                                                      expression (middle_end/flambda/augment_specialised_args.ml[379,15649+29]..[379,15649+66])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/augment_specialised_args.ml[379,15649+29]..[379,15649+55])
                                                          Pexp_ident "Projection.projecting_from" (middle_end/flambda/augment_specialised_args.ml[379,15649+29]..[379,15649+55])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/augment_specialised_args.ml[379,15649+56]..[379,15649+66])
                                                              Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[379,15649+56]..[379,15649+66])
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/augment_specialised_args.ml[380,15719+18]..[393,16553+21])
                                                    Pexp_ifthenelse
                                                    expression (middle_end/flambda/augment_specialised_args.ml[380,15719+21]..[380,15719+55])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/augment_specialised_args.ml[380,15719+21]..[380,15719+24])
                                                        Pexp_ident "not" (middle_end/flambda/augment_specialised_args.ml[380,15719+21]..[380,15719+24])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[380,15719+25]..[380,15719+55])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/augment_specialised_args.ml[380,15719+26]..[380,15719+42])
                                                              Pexp_ident "Variable.Set.mem" (middle_end/flambda/augment_specialised_args.ml[380,15719+26]..[380,15719+42])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/augment_specialised_args.ml[380,15719+43]..[380,15719+47])
                                                                  Pexp_ident "from" (middle_end/flambda/augment_specialised_args.ml[380,15719+43]..[380,15719+47])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/augment_specialised_args.ml[380,15719+48]..[380,15719+54])
                                                                  Pexp_ident "params" (middle_end/flambda/augment_specialised_args.ml[380,15719+48]..[380,15719+54])
                                                            ]
                                                      ]
                                                    expression (middle_end/flambda/augment_specialised_args.ml[380,15719+61]..[393,16553+21])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/augment_specialised_args.ml[381,15786+20]..[381,15786+37])
                                                        Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/augment_specialised_args.ml[381,15786+20]..[381,15786+37])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[381,15786+38]..[386,16154+68])
                                                            Pexp_constant PConst_string("Augment_specialised_args (%s): specialised argument (%a -> %a) references a projection variable that is not a specialised argument of the function %a. @ The set of closures before the transformation was:@  %a. @ The set of closures after the transformation was:@ %a.",(middle_end/flambda/augment_specialised_args.ml[381,15786+39]..[386,16154+67]),None)
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[387,16223+22]..[387,16223+31])
                                                            Pexp_ident "pass_name" (middle_end/flambda/augment_specialised_args.ml[387,16223+22]..[387,16223+31])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[388,16255+22]..[388,16255+36])
                                                            Pexp_ident "Variable.print" (middle_end/flambda/augment_specialised_args.ml[388,16255+22]..[388,16255+36])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[388,16255+37]..[388,16255+46])
                                                            Pexp_ident "inner_var" (middle_end/flambda/augment_specialised_args.ml[388,16255+37]..[388,16255+46])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[389,16302+22]..[389,16302+50])
                                                            Pexp_ident "Flambda.print_specialised_to" (middle_end/flambda/augment_specialised_args.ml[389,16302+22]..[389,16302+50])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[389,16302+51]..[389,16302+60])
                                                            Pexp_ident "outer_var" (middle_end/flambda/augment_specialised_args.ml[389,16302+51]..[389,16302+60])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[390,16363+22]..[390,16363+36])
                                                            Pexp_ident "Variable.print" (middle_end/flambda/augment_specialised_args.ml[390,16363+22]..[390,16363+36])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[390,16363+37]..[390,16363+44])
                                                            Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[390,16363+37]..[390,16363+44])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[391,16408+22]..[391,16408+51])
                                                            Pexp_ident "Flambda.print_set_of_closures" (middle_end/flambda/augment_specialised_args.ml[391,16408+22]..[391,16408+51])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[391,16408+52]..[391,16408+76])
                                                            Pexp_ident "original_set_of_closures" (middle_end/flambda/augment_specialised_args.ml[391,16408+52]..[391,16408+76])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[392,16485+22]..[392,16485+51])
                                                            Pexp_ident "Flambda.print_set_of_closures" (middle_end/flambda/augment_specialised_args.ml[392,16485+22]..[392,16485+51])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[392,16485+52]..[392,16485+67])
                                                            Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[392,16485+52]..[392,16485+67])
                                                      ]
                                                    None
                                            ]
                                        None
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/augment_specialised_args.ml[395,16594+10]..[395,16594+42])
                                    Pexp_field
                                    expression (middle_end/flambda/augment_specialised_args.ml[395,16594+10]..[395,16594+25])
                                      Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[395,16594+10]..[395,16594+25])
                                    "specialised_args" (middle_end/flambda/augment_specialised_args.ml[395,16594+26]..[395,16594+42])
                              ]
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/augment_specialised_args.ml[396,16638+6]..[396,16638+41])
                        Pexp_field
                        expression (middle_end/flambda/augment_specialised_args.ml[396,16638+6]..[396,16638+36])
                          Pexp_field
                          expression (middle_end/flambda/augment_specialised_args.ml[396,16638+6]..[396,16638+21])
                            Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[396,16638+6]..[396,16638+21])
                          "function_decls" (middle_end/flambda/augment_specialised_args.ml[396,16638+22]..[396,16638+36])
                        "funs" (middle_end/flambda/augment_specialised_args.ml[396,16638+37]..[396,16638+41])
                  ]
                None
    ]
  structure_item (middle_end/flambda/augment_specialised_args.ml[399,16687+0]..[762,31859+3])
    Pstr_module
    "Make" (middle_end/flambda/augment_specialised_args.ml[399,16687+7]..[399,16687+11])
      module_expr (middle_end/flambda/augment_specialised_args.ml[399,16687+12]..[762,31859+3])
        Pmod_functor "T" (middle_end/flambda/augment_specialised_args.ml[399,16687+13]..[399,16687+14])
        module_type (middle_end/flambda/augment_specialised_args.ml[399,16687+17]..[399,16687+18])
          Pmty_ident "S" (middle_end/flambda/augment_specialised_args.ml[399,16687+17]..[399,16687+18])
        module_expr (middle_end/flambda/augment_specialised_args.ml[399,16687+22]..[762,31859+3])
          Pmod_structure
          [
            structure_item (middle_end/flambda/augment_specialised_args.ml[400,16716+2]..[400,16716+55])
              Pstr_value Nonrec
              [
                <def>
                  pattern (middle_end/flambda/augment_specialised_args.ml[400,16716+6]..[400,16716+8])
                    Ppat_construct "()" (middle_end/flambda/augment_specialised_args.ml[400,16716+6]..[400,16716+8])
                    None
                  expression (middle_end/flambda/augment_specialised_args.ml[400,16716+11]..[400,16716+55])
                    Pexp_apply
                    expression (middle_end/flambda/augment_specialised_args.ml[400,16716+11]..[400,16716+32])
                      Pexp_ident "Pass_wrapper.register" (middle_end/flambda/augment_specialised_args.ml[400,16716+11]..[400,16716+32])
                    [
                      <arg>
                      Labelled "pass_name"
                        expression (middle_end/flambda/augment_specialised_args.ml[400,16716+44]..[400,16716+55])
                          Pexp_ident "T.pass_name" (middle_end/flambda/augment_specialised_args.ml[400,16716+44]..[400,16716+55])
                    ]
              ]
            structure_item (middle_end/flambda/augment_specialised_args.ml[402,16773+2]..[418,17361+48])
              Pstr_value Nonrec
              [
                <def>
                  pattern (middle_end/flambda/augment_specialised_args.ml[402,16773+6]..[402,16773+36])
                    Ppat_var "rename_function_and_parameters" (middle_end/flambda/augment_specialised_args.ml[402,16773+6]..[402,16773+36])
                  expression (middle_end/flambda/augment_specialised_args.ml[402,16773+37]..[418,17361+48]) ghost
                    Pexp_fun
                    Labelled "fun_var"
                    None
                    pattern (middle_end/flambda/augment_specialised_args.ml[402,16773+38]..[402,16773+45])
                      Ppat_var "fun_var" (middle_end/flambda/augment_specialised_args.ml[402,16773+38]..[402,16773+45])
                    expression (middle_end/flambda/augment_specialised_args.ml[403,16819+8]..[418,17361+48]) ghost
                      Pexp_fun
                      Labelled "function_decl"
                      None
                      pattern (middle_end/flambda/augment_specialised_args.ml[403,16819+10]..[403,16819+54])
                        Ppat_constraint
                        pattern (middle_end/flambda/augment_specialised_args.ml[403,16819+10]..[403,16819+23])
                          Ppat_var "function_decl" (middle_end/flambda/augment_specialised_args.ml[403,16819+10]..[403,16819+23])
                        core_type (middle_end/flambda/augment_specialised_args.ml[403,16819+26]..[403,16819+54])
                          Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/augment_specialised_args.ml[403,16819+26]..[403,16819+54])
                          []
                      expression (middle_end/flambda/augment_specialised_args.ml[404,16877+4]..[418,17361+48])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/augment_specialised_args.ml[404,16877+8]..[404,16877+19])
                              Ppat_var "new_fun_var" (middle_end/flambda/augment_specialised_args.ml[404,16877+8]..[404,16877+19])
                            expression (middle_end/flambda/augment_specialised_args.ml[404,16877+22]..[404,16877+45])
                              Pexp_apply
                              expression (middle_end/flambda/augment_specialised_args.ml[404,16877+22]..[404,16877+37])
                                Pexp_ident "Variable.rename" (middle_end/flambda/augment_specialised_args.ml[404,16877+22]..[404,16877+37])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/augment_specialised_args.ml[404,16877+38]..[404,16877+45])
                                    Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[404,16877+38]..[404,16877+45])
                              ]
                        ]
                        expression (middle_end/flambda/augment_specialised_args.ml[405,16926+4]..[418,17361+48])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/augment_specialised_args.ml[405,16926+8]..[405,16926+28])
                                Ppat_var "params_renaming_list" (middle_end/flambda/augment_specialised_args.ml[405,16926+8]..[405,16926+28])
                              expression (middle_end/flambda/augment_specialised_args.ml[406,16957+6]..[409,17066+28])
                                Pexp_apply
                                expression (middle_end/flambda/augment_specialised_args.ml[406,16957+6]..[406,16957+14])
                                  Pexp_ident "List.map" (middle_end/flambda/augment_specialised_args.ml[406,16957+6]..[406,16957+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/augment_specialised_args.ml[406,16957+15]..[408,17038+27])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/augment_specialised_args.ml[406,16957+20]..[406,16957+25])
                                        Ppat_var "param" (middle_end/flambda/augment_specialised_args.ml[406,16957+20]..[406,16957+25])
                                      expression (middle_end/flambda/augment_specialised_args.ml[407,16986+10]..[408,17038+26])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/augment_specialised_args.ml[407,16986+14]..[407,16986+23])
                                              Ppat_var "new_param" (middle_end/flambda/augment_specialised_args.ml[407,16986+14]..[407,16986+23])
                                            expression (middle_end/flambda/augment_specialised_args.ml[407,16986+26]..[407,16986+48])
                                              Pexp_apply
                                              expression (middle_end/flambda/augment_specialised_args.ml[407,16986+26]..[407,16986+42])
                                                Pexp_ident "Parameter.rename" (middle_end/flambda/augment_specialised_args.ml[407,16986+26]..[407,16986+42])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/augment_specialised_args.ml[407,16986+43]..[407,16986+48])
                                                    Pexp_ident "param" (middle_end/flambda/augment_specialised_args.ml[407,16986+43]..[407,16986+48])
                                              ]
                                        ]
                                        expression (middle_end/flambda/augment_specialised_args.ml[408,17038+10]..[408,17038+26])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/augment_specialised_args.ml[408,17038+10]..[408,17038+15])
                                              Pexp_ident "param" (middle_end/flambda/augment_specialised_args.ml[408,17038+10]..[408,17038+15])
                                            expression (middle_end/flambda/augment_specialised_args.ml[408,17038+17]..[408,17038+26])
                                              Pexp_ident "new_param" (middle_end/flambda/augment_specialised_args.ml[408,17038+17]..[408,17038+26])
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/augment_specialised_args.ml[409,17066+8]..[409,17066+28])
                                      Pexp_field
                                      expression (middle_end/flambda/augment_specialised_args.ml[409,17066+8]..[409,17066+21])
                                        Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[409,17066+8]..[409,17066+21])
                                      "params" (middle_end/flambda/augment_specialised_args.ml[409,17066+22]..[409,17066+28])
                                ]
                          ]
                          expression (middle_end/flambda/augment_specialised_args.ml[411,17102+4]..[418,17361+48])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/augment_specialised_args.ml[411,17102+8]..[411,17102+22])
                                  Ppat_var "renamed_params" (middle_end/flambda/augment_specialised_args.ml[411,17102+8]..[411,17102+22])
                                expression (middle_end/flambda/augment_specialised_args.ml[411,17102+25]..[411,17102+58])
                                  Pexp_apply
                                  expression (middle_end/flambda/augment_specialised_args.ml[411,17102+25]..[411,17102+33])
                                    Pexp_ident "List.map" (middle_end/flambda/augment_specialised_args.ml[411,17102+25]..[411,17102+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/augment_specialised_args.ml[411,17102+34]..[411,17102+37])
                                        Pexp_ident "snd" (middle_end/flambda/augment_specialised_args.ml[411,17102+34]..[411,17102+37])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/augment_specialised_args.ml[411,17102+38]..[411,17102+58])
                                        Pexp_ident "params_renaming_list" (middle_end/flambda/augment_specialised_args.ml[411,17102+38]..[411,17102+58])
                                  ]
                            ]
                            expression (middle_end/flambda/augment_specialised_args.ml[412,17164+4]..[418,17361+48])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/augment_specialised_args.ml[412,17164+8]..[412,17164+23])
                                    Ppat_var "params_renaming" (middle_end/flambda/augment_specialised_args.ml[412,17164+8]..[412,17164+23])
                                  expression (middle_end/flambda/augment_specialised_args.ml[413,17190+6]..[416,17321+32])
                                    Pexp_apply
                                    expression (middle_end/flambda/augment_specialised_args.ml[413,17190+6]..[413,17190+26])
                                      Pexp_ident "Variable.Map.of_list" (middle_end/flambda/augment_specialised_args.ml[413,17190+6]..[413,17190+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[414,17217+8]..[416,17321+32])
                                          Pexp_apply
                                          expression (middle_end/flambda/augment_specialised_args.ml[414,17217+9]..[414,17217+17])
                                            Pexp_ident "List.map" (middle_end/flambda/augment_specialised_args.ml[414,17217+9]..[414,17217+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/augment_specialised_args.ml[414,17217+18]..[415,17262+58])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (middle_end/flambda/augment_specialised_args.ml[414,17217+23]..[414,17217+41])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[414,17217+24]..[414,17217+29])
                                                      Ppat_var "param" (middle_end/flambda/augment_specialised_args.ml[414,17217+24]..[414,17217+29])
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[414,17217+31]..[414,17217+40])
                                                      Ppat_var "new_param" (middle_end/flambda/augment_specialised_args.ml[414,17217+31]..[414,17217+40])
                                                  ]
                                                expression (middle_end/flambda/augment_specialised_args.ml[415,17262+13]..[415,17262+57])
                                                  Pexp_tuple
                                                  [
                                                    expression (middle_end/flambda/augment_specialised_args.ml[415,17262+13]..[415,17262+32])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/augment_specialised_args.ml[415,17262+13]..[415,17262+26])
                                                        Pexp_ident "Parameter.var" (middle_end/flambda/augment_specialised_args.ml[415,17262+13]..[415,17262+26])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[415,17262+27]..[415,17262+32])
                                                            Pexp_ident "param" (middle_end/flambda/augment_specialised_args.ml[415,17262+27]..[415,17262+32])
                                                      ]
                                                    expression (middle_end/flambda/augment_specialised_args.ml[415,17262+34]..[415,17262+57])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/augment_specialised_args.ml[415,17262+34]..[415,17262+47])
                                                        Pexp_ident "Parameter.var" (middle_end/flambda/augment_specialised_args.ml[415,17262+34]..[415,17262+47])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/augment_specialised_args.ml[415,17262+48]..[415,17262+57])
                                                            Pexp_ident "new_param" (middle_end/flambda/augment_specialised_args.ml[415,17262+48]..[415,17262+57])
                                                      ]
                                                  ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/augment_specialised_args.ml[416,17321+11]..[416,17321+31])
                                                Pexp_ident "params_renaming_list" (middle_end/flambda/augment_specialised_args.ml[416,17321+11]..[416,17321+31])
                                          ]
                                    ]
                              ]
                              expression (middle_end/flambda/augment_specialised_args.ml[418,17361+4]..[418,17361+48])
                                Pexp_tuple
                                [
                                  expression (middle_end/flambda/augment_specialised_args.ml[418,17361+4]..[418,17361+15])
                                    Pexp_ident "new_fun_var" (middle_end/flambda/augment_specialised_args.ml[418,17361+4]..[418,17361+15])
                                  expression (middle_end/flambda/augment_specialised_args.ml[418,17361+17]..[418,17361+32])
                                    Pexp_ident "params_renaming" (middle_end/flambda/augment_specialised_args.ml[418,17361+17]..[418,17361+32])
                                  expression (middle_end/flambda/augment_specialised_args.ml[418,17361+34]..[418,17361+48])
                                    Pexp_ident "renamed_params" (middle_end/flambda/augment_specialised_args.ml[418,17361+34]..[418,17361+48])
                                ]
              ]
            structure_item (middle_end/flambda/augment_specialised_args.ml[420,17411+2]..[542,22682+13])
              Pstr_value Nonrec
              [
                <def>
                  pattern (middle_end/flambda/augment_specialised_args.ml[420,17411+6]..[420,17411+20])
                    Ppat_var "create_wrapper" (middle_end/flambda/augment_specialised_args.ml[420,17411+6]..[420,17411+20])
                  expression (middle_end/flambda/augment_specialised_args.ml[420,17411+21]..[542,22682+13]) ghost
                    Pexp_fun
                    Labelled "for_one_function"
                    None
                    pattern (middle_end/flambda/augment_specialised_args.ml[420,17411+23]..[420,17411+60])
                      Ppat_constraint
                      pattern (middle_end/flambda/augment_specialised_args.ml[420,17411+23]..[420,17411+39])
                        Ppat_var "for_one_function" (middle_end/flambda/augment_specialised_args.ml[420,17411+23]..[420,17411+39])
                      core_type (middle_end/flambda/augment_specialised_args.ml[420,17411+42]..[420,17411+60])
                        Ptyp_constr "P.for_one_function" (middle_end/flambda/augment_specialised_args.ml[420,17411+42]..[420,17411+60])
                        []
                    expression (middle_end/flambda/augment_specialised_args.ml[420,17411+62]..[542,22682+13]) ghost
                      Pexp_fun
                      Labelled "benefit"
                      None
                      pattern (middle_end/flambda/augment_specialised_args.ml[420,17411+63]..[420,17411+70])
                        Ppat_var "benefit" (middle_end/flambda/augment_specialised_args.ml[420,17411+63]..[420,17411+70])
                      expression (middle_end/flambda/augment_specialised_args.ml[421,17484+4]..[542,22682+13])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/augment_specialised_args.ml[421,17484+8]..[421,17484+15])
                              Ppat_var "fun_var" (middle_end/flambda/augment_specialised_args.ml[421,17484+8]..[421,17484+15])
                            expression (middle_end/flambda/augment_specialised_args.ml[421,17484+18]..[421,17484+42])
                              Pexp_field
                              expression (middle_end/flambda/augment_specialised_args.ml[421,17484+18]..[421,17484+34])
                                Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[421,17484+18]..[421,17484+34])
                              "fun_var" (middle_end/flambda/augment_specialised_args.ml[421,17484+35]..[421,17484+42])
                        ]
                        expression (middle_end/flambda/augment_specialised_args.ml[422,17530+4]..[542,22682+13])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/augment_specialised_args.ml[422,17530+8]..[422,17530+21])
                                Ppat_var "function_decl" (middle_end/flambda/augment_specialised_args.ml[422,17530+8]..[422,17530+21])
                              expression (middle_end/flambda/augment_specialised_args.ml[422,17530+24]..[422,17530+54])
                                Pexp_field
                                expression (middle_end/flambda/augment_specialised_args.ml[422,17530+24]..[422,17530+40])
                                  Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[422,17530+24]..[422,17530+40])
                                "function_decl" (middle_end/flambda/augment_specialised_args.ml[422,17530+41]..[422,17530+54])
                          ]
                          expression (middle_end/flambda/augment_specialised_args.ml[430,18073+4]..[542,22682+13])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/augment_specialised_args.ml[430,18073+8]..[430,18073+14])
                                  Ppat_var "params" (middle_end/flambda/augment_specialised_args.ml[430,18073+8]..[430,18073+14])
                                expression (middle_end/flambda/augment_specialised_args.ml[430,18073+17]..[430,18073+56])
                                  Pexp_apply
                                  expression (middle_end/flambda/augment_specialised_args.ml[430,18073+17]..[430,18073+35])
                                    Pexp_ident "Parameter.Set.vars" (middle_end/flambda/augment_specialised_args.ml[430,18073+17]..[430,18073+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/augment_specialised_args.ml[430,18073+36]..[430,18073+56])
                                        Pexp_field
                                        expression (middle_end/flambda/augment_specialised_args.ml[430,18073+36]..[430,18073+49])
                                          Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[430,18073+36]..[430,18073+49])
                                        "params" (middle_end/flambda/augment_specialised_args.ml[430,18073+50]..[430,18073+56])
                                  ]
                            ]
                            expression (middle_end/flambda/augment_specialised_args.ml[431,18133+4]..[542,22682+13])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/augment_specialised_args.ml[431,18133+8]..[431,18133+52])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/augment_specialised_args.ml[431,18133+8]..[431,18133+19])
                                        Ppat_var "new_fun_var" (middle_end/flambda/augment_specialised_args.ml[431,18133+8]..[431,18133+19])
                                      pattern (middle_end/flambda/augment_specialised_args.ml[431,18133+21]..[431,18133+36])
                                        Ppat_var "params_renaming" (middle_end/flambda/augment_specialised_args.ml[431,18133+21]..[431,18133+36])
                                      pattern (middle_end/flambda/augment_specialised_args.ml[431,18133+38]..[431,18133+52])
                                        Ppat_var "wrapper_params" (middle_end/flambda/augment_specialised_args.ml[431,18133+38]..[431,18133+52])
                                    ]
                                  expression (middle_end/flambda/augment_specialised_args.ml[432,18188+6]..[432,18188+60])
                                    Pexp_apply
                                    expression (middle_end/flambda/augment_specialised_args.ml[432,18188+6]..[432,18188+36])
                                      Pexp_ident "rename_function_and_parameters" (middle_end/flambda/augment_specialised_args.ml[432,18188+6]..[432,18188+36])
                                    [
                                      <arg>
                                      Labelled "fun_var"
                                        expression (middle_end/flambda/augment_specialised_args.ml[432,18188+38]..[432,18188+45])
                                          Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[432,18188+38]..[432,18188+45])
                                      <arg>
                                      Labelled "function_decl"
                                        expression (middle_end/flambda/augment_specialised_args.ml[432,18188+47]..[432,18188+60])
                                          Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[432,18188+47]..[432,18188+60])
                                    ]
                              ]
                              expression (middle_end/flambda/augment_specialised_args.ml[434,18256+4]..[542,22682+13])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/augment_specialised_args.ml[434,18256+8]..[434,18256+26])
                                      Ppat_var "find_wrapper_param" (middle_end/flambda/augment_specialised_args.ml[434,18256+8]..[434,18256+26])
                                    expression (middle_end/flambda/augment_specialised_args.ml[434,18256+27]..[441,18581+30]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/augment_specialised_args.ml[434,18256+27]..[434,18256+32])
                                        Ppat_var "param" (middle_end/flambda/augment_specialised_args.ml[434,18256+27]..[434,18256+32])
                                      expression (middle_end/flambda/augment_specialised_args.ml[435,18291+6]..[441,18581+30])
                                        Pexp_sequence
                                        expression (middle_end/flambda/augment_specialised_args.ml[435,18291+6]..[435,18291+44])
                                          Pexp_assert
                                          expression (middle_end/flambda/augment_specialised_args.ml[435,18291+13]..[435,18291+44])
                                            Pexp_apply
                                            expression (middle_end/flambda/augment_specialised_args.ml[435,18291+14]..[435,18291+30])
                                              Pexp_ident "Variable.Set.mem" (middle_end/flambda/augment_specialised_args.ml[435,18291+14]..[435,18291+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/augment_specialised_args.ml[435,18291+31]..[435,18291+36])
                                                  Pexp_ident "param" (middle_end/flambda/augment_specialised_args.ml[435,18291+31]..[435,18291+36])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/augment_specialised_args.ml[435,18291+37]..[435,18291+43])
                                                  Pexp_ident "params" (middle_end/flambda/augment_specialised_args.ml[435,18291+37]..[435,18291+43])
                                            ]
                                        expression (middle_end/flambda/augment_specialised_args.ml[436,18337+6]..[441,18581+30])
                                          Pexp_match
                                          expression (middle_end/flambda/augment_specialised_args.ml[436,18337+12]..[436,18337+51])
                                            Pexp_apply
                                            expression (middle_end/flambda/augment_specialised_args.ml[436,18337+12]..[436,18337+29])
                                              Pexp_ident "Variable.Map.find" (middle_end/flambda/augment_specialised_args.ml[436,18337+12]..[436,18337+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/augment_specialised_args.ml[436,18337+30]..[436,18337+35])
                                                  Pexp_ident "param" (middle_end/flambda/augment_specialised_args.ml[436,18337+30]..[436,18337+35])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/augment_specialised_args.ml[436,18337+36]..[436,18337+51])
                                                  Pexp_ident "params_renaming" (middle_end/flambda/augment_specialised_args.ml[436,18337+36]..[436,18337+51])
                                            ]
                                          [
                                            <case>
                                              pattern (middle_end/flambda/augment_specialised_args.ml[437,18394+8]..[437,18394+21])
                                                Ppat_var "wrapper_param" (middle_end/flambda/augment_specialised_args.ml[437,18394+8]..[437,18394+21])
                                              expression (middle_end/flambda/augment_specialised_args.ml[437,18394+25]..[437,18394+38])
                                                Pexp_ident "wrapper_param" (middle_end/flambda/augment_specialised_args.ml[437,18394+25]..[437,18394+38])
                                            <case>
                                              pattern (middle_end/flambda/augment_specialised_args.ml[438,18433+8]..[438,18433+27])
                                                Ppat_exception
                                                pattern (middle_end/flambda/augment_specialised_args.ml[438,18433+18]..[438,18433+27])
                                                  Ppat_construct "Not_found" (middle_end/flambda/augment_specialised_args.ml[438,18433+18]..[438,18433+27])
                                                  None
                                              expression (middle_end/flambda/augment_specialised_args.ml[439,18464+8]..[441,18581+30])
                                                Pexp_apply
                                                expression (middle_end/flambda/augment_specialised_args.ml[439,18464+8]..[439,18464+25])
                                                  Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/augment_specialised_args.ml[439,18464+8]..[439,18464+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/augment_specialised_args.ml[439,18464+26]..[440,18525+55])
                                                      Pexp_constant PConst_string("find_wrapper_param: expected %a to be in [params_renaming], but it is not.",(middle_end/flambda/augment_specialised_args.ml[439,18464+27]..[440,18525+54]),None)
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/augment_specialised_args.ml[441,18581+10]..[441,18581+24])
                                                      Pexp_ident "Variable.print" (middle_end/flambda/augment_specialised_args.ml[441,18581+10]..[441,18581+24])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/augment_specialised_args.ml[441,18581+25]..[441,18581+30])
                                                      Pexp_ident "param" (middle_end/flambda/augment_specialised_args.ml[441,18581+25]..[441,18581+30])
                                                ]
                                          ]
                                ]
                                expression (middle_end/flambda/augment_specialised_args.ml[443,18619+4]..[542,22682+13])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/augment_specialised_args.ml[443,18619+8]..[443,18619+65])
                                        Ppat_var "new_inner_vars_to_spec_args_bound_in_the_wrapper_renaming" (middle_end/flambda/augment_specialised_args.ml[443,18619+8]..[443,18619+65])
                                      expression (middle_end/flambda/augment_specialised_args.ml[444,18687+6]..[446,18776+66])
                                        Pexp_apply
                                        expression (middle_end/flambda/augment_specialised_args.ml[444,18687+6]..[444,18687+23])
                                          Pexp_ident "Variable.Map.mapi" (middle_end/flambda/augment_specialised_args.ml[444,18687+6]..[444,18687+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/augment_specialised_args.ml[444,18687+24]..[445,18735+40])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/flambda/augment_specialised_args.ml[444,18687+29]..[444,18687+42])
                                                Ppat_var "new_inner_var" (middle_end/flambda/augment_specialised_args.ml[444,18687+29]..[444,18687+42])
                                              expression (middle_end/flambda/augment_specialised_args.ml[444,18687+43]..[445,18735+39]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (middle_end/flambda/augment_specialised_args.ml[444,18687+43]..[444,18687+44])
                                                  Ppat_any
                                                expression (middle_end/flambda/augment_specialised_args.ml[445,18735+10]..[445,18735+39])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/augment_specialised_args.ml[445,18735+10]..[445,18735+25])
                                                    Pexp_ident "Variable.rename" (middle_end/flambda/augment_specialised_args.ml[445,18735+10]..[445,18735+25])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/augment_specialised_args.ml[445,18735+26]..[445,18735+39])
                                                        Pexp_ident "new_inner_var" (middle_end/flambda/augment_specialised_args.ml[445,18735+26]..[445,18735+39])
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/augment_specialised_args.ml[446,18776+8]..[446,18776+66])
                                              Pexp_field
                                              expression (middle_end/flambda/augment_specialised_args.ml[446,18776+8]..[446,18776+24])
                                                Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[446,18776+8]..[446,18776+24])
                                              "new_definitions_indexed_by_new_inner_vars" (middle_end/flambda/augment_specialised_args.ml[446,18776+25]..[446,18776+66])
                                        ]
                                  ]
                                  expression (middle_end/flambda/augment_specialised_args.ml[448,18850+4]..[542,22682+13])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/augment_specialised_args.ml[448,18850+8]..[448,18850+38])
                                          Ppat_var "spec_args_bound_in_the_wrapper" (middle_end/flambda/augment_specialised_args.ml[448,18850+8]..[448,18850+38])
                                        expression (middle_end/flambda/augment_specialised_args.ml[451,19002+6]..[452,19026+65])
                                          Pexp_apply
                                          expression (middle_end/flambda/augment_specialised_args.ml[451,19002+6]..[451,19002+23])
                                            Pexp_ident "Variable.Map.data" (middle_end/flambda/augment_specialised_args.ml[451,19002+6]..[451,19002+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/augment_specialised_args.ml[452,19026+8]..[452,19026+65])
                                                Pexp_ident "new_inner_vars_to_spec_args_bound_in_the_wrapper_renaming" (middle_end/flambda/augment_specialised_args.ml[452,19026+8]..[452,19026+65])
                                          ]
                                    ]
                                    expression (middle_end/flambda/augment_specialised_args.ml[462,19605+4]..[542,22682+13])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/augment_specialised_args.ml[462,19605+8]..[462,19605+29])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/augment_specialised_args.ml[462,19605+8]..[462,19605+20])
                                                Ppat_var "wrapper_body" (middle_end/flambda/augment_specialised_args.ml[462,19605+8]..[462,19605+20])
                                              pattern (middle_end/flambda/augment_specialised_args.ml[462,19605+22]..[462,19605+29])
                                                Ppat_var "benefit" (middle_end/flambda/augment_specialised_args.ml[462,19605+22]..[462,19605+29])
                                            ]
                                          expression (middle_end/flambda/augment_specialised_args.ml[463,19637+6]..[508,21526+22])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/augment_specialised_args.ml[463,19637+10]..[463,19637+30]) ghost
                                                  Ppat_constraint
                                                  pattern (middle_end/flambda/augment_specialised_args.ml[463,19637+10]..[463,19637+15])
                                                    Ppat_var "apply" (middle_end/flambda/augment_specialised_args.ml[463,19637+10]..[463,19637+15])
                                                  core_type (middle_end/flambda/augment_specialised_args.ml[463,19637+18]..[463,19637+30]) ghost
                                                    Ptyp_poly
                                                    core_type (middle_end/flambda/augment_specialised_args.ml[463,19637+18]..[463,19637+30])
                                                      Ptyp_constr "Flambda.expr" (middle_end/flambda/augment_specialised_args.ml[463,19637+18]..[463,19637+30])
                                                      []
                                                expression (middle_end/flambda/augment_specialised_args.ml[463,19637+10]..[473,19993+9])
                                                  Pexp_constraint
                                                  expression (middle_end/flambda/augment_specialised_args.ml[464,19670+8]..[473,19993+9])
                                                    Pexp_construct "Apply" (middle_end/flambda/augment_specialised_args.ml[464,19670+8]..[464,19670+13])
                                                    Some
                                                      expression (middle_end/flambda/augment_specialised_args.ml[464,19670+14]..[473,19993+9])
                                                        Pexp_record
                                                        [
                                                          "func" (middle_end/flambda/augment_specialised_args.ml[465,19686+10]..[465,19686+14])
                                                            expression (middle_end/flambda/augment_specialised_args.ml[465,19686+17]..[465,19686+28])
                                                              Pexp_ident "new_fun_var" (middle_end/flambda/augment_specialised_args.ml[465,19686+17]..[465,19686+28])
                                                          "args" (middle_end/flambda/augment_specialised_args.ml[466,19716+10]..[466,19716+14])
                                                            expression (middle_end/flambda/augment_specialised_args.ml[467,19733+12]..[468,19784+42])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/augment_specialised_args.ml[467,19733+49]..[467,19733+50])
                                                                Pexp_ident "@" (middle_end/flambda/augment_specialised_args.ml[467,19733+49]..[467,19733+50])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[467,19733+12]..[467,19733+48])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[467,19733+13]..[467,19733+32])
                                                                      Pexp_ident "Parameter.List.vars" (middle_end/flambda/augment_specialised_args.ml[467,19733+13]..[467,19733+32])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/augment_specialised_args.ml[467,19733+33]..[467,19733+47])
  Pexp_ident "wrapper_params" (middle_end/flambda/augment_specialised_args.ml[467,19733+33]..[467,19733+47])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[468,19784+12]..[468,19784+42])
                                                                    Pexp_ident "spec_args_bound_in_the_wrapper" (middle_end/flambda/augment_specialised_args.ml[468,19784+12]..[468,19784+42])
                                                              ]
                                                          "kind" (middle_end/flambda/augment_specialised_args.ml[469,19828+10]..[469,19828+14])
                                                            expression (middle_end/flambda/augment_specialised_args.ml[469,19828+17]..[469,19828+53])
                                                              Pexp_construct "Direct" (middle_end/flambda/augment_specialised_args.ml[469,19828+17]..[469,19828+23])
                                                              Some
                                                                expression (middle_end/flambda/augment_specialised_args.ml[469,19828+24]..[469,19828+53])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[469,19828+25]..[469,19828+40])
                                                                    Pexp_ident "Closure_id.wrap" (middle_end/flambda/augment_specialised_args.ml[469,19828+25]..[469,19828+40])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[469,19828+41]..[469,19828+52])
Pexp_ident "new_fun_var" (middle_end/flambda/augment_specialised_args.ml[469,19828+41]..[469,19828+52])
                                                                  ]
                                                          "dbg" (middle_end/flambda/augment_specialised_args.ml[470,19883+10]..[470,19883+13])
                                                            expression (middle_end/flambda/augment_specialised_args.ml[470,19883+16]..[470,19883+30])
                                                              Pexp_ident "Debuginfo.none" (middle_end/flambda/augment_specialised_args.ml[470,19883+16]..[470,19883+30])
                                                          "inline" (middle_end/flambda/augment_specialised_args.ml[471,19915+10]..[471,19915+16])
                                                            expression (middle_end/flambda/augment_specialised_args.ml[471,19915+19]..[471,19915+33])
                                                              Pexp_construct "Default_inline" (middle_end/flambda/augment_specialised_args.ml[471,19915+19]..[471,19915+33])
                                                              None
                                                          "specialise" (middle_end/flambda/augment_specialised_args.ml[472,19950+10]..[472,19950+20])
                                                            expression (middle_end/flambda/augment_specialised_args.ml[472,19950+23]..[472,19950+41])
                                                              Pexp_construct "Default_specialise" (middle_end/flambda/augment_specialised_args.ml[472,19950+23]..[472,19950+41])
                                                              None
                                                        ]
                                                        None
                                                  core_type (middle_end/flambda/augment_specialised_args.ml[463,19637+18]..[463,19637+30])
                                                    Ptyp_constr "Flambda.expr" (middle_end/flambda/augment_specialised_args.ml[463,19637+18]..[463,19637+30])
                                                    []
                                            ]
                                            expression (middle_end/flambda/augment_specialised_args.ml[475,20012+6]..[508,21526+22])
                                              Pexp_apply
                                              expression (middle_end/flambda/augment_specialised_args.ml[475,20012+6]..[475,20012+23])
                                                Pexp_ident "Variable.Map.fold" (middle_end/flambda/augment_specialised_args.ml[475,20012+6]..[475,20012+23])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/augment_specialised_args.ml[475,20012+24]..[506,21424+36])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[475,20012+29]..[475,20012+42])
                                                      Ppat_var "new_inner_var" (middle_end/flambda/augment_specialised_args.ml[475,20012+29]..[475,20012+42])
                                                    expression (middle_end/flambda/augment_specialised_args.ml[475,20012+43]..[506,21424+35]) ghost
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (middle_end/flambda/augment_specialised_args.ml[475,20012+43]..[475,20012+53])
                                                        Ppat_var "definition" (middle_end/flambda/augment_specialised_args.ml[475,20012+43]..[475,20012+53])
                                                      expression (middle_end/flambda/augment_specialised_args.ml[475,20012+54]..[506,21424+35]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/flambda/augment_specialised_args.ml[475,20012+54]..[475,20012+77])
                                                          Ppat_tuple
                                                          [
                                                            pattern (middle_end/flambda/augment_specialised_args.ml[475,20012+55]..[475,20012+67])
                                                              Ppat_var "wrapper_body" (middle_end/flambda/augment_specialised_args.ml[475,20012+55]..[475,20012+67])
                                                            pattern (middle_end/flambda/augment_specialised_args.ml[475,20012+69]..[475,20012+76])
                                                              Ppat_var "benefit" (middle_end/flambda/augment_specialised_args.ml[475,20012+69]..[475,20012+76])
                                                          ]
                                                        expression (middle_end/flambda/augment_specialised_args.ml[476,20093+10]..[506,21424+35])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/flambda/augment_specialised_args.ml[476,20093+14]..[476,20093+39]) ghost
                                                                Ppat_constraint
                                                                pattern (middle_end/flambda/augment_specialised_args.ml[476,20093+14]..[476,20093+24])
                                                                  Ppat_var "definition" (middle_end/flambda/augment_specialised_args.ml[476,20093+14]..[476,20093+24])
                                                                core_type (middle_end/flambda/augment_specialised_args.ml[476,20093+27]..[476,20093+39]) ghost
                                                                  Ptyp_poly
                                                                  core_type (middle_end/flambda/augment_specialised_args.ml[476,20093+27]..[476,20093+39])
                                                                    Ptyp_constr "Definition.t" (middle_end/flambda/augment_specialised_args.ml[476,20093+27]..[476,20093+39])
                                                                    []
                                                              expression (middle_end/flambda/augment_specialised_args.ml[476,20093+14]..[482,20423+40])
                                                                Pexp_constraint
                                                                expression (middle_end/flambda/augment_specialised_args.ml[477,20135+12]..[482,20423+40])
                                                                  Pexp_match
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[477,20135+18]..[477,20135+45])
                                                                    Pexp_constraint
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[477,20135+19]..[477,20135+29])
                                                                      Pexp_ident "definition" (middle_end/flambda/augment_specialised_args.ml[477,20135+19]..[477,20135+29])
                                                                    core_type (middle_end/flambda/augment_specialised_args.ml[477,20135+32]..[477,20135+44])
                                                                      Ptyp_constr "Definition.t" (middle_end/flambda/augment_specialised_args.ml[477,20135+32]..[477,20135+44])
                                                                      []
                                                                  [
                                                                    <case>
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[478,20186+14]..[478,20186+39])
Ppat_construct "Existing_inner_free_var" (middle_end/flambda/augment_specialised_args.ml[478,20186+14]..[478,20186+37])
Some
  []
  pattern (middle_end/flambda/augment_specialised_args.ml[478,20186+38]..[478,20186+39])
    Ppat_any
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[478,20186+43]..[478,20186+53])
Pexp_ident "definition" (middle_end/flambda/augment_specialised_args.ml[478,20186+43]..[478,20186+53])
                                                                    <case>
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[479,20240+14]..[479,20240+65])
Ppat_construct "Projection_from_existing_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[479,20240+14]..[479,20240+54])
Some
  []
  pattern (middle_end/flambda/augment_specialised_args.ml[479,20240+55]..[479,20240+65])
    Ppat_var "projection" (middle_end/flambda/augment_specialised_args.ml[479,20240+55]..[479,20240+65])
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[480,20309+14]..[482,20423+40])
Pexp_construct "Projection_from_existing_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[480,20309+14]..[480,20309+54])
Some
  expression (middle_end/flambda/augment_specialised_args.ml[481,20364+16]..[482,20423+40])
    Pexp_apply
    expression (middle_end/flambda/augment_specialised_args.ml[481,20364+17]..[481,20364+47])
      Pexp_ident "Projection.map_projecting_from" (middle_end/flambda/augment_specialised_args.ml[481,20364+17]..[481,20364+47])
    [
      <arg>
      Nolabel
        expression (middle_end/flambda/augment_specialised_args.ml[481,20364+48]..[481,20364+58])
          Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[481,20364+48]..[481,20364+58])
      <arg>
      Labelled "f"
        expression (middle_end/flambda/augment_specialised_args.ml[482,20423+21]..[482,20423+39])
          Pexp_ident "find_wrapper_param" (middle_end/flambda/augment_specialised_args.ml[482,20423+21]..[482,20423+39])
    ]
                                                                  ]
                                                                core_type (middle_end/flambda/augment_specialised_args.ml[476,20093+27]..[476,20093+39])
                                                                  Ptyp_constr "Definition.t" (middle_end/flambda/augment_specialised_args.ml[476,20093+27]..[476,20093+39])
                                                                  []
                                                          ]
                                                          expression (middle_end/flambda/augment_specialised_args.ml[484,20477+10]..[506,21424+35])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (middle_end/flambda/augment_specialised_args.ml[484,20477+14]..[484,20477+21])
                                                                  Ppat_var "benefit" (middle_end/flambda/augment_specialised_args.ml[484,20477+14]..[484,20477+21])
                                                                expression (middle_end/flambda/augment_specialised_args.ml[485,20501+12]..[488,20672+49])
                                                                  Pexp_match
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[485,20501+18]..[485,20501+45])
                                                                    Pexp_constraint
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[485,20501+19]..[485,20501+29])
                                                                      Pexp_ident "definition" (middle_end/flambda/augment_specialised_args.ml[485,20501+19]..[485,20501+29])
                                                                    core_type (middle_end/flambda/augment_specialised_args.ml[485,20501+32]..[485,20501+44])
                                                                      Ptyp_constr "Definition.t" (middle_end/flambda/augment_specialised_args.ml[485,20501+32]..[485,20501+44])
                                                                      []
                                                                  [
                                                                    <case>
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[486,20552+14]..[486,20552+39])
Ppat_construct "Existing_inner_free_var" (middle_end/flambda/augment_specialised_args.ml[486,20552+14]..[486,20552+37])
Some
  []
  pattern (middle_end/flambda/augment_specialised_args.ml[486,20552+38]..[486,20552+39])
    Ppat_any
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[486,20552+43]..[486,20552+50])
Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[486,20552+43]..[486,20552+50])
                                                                    <case>
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[487,20603+14]..[487,20603+65])
Ppat_construct "Projection_from_existing_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[487,20603+14]..[487,20603+54])
Some
  []
  pattern (middle_end/flambda/augment_specialised_args.ml[487,20603+55]..[487,20603+65])
    Ppat_var "projection" (middle_end/flambda/augment_specialised_args.ml[487,20603+55]..[487,20603+65])
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[488,20672+14]..[488,20672+49])
Pexp_apply
expression (middle_end/flambda/augment_specialised_args.ml[488,20672+14]..[488,20672+30])
  Pexp_ident "B.add_projection" (middle_end/flambda/augment_specialised_args.ml[488,20672+14]..[488,20672+30])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/augment_specialised_args.ml[488,20672+31]..[488,20672+41])
      Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[488,20672+31]..[488,20672+41])
  <arg>
  Nolabel
    expression (middle_end/flambda/augment_specialised_args.ml[488,20672+42]..[488,20672+49])
      Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[488,20672+42]..[488,20672+49])
]
                                                                  ]
                                                            ]
                                                            expression (middle_end/flambda/augment_specialised_args.ml[490,20735+10]..[506,21424+35])
                                                              Pexp_match
                                                              expression (middle_end/flambda/augment_specialised_args.ml[491,20751+12]..[492,20795+71])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/augment_specialised_args.ml[491,20751+12]..[491,20751+29])
                                                                  Pexp_ident "Variable.Map.find" (middle_end/flambda/augment_specialised_args.ml[491,20751+12]..[491,20751+29])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[491,20751+30]..[491,20751+43])
                                                                      Pexp_ident "new_inner_var" (middle_end/flambda/augment_specialised_args.ml[491,20751+30]..[491,20751+43])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[492,20795+14]..[492,20795+71])
                                                                      Pexp_ident "new_inner_vars_to_spec_args_bound_in_the_wrapper_renaming" (middle_end/flambda/augment_specialised_args.ml[492,20795+14]..[492,20795+71])
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (middle_end/flambda/augment_specialised_args.ml[494,20882+12]..[494,20882+31])
                                                                    Ppat_exception
                                                                    pattern (middle_end/flambda/augment_specialised_args.ml[494,20882+22]..[494,20882+31])
                                                                      Ppat_construct "Not_found" (middle_end/flambda/augment_specialised_args.ml[494,20882+22]..[494,20882+31])
                                                                      None
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[494,20882+35]..[494,20882+47])
                                                                    Pexp_assert
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[494,20882+42]..[494,20882+47])
                                                                      Pexp_construct "false" (middle_end/flambda/augment_specialised_args.ml[494,20882+42]..[494,20882+47])
                                                                      None
                                                                <case>
                                                                  pattern (middle_end/flambda/augment_specialised_args.ml[495,20930+12]..[495,20930+36])
                                                                    Ppat_var "new_inner_var_of_wrapper" (middle_end/flambda/augment_specialised_args.ml[495,20930+12]..[495,20930+36])
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[496,20970+12]..[506,21424+35])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (middle_end/flambda/augment_specialised_args.ml[496,20970+16]..[496,20970+37]) ghost
  Ppat_constraint
  pattern (middle_end/flambda/augment_specialised_args.ml[496,20970+16]..[496,20970+21])
    Ppat_var "named" (middle_end/flambda/augment_specialised_args.ml[496,20970+16]..[496,20970+21])
  core_type (middle_end/flambda/augment_specialised_args.ml[496,20970+24]..[496,20970+37]) ghost
    Ptyp_poly
    core_type (middle_end/flambda/augment_specialised_args.ml[496,20970+24]..[496,20970+37])
      Ptyp_constr "Flambda.named" (middle_end/flambda/augment_specialised_args.ml[496,20970+24]..[496,20970+37])
      []
expression (middle_end/flambda/augment_specialised_args.ml[496,20970+16]..[501,21225+60])
  Pexp_constraint
  expression (middle_end/flambda/augment_specialised_args.ml[497,21010+14]..[501,21225+60])
    Pexp_match
    expression (middle_end/flambda/augment_specialised_args.ml[497,21010+20]..[497,21010+30])
      Pexp_ident "definition" (middle_end/flambda/augment_specialised_args.ml[497,21010+20]..[497,21010+30])
    [
      <case>
        pattern (middle_end/flambda/augment_specialised_args.ml[498,21046+16]..[498,21046+58])
          Ppat_construct "Existing_inner_free_var" (middle_end/flambda/augment_specialised_args.ml[498,21046+16]..[498,21046+39])
          Some
            []
            pattern (middle_end/flambda/augment_specialised_args.ml[498,21046+40]..[498,21046+58])
              Ppat_var "existing_inner_var" (middle_end/flambda/augment_specialised_args.ml[498,21046+40]..[498,21046+58])
        expression (middle_end/flambda/augment_specialised_args.ml[499,21108+16]..[499,21108+45])
          Pexp_construct "Expr" (middle_end/flambda/augment_specialised_args.ml[499,21108+16]..[499,21108+20])
          Some
            expression (middle_end/flambda/augment_specialised_args.ml[499,21108+21]..[499,21108+45])
              Pexp_construct "Var" (middle_end/flambda/augment_specialised_args.ml[499,21108+22]..[499,21108+25])
              Some
                expression (middle_end/flambda/augment_specialised_args.ml[499,21108+26]..[499,21108+44])
                  Pexp_ident "existing_inner_var" (middle_end/flambda/augment_specialised_args.ml[499,21108+26]..[499,21108+44])
      <case>
        pattern (middle_end/flambda/augment_specialised_args.ml[500,21154+16]..[500,21154+67])
          Ppat_construct "Projection_from_existing_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[500,21154+16]..[500,21154+56])
          Some
            []
            pattern (middle_end/flambda/augment_specialised_args.ml[500,21154+57]..[500,21154+67])
              Ppat_var "projection" (middle_end/flambda/augment_specialised_args.ml[500,21154+57]..[500,21154+67])
        expression (middle_end/flambda/augment_specialised_args.ml[501,21225+16]..[501,21225+60])
          Pexp_apply
          expression (middle_end/flambda/augment_specialised_args.ml[501,21225+16]..[501,21225+49])
            Pexp_ident "Flambda_utils.projection_to_named" (middle_end/flambda/augment_specialised_args.ml[501,21225+16]..[501,21225+49])
          [
            <arg>
            Nolabel
              expression (middle_end/flambda/augment_specialised_args.ml[501,21225+50]..[501,21225+60])
                Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[501,21225+50]..[501,21225+60])
          ]
    ]
  core_type (middle_end/flambda/augment_specialised_args.ml[496,20970+24]..[496,20970+37])
    Ptyp_constr "Flambda.named" (middle_end/flambda/augment_specialised_args.ml[496,20970+24]..[496,20970+37])
    []
                                                                    ]
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[503,21301+12]..[506,21424+35])
                                                                      Pexp_let Nonrec
                                                                      [
<def>
  pattern (middle_end/flambda/augment_specialised_args.ml[503,21301+16]..[503,21301+28])
    Ppat_var "wrapper_body" (middle_end/flambda/augment_specialised_args.ml[503,21301+16]..[503,21301+28])
  expression (middle_end/flambda/augment_specialised_args.ml[504,21332+14]..[504,21332+76])
    Pexp_apply
    expression (middle_end/flambda/augment_specialised_args.ml[504,21332+14]..[504,21332+32])
      Pexp_ident "Flambda.create_let" (middle_end/flambda/augment_specialised_args.ml[504,21332+14]..[504,21332+32])
    [
      <arg>
      Nolabel
        expression (middle_end/flambda/augment_specialised_args.ml[504,21332+33]..[504,21332+57])
          Pexp_ident "new_inner_var_of_wrapper" (middle_end/flambda/augment_specialised_args.ml[504,21332+33]..[504,21332+57])
      <arg>
      Nolabel
        expression (middle_end/flambda/augment_specialised_args.ml[504,21332+58]..[504,21332+63])
          Pexp_ident "named" (middle_end/flambda/augment_specialised_args.ml[504,21332+58]..[504,21332+63])
      <arg>
      Nolabel
        expression (middle_end/flambda/augment_specialised_args.ml[504,21332+64]..[504,21332+76])
          Pexp_ident "wrapper_body" (middle_end/flambda/augment_specialised_args.ml[504,21332+64]..[504,21332+76])
    ]
                                                                      ]
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[506,21424+12]..[506,21424+35])
Pexp_tuple
[
  expression (middle_end/flambda/augment_specialised_args.ml[506,21424+13]..[506,21424+25])
    Pexp_ident "wrapper_body" (middle_end/flambda/augment_specialised_args.ml[506,21424+13]..[506,21424+25])
  expression (middle_end/flambda/augment_specialised_args.ml[506,21424+27]..[506,21424+34])
    Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[506,21424+27]..[506,21424+34])
]
                                                              ]
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/augment_specialised_args.ml[507,21461+6]..[507,21461+64])
                                                    Pexp_field
                                                    expression (middle_end/flambda/augment_specialised_args.ml[507,21461+6]..[507,21461+22])
                                                      Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[507,21461+6]..[507,21461+22])
                                                    "new_definitions_indexed_by_new_inner_vars" (middle_end/flambda/augment_specialised_args.ml[507,21461+23]..[507,21461+64])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/augment_specialised_args.ml[508,21526+6]..[508,21526+22])
                                                    Pexp_tuple
                                                    [
                                                      expression (middle_end/flambda/augment_specialised_args.ml[508,21526+7]..[508,21526+12])
                                                        Pexp_ident "apply" (middle_end/flambda/augment_specialised_args.ml[508,21526+7]..[508,21526+12])
                                                      expression (middle_end/flambda/augment_specialised_args.ml[508,21526+14]..[508,21526+21])
                                                        Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[508,21526+14]..[508,21526+21])
                                                    ]
                                              ]
                                      ]
                                      expression (middle_end/flambda/augment_specialised_args.ml[510,21556+4]..[542,22682+13])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/augment_specialised_args.ml[510,21556+8]..[510,21556+43])
                                              Ppat_var "rewritten_existing_specialised_args" (middle_end/flambda/augment_specialised_args.ml[510,21556+8]..[510,21556+43])
                                            expression (middle_end/flambda/augment_specialised_args.ml[511,21602+6]..[528,22242+26])
                                              Pexp_apply
                                              expression (middle_end/flambda/augment_specialised_args.ml[511,21602+6]..[511,21602+23])
                                                Pexp_ident "Variable.Map.fold" (middle_end/flambda/augment_specialised_args.ml[511,21602+6]..[511,21602+23])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/augment_specialised_args.ml[511,21602+24]..[526,22138+52])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[511,21602+29]..[511,21602+38])
                                                      Ppat_var "inner_var" (middle_end/flambda/augment_specialised_args.ml[511,21602+29]..[511,21602+38])
                                                    expression (middle_end/flambda/augment_specialised_args.ml[511,21602+39]..[526,22138+51]) ghost
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (middle_end/flambda/augment_specialised_args.ml[511,21602+39]..[511,21602+73])
                                                        Ppat_constraint
                                                        pattern (middle_end/flambda/augment_specialised_args.ml[511,21602+40]..[511,21602+47])
                                                          Ppat_var "spec_to" (middle_end/flambda/augment_specialised_args.ml[511,21602+40]..[511,21602+47])
                                                        core_type (middle_end/flambda/augment_specialised_args.ml[511,21602+50]..[511,21602+72])
                                                          Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/augment_specialised_args.ml[511,21602+50]..[511,21602+72])
                                                          []
                                                      expression (middle_end/flambda/augment_specialised_args.ml[512,21676+16]..[526,22138+51]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/flambda/augment_specialised_args.ml[512,21676+16]..[512,21676+22])
                                                          Ppat_var "result" (middle_end/flambda/augment_specialised_args.ml[512,21676+16]..[512,21676+22])
                                                        expression (middle_end/flambda/augment_specialised_args.ml[513,21702+10]..[526,22138+51])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/flambda/augment_specialised_args.ml[513,21702+14]..[513,21702+23])
                                                                Ppat_var "inner_var" (middle_end/flambda/augment_specialised_args.ml[513,21702+14]..[513,21702+23])
                                                              expression (middle_end/flambda/augment_specialised_args.ml[513,21702+26]..[513,21702+54])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/augment_specialised_args.ml[513,21702+26]..[513,21702+44])
                                                                  Pexp_ident "find_wrapper_param" (middle_end/flambda/augment_specialised_args.ml[513,21702+26]..[513,21702+44])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[513,21702+45]..[513,21702+54])
                                                                      Pexp_ident "inner_var" (middle_end/flambda/augment_specialised_args.ml[513,21702+45]..[513,21702+54])
                                                                ]
                                                          ]
                                                          expression (middle_end/flambda/augment_specialised_args.ml[514,21760+10]..[526,22138+51])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (middle_end/flambda/augment_specialised_args.ml[514,21760+14]..[514,21760+24])
                                                                  Ppat_var "projection" (middle_end/flambda/augment_specialised_args.ml[514,21760+14]..[514,21760+24])
                                                                expression (middle_end/flambda/augment_specialised_args.ml[515,21787+12]..[519,21951+38])
                                                                  Pexp_match
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[515,21787+18]..[515,21787+36])
                                                                    Pexp_field
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[515,21787+18]..[515,21787+25])
                                                                      Pexp_ident "spec_to" (middle_end/flambda/augment_specialised_args.ml[515,21787+18]..[515,21787+25])
                                                                    "projection" (middle_end/flambda/augment_specialised_args.ml[515,21787+26]..[515,21787+36])
                                                                  [
                                                                    <case>
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[516,21829+14]..[516,21829+18])
Ppat_construct "None" (middle_end/flambda/augment_specialised_args.ml[516,21829+14]..[516,21829+18])
None
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[516,21829+22]..[516,21829+26])
Pexp_construct "None" (middle_end/flambda/augment_specialised_args.ml[516,21829+22]..[516,21829+26])
None
                                                                    <case>
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[517,21856+14]..[517,21856+29])
Ppat_construct "Some" (middle_end/flambda/augment_specialised_args.ml[517,21856+14]..[517,21856+18])
Some
  []
  pattern (middle_end/flambda/augment_specialised_args.ml[517,21856+19]..[517,21856+29])
    Ppat_var "projection" (middle_end/flambda/augment_specialised_args.ml[517,21856+19]..[517,21856+29])
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[518,21889+14]..[519,21951+38])
Pexp_construct "Some" (middle_end/flambda/augment_specialised_args.ml[518,21889+14]..[518,21889+18])
Some
  expression (middle_end/flambda/augment_specialised_args.ml[518,21889+19]..[519,21951+38])
    Pexp_apply
    expression (middle_end/flambda/augment_specialised_args.ml[518,21889+20]..[518,21889+50])
      Pexp_ident "Projection.map_projecting_from" (middle_end/flambda/augment_specialised_args.ml[518,21889+20]..[518,21889+50])
    [
      <arg>
      Nolabel
        expression (middle_end/flambda/augment_specialised_args.ml[518,21889+51]..[518,21889+61])
          Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[518,21889+51]..[518,21889+61])
      <arg>
      Labelled "f"
        expression (middle_end/flambda/augment_specialised_args.ml[519,21951+19]..[519,21951+37])
          Pexp_ident "find_wrapper_param" (middle_end/flambda/augment_specialised_args.ml[519,21951+19]..[519,21951+37])
    ]
                                                                  ]
                                                            ]
                                                            expression (middle_end/flambda/augment_specialised_args.ml[521,22003+10]..[526,22138+51])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (middle_end/flambda/augment_specialised_args.ml[521,22003+14]..[521,22003+46]) ghost
                                                                    Ppat_constraint
                                                                    pattern (middle_end/flambda/augment_specialised_args.ml[521,22003+14]..[521,22003+21])
                                                                      Ppat_var "spec_to" (middle_end/flambda/augment_specialised_args.ml[521,22003+14]..[521,22003+21])
                                                                    core_type (middle_end/flambda/augment_specialised_args.ml[521,22003+24]..[521,22003+46]) ghost
                                                                      Ptyp_poly
                                                                      core_type (middle_end/flambda/augment_specialised_args.ml[521,22003+24]..[521,22003+46])
Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/augment_specialised_args.ml[521,22003+24]..[521,22003+46])
[]
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[521,22003+14]..[524,22111+13])
                                                                    Pexp_constraint
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[522,22052+12]..[524,22111+13])
                                                                      Pexp_record
                                                                      [
"var" (middle_end/flambda/augment_specialised_args.ml[522,22052+14]..[522,22052+17])
  expression (middle_end/flambda/augment_specialised_args.ml[522,22052+20]..[522,22052+31])
    Pexp_field
    expression (middle_end/flambda/augment_specialised_args.ml[522,22052+20]..[522,22052+27])
      Pexp_ident "spec_to" (middle_end/flambda/augment_specialised_args.ml[522,22052+20]..[522,22052+27])
    "var" (middle_end/flambda/augment_specialised_args.ml[522,22052+28]..[522,22052+31])
"projection" (middle_end/flambda/augment_specialised_args.ml[523,22085+14]..[523,22085+24]) ghost
  expression (middle_end/flambda/augment_specialised_args.ml[523,22085+14]..[523,22085+24])
    Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[523,22085+14]..[523,22085+24])
                                                                      ]
                                                                      None
                                                                    core_type (middle_end/flambda/augment_specialised_args.ml[521,22003+24]..[521,22003+46])
                                                                      Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/augment_specialised_args.ml[521,22003+24]..[521,22003+46])
                                                                      []
                                                              ]
                                                              expression (middle_end/flambda/augment_specialised_args.ml[526,22138+10]..[526,22138+51])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/augment_specialised_args.ml[526,22138+10]..[526,22138+26])
                                                                  Pexp_ident "Variable.Map.add" (middle_end/flambda/augment_specialised_args.ml[526,22138+10]..[526,22138+26])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[526,22138+27]..[526,22138+36])
                                                                      Pexp_ident "inner_var" (middle_end/flambda/augment_specialised_args.ml[526,22138+27]..[526,22138+36])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[526,22138+37]..[526,22138+44])
                                                                      Pexp_ident "spec_to" (middle_end/flambda/augment_specialised_args.ml[526,22138+37]..[526,22138+44])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[526,22138+45]..[526,22138+51])
                                                                      Pexp_ident "result" (middle_end/flambda/augment_specialised_args.ml[526,22138+45]..[526,22138+51])
                                                                ]
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/augment_specialised_args.ml[527,22191+8]..[527,22191+50])
                                                    Pexp_field
                                                    expression (middle_end/flambda/augment_specialised_args.ml[527,22191+8]..[527,22191+24])
                                                      Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[527,22191+8]..[527,22191+24])
                                                    "existing_specialised_args" (middle_end/flambda/augment_specialised_args.ml[527,22191+25]..[527,22191+50])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/augment_specialised_args.ml[528,22242+8]..[528,22242+26])
                                                    Pexp_ident "Variable.Map.empty" (middle_end/flambda/augment_specialised_args.ml[528,22242+8]..[528,22242+26])
                                              ]
                                        ]
                                        expression (middle_end/flambda/augment_specialised_args.ml[530,22276+4]..[542,22682+13])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/augment_specialised_args.ml[530,22276+8]..[530,22276+25])
                                                Ppat_var "new_function_decl" (middle_end/flambda/augment_specialised_args.ml[530,22276+8]..[530,22276+25])
                                              expression (middle_end/flambda/augment_specialised_args.ml[531,22304+6]..[539,22549+52])
                                                Pexp_apply
                                                expression (middle_end/flambda/augment_specialised_args.ml[531,22304+6]..[531,22304+41])
                                                  Pexp_ident "Flambda.create_function_declaration" (middle_end/flambda/augment_specialised_args.ml[531,22304+6]..[531,22304+41])
                                                [
                                                  <arg>
                                                  Labelled "params"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[532,22346+16]..[532,22346+30])
                                                      Pexp_ident "wrapper_params" (middle_end/flambda/augment_specialised_args.ml[532,22346+16]..[532,22346+30])
                                                  <arg>
                                                  Labelled "body"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[533,22377+14]..[533,22377+26])
                                                      Pexp_ident "wrapper_body" (middle_end/flambda/augment_specialised_args.ml[533,22377+14]..[533,22377+26])
                                                  <arg>
                                                  Labelled "stub"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[534,22404+14]..[534,22404+18])
                                                      Pexp_construct "true" (middle_end/flambda/augment_specialised_args.ml[534,22404+14]..[534,22404+18])
                                                      None
                                                  <arg>
                                                  Labelled "dbg"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[535,22423+13]..[535,22423+27])
                                                      Pexp_ident "Debuginfo.none" (middle_end/flambda/augment_specialised_args.ml[535,22423+13]..[535,22423+27])
                                                  <arg>
                                                  Labelled "inline"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[536,22451+16]..[536,22451+30])
                                                      Pexp_construct "Default_inline" (middle_end/flambda/augment_specialised_args.ml[536,22451+16]..[536,22451+30])
                                                      None
                                                  <arg>
                                                  Labelled "specialise"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[537,22482+20]..[537,22482+38])
                                                      Pexp_construct "Default_specialise" (middle_end/flambda/augment_specialised_args.ml[537,22482+20]..[537,22482+38])
                                                      None
                                                  <arg>
                                                  Labelled "is_a_functor"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[538,22521+22]..[538,22521+27])
                                                      Pexp_construct "false" (middle_end/flambda/augment_specialised_args.ml[538,22521+22]..[538,22521+27])
                                                      None
                                                  <arg>
                                                  Labelled "closure_origin"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[539,22549+24]..[539,22549+52])
                                                      Pexp_field
                                                      expression (middle_end/flambda/augment_specialised_args.ml[539,22549+24]..[539,22549+37])
                                                        Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[539,22549+24]..[539,22549+37])
                                                      "closure_origin" (middle_end/flambda/augment_specialised_args.ml[539,22549+38]..[539,22549+52])
                                                ]
                                          ]
                                          expression (middle_end/flambda/augment_specialised_args.ml[541,22609+4]..[542,22682+13])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/flambda/augment_specialised_args.ml[541,22609+4]..[541,22609+15])
                                                Pexp_ident "new_fun_var" (middle_end/flambda/augment_specialised_args.ml[541,22609+4]..[541,22609+15])
                                              expression (middle_end/flambda/augment_specialised_args.ml[541,22609+17]..[541,22609+34])
                                                Pexp_ident "new_function_decl" (middle_end/flambda/augment_specialised_args.ml[541,22609+17]..[541,22609+34])
                                              expression (middle_end/flambda/augment_specialised_args.ml[541,22609+36]..[541,22609+71])
                                                Pexp_ident "rewritten_existing_specialised_args" (middle_end/flambda/augment_specialised_args.ml[541,22609+36]..[541,22609+71])
                                              expression (middle_end/flambda/augment_specialised_args.ml[542,22682+6]..[542,22682+13])
                                                Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[542,22682+6]..[542,22682+13])
                                            ]
              ]
            structure_item (middle_end/flambda/augment_specialised_args.ml[544,22697+2]..[660,27353+79])
              Pstr_value Nonrec
              [
                <def>
                  pattern (middle_end/flambda/augment_specialised_args.ml[544,22697+6]..[544,22697+27])
                    Ppat_var "rewrite_function_decl" (middle_end/flambda/augment_specialised_args.ml[544,22697+6]..[544,22697+27])
                  expression (middle_end/flambda/augment_specialised_args.ml[544,22697+28]..[660,27353+79]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/augment_specialised_args.ml[544,22697+28]..[544,22697+37])
                      Ppat_constraint
                      pattern (middle_end/flambda/augment_specialised_args.ml[544,22697+29]..[544,22697+30])
                        Ppat_var "t" (middle_end/flambda/augment_specialised_args.ml[544,22697+29]..[544,22697+30])
                      core_type (middle_end/flambda/augment_specialised_args.ml[544,22697+33]..[544,22697+36])
                        Ptyp_constr "P.t" (middle_end/flambda/augment_specialised_args.ml[544,22697+33]..[544,22697+36])
                        []
                    expression (middle_end/flambda/augment_specialised_args.ml[544,22697+38]..[660,27353+79]) ghost
                      Pexp_fun
                      Labelled "env"
                      None
                      pattern (middle_end/flambda/augment_specialised_args.ml[544,22697+39]..[544,22697+42])
                        Ppat_var "env" (middle_end/flambda/augment_specialised_args.ml[544,22697+39]..[544,22697+42])
                      expression (middle_end/flambda/augment_specialised_args.ml[544,22697+43]..[660,27353+79]) ghost
                        Pexp_fun
                        Labelled "duplicate_function"
                        None
                        pattern (middle_end/flambda/augment_specialised_args.ml[544,22697+44]..[544,22697+62])
                          Ppat_var "duplicate_function" (middle_end/flambda/augment_specialised_args.ml[544,22697+44]..[544,22697+62])
                        expression (middle_end/flambda/augment_specialised_args.ml[545,22760+6]..[660,27353+79]) ghost
                          Pexp_fun
                          Labelled "for_one_function"
                          None
                          pattern (middle_end/flambda/augment_specialised_args.ml[545,22760+8]..[545,22760+45])
                            Ppat_constraint
                            pattern (middle_end/flambda/augment_specialised_args.ml[545,22760+8]..[545,22760+24])
                              Ppat_var "for_one_function" (middle_end/flambda/augment_specialised_args.ml[545,22760+8]..[545,22760+24])
                            core_type (middle_end/flambda/augment_specialised_args.ml[545,22760+27]..[545,22760+45])
                              Ptyp_constr "P.for_one_function" (middle_end/flambda/augment_specialised_args.ml[545,22760+27]..[545,22760+45])
                              []
                          expression (middle_end/flambda/augment_specialised_args.ml[545,22760+47]..[660,27353+79]) ghost
                            Pexp_fun
                            Labelled "benefit"
                            None
                            pattern (middle_end/flambda/augment_specialised_args.ml[545,22760+48]..[545,22760+55])
                              Ppat_var "benefit" (middle_end/flambda/augment_specialised_args.ml[545,22760+48]..[545,22760+55])
                            expression (middle_end/flambda/augment_specialised_args.ml[546,22818+4]..[660,27353+79])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/augment_specialised_args.ml[546,22818+8]..[546,22818+23])
                                    Ppat_var "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[546,22818+8]..[546,22818+23])
                                  expression (middle_end/flambda/augment_specialised_args.ml[546,22818+26]..[546,22818+43])
                                    Pexp_field
                                    expression (middle_end/flambda/augment_specialised_args.ml[546,22818+26]..[546,22818+27])
                                      Pexp_ident "t" (middle_end/flambda/augment_specialised_args.ml[546,22818+26]..[546,22818+27])
                                    "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[546,22818+28]..[546,22818+43])
                              ]
                              expression (middle_end/flambda/augment_specialised_args.ml[547,22865+4]..[660,27353+79])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/augment_specialised_args.ml[547,22865+8]..[547,22865+15])
                                      Ppat_var "fun_var" (middle_end/flambda/augment_specialised_args.ml[547,22865+8]..[547,22865+15])
                                    expression (middle_end/flambda/augment_specialised_args.ml[547,22865+18]..[547,22865+42])
                                      Pexp_field
                                      expression (middle_end/flambda/augment_specialised_args.ml[547,22865+18]..[547,22865+34])
                                        Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[547,22865+18]..[547,22865+34])
                                      "fun_var" (middle_end/flambda/augment_specialised_args.ml[547,22865+35]..[547,22865+42])
                                ]
                                expression (middle_end/flambda/augment_specialised_args.ml[548,22911+4]..[660,27353+79])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/augment_specialised_args.ml[548,22911+8]..[548,22911+21])
                                        Ppat_var "function_decl" (middle_end/flambda/augment_specialised_args.ml[548,22911+8]..[548,22911+21])
                                      expression (middle_end/flambda/augment_specialised_args.ml[548,22911+24]..[548,22911+54])
                                        Pexp_field
                                        expression (middle_end/flambda/augment_specialised_args.ml[548,22911+24]..[548,22911+40])
                                          Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[548,22911+24]..[548,22911+40])
                                        "function_decl" (middle_end/flambda/augment_specialised_args.ml[548,22911+41]..[548,22911+54])
                                  ]
                                  expression (middle_end/flambda/augment_specialised_args.ml[549,22969+4]..[660,27353+79])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/augment_specialised_args.ml[549,22969+8]..[549,22969+23])
                                          Ppat_var "num_definitions" (middle_end/flambda/augment_specialised_args.ml[549,22969+8]..[549,22969+23])
                                        expression (middle_end/flambda/augment_specialised_args.ml[550,22995+6]..[551,23041+49])
                                          Pexp_apply
                                          expression (middle_end/flambda/augment_specialised_args.ml[550,22995+6]..[550,22995+27])
                                            Pexp_ident "Variable.Map.cardinal" (middle_end/flambda/augment_specialised_args.ml[550,22995+6]..[550,22995+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/augment_specialised_args.ml[550,22995+28]..[551,23041+49])
                                                Pexp_field
                                                expression (middle_end/flambda/augment_specialised_args.ml[550,22995+28]..[550,22995+44])
                                                  Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[550,22995+28]..[550,22995+44])
                                                "new_definitions_indexed_by_new_inner_vars" (middle_end/flambda/augment_specialised_args.ml[551,23041+8]..[551,23041+49])
                                          ]
                                    ]
                                    expression (middle_end/flambda/augment_specialised_args.ml[553,23098+4]..[660,27353+79])
                                      Pexp_ifthenelse
                                      expression (middle_end/flambda/augment_specialised_args.ml[553,23098+7]..[555,23153+72])
                                        Pexp_apply
                                        expression (middle_end/flambda/augment_specialised_args.ml[554,23124+6]..[554,23124+8])
                                          Pexp_ident "||" (middle_end/flambda/augment_specialised_args.ml[554,23124+6]..[554,23124+8])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/augment_specialised_args.ml[553,23098+7]..[553,23098+25])
                                              Pexp_field
                                              expression (middle_end/flambda/augment_specialised_args.ml[553,23098+7]..[553,23098+20])
                                                Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[553,23098+7]..[553,23098+20])
                                              "stub" (middle_end/flambda/augment_specialised_args.ml[553,23098+21]..[553,23098+25])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/augment_specialised_args.ml[554,23124+9]..[555,23153+72])
                                              Pexp_apply
                                              expression (middle_end/flambda/augment_specialised_args.ml[555,23153+6]..[555,23153+8])
                                                Pexp_ident "||" (middle_end/flambda/augment_specialised_args.ml[555,23153+6]..[555,23153+8])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/augment_specialised_args.ml[554,23124+9]..[554,23124+28])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/augment_specialised_args.ml[554,23124+25]..[554,23124+26])
                                                      Pexp_ident "<" (middle_end/flambda/augment_specialised_args.ml[554,23124+25]..[554,23124+26])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/augment_specialised_args.ml[554,23124+9]..[554,23124+24])
                                                          Pexp_ident "num_definitions" (middle_end/flambda/augment_specialised_args.ml[554,23124+9]..[554,23124+24])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/augment_specialised_args.ml[554,23124+27]..[554,23124+28])
                                                          Pexp_constant PConst_int (1,None)
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/augment_specialised_args.ml[555,23153+9]..[555,23153+72])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/augment_specialised_args.ml[555,23153+9]..[555,23153+25])
                                                      Pexp_ident "Variable.Map.mem" (middle_end/flambda/augment_specialised_args.ml[555,23153+9]..[555,23153+25])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/augment_specialised_args.ml[555,23153+26]..[555,23153+33])
                                                          Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[555,23153+26]..[555,23153+33])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/augment_specialised_args.ml[555,23153+34]..[555,23153+72])
                                                          Pexp_field
                                                          expression (middle_end/flambda/augment_specialised_args.ml[555,23153+34]..[555,23153+49])
                                                            Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[555,23153+34]..[555,23153+49])
                                                          "direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[555,23153+50]..[555,23153+72])
                                                    ]
                                              ]
                                        ]
                                      expression (middle_end/flambda/augment_specialised_args.ml[557,23235+6]..[557,23235+10])
                                        Pexp_construct "None" (middle_end/flambda/augment_specialised_args.ml[557,23235+6]..[557,23235+10])
                                        None
                                      Some
                                        expression (middle_end/flambda/augment_specialised_args.ml[559,23255+6]..[660,27353+79])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/augment_specialised_args.ml[559,23255+10]..[559,23255+76])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/flambda/augment_specialised_args.ml[559,23255+10]..[559,23255+21])
                                                    Ppat_var "new_fun_var" (middle_end/flambda/augment_specialised_args.ml[559,23255+10]..[559,23255+21])
                                                  pattern (middle_end/flambda/augment_specialised_args.ml[559,23255+23]..[559,23255+30])
                                                    Ppat_var "wrapper" (middle_end/flambda/augment_specialised_args.ml[559,23255+23]..[559,23255+30])
                                                  pattern (middle_end/flambda/augment_specialised_args.ml[559,23255+32]..[559,23255+67])
                                                    Ppat_var "rewritten_existing_specialised_args" (middle_end/flambda/augment_specialised_args.ml[559,23255+32]..[559,23255+67])
                                                  pattern (middle_end/flambda/augment_specialised_args.ml[559,23255+69]..[559,23255+76])
                                                    Ppat_var "benefit" (middle_end/flambda/augment_specialised_args.ml[559,23255+69]..[559,23255+76])
                                                ]
                                              expression (middle_end/flambda/augment_specialised_args.ml[560,23334+8]..[560,23334+49])
                                                Pexp_apply
                                                expression (middle_end/flambda/augment_specialised_args.ml[560,23334+8]..[560,23334+22])
                                                  Pexp_ident "create_wrapper" (middle_end/flambda/augment_specialised_args.ml[560,23334+8]..[560,23334+22])
                                                [
                                                  <arg>
                                                  Labelled "for_one_function"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[560,23334+24]..[560,23334+40])
                                                      Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[560,23334+24]..[560,23334+40])
                                                  <arg>
                                                  Labelled "benefit"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[560,23334+42]..[560,23334+49])
                                                      Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[560,23334+42]..[560,23334+49])
                                                ]
                                          ]
                                          expression (middle_end/flambda/augment_specialised_args.ml[562,23393+6]..[660,27353+79])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/augment_specialised_args.ml[562,23393+10]..[562,23393+30])
                                                  Ppat_var "new_specialised_args" (middle_end/flambda/augment_specialised_args.ml[562,23393+10]..[562,23393+30])
                                                expression (middle_end/flambda/augment_specialised_args.ml[563,23426+8]..[587,24532+68])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/augment_specialised_args.ml[563,23426+8]..[563,23426+25])
                                                    Pexp_ident "Variable.Map.mapi" (middle_end/flambda/augment_specialised_args.ml[563,23426+8]..[563,23426+25])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/augment_specialised_args.ml[563,23426+26]..[586,24513+18])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/flambda/augment_specialised_args.ml[563,23426+31]..[563,23426+44])
                                                          Ppat_var "new_inner_var" (middle_end/flambda/augment_specialised_args.ml[563,23426+31]..[563,23426+44])
                                                        expression (middle_end/flambda/augment_specialised_args.ml[563,23426+45]..[586,24513+17]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (middle_end/flambda/augment_specialised_args.ml[563,23426+45]..[563,23426+72])
                                                            Ppat_constraint
                                                            pattern (middle_end/flambda/augment_specialised_args.ml[563,23426+46]..[563,23426+56])
                                                              Ppat_var "definition" (middle_end/flambda/augment_specialised_args.ml[563,23426+46]..[563,23426+56])
                                                            core_type (middle_end/flambda/augment_specialised_args.ml[563,23426+59]..[563,23426+71])
                                                              Ptyp_constr "Definition.t" (middle_end/flambda/augment_specialised_args.ml[563,23426+59]..[563,23426+71])
                                                              []
                                                          expression (middle_end/flambda/augment_specialised_args.ml[564,23499+16]..[586,24513+17])
                                                            Pexp_constraint
                                                            expression (middle_end/flambda/augment_specialised_args.ml[565,23543+12]..[586,24513+17])
                                                              Pexp_sequence
                                                              expression (middle_end/flambda/augment_specialised_args.ml[565,23543+12]..[566,23599+48])
                                                                Pexp_assert
                                                                expression (middle_end/flambda/augment_specialised_args.ml[565,23543+19]..[566,23599+48])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[565,23543+20]..[565,23543+23])
                                                                    Pexp_ident "not" (middle_end/flambda/augment_specialised_args.ml[565,23543+20]..[565,23543+23])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[565,23543+24]..[566,23599+47])
Pexp_apply
expression (middle_end/flambda/augment_specialised_args.ml[565,23543+25]..[565,23543+41])
  Pexp_ident "Variable.Map.mem" (middle_end/flambda/augment_specialised_args.ml[565,23543+25]..[565,23543+41])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/augment_specialised_args.ml[565,23543+42]..[565,23543+55])
      Pexp_ident "new_inner_var" (middle_end/flambda/augment_specialised_args.ml[565,23543+42]..[565,23543+55])
  <arg>
  Nolabel
    expression (middle_end/flambda/augment_specialised_args.ml[566,23599+14]..[566,23599+46])
      Pexp_field
      expression (middle_end/flambda/augment_specialised_args.ml[566,23599+14]..[566,23599+29])
        Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[566,23599+14]..[566,23599+29])
      "specialised_args" (middle_end/flambda/augment_specialised_args.ml[566,23599+30]..[566,23599+46])
]
                                                                  ]
                                                              expression (middle_end/flambda/augment_specialised_args.ml[567,23649+12]..[586,24513+17])
                                                                Pexp_match
                                                                expression (middle_end/flambda/augment_specialised_args.ml[568,23667+14]..[569,23713+60])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[568,23667+14]..[568,23667+31])
                                                                    Pexp_ident "Variable.Map.find" (middle_end/flambda/augment_specialised_args.ml[568,23667+14]..[568,23667+31])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[568,23667+32]..[568,23667+45])
Pexp_ident "new_inner_var" (middle_end/flambda/augment_specialised_args.ml[568,23667+32]..[568,23667+45])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[569,23713+16]..[569,23713+60])
Pexp_field
expression (middle_end/flambda/augment_specialised_args.ml[569,23713+16]..[569,23713+32])
  Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[569,23713+16]..[569,23713+32])
"new_inner_to_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[569,23713+33]..[569,23713+60])
                                                                  ]
                                                                [
                                                                  <case>
                                                                    pattern (middle_end/flambda/augment_specialised_args.ml[571,23791+14]..[571,23791+33])
                                                                      Ppat_exception
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[571,23791+24]..[571,23791+33])
Ppat_construct "Not_found" (middle_end/flambda/augment_specialised_args.ml[571,23791+24]..[571,23791+33])
None
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[571,23791+37]..[571,23791+49])
                                                                      Pexp_assert
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[571,23791+44]..[571,23791+49])
Pexp_construct "false" (middle_end/flambda/augment_specialised_args.ml[571,23791+44]..[571,23791+49])
None
                                                                  <case>
                                                                    pattern (middle_end/flambda/augment_specialised_args.ml[572,23841+14]..[572,23841+27])
                                                                      Ppat_var "new_outer_var" (middle_end/flambda/augment_specialised_args.ml[572,23841+14]..[572,23841+27])
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[573,23872+14]..[586,24513+17])
                                                                      Pexp_match
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[573,23872+20]..[573,23872+30])
Pexp_ident "definition" (middle_end/flambda/augment_specialised_args.ml[573,23872+20]..[573,23872+30])
                                                                      [
<case>
  pattern (middle_end/flambda/augment_specialised_args.ml[574,23908+16]..[574,23908+41])
    Ppat_construct "Existing_inner_free_var" (middle_end/flambda/augment_specialised_args.ml[574,23908+16]..[574,23908+39])
    Some
      []
      pattern (middle_end/flambda/augment_specialised_args.ml[574,23908+40]..[574,23908+41])
        Ppat_any
  expression (middle_end/flambda/augment_specialised_args.ml[575,23953+16]..[577,24029+17])
    Pexp_record
    [
      "var" (middle_end/flambda/augment_specialised_args.ml[575,23953+18]..[575,23953+21])
        expression (middle_end/flambda/augment_specialised_args.ml[575,23953+24]..[575,23953+37])
          Pexp_ident "new_outer_var" (middle_end/flambda/augment_specialised_args.ml[575,23953+24]..[575,23953+37])
      "projection" (middle_end/flambda/augment_specialised_args.ml[576,23992+18]..[576,23992+28])
        expression (middle_end/flambda/augment_specialised_args.ml[576,23992+31]..[576,23992+35])
          Pexp_construct "None" (middle_end/flambda/augment_specialised_args.ml[576,23992+31]..[576,23992+35])
          None
    ]
    None
<case>
  pattern (middle_end/flambda/augment_specialised_args.ml[578,24047+16]..[578,24047+67])
    Ppat_construct "Projection_from_existing_specialised_arg" (middle_end/flambda/augment_specialised_args.ml[578,24047+16]..[578,24047+56])
    Some
      []
      pattern (middle_end/flambda/augment_specialised_args.ml[578,24047+57]..[578,24047+67])
        Ppat_var "projection" (middle_end/flambda/augment_specialised_args.ml[578,24047+57]..[578,24047+67])
  expression (middle_end/flambda/augment_specialised_args.ml[579,24118+16]..[586,24513+17])
    Pexp_let Nonrec
    [
      <def>
        pattern (middle_end/flambda/augment_specialised_args.ml[579,24118+20]..[579,24118+35])
          Ppat_var "projecting_from" (middle_end/flambda/augment_specialised_args.ml[579,24118+20]..[579,24118+35])
        expression (middle_end/flambda/augment_specialised_args.ml[579,24118+38]..[579,24118+75])
          Pexp_apply
          expression (middle_end/flambda/augment_specialised_args.ml[579,24118+38]..[579,24118+64])
            Pexp_ident "Projection.projecting_from" (middle_end/flambda/augment_specialised_args.ml[579,24118+38]..[579,24118+64])
          [
            <arg>
            Nolabel
              expression (middle_end/flambda/augment_specialised_args.ml[579,24118+65]..[579,24118+75])
                Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[579,24118+65]..[579,24118+75])
          ]
    ]
    expression (middle_end/flambda/augment_specialised_args.ml[580,24197+16]..[586,24513+17])
      Pexp_sequence
      expression (middle_end/flambda/augment_specialised_args.ml[580,24197+16]..[581,24254+51])
        Pexp_assert
        expression (middle_end/flambda/augment_specialised_args.ml[580,24197+23]..[581,24254+51])
          Pexp_apply
          expression (middle_end/flambda/augment_specialised_args.ml[580,24197+24]..[580,24197+40])
            Pexp_ident "Variable.Map.mem" (middle_end/flambda/augment_specialised_args.ml[580,24197+24]..[580,24197+40])
          [
            <arg>
            Nolabel
              expression (middle_end/flambda/augment_specialised_args.ml[580,24197+41]..[580,24197+56])
                Pexp_ident "projecting_from" (middle_end/flambda/augment_specialised_args.ml[580,24197+41]..[580,24197+56])
            <arg>
            Nolabel
              expression (middle_end/flambda/augment_specialised_args.ml[581,24254+18]..[581,24254+50])
                Pexp_field
                expression (middle_end/flambda/augment_specialised_args.ml[581,24254+18]..[581,24254+33])
                  Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[581,24254+18]..[581,24254+33])
                "specialised_args" (middle_end/flambda/augment_specialised_args.ml[581,24254+34]..[581,24254+50])
          ]
      expression (middle_end/flambda/augment_specialised_args.ml[582,24307+16]..[586,24513+17])
        Pexp_sequence
        expression (middle_end/flambda/augment_specialised_args.ml[582,24307+16]..[583,24364+60])
          Pexp_assert
          expression (middle_end/flambda/augment_specialised_args.ml[582,24307+23]..[583,24364+60])
            Pexp_apply
            expression (middle_end/flambda/augment_specialised_args.ml[582,24307+24]..[582,24307+40])
              Pexp_ident "Variable.Set.mem" (middle_end/flambda/augment_specialised_args.ml[582,24307+24]..[582,24307+40])
            [
              <arg>
              Nolabel
                expression (middle_end/flambda/augment_specialised_args.ml[582,24307+41]..[582,24307+56])
                  Pexp_ident "projecting_from" (middle_end/flambda/augment_specialised_args.ml[582,24307+41]..[582,24307+56])
              <arg>
              Nolabel
                expression (middle_end/flambda/augment_specialised_args.ml[583,24364+18]..[583,24364+59])
                  Pexp_apply
                  expression (middle_end/flambda/augment_specialised_args.ml[583,24364+19]..[583,24364+37])
                    Pexp_ident "Parameter.Set.vars" (middle_end/flambda/augment_specialised_args.ml[583,24364+19]..[583,24364+37])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/augment_specialised_args.ml[583,24364+38]..[583,24364+58])
                        Pexp_field
                        expression (middle_end/flambda/augment_specialised_args.ml[583,24364+38]..[583,24364+51])
                          Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[583,24364+38]..[583,24364+51])
                        "params" (middle_end/flambda/augment_specialised_args.ml[583,24364+52]..[583,24364+58])
                  ]
            ]
        expression (middle_end/flambda/augment_specialised_args.ml[584,24426+16]..[586,24513+17])
          Pexp_record
          [
            "var" (middle_end/flambda/augment_specialised_args.ml[584,24426+18]..[584,24426+21])
              expression (middle_end/flambda/augment_specialised_args.ml[584,24426+24]..[584,24426+37])
                Pexp_ident "new_outer_var" (middle_end/flambda/augment_specialised_args.ml[584,24426+24]..[584,24426+37])
            "projection" (middle_end/flambda/augment_specialised_args.ml[585,24465+18]..[585,24465+28])
              expression (middle_end/flambda/augment_specialised_args.ml[585,24465+31]..[585,24465+46])
                Pexp_construct "Some" (middle_end/flambda/augment_specialised_args.ml[585,24465+31]..[585,24465+35])
                Some
                  expression (middle_end/flambda/augment_specialised_args.ml[585,24465+36]..[585,24465+46])
                    Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[585,24465+36]..[585,24465+46])
          ]
          None
                                                                      ]
                                                                ]
                                                            core_type (middle_end/flambda/augment_specialised_args.ml[564,23499+18]..[564,23499+40])
                                                              Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/augment_specialised_args.ml[564,23499+18]..[564,23499+40])
                                                              []
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/augment_specialised_args.ml[587,24532+10]..[587,24532+68])
                                                        Pexp_field
                                                        expression (middle_end/flambda/augment_specialised_args.ml[587,24532+10]..[587,24532+26])
                                                          Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[587,24532+10]..[587,24532+26])
                                                        "new_definitions_indexed_by_new_inner_vars" (middle_end/flambda/augment_specialised_args.ml[587,24532+27]..[587,24532+68])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/augment_specialised_args.ml[589,24610+6]..[660,27353+79])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/augment_specialised_args.ml[589,24610+10]..[589,24610+26])
                                                    Ppat_var "specialised_args" (middle_end/flambda/augment_specialised_args.ml[589,24610+10]..[589,24610+26])
                                                  expression (middle_end/flambda/augment_specialised_args.ml[590,24639+8]..[591,24711+30])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/augment_specialised_args.ml[590,24639+8]..[590,24639+35])
                                                      Pexp_ident "Variable.Map.disjoint_union" (middle_end/flambda/augment_specialised_args.ml[590,24639+8]..[590,24639+35])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/augment_specialised_args.ml[590,24639+36]..[590,24639+71])
                                                          Pexp_ident "rewritten_existing_specialised_args" (middle_end/flambda/augment_specialised_args.ml[590,24639+36]..[590,24639+71])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/augment_specialised_args.ml[591,24711+10]..[591,24711+30])
                                                          Pexp_ident "new_specialised_args" (middle_end/flambda/augment_specialised_args.ml[591,24711+10]..[591,24711+30])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/augment_specialised_args.ml[593,24751+6]..[660,27353+79])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[593,24751+10]..[593,24751+50])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/augment_specialised_args.ml[593,24751+10]..[593,24751+26])
                                                          Ppat_var "specialised_args" (middle_end/flambda/augment_specialised_args.ml[593,24751+10]..[593,24751+26])
                                                        pattern (middle_end/flambda/augment_specialised_args.ml[593,24751+28]..[593,24751+50])
                                                          Ppat_var "existing_function_decl" (middle_end/flambda/augment_specialised_args.ml[593,24751+28]..[593,24751+50])
                                                      ]
                                                    expression (middle_end/flambda/augment_specialised_args.ml[594,24804+8]..[603,25179+46])
                                                      Pexp_ifthenelse
                                                      expression (middle_end/flambda/augment_specialised_args.ml[594,24804+11]..[594,24804+59])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/augment_specialised_args.ml[594,24804+11]..[594,24804+14])
                                                          Pexp_ident "not" (middle_end/flambda/augment_specialised_args.ml[594,24804+11]..[594,24804+14])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/augment_specialised_args.ml[594,24804+15]..[594,24804+59])
                                                              Pexp_field
                                                              expression (middle_end/flambda/augment_specialised_args.ml[594,24804+15]..[594,24804+31])
                                                                Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[594,24804+15]..[594,24804+31])
                                                              "make_direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[594,24804+32]..[594,24804+59])
                                                        ]
                                                      expression (middle_end/flambda/augment_specialised_args.ml[595,24869+10]..[595,24869+32])
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/augment_specialised_args.ml[595,24869+10]..[595,24869+26])
                                                            Pexp_ident "specialised_args" (middle_end/flambda/augment_specialised_args.ml[595,24869+10]..[595,24869+26])
                                                          expression (middle_end/flambda/augment_specialised_args.ml[595,24869+28]..[595,24869+32])
                                                            Pexp_construct "None" (middle_end/flambda/augment_specialised_args.ml[595,24869+28]..[595,24869+32])
                                                            None
                                                        ]
                                                      Some
                                                        expression (middle_end/flambda/augment_specialised_args.ml[597,24915+10]..[603,25179+46])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/flambda/augment_specialised_args.ml[597,24915+14]..[597,24915+49])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (middle_end/flambda/augment_specialised_args.ml[597,24915+14]..[597,24915+27])
                                                                    Ppat_var "function_decl" (middle_end/flambda/augment_specialised_args.ml[597,24915+14]..[597,24915+27])
                                                                  pattern (middle_end/flambda/augment_specialised_args.ml[597,24915+29]..[597,24915+49])
                                                                    Ppat_var "new_specialised_args" (middle_end/flambda/augment_specialised_args.ml[597,24915+29]..[597,24915+49])
                                                                ]
                                                              expression (middle_end/flambda/augment_specialised_args.ml[598,24967+12]..[598,24967+74])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/augment_specialised_args.ml[598,24967+12]..[598,24967+30])
                                                                  Pexp_ident "duplicate_function" (middle_end/flambda/augment_specialised_args.ml[598,24967+12]..[598,24967+30])
                                                                [
                                                                  <arg>
                                                                  Labelled "env"
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[598,24967+32]..[598,24967+35])
                                                                      Pexp_ident "env" (middle_end/flambda/augment_specialised_args.ml[598,24967+32]..[598,24967+35])
                                                                  <arg>
                                                                  Labelled "set_of_closures"
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[598,24967+37]..[598,24967+52])
                                                                      Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[598,24967+37]..[598,24967+52])
                                                                  <arg>
                                                                  Labelled "fun_var"
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[598,24967+54]..[598,24967+61])
                                                                      Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[598,24967+54]..[598,24967+61])
                                                                  <arg>
                                                                  Labelled "new_fun_var"
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[598,24967+63]..[598,24967+74])
                                                                      Pexp_ident "new_fun_var" (middle_end/flambda/augment_specialised_args.ml[598,24967+63]..[598,24967+74])
                                                                ]
                                                          ]
                                                          expression (middle_end/flambda/augment_specialised_args.ml[600,25055+10]..[603,25179+46])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (middle_end/flambda/augment_specialised_args.ml[600,25055+14]..[600,25055+30])
                                                                  Ppat_var "specialised_args" (middle_end/flambda/augment_specialised_args.ml[600,25055+14]..[600,25055+30])
                                                                expression (middle_end/flambda/augment_specialised_args.ml[601,25088+12]..[601,25088+77])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[601,25088+12]..[601,25088+39])
                                                                    Pexp_ident "Variable.Map.disjoint_union" (middle_end/flambda/augment_specialised_args.ml[601,25088+12]..[601,25088+39])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[601,25088+40]..[601,25088+56])
Pexp_ident "specialised_args" (middle_end/flambda/augment_specialised_args.ml[601,25088+40]..[601,25088+56])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[601,25088+57]..[601,25088+77])
Pexp_ident "new_specialised_args" (middle_end/flambda/augment_specialised_args.ml[601,25088+57]..[601,25088+77])
                                                                  ]
                                                            ]
                                                            expression (middle_end/flambda/augment_specialised_args.ml[603,25179+10]..[603,25179+46])
                                                              Pexp_tuple
                                                              [
                                                                expression (middle_end/flambda/augment_specialised_args.ml[603,25179+10]..[603,25179+26])
                                                                  Pexp_ident "specialised_args" (middle_end/flambda/augment_specialised_args.ml[603,25179+10]..[603,25179+26])
                                                                expression (middle_end/flambda/augment_specialised_args.ml[603,25179+28]..[603,25179+46])
                                                                  Pexp_construct "Some" (middle_end/flambda/augment_specialised_args.ml[603,25179+28]..[603,25179+32])
                                                                  Some
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[603,25179+33]..[603,25179+46])
                                                                      Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[603,25179+33]..[603,25179+46])
                                                              ]
                                                ]
                                                expression (middle_end/flambda/augment_specialised_args.ml[605,25235+6]..[660,27353+79])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/augment_specialised_args.ml[605,25235+10]..[605,25235+20])
                                                        Ppat_var "all_params" (middle_end/flambda/augment_specialised_args.ml[605,25235+10]..[605,25235+20])
                                                      expression (middle_end/flambda/augment_specialised_args.ml[606,25258+8]..[613,25484+41])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (middle_end/flambda/augment_specialised_args.ml[606,25258+12]..[606,25258+22])
                                                              Ppat_var "new_params" (middle_end/flambda/augment_specialised_args.ml[606,25258+12]..[606,25258+22])
                                                            expression (middle_end/flambda/augment_specialised_args.ml[607,25283+10]..[608,25334+57])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/augment_specialised_args.ml[607,25283+10]..[607,25283+31])
                                                                Pexp_ident "Variable.Set.elements" (middle_end/flambda/augment_specialised_args.ml[607,25283+10]..[607,25283+31])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[607,25283+32]..[608,25334+57])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[607,25283+33]..[607,25283+50])
                                                                      Pexp_ident "Variable.Map.keys" (middle_end/flambda/augment_specialised_args.ml[607,25283+33]..[607,25283+50])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/augment_specialised_args.ml[608,25334+12]..[608,25334+56])
  Pexp_field
  expression (middle_end/flambda/augment_specialised_args.ml[608,25334+12]..[608,25334+28])
    Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[608,25334+12]..[608,25334+28])
  "new_inner_to_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[608,25334+29]..[608,25334+56])
                                                                    ]
                                                              ]
                                                        ]
                                                        expression (middle_end/flambda/augment_specialised_args.ml[610,25403+8]..[613,25484+41])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/flambda/augment_specialised_args.ml[610,25403+12]..[610,25403+22])
                                                                Ppat_var "new_params" (middle_end/flambda/augment_specialised_args.ml[610,25403+12]..[610,25403+22])
                                                              expression (middle_end/flambda/augment_specialised_args.ml[611,25428+10]..[611,25428+44])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/augment_specialised_args.ml[611,25428+10]..[611,25428+18])
                                                                  Pexp_ident "List.map" (middle_end/flambda/augment_specialised_args.ml[611,25428+10]..[611,25428+18])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[611,25428+19]..[611,25428+33])
                                                                      Pexp_ident "Parameter.wrap" (middle_end/flambda/augment_specialised_args.ml[611,25428+19]..[611,25428+33])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[611,25428+34]..[611,25428+44])
                                                                      Pexp_ident "new_params" (middle_end/flambda/augment_specialised_args.ml[611,25428+34]..[611,25428+44])
                                                                ]
                                                          ]
                                                          expression (middle_end/flambda/augment_specialised_args.ml[613,25484+8]..[613,25484+41])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/augment_specialised_args.ml[613,25484+29]..[613,25484+30])
                                                              Pexp_ident "@" (middle_end/flambda/augment_specialised_args.ml[613,25484+29]..[613,25484+30])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/augment_specialised_args.ml[613,25484+8]..[613,25484+28])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[613,25484+8]..[613,25484+21])
                                                                    Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[613,25484+8]..[613,25484+21])
                                                                  "params" (middle_end/flambda/augment_specialised_args.ml[613,25484+22]..[613,25484+28])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/augment_specialised_args.ml[613,25484+31]..[613,25484+41])
                                                                  Pexp_ident "new_params" (middle_end/flambda/augment_specialised_args.ml[613,25484+31]..[613,25484+41])
                                                            ]
                                                  ]
                                                  expression (middle_end/flambda/augment_specialised_args.ml[615,25535+6]..[660,27353+79])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/flambda/augment_specialised_args.ml[615,25535+10]..[615,25535+24])
                                                          Ppat_var "closure_origin" (middle_end/flambda/augment_specialised_args.ml[615,25535+10]..[615,25535+24])
                                                        expression (middle_end/flambda/augment_specialised_args.ml[616,25562+8]..[616,25562+59])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/augment_specialised_args.ml[616,25562+8]..[616,25562+29])
                                                            Pexp_ident "Closure_origin.create" (middle_end/flambda/augment_specialised_args.ml[616,25562+8]..[616,25562+29])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/augment_specialised_args.ml[616,25562+30]..[616,25562+59])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/augment_specialised_args.ml[616,25562+31]..[616,25562+46])
                                                                  Pexp_ident "Closure_id.wrap" (middle_end/flambda/augment_specialised_args.ml[616,25562+31]..[616,25562+46])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[616,25562+47]..[616,25562+58])
                                                                      Pexp_ident "new_fun_var" (middle_end/flambda/augment_specialised_args.ml[616,25562+47]..[616,25562+58])
                                                                ]
                                                          ]
                                                    ]
                                                    expression (middle_end/flambda/augment_specialised_args.ml[618,25631+6]..[660,27353+79])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (middle_end/flambda/augment_specialised_args.ml[618,25631+10]..[618,25631+33])
                                                            Ppat_var "rewritten_function_decl" (middle_end/flambda/augment_specialised_args.ml[618,25631+10]..[618,25631+33])
                                                          expression (middle_end/flambda/augment_specialised_args.ml[619,25667+8]..[627,25980+25])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/augment_specialised_args.ml[619,25667+8]..[619,25667+43])
                                                              Pexp_ident "Flambda.create_function_declaration" (middle_end/flambda/augment_specialised_args.ml[619,25667+8]..[619,25667+43])
                                                            [
                                                              <arg>
                                                              Labelled "params"
                                                                expression (middle_end/flambda/augment_specialised_args.ml[620,25711+18]..[620,25711+28])
                                                                  Pexp_ident "all_params" (middle_end/flambda/augment_specialised_args.ml[620,25711+18]..[620,25711+28])
                                                              <arg>
                                                              Labelled "body"
                                                                expression (middle_end/flambda/augment_specialised_args.ml[621,25740+16]..[621,25740+34])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[621,25740+16]..[621,25740+29])
                                                                    Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[621,25740+16]..[621,25740+29])
                                                                  "body" (middle_end/flambda/augment_specialised_args.ml[621,25740+30]..[621,25740+34])
                                                              <arg>
                                                              Labelled "stub"
                                                                expression (middle_end/flambda/augment_specialised_args.ml[622,25775+16]..[622,25775+34])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[622,25775+16]..[622,25775+29])
                                                                    Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[622,25775+16]..[622,25775+29])
                                                                  "stub" (middle_end/flambda/augment_specialised_args.ml[622,25775+30]..[622,25775+34])
                                                              <arg>
                                                              Labelled "dbg"
                                                                expression (middle_end/flambda/augment_specialised_args.ml[623,25810+15]..[623,25810+32])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[623,25810+15]..[623,25810+28])
                                                                    Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[623,25810+15]..[623,25810+28])
                                                                  "dbg" (middle_end/flambda/augment_specialised_args.ml[623,25810+29]..[623,25810+32])
                                                              <arg>
                                                              Labelled "inline"
                                                                expression (middle_end/flambda/augment_specialised_args.ml[624,25843+18]..[624,25843+38])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[624,25843+18]..[624,25843+31])
                                                                    Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[624,25843+18]..[624,25843+31])
                                                                  "inline" (middle_end/flambda/augment_specialised_args.ml[624,25843+32]..[624,25843+38])
                                                              <arg>
                                                              Labelled "specialise"
                                                                expression (middle_end/flambda/augment_specialised_args.ml[625,25882+22]..[625,25882+46])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[625,25882+22]..[625,25882+35])
                                                                    Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[625,25882+22]..[625,25882+35])
                                                                  "specialise" (middle_end/flambda/augment_specialised_args.ml[625,25882+36]..[625,25882+46])
                                                              <arg>
                                                              Labelled "is_a_functor"
                                                                expression (middle_end/flambda/augment_specialised_args.ml[626,25929+24]..[626,25929+50])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[626,25929+24]..[626,25929+37])
                                                                    Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[626,25929+24]..[626,25929+37])
                                                                  "is_a_functor" (middle_end/flambda/augment_specialised_args.ml[626,25929+38]..[626,25929+50])
                                                              <arg>
                                                              Labelled "closure_origin"
                                                                expression (middle_end/flambda/augment_specialised_args.ml[627,25980+11]..[627,25980+25])
                                                                  Pexp_ident "closure_origin" (middle_end/flambda/augment_specialised_args.ml[627,25980+11]..[627,25980+25])
                                                            ]
                                                      ]
                                                      expression (middle_end/flambda/augment_specialised_args.ml[629,26015+6]..[660,27353+79])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (middle_end/flambda/augment_specialised_args.ml[629,26015+10]..[629,26015+38])
                                                              Ppat_tuple
                                                              [
                                                                pattern (middle_end/flambda/augment_specialised_args.ml[629,26015+10]..[629,26015+14])
                                                                  Ppat_var "funs" (middle_end/flambda/augment_specialised_args.ml[629,26015+10]..[629,26015+14])
                                                                pattern (middle_end/flambda/augment_specialised_args.ml[629,26015+16]..[629,26015+38])
                                                                  Ppat_var "direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[629,26015+16]..[629,26015+38])
                                                              ]
                                                            expression (middle_end/flambda/augment_specialised_args.ml[630,26056+8]..[657,27265+34])
                                                              Pexp_ifthenelse
                                                              expression (middle_end/flambda/augment_specialised_args.ml[630,26056+11]..[630,26056+55])
                                                                Pexp_field
                                                                expression (middle_end/flambda/augment_specialised_args.ml[630,26056+11]..[630,26056+27])
                                                                  Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[630,26056+11]..[630,26056+27])
                                                                "make_direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[630,26056+28]..[630,26056+55])
                                                              expression (middle_end/flambda/augment_specialised_args.ml[631,26117+10]..[651,27046+38])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (middle_end/flambda/augment_specialised_args.ml[631,26117+14]..[631,26117+23])
                                                                      Ppat_var "surrogate" (middle_end/flambda/augment_specialised_args.ml[631,26117+14]..[631,26117+23])
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[631,26117+26]..[631,26117+49])
                                                                      Pexp_apply
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[631,26117+26]..[631,26117+41])
Pexp_ident "Variable.rename" (middle_end/flambda/augment_specialised_args.ml[631,26117+26]..[631,26117+41])
                                                                      [
<arg>
Nolabel
  expression (middle_end/flambda/augment_specialised_args.ml[631,26117+42]..[631,26117+49])
    Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[631,26117+42]..[631,26117+49])
                                                                      ]
                                                                ]
                                                                expression (middle_end/flambda/augment_specialised_args.ml[632,26170+10]..[651,27046+38])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[632,26170+14]..[632,26170+18])
Ppat_var "funs" (middle_end/flambda/augment_specialised_args.ml[632,26170+14]..[632,26170+18])
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[638,26521+12]..[646,26876+38])
Pexp_let Nonrec
[
  <def>
    pattern (middle_end/flambda/augment_specialised_args.ml[638,26521+16]..[638,26521+38])
      Ppat_var "existing_function_decl" (middle_end/flambda/augment_specialised_args.ml[638,26521+16]..[638,26521+38])
    expression (middle_end/flambda/augment_specialised_args.ml[639,26562+14]..[641,26644+36])
      Pexp_match
      expression (middle_end/flambda/augment_specialised_args.ml[639,26562+20]..[639,26562+42])
        Pexp_ident "existing_function_decl" (middle_end/flambda/augment_specialised_args.ml[639,26562+20]..[639,26562+42])
      [
        <case>
          pattern (middle_end/flambda/augment_specialised_args.ml[640,26610+16]..[640,26610+25])
            Ppat_construct "Some" (middle_end/flambda/augment_specialised_args.ml[640,26610+16]..[640,26610+20])
            Some
              []
              pattern (middle_end/flambda/augment_specialised_args.ml[640,26610+21]..[640,26610+25])
                Ppat_var "decl" (middle_end/flambda/augment_specialised_args.ml[640,26610+21]..[640,26610+25])
          expression (middle_end/flambda/augment_specialised_args.ml[640,26610+29]..[640,26610+33])
            Pexp_ident "decl" (middle_end/flambda/augment_specialised_args.ml[640,26610+29]..[640,26610+33])
        <case>
          pattern (middle_end/flambda/augment_specialised_args.ml[641,26644+16]..[641,26644+20])
            Ppat_construct "None" (middle_end/flambda/augment_specialised_args.ml[641,26644+16]..[641,26644+20])
            None
          expression (middle_end/flambda/augment_specialised_args.ml[641,26644+24]..[641,26644+36])
            Pexp_assert
            expression (middle_end/flambda/augment_specialised_args.ml[641,26644+31]..[641,26644+36])
              Pexp_construct "false" (middle_end/flambda/augment_specialised_args.ml[641,26644+31]..[641,26644+36])
              None
      ]
]
expression (middle_end/flambda/augment_specialised_args.ml[643,26696+12]..[646,26876+38])
  Pexp_apply
  expression (middle_end/flambda/augment_specialised_args.ml[643,26696+12]..[643,26696+28])
    Pexp_ident "Variable.Map.add" (middle_end/flambda/augment_specialised_args.ml[643,26696+12]..[643,26696+28])
  [
    <arg>
    Nolabel
      expression (middle_end/flambda/augment_specialised_args.ml[643,26696+29]..[643,26696+40])
        Pexp_ident "new_fun_var" (middle_end/flambda/augment_specialised_args.ml[643,26696+29]..[643,26696+40])
    <arg>
    Nolabel
      expression (middle_end/flambda/augment_specialised_args.ml[643,26696+41]..[643,26696+64])
        Pexp_ident "rewritten_function_decl" (middle_end/flambda/augment_specialised_args.ml[643,26696+41]..[643,26696+64])
    <arg>
    Nolabel
      expression (middle_end/flambda/augment_specialised_args.ml[644,26761+14]..[646,26876+38])
        Pexp_apply
        expression (middle_end/flambda/augment_specialised_args.ml[644,26761+15]..[644,26761+31])
          Pexp_ident "Variable.Map.add" (middle_end/flambda/augment_specialised_args.ml[644,26761+15]..[644,26761+31])
        [
          <arg>
          Nolabel
            expression (middle_end/flambda/augment_specialised_args.ml[644,26761+32]..[644,26761+41])
              Pexp_ident "surrogate" (middle_end/flambda/augment_specialised_args.ml[644,26761+32]..[644,26761+41])
          <arg>
          Nolabel
            expression (middle_end/flambda/augment_specialised_args.ml[644,26761+42]..[644,26761+49])
              Pexp_ident "wrapper" (middle_end/flambda/augment_specialised_args.ml[644,26761+42]..[644,26761+49])
          <arg>
          Nolabel
            expression (middle_end/flambda/augment_specialised_args.ml[645,26811+16]..[646,26876+37])
              Pexp_apply
              expression (middle_end/flambda/augment_specialised_args.ml[645,26811+17]..[645,26811+33])
                Pexp_ident "Variable.Map.add" (middle_end/flambda/augment_specialised_args.ml[645,26811+17]..[645,26811+33])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/augment_specialised_args.ml[645,26811+34]..[645,26811+41])
                    Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[645,26811+34]..[645,26811+41])
                <arg>
                Nolabel
                  expression (middle_end/flambda/augment_specialised_args.ml[645,26811+42]..[645,26811+64])
                    Pexp_ident "existing_function_decl" (middle_end/flambda/augment_specialised_args.ml[645,26811+42]..[645,26811+64])
                <arg>
                Nolabel
                  expression (middle_end/flambda/augment_specialised_args.ml[646,26876+18]..[646,26876+36])
                    Pexp_ident "Variable.Map.empty" (middle_end/flambda/augment_specialised_args.ml[646,26876+18]..[646,26876+36])
              ]
        ]
  ]
                                                                  ]
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[648,26928+10]..[651,27046+38])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (middle_end/flambda/augment_specialised_args.ml[648,26928+14]..[648,26928+36])
  Ppat_var "direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[648,26928+14]..[648,26928+36])
expression (middle_end/flambda/augment_specialised_args.ml[649,26967+12]..[649,26967+65])
  Pexp_apply
  expression (middle_end/flambda/augment_specialised_args.ml[649,26967+12]..[649,26967+28])
    Pexp_ident "Variable.Map.add" (middle_end/flambda/augment_specialised_args.ml[649,26967+12]..[649,26967+28])
  [
    <arg>
    Nolabel
      expression (middle_end/flambda/augment_specialised_args.ml[649,26967+29]..[649,26967+36])
        Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[649,26967+29]..[649,26967+36])
    <arg>
    Nolabel
      expression (middle_end/flambda/augment_specialised_args.ml[649,26967+37]..[649,26967+46])
        Pexp_ident "surrogate" (middle_end/flambda/augment_specialised_args.ml[649,26967+37]..[649,26967+46])
    <arg>
    Nolabel
      expression (middle_end/flambda/augment_specialised_args.ml[649,26967+47]..[649,26967+65])
        Pexp_ident "Variable.Map.empty" (middle_end/flambda/augment_specialised_args.ml[649,26967+47]..[649,26967+65])
  ]
                                                                    ]
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[651,27046+10]..[651,27046+38])
                                                                      Pexp_tuple
                                                                      [
expression (middle_end/flambda/augment_specialised_args.ml[651,27046+10]..[651,27046+14])
  Pexp_ident "funs" (middle_end/flambda/augment_specialised_args.ml[651,27046+10]..[651,27046+14])
expression (middle_end/flambda/augment_specialised_args.ml[651,27046+16]..[651,27046+38])
  Pexp_ident "direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[651,27046+16]..[651,27046+38])
                                                                      ]
                                                              Some
                                                                expression (middle_end/flambda/augment_specialised_args.ml[653,27098+10]..[657,27265+34])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[653,27098+14]..[653,27098+18])
Ppat_var "funs" (middle_end/flambda/augment_specialised_args.ml[653,27098+14]..[653,27098+18])
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[654,27119+12]..[655,27184+67])
Pexp_apply
expression (middle_end/flambda/augment_specialised_args.ml[654,27119+12]..[654,27119+28])
  Pexp_ident "Variable.Map.add" (middle_end/flambda/augment_specialised_args.ml[654,27119+12]..[654,27119+28])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/augment_specialised_args.ml[654,27119+29]..[654,27119+40])
      Pexp_ident "new_fun_var" (middle_end/flambda/augment_specialised_args.ml[654,27119+29]..[654,27119+40])
  <arg>
  Nolabel
    expression (middle_end/flambda/augment_specialised_args.ml[654,27119+41]..[654,27119+64])
      Pexp_ident "rewritten_function_decl" (middle_end/flambda/augment_specialised_args.ml[654,27119+41]..[654,27119+64])
  <arg>
  Nolabel
    expression (middle_end/flambda/augment_specialised_args.ml[655,27184+14]..[655,27184+67])
      Pexp_apply
      expression (middle_end/flambda/augment_specialised_args.ml[655,27184+15]..[655,27184+31])
        Pexp_ident "Variable.Map.add" (middle_end/flambda/augment_specialised_args.ml[655,27184+15]..[655,27184+31])
      [
        <arg>
        Nolabel
          expression (middle_end/flambda/augment_specialised_args.ml[655,27184+32]..[655,27184+39])
            Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[655,27184+32]..[655,27184+39])
        <arg>
        Nolabel
          expression (middle_end/flambda/augment_specialised_args.ml[655,27184+40]..[655,27184+47])
            Pexp_ident "wrapper" (middle_end/flambda/augment_specialised_args.ml[655,27184+40]..[655,27184+47])
        <arg>
        Nolabel
          expression (middle_end/flambda/augment_specialised_args.ml[655,27184+48]..[655,27184+66])
            Pexp_ident "Variable.Map.empty" (middle_end/flambda/augment_specialised_args.ml[655,27184+48]..[655,27184+66])
      ]
]
                                                                  ]
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[657,27265+10]..[657,27265+34])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[657,27265+10]..[657,27265+14])
Pexp_ident "funs" (middle_end/flambda/augment_specialised_args.ml[657,27265+10]..[657,27265+14])
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[657,27265+16]..[657,27265+34])
Pexp_ident "Variable.Map.empty" (middle_end/flambda/augment_specialised_args.ml[657,27265+16]..[657,27265+34])
                                                                    ]
                                                        ]
                                                        expression (middle_end/flambda/augment_specialised_args.ml[659,27309+6]..[660,27353+79])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/flambda/augment_specialised_args.ml[659,27309+10]..[659,27309+19])
                                                                Ppat_var "free_vars" (middle_end/flambda/augment_specialised_args.ml[659,27309+10]..[659,27309+19])
                                                              expression (middle_end/flambda/augment_specialised_args.ml[659,27309+22]..[659,27309+40])
                                                                Pexp_ident "Variable.Map.empty" (middle_end/flambda/augment_specialised_args.ml[659,27309+22]..[659,27309+40])
                                                          ]
                                                          expression (middle_end/flambda/augment_specialised_args.ml[660,27353+6]..[660,27353+79])
                                                            Pexp_construct "Some" (middle_end/flambda/augment_specialised_args.ml[660,27353+6]..[660,27353+10])
                                                            Some
                                                              expression (middle_end/flambda/augment_specialised_args.ml[660,27353+11]..[660,27353+79])
                                                                Pexp_tuple
                                                                [
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[660,27353+12]..[660,27353+16])
                                                                    Pexp_ident "funs" (middle_end/flambda/augment_specialised_args.ml[660,27353+12]..[660,27353+16])
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[660,27353+18]..[660,27353+27])
                                                                    Pexp_ident "free_vars" (middle_end/flambda/augment_specialised_args.ml[660,27353+18]..[660,27353+27])
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[660,27353+29]..[660,27353+45])
                                                                    Pexp_ident "specialised_args" (middle_end/flambda/augment_specialised_args.ml[660,27353+29]..[660,27353+45])
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[660,27353+47]..[660,27353+69])
                                                                    Pexp_ident "direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[660,27353+47]..[660,27353+69])
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[660,27353+71]..[660,27353+78])
                                                                    Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[660,27353+71]..[660,27353+78])
                                                                ]
              ]
            structure_item (middle_end/flambda/augment_specialised_args.ml[662,27434+2]..[677,28115+21])
              Pstr_value Nonrec
              [
                <def>
                  pattern (middle_end/flambda/augment_specialised_args.ml[662,27434+6]..[662,27434+51])
                    Ppat_var "add_lifted_projections_around_set_of_closures" (middle_end/flambda/augment_specialised_args.ml[662,27434+6]..[662,27434+51])
                  expression (middle_end/flambda/augment_specialised_args.ml[663,27486+8]..[677,28115+21]) ghost
                    Pexp_fun
                    Labelled "set_of_closures"
                    None
                    pattern (middle_end/flambda/augment_specialised_args.ml[663,27486+10]..[663,27486+51])
                      Ppat_constraint
                      pattern (middle_end/flambda/augment_specialised_args.ml[663,27486+10]..[663,27486+25])
                        Ppat_var "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[663,27486+10]..[663,27486+25])
                      core_type (middle_end/flambda/augment_specialised_args.ml[663,27486+28]..[663,27486+51])
                        Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/augment_specialised_args.ml[663,27486+28]..[663,27486+51])
                        []
                    expression (middle_end/flambda/augment_specialised_args.ml[663,27486+53]..[677,28115+21]) ghost
                      Pexp_fun
                      Labelled "benefit"
                      None
                      pattern (middle_end/flambda/augment_specialised_args.ml[663,27486+54]..[663,27486+61])
                        Ppat_var "benefit" (middle_end/flambda/augment_specialised_args.ml[663,27486+54]..[663,27486+61])
                      expression (middle_end/flambda/augment_specialised_args.ml[664,27548+8]..[677,28115+21]) ghost
                        Pexp_fun
                        Labelled "new_lifted_defns_indexed_by_new_outer_vars"
                        None
                        pattern (middle_end/flambda/augment_specialised_args.ml[664,27548+9]..[664,27548+51])
                          Ppat_var "new_lifted_defns_indexed_by_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[664,27548+9]..[664,27548+51])
                        expression (middle_end/flambda/augment_specialised_args.ml[665,27602+4]..[677,28115+21])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/augment_specialised_args.ml[665,27602+8]..[665,27602+12])
                                Ppat_var "body" (middle_end/flambda/augment_specialised_args.ml[665,27602+8]..[665,27602+12])
                              expression (middle_end/flambda/augment_specialised_args.ml[666,27617+6]..[668,27701+41])
                                Pexp_apply
                                expression (middle_end/flambda/augment_specialised_args.ml[666,27617+6]..[666,27617+29])
                                  Pexp_ident "Flambda_utils.name_expr" (middle_end/flambda/augment_specialised_args.ml[666,27617+6]..[666,27617+29])
                                [
                                  <arg>
                                  Labelled "name"
                                    expression (middle_end/flambda/augment_specialised_args.ml[667,27647+14]..[667,27647+53])
                                      Pexp_ident "Internal_variable_names.set_of_closures" (middle_end/flambda/augment_specialised_args.ml[667,27647+14]..[667,27647+53])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/augment_specialised_args.ml[668,27701+8]..[668,27701+41])
                                      Pexp_construct "Set_of_closures" (middle_end/flambda/augment_specialised_args.ml[668,27701+9]..[668,27701+24])
                                      Some
                                        expression (middle_end/flambda/augment_specialised_args.ml[668,27701+25]..[668,27701+40])
                                          Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[668,27701+25]..[668,27701+40])
                                ]
                          ]
                          expression (middle_end/flambda/augment_specialised_args.ml[670,27750+4]..[677,28115+21])
                            Pexp_apply
                            expression (middle_end/flambda/augment_specialised_args.ml[670,27750+4]..[670,27750+21])
                              Pexp_ident "Variable.Map.fold" (middle_end/flambda/augment_specialised_args.ml[670,27750+4]..[670,27750+21])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/augment_specialised_args.ml[670,27750+22]..[675,28043+22])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/augment_specialised_args.ml[670,27750+27]..[670,27750+40])
                                    Ppat_var "new_outer_var" (middle_end/flambda/augment_specialised_args.ml[670,27750+27]..[670,27750+40])
                                  expression (middle_end/flambda/augment_specialised_args.ml[670,27750+41]..[675,28043+21]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/augment_specialised_args.ml[670,27750+41]..[670,27750+68])
                                      Ppat_constraint
                                      pattern (middle_end/flambda/augment_specialised_args.ml[670,27750+42]..[670,27750+52])
                                        Ppat_var "projection" (middle_end/flambda/augment_specialised_args.ml[670,27750+42]..[670,27750+52])
                                      core_type (middle_end/flambda/augment_specialised_args.ml[670,27750+55]..[670,27750+67])
                                        Ptyp_constr "Projection.t" (middle_end/flambda/augment_specialised_args.ml[670,27750+55]..[670,27750+67])
                                        []
                                    expression (middle_end/flambda/augment_specialised_args.ml[671,27819+10]..[675,28043+21]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/augment_specialised_args.ml[671,27819+10]..[671,27819+25])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/augment_specialised_args.ml[671,27819+11]..[671,27819+15])
                                            Ppat_var "expr" (middle_end/flambda/augment_specialised_args.ml[671,27819+11]..[671,27819+15])
                                          pattern (middle_end/flambda/augment_specialised_args.ml[671,27819+17]..[671,27819+24])
                                            Ppat_var "benefit" (middle_end/flambda/augment_specialised_args.ml[671,27819+17]..[671,27819+24])
                                        ]
                                      expression (middle_end/flambda/augment_specialised_args.ml[672,27848+8]..[675,28043+21])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/augment_specialised_args.ml[672,27848+12]..[672,27848+17])
                                              Ppat_var "named" (middle_end/flambda/augment_specialised_args.ml[672,27848+12]..[672,27848+17])
                                            expression (middle_end/flambda/augment_specialised_args.ml[672,27848+20]..[672,27848+64])
                                              Pexp_apply
                                              expression (middle_end/flambda/augment_specialised_args.ml[672,27848+20]..[672,27848+53])
                                                Pexp_ident "Flambda_utils.projection_to_named" (middle_end/flambda/augment_specialised_args.ml[672,27848+20]..[672,27848+53])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/augment_specialised_args.ml[672,27848+54]..[672,27848+64])
                                                    Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[672,27848+54]..[672,27848+64])
                                              ]
                                        ]
                                        expression (middle_end/flambda/augment_specialised_args.ml[673,27916+8]..[675,28043+21])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/augment_specialised_args.ml[673,27916+12]..[673,27916+19])
                                                Ppat_var "benefit" (middle_end/flambda/augment_specialised_args.ml[673,27916+12]..[673,27916+19])
                                              expression (middle_end/flambda/augment_specialised_args.ml[673,27916+22]..[673,27916+57])
                                                Pexp_apply
                                                expression (middle_end/flambda/augment_specialised_args.ml[673,27916+22]..[673,27916+38])
                                                  Pexp_ident "B.add_projection" (middle_end/flambda/augment_specialised_args.ml[673,27916+22]..[673,27916+38])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/augment_specialised_args.ml[673,27916+39]..[673,27916+49])
                                                      Pexp_ident "projection" (middle_end/flambda/augment_specialised_args.ml[673,27916+39]..[673,27916+49])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/augment_specialised_args.ml[673,27916+50]..[673,27916+57])
                                                      Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[673,27916+50]..[673,27916+57])
                                                ]
                                          ]
                                          expression (middle_end/flambda/augment_specialised_args.ml[674,27977+8]..[675,28043+21])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/augment_specialised_args.ml[674,27977+12]..[674,27977+16])
                                                  Ppat_var "expr" (middle_end/flambda/augment_specialised_args.ml[674,27977+12]..[674,27977+16])
                                                expression (middle_end/flambda/augment_specialised_args.ml[674,27977+19]..[674,27977+62])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/augment_specialised_args.ml[674,27977+19]..[674,27977+37])
                                                    Pexp_ident "Flambda.create_let" (middle_end/flambda/augment_specialised_args.ml[674,27977+19]..[674,27977+37])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/augment_specialised_args.ml[674,27977+38]..[674,27977+51])
                                                        Pexp_ident "new_outer_var" (middle_end/flambda/augment_specialised_args.ml[674,27977+38]..[674,27977+51])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/augment_specialised_args.ml[674,27977+52]..[674,27977+57])
                                                        Pexp_ident "named" (middle_end/flambda/augment_specialised_args.ml[674,27977+52]..[674,27977+57])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/augment_specialised_args.ml[674,27977+58]..[674,27977+62])
                                                        Pexp_ident "expr" (middle_end/flambda/augment_specialised_args.ml[674,27977+58]..[674,27977+62])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/augment_specialised_args.ml[675,28043+8]..[675,28043+21])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/flambda/augment_specialised_args.ml[675,28043+8]..[675,28043+12])
                                                  Pexp_ident "expr" (middle_end/flambda/augment_specialised_args.ml[675,28043+8]..[675,28043+12])
                                                expression (middle_end/flambda/augment_specialised_args.ml[675,28043+14]..[675,28043+21])
                                                  Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[675,28043+14]..[675,28043+21])
                                              ]
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/augment_specialised_args.ml[676,28066+6]..[676,28066+48])
                                  Pexp_ident "new_lifted_defns_indexed_by_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[676,28066+6]..[676,28066+48])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/augment_specialised_args.ml[677,28115+6]..[677,28115+21])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/augment_specialised_args.ml[677,28115+7]..[677,28115+11])
                                      Pexp_ident "body" (middle_end/flambda/augment_specialised_args.ml[677,28115+7]..[677,28115+11])
                                    expression (middle_end/flambda/augment_specialised_args.ml[677,28115+13]..[677,28115+20])
                                      Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[677,28115+13]..[677,28115+20])
                                  ]
                            ]
              ]
            structure_item (middle_end/flambda/augment_specialised_args.ml[679,28138+2]..[752,31384+26])
              Pstr_value Nonrec
              [
                <def>
                  pattern (middle_end/flambda/augment_specialised_args.ml[679,28138+6]..[679,28138+34])
                    Ppat_var "rewrite_set_of_closures_core" (middle_end/flambda/augment_specialised_args.ml[679,28138+6]..[679,28138+34])
                  expression (middle_end/flambda/augment_specialised_args.ml[679,28138+35]..[752,31384+26]) ghost
                    Pexp_fun
                    Labelled "env"
                    None
                    pattern (middle_end/flambda/augment_specialised_args.ml[679,28138+36]..[679,28138+39])
                      Ppat_var "env" (middle_end/flambda/augment_specialised_args.ml[679,28138+36]..[679,28138+39])
                    expression (middle_end/flambda/augment_specialised_args.ml[679,28138+40]..[752,31384+26]) ghost
                      Pexp_fun
                      Labelled "duplicate_function"
                      None
                      pattern (middle_end/flambda/augment_specialised_args.ml[679,28138+41]..[679,28138+59])
                        Ppat_var "duplicate_function" (middle_end/flambda/augment_specialised_args.ml[679,28138+41]..[679,28138+59])
                      expression (middle_end/flambda/augment_specialised_args.ml[679,28138+60]..[752,31384+26]) ghost
                        Pexp_fun
                        Labelled "benefit"
                        None
                        pattern (middle_end/flambda/augment_specialised_args.ml[679,28138+61]..[679,28138+68])
                          Ppat_var "benefit" (middle_end/flambda/augment_specialised_args.ml[679,28138+61]..[679,28138+68])
                        expression (middle_end/flambda/augment_specialised_args.ml[680,28207+8]..[752,31384+26]) ghost
                          Pexp_fun
                          Labelled "set_of_closures"
                          None
                          pattern (middle_end/flambda/augment_specialised_args.ml[680,28207+10]..[680,28207+51])
                            Ppat_constraint
                            pattern (middle_end/flambda/augment_specialised_args.ml[680,28207+10]..[680,28207+25])
                              Ppat_var "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[680,28207+10]..[680,28207+25])
                            core_type (middle_end/flambda/augment_specialised_args.ml[680,28207+28]..[680,28207+51])
                              Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/augment_specialised_args.ml[680,28207+28]..[680,28207+51])
                              []
                          expression (middle_end/flambda/augment_specialised_args.ml[681,28262+4]..[752,31384+26])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/augment_specialised_args.ml[681,28262+8]..[681,28262+26])
                                  Ppat_var "what_to_specialise" (middle_end/flambda/augment_specialised_args.ml[681,28262+8]..[681,28262+26])
                                expression (middle_end/flambda/augment_specialised_args.ml[682,28291+6]..[683,28311+72])
                                  Pexp_apply
                                  expression (middle_end/flambda/augment_specialised_args.ml[682,28291+6]..[682,28291+14])
                                    Pexp_ident "P.create" (middle_end/flambda/augment_specialised_args.ml[682,28291+6]..[682,28291+14])
                                  [
                                    <arg>
                                    Labelled "env"
                                      expression (middle_end/flambda/augment_specialised_args.ml[682,28291+16]..[682,28291+19])
                                        Pexp_ident "env" (middle_end/flambda/augment_specialised_args.ml[682,28291+16]..[682,28291+19])
                                    <arg>
                                    Labelled "what_to_specialise"
                                      expression (middle_end/flambda/augment_specialised_args.ml[683,28311+28]..[683,28311+72])
                                        Pexp_apply
                                        expression (middle_end/flambda/augment_specialised_args.ml[683,28311+29]..[683,28311+49])
                                          Pexp_ident "T.what_to_specialise" (middle_end/flambda/augment_specialised_args.ml[683,28311+29]..[683,28311+49])
                                        [
                                          <arg>
                                          Labelled "env"
                                            expression (middle_end/flambda/augment_specialised_args.ml[683,28311+51]..[683,28311+54])
                                              Pexp_ident "env" (middle_end/flambda/augment_specialised_args.ml[683,28311+51]..[683,28311+54])
                                          <arg>
                                          Labelled "set_of_closures"
                                            expression (middle_end/flambda/augment_specialised_args.ml[683,28311+56]..[683,28311+71])
                                              Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[683,28311+56]..[683,28311+71])
                                        ]
                                  ]
                            ]
                            expression (middle_end/flambda/augment_specialised_args.ml[685,28391+4]..[752,31384+26])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/augment_specialised_args.ml[685,28391+8]..[685,28391+32])
                                    Ppat_var "original_set_of_closures" (middle_end/flambda/augment_specialised_args.ml[685,28391+8]..[685,28391+32])
                                  expression (middle_end/flambda/augment_specialised_args.ml[685,28391+35]..[685,28391+50])
                                    Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[685,28391+35]..[685,28391+50])
                              ]
                              expression (middle_end/flambda/augment_specialised_args.ml[686,28445+4]..[752,31384+26])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/augment_specialised_args.ml[686,28445+8]..[687,28512+31])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/flambda/augment_specialised_args.ml[686,28445+8]..[686,28445+12])
                                          Ppat_var "funs" (middle_end/flambda/augment_specialised_args.ml[686,28445+8]..[686,28445+12])
                                        pattern (middle_end/flambda/augment_specialised_args.ml[686,28445+14]..[686,28445+23])
                                          Ppat_var "free_vars" (middle_end/flambda/augment_specialised_args.ml[686,28445+14]..[686,28445+23])
                                        pattern (middle_end/flambda/augment_specialised_args.ml[686,28445+25]..[686,28445+41])
                                          Ppat_var "specialised_args" (middle_end/flambda/augment_specialised_args.ml[686,28445+25]..[686,28445+41])
                                        pattern (middle_end/flambda/augment_specialised_args.ml[686,28445+43]..[686,28445+65])
                                          Ppat_var "direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[686,28445+43]..[686,28445+65])
                                        pattern (middle_end/flambda/augment_specialised_args.ml[687,28512+8]..[687,28512+22])
                                          Ppat_var "done_something" (middle_end/flambda/augment_specialised_args.ml[687,28512+8]..[687,28512+22])
                                        pattern (middle_end/flambda/augment_specialised_args.ml[687,28512+24]..[687,28512+31])
                                          Ppat_var "benefit" (middle_end/flambda/augment_specialised_args.ml[687,28512+24]..[687,28512+31])
                                      ]
                                    expression (middle_end/flambda/augment_specialised_args.ml[688,28546+6]..[725,30407+65])
                                      Pexp_apply
                                      expression (middle_end/flambda/augment_specialised_args.ml[688,28546+6]..[688,28546+23])
                                        Pexp_ident "Variable.Map.fold" (middle_end/flambda/augment_specialised_args.ml[688,28546+6]..[688,28546+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/augment_specialised_args.ml[688,28546+24]..[721,30238+24])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/flambda/augment_specialised_args.ml[688,28546+29]..[688,28546+36])
                                              Ppat_var "fun_var" (middle_end/flambda/augment_specialised_args.ml[688,28546+29]..[688,28546+36])
                                            expression (middle_end/flambda/augment_specialised_args.ml[688,28546+37]..[721,30238+23]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/flambda/augment_specialised_args.ml[688,28546+37]..[688,28546+50])
                                                Ppat_var "function_decl" (middle_end/flambda/augment_specialised_args.ml[688,28546+37]..[688,28546+50])
                                              expression (middle_end/flambda/augment_specialised_args.ml[689,28597+16]..[721,30238+23]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (middle_end/flambda/augment_specialised_args.ml[689,28597+16]..[690,28673+42])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[689,28597+17]..[689,28597+21])
                                                      Ppat_var "funs" (middle_end/flambda/augment_specialised_args.ml[689,28597+17]..[689,28597+21])
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[689,28597+23]..[689,28597+32])
                                                      Ppat_var "free_vars" (middle_end/flambda/augment_specialised_args.ml[689,28597+23]..[689,28597+32])
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[689,28597+34]..[689,28597+50])
                                                      Ppat_var "specialised_args" (middle_end/flambda/augment_specialised_args.ml[689,28597+34]..[689,28597+50])
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[689,28597+52]..[689,28597+74])
                                                      Ppat_var "direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[689,28597+52]..[689,28597+74])
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[690,28673+18]..[690,28673+32])
                                                      Ppat_var "done_something" (middle_end/flambda/augment_specialised_args.ml[690,28673+18]..[690,28673+32])
                                                    pattern (middle_end/flambda/augment_specialised_args.ml[690,28673+34]..[690,28673+41])
                                                      Ppat_var "benefit" (middle_end/flambda/augment_specialised_args.ml[690,28673+34]..[690,28673+41])
                                                  ]
                                                expression (middle_end/flambda/augment_specialised_args.ml[691,28719+10]..[721,30238+23])
                                                  Pexp_match
                                                  expression (middle_end/flambda/augment_specialised_args.ml[691,28719+16]..[691,28719+70])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/augment_specialised_args.ml[691,28719+16]..[691,28719+33])
                                                      Pexp_ident "Variable.Map.find" (middle_end/flambda/augment_specialised_args.ml[691,28719+16]..[691,28719+33])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/augment_specialised_args.ml[691,28719+34]..[691,28719+41])
                                                          Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[691,28719+34]..[691,28719+41])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/augment_specialised_args.ml[691,28719+42]..[691,28719+70])
                                                          Pexp_field
                                                          expression (middle_end/flambda/augment_specialised_args.ml[691,28719+42]..[691,28719+60])
                                                            Pexp_ident "what_to_specialise" (middle_end/flambda/augment_specialised_args.ml[691,28719+42]..[691,28719+60])
                                                          "functions" (middle_end/flambda/augment_specialised_args.ml[691,28719+61]..[691,28719+70])
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (middle_end/flambda/augment_specialised_args.ml[692,28795+12]..[692,28795+31])
                                                        Ppat_exception
                                                        pattern (middle_end/flambda/augment_specialised_args.ml[692,28795+22]..[692,28795+31])
                                                          Ppat_construct "Not_found" (middle_end/flambda/augment_specialised_args.ml[692,28795+22]..[692,28795+31])
                                                          None
                                                      expression (middle_end/flambda/augment_specialised_args.ml[693,28830+12]..[695,28971+37])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (middle_end/flambda/augment_specialised_args.ml[693,28830+16]..[693,28830+20])
                                                              Ppat_var "funs" (middle_end/flambda/augment_specialised_args.ml[693,28830+16]..[693,28830+20])
                                                            expression (middle_end/flambda/augment_specialised_args.ml[693,28830+23]..[693,28830+66])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/augment_specialised_args.ml[693,28830+23]..[693,28830+39])
                                                                Pexp_ident "Variable.Map.add" (middle_end/flambda/augment_specialised_args.ml[693,28830+23]..[693,28830+39])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[693,28830+40]..[693,28830+47])
                                                                    Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[693,28830+40]..[693,28830+47])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[693,28830+48]..[693,28830+61])
                                                                    Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[693,28830+48]..[693,28830+61])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[693,28830+62]..[693,28830+66])
                                                                    Pexp_ident "funs" (middle_end/flambda/augment_specialised_args.ml[693,28830+62]..[693,28830+66])
                                                              ]
                                                        ]
                                                        expression (middle_end/flambda/augment_specialised_args.ml[694,28900+12]..[695,28971+37])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/augment_specialised_args.ml[694,28900+12]..[694,28900+16])
                                                              Pexp_ident "funs" (middle_end/flambda/augment_specialised_args.ml[694,28900+12]..[694,28900+16])
                                                            expression (middle_end/flambda/augment_specialised_args.ml[694,28900+18]..[694,28900+27])
                                                              Pexp_ident "free_vars" (middle_end/flambda/augment_specialised_args.ml[694,28900+18]..[694,28900+27])
                                                            expression (middle_end/flambda/augment_specialised_args.ml[694,28900+29]..[694,28900+45])
                                                              Pexp_ident "specialised_args" (middle_end/flambda/augment_specialised_args.ml[694,28900+29]..[694,28900+45])
                                                            expression (middle_end/flambda/augment_specialised_args.ml[694,28900+47]..[694,28900+69])
                                                              Pexp_ident "direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[694,28900+47]..[694,28900+69])
                                                            expression (middle_end/flambda/augment_specialised_args.ml[695,28971+14]..[695,28971+28])
                                                              Pexp_ident "done_something" (middle_end/flambda/augment_specialised_args.ml[695,28971+14]..[695,28971+28])
                                                            expression (middle_end/flambda/augment_specialised_args.ml[695,28971+30]..[695,28971+37])
                                                              Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[695,28971+30]..[695,28971+37])
                                                          ]
                                                    <case>
                                                      pattern (middle_end/flambda/augment_specialised_args.ml[696,29009+12]..[696,29009+51])
                                                        Ppat_constraint
                                                        pattern (middle_end/flambda/augment_specialised_args.ml[696,29009+13]..[696,29009+29])
                                                          Ppat_var "for_one_function" (middle_end/flambda/augment_specialised_args.ml[696,29009+13]..[696,29009+29])
                                                        core_type (middle_end/flambda/augment_specialised_args.ml[696,29009+32]..[696,29009+50])
                                                          Ptyp_constr "P.for_one_function" (middle_end/flambda/augment_specialised_args.ml[696,29009+32]..[696,29009+50])
                                                          []
                                                      expression (middle_end/flambda/augment_specialised_args.ml[697,29064+12]..[721,30238+23])
                                                        Pexp_sequence
                                                        expression (middle_end/flambda/augment_specialised_args.ml[697,29064+12]..[697,29064+68])
                                                          Pexp_assert
                                                          expression (middle_end/flambda/augment_specialised_args.ml[697,29064+19]..[697,29064+68])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/augment_specialised_args.ml[697,29064+20]..[697,29064+34])
                                                              Pexp_ident "Variable.equal" (middle_end/flambda/augment_specialised_args.ml[697,29064+20]..[697,29064+34])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/augment_specialised_args.ml[697,29064+35]..[697,29064+42])
                                                                  Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[697,29064+35]..[697,29064+42])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/augment_specialised_args.ml[697,29064+43]..[697,29064+67])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[697,29064+43]..[697,29064+59])
                                                                    Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[697,29064+43]..[697,29064+59])
                                                                  "fun_var" (middle_end/flambda/augment_specialised_args.ml[697,29064+60]..[697,29064+67])
                                                            ]
                                                        expression (middle_end/flambda/augment_specialised_args.ml[698,29134+12]..[721,30238+23])
                                                          Pexp_match
                                                          expression (middle_end/flambda/augment_specialised_args.ml[699,29152+14]..[700,29212+62])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/augment_specialised_args.ml[699,29152+14]..[699,29152+35])
                                                              Pexp_ident "rewrite_function_decl" (middle_end/flambda/augment_specialised_args.ml[699,29152+14]..[699,29152+35])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/augment_specialised_args.ml[699,29152+36]..[699,29152+54])
                                                                  Pexp_ident "what_to_specialise" (middle_end/flambda/augment_specialised_args.ml[699,29152+36]..[699,29152+54])
                                                              <arg>
                                                              Labelled "env"
                                                                expression (middle_end/flambda/augment_specialised_args.ml[699,29152+56]..[699,29152+59])
                                                                  Pexp_ident "env" (middle_end/flambda/augment_specialised_args.ml[699,29152+56]..[699,29152+59])
                                                              <arg>
                                                              Labelled "duplicate_function"
                                                                expression (middle_end/flambda/augment_specialised_args.ml[700,29212+17]..[700,29212+35])
                                                                  Pexp_ident "duplicate_function" (middle_end/flambda/augment_specialised_args.ml[700,29212+17]..[700,29212+35])
                                                              <arg>
                                                              Labelled "for_one_function"
                                                                expression (middle_end/flambda/augment_specialised_args.ml[700,29212+37]..[700,29212+53])
                                                                  Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[700,29212+37]..[700,29212+53])
                                                              <arg>
                                                              Labelled "benefit"
                                                                expression (middle_end/flambda/augment_specialised_args.ml[700,29212+55]..[700,29212+62])
                                                                  Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[700,29212+55]..[700,29212+62])
                                                            ]
                                                          [
                                                            <case>
                                                              pattern (middle_end/flambda/augment_specialised_args.ml[702,29292+14]..[702,29292+18])
                                                                Ppat_construct "None" (middle_end/flambda/augment_specialised_args.ml[702,29292+14]..[702,29292+18])
                                                                None
                                                              expression (middle_end/flambda/augment_specialised_args.ml[703,29314+14]..[706,29527+39])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (middle_end/flambda/augment_specialised_args.ml[703,29314+18]..[703,29314+31])
                                                                      Ppat_var "function_decl" (middle_end/flambda/augment_specialised_args.ml[703,29314+18]..[703,29314+31])
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[703,29314+34]..[703,29314+64])
                                                                      Pexp_field
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[703,29314+34]..[703,29314+50])
Pexp_ident "for_one_function" (middle_end/flambda/augment_specialised_args.ml[703,29314+34]..[703,29314+50])
                                                                      "function_decl" (middle_end/flambda/augment_specialised_args.ml[703,29314+51]..[703,29314+64])
                                                                ]
                                                                expression (middle_end/flambda/augment_specialised_args.ml[704,29382+14]..[706,29527+39])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[704,29382+18]..[704,29382+22])
Ppat_var "funs" (middle_end/flambda/augment_specialised_args.ml[704,29382+18]..[704,29382+22])
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[704,29382+25]..[704,29382+68])
Pexp_apply
expression (middle_end/flambda/augment_specialised_args.ml[704,29382+25]..[704,29382+41])
  Pexp_ident "Variable.Map.add" (middle_end/flambda/augment_specialised_args.ml[704,29382+25]..[704,29382+41])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/augment_specialised_args.ml[704,29382+42]..[704,29382+49])
      Pexp_ident "fun_var" (middle_end/flambda/augment_specialised_args.ml[704,29382+42]..[704,29382+49])
  <arg>
  Nolabel
    expression (middle_end/flambda/augment_specialised_args.ml[704,29382+50]..[704,29382+63])
      Pexp_ident "function_decl" (middle_end/flambda/augment_specialised_args.ml[704,29382+50]..[704,29382+63])
  <arg>
  Nolabel
    expression (middle_end/flambda/augment_specialised_args.ml[704,29382+64]..[704,29382+68])
      Pexp_ident "funs" (middle_end/flambda/augment_specialised_args.ml[704,29382+64]..[704,29382+68])
]
                                                                  ]
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[705,29454+14]..[706,29527+39])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[705,29454+14]..[705,29454+18])
Pexp_ident "funs" (middle_end/flambda/augment_specialised_args.ml[705,29454+14]..[705,29454+18])
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[705,29454+20]..[705,29454+29])
Pexp_ident "free_vars" (middle_end/flambda/augment_specialised_args.ml[705,29454+20]..[705,29454+29])
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[705,29454+31]..[705,29454+47])
Pexp_ident "specialised_args" (middle_end/flambda/augment_specialised_args.ml[705,29454+31]..[705,29454+47])
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[705,29454+49]..[705,29454+71])
Pexp_ident "direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[705,29454+49]..[705,29454+71])
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[706,29527+16]..[706,29527+30])
Pexp_ident "done_something" (middle_end/flambda/augment_specialised_args.ml[706,29527+16]..[706,29527+30])
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[706,29527+32]..[706,29527+39])
Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[706,29527+32]..[706,29527+39])
                                                                    ]
                                                            <case>
                                                              pattern (middle_end/flambda/augment_specialised_args.ml[707,29567+14]..[708,29625+49])
                                                                Ppat_construct "Some" (middle_end/flambda/augment_specialised_args.ml[707,29567+14]..[707,29567+18])
                                                                Some
                                                                  []
                                                                  pattern (middle_end/flambda/augment_specialised_args.ml[707,29567+19]..[708,29625+49])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[707,29567+20]..[707,29567+25])
Ppat_var "funs'" (middle_end/flambda/augment_specialised_args.ml[707,29567+20]..[707,29567+25])
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[707,29567+27]..[707,29567+37])
Ppat_var "free_vars'" (middle_end/flambda/augment_specialised_args.ml[707,29567+27]..[707,29567+37])
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[707,29567+39]..[707,29567+56])
Ppat_var "specialised_args'" (middle_end/flambda/augment_specialised_args.ml[707,29567+39]..[707,29567+56])
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[708,29625+16]..[708,29625+39])
Ppat_var "direct_call_surrogates'" (middle_end/flambda/augment_specialised_args.ml[708,29625+16]..[708,29625+39])
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[708,29625+41]..[708,29625+48])
Ppat_var "benefit" (middle_end/flambda/augment_specialised_args.ml[708,29625+41]..[708,29625+48])
                                                                    ]
                                                              expression (middle_end/flambda/augment_specialised_args.ml[709,29678+14]..[721,30238+23])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (middle_end/flambda/augment_specialised_args.ml[709,29678+18]..[709,29678+22])
                                                                      Ppat_var "funs" (middle_end/flambda/augment_specialised_args.ml[709,29678+18]..[709,29678+22])
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[709,29678+25]..[709,29678+63])
                                                                      Pexp_apply
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[709,29678+25]..[709,29678+52])
Pexp_ident "Variable.Map.disjoint_union" (middle_end/flambda/augment_specialised_args.ml[709,29678+25]..[709,29678+52])
                                                                      [
<arg>
Nolabel
  expression (middle_end/flambda/augment_specialised_args.ml[709,29678+53]..[709,29678+57])
    Pexp_ident "funs" (middle_end/flambda/augment_specialised_args.ml[709,29678+53]..[709,29678+57])
<arg>
Nolabel
  expression (middle_end/flambda/augment_specialised_args.ml[709,29678+58]..[709,29678+63])
    Pexp_ident "funs'" (middle_end/flambda/augment_specialised_args.ml[709,29678+58]..[709,29678+63])
                                                                      ]
                                                                ]
                                                                expression (middle_end/flambda/augment_specialised_args.ml[710,29745+14]..[721,30238+23])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (middle_end/flambda/augment_specialised_args.ml[710,29745+18]..[710,29745+40])
Ppat_var "direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[710,29745+18]..[710,29745+40])
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[711,29788+16]..[712,29855+41])
Pexp_apply
expression (middle_end/flambda/augment_specialised_args.ml[711,29788+16]..[711,29788+43])
  Pexp_ident "Variable.Map.disjoint_union" (middle_end/flambda/augment_specialised_args.ml[711,29788+16]..[711,29788+43])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/augment_specialised_args.ml[711,29788+44]..[711,29788+66])
      Pexp_ident "direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[711,29788+44]..[711,29788+66])
  <arg>
  Nolabel
    expression (middle_end/flambda/augment_specialised_args.ml[712,29855+18]..[712,29855+41])
      Pexp_ident "direct_call_surrogates'" (middle_end/flambda/augment_specialised_args.ml[712,29855+18]..[712,29855+41])
]
                                                                  ]
                                                                  expression (middle_end/flambda/augment_specialised_args.ml[714,29914+14]..[721,30238+23])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (middle_end/flambda/augment_specialised_args.ml[714,29914+18]..[714,29914+27])
  Ppat_var "free_vars" (middle_end/flambda/augment_specialised_args.ml[714,29914+18]..[714,29914+27])
expression (middle_end/flambda/augment_specialised_args.ml[715,29944+16]..[715,29944+64])
  Pexp_apply
  expression (middle_end/flambda/augment_specialised_args.ml[715,29944+16]..[715,29944+43])
    Pexp_ident "Variable.Map.disjoint_union" (middle_end/flambda/augment_specialised_args.ml[715,29944+16]..[715,29944+43])
  [
    <arg>
    Nolabel
      expression (middle_end/flambda/augment_specialised_args.ml[715,29944+44]..[715,29944+53])
        Pexp_ident "free_vars" (middle_end/flambda/augment_specialised_args.ml[715,29944+44]..[715,29944+53])
    <arg>
    Nolabel
      expression (middle_end/flambda/augment_specialised_args.ml[715,29944+54]..[715,29944+64])
        Pexp_ident "free_vars'" (middle_end/flambda/augment_specialised_args.ml[715,29944+54]..[715,29944+64])
  ]
                                                                    ]
                                                                    expression (middle_end/flambda/augment_specialised_args.ml[717,30026+14]..[721,30238+23])
                                                                      Pexp_let Nonrec
                                                                      [
<def>
  pattern (middle_end/flambda/augment_specialised_args.ml[717,30026+18]..[717,30026+34])
    Ppat_var "specialised_args" (middle_end/flambda/augment_specialised_args.ml[717,30026+18]..[717,30026+34])
  expression (middle_end/flambda/augment_specialised_args.ml[718,30063+16]..[718,30063+78])
    Pexp_apply
    expression (middle_end/flambda/augment_specialised_args.ml[718,30063+16]..[718,30063+43])
      Pexp_ident "Variable.Map.disjoint_union" (middle_end/flambda/augment_specialised_args.ml[718,30063+16]..[718,30063+43])
    [
      <arg>
      Nolabel
        expression (middle_end/flambda/augment_specialised_args.ml[718,30063+44]..[718,30063+60])
          Pexp_ident "specialised_args" (middle_end/flambda/augment_specialised_args.ml[718,30063+44]..[718,30063+60])
      <arg>
      Nolabel
        expression (middle_end/flambda/augment_specialised_args.ml[718,30063+61]..[718,30063+78])
          Pexp_ident "specialised_args'" (middle_end/flambda/augment_specialised_args.ml[718,30063+61]..[718,30063+78])
    ]
                                                                      ]
                                                                      expression (middle_end/flambda/augment_specialised_args.ml[720,30159+14]..[721,30238+23])
Pexp_tuple
[
  expression (middle_end/flambda/augment_specialised_args.ml[720,30159+14]..[720,30159+18])
    Pexp_ident "funs" (middle_end/flambda/augment_specialised_args.ml[720,30159+14]..[720,30159+18])
  expression (middle_end/flambda/augment_specialised_args.ml[720,30159+20]..[720,30159+29])
    Pexp_ident "free_vars" (middle_end/flambda/augment_specialised_args.ml[720,30159+20]..[720,30159+29])
  expression (middle_end/flambda/augment_specialised_args.ml[720,30159+31]..[720,30159+47])
    Pexp_ident "specialised_args" (middle_end/flambda/augment_specialised_args.ml[720,30159+31]..[720,30159+47])
  expression (middle_end/flambda/augment_specialised_args.ml[720,30159+49]..[720,30159+71])
    Pexp_ident "direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[720,30159+49]..[720,30159+71])
  expression (middle_end/flambda/augment_specialised_args.ml[720,30159+73]..[720,30159+77])
    Pexp_construct "true" (middle_end/flambda/augment_specialised_args.ml[720,30159+73]..[720,30159+77])
    None
  expression (middle_end/flambda/augment_specialised_args.ml[721,30238+16]..[721,30238+23])
    Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[721,30238+16]..[721,30238+23])
]
                                                          ]
                                                  ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/augment_specialised_args.ml[722,30263+8]..[722,30263+43])
                                            Pexp_field
                                            expression (middle_end/flambda/augment_specialised_args.ml[722,30263+8]..[722,30263+38])
                                              Pexp_field
                                              expression (middle_end/flambda/augment_specialised_args.ml[722,30263+8]..[722,30263+23])
                                                Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[722,30263+8]..[722,30263+23])
                                              "function_decls" (middle_end/flambda/augment_specialised_args.ml[722,30263+24]..[722,30263+38])
                                            "funs" (middle_end/flambda/augment_specialised_args.ml[722,30263+39]..[722,30263+43])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/augment_specialised_args.ml[723,30307+8]..[725,30407+65])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/flambda/augment_specialised_args.ml[723,30307+9]..[723,30307+27])
                                                Pexp_ident "Variable.Map.empty" (middle_end/flambda/augment_specialised_args.ml[723,30307+9]..[723,30307+27])
                                              expression (middle_end/flambda/augment_specialised_args.ml[723,30307+29]..[723,30307+54])
                                                Pexp_field
                                                expression (middle_end/flambda/augment_specialised_args.ml[723,30307+29]..[723,30307+44])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[723,30307+29]..[723,30307+44])
                                                "free_vars" (middle_end/flambda/augment_specialised_args.ml[723,30307+45]..[723,30307+54])
                                              expression (middle_end/flambda/augment_specialised_args.ml[724,30363+10]..[724,30363+42])
                                                Pexp_field
                                                expression (middle_end/flambda/augment_specialised_args.ml[724,30363+10]..[724,30363+25])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[724,30363+10]..[724,30363+25])
                                                "specialised_args" (middle_end/flambda/augment_specialised_args.ml[724,30363+26]..[724,30363+42])
                                              expression (middle_end/flambda/augment_specialised_args.ml[725,30407+10]..[725,30407+48])
                                                Pexp_field
                                                expression (middle_end/flambda/augment_specialised_args.ml[725,30407+10]..[725,30407+25])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[725,30407+10]..[725,30407+25])
                                                "direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[725,30407+26]..[725,30407+48])
                                              expression (middle_end/flambda/augment_specialised_args.ml[725,30407+50]..[725,30407+55])
                                                Pexp_construct "false" (middle_end/flambda/augment_specialised_args.ml[725,30407+50]..[725,30407+55])
                                                None
                                              expression (middle_end/flambda/augment_specialised_args.ml[725,30407+57]..[725,30407+64])
                                                Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[725,30407+57]..[725,30407+64])
                                            ]
                                      ]
                                ]
                                expression (middle_end/flambda/augment_specialised_args.ml[727,30480+4]..[752,31384+26])
                                  Pexp_ifthenelse
                                  expression (middle_end/flambda/augment_specialised_args.ml[727,30480+7]..[727,30480+25])
                                    Pexp_apply
                                    expression (middle_end/flambda/augment_specialised_args.ml[727,30480+7]..[727,30480+10])
                                      Pexp_ident "not" (middle_end/flambda/augment_specialised_args.ml[727,30480+7]..[727,30480+10])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[727,30480+11]..[727,30480+25])
                                          Pexp_ident "done_something" (middle_end/flambda/augment_specialised_args.ml[727,30480+11]..[727,30480+25])
                                    ]
                                  expression (middle_end/flambda/augment_specialised_args.ml[728,30511+6]..[728,30511+10])
                                    Pexp_construct "None" (middle_end/flambda/augment_specialised_args.ml[728,30511+6]..[728,30511+10])
                                    None
                                  Some
                                    expression (middle_end/flambda/augment_specialised_args.ml[730,30531+6]..[752,31384+26])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/augment_specialised_args.ml[730,30531+10]..[730,30531+24])
                                            Ppat_var "function_decls" (middle_end/flambda/augment_specialised_args.ml[730,30531+10]..[730,30531+24])
                                          expression (middle_end/flambda/augment_specialised_args.ml[731,30558+8]..[732,30634+15])
                                            Pexp_apply
                                            expression (middle_end/flambda/augment_specialised_args.ml[731,30558+8]..[731,30558+44])
                                              Pexp_ident "Flambda.update_function_declarations" (middle_end/flambda/augment_specialised_args.ml[731,30558+8]..[731,30558+44])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/augment_specialised_args.ml[731,30558+45]..[731,30558+75])
                                                  Pexp_field
                                                  expression (middle_end/flambda/augment_specialised_args.ml[731,30558+45]..[731,30558+60])
                                                    Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[731,30558+45]..[731,30558+60])
                                                  "function_decls" (middle_end/flambda/augment_specialised_args.ml[731,30558+61]..[731,30558+75])
                                              <arg>
                                              Labelled "funs"
                                                expression (middle_end/flambda/augment_specialised_args.ml[732,30634+11]..[732,30634+15])
                                                  Pexp_ident "funs" (middle_end/flambda/augment_specialised_args.ml[732,30634+11]..[732,30634+15])
                                            ]
                                      ]
                                      expression (middle_end/flambda/augment_specialised_args.ml[734,30659+6]..[752,31384+26])
                                        Pexp_sequence
                                        expression (middle_end/flambda/augment_specialised_args.ml[734,30659+6]..[735,30712+75])
                                          Pexp_assert
                                          expression (middle_end/flambda/augment_specialised_args.ml[734,30659+13]..[735,30712+75])
                                            Pexp_apply
                                            expression (middle_end/flambda/augment_specialised_args.ml[735,30712+8]..[735,30712+10])
                                              Pexp_ident ">=" (middle_end/flambda/augment_specialised_args.ml[735,30712+8]..[735,30712+10])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/augment_specialised_args.ml[734,30659+14]..[734,30659+52])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/augment_specialised_args.ml[734,30659+14]..[734,30659+35])
                                                    Pexp_ident "Variable.Map.cardinal" (middle_end/flambda/augment_specialised_args.ml[734,30659+14]..[734,30659+35])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/augment_specialised_args.ml[734,30659+36]..[734,30659+52])
                                                        Pexp_ident "specialised_args" (middle_end/flambda/augment_specialised_args.ml[734,30659+36]..[734,30659+52])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/augment_specialised_args.ml[735,30712+11]..[735,30712+74])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/augment_specialised_args.ml[735,30712+11]..[735,30712+32])
                                                    Pexp_ident "Variable.Map.cardinal" (middle_end/flambda/augment_specialised_args.ml[735,30712+11]..[735,30712+32])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/augment_specialised_args.ml[735,30712+33]..[735,30712+74])
                                                        Pexp_field
                                                        expression (middle_end/flambda/augment_specialised_args.ml[735,30712+33]..[735,30712+57])
                                                          Pexp_ident "original_set_of_closures" (middle_end/flambda/augment_specialised_args.ml[735,30712+33]..[735,30712+57])
                                                        "specialised_args" (middle_end/flambda/augment_specialised_args.ml[735,30712+58]..[735,30712+74])
                                                  ]
                                            ]
                                        expression (middle_end/flambda/augment_specialised_args.ml[736,30789+6]..[752,31384+26])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/augment_specialised_args.ml[736,30789+10]..[736,30789+25])
                                                Ppat_var "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[736,30789+10]..[736,30789+25])
                                              expression (middle_end/flambda/augment_specialised_args.ml[737,30817+8]..[741,30931+33])
                                                Pexp_apply
                                                expression (middle_end/flambda/augment_specialised_args.ml[737,30817+8]..[737,30817+38])
                                                  Pexp_ident "Flambda.create_set_of_closures" (middle_end/flambda/augment_specialised_args.ml[737,30817+8]..[737,30817+38])
                                                [
                                                  <arg>
                                                  Labelled "function_decls"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[738,30856+11]..[738,30856+25])
                                                      Pexp_ident "function_decls" (middle_end/flambda/augment_specialised_args.ml[738,30856+11]..[738,30856+25])
                                                  <arg>
                                                  Labelled "free_vars"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[739,30882+11]..[739,30882+20])
                                                      Pexp_ident "free_vars" (middle_end/flambda/augment_specialised_args.ml[739,30882+11]..[739,30882+20])
                                                  <arg>
                                                  Labelled "specialised_args"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[740,30903+11]..[740,30903+27])
                                                      Pexp_ident "specialised_args" (middle_end/flambda/augment_specialised_args.ml[740,30903+11]..[740,30903+27])
                                                  <arg>
                                                  Labelled "direct_call_surrogates"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[741,30931+11]..[741,30931+33])
                                                      Pexp_ident "direct_call_surrogates" (middle_end/flambda/augment_specialised_args.ml[741,30931+11]..[741,30931+33])
                                                ]
                                          ]
                                          expression (middle_end/flambda/augment_specialised_args.ml[743,30974+6]..[752,31384+26])
                                            Pexp_sequence
                                            expression (middle_end/flambda/augment_specialised_args.ml[743,30974+6]..[746,31129+9])
                                              Pexp_ifthenelse
                                              expression (middle_end/flambda/augment_specialised_args.ml[743,30974+9]..[743,30974+42])
                                                Pexp_apply
                                                expression (middle_end/flambda/augment_specialised_args.ml[743,30974+9]..[743,30974+10])
                                                  Pexp_ident "!" (middle_end/flambda/augment_specialised_args.ml[743,30974+9]..[743,30974+10])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/augment_specialised_args.ml[743,30974+10]..[743,30974+42])
                                                      Pexp_ident "Clflags.flambda_invariant_checks" (middle_end/flambda/augment_specialised_args.ml[743,30974+10]..[743,30974+42])
                                                ]
                                              expression (middle_end/flambda/augment_specialised_args.ml[743,30974+48]..[746,31129+9])
                                                Pexp_apply
                                                expression (middle_end/flambda/augment_specialised_args.ml[744,31028+8]..[744,31028+24])
                                                  Pexp_ident "check_invariants" (middle_end/flambda/augment_specialised_args.ml[744,31028+8]..[744,31028+24])
                                                [
                                                  <arg>
                                                  Labelled "set_of_closures"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[744,31028+26]..[744,31028+41])
                                                      Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[744,31028+26]..[744,31028+41])
                                                  <arg>
                                                  Labelled "original_set_of_closures"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[744,31028+43]..[744,31028+67])
                                                      Pexp_ident "original_set_of_closures" (middle_end/flambda/augment_specialised_args.ml[744,31028+43]..[744,31028+67])
                                                  <arg>
                                                  Labelled "pass_name"
                                                    expression (middle_end/flambda/augment_specialised_args.ml[745,31096+21]..[745,31096+32])
                                                      Pexp_ident "T.pass_name" (middle_end/flambda/augment_specialised_args.ml[745,31096+21]..[745,31096+32])
                                                ]
                                              None
                                            expression (middle_end/flambda/augment_specialised_args.ml[747,31140+6]..[752,31384+26])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/augment_specialised_args.ml[747,31140+10]..[747,31140+23])
                                                    Ppat_tuple
                                                    [
                                                      pattern (middle_end/flambda/augment_specialised_args.ml[747,31140+10]..[747,31140+14])
                                                        Ppat_var "expr" (middle_end/flambda/augment_specialised_args.ml[747,31140+10]..[747,31140+14])
                                                      pattern (middle_end/flambda/augment_specialised_args.ml[747,31140+16]..[747,31140+23])
                                                        Ppat_var "benefit" (middle_end/flambda/augment_specialised_args.ml[747,31140+16]..[747,31140+23])
                                                    ]
                                                  expression (middle_end/flambda/augment_specialised_args.ml[748,31166+8]..[750,31301+73])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/augment_specialised_args.ml[748,31166+8]..[748,31166+53])
                                                      Pexp_ident "add_lifted_projections_around_set_of_closures" (middle_end/flambda/augment_specialised_args.ml[748,31166+8]..[748,31166+53])
                                                    [
                                                      <arg>
                                                      Labelled "set_of_closures"
                                                        expression (middle_end/flambda/augment_specialised_args.ml[748,31166+55]..[748,31166+70])
                                                          Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[748,31166+55]..[748,31166+70])
                                                      <arg>
                                                      Labelled "benefit"
                                                        expression (middle_end/flambda/augment_specialised_args.ml[748,31166+72]..[748,31166+79])
                                                          Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[748,31166+72]..[748,31166+79])
                                                      <arg>
                                                      Labelled "new_lifted_defns_indexed_by_new_outer_vars"
                                                        expression (middle_end/flambda/augment_specialised_args.ml[750,31301+12]..[750,31301+73])
                                                          Pexp_field
                                                          expression (middle_end/flambda/augment_specialised_args.ml[750,31301+12]..[750,31301+30])
                                                            Pexp_ident "what_to_specialise" (middle_end/flambda/augment_specialised_args.ml[750,31301+12]..[750,31301+30])
                                                          "new_lifted_defns_indexed_by_new_outer_vars" (middle_end/flambda/augment_specialised_args.ml[750,31301+31]..[750,31301+73])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/augment_specialised_args.ml[752,31384+6]..[752,31384+26])
                                                Pexp_construct "Some" (middle_end/flambda/augment_specialised_args.ml[752,31384+6]..[752,31384+10])
                                                Some
                                                  expression (middle_end/flambda/augment_specialised_args.ml[752,31384+11]..[752,31384+26])
                                                    Pexp_tuple
                                                    [
                                                      expression (middle_end/flambda/augment_specialised_args.ml[752,31384+12]..[752,31384+16])
                                                        Pexp_ident "expr" (middle_end/flambda/augment_specialised_args.ml[752,31384+12]..[752,31384+16])
                                                      expression (middle_end/flambda/augment_specialised_args.ml[752,31384+18]..[752,31384+25])
                                                        Pexp_ident "benefit" (middle_end/flambda/augment_specialised_args.ml[752,31384+18]..[752,31384+25])
                                                    ]
              ]
            structure_item (middle_end/flambda/augment_specialised_args.ml[754,31412+2]..[761,31815+43])
              Pstr_value Nonrec
              [
                <def>
                  pattern (middle_end/flambda/augment_specialised_args.ml[754,31412+6]..[754,31412+29])
                    Ppat_var "rewrite_set_of_closures" (middle_end/flambda/augment_specialised_args.ml[754,31412+6]..[754,31412+29])
                  expression (middle_end/flambda/augment_specialised_args.ml[754,31412+30]..[761,31815+43]) ghost
                    Pexp_fun
                    Labelled "env"
                    None
                    pattern (middle_end/flambda/augment_specialised_args.ml[754,31412+31]..[754,31412+34])
                      Ppat_var "env" (middle_end/flambda/augment_specialised_args.ml[754,31412+31]..[754,31412+34])
                    expression (middle_end/flambda/augment_specialised_args.ml[754,31412+35]..[761,31815+43]) ghost
                      Pexp_fun
                      Labelled "duplicate_function"
                      None
                      pattern (middle_end/flambda/augment_specialised_args.ml[754,31412+36]..[754,31412+54])
                        Ppat_var "duplicate_function" (middle_end/flambda/augment_specialised_args.ml[754,31412+36]..[754,31412+54])
                      expression (middle_end/flambda/augment_specialised_args.ml[754,31412+55]..[761,31815+43]) ghost
                        Pexp_fun
                        Labelled "set_of_closures"
                        None
                        pattern (middle_end/flambda/augment_specialised_args.ml[754,31412+56]..[754,31412+71])
                          Ppat_var "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[754,31412+56]..[754,31412+71])
                        expression (middle_end/flambda/augment_specialised_args.ml[755,31486+4]..[761,31815+43])
                          Pexp_apply
                          expression (middle_end/flambda/augment_specialised_args.ml[755,31486+4]..[755,31486+26])
                            Pexp_ident "Pass_wrapper.with_dump" (middle_end/flambda/augment_specialised_args.ml[755,31486+4]..[755,31486+26])
                          [
                            <arg>
                            Labelled "ppf_dump"
                              expression (middle_end/flambda/augment_specialised_args.ml[755,31486+37]..[755,31486+79])
                                Pexp_apply
                                expression (middle_end/flambda/augment_specialised_args.ml[755,31486+38]..[755,31486+74])
                                  Pexp_ident "Inline_and_simplify_aux.Env.ppf_dump" (middle_end/flambda/augment_specialised_args.ml[755,31486+38]..[755,31486+74])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/augment_specialised_args.ml[755,31486+75]..[755,31486+78])
                                      Pexp_ident "env" (middle_end/flambda/augment_specialised_args.ml[755,31486+75]..[755,31486+78])
                                ]
                            <arg>
                            Labelled "pass_name"
                              expression (middle_end/flambda/augment_specialised_args.ml[756,31566+17]..[756,31566+28])
                                Pexp_ident "T.pass_name" (middle_end/flambda/augment_specialised_args.ml[756,31566+17]..[756,31566+28])
                            <arg>
                            Labelled "input"
                              expression (middle_end/flambda/augment_specialised_args.ml[756,31566+36]..[756,31566+51])
                                Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[756,31566+36]..[756,31566+51])
                            <arg>
                            Labelled "print_input"
                              expression (middle_end/flambda/augment_specialised_args.ml[757,31618+19]..[757,31618+48])
                                Pexp_ident "Flambda.print_set_of_closures" (middle_end/flambda/augment_specialised_args.ml[757,31618+19]..[757,31618+48])
                            <arg>
                            Labelled "print_output"
                              expression (middle_end/flambda/augment_specialised_args.ml[758,31667+20]..[758,31667+65])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/augment_specialised_args.ml[758,31667+25]..[758,31667+28])
                                  Ppat_var "ppf" (middle_end/flambda/augment_specialised_args.ml[758,31667+25]..[758,31667+28])
                                expression (middle_end/flambda/augment_specialised_args.ml[758,31667+29]..[758,31667+64]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/augment_specialised_args.ml[758,31667+29]..[758,31667+38])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/augment_specialised_args.ml[758,31667+30]..[758,31667+34])
                                        Ppat_var "expr" (middle_end/flambda/augment_specialised_args.ml[758,31667+30]..[758,31667+34])
                                      pattern (middle_end/flambda/augment_specialised_args.ml[758,31667+36]..[758,31667+37])
                                        Ppat_any
                                    ]
                                  expression (middle_end/flambda/augment_specialised_args.ml[758,31667+42]..[758,31667+64])
                                    Pexp_apply
                                    expression (middle_end/flambda/augment_specialised_args.ml[758,31667+42]..[758,31667+55])
                                      Pexp_ident "Flambda.print" (middle_end/flambda/augment_specialised_args.ml[758,31667+42]..[758,31667+55])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[758,31667+56]..[758,31667+59])
                                          Pexp_ident "ppf" (middle_end/flambda/augment_specialised_args.ml[758,31667+56]..[758,31667+59])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/augment_specialised_args.ml[758,31667+60]..[758,31667+64])
                                          Pexp_ident "expr" (middle_end/flambda/augment_specialised_args.ml[758,31667+60]..[758,31667+64])
                                    ]
                            <arg>
                            Labelled "f"
                              expression (middle_end/flambda/augment_specialised_args.ml[759,31733+9]..[761,31815+43])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/augment_specialised_args.ml[759,31733+14]..[759,31733+16])
                                  Ppat_construct "()" (middle_end/flambda/augment_specialised_args.ml[759,31733+14]..[759,31733+16])
                                  None
                                expression (middle_end/flambda/augment_specialised_args.ml[760,31753+8]..[761,31815+42])
                                  Pexp_apply
                                  expression (middle_end/flambda/augment_specialised_args.ml[760,31753+8]..[760,31753+36])
                                    Pexp_ident "rewrite_set_of_closures_core" (middle_end/flambda/augment_specialised_args.ml[760,31753+8]..[760,31753+36])
                                  [
                                    <arg>
                                    Labelled "env"
                                      expression (middle_end/flambda/augment_specialised_args.ml[760,31753+38]..[760,31753+41])
                                        Pexp_ident "env" (middle_end/flambda/augment_specialised_args.ml[760,31753+38]..[760,31753+41])
                                    <arg>
                                    Labelled "duplicate_function"
                                      expression (middle_end/flambda/augment_specialised_args.ml[760,31753+43]..[760,31753+61])
                                        Pexp_ident "duplicate_function" (middle_end/flambda/augment_specialised_args.ml[760,31753+43]..[760,31753+61])
                                    <arg>
                                    Labelled "benefit"
                                      expression (middle_end/flambda/augment_specialised_args.ml[761,31815+19]..[761,31815+25])
                                        Pexp_ident "B.zero" (middle_end/flambda/augment_specialised_args.ml[761,31815+19]..[761,31815+25])
                                    <arg>
                                    Labelled "set_of_closures"
                                      expression (middle_end/flambda/augment_specialised_args.ml[761,31815+27]..[761,31815+42])
                                        Pexp_ident "set_of_closures" (middle_end/flambda/augment_specialised_args.ml[761,31815+27]..[761,31815+42])
                                  ]
                          ]
              ]
          ]
]

