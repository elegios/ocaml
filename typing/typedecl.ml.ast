[
  structure_item (typing/typedecl.ml[18,1119+0]..[18,1119+9])
    Pstr_open Fresh
    module_expr (typing/typedecl.ml[18,1119+5]..[18,1119+9])
      Pmod_ident "Misc" (typing/typedecl.ml[18,1119+5]..[18,1119+9])
  structure_item (typing/typedecl.ml[19,1129+0]..[19,1129+13])
    Pstr_open Fresh
    module_expr (typing/typedecl.ml[19,1129+5]..[19,1129+13])
      Pmod_ident "Asttypes" (typing/typedecl.ml[19,1129+5]..[19,1129+13])
  structure_item (typing/typedecl.ml[20,1143+0]..[20,1143+14])
    Pstr_open Fresh
    module_expr (typing/typedecl.ml[20,1143+5]..[20,1143+14])
      Pmod_ident "Parsetree" (typing/typedecl.ml[20,1143+5]..[20,1143+14])
  structure_item (typing/typedecl.ml[21,1158+0]..[21,1158+14])
    Pstr_open Fresh
    module_expr (typing/typedecl.ml[21,1158+5]..[21,1158+14])
      Pmod_ident "Primitive" (typing/typedecl.ml[21,1158+5]..[21,1158+14])
  structure_item (typing/typedecl.ml[22,1173+0]..[22,1173+10])
    Pstr_open Fresh
    module_expr (typing/typedecl.ml[22,1173+5]..[22,1173+10])
      Pmod_ident "Types" (typing/typedecl.ml[22,1173+5]..[22,1173+10])
  structure_item (typing/typedecl.ml[23,1184+0]..[23,1184+13])
    Pstr_open Fresh
    module_expr (typing/typedecl.ml[23,1184+5]..[23,1184+13])
      Pmod_ident "Typetexp" (typing/typedecl.ml[23,1184+5]..[23,1184+13])
  structure_item (typing/typedecl.ml[25,1199+0]..[25,1199+34])
    Pstr_module
    "String" (typing/typedecl.ml[25,1199+7]..[25,1199+13])
      module_expr (typing/typedecl.ml[25,1199+16]..[25,1199+34])
        Pmod_ident "Misc.Stdlib.String" (typing/typedecl.ml[25,1199+16]..[25,1199+34])
  structure_item (typing/typedecl.ml[27,1235+0]..[27,1235+42])
    Pstr_type Rec
    [
      type_declaration "native_repr_kind" (typing/typedecl.ml[27,1235+5]..[27,1235+21]) (typing/typedecl.ml[27,1235+0]..[27,1235+42])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedecl.ml[27,1235+24]..[27,1235+31])
                "Unboxed" (typing/typedecl.ml[27,1235+24]..[27,1235+31])
                []
                None
              (typing/typedecl.ml[27,1235+32]..[27,1235+42])
                "Untagged" (typing/typedecl.ml[27,1235+34]..[27,1235+42])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/typedecl.ml[29,1279+0]..[68,2787+48])
    Pstr_type Rec
    [
      type_declaration "error" (typing/typedecl.ml[29,1279+5]..[29,1279+10]) (typing/typedecl.ml[29,1279+0]..[68,2787+48])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedecl.ml[30,1292+4]..[30,1292+22])
                "Repeated_parameter" (typing/typedecl.ml[30,1292+4]..[30,1292+22])
                []
                None
              (typing/typedecl.ml[31,1315+2]..[31,1315+35])
                "Duplicate_constructor" (typing/typedecl.ml[31,1315+4]..[31,1315+25])
                [
                  core_type (typing/typedecl.ml[31,1315+29]..[31,1315+35])
                    Ptyp_constr "string" (typing/typedecl.ml[31,1315+29]..[31,1315+35])
                    []
                ]
                None
              (typing/typedecl.ml[32,1351+2]..[32,1351+25])
                "Too_many_constructors" (typing/typedecl.ml[32,1351+4]..[32,1351+25])
                []
                None
              (typing/typedecl.ml[33,1377+2]..[33,1377+29])
                "Duplicate_label" (typing/typedecl.ml[33,1377+4]..[33,1377+19])
                [
                  core_type (typing/typedecl.ml[33,1377+23]..[33,1377+29])
                    Ptyp_constr "string" (typing/typedecl.ml[33,1377+23]..[33,1377+29])
                    []
                ]
                None
              (typing/typedecl.ml[34,1407+2]..[34,1407+30])
                "Recursive_abbrev" (typing/typedecl.ml[34,1407+4]..[34,1407+20])
                [
                  core_type (typing/typedecl.ml[34,1407+24]..[34,1407+30])
                    Ptyp_constr "string" (typing/typedecl.ml[34,1407+24]..[34,1407+30])
                    []
                ]
                None
              (typing/typedecl.ml[35,1438+2]..[35,1438+38])
                "Cycle_in_def" (typing/typedecl.ml[35,1438+4]..[35,1438+16])
                [
                  core_type (typing/typedecl.ml[35,1438+20]..[35,1438+26])
                    Ptyp_constr "string" (typing/typedecl.ml[35,1438+20]..[35,1438+26])
                    []
                  core_type (typing/typedecl.ml[35,1438+29]..[35,1438+38])
                    Ptyp_constr "type_expr" (typing/typedecl.ml[35,1438+29]..[35,1438+38])
                    []
                ]
                None
              (typing/typedecl.ml[36,1477+2]..[36,1477+79])
                "Definition_mismatch" (typing/typedecl.ml[36,1477+4]..[36,1477+23])
                [
                  core_type (typing/typedecl.ml[36,1477+27]..[36,1477+36])
                    Ptyp_constr "type_expr" (typing/typedecl.ml[36,1477+27]..[36,1477+36])
                    []
                  core_type (typing/typedecl.ml[36,1477+39]..[36,1477+44])
                    Ptyp_constr "Env.t" (typing/typedecl.ml[36,1477+39]..[36,1477+44])
                    []
                  core_type (typing/typedecl.ml[36,1477+47]..[36,1477+79])
                    Ptyp_constr "option" (typing/typedecl.ml[36,1477+73]..[36,1477+79])
                    [
                      core_type (typing/typedecl.ml[36,1477+47]..[36,1477+72])
                        Ptyp_constr "Includecore.type_mismatch" (typing/typedecl.ml[36,1477+47]..[36,1477+72])
                        []
                    ]
                ]
                None
              (typing/typedecl.ml[37,1557+2]..[37,1557+61])
                "Constraint_failed" (typing/typedecl.ml[37,1557+4]..[37,1557+21])
                [
                  core_type (typing/typedecl.ml[37,1557+25]..[37,1557+30])
                    Ptyp_constr "Env.t" (typing/typedecl.ml[37,1557+25]..[37,1557+30])
                    []
                  core_type (typing/typedecl.ml[37,1557+33]..[37,1557+61])
                    Ptyp_constr "Errortrace.unification_error" (typing/typedecl.ml[37,1557+33]..[37,1557+61])
                    []
                ]
                None
              (typing/typedecl.ml[38,1619+2]..[38,1619+67])
                "Inconsistent_constraint" (typing/typedecl.ml[38,1619+4]..[38,1619+27])
                [
                  core_type (typing/typedecl.ml[38,1619+31]..[38,1619+36])
                    Ptyp_constr "Env.t" (typing/typedecl.ml[38,1619+31]..[38,1619+36])
                    []
                  core_type (typing/typedecl.ml[38,1619+39]..[38,1619+67])
                    Ptyp_constr "Errortrace.unification_error" (typing/typedecl.ml[38,1619+39]..[38,1619+67])
                    []
                ]
                None
              (typing/typedecl.ml[39,1687+2]..[39,1687+54])
                "Type_clash" (typing/typedecl.ml[39,1687+4]..[39,1687+14])
                [
                  core_type (typing/typedecl.ml[39,1687+18]..[39,1687+23])
                    Ptyp_constr "Env.t" (typing/typedecl.ml[39,1687+18]..[39,1687+23])
                    []
                  core_type (typing/typedecl.ml[39,1687+26]..[39,1687+54])
                    Ptyp_constr "Errortrace.unification_error" (typing/typedecl.ml[39,1687+26]..[39,1687+54])
                    []
                ]
                None
              (typing/typedecl.ml[40,1742+2]..[45,1892+5])
                "Non_regular" (typing/typedecl.ml[40,1742+4]..[40,1742+15])
                [
                  (typing/typedecl.ml[41,1763+6]..[41,1763+25])
                    Immutable
                    "definition" (typing/typedecl.ml[41,1763+6]..[41,1763+16])                    core_type (typing/typedecl.ml[41,1763+18]..[41,1763+24])
                      Ptyp_constr "Path.t" (typing/typedecl.ml[41,1763+18]..[41,1763+24])
                      []
                  (typing/typedecl.ml[42,1789+6]..[42,1789+25])
                    Immutable
                    "used_as" (typing/typedecl.ml[42,1789+6]..[42,1789+13])                    core_type (typing/typedecl.ml[42,1789+15]..[42,1789+24])
                      Ptyp_constr "type_expr" (typing/typedecl.ml[42,1789+15]..[42,1789+24])
                      []
                  (typing/typedecl.ml[43,1815+6]..[43,1815+28])
                    Immutable
                    "defined_as" (typing/typedecl.ml[43,1815+6]..[43,1815+16])                    core_type (typing/typedecl.ml[43,1815+18]..[43,1815+27])
                      Ptyp_constr "type_expr" (typing/typedecl.ml[43,1815+18]..[43,1815+27])
                      []
                  (typing/typedecl.ml[44,1844+6]..[44,1844+47])
                    Immutable
                    "expansions" (typing/typedecl.ml[44,1844+6]..[44,1844+16])                    core_type (typing/typedecl.ml[44,1844+18]..[44,1844+46])
                      Ptyp_constr "list" (typing/typedecl.ml[44,1844+42]..[44,1844+46])
                      [
                        core_type (typing/typedecl.ml[44,1844+19]..[44,1844+40])
                          Ptyp_tuple
                          [
                            core_type (typing/typedecl.ml[44,1844+19]..[44,1844+28])
                              Ptyp_constr "type_expr" (typing/typedecl.ml[44,1844+19]..[44,1844+28])
                              []
                            core_type (typing/typedecl.ml[44,1844+31]..[44,1844+40])
                              Ptyp_constr "type_expr" (typing/typedecl.ml[44,1844+31]..[44,1844+40])
                              []
                          ]
                      ]
                ]
                None
              (typing/typedecl.ml[46,1898+2]..[46,1898+23])
                "Null_arity_external" (typing/typedecl.ml[46,1898+4]..[46,1898+23])
                []
                None
              (typing/typedecl.ml[47,1922+2]..[47,1922+27])
                "Missing_native_external" (typing/typedecl.ml[47,1922+4]..[47,1922+27])
                []
                None
              (typing/typedecl.ml[48,1950+2]..[48,1950+52])
                "Unbound_type_var" (typing/typedecl.ml[48,1950+4]..[48,1950+20])
                [
                  core_type (typing/typedecl.ml[48,1950+24]..[48,1950+33])
                    Ptyp_constr "type_expr" (typing/typedecl.ml[48,1950+24]..[48,1950+33])
                    []
                  core_type (typing/typedecl.ml[48,1950+36]..[48,1950+52])
                    Ptyp_constr "type_declaration" (typing/typedecl.ml[48,1950+36]..[48,1950+52])
                    []
                ]
                None
              (typing/typedecl.ml[49,2003+2]..[49,2003+40])
                "Cannot_extend_private_type" (typing/typedecl.ml[49,2003+4]..[49,2003+30])
                [
                  core_type (typing/typedecl.ml[49,2003+34]..[49,2003+40])
                    Ptyp_constr "Path.t" (typing/typedecl.ml[49,2003+34]..[49,2003+40])
                    []
                ]
                None
              (typing/typedecl.ml[50,2044+2]..[50,2044+33])
                "Not_extensible_type" (typing/typedecl.ml[50,2044+4]..[50,2044+23])
                [
                  core_type (typing/typedecl.ml[50,2044+27]..[50,2044+33])
                    Ptyp_constr "Path.t" (typing/typedecl.ml[50,2044+27]..[50,2044+33])
                    []
                ]
                None
              (typing/typedecl.ml[51,2078+2]..[51,2078+68])
                "Extension_mismatch" (typing/typedecl.ml[51,2078+4]..[51,2078+22])
                [
                  core_type (typing/typedecl.ml[51,2078+26]..[51,2078+32])
                    Ptyp_constr "Path.t" (typing/typedecl.ml[51,2078+26]..[51,2078+32])
                    []
                  core_type (typing/typedecl.ml[51,2078+35]..[51,2078+40])
                    Ptyp_constr "Env.t" (typing/typedecl.ml[51,2078+35]..[51,2078+40])
                    []
                  core_type (typing/typedecl.ml[51,2078+43]..[51,2078+68])
                    Ptyp_constr "Includecore.type_mismatch" (typing/typedecl.ml[51,2078+43]..[51,2078+68])
                    []
                ]
                None
              (typing/typedecl.ml[52,2147+2]..[53,2172+56])
                "Rebind_wrong_type" (typing/typedecl.ml[52,2147+4]..[52,2147+21])
                [
                  core_type (typing/typedecl.ml[53,2172+6]..[53,2172+17])
                    Ptyp_constr "Longident.t" (typing/typedecl.ml[53,2172+6]..[53,2172+17])
                    []
                  core_type (typing/typedecl.ml[53,2172+20]..[53,2172+25])
                    Ptyp_constr "Env.t" (typing/typedecl.ml[53,2172+20]..[53,2172+25])
                    []
                  core_type (typing/typedecl.ml[53,2172+28]..[53,2172+56])
                    Ptyp_constr "Errortrace.unification_error" (typing/typedecl.ml[53,2172+28]..[53,2172+56])
                    []
                ]
                None
              (typing/typedecl.ml[54,2229+2]..[54,2229+52])
                "Rebind_mismatch" (typing/typedecl.ml[54,2229+4]..[54,2229+19])
                [
                  core_type (typing/typedecl.ml[54,2229+23]..[54,2229+34])
                    Ptyp_constr "Longident.t" (typing/typedecl.ml[54,2229+23]..[54,2229+34])
                    []
                  core_type (typing/typedecl.ml[54,2229+37]..[54,2229+43])
                    Ptyp_constr "Path.t" (typing/typedecl.ml[54,2229+37]..[54,2229+43])
                    []
                  core_type (typing/typedecl.ml[54,2229+46]..[54,2229+52])
                    Ptyp_constr "Path.t" (typing/typedecl.ml[54,2229+46]..[54,2229+52])
                    []
                ]
                None
              (typing/typedecl.ml[55,2282+2]..[55,2282+33])
                "Rebind_private" (typing/typedecl.ml[55,2282+4]..[55,2282+18])
                [
                  core_type (typing/typedecl.ml[55,2282+22]..[55,2282+33])
                    Ptyp_constr "Longident.t" (typing/typedecl.ml[55,2282+22]..[55,2282+33])
                    []
                ]
                None
              (typing/typedecl.ml[56,2316+2]..[56,2316+39])
                "Variance" (typing/typedecl.ml[56,2316+4]..[56,2316+12])
                [
                  core_type (typing/typedecl.ml[56,2316+16]..[56,2316+39])
                    Ptyp_constr "Typedecl_variance.error" (typing/typedecl.ml[56,2316+16]..[56,2316+39])
                    []
                ]
                None
              (typing/typedecl.ml[57,2356+2]..[57,2356+42])
                "Unavailable_type_constructor" (typing/typedecl.ml[57,2356+4]..[57,2356+32])
                [
                  core_type (typing/typedecl.ml[57,2356+36]..[57,2356+42])
                    Ptyp_constr "Path.t" (typing/typedecl.ml[57,2356+36]..[57,2356+42])
                    []
                ]
                None
              (typing/typedecl.ml[58,2399+2]..[58,2399+61])
                "Unbound_type_var_ext" (typing/typedecl.ml[58,2399+4]..[58,2399+24])
                [
                  core_type (typing/typedecl.ml[58,2399+28]..[58,2399+37])
                    Ptyp_constr "type_expr" (typing/typedecl.ml[58,2399+28]..[58,2399+37])
                    []
                  core_type (typing/typedecl.ml[58,2399+40]..[58,2399+61])
                    Ptyp_constr "extension_constructor" (typing/typedecl.ml[58,2399+40]..[58,2399+61])
                    []
                ]
                None
              (typing/typedecl.ml[59,2461+2]..[59,2461+20])
                "Val_in_structure" (typing/typedecl.ml[59,2461+4]..[59,2461+20])
                []
                None
              (typing/typedecl.ml[60,2482+2]..[60,2482+35])
                "Multiple_native_repr_attributes" (typing/typedecl.ml[60,2482+4]..[60,2482+35])
                []
                None
              (typing/typedecl.ml[61,2518+2]..[61,2518+50])
                "Cannot_unbox_or_untag_type" (typing/typedecl.ml[61,2518+4]..[61,2518+30])
                [
                  core_type (typing/typedecl.ml[61,2518+34]..[61,2518+50])
                    Ptyp_constr "native_repr_kind" (typing/typedecl.ml[61,2518+34]..[61,2518+50])
                    []
                ]
                None
              (typing/typedecl.ml[62,2569+2]..[62,2569+53])
                "Deep_unbox_or_untag_attribute" (typing/typedecl.ml[62,2569+4]..[62,2569+33])
                [
                  core_type (typing/typedecl.ml[62,2569+37]..[62,2569+53])
                    Ptyp_constr "native_repr_kind" (typing/typedecl.ml[62,2569+37]..[62,2569+53])
                    []
                ]
                None
              (typing/typedecl.ml[63,2623+2]..[63,2623+41])
                "Immediacy" (typing/typedecl.ml[63,2623+4]..[63,2623+13])
                [
                  core_type (typing/typedecl.ml[63,2623+17]..[63,2623+41])
                    Ptyp_constr "Typedecl_immediacy.error" (typing/typedecl.ml[63,2623+17]..[63,2623+41])
                    []
                ]
                None
              (typing/typedecl.ml[64,2665+2]..[64,2665+47])
                "Separability" (typing/typedecl.ml[64,2665+4]..[64,2665+16])
                [
                  core_type (typing/typedecl.ml[64,2665+20]..[64,2665+47])
                    Ptyp_constr "Typedecl_separability.error" (typing/typedecl.ml[64,2665+20]..[64,2665+47])
                    []
                ]
                None
              (typing/typedecl.ml[65,2713+2]..[65,2713+35])
                "Bad_unboxed_attribute" (typing/typedecl.ml[65,2713+4]..[65,2713+25])
                [
                  core_type (typing/typedecl.ml[65,2713+29]..[65,2713+35])
                    Ptyp_constr "string" (typing/typedecl.ml[65,2713+29]..[65,2713+35])
                    []
                ]
                None
              (typing/typedecl.ml[66,2749+2]..[66,2749+21])
                "Boxed_and_unboxed" (typing/typedecl.ml[66,2749+4]..[66,2749+21])
                []
                None
              (typing/typedecl.ml[67,2771+2]..[67,2771+15])
                "Nonrec_gadt" (typing/typedecl.ml[67,2771+4]..[67,2771+15])
                []
                None
              (typing/typedecl.ml[68,2787+2]..[68,2787+48])
                "Invalid_private_row_declaration" (typing/typedecl.ml[68,2787+4]..[68,2787+35])
                [
                  core_type (typing/typedecl.ml[68,2787+39]..[68,2787+48])
                    Ptyp_constr "type_expr" (typing/typedecl.ml[68,2787+39]..[68,2787+48])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/typedecl.ml[70,2837+0]..[70,2837+14])
    Pstr_open Fresh
    module_expr (typing/typedecl.ml[70,2837+5]..[70,2837+14])
      Pmod_ident "Typedtree" (typing/typedecl.ml[70,2837+5]..[70,2837+14])
  structure_item (typing/typedecl.ml[72,2853+0]..[72,2853+37])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (typing/typedecl.ml[72,2853+0]..[72,2853+37])
          pext_name = "Error"
          pext_kind =
            Pext_decl
              [
                core_type (typing/typedecl.ml[72,2853+19]..[72,2853+29])
                  Ptyp_constr "Location.t" (typing/typedecl.ml[72,2853+19]..[72,2853+29])
                  []
                core_type (typing/typedecl.ml[72,2853+32]..[72,2853+37])
                  Ptyp_constr "error" (typing/typedecl.ml[72,2853+32]..[72,2853+37])
                  []
              ]
              None
  structure_item (typing/typedecl.ml[74,2892+0]..[81,3229+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[74,2892+4]..[74,2892+31])
          Ppat_var "get_unboxed_from_attributes" (typing/typedecl.ml[74,2892+4]..[74,2892+31])
        expression (typing/typedecl.ml[74,2892+32]..[81,3229+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[74,2892+32]..[74,2892+37])
            Ppat_var "sdecl" (typing/typedecl.ml[74,2892+32]..[74,2892+37])
          expression (typing/typedecl.ml[75,2932+2]..[81,3229+24])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/typedecl.ml[75,2932+6]..[75,2932+13])
                  Ppat_var "unboxed" (typing/typedecl.ml[75,2932+6]..[75,2932+13])
                expression (typing/typedecl.ml[75,2932+16]..[75,2932+69])
                  Pexp_apply
                  expression (typing/typedecl.ml[75,2932+16]..[75,2932+46])
                    Pexp_ident "Builtin_attributes.has_unboxed" (typing/typedecl.ml[75,2932+16]..[75,2932+46])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[75,2932+47]..[75,2932+69])
                        Pexp_field
                        expression (typing/typedecl.ml[75,2932+47]..[75,2932+52])
                          Pexp_ident "sdecl" (typing/typedecl.ml[75,2932+47]..[75,2932+52])
                        "ptype_attributes" (typing/typedecl.ml[75,2932+53]..[75,2932+69])
                  ]
            ]
            expression (typing/typedecl.ml[76,3005+2]..[81,3229+24])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typedecl.ml[76,3005+6]..[76,3005+11])
                    Ppat_var "boxed" (typing/typedecl.ml[76,3005+6]..[76,3005+11])
                  expression (typing/typedecl.ml[76,3005+14]..[76,3005+65])
                    Pexp_apply
                    expression (typing/typedecl.ml[76,3005+14]..[76,3005+42])
                      Pexp_ident "Builtin_attributes.has_boxed" (typing/typedecl.ml[76,3005+14]..[76,3005+42])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[76,3005+43]..[76,3005+65])
                          Pexp_field
                          expression (typing/typedecl.ml[76,3005+43]..[76,3005+48])
                            Pexp_ident "sdecl" (typing/typedecl.ml[76,3005+43]..[76,3005+48])
                          "ptype_attributes" (typing/typedecl.ml[76,3005+49]..[76,3005+65])
                    ]
              ]
              expression (typing/typedecl.ml[77,3074+2]..[81,3229+24])
                Pexp_match
                expression (typing/typedecl.ml[77,3074+8]..[77,3074+22])
                  Pexp_tuple
                  [
                    expression (typing/typedecl.ml[77,3074+8]..[77,3074+13])
                      Pexp_ident "boxed" (typing/typedecl.ml[77,3074+8]..[77,3074+13])
                    expression (typing/typedecl.ml[77,3074+15]..[77,3074+22])
                      Pexp_ident "unboxed" (typing/typedecl.ml[77,3074+15]..[77,3074+22])
                  ]
                [
                  <case>
                    pattern (typing/typedecl.ml[78,3102+4]..[78,3102+14])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[78,3102+4]..[78,3102+8])
                          Ppat_construct "true" (typing/typedecl.ml[78,3102+4]..[78,3102+8])
                          None
                        pattern (typing/typedecl.ml[78,3102+10]..[78,3102+14])
                          Ppat_construct "true" (typing/typedecl.ml[78,3102+10]..[78,3102+14])
                          None
                      ]
                    expression (typing/typedecl.ml[78,3102+18]..[78,3102+67])
                      Pexp_apply
                      expression (typing/typedecl.ml[78,3102+18]..[78,3102+23])
                        Pexp_ident "raise" (typing/typedecl.ml[78,3102+18]..[78,3102+23])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[78,3102+24]..[78,3102+67])
                            Pexp_construct "Error" (typing/typedecl.ml[78,3102+25]..[78,3102+30])
                            Some
                              expression (typing/typedecl.ml[78,3102+30]..[78,3102+66])
                                Pexp_tuple
                                [
                                  expression (typing/typedecl.ml[78,3102+31]..[78,3102+46])
                                    Pexp_field
                                    expression (typing/typedecl.ml[78,3102+31]..[78,3102+36])
                                      Pexp_ident "sdecl" (typing/typedecl.ml[78,3102+31]..[78,3102+36])
                                    "ptype_loc" (typing/typedecl.ml[78,3102+37]..[78,3102+46])
                                  expression (typing/typedecl.ml[78,3102+48]..[78,3102+65])
                                    Pexp_construct "Boxed_and_unboxed" (typing/typedecl.ml[78,3102+48]..[78,3102+65])
                                    None
                                ]
                      ]
                  <case>
                    pattern (typing/typedecl.ml[79,3170+4]..[79,3170+15])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[79,3170+4]..[79,3170+8])
                          Ppat_construct "true" (typing/typedecl.ml[79,3170+4]..[79,3170+8])
                          None
                        pattern (typing/typedecl.ml[79,3170+10]..[79,3170+15])
                          Ppat_construct "false" (typing/typedecl.ml[79,3170+10]..[79,3170+15])
                          None
                      ]
                    expression (typing/typedecl.ml[79,3170+19]..[79,3170+29])
                      Pexp_construct "Some" (typing/typedecl.ml[79,3170+19]..[79,3170+23])
                      Some
                        expression (typing/typedecl.ml[79,3170+24]..[79,3170+29])
                          Pexp_construct "false" (typing/typedecl.ml[79,3170+24]..[79,3170+29])
                          None
                  <case>
                    pattern (typing/typedecl.ml[80,3200+4]..[80,3200+15])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[80,3200+4]..[80,3200+9])
                          Ppat_construct "false" (typing/typedecl.ml[80,3200+4]..[80,3200+9])
                          None
                        pattern (typing/typedecl.ml[80,3200+11]..[80,3200+15])
                          Ppat_construct "true" (typing/typedecl.ml[80,3200+11]..[80,3200+15])
                          None
                      ]
                    expression (typing/typedecl.ml[80,3200+19]..[80,3200+28])
                      Pexp_construct "Some" (typing/typedecl.ml[80,3200+19]..[80,3200+23])
                      Some
                        expression (typing/typedecl.ml[80,3200+24]..[80,3200+28])
                          Pexp_construct "true" (typing/typedecl.ml[80,3200+24]..[80,3200+28])
                          None
                  <case>
                    pattern (typing/typedecl.ml[81,3229+4]..[81,3229+16])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[81,3229+4]..[81,3229+9])
                          Ppat_construct "false" (typing/typedecl.ml[81,3229+4]..[81,3229+9])
                          None
                        pattern (typing/typedecl.ml[81,3229+11]..[81,3229+16])
                          Ppat_construct "false" (typing/typedecl.ml[81,3229+11]..[81,3229+16])
                          None
                      ]
                    expression (typing/typedecl.ml[81,3229+20]..[81,3229+24])
                      Pexp_construct "None" (typing/typedecl.ml[81,3229+20]..[81,3229+24])
                      None
                ]
    ]
  structure_item (typing/typedecl.ml[85,3324+0]..[87,3431+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[85,3324+4]..[85,3324+12])
          Ppat_var "add_type" (typing/typedecl.ml[85,3324+4]..[85,3324+12])
        expression (typing/typedecl.ml[85,3324+13]..[87,3431+47]) ghost
          Pexp_fun
          Labelled "check"
          None
          pattern (typing/typedecl.ml[85,3324+14]..[85,3324+19])
            Ppat_var "check" (typing/typedecl.ml[85,3324+14]..[85,3324+19])
          expression (typing/typedecl.ml[85,3324+20]..[87,3431+47]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[85,3324+20]..[85,3324+22])
              Ppat_var "id" (typing/typedecl.ml[85,3324+20]..[85,3324+22])
            expression (typing/typedecl.ml[85,3324+23]..[87,3431+47]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[85,3324+23]..[85,3324+27])
                Ppat_var "decl" (typing/typedecl.ml[85,3324+23]..[85,3324+27])
              expression (typing/typedecl.ml[85,3324+28]..[87,3431+47]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[85,3324+28]..[85,3324+31])
                  Ppat_var "env" (typing/typedecl.ml[85,3324+28]..[85,3324+31])
                expression (typing/typedecl.ml[86,3358+2]..[87,3431+47])
                  Pexp_apply
                  expression (typing/typedecl.ml[86,3358+2]..[86,3358+34])
                    Pexp_ident "Builtin_attributes.warning_scope" (typing/typedecl.ml[86,3358+2]..[86,3358+34])
                  [
                    <arg>
                    Labelled "ppwarning"
                      expression (typing/typedecl.ml[86,3358+46]..[86,3358+51])
                        Pexp_construct "false" (typing/typedecl.ml[86,3358+46]..[86,3358+51])
                        None
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[86,3358+52]..[86,3358+72])
                        Pexp_field
                        expression (typing/typedecl.ml[86,3358+52]..[86,3358+56])
                          Pexp_ident "decl" (typing/typedecl.ml[86,3358+52]..[86,3358+56])
                        "type_attributes" (typing/typedecl.ml[86,3358+57]..[86,3358+72])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[87,3431+4]..[87,3431+47])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typedecl.ml[87,3431+9]..[87,3431+11])
                          Ppat_construct "()" (typing/typedecl.ml[87,3431+9]..[87,3431+11])
                          None
                        expression (typing/typedecl.ml[87,3431+15]..[87,3431+46])
                          Pexp_apply
                          expression (typing/typedecl.ml[87,3431+15]..[87,3431+27])
                            Pexp_ident "Env.add_type" (typing/typedecl.ml[87,3431+15]..[87,3431+27])
                          [
                            <arg>
                            Labelled "check"
                              expression (typing/typedecl.ml[87,3431+29]..[87,3431+34])
                                Pexp_ident "check" (typing/typedecl.ml[87,3431+29]..[87,3431+34])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[87,3431+35]..[87,3431+37])
                                Pexp_ident "id" (typing/typedecl.ml[87,3431+35]..[87,3431+37])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[87,3431+38]..[87,3431+42])
                                Pexp_ident "decl" (typing/typedecl.ml[87,3431+38]..[87,3431+42])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[87,3431+43]..[87,3431+46])
                                Pexp_ident "env" (typing/typedecl.ml[87,3431+43]..[87,3431+46])
                          ]
                  ]
    ]
  structure_item (typing/typedecl.ml[89,3480+0]..[125,4729+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[89,3480+4]..[89,3480+14])
          Ppat_var "enter_type" (typing/typedecl.ml[89,3480+4]..[89,3480+14])
        expression (typing/typedecl.ml[89,3480+15]..[125,4729+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[89,3480+15]..[89,3480+23])
            Ppat_var "rec_flag" (typing/typedecl.ml[89,3480+15]..[89,3480+23])
          expression (typing/typedecl.ml[89,3480+24]..[125,4729+34]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[89,3480+24]..[89,3480+27])
              Ppat_var "env" (typing/typedecl.ml[89,3480+24]..[89,3480+27])
            expression (typing/typedecl.ml[89,3480+28]..[125,4729+34]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[89,3480+28]..[89,3480+33])
                Ppat_var "sdecl" (typing/typedecl.ml[89,3480+28]..[89,3480+33])
              expression (typing/typedecl.ml[89,3480+34]..[125,4729+34]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[89,3480+34]..[89,3480+43])
                  Ppat_tuple
                  [
                    pattern (typing/typedecl.ml[89,3480+35]..[89,3480+37])
                      Ppat_var "id" (typing/typedecl.ml[89,3480+35]..[89,3480+37])
                    pattern (typing/typedecl.ml[89,3480+39]..[89,3480+42])
                      Ppat_var "uid" (typing/typedecl.ml[89,3480+39]..[89,3480+42])
                  ]
                expression (typing/typedecl.ml[90,3526+2]..[125,4729+34])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typedecl.ml[90,3526+6]..[90,3526+12])
                        Ppat_var "needed" (typing/typedecl.ml[90,3526+6]..[90,3526+12])
                      expression (typing/typedecl.ml[91,3541+4]..[101,3876+32])
                        Pexp_match
                        expression (typing/typedecl.ml[91,3541+10]..[91,3541+18])
                          Pexp_ident "rec_flag" (typing/typedecl.ml[91,3541+10]..[91,3541+18])
                        [
                          <case>
                            pattern (typing/typedecl.ml[92,3565+6]..[92,3565+27])
                              Ppat_construct "Asttypes.Nonrecursive" (typing/typedecl.ml[92,3565+6]..[92,3565+27])
                              None
                            expression (typing/typedecl.ml[93,3596+8]..[100,3834+41])
                              Pexp_sequence
                              expression (typing/typedecl.ml[93,3596+8]..[99,3821+11])
                                Pexp_match
                                expression (typing/typedecl.ml[93,3596+20]..[93,3596+36])
                                  Pexp_field
                                  expression (typing/typedecl.ml[93,3596+20]..[93,3596+25])
                                    Pexp_ident "sdecl" (typing/typedecl.ml[93,3596+20]..[93,3596+25])
                                  "ptype_kind" (typing/typedecl.ml[93,3596+26]..[93,3596+36])
                                [
                                  <case>
                                    pattern (typing/typedecl.ml[94,3638+10]..[94,3638+28])
                                      Ppat_construct "Ptype_variant" (typing/typedecl.ml[94,3638+10]..[94,3638+23])
                                      Some
                                        []
                                        pattern (typing/typedecl.ml[94,3638+24]..[94,3638+28])
                                          Ppat_var "scds" (typing/typedecl.ml[94,3638+24]..[94,3638+28])
                                    expression (typing/typedecl.ml[95,3670+12]..[97,3784+18])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[95,3670+12]..[95,3670+21])
                                        Pexp_ident "List.iter" (typing/typedecl.ml[95,3670+12]..[95,3670+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[95,3670+22]..[96,3703+80])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/typedecl.ml[95,3670+27]..[95,3670+29])
                                              Ppat_var "cd" (typing/typedecl.ml[95,3670+27]..[95,3670+29])
                                            expression (typing/typedecl.ml[96,3703+14]..[96,3703+79])
                                              Pexp_ifthenelse
                                              expression (typing/typedecl.ml[96,3703+17]..[96,3703+35])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[96,3703+28]..[96,3703+30])
                                                  Pexp_ident "<>" (typing/typedecl.ml[96,3703+28]..[96,3703+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[96,3703+17]..[96,3703+27])
                                                      Pexp_field
                                                      expression (typing/typedecl.ml[96,3703+17]..[96,3703+19])
                                                        Pexp_ident "cd" (typing/typedecl.ml[96,3703+17]..[96,3703+19])
                                                      "pcd_res" (typing/typedecl.ml[96,3703+20]..[96,3703+27])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[96,3703+31]..[96,3703+35])
                                                      Pexp_construct "None" (typing/typedecl.ml[96,3703+31]..[96,3703+35])
                                                      None
                                                ]
                                              expression (typing/typedecl.ml[96,3703+41]..[96,3703+79])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[96,3703+41]..[96,3703+46])
                                                  Pexp_ident "raise" (typing/typedecl.ml[96,3703+41]..[96,3703+46])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[96,3703+47]..[96,3703+79])
                                                      Pexp_construct "Error" (typing/typedecl.ml[96,3703+48]..[96,3703+53])
                                                      Some
                                                        expression (typing/typedecl.ml[96,3703+53]..[96,3703+78])
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/typedecl.ml[96,3703+54]..[96,3703+64])
                                                              Pexp_field
                                                              expression (typing/typedecl.ml[96,3703+54]..[96,3703+56])
                                                                Pexp_ident "cd" (typing/typedecl.ml[96,3703+54]..[96,3703+56])
                                                              "pcd_loc" (typing/typedecl.ml[96,3703+57]..[96,3703+64])
                                                            expression (typing/typedecl.ml[96,3703+66]..[96,3703+77])
                                                              Pexp_construct "Nonrec_gadt" (typing/typedecl.ml[96,3703+66]..[96,3703+77])
                                                              None
                                                          ]
                                                ]
                                              None
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[97,3784+14]..[97,3784+18])
                                            Pexp_ident "scds" (typing/typedecl.ml[97,3784+14]..[97,3784+18])
                                      ]
                                  <case>
                                    pattern (typing/typedecl.ml[98,3803+10]..[98,3803+11])
                                      Ppat_any
                                    expression (typing/typedecl.ml[98,3803+15]..[98,3803+17])
                                      Pexp_construct "()" (typing/typedecl.ml[98,3803+15]..[98,3803+17])
                                      None
                                ]
                              expression (typing/typedecl.ml[100,3834+8]..[100,3834+41])
                                Pexp_apply
                                expression (typing/typedecl.ml[100,3834+8]..[100,3834+25])
                                  Pexp_ident "Btype.is_row_name" (typing/typedecl.ml[100,3834+8]..[100,3834+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[100,3834+26]..[100,3834+41])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[100,3834+27]..[100,3834+37])
                                        Pexp_ident "Ident.name" (typing/typedecl.ml[100,3834+27]..[100,3834+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[100,3834+38]..[100,3834+40])
                                            Pexp_ident "id" (typing/typedecl.ml[100,3834+38]..[100,3834+40])
                                      ]
                                ]
                          <case>
                            pattern (typing/typedecl.ml[101,3876+6]..[101,3876+24])
                              Ppat_construct "Asttypes.Recursive" (typing/typedecl.ml[101,3876+6]..[101,3876+24])
                              None
                            expression (typing/typedecl.ml[101,3876+28]..[101,3876+32])
                              Pexp_construct "true" (typing/typedecl.ml[101,3876+28]..[101,3876+32])
                              None
                        ]
                  ]
                  expression (typing/typedecl.ml[103,3914+2]..[125,4729+34])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typedecl.ml[103,3914+6]..[103,3914+11])
                          Ppat_var "arity" (typing/typedecl.ml[103,3914+6]..[103,3914+11])
                        expression (typing/typedecl.ml[103,3914+14]..[103,3914+44])
                          Pexp_apply
                          expression (typing/typedecl.ml[103,3914+14]..[103,3914+25])
                            Pexp_ident "List.length" (typing/typedecl.ml[103,3914+14]..[103,3914+25])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[103,3914+26]..[103,3914+44])
                                Pexp_field
                                expression (typing/typedecl.ml[103,3914+26]..[103,3914+31])
                                  Pexp_ident "sdecl" (typing/typedecl.ml[103,3914+26]..[103,3914+31])
                                "ptype_params" (typing/typedecl.ml[103,3914+32]..[103,3914+44])
                          ]
                    ]
                    expression (typing/typedecl.ml[104,3962+2]..[125,4729+34])
                      Pexp_ifthenelse
                      expression (typing/typedecl.ml[104,3962+5]..[104,3962+15])
                        Pexp_apply
                        expression (typing/typedecl.ml[104,3962+5]..[104,3962+8])
                          Pexp_ident "not" (typing/typedecl.ml[104,3962+5]..[104,3962+8])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[104,3962+9]..[104,3962+15])
                              Pexp_ident "needed" (typing/typedecl.ml[104,3962+9]..[104,3962+15])
                        ]
                      expression (typing/typedecl.ml[104,3962+21]..[104,3962+24])
                        Pexp_ident "env" (typing/typedecl.ml[104,3962+21]..[104,3962+24])
                      Some
                        expression (typing/typedecl.ml[105,3992+2]..[125,4729+34])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typedecl.ml[105,3992+6]..[105,3992+10])
                                Ppat_var "decl" (typing/typedecl.ml[105,3992+6]..[105,3992+10])
                              expression (typing/typedecl.ml[106,4005+4]..[123,4718+5])
                                Pexp_record
                                [
                                  "type_params" (typing/typedecl.ml[106,4005+6]..[106,4005+17])
                                    expression (typing/typedecl.ml[107,4025+8]..[107,4025+65])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[107,4025+8]..[107,4025+16])
                                        Pexp_ident "List.map" (typing/typedecl.ml[107,4025+8]..[107,4025+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[107,4025+17]..[107,4025+46])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/typedecl.ml[107,4025+22]..[107,4025+23])
                                              Ppat_any
                                            expression (typing/typedecl.ml[107,4025+27]..[107,4025+45])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[107,4025+27]..[107,4025+42])
                                                Pexp_ident "Btype.newgenvar" (typing/typedecl.ml[107,4025+27]..[107,4025+42])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[107,4025+43]..[107,4025+45])
                                                    Pexp_construct "()" (typing/typedecl.ml[107,4025+43]..[107,4025+45])
                                                    None
                                              ]
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[107,4025+47]..[107,4025+65])
                                            Pexp_field
                                            expression (typing/typedecl.ml[107,4025+47]..[107,4025+52])
                                              Pexp_ident "sdecl" (typing/typedecl.ml[107,4025+47]..[107,4025+52])
                                            "ptype_params" (typing/typedecl.ml[107,4025+53]..[107,4025+65])
                                      ]
                                  "type_arity" (typing/typedecl.ml[108,4092+6]..[108,4092+16])
                                    expression (typing/typedecl.ml[108,4092+19]..[108,4092+24])
                                      Pexp_ident "arity" (typing/typedecl.ml[108,4092+19]..[108,4092+24])
                                  "type_kind" (typing/typedecl.ml[109,4118+6]..[109,4118+15])
                                    expression (typing/typedecl.ml[109,4118+18]..[109,4118+31])
                                      Pexp_construct "Type_abstract" (typing/typedecl.ml[109,4118+18]..[109,4118+31])
                                      None
                                  "type_private" (typing/typedecl.ml[110,4151+6]..[110,4151+18])
                                    expression (typing/typedecl.ml[110,4151+21]..[110,4151+40])
                                      Pexp_field
                                      expression (typing/typedecl.ml[110,4151+21]..[110,4151+26])
                                        Pexp_ident "sdecl" (typing/typedecl.ml[110,4151+21]..[110,4151+26])
                                      "ptype_private" (typing/typedecl.ml[110,4151+27]..[110,4151+40])
                                  "type_manifest" (typing/typedecl.ml[111,4193+6]..[111,4193+19])
                                    expression (typing/typedecl.ml[112,4215+8]..[113,4274+45])
                                      Pexp_match
                                      expression (typing/typedecl.ml[112,4215+20]..[112,4215+40])
                                        Pexp_field
                                        expression (typing/typedecl.ml[112,4215+20]..[112,4215+25])
                                          Pexp_ident "sdecl" (typing/typedecl.ml[112,4215+20]..[112,4215+25])
                                        "ptype_manifest" (typing/typedecl.ml[112,4215+26]..[112,4215+40])
                                      [
                                        <case>
                                          pattern (typing/typedecl.ml[112,4215+46]..[112,4215+50])
                                            Ppat_construct "None" (typing/typedecl.ml[112,4215+46]..[112,4215+50])
                                            None
                                          expression (typing/typedecl.ml[112,4215+54]..[112,4215+58])
                                            Pexp_construct "None" (typing/typedecl.ml[112,4215+54]..[112,4215+58])
                                            None
                                        <case>
                                          pattern (typing/typedecl.ml[113,4274+10]..[113,4274+16])
                                            Ppat_construct "Some" (typing/typedecl.ml[113,4274+10]..[113,4274+14])
                                            Some
                                              []
                                              pattern (typing/typedecl.ml[113,4274+15]..[113,4274+16])
                                                Ppat_any
                                          expression (typing/typedecl.ml[113,4274+20]..[113,4274+41])
                                            Pexp_construct "Some" (typing/typedecl.ml[113,4274+20]..[113,4274+24])
                                            Some
                                              expression (typing/typedecl.ml[113,4274+24]..[113,4274+41])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[113,4274+25]..[113,4274+37])
                                                  Pexp_ident "Ctype.newvar" (typing/typedecl.ml[113,4274+25]..[113,4274+37])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[113,4274+38]..[113,4274+40])
                                                      Pexp_construct "()" (typing/typedecl.ml[113,4274+38]..[113,4274+40])
                                                      None
                                                ]
                                      ]
                                  "type_variance" (typing/typedecl.ml[114,4321+6]..[114,4321+19])
                                    expression (typing/typedecl.ml[114,4321+22]..[114,4321+72])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[114,4321+22]..[114,4321+48])
                                        Pexp_ident "Variance.unknown_signature" (typing/typedecl.ml[114,4321+22]..[114,4321+48])
                                      [
                                        <arg>
                                        Labelled "injective"
                                          expression (typing/typedecl.ml[114,4321+60]..[114,4321+65])
                                            Pexp_construct "false" (typing/typedecl.ml[114,4321+60]..[114,4321+65])
                                            None
                                        <arg>
                                        Labelled "arity"
                                          expression (typing/typedecl.ml[114,4321+67]..[114,4321+72])
                                            Pexp_ident "arity" (typing/typedecl.ml[114,4321+67]..[114,4321+72])
                                      ]
                                  "type_separability" (typing/typedecl.ml[115,4395+6]..[115,4395+23])
                                    expression (typing/typedecl.ml[115,4395+26]..[115,4395+69])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[115,4395+26]..[115,4395+62])
                                        Pexp_ident "Types.Separability.default_signature" (typing/typedecl.ml[115,4395+26]..[115,4395+62])
                                      [
                                        <arg>
                                        Labelled "arity"
                                          expression (typing/typedecl.ml[115,4395+64]..[115,4395+69])
                                            Pexp_ident "arity" (typing/typedecl.ml[115,4395+64]..[115,4395+69])
                                      ]
                                  "type_is_newtype" (typing/typedecl.ml[116,4466+6]..[116,4466+21])
                                    expression (typing/typedecl.ml[116,4466+24]..[116,4466+29])
                                      Pexp_construct "false" (typing/typedecl.ml[116,4466+24]..[116,4466+29])
                                      None
                                  "type_expansion_scope" (typing/typedecl.ml[117,4497+6]..[117,4497+26])
                                    expression (typing/typedecl.ml[117,4497+29]..[117,4497+47])
                                      Pexp_ident "Btype.lowest_level" (typing/typedecl.ml[117,4497+29]..[117,4497+47])
                                  "type_loc" (typing/typedecl.ml[118,4546+6]..[118,4546+14])
                                    expression (typing/typedecl.ml[118,4546+17]..[118,4546+32])
                                      Pexp_field
                                      expression (typing/typedecl.ml[118,4546+17]..[118,4546+22])
                                        Pexp_ident "sdecl" (typing/typedecl.ml[118,4546+17]..[118,4546+22])
                                      "ptype_loc" (typing/typedecl.ml[118,4546+23]..[118,4546+32])
                                  "type_attributes" (typing/typedecl.ml[119,4580+6]..[119,4580+21])
                                    expression (typing/typedecl.ml[119,4580+24]..[119,4580+46])
                                      Pexp_field
                                      expression (typing/typedecl.ml[119,4580+24]..[119,4580+29])
                                        Pexp_ident "sdecl" (typing/typedecl.ml[119,4580+24]..[119,4580+29])
                                      "ptype_attributes" (typing/typedecl.ml[119,4580+30]..[119,4580+46])
                                  "type_immediate" (typing/typedecl.ml[120,4628+6]..[120,4628+20])
                                    expression (typing/typedecl.ml[120,4628+23]..[120,4628+30])
                                      Pexp_construct "Unknown" (typing/typedecl.ml[120,4628+23]..[120,4628+30])
                                      None
                                  "type_unboxed_default" (typing/typedecl.ml[121,4660+6]..[121,4660+26])
                                    expression (typing/typedecl.ml[121,4660+29]..[121,4660+34])
                                      Pexp_construct "false" (typing/typedecl.ml[121,4660+29]..[121,4660+34])
                                      None
                                  "type_uid" (typing/typedecl.ml[122,4696+6]..[122,4696+14])
                                    expression (typing/typedecl.ml[122,4696+17]..[122,4696+20])
                                      Pexp_ident "uid" (typing/typedecl.ml[122,4696+17]..[122,4696+20])
                                ]
                                None
                          ]
                          expression (typing/typedecl.ml[125,4729+2]..[125,4729+34])
                            Pexp_apply
                            expression (typing/typedecl.ml[125,4729+2]..[125,4729+10])
                              Pexp_ident "add_type" (typing/typedecl.ml[125,4729+2]..[125,4729+10])
                            [
                              <arg>
                              Labelled "check"
                                expression (typing/typedecl.ml[125,4729+18]..[125,4729+22])
                                  Pexp_construct "true" (typing/typedecl.ml[125,4729+18]..[125,4729+22])
                                  None
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[125,4729+23]..[125,4729+25])
                                  Pexp_ident "id" (typing/typedecl.ml[125,4729+23]..[125,4729+25])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[125,4729+26]..[125,4729+30])
                                  Pexp_ident "decl" (typing/typedecl.ml[125,4729+26]..[125,4729+30])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[125,4729+31]..[125,4729+34])
                                  Pexp_ident "env" (typing/typedecl.ml[125,4729+31]..[125,4729+34])
                            ]
    ]
  structure_item (typing/typedecl.ml[127,4765+0]..[135,5100+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[127,4765+4]..[127,4765+15])
          Ppat_var "update_type" (typing/typedecl.ml[127,4765+4]..[127,4765+15])
        expression (typing/typedecl.ml[127,4765+16]..[135,5100+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[127,4765+16]..[127,4765+24])
            Ppat_var "temp_env" (typing/typedecl.ml[127,4765+16]..[127,4765+24])
          expression (typing/typedecl.ml[127,4765+25]..[135,5100+49]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[127,4765+25]..[127,4765+28])
              Ppat_var "env" (typing/typedecl.ml[127,4765+25]..[127,4765+28])
            expression (typing/typedecl.ml[127,4765+29]..[135,5100+49]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[127,4765+29]..[127,4765+31])
                Ppat_var "id" (typing/typedecl.ml[127,4765+29]..[127,4765+31])
              expression (typing/typedecl.ml[127,4765+32]..[135,5100+49]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[127,4765+32]..[127,4765+35])
                  Ppat_var "loc" (typing/typedecl.ml[127,4765+32]..[127,4765+35])
                expression (typing/typedecl.ml[128,4803+2]..[135,5100+49])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typedecl.ml[128,4803+6]..[128,4803+10])
                        Ppat_var "path" (typing/typedecl.ml[128,4803+6]..[128,4803+10])
                      expression (typing/typedecl.ml[128,4803+13]..[128,4803+27])
                        Pexp_construct "Path.Pident" (typing/typedecl.ml[128,4803+13]..[128,4803+24])
                        Some
                          expression (typing/typedecl.ml[128,4803+25]..[128,4803+27])
                            Pexp_ident "id" (typing/typedecl.ml[128,4803+25]..[128,4803+27])
                  ]
                  expression (typing/typedecl.ml[129,4834+2]..[135,5100+49])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typedecl.ml[129,4834+6]..[129,4834+10])
                          Ppat_var "decl" (typing/typedecl.ml[129,4834+6]..[129,4834+10])
                        expression (typing/typedecl.ml[129,4834+13]..[129,4834+40])
                          Pexp_apply
                          expression (typing/typedecl.ml[129,4834+13]..[129,4834+26])
                            Pexp_ident "Env.find_type" (typing/typedecl.ml[129,4834+13]..[129,4834+26])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[129,4834+27]..[129,4834+31])
                                Pexp_ident "path" (typing/typedecl.ml[129,4834+27]..[129,4834+31])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[129,4834+32]..[129,4834+40])
                                Pexp_ident "temp_env" (typing/typedecl.ml[129,4834+32]..[129,4834+40])
                          ]
                    ]
                    expression (typing/typedecl.ml[130,4878+2]..[135,5100+49])
                      Pexp_match
                      expression (typing/typedecl.ml[130,4878+8]..[130,4878+26])
                        Pexp_field
                        expression (typing/typedecl.ml[130,4878+8]..[130,4878+12])
                          Pexp_ident "decl" (typing/typedecl.ml[130,4878+8]..[130,4878+12])
                        "type_manifest" (typing/typedecl.ml[130,4878+13]..[130,4878+26])
                      [
                        <case>
                          pattern (typing/typedecl.ml[130,4878+32]..[130,4878+36])
                            Ppat_construct "None" (typing/typedecl.ml[130,4878+32]..[130,4878+36])
                            None
                          expression (typing/typedecl.ml[130,4878+40]..[130,4878+42])
                            Pexp_construct "()" (typing/typedecl.ml[130,4878+40]..[130,4878+42])
                            None
                        <case>
                          pattern (typing/typedecl.ml[131,4921+4]..[131,4921+11])
                            Ppat_construct "Some" (typing/typedecl.ml[131,4921+4]..[131,4921+8])
                            Some
                              []
                              pattern (typing/typedecl.ml[131,4921+9]..[131,4921+11])
                                Ppat_var "ty" (typing/typedecl.ml[131,4921+9]..[131,4921+11])
                          expression (typing/typedecl.ml[132,4936+6]..[135,5100+49])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typedecl.ml[132,4936+10]..[132,4936+16])
                                  Ppat_var "params" (typing/typedecl.ml[132,4936+10]..[132,4936+16])
                                expression (typing/typedecl.ml[132,4936+19]..[132,4936+71])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[132,4936+19]..[132,4936+27])
                                    Pexp_ident "List.map" (typing/typedecl.ml[132,4936+19]..[132,4936+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[132,4936+28]..[132,4936+54])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/typedecl.ml[132,4936+33]..[132,4936+34])
                                          Ppat_any
                                        expression (typing/typedecl.ml[132,4936+38]..[132,4936+53])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[132,4936+38]..[132,4936+50])
                                            Pexp_ident "Ctype.newvar" (typing/typedecl.ml[132,4936+38]..[132,4936+50])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[132,4936+51]..[132,4936+53])
                                                Pexp_construct "()" (typing/typedecl.ml[132,4936+51]..[132,4936+53])
                                                None
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[132,4936+55]..[132,4936+71])
                                        Pexp_field
                                        expression (typing/typedecl.ml[132,4936+55]..[132,4936+59])
                                          Pexp_ident "decl" (typing/typedecl.ml[132,4936+55]..[132,4936+59])
                                        "type_params" (typing/typedecl.ml[132,4936+60]..[132,4936+71])
                                  ]
                            ]
                            expression (typing/typedecl.ml[133,5011+6]..[135,5100+49])
                              Pexp_try
                              expression (typing/typedecl.ml[133,5011+10]..[133,5011+58])
                                Pexp_apply
                                expression (typing/typedecl.ml[133,5011+10]..[133,5011+21])
                                  Pexp_ident "Ctype.unify" (typing/typedecl.ml[133,5011+10]..[133,5011+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[133,5011+22]..[133,5011+25])
                                      Pexp_ident "env" (typing/typedecl.ml[133,5011+22]..[133,5011+25])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[133,5011+26]..[133,5011+55])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[133,5011+27]..[133,5011+42])
                                        Pexp_ident "Ctype.newconstr" (typing/typedecl.ml[133,5011+27]..[133,5011+42])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[133,5011+43]..[133,5011+47])
                                            Pexp_ident "path" (typing/typedecl.ml[133,5011+43]..[133,5011+47])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[133,5011+48]..[133,5011+54])
                                            Pexp_ident "params" (typing/typedecl.ml[133,5011+48]..[133,5011+54])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[133,5011+56]..[133,5011+58])
                                      Pexp_ident "ty" (typing/typedecl.ml[133,5011+56]..[133,5011+58])
                                ]
                              [
                                <case>
                                  pattern (typing/typedecl.ml[134,5070+11]..[134,5070+26])
                                    Ppat_construct "Ctype.Unify" (typing/typedecl.ml[134,5070+11]..[134,5070+22])
                                    Some
                                      []
                                      pattern (typing/typedecl.ml[134,5070+23]..[134,5070+26])
                                        Ppat_var "err" (typing/typedecl.ml[134,5070+23]..[134,5070+26])
                                  expression (typing/typedecl.ml[135,5100+8]..[135,5100+49])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[135,5100+8]..[135,5100+13])
                                      Pexp_ident "raise" (typing/typedecl.ml[135,5100+8]..[135,5100+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[135,5100+14]..[135,5100+49])
                                          Pexp_construct "Error" (typing/typedecl.ml[135,5100+15]..[135,5100+20])
                                          Some
                                            expression (typing/typedecl.ml[135,5100+20]..[135,5100+48])
                                              Pexp_tuple
                                              [
                                                expression (typing/typedecl.ml[135,5100+21]..[135,5100+24])
                                                  Pexp_ident "loc" (typing/typedecl.ml[135,5100+21]..[135,5100+24])
                                                expression (typing/typedecl.ml[135,5100+26]..[135,5100+47])
                                                  Pexp_construct "Type_clash" (typing/typedecl.ml[135,5100+26]..[135,5100+36])
                                                  Some
                                                    expression (typing/typedecl.ml[135,5100+37]..[135,5100+47])
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typedecl.ml[135,5100+38]..[135,5100+41])
                                                          Pexp_ident "env" (typing/typedecl.ml[135,5100+38]..[135,5100+41])
                                                        expression (typing/typedecl.ml[135,5100+43]..[135,5100+46])
                                                          Pexp_ident "err" (typing/typedecl.ml[135,5100+43]..[135,5100+46])
                                                      ]
                                              ]
                                    ]
                              ]
                      ]
    ]
  structure_item (typing/typedecl.ml[138,5225+0]..[145,5455+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[138,5225+4]..[138,5225+12])
          Ppat_var "is_float" (typing/typedecl.ml[138,5225+4]..[138,5225+12])
        expression (typing/typedecl.ml[138,5225+13]..[145,5455+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[138,5225+13]..[138,5225+16])
            Ppat_var "env" (typing/typedecl.ml[138,5225+13]..[138,5225+16])
          expression (typing/typedecl.ml[138,5225+17]..[145,5455+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[138,5225+17]..[138,5225+19])
              Ppat_var "ty" (typing/typedecl.ml[138,5225+17]..[138,5225+19])
            expression (typing/typedecl.ml[139,5247+2]..[145,5455+14])
              Pexp_match
              expression (typing/typedecl.ml[139,5247+8]..[139,5247+63])
                Pexp_apply
                expression (typing/typedecl.ml[139,5247+8]..[139,5247+56])
                  Pexp_ident "Typedecl_unboxed.get_unboxed_type_representation" (typing/typedecl.ml[139,5247+8]..[139,5247+56])
                [
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[139,5247+57]..[139,5247+60])
                      Pexp_ident "env" (typing/typedecl.ml[139,5247+57]..[139,5247+60])
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[139,5247+61]..[139,5247+63])
                      Pexp_ident "ty" (typing/typedecl.ml[139,5247+61]..[139,5247+63])
                ]
              [
                <case>
                  pattern (typing/typedecl.ml[140,5316+4]..[140,5316+12])
                    Ppat_construct "Some" (typing/typedecl.ml[140,5316+4]..[140,5316+8])
                    Some
                      []
                      pattern (typing/typedecl.ml[140,5316+9]..[140,5316+12])
                        Ppat_var "ty'" (typing/typedecl.ml[140,5316+9]..[140,5316+12])
                  expression (typing/typedecl.ml[141,5332+6]..[144,5445+9])
                    Pexp_match
                    expression (typing/typedecl.ml[141,5332+18]..[141,5332+30])
                      Pexp_apply
                      expression (typing/typedecl.ml[141,5332+18]..[141,5332+26])
                        Pexp_ident "get_desc" (typing/typedecl.ml[141,5332+18]..[141,5332+26])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[141,5332+27]..[141,5332+30])
                            Pexp_ident "ty'" (typing/typedecl.ml[141,5332+27]..[141,5332+30])
                      ]
                    [
                      <case>
                        pattern (typing/typedecl.ml[142,5368+8]..[142,5368+24])
                          Ppat_construct "Tconstr" (typing/typedecl.ml[142,5368+8]..[142,5368+15])
                          Some
                            []
                            pattern (typing/typedecl.ml[142,5368+15]..[142,5368+24])
                              Ppat_tuple
                              [
                                pattern (typing/typedecl.ml[142,5368+16]..[142,5368+17])
                                  Ppat_var "p" (typing/typedecl.ml[142,5368+16]..[142,5368+17])
                                pattern (typing/typedecl.ml[142,5368+19]..[142,5368+20])
                                  Ppat_any
                                pattern (typing/typedecl.ml[142,5368+22]..[142,5368+23])
                                  Ppat_any
                              ]
                        expression (typing/typedecl.ml[142,5368+28]..[142,5368+57])
                          Pexp_apply
                          expression (typing/typedecl.ml[142,5368+28]..[142,5368+37])
                            Pexp_ident "Path.same" (typing/typedecl.ml[142,5368+28]..[142,5368+37])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[142,5368+38]..[142,5368+39])
                                Pexp_ident "p" (typing/typedecl.ml[142,5368+38]..[142,5368+39])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[142,5368+40]..[142,5368+57])
                                Pexp_ident "Predef.path_float" (typing/typedecl.ml[142,5368+40]..[142,5368+57])
                          ]
                      <case>
                        pattern (typing/typedecl.ml[143,5426+8]..[143,5426+9])
                          Ppat_any
                        expression (typing/typedecl.ml[143,5426+13]..[143,5426+18])
                          Pexp_construct "false" (typing/typedecl.ml[143,5426+13]..[143,5426+18])
                          None
                    ]
                <case>
                  pattern (typing/typedecl.ml[145,5455+4]..[145,5455+5])
                    Ppat_any
                  expression (typing/typedecl.ml[145,5455+9]..[145,5455+14])
                    Pexp_construct "false" (typing/typedecl.ml[145,5455+9]..[145,5455+14])
                    None
              ]
    ]
  structure_item (typing/typedecl.ml[148,5535+0]..[163,5949+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[148,5535+4]..[148,5535+17])
          Ppat_var "is_fixed_type" (typing/typedecl.ml[148,5535+4]..[148,5535+17])
        expression (typing/typedecl.ml[148,5535+18]..[163,5949+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[148,5535+18]..[148,5535+20])
            Ppat_var "sd" (typing/typedecl.ml[148,5535+18]..[148,5535+20])
          expression (typing/typedecl.ml[149,5558+2]..[163,5949+21])
            Pexp_let Rec
            [
              <def>
                pattern (typing/typedecl.ml[149,5558+10]..[149,5558+21])
                  Ppat_var "has_row_var" (typing/typedecl.ml[149,5558+10]..[149,5558+21])
                expression (typing/typedecl.ml[149,5558+22]..[156,5786+16]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typedecl.ml[149,5558+22]..[149,5558+25])
                    Ppat_var "sty" (typing/typedecl.ml[149,5558+22]..[149,5558+25])
                  expression (typing/typedecl.ml[150,5586+4]..[156,5786+16])
                    Pexp_match
                    expression (typing/typedecl.ml[150,5586+10]..[150,5586+23])
                      Pexp_field
                      expression (typing/typedecl.ml[150,5586+10]..[150,5586+13])
                        Pexp_ident "sty" (typing/typedecl.ml[150,5586+10]..[150,5586+13])
                      "ptyp_desc" (typing/typedecl.ml[150,5586+14]..[150,5586+23])
                    [
                      <case>
                        pattern (typing/typedecl.ml[151,5615+6]..[151,5615+25])
                          Ppat_construct "Ptyp_alias" (typing/typedecl.ml[151,5615+6]..[151,5615+16])
                          Some
                            []
                            pattern (typing/typedecl.ml[151,5615+17]..[151,5615+25])
                              Ppat_tuple
                              [
                                pattern (typing/typedecl.ml[151,5615+18]..[151,5615+21])
                                  Ppat_var "sty" (typing/typedecl.ml[151,5615+18]..[151,5615+21])
                                pattern (typing/typedecl.ml[151,5615+23]..[151,5615+24])
                                  Ppat_any
                              ]
                        expression (typing/typedecl.ml[151,5615+29]..[151,5615+44])
                          Pexp_apply
                          expression (typing/typedecl.ml[151,5615+29]..[151,5615+40])
                            Pexp_ident "has_row_var" (typing/typedecl.ml[151,5615+29]..[151,5615+40])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[151,5615+41]..[151,5615+44])
                                Pexp_ident "sty" (typing/typedecl.ml[151,5615+41]..[151,5615+44])
                          ]
                      <case>
                        pattern (typing/typedecl.ml[152,5660+6]..[155,5739+38])
                          Ppat_or
                          pattern (typing/typedecl.ml[152,5660+6]..[154,5707+31])
                            Ppat_or
                            pattern (typing/typedecl.ml[152,5660+6]..[153,5679+27])
                              Ppat_or
                              pattern (typing/typedecl.ml[152,5660+6]..[152,5660+18])
                                Ppat_construct "Ptyp_class" (typing/typedecl.ml[152,5660+6]..[152,5660+16])
                                Some
                                  []
                                  pattern (typing/typedecl.ml[152,5660+17]..[152,5660+18])
                                    Ppat_any
                              pattern (typing/typedecl.ml[153,5679+6]..[153,5679+27])
                                Ppat_construct "Ptyp_object" (typing/typedecl.ml[153,5679+6]..[153,5679+17])
                                Some
                                  []
                                  pattern (typing/typedecl.ml[153,5679+18]..[153,5679+27])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typedecl.ml[153,5679+19]..[153,5679+20])
                                        Ppat_any
                                      pattern (typing/typedecl.ml[153,5679+22]..[153,5679+26])
                                        Ppat_construct "Open" (typing/typedecl.ml[153,5679+22]..[153,5679+26])
                                        None
                                    ]
                            pattern (typing/typedecl.ml[154,5707+6]..[154,5707+31])
                              Ppat_construct "Ptyp_variant" (typing/typedecl.ml[154,5707+6]..[154,5707+18])
                              Some
                                []
                                pattern (typing/typedecl.ml[154,5707+19]..[154,5707+31])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typedecl.ml[154,5707+20]..[154,5707+21])
                                      Ppat_any
                                    pattern (typing/typedecl.ml[154,5707+23]..[154,5707+27])
                                      Ppat_construct "Open" (typing/typedecl.ml[154,5707+23]..[154,5707+27])
                                      None
                                    pattern (typing/typedecl.ml[154,5707+29]..[154,5707+30])
                                      Ppat_any
                                  ]
                          pattern (typing/typedecl.ml[155,5739+6]..[155,5739+38])
                            Ppat_construct "Ptyp_variant" (typing/typedecl.ml[155,5739+6]..[155,5739+18])
                            Some
                              []
                              pattern (typing/typedecl.ml[155,5739+19]..[155,5739+38])
                                Ppat_tuple
                                [
                                  pattern (typing/typedecl.ml[155,5739+20]..[155,5739+21])
                                    Ppat_any
                                  pattern (typing/typedecl.ml[155,5739+23]..[155,5739+29])
                                    Ppat_construct "Closed" (typing/typedecl.ml[155,5739+23]..[155,5739+29])
                                    None
                                  pattern (typing/typedecl.ml[155,5739+31]..[155,5739+37])
                                    Ppat_construct "Some" (typing/typedecl.ml[155,5739+31]..[155,5739+35])
                                    Some
                                      []
                                      pattern (typing/typedecl.ml[155,5739+36]..[155,5739+37])
                                        Ppat_any
                                ]
                        expression (typing/typedecl.ml[155,5739+42]..[155,5739+46])
                          Pexp_construct "true" (typing/typedecl.ml[155,5739+42]..[155,5739+46])
                          None
                      <case>
                        pattern (typing/typedecl.ml[156,5786+6]..[156,5786+7])
                          Ppat_any
                        expression (typing/typedecl.ml[156,5786+11]..[156,5786+16])
                          Pexp_construct "false" (typing/typedecl.ml[156,5786+11]..[156,5786+16])
                          None
                    ]
            ]
            expression (typing/typedecl.ml[158,5808+2]..[163,5949+21])
              Pexp_match
              expression (typing/typedecl.ml[158,5808+8]..[158,5808+25])
                Pexp_field
                expression (typing/typedecl.ml[158,5808+8]..[158,5808+10])
                  Pexp_ident "sd" (typing/typedecl.ml[158,5808+8]..[158,5808+10])
                "ptype_manifest" (typing/typedecl.ml[158,5808+11]..[158,5808+25])
              [
                <case>
                  pattern (typing/typedecl.ml[159,5839+4]..[159,5839+8])
                    Ppat_construct "None" (typing/typedecl.ml[159,5839+4]..[159,5839+8])
                    None
                  expression (typing/typedecl.ml[159,5839+12]..[159,5839+17])
                    Pexp_construct "false" (typing/typedecl.ml[159,5839+12]..[159,5839+17])
                    None
                <case>
                  pattern (typing/typedecl.ml[160,5857+4]..[160,5857+12])
                    Ppat_construct "Some" (typing/typedecl.ml[160,5857+4]..[160,5857+8])
                    Some
                      []
                      pattern (typing/typedecl.ml[160,5857+9]..[160,5857+12])
                        Ppat_var "sty" (typing/typedecl.ml[160,5857+9]..[160,5857+12])
                  expression (typing/typedecl.ml[161,5873+6]..[163,5949+21])
                    Pexp_apply
                    expression (typing/typedecl.ml[161,5873+37]..[161,5873+39])
                      Pexp_ident "&&" (typing/typedecl.ml[161,5873+37]..[161,5873+39])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[161,5873+6]..[161,5873+36])
                          Pexp_apply
                          expression (typing/typedecl.ml[161,5873+20]..[161,5873+21])
                            Pexp_ident "=" (typing/typedecl.ml[161,5873+20]..[161,5873+21])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[161,5873+6]..[161,5873+19])
                                Pexp_field
                                expression (typing/typedecl.ml[161,5873+6]..[161,5873+8])
                                  Pexp_ident "sd" (typing/typedecl.ml[161,5873+6]..[161,5873+8])
                                "ptype_kind" (typing/typedecl.ml[161,5873+9]..[161,5873+19])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[161,5873+22]..[161,5873+36])
                                Pexp_construct "Ptype_abstract" (typing/typedecl.ml[161,5873+22]..[161,5873+36])
                                None
                          ]
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[162,5913+6]..[163,5949+21])
                          Pexp_apply
                          expression (typing/typedecl.ml[162,5913+33]..[162,5913+35])
                            Pexp_ident "&&" (typing/typedecl.ml[162,5913+33]..[162,5913+35])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[162,5913+6]..[162,5913+32])
                                Pexp_apply
                                expression (typing/typedecl.ml[162,5913+23]..[162,5913+24])
                                  Pexp_ident "=" (typing/typedecl.ml[162,5913+23]..[162,5913+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[162,5913+6]..[162,5913+22])
                                      Pexp_field
                                      expression (typing/typedecl.ml[162,5913+6]..[162,5913+8])
                                        Pexp_ident "sd" (typing/typedecl.ml[162,5913+6]..[162,5913+8])
                                      "ptype_private" (typing/typedecl.ml[162,5913+9]..[162,5913+22])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[162,5913+25]..[162,5913+32])
                                      Pexp_construct "Private" (typing/typedecl.ml[162,5913+25]..[162,5913+32])
                                      None
                                ]
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[163,5949+6]..[163,5949+21])
                                Pexp_apply
                                expression (typing/typedecl.ml[163,5949+6]..[163,5949+17])
                                  Pexp_ident "has_row_var" (typing/typedecl.ml[163,5949+6]..[163,5949+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[163,5949+18]..[163,5949+21])
                                      Pexp_ident "sty" (typing/typedecl.ml[163,5949+18]..[163,5949+21])
                                ]
                          ]
                    ]
              ]
    ]
  structure_item (typing/typedecl.ml[169,6174+0]..[195,7121+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[169,6174+4]..[169,6174+19])
          Ppat_var "set_private_row" (typing/typedecl.ml[169,6174+4]..[169,6174+19])
        expression (typing/typedecl.ml[169,6174+20]..[195,7121+60]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[169,6174+20]..[169,6174+23])
            Ppat_var "env" (typing/typedecl.ml[169,6174+20]..[169,6174+23])
          expression (typing/typedecl.ml[169,6174+24]..[195,7121+60]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[169,6174+24]..[169,6174+27])
              Ppat_var "loc" (typing/typedecl.ml[169,6174+24]..[169,6174+27])
            expression (typing/typedecl.ml[169,6174+28]..[195,7121+60]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[169,6174+28]..[169,6174+29])
                Ppat_var "p" (typing/typedecl.ml[169,6174+28]..[169,6174+29])
              expression (typing/typedecl.ml[169,6174+30]..[195,7121+60]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[169,6174+30]..[169,6174+34])
                  Ppat_var "decl" (typing/typedecl.ml[169,6174+30]..[169,6174+34])
                expression (typing/typedecl.ml[170,6211+2]..[195,7121+60])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typedecl.ml[170,6211+6]..[170,6211+8])
                        Ppat_var "tm" (typing/typedecl.ml[170,6211+6]..[170,6211+8])
                      expression (typing/typedecl.ml[171,6222+4]..[173,6283+39])
                        Pexp_match
                        expression (typing/typedecl.ml[171,6222+10]..[171,6222+28])
                          Pexp_field
                          expression (typing/typedecl.ml[171,6222+10]..[171,6222+14])
                            Pexp_ident "decl" (typing/typedecl.ml[171,6222+10]..[171,6222+14])
                          "type_manifest" (typing/typedecl.ml[171,6222+15]..[171,6222+28])
                        [
                          <case>
                            pattern (typing/typedecl.ml[172,6256+6]..[172,6256+10])
                              Ppat_construct "None" (typing/typedecl.ml[172,6256+6]..[172,6256+10])
                              None
                            expression (typing/typedecl.ml[172,6256+14]..[172,6256+26])
                              Pexp_assert
                              expression (typing/typedecl.ml[172,6256+21]..[172,6256+26])
                                Pexp_construct "false" (typing/typedecl.ml[172,6256+21]..[172,6256+26])
                                None
                          <case>
                            pattern (typing/typedecl.ml[173,6283+6]..[173,6283+12])
                              Ppat_construct "Some" (typing/typedecl.ml[173,6283+6]..[173,6283+10])
                              Some
                                []
                                pattern (typing/typedecl.ml[173,6283+11]..[173,6283+12])
                                  Ppat_var "t" (typing/typedecl.ml[173,6283+11]..[173,6283+12])
                            expression (typing/typedecl.ml[173,6283+16]..[173,6283+39])
                              Pexp_apply
                              expression (typing/typedecl.ml[173,6283+16]..[173,6283+33])
                                Pexp_ident "Ctype.expand_head" (typing/typedecl.ml[173,6283+16]..[173,6283+33])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[173,6283+34]..[173,6283+37])
                                    Pexp_ident "env" (typing/typedecl.ml[173,6283+34]..[173,6283+37])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[173,6283+38]..[173,6283+39])
                                    Pexp_ident "t" (typing/typedecl.ml[173,6283+38]..[173,6283+39])
                              ]
                        ]
                  ]
                  expression (typing/typedecl.ml[175,6328+2]..[195,7121+60])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typedecl.ml[175,6328+6]..[175,6328+8])
                          Ppat_var "rv" (typing/typedecl.ml[175,6328+6]..[175,6328+8])
                        expression (typing/typedecl.ml[176,6339+4]..[193,7092+23])
                          Pexp_match
                          expression (typing/typedecl.ml[176,6339+10]..[176,6339+21])
                            Pexp_apply
                            expression (typing/typedecl.ml[176,6339+10]..[176,6339+18])
                              Pexp_ident "get_desc" (typing/typedecl.ml[176,6339+10]..[176,6339+18])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[176,6339+19]..[176,6339+21])
                                  Pexp_ident "tm" (typing/typedecl.ml[176,6339+19]..[176,6339+21])
                            ]
                          [
                            <case>
                              pattern (typing/typedecl.ml[177,6366+6]..[177,6366+18])
                                Ppat_construct "Tvariant" (typing/typedecl.ml[177,6366+6]..[177,6366+14])
                                Some
                                  []
                                  pattern (typing/typedecl.ml[177,6366+15]..[177,6366+18])
                                    Ppat_var "row" (typing/typedecl.ml[177,6366+15]..[177,6366+18])
                              expression (typing/typedecl.ml[178,6388+8]..[186,6807+25])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typedecl.ml[178,6388+12]..[178,6388+15])
                                      Ppat_var "row" (typing/typedecl.ml[178,6388+12]..[178,6388+15])
                                    expression (typing/typedecl.ml[178,6388+18]..[178,6388+36])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[178,6388+18]..[178,6388+32])
                                        Pexp_ident "Btype.row_repr" (typing/typedecl.ml[178,6388+18]..[178,6388+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[178,6388+33]..[178,6388+36])
                                            Pexp_ident "row" (typing/typedecl.ml[178,6388+33]..[178,6388+36])
                                      ]
                                ]
                                expression (typing/typedecl.ml[179,6428+8]..[186,6807+25])
                                  Pexp_sequence
                                  expression (typing/typedecl.ml[179,6428+8]..[180,6453+62])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[179,6428+8]..[179,6428+21])
                                      Pexp_ident "set_type_desc" (typing/typedecl.ml[179,6428+8]..[179,6428+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[179,6428+22]..[179,6428+24])
                                          Pexp_ident "tm" (typing/typedecl.ml[179,6428+22]..[179,6428+24])
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[180,6453+10]..[180,6453+62])
                                          Pexp_construct "Tvariant" (typing/typedecl.ml[180,6453+11]..[180,6453+19])
                                          Some
                                            expression (typing/typedecl.ml[180,6453+20]..[180,6453+61])
                                              Pexp_record
                                              [
                                                "row_fixed" (typing/typedecl.ml[180,6453+30]..[180,6453+39])
                                                  expression (typing/typedecl.ml[180,6453+42]..[180,6453+60])
                                                    Pexp_construct "Some" (typing/typedecl.ml[180,6453+42]..[180,6453+46])
                                                    Some
                                                      expression (typing/typedecl.ml[180,6453+47]..[180,6453+60])
                                                        Pexp_construct "Fixed_private" (typing/typedecl.ml[180,6453+47]..[180,6453+60])
                                                        None
                                              ]
                                              Some
                                                expression (typing/typedecl.ml[180,6453+21]..[180,6453+24])
                                                  Pexp_ident "row" (typing/typedecl.ml[180,6453+21]..[180,6453+24])
                                    ]
                                  expression (typing/typedecl.ml[181,6517+8]..[186,6807+25])
                                    Pexp_ifthenelse
                                    expression (typing/typedecl.ml[181,6517+11]..[181,6517+31])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[181,6517+11]..[181,6517+27])
                                        Pexp_ident "Btype.static_row" (typing/typedecl.ml[181,6517+11]..[181,6517+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[181,6517+28]..[181,6517+31])
                                            Pexp_ident "row" (typing/typedecl.ml[181,6517+28]..[181,6517+31])
                                      ]
                                    expression (typing/typedecl.ml[185,6742+10]..[185,6742+64])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[185,6742+10]..[185,6742+15])
                                        Pexp_ident "raise" (typing/typedecl.ml[185,6742+10]..[185,6742+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[185,6742+16]..[185,6742+64])
                                            Pexp_construct "Error" (typing/typedecl.ml[185,6742+17]..[185,6742+22])
                                            Some
                                              expression (typing/typedecl.ml[185,6742+22]..[185,6742+63])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typedecl.ml[185,6742+23]..[185,6742+26])
                                                    Pexp_ident "loc" (typing/typedecl.ml[185,6742+23]..[185,6742+26])
                                                  expression (typing/typedecl.ml[185,6742+28]..[185,6742+62])
                                                    Pexp_construct "Invalid_private_row_declaration" (typing/typedecl.ml[185,6742+28]..[185,6742+59])
                                                    Some
                                                      expression (typing/typedecl.ml[185,6742+60]..[185,6742+62])
                                                        Pexp_ident "tm" (typing/typedecl.ml[185,6742+60]..[185,6742+62])
                                                ]
                                      ]
                                    Some
                                      expression (typing/typedecl.ml[186,6807+13]..[186,6807+25])
                                        Pexp_field
                                        expression (typing/typedecl.ml[186,6807+13]..[186,6807+16])
                                          Pexp_ident "row" (typing/typedecl.ml[186,6807+13]..[186,6807+16])
                                        "row_more" (typing/typedecl.ml[186,6807+17]..[186,6807+25])
                            <case>
                              pattern (typing/typedecl.ml[187,6833+6]..[187,6833+21])
                                Ppat_construct "Tobject" (typing/typedecl.ml[187,6833+6]..[187,6833+13])
                                Some
                                  []
                                  pattern (typing/typedecl.ml[187,6833+14]..[187,6833+21])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typedecl.ml[187,6833+15]..[187,6833+17])
                                        Ppat_var "ty" (typing/typedecl.ml[187,6833+15]..[187,6833+17])
                                      pattern (typing/typedecl.ml[187,6833+19]..[187,6833+20])
                                        Ppat_any
                                    ]
                              expression (typing/typedecl.ml[188,6858+8]..[192,7082+9])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typedecl.ml[188,6858+12]..[188,6858+13])
                                      Ppat_var "r" (typing/typedecl.ml[188,6858+12]..[188,6858+13])
                                    expression (typing/typedecl.ml[188,6858+16]..[188,6858+45])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[188,6858+16]..[188,6858+19])
                                        Pexp_ident "snd" (typing/typedecl.ml[188,6858+16]..[188,6858+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[188,6858+20]..[188,6858+45])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[188,6858+21]..[188,6858+41])
                                              Pexp_ident "Ctype.flatten_fields" (typing/typedecl.ml[188,6858+21]..[188,6858+41])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[188,6858+42]..[188,6858+44])
                                                  Pexp_ident "ty" (typing/typedecl.ml[188,6858+42]..[188,6858+44])
                                            ]
                                      ]
                                ]
                                expression (typing/typedecl.ml[189,6907+8]..[192,7082+9])
                                  Pexp_sequence
                                  expression (typing/typedecl.ml[189,6907+8]..[191,7016+64])
                                    Pexp_ifthenelse
                                    expression (typing/typedecl.ml[189,6907+11]..[189,6907+32])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[189,6907+11]..[189,6907+14])
                                        Pexp_ident "not" (typing/typedecl.ml[189,6907+11]..[189,6907+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[189,6907+15]..[189,6907+32])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[189,6907+16]..[189,6907+29])
                                              Pexp_ident "Btype.is_Tvar" (typing/typedecl.ml[189,6907+16]..[189,6907+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[189,6907+30]..[189,6907+31])
                                                  Pexp_ident "r" (typing/typedecl.ml[189,6907+30]..[189,6907+31])
                                            ]
                                      ]
                                    expression (typing/typedecl.ml[191,7016+10]..[191,7016+64])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[191,7016+10]..[191,7016+15])
                                        Pexp_ident "raise" (typing/typedecl.ml[191,7016+10]..[191,7016+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[191,7016+16]..[191,7016+64])
                                            Pexp_construct "Error" (typing/typedecl.ml[191,7016+17]..[191,7016+22])
                                            Some
                                              expression (typing/typedecl.ml[191,7016+22]..[191,7016+63])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typedecl.ml[191,7016+23]..[191,7016+26])
                                                    Pexp_ident "loc" (typing/typedecl.ml[191,7016+23]..[191,7016+26])
                                                  expression (typing/typedecl.ml[191,7016+28]..[191,7016+62])
                                                    Pexp_construct "Invalid_private_row_declaration" (typing/typedecl.ml[191,7016+28]..[191,7016+59])
                                                    Some
                                                      expression (typing/typedecl.ml[191,7016+60]..[191,7016+62])
                                                        Pexp_ident "tm" (typing/typedecl.ml[191,7016+60]..[191,7016+62])
                                                ]
                                      ]
                                    None
                                  expression (typing/typedecl.ml[192,7082+8]..[192,7082+9])
                                    Pexp_ident "r" (typing/typedecl.ml[192,7082+8]..[192,7082+9])
                            <case>
                              pattern (typing/typedecl.ml[193,7092+6]..[193,7092+7])
                                Ppat_any
                              expression (typing/typedecl.ml[193,7092+11]..[193,7092+23])
                                Pexp_assert
                                expression (typing/typedecl.ml[193,7092+18]..[193,7092+23])
                                  Pexp_construct "false" (typing/typedecl.ml[193,7092+18]..[193,7092+23])
                                  None
                          ]
                    ]
                    expression (typing/typedecl.ml[195,7121+2]..[195,7121+60])
                      Pexp_apply
                      expression (typing/typedecl.ml[195,7121+2]..[195,7121+15])
                        Pexp_ident "set_type_desc" (typing/typedecl.ml[195,7121+2]..[195,7121+15])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[195,7121+16]..[195,7121+18])
                            Pexp_ident "rv" (typing/typedecl.ml[195,7121+16]..[195,7121+18])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[195,7121+19]..[195,7121+60])
                            Pexp_construct "Tconstr" (typing/typedecl.ml[195,7121+20]..[195,7121+27])
                            Some
                              expression (typing/typedecl.ml[195,7121+28]..[195,7121+59])
                                Pexp_tuple
                                [
                                  expression (typing/typedecl.ml[195,7121+29]..[195,7121+30])
                                    Pexp_ident "p" (typing/typedecl.ml[195,7121+29]..[195,7121+30])
                                  expression (typing/typedecl.ml[195,7121+32]..[195,7121+48])
                                    Pexp_field
                                    expression (typing/typedecl.ml[195,7121+32]..[195,7121+36])
                                      Pexp_ident "decl" (typing/typedecl.ml[195,7121+32]..[195,7121+36])
                                    "type_params" (typing/typedecl.ml[195,7121+37]..[195,7121+48])
                                  expression (typing/typedecl.ml[195,7121+50]..[195,7121+58])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[195,7121+50]..[195,7121+53])
                                      Pexp_ident "ref" (typing/typedecl.ml[195,7121+50]..[195,7121+53])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[195,7121+54]..[195,7121+58])
                                          Pexp_construct "Mnil" (typing/typedecl.ml[195,7121+54]..[195,7121+58])
                                          None
                                    ]
                                ]
                      ]
    ]
  structure_item (typing/typedecl.ml[199,7221+0]..[206,7407+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[199,7221+4]..[199,7221+15])
          Ppat_var "make_params" (typing/typedecl.ml[199,7221+4]..[199,7221+15])
        expression (typing/typedecl.ml[199,7221+16]..[206,7407+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[199,7221+16]..[199,7221+19])
            Ppat_var "env" (typing/typedecl.ml[199,7221+16]..[199,7221+19])
          expression (typing/typedecl.ml[199,7221+20]..[206,7407+30]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[199,7221+20]..[199,7221+26])
              Ppat_var "params" (typing/typedecl.ml[199,7221+20]..[199,7221+26])
            expression (typing/typedecl.ml[200,7250+2]..[206,7407+30])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typedecl.ml[200,7250+6]..[200,7250+16])
                    Ppat_var "make_param" (typing/typedecl.ml[200,7250+6]..[200,7250+16])
                  expression (typing/typedecl.ml[200,7250+17]..[204,7349+52]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typedecl.ml[200,7250+17]..[200,7250+25])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[200,7250+18]..[200,7250+21])
                          Ppat_var "sty" (typing/typedecl.ml[200,7250+18]..[200,7250+21])
                        pattern (typing/typedecl.ml[200,7250+23]..[200,7250+24])
                          Ppat_var "v" (typing/typedecl.ml[200,7250+23]..[200,7250+24])
                      ]
                    expression (typing/typedecl.ml[201,7278+4]..[204,7349+52])
                      Pexp_try
                      expression (typing/typedecl.ml[202,7286+6]..[202,7286+36])
                        Pexp_tuple
                        [
                          expression (typing/typedecl.ml[202,7286+7]..[202,7286+32])
                            Pexp_apply
                            expression (typing/typedecl.ml[202,7286+7]..[202,7286+24])
                              Pexp_ident "transl_type_param" (typing/typedecl.ml[202,7286+7]..[202,7286+24])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[202,7286+25]..[202,7286+28])
                                  Pexp_ident "env" (typing/typedecl.ml[202,7286+25]..[202,7286+28])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[202,7286+29]..[202,7286+32])
                                  Pexp_ident "sty" (typing/typedecl.ml[202,7286+29]..[202,7286+32])
                            ]
                          expression (typing/typedecl.ml[202,7286+34]..[202,7286+35])
                            Pexp_ident "v" (typing/typedecl.ml[202,7286+34]..[202,7286+35])
                        ]
                      [
                        <case>
                          pattern (typing/typedecl.ml[203,7323+9]..[203,7323+22])
                            Ppat_construct "Already_bound" (typing/typedecl.ml[203,7323+9]..[203,7323+22])
                            None
                          expression (typing/typedecl.ml[204,7349+6]..[204,7349+52])
                            Pexp_apply
                            expression (typing/typedecl.ml[204,7349+6]..[204,7349+11])
                              Pexp_ident "raise" (typing/typedecl.ml[204,7349+6]..[204,7349+11])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[204,7349+11]..[204,7349+52])
                                  Pexp_construct "Error" (typing/typedecl.ml[204,7349+12]..[204,7349+17])
                                  Some
                                    expression (typing/typedecl.ml[204,7349+17]..[204,7349+51])
                                      Pexp_tuple
                                      [
                                        expression (typing/typedecl.ml[204,7349+18]..[204,7349+30])
                                          Pexp_field
                                          expression (typing/typedecl.ml[204,7349+18]..[204,7349+21])
                                            Pexp_ident "sty" (typing/typedecl.ml[204,7349+18]..[204,7349+21])
                                          "ptyp_loc" (typing/typedecl.ml[204,7349+22]..[204,7349+30])
                                        expression (typing/typedecl.ml[204,7349+32]..[204,7349+50])
                                          Pexp_construct "Repeated_parameter" (typing/typedecl.ml[204,7349+32]..[204,7349+50])
                                          None
                                      ]
                            ]
                      ]
              ]
              expression (typing/typedecl.ml[206,7407+4]..[206,7407+30])
                Pexp_apply
                expression (typing/typedecl.ml[206,7407+4]..[206,7407+12])
                  Pexp_ident "List.map" (typing/typedecl.ml[206,7407+4]..[206,7407+12])
                [
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[206,7407+13]..[206,7407+23])
                      Pexp_ident "make_param" (typing/typedecl.ml[206,7407+13]..[206,7407+23])
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[206,7407+24]..[206,7407+30])
                      Pexp_ident "params" (typing/typedecl.ml[206,7407+24]..[206,7407+30])
                ]
    ]
  structure_item (typing/typedecl.ml[208,7439+0]..[243,8663+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[208,7439+4]..[208,7439+17])
          Ppat_var "transl_labels" (typing/typedecl.ml[208,7439+4]..[208,7439+17])
        expression (typing/typedecl.ml[208,7439+18]..[243,8663+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[208,7439+18]..[208,7439+21])
            Ppat_var "env" (typing/typedecl.ml[208,7439+18]..[208,7439+21])
          expression (typing/typedecl.ml[208,7439+22]..[243,8663+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[208,7439+22]..[208,7439+29])
              Ppat_var "univars" (typing/typedecl.ml[208,7439+22]..[208,7439+29])
            expression (typing/typedecl.ml[208,7439+30]..[243,8663+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[208,7439+30]..[208,7439+36])
                Ppat_var "closed" (typing/typedecl.ml[208,7439+30]..[208,7439+36])
              expression (typing/typedecl.ml[208,7439+37]..[243,8663+13]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[208,7439+37]..[208,7439+41])
                  Ppat_var "lbls" (typing/typedecl.ml[208,7439+37]..[208,7439+41])
                expression (typing/typedecl.ml[209,7483+2]..[243,8663+13])
                  Pexp_sequence
                  expression (typing/typedecl.ml[209,7483+2]..[209,7483+21])
                    Pexp_assert
                    expression (typing/typedecl.ml[209,7483+9]..[209,7483+21])
                      Pexp_apply
                      expression (typing/typedecl.ml[209,7483+15]..[209,7483+17])
                        Pexp_ident "<>" (typing/typedecl.ml[209,7483+15]..[209,7483+17])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[209,7483+10]..[209,7483+14])
                            Pexp_ident "lbls" (typing/typedecl.ml[209,7483+10]..[209,7483+14])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[209,7483+18]..[209,7483+20])
                            Pexp_construct "[]" (typing/typedecl.ml[209,7483+18]..[209,7483+20])
                            None
                      ]
                  expression (typing/typedecl.ml[210,7506+2]..[243,8663+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typedecl.ml[210,7506+6]..[210,7506+16])
                          Ppat_var "all_labels" (typing/typedecl.ml[210,7506+6]..[210,7506+16])
                        expression (typing/typedecl.ml[210,7506+19]..[210,7506+39])
                          Pexp_apply
                          expression (typing/typedecl.ml[210,7506+19]..[210,7506+22])
                            Pexp_ident "ref" (typing/typedecl.ml[210,7506+19]..[210,7506+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[210,7506+23]..[210,7506+39])
                                Pexp_ident "String.Set.empty" (typing/typedecl.ml[210,7506+23]..[210,7506+39])
                          ]
                    ]
                    expression (typing/typedecl.ml[211,7549+2]..[243,8663+13])
                      Pexp_sequence
                      expression (typing/typedecl.ml[211,7549+2]..[216,7753+8])
                        Pexp_apply
                        expression (typing/typedecl.ml[211,7549+2]..[211,7549+11])
                          Pexp_ident "List.iter" (typing/typedecl.ml[211,7549+2]..[211,7549+11])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[212,7561+4]..[215,7699+53])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typedecl.ml[212,7561+9]..[212,7561+37])
                                Ppat_record Closed
                                [
                                  "pld_name" (typing/typedecl.ml[212,7561+10]..[212,7561+18])
                                    pattern (typing/typedecl.ml[212,7561+21]..[212,7561+36])
                                      Ppat_record Closed
                                      [
                                        "txt" (typing/typedecl.ml[212,7561+22]..[212,7561+25])
                                          pattern (typing/typedecl.ml[212,7561+26]..[212,7561+30])
                                            Ppat_var "name" (typing/typedecl.ml[212,7561+26]..[212,7561+30])
                                        "loc" (typing/typedecl.ml[212,7561+32]..[212,7561+35]) ghost
                                          pattern (typing/typedecl.ml[212,7561+32]..[212,7561+35])
                                            Ppat_var "loc" (typing/typedecl.ml[212,7561+32]..[212,7561+35])
                                      ]
                                ]
                              expression (typing/typedecl.ml[213,7602+7]..[215,7699+52])
                                Pexp_sequence
                                expression (typing/typedecl.ml[213,7602+7]..[214,7649+48])
                                  Pexp_ifthenelse
                                  expression (typing/typedecl.ml[213,7602+10]..[213,7602+41])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[213,7602+10]..[213,7602+24])
                                      Pexp_ident "String.Set.mem" (typing/typedecl.ml[213,7602+10]..[213,7602+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[213,7602+25]..[213,7602+29])
                                          Pexp_ident "name" (typing/typedecl.ml[213,7602+25]..[213,7602+29])
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[213,7602+30]..[213,7602+41])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[213,7602+30]..[213,7602+31])
                                            Pexp_ident "!" (typing/typedecl.ml[213,7602+30]..[213,7602+31])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[213,7602+31]..[213,7602+41])
                                                Pexp_ident "all_labels" (typing/typedecl.ml[213,7602+31]..[213,7602+41])
                                          ]
                                    ]
                                  expression (typing/typedecl.ml[214,7649+9]..[214,7649+48])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[214,7649+9]..[214,7649+14])
                                      Pexp_ident "raise" (typing/typedecl.ml[214,7649+9]..[214,7649+14])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[214,7649+14]..[214,7649+48])
                                          Pexp_construct "Error" (typing/typedecl.ml[214,7649+15]..[214,7649+20])
                                          Some
                                            expression (typing/typedecl.ml[214,7649+20]..[214,7649+47])
                                              Pexp_tuple
                                              [
                                                expression (typing/typedecl.ml[214,7649+21]..[214,7649+24])
                                                  Pexp_ident "loc" (typing/typedecl.ml[214,7649+21]..[214,7649+24])
                                                expression (typing/typedecl.ml[214,7649+26]..[214,7649+46])
                                                  Pexp_construct "Duplicate_label" (typing/typedecl.ml[214,7649+26]..[214,7649+41])
                                                  Some
                                                    expression (typing/typedecl.ml[214,7649+42]..[214,7649+46])
                                                      Pexp_ident "name" (typing/typedecl.ml[214,7649+42]..[214,7649+46])
                                              ]
                                    ]
                                  None
                                expression (typing/typedecl.ml[215,7699+7]..[215,7699+52])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[215,7699+18]..[215,7699+20])
                                    Pexp_ident ":=" (typing/typedecl.ml[215,7699+18]..[215,7699+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[215,7699+7]..[215,7699+17])
                                        Pexp_ident "all_labels" (typing/typedecl.ml[215,7699+7]..[215,7699+17])
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[215,7699+21]..[215,7699+52])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[215,7699+21]..[215,7699+35])
                                          Pexp_ident "String.Set.add" (typing/typedecl.ml[215,7699+21]..[215,7699+35])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[215,7699+36]..[215,7699+40])
                                              Pexp_ident "name" (typing/typedecl.ml[215,7699+36]..[215,7699+40])
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[215,7699+41]..[215,7699+52])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[215,7699+41]..[215,7699+42])
                                                Pexp_ident "!" (typing/typedecl.ml[215,7699+41]..[215,7699+42])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[215,7699+42]..[215,7699+52])
                                                    Pexp_ident "all_labels" (typing/typedecl.ml[215,7699+42]..[215,7699+52])
                                              ]
                                        ]
                                  ]
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[216,7753+4]..[216,7753+8])
                              Pexp_ident "lbls" (typing/typedecl.ml[216,7753+4]..[216,7753+8])
                        ]
                      expression (typing/typedecl.ml[217,7763+2]..[243,8663+13])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typedecl.ml[217,7763+6]..[217,7763+8])
                              Ppat_var "mk" (typing/typedecl.ml[217,7763+6]..[217,7763+8])
                            expression (typing/typedecl.ml[217,7763+9]..[226,8193+7]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typedecl.ml[217,7763+9]..[218,7829+31])
                                Ppat_record Closed
                                [
                                  "pld_name" (typing/typedecl.ml[217,7763+10]..[217,7763+18])
                                    pattern (typing/typedecl.ml[217,7763+19]..[217,7763+23])
                                      Ppat_var "name" (typing/typedecl.ml[217,7763+19]..[217,7763+23])
                                  "pld_mutable" (typing/typedecl.ml[217,7763+24]..[217,7763+35])
                                    pattern (typing/typedecl.ml[217,7763+36]..[217,7763+39])
                                      Ppat_var "mut" (typing/typedecl.ml[217,7763+36]..[217,7763+39])
                                  "pld_type" (typing/typedecl.ml[217,7763+40]..[217,7763+48])
                                    pattern (typing/typedecl.ml[217,7763+49]..[217,7763+52])
                                      Ppat_var "arg" (typing/typedecl.ml[217,7763+49]..[217,7763+52])
                                  "pld_loc" (typing/typedecl.ml[217,7763+53]..[217,7763+60])
                                    pattern (typing/typedecl.ml[217,7763+61]..[217,7763+64])
                                      Ppat_var "loc" (typing/typedecl.ml[217,7763+61]..[217,7763+64])
                                  "pld_attributes" (typing/typedecl.ml[218,7829+10]..[218,7829+24])
                                    pattern (typing/typedecl.ml[218,7829+25]..[218,7829+30])
                                      Ppat_var "attrs" (typing/typedecl.ml[218,7829+25]..[218,7829+30])
                                ]
                              expression (typing/typedecl.ml[219,7863+4]..[226,8193+7])
                                Pexp_apply
                                expression (typing/typedecl.ml[219,7863+4]..[219,7863+36])
                                  Pexp_ident "Builtin_attributes.warning_scope" (typing/typedecl.ml[219,7863+4]..[219,7863+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[219,7863+37]..[219,7863+42])
                                      Pexp_ident "attrs" (typing/typedecl.ml[219,7863+37]..[219,7863+42])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[220,7906+6]..[226,8193+7])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/typedecl.ml[220,7906+11]..[220,7906+13])
                                        Ppat_construct "()" (typing/typedecl.ml[220,7906+11]..[220,7906+13])
                                        None
                                      expression (typing/typedecl.ml[221,7923+9]..[225,8131+61])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typedecl.ml[221,7923+13]..[221,7923+16])
                                              Ppat_var "arg" (typing/typedecl.ml[221,7923+13]..[221,7923+16])
                                            expression (typing/typedecl.ml[221,7923+19]..[221,7923+48])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[221,7923+19]..[221,7923+44])
                                                Pexp_ident "Ast_helper.Typ.force_poly" (typing/typedecl.ml[221,7923+19]..[221,7923+44])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[221,7923+45]..[221,7923+48])
                                                    Pexp_ident "arg" (typing/typedecl.ml[221,7923+45]..[221,7923+48])
                                              ]
                                        ]
                                        expression (typing/typedecl.ml[222,7975+9]..[225,8131+61])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typedecl.ml[222,7975+13]..[222,7975+16])
                                                Ppat_var "cty" (typing/typedecl.ml[222,7975+13]..[222,7975+16])
                                              expression (typing/typedecl.ml[222,7975+19]..[222,7975+61])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[222,7975+19]..[222,7975+37])
                                                  Pexp_ident "transl_simple_type" (typing/typedecl.ml[222,7975+19]..[222,7975+37])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[222,7975+38]..[222,7975+41])
                                                      Pexp_ident "env" (typing/typedecl.ml[222,7975+38]..[222,7975+41])
                                                  <arg>
                                                  Optional "univars"
                                                    expression (typing/typedecl.ml[222,7975+43]..[222,7975+50])
                                                      Pexp_ident "univars" (typing/typedecl.ml[222,7975+43]..[222,7975+50])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[222,7975+51]..[222,7975+57])
                                                      Pexp_ident "closed" (typing/typedecl.ml[222,7975+51]..[222,7975+57])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[222,7975+58]..[222,7975+61])
                                                      Pexp_ident "arg" (typing/typedecl.ml[222,7975+58]..[222,7975+61])
                                                ]
                                          ]
                                          expression (typing/typedecl.ml[223,8040+9]..[225,8131+61])
                                            Pexp_record
                                            [
                                              "ld_id" (typing/typedecl.ml[223,8040+10]..[223,8040+15])
                                                expression (typing/typedecl.ml[223,8040+18]..[223,8040+45])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[223,8040+18]..[223,8040+36])
                                                    Pexp_ident "Ident.create_local" (typing/typedecl.ml[223,8040+18]..[223,8040+36])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[223,8040+37]..[223,8040+45])
                                                        Pexp_field
                                                        expression (typing/typedecl.ml[223,8040+37]..[223,8040+41])
                                                          Pexp_ident "name" (typing/typedecl.ml[223,8040+37]..[223,8040+41])
                                                        "txt" (typing/typedecl.ml[223,8040+42]..[223,8040+45])
                                                  ]
                                              "ld_name" (typing/typedecl.ml[224,8087+10]..[224,8087+17])
                                                expression (typing/typedecl.ml[224,8087+20]..[224,8087+24])
                                                  Pexp_ident "name" (typing/typedecl.ml[224,8087+20]..[224,8087+24])
                                              "ld_mutable" (typing/typedecl.ml[224,8087+26]..[224,8087+36])
                                                expression (typing/typedecl.ml[224,8087+39]..[224,8087+42])
                                                  Pexp_ident "mut" (typing/typedecl.ml[224,8087+39]..[224,8087+42])
                                              "ld_type" (typing/typedecl.ml[225,8131+10]..[225,8131+17])
                                                expression (typing/typedecl.ml[225,8131+20]..[225,8131+23])
                                                  Pexp_ident "cty" (typing/typedecl.ml[225,8131+20]..[225,8131+23])
                                              "ld_loc" (typing/typedecl.ml[225,8131+25]..[225,8131+31])
                                                expression (typing/typedecl.ml[225,8131+34]..[225,8131+37])
                                                  Pexp_ident "loc" (typing/typedecl.ml[225,8131+34]..[225,8131+37])
                                              "ld_attributes" (typing/typedecl.ml[225,8131+39]..[225,8131+52])
                                                expression (typing/typedecl.ml[225,8131+55]..[225,8131+60])
                                                  Pexp_ident "attrs" (typing/typedecl.ml[225,8131+55]..[225,8131+60])
                                            ]
                                            None
                                ]
                        ]
                        expression (typing/typedecl.ml[228,8206+2]..[243,8663+13])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typedecl.ml[228,8206+6]..[228,8206+10])
                                Ppat_var "lbls" (typing/typedecl.ml[228,8206+6]..[228,8206+10])
                              expression (typing/typedecl.ml[228,8206+13]..[228,8206+29])
                                Pexp_apply
                                expression (typing/typedecl.ml[228,8206+13]..[228,8206+21])
                                  Pexp_ident "List.map" (typing/typedecl.ml[228,8206+13]..[228,8206+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[228,8206+22]..[228,8206+24])
                                      Pexp_ident "mk" (typing/typedecl.ml[228,8206+22]..[228,8206+24])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[228,8206+25]..[228,8206+29])
                                      Pexp_ident "lbls" (typing/typedecl.ml[228,8206+25]..[228,8206+29])
                                ]
                          ]
                          expression (typing/typedecl.ml[229,8239+2]..[243,8663+13])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typedecl.ml[229,8239+6]..[229,8239+11])
                                  Ppat_var "lbls'" (typing/typedecl.ml[229,8239+6]..[229,8239+11])
                                expression (typing/typedecl.ml[230,8253+4]..[242,8649+10])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[230,8253+4]..[230,8253+12])
                                    Pexp_ident "List.map" (typing/typedecl.ml[230,8253+4]..[230,8253+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[231,8266+6]..[241,8641+7])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/typedecl.ml[231,8266+11]..[231,8266+13])
                                          Ppat_var "ld" (typing/typedecl.ml[231,8266+11]..[231,8266+13])
                                        expression (typing/typedecl.ml[232,8283+9]..[240,8630+10])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typedecl.ml[232,8283+13]..[232,8283+15])
                                                Ppat_var "ty" (typing/typedecl.ml[232,8283+13]..[232,8283+15])
                                              expression (typing/typedecl.ml[232,8283+18]..[232,8283+38])
                                                Pexp_field
                                                expression (typing/typedecl.ml[232,8283+18]..[232,8283+28])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[232,8283+18]..[232,8283+20])
                                                    Pexp_ident "ld" (typing/typedecl.ml[232,8283+18]..[232,8283+20])
                                                  "ld_type" (typing/typedecl.ml[232,8283+21]..[232,8283+28])
                                                "ctyp_type" (typing/typedecl.ml[232,8283+29]..[232,8283+38])
                                          ]
                                          expression (typing/typedecl.ml[233,8325+9]..[240,8630+10])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typedecl.ml[233,8325+13]..[233,8325+15])
                                                  Ppat_var "ty" (typing/typedecl.ml[233,8325+13]..[233,8325+15])
                                                expression (typing/typedecl.ml[233,8325+18]..[233,8325+67])
                                                  Pexp_match
                                                  expression (typing/typedecl.ml[233,8325+24]..[233,8325+35])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[233,8325+24]..[233,8325+32])
                                                      Pexp_ident "get_desc" (typing/typedecl.ml[233,8325+24]..[233,8325+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[233,8325+33]..[233,8325+35])
                                                          Pexp_ident "ty" (typing/typedecl.ml[233,8325+33]..[233,8325+35])
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (typing/typedecl.ml[233,8325+41]..[233,8325+52])
                                                        Ppat_construct "Tpoly" (typing/typedecl.ml[233,8325+41]..[233,8325+46])
                                                        Some
                                                          []
                                                          pattern (typing/typedecl.ml[233,8325+46]..[233,8325+52])
                                                            Ppat_tuple
                                                            [
                                                              pattern (typing/typedecl.ml[233,8325+47]..[233,8325+48])
                                                                Ppat_var "t" (typing/typedecl.ml[233,8325+47]..[233,8325+48])
                                                              pattern (typing/typedecl.ml[233,8325+49]..[233,8325+51])
                                                                Ppat_construct "[]" (typing/typedecl.ml[233,8325+49]..[233,8325+51])
                                                                None
                                                            ]
                                                      expression (typing/typedecl.ml[233,8325+56]..[233,8325+57])
                                                        Pexp_ident "t" (typing/typedecl.ml[233,8325+56]..[233,8325+57])
                                                    <case>
                                                      pattern (typing/typedecl.ml[233,8325+60]..[233,8325+61])
                                                        Ppat_any
                                                      expression (typing/typedecl.ml[233,8325+65]..[233,8325+67])
                                                        Pexp_ident "ty" (typing/typedecl.ml[233,8325+65]..[233,8325+67])
                                                  ]
                                            ]
                                            expression (typing/typedecl.ml[234,8396+9]..[240,8630+10])
                                              Pexp_record
                                              [
                                                "Types.ld_id" (typing/typedecl.ml[234,8396+10]..[234,8396+21])
                                                  expression (typing/typedecl.ml[234,8396+24]..[234,8396+32])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[234,8396+24]..[234,8396+26])
                                                      Pexp_ident "ld" (typing/typedecl.ml[234,8396+24]..[234,8396+26])
                                                    "ld_id" (typing/typedecl.ml[234,8396+27]..[234,8396+32])
                                                "ld_mutable" (typing/typedecl.ml[235,8430+10]..[235,8430+20])
                                                  expression (typing/typedecl.ml[235,8430+23]..[235,8430+36])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[235,8430+23]..[235,8430+25])
                                                      Pexp_ident "ld" (typing/typedecl.ml[235,8430+23]..[235,8430+25])
                                                    "ld_mutable" (typing/typedecl.ml[235,8430+26]..[235,8430+36])
                                                "ld_type" (typing/typedecl.ml[236,8468+10]..[236,8468+17])
                                                  expression (typing/typedecl.ml[236,8468+20]..[236,8468+22])
                                                    Pexp_ident "ty" (typing/typedecl.ml[236,8468+20]..[236,8468+22])
                                                "ld_loc" (typing/typedecl.ml[237,8492+10]..[237,8492+16])
                                                  expression (typing/typedecl.ml[237,8492+19]..[237,8492+28])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[237,8492+19]..[237,8492+21])
                                                      Pexp_ident "ld" (typing/typedecl.ml[237,8492+19]..[237,8492+21])
                                                    "ld_loc" (typing/typedecl.ml[237,8492+22]..[237,8492+28])
                                                "ld_attributes" (typing/typedecl.ml[238,8522+10]..[238,8522+23])
                                                  expression (typing/typedecl.ml[238,8522+26]..[238,8522+42])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[238,8522+26]..[238,8522+28])
                                                      Pexp_ident "ld" (typing/typedecl.ml[238,8522+26]..[238,8522+28])
                                                    "ld_attributes" (typing/typedecl.ml[238,8522+29]..[238,8522+42])
                                                "ld_uid" (typing/typedecl.ml[239,8566+10]..[239,8566+16])
                                                  expression (typing/typedecl.ml[239,8566+19]..[239,8566+62])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[239,8566+19]..[239,8566+25])
                                                      Pexp_ident "Uid.mk" (typing/typedecl.ml[239,8566+19]..[239,8566+25])
                                                    [
                                                      <arg>
                                                      Labelled "current_unit"
                                                        expression (typing/typedecl.ml[239,8566+40]..[239,8566+62])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[239,8566+41]..[239,8566+58])
                                                            Pexp_ident "Env.get_unit_name" (typing/typedecl.ml[239,8566+41]..[239,8566+58])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[239,8566+59]..[239,8566+61])
                                                                Pexp_construct "()" (typing/typedecl.ml[239,8566+59]..[239,8566+61])
                                                                None
                                                          ]
                                                    ]
                                              ]
                                              None
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[242,8649+6]..[242,8649+10])
                                        Pexp_ident "lbls" (typing/typedecl.ml[242,8649+6]..[242,8649+10])
                                  ]
                            ]
                            expression (typing/typedecl.ml[243,8663+2]..[243,8663+13])
                              Pexp_tuple
                              [
                                expression (typing/typedecl.ml[243,8663+2]..[243,8663+6])
                                  Pexp_ident "lbls" (typing/typedecl.ml[243,8663+2]..[243,8663+6])
                                expression (typing/typedecl.ml[243,8663+8]..[243,8663+13])
                                  Pexp_ident "lbls'" (typing/typedecl.ml[243,8663+8]..[243,8663+13])
                              ]
    ]
  structure_item (typing/typedecl.ml[245,8678+0]..[253,9025+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[245,8678+4]..[245,8678+32])
          Ppat_var "transl_constructor_arguments" (typing/typedecl.ml[245,8678+4]..[245,8678+32])
        expression (typing/typedecl.ml[245,8678+33]..[253,9025+22]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[245,8678+33]..[245,8678+36])
            Ppat_var "env" (typing/typedecl.ml[245,8678+33]..[245,8678+36])
          expression (typing/typedecl.ml[245,8678+37]..[253,9025+22]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[245,8678+37]..[245,8678+44])
              Ppat_var "univars" (typing/typedecl.ml[245,8678+37]..[245,8678+44])
            expression (typing/typedecl.ml[245,8678+45]..[253,9025+22]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[245,8678+45]..[245,8678+51])
                Ppat_var "closed" (typing/typedecl.ml[245,8678+45]..[245,8678+51])
              expression (typing/typedecl.ml[245,8678+54]..[253,9025+22])
                Pexp_function
                [
                  <case>
                    pattern (typing/typedecl.ml[246,8741+4]..[246,8741+17])
                      Ppat_construct "Pcstr_tuple" (typing/typedecl.ml[246,8741+4]..[246,8741+15])
                      Some
                        []
                        pattern (typing/typedecl.ml[246,8741+16]..[246,8741+17])
                          Ppat_var "l" (typing/typedecl.ml[246,8741+16]..[246,8741+17])
                    expression (typing/typedecl.ml[247,8762+6]..[249,8891+18])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typedecl.ml[247,8762+10]..[247,8762+11])
                            Ppat_var "l" (typing/typedecl.ml[247,8762+10]..[247,8762+11])
                          expression (typing/typedecl.ml[247,8762+14]..[247,8762+65])
                            Pexp_apply
                            expression (typing/typedecl.ml[247,8762+14]..[247,8762+22])
                              Pexp_ident "List.map" (typing/typedecl.ml[247,8762+14]..[247,8762+22])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[247,8762+23]..[247,8762+63])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[247,8762+24]..[247,8762+42])
                                    Pexp_ident "transl_simple_type" (typing/typedecl.ml[247,8762+24]..[247,8762+42])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[247,8762+43]..[247,8762+46])
                                        Pexp_ident "env" (typing/typedecl.ml[247,8762+43]..[247,8762+46])
                                    <arg>
                                    Optional "univars"
                                      expression (typing/typedecl.ml[247,8762+48]..[247,8762+55])
                                        Pexp_ident "univars" (typing/typedecl.ml[247,8762+48]..[247,8762+55])
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[247,8762+56]..[247,8762+62])
                                        Pexp_ident "closed" (typing/typedecl.ml[247,8762+56]..[247,8762+62])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[247,8762+64]..[247,8762+65])
                                  Pexp_ident "l" (typing/typedecl.ml[247,8762+64]..[247,8762+65])
                            ]
                      ]
                      expression (typing/typedecl.ml[248,8831+6]..[249,8891+18])
                        Pexp_tuple
                        [
                          expression (typing/typedecl.ml[248,8831+6]..[248,8831+58])
                            Pexp_construct "Types.Cstr_tuple" (typing/typedecl.ml[248,8831+6]..[248,8831+22])
                            Some
                              expression (typing/typedecl.ml[248,8831+23]..[248,8831+58])
                                Pexp_apply
                                expression (typing/typedecl.ml[248,8831+24]..[248,8831+32])
                                  Pexp_ident "List.map" (typing/typedecl.ml[248,8831+24]..[248,8831+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[248,8831+33]..[248,8831+55])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/typedecl.ml[248,8831+38]..[248,8831+39])
                                        Ppat_var "t" (typing/typedecl.ml[248,8831+38]..[248,8831+39])
                                      expression (typing/typedecl.ml[248,8831+43]..[248,8831+54])
                                        Pexp_field
                                        expression (typing/typedecl.ml[248,8831+43]..[248,8831+44])
                                          Pexp_ident "t" (typing/typedecl.ml[248,8831+43]..[248,8831+44])
                                        "ctyp_type" (typing/typedecl.ml[248,8831+45]..[248,8831+54])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[248,8831+56]..[248,8831+57])
                                      Pexp_ident "l" (typing/typedecl.ml[248,8831+56]..[248,8831+57])
                                ]
                          expression (typing/typedecl.ml[249,8891+6]..[249,8891+18])
                            Pexp_construct "Cstr_tuple" (typing/typedecl.ml[249,8891+6]..[249,8891+16])
                            Some
                              expression (typing/typedecl.ml[249,8891+17]..[249,8891+18])
                                Pexp_ident "l" (typing/typedecl.ml[249,8891+17]..[249,8891+18])
                        ]
                  <case>
                    pattern (typing/typedecl.ml[250,8910+4]..[250,8910+18])
                      Ppat_construct "Pcstr_record" (typing/typedecl.ml[250,8910+4]..[250,8910+16])
                      Some
                        []
                        pattern (typing/typedecl.ml[250,8910+17]..[250,8910+18])
                          Ppat_var "l" (typing/typedecl.ml[250,8910+17]..[250,8910+18])
                    expression (typing/typedecl.ml[251,8932+6]..[253,9025+22])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typedecl.ml[251,8932+10]..[251,8932+21])
                            Ppat_tuple
                            [
                              pattern (typing/typedecl.ml[251,8932+10]..[251,8932+14])
                                Ppat_var "lbls" (typing/typedecl.ml[251,8932+10]..[251,8932+14])
                              pattern (typing/typedecl.ml[251,8932+16]..[251,8932+21])
                                Ppat_var "lbls'" (typing/typedecl.ml[251,8932+16]..[251,8932+21])
                            ]
                          expression (typing/typedecl.ml[251,8932+24]..[251,8932+58])
                            Pexp_apply
                            expression (typing/typedecl.ml[251,8932+24]..[251,8932+37])
                              Pexp_ident "transl_labels" (typing/typedecl.ml[251,8932+24]..[251,8932+37])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[251,8932+38]..[251,8932+41])
                                  Pexp_ident "env" (typing/typedecl.ml[251,8932+38]..[251,8932+41])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[251,8932+42]..[251,8932+49])
                                  Pexp_ident "univars" (typing/typedecl.ml[251,8932+42]..[251,8932+49])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[251,8932+50]..[251,8932+56])
                                  Pexp_ident "closed" (typing/typedecl.ml[251,8932+50]..[251,8932+56])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[251,8932+57]..[251,8932+58])
                                  Pexp_ident "l" (typing/typedecl.ml[251,8932+57]..[251,8932+58])
                            ]
                      ]
                      expression (typing/typedecl.ml[252,8994+6]..[253,9025+22])
                        Pexp_tuple
                        [
                          expression (typing/typedecl.ml[252,8994+6]..[252,8994+29])
                            Pexp_construct "Types.Cstr_record" (typing/typedecl.ml[252,8994+6]..[252,8994+23])
                            Some
                              expression (typing/typedecl.ml[252,8994+24]..[252,8994+29])
                                Pexp_ident "lbls'" (typing/typedecl.ml[252,8994+24]..[252,8994+29])
                          expression (typing/typedecl.ml[253,9025+6]..[253,9025+22])
                            Pexp_construct "Cstr_record" (typing/typedecl.ml[253,9025+6]..[253,9025+17])
                            Some
                              expression (typing/typedecl.ml[253,9025+18]..[253,9025+22])
                                Pexp_ident "lbls" (typing/typedecl.ml[253,9025+18]..[253,9025+22])
                        ]
                ]
    ]
  structure_item (typing/typedecl.ml[255,9049+0]..[307,11066+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[255,9049+4]..[255,9049+20])
          Ppat_var "make_constructor" (typing/typedecl.ml[255,9049+4]..[255,9049+20])
        expression (typing/typedecl.ml[255,9049+21]..[307,11066+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[255,9049+21]..[255,9049+24])
            Ppat_var "env" (typing/typedecl.ml[255,9049+21]..[255,9049+24])
          expression (typing/typedecl.ml[255,9049+25]..[307,11066+48]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[255,9049+25]..[255,9049+28])
              Ppat_var "loc" (typing/typedecl.ml[255,9049+25]..[255,9049+28])
            expression (typing/typedecl.ml[255,9049+29]..[307,11066+48]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[255,9049+29]..[255,9049+38])
                Ppat_var "type_path" (typing/typedecl.ml[255,9049+29]..[255,9049+38])
              expression (typing/typedecl.ml[255,9049+39]..[307,11066+48]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[255,9049+39]..[255,9049+50])
                  Ppat_var "type_params" (typing/typedecl.ml[255,9049+39]..[255,9049+50])
                expression (typing/typedecl.ml[255,9049+51]..[307,11066+48]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typedecl.ml[255,9049+51]..[255,9049+56])
                    Ppat_var "svars" (typing/typedecl.ml[255,9049+51]..[255,9049+56])
                  expression (typing/typedecl.ml[255,9049+57]..[307,11066+48]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typedecl.ml[255,9049+57]..[255,9049+62])
                      Ppat_var "sargs" (typing/typedecl.ml[255,9049+57]..[255,9049+62])
                    expression (typing/typedecl.ml[255,9049+63]..[307,11066+48]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typedecl.ml[255,9049+63]..[255,9049+72])
                        Ppat_var "sret_type" (typing/typedecl.ml[255,9049+63]..[255,9049+72])
                      expression (typing/typedecl.ml[256,9124+2]..[307,11066+48])
                        Pexp_match
                        expression (typing/typedecl.ml[256,9124+8]..[256,9124+17])
                          Pexp_ident "sret_type" (typing/typedecl.ml[256,9124+8]..[256,9124+17])
                        [
                          <case>
                            pattern (typing/typedecl.ml[257,9147+4]..[257,9147+8])
                              Ppat_construct "None" (typing/typedecl.ml[257,9147+4]..[257,9147+8])
                              None
                            expression (typing/typedecl.ml[258,9159+6]..[261,9249+31])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typedecl.ml[258,9159+10]..[258,9159+21])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typedecl.ml[258,9159+10]..[258,9159+14])
                                        Ppat_var "args" (typing/typedecl.ml[258,9159+10]..[258,9159+14])
                                      pattern (typing/typedecl.ml[258,9159+16]..[258,9159+21])
                                        Ppat_var "targs" (typing/typedecl.ml[258,9159+16]..[258,9159+21])
                                    ]
                                  expression (typing/typedecl.ml[259,9183+8]..[259,9183+56])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[259,9183+8]..[259,9183+36])
                                      Pexp_ident "transl_constructor_arguments" (typing/typedecl.ml[259,9183+8]..[259,9183+36])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[259,9183+37]..[259,9183+40])
                                          Pexp_ident "env" (typing/typedecl.ml[259,9183+37]..[259,9183+40])
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[259,9183+41]..[259,9183+45])
                                          Pexp_construct "None" (typing/typedecl.ml[259,9183+41]..[259,9183+45])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[259,9183+46]..[259,9183+50])
                                          Pexp_construct "true" (typing/typedecl.ml[259,9183+46]..[259,9183+50])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[259,9183+51]..[259,9183+56])
                                          Pexp_ident "sargs" (typing/typedecl.ml[259,9183+51]..[259,9183+56])
                                    ]
                              ]
                              expression (typing/typedecl.ml[261,9249+8]..[261,9249+31])
                                Pexp_tuple
                                [
                                  expression (typing/typedecl.ml[261,9249+8]..[261,9249+13])
                                    Pexp_ident "targs" (typing/typedecl.ml[261,9249+8]..[261,9249+13])
                                  expression (typing/typedecl.ml[261,9249+15]..[261,9249+19])
                                    Pexp_construct "None" (typing/typedecl.ml[261,9249+15]..[261,9249+19])
                                    None
                                  expression (typing/typedecl.ml[261,9249+21]..[261,9249+25])
                                    Pexp_ident "args" (typing/typedecl.ml[261,9249+21]..[261,9249+25])
                                  expression (typing/typedecl.ml[261,9249+27]..[261,9249+31])
                                    Pexp_construct "None" (typing/typedecl.ml[261,9249+27]..[261,9249+31])
                                    None
                                ]
                          <case>
                            pattern (typing/typedecl.ml[262,9281+4]..[262,9281+18])
                              Ppat_construct "Some" (typing/typedecl.ml[262,9281+4]..[262,9281+8])
                              Some
                                []
                                pattern (typing/typedecl.ml[262,9281+9]..[262,9281+18])
                                  Ppat_var "sret_type" (typing/typedecl.ml[262,9281+9]..[262,9281+18])
                            expression (typing/typedecl.ml[265,9437+6]..[307,11066+48])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typedecl.ml[265,9437+10]..[265,9437+11])
                                    Ppat_var "z" (typing/typedecl.ml[265,9437+10]..[265,9437+11])
                                  expression (typing/typedecl.ml[265,9437+14]..[265,9437+23])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[265,9437+14]..[265,9437+20])
                                      Pexp_ident "narrow" (typing/typedecl.ml[265,9437+14]..[265,9437+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[265,9437+21]..[265,9437+23])
                                          Pexp_construct "()" (typing/typedecl.ml[265,9437+21]..[265,9437+23])
                                          None
                                    ]
                              ]
                              expression (typing/typedecl.ml[266,9464+6]..[307,11066+48])
                                Pexp_sequence
                                expression (typing/typedecl.ml[266,9464+6]..[266,9464+29])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[266,9464+6]..[266,9464+26])
                                    Pexp_ident "reset_type_variables" (typing/typedecl.ml[266,9464+6]..[266,9464+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[266,9464+27]..[266,9464+29])
                                        Pexp_construct "()" (typing/typedecl.ml[266,9464+27]..[266,9464+29])
                                        None
                                  ]
                                expression (typing/typedecl.ml[267,9495+6]..[307,11066+48])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typedecl.ml[267,9495+10]..[267,9495+25])
                                        Ppat_tuple
                                        [
                                          pattern (typing/typedecl.ml[267,9495+10]..[267,9495+17])
                                            Ppat_var "univars" (typing/typedecl.ml[267,9495+10]..[267,9495+17])
                                          pattern (typing/typedecl.ml[267,9495+19]..[267,9495+25])
                                            Ppat_var "closed" (typing/typedecl.ml[267,9495+19]..[267,9495+25])
                                        ]
                                      expression (typing/typedecl.ml[268,9523+8]..[272,9622+72])
                                        Pexp_match
                                        expression (typing/typedecl.ml[268,9523+14]..[268,9523+19])
                                          Pexp_ident "svars" (typing/typedecl.ml[268,9523+14]..[268,9523+19])
                                        [
                                          <case>
                                            pattern (typing/typedecl.ml[269,9548+10]..[269,9548+12])
                                              Ppat_construct "[]" (typing/typedecl.ml[269,9548+10]..[269,9548+12])
                                              None
                                            expression (typing/typedecl.ml[269,9548+16]..[269,9548+27])
                                              Pexp_tuple
                                              [
                                                expression (typing/typedecl.ml[269,9548+16]..[269,9548+20])
                                                  Pexp_construct "None" (typing/typedecl.ml[269,9548+16]..[269,9548+20])
                                                  None
                                                expression (typing/typedecl.ml[269,9548+22]..[269,9548+27])
                                                  Pexp_construct "false" (typing/typedecl.ml[269,9548+22]..[269,9548+27])
                                                  None
                                              ]
                                          <case>
                                            pattern (typing/typedecl.ml[270,9576+10]..[270,9576+12])
                                              Ppat_var "vs" (typing/typedecl.ml[270,9576+10]..[270,9576+12])
                                            expression (typing/typedecl.ml[271,9592+11]..[272,9622+72])
                                              Pexp_sequence
                                              expression (typing/typedecl.ml[271,9592+11]..[271,9592+28])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[271,9592+11]..[271,9592+26])
                                                  Pexp_ident "Ctype.begin_def" (typing/typedecl.ml[271,9592+11]..[271,9592+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[271,9592+26]..[271,9592+28])
                                                      Pexp_construct "()" (typing/typedecl.ml[271,9592+26]..[271,9592+28])
                                                      None
                                                ]
                                              expression (typing/typedecl.ml[272,9622+11]..[272,9622+72])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typedecl.ml[272,9622+11]..[272,9622+66])
                                                    Pexp_construct "Some" (typing/typedecl.ml[272,9622+11]..[272,9622+15])
                                                    Some
                                                      expression (typing/typedecl.ml[272,9622+16]..[272,9622+66])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[272,9622+17]..[272,9622+34])
                                                          Pexp_ident "make_poly_univars" (typing/typedecl.ml[272,9622+17]..[272,9622+34])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[272,9622+35]..[272,9622+65])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[272,9622+36]..[272,9622+44])
                                                                Pexp_ident "List.map" (typing/typedecl.ml[272,9622+36]..[272,9622+44])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[272,9622+45]..[272,9622+61])
                                                                    Pexp_fun
                                                                    Nolabel
                                                                    None
                                                                    pattern (typing/typedecl.ml[272,9622+50]..[272,9622+51])
                                                                      Ppat_var "v" (typing/typedecl.ml[272,9622+50]..[272,9622+51])
                                                                    expression (typing/typedecl.ml[272,9622+55]..[272,9622+60])
                                                                      Pexp_field
                                                                      expression (typing/typedecl.ml[272,9622+55]..[272,9622+56])
Pexp_ident "v" (typing/typedecl.ml[272,9622+55]..[272,9622+56])
                                                                      "txt" (typing/typedecl.ml[272,9622+57]..[272,9622+60])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[272,9622+62]..[272,9622+64])
                                                                    Pexp_ident "vs" (typing/typedecl.ml[272,9622+62]..[272,9622+64])
                                                              ]
                                                        ]
                                                  expression (typing/typedecl.ml[272,9622+68]..[272,9622+72])
                                                    Pexp_construct "true" (typing/typedecl.ml[272,9622+68]..[272,9622+72])
                                                    None
                                                ]
                                        ]
                                  ]
                                  expression (typing/typedecl.ml[274,9704+6]..[307,11066+48])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typedecl.ml[274,9704+10]..[274,9704+21])
                                          Ppat_tuple
                                          [
                                            pattern (typing/typedecl.ml[274,9704+10]..[274,9704+14])
                                              Ppat_var "args" (typing/typedecl.ml[274,9704+10]..[274,9704+14])
                                            pattern (typing/typedecl.ml[274,9704+16]..[274,9704+21])
                                              Ppat_var "targs" (typing/typedecl.ml[274,9704+16]..[274,9704+21])
                                          ]
                                        expression (typing/typedecl.ml[275,9728+8]..[275,9728+61])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[275,9728+8]..[275,9728+36])
                                            Pexp_ident "transl_constructor_arguments" (typing/typedecl.ml[275,9728+8]..[275,9728+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[275,9728+37]..[275,9728+40])
                                                Pexp_ident "env" (typing/typedecl.ml[275,9728+37]..[275,9728+40])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[275,9728+41]..[275,9728+48])
                                                Pexp_ident "univars" (typing/typedecl.ml[275,9728+41]..[275,9728+48])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[275,9728+49]..[275,9728+55])
                                                Pexp_ident "closed" (typing/typedecl.ml[275,9728+49]..[275,9728+55])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[275,9728+56]..[275,9728+61])
                                                Pexp_ident "sargs" (typing/typedecl.ml[275,9728+56]..[275,9728+61])
                                          ]
                                    ]
                                    expression (typing/typedecl.ml[277,9799+6]..[307,11066+48])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typedecl.ml[277,9799+10]..[277,9799+19])
                                            Ppat_var "tret_type" (typing/typedecl.ml[277,9799+10]..[277,9799+19])
                                          expression (typing/typedecl.ml[277,9799+22]..[277,9799+70])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[277,9799+22]..[277,9799+40])
                                              Pexp_ident "transl_simple_type" (typing/typedecl.ml[277,9799+22]..[277,9799+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[277,9799+41]..[277,9799+44])
                                                  Pexp_ident "env" (typing/typedecl.ml[277,9799+41]..[277,9799+44])
                                              <arg>
                                              Optional "univars"
                                                expression (typing/typedecl.ml[277,9799+46]..[277,9799+53])
                                                  Pexp_ident "univars" (typing/typedecl.ml[277,9799+46]..[277,9799+53])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[277,9799+54]..[277,9799+60])
                                                  Pexp_ident "closed" (typing/typedecl.ml[277,9799+54]..[277,9799+60])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[277,9799+61]..[277,9799+70])
                                                  Pexp_ident "sret_type" (typing/typedecl.ml[277,9799+61]..[277,9799+70])
                                            ]
                                      ]
                                      expression (typing/typedecl.ml[278,9873+6]..[307,11066+48])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typedecl.ml[278,9873+10]..[278,9873+18])
                                              Ppat_var "ret_type" (typing/typedecl.ml[278,9873+10]..[278,9873+18])
                                            expression (typing/typedecl.ml[278,9873+21]..[278,9873+40])
                                              Pexp_field
                                              expression (typing/typedecl.ml[278,9873+21]..[278,9873+30])
                                                Pexp_ident "tret_type" (typing/typedecl.ml[278,9873+21]..[278,9873+30])
                                              "ctyp_type" (typing/typedecl.ml[278,9873+31]..[278,9873+40])
                                        ]
                                        expression (typing/typedecl.ml[280,9970+6]..[307,11066+48])
                                          Pexp_sequence
                                          expression (typing/typedecl.ml[280,9970+6]..[294,10614+9])
                                            Pexp_match
                                            expression (typing/typedecl.ml[280,9970+18]..[280,9970+35])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[280,9970+18]..[280,9970+26])
                                                Pexp_ident "get_desc" (typing/typedecl.ml[280,9970+18]..[280,9970+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[280,9970+27]..[280,9970+35])
                                                    Pexp_ident "ret_type" (typing/typedecl.ml[280,9970+27]..[280,9970+35])
                                              ]
                                            [
                                              <case>
                                                pattern (typing/typedecl.ml[281,10011+10]..[281,10011+28])
                                                  Ppat_construct "Tconstr" (typing/typedecl.ml[281,10011+10]..[281,10011+17])
                                                  Some
                                                    []
                                                    pattern (typing/typedecl.ml[281,10011+18]..[281,10011+28])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typedecl.ml[281,10011+19]..[281,10011+21])
                                                          Ppat_var "p'" (typing/typedecl.ml[281,10011+19]..[281,10011+21])
                                                        pattern (typing/typedecl.ml[281,10011+23]..[281,10011+24])
                                                          Ppat_any
                                                        pattern (typing/typedecl.ml[281,10011+26]..[281,10011+27])
                                                          Ppat_any
                                                      ]
                                                <when>
                                                  expression (typing/typedecl.ml[281,10011+34]..[281,10011+56])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[281,10011+34]..[281,10011+43])
                                                      Pexp_ident "Path.same" (typing/typedecl.ml[281,10011+34]..[281,10011+43])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[281,10011+44]..[281,10011+53])
                                                          Pexp_ident "type_path" (typing/typedecl.ml[281,10011+44]..[281,10011+53])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[281,10011+54]..[281,10011+56])
                                                          Pexp_ident "p'" (typing/typedecl.ml[281,10011+54]..[281,10011+56])
                                                    ]
                                                expression (typing/typedecl.ml[281,10011+60]..[281,10011+62])
                                                  Pexp_construct "()" (typing/typedecl.ml[281,10011+60]..[281,10011+62])
                                                  None
                                              <case>
                                                pattern (typing/typedecl.ml[282,10074+10]..[282,10074+11])
                                                  Ppat_any
                                                expression (typing/typedecl.ml[283,10089+10]..[293,10534+79])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typedecl.ml[283,10089+14]..[283,10089+19])
                                                        Ppat_var "trace" (typing/typedecl.ml[283,10089+14]..[283,10089+19])
                                                      expression (typing/typedecl.ml[287,10302+12]..[289,10366+65])
                                                        Pexp_construct "::" (typing/typedecl.ml[287,10302+13]..[289,10366+65]) ghost
                                                        Some
                                                          expression (typing/typedecl.ml[287,10302+13]..[289,10366+65]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typedecl.ml[287,10302+13]..[289,10366+64])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[287,10302+13]..[287,10302+34])
                                                                  Pexp_ident "Ctype.unexpanded_diff" (typing/typedecl.ml[287,10302+13]..[287,10302+34])
                                                                [
                                                                  <arg>
                                                                  Labelled "got"
                                                                    expression (typing/typedecl.ml[288,10337+20]..[288,10337+28])
                                                                      Pexp_ident "ret_type" (typing/typedecl.ml[288,10337+20]..[288,10337+28])
                                                                  <arg>
                                                                  Labelled "expected"
                                                                    expression (typing/typedecl.ml[289,10366+25]..[289,10366+64])
                                                                      Pexp_apply
                                                                      expression (typing/typedecl.ml[289,10366+26]..[289,10366+41])
Pexp_ident "Ctype.newconstr" (typing/typedecl.ml[289,10366+26]..[289,10366+41])
                                                                      [
<arg>
Nolabel
  expression (typing/typedecl.ml[289,10366+42]..[289,10366+51])
    Pexp_ident "type_path" (typing/typedecl.ml[289,10366+42]..[289,10366+51])
<arg>
Nolabel
  expression (typing/typedecl.ml[289,10366+52]..[289,10366+63])
    Pexp_ident "type_params" (typing/typedecl.ml[289,10366+52]..[289,10366+63])
                                                                      ]
                                                                ]
                                                              expression (typing/typedecl.ml[289,10366+64]..[289,10366+65]) ghost
                                                                Pexp_construct "[]" (typing/typedecl.ml[289,10366+64]..[289,10366+65]) ghost
                                                                None
                                                            ]
                                                  ]
                                                  expression (typing/typedecl.ml[291,10445+10]..[293,10534+79])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[291,10445+10]..[291,10445+15])
                                                      Pexp_ident "raise" (typing/typedecl.ml[291,10445+10]..[291,10445+15])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[291,10445+16]..[293,10534+79])
                                                          Pexp_construct "Error" (typing/typedecl.ml[291,10445+17]..[291,10445+22])
                                                          Some
                                                            expression (typing/typedecl.ml[291,10445+22]..[293,10534+78])
                                                              Pexp_tuple
                                                              [
                                                                expression (typing/typedecl.ml[291,10445+23]..[291,10445+41])
                                                                  Pexp_field
                                                                  expression (typing/typedecl.ml[291,10445+23]..[291,10445+32])
                                                                    Pexp_ident "sret_type" (typing/typedecl.ml[291,10445+23]..[291,10445+32])
                                                                  "ptyp_loc" (typing/typedecl.ml[291,10445+33]..[291,10445+41])
                                                                expression (typing/typedecl.ml[292,10488+23]..[293,10534+77])
                                                                  Pexp_construct "Constraint_failed" (typing/typedecl.ml[292,10488+23]..[292,10488+40])
                                                                  Some
                                                                    expression (typing/typedecl.ml[292,10488+40]..[293,10534+77])
                                                                      Pexp_tuple
                                                                      [
expression (typing/typedecl.ml[292,10488+41]..[292,10488+44])
  Pexp_ident "env" (typing/typedecl.ml[292,10488+41]..[292,10488+44])
expression (typing/typedecl.ml[293,10534+41]..[293,10534+76])
  Pexp_apply
  expression (typing/typedecl.ml[293,10534+41]..[293,10534+69])
    Pexp_ident "Errortrace.unification_error" (typing/typedecl.ml[293,10534+41]..[293,10534+69])
  [
    <arg>
    Labelled "trace"
      expression (typing/typedecl.ml[293,10534+71]..[293,10534+76])
        Pexp_ident "trace" (typing/typedecl.ml[293,10534+71]..[293,10534+76])
  ]
                                                                      ]
                                                              ]
                                                    ]
                                            ]
                                          expression (typing/typedecl.ml[295,10625+6]..[307,11066+48])
                                            Pexp_sequence
                                            expression (typing/typedecl.ml[295,10625+6]..[305,11040+9])
                                              Pexp_match
                                              expression (typing/typedecl.ml[295,10625+18]..[295,10625+25])
                                                Pexp_ident "univars" (typing/typedecl.ml[295,10625+18]..[295,10625+25])
                                              [
                                                <case>
                                                  pattern (typing/typedecl.ml[296,10656+8]..[296,10656+12])
                                                    Ppat_construct "None" (typing/typedecl.ml[296,10656+8]..[296,10656+12])
                                                    None
                                                  expression (typing/typedecl.ml[296,10656+16]..[296,10656+18])
                                                    Pexp_construct "()" (typing/typedecl.ml[296,10656+16]..[296,10656+18])
                                                    None
                                                <case>
                                                  pattern (typing/typedecl.ml[297,10675+8]..[297,10675+20])
                                                    Ppat_construct "Some" (typing/typedecl.ml[297,10675+8]..[297,10675+12])
                                                    Some
                                                      []
                                                      pattern (typing/typedecl.ml[297,10675+13]..[297,10675+20])
                                                        Ppat_var "univars" (typing/typedecl.ml[297,10675+13]..[297,10675+20])
                                                  expression (typing/typedecl.ml[298,10699+9]..[304,11011+28])
                                                    Pexp_sequence
                                                    expression (typing/typedecl.ml[298,10699+9]..[298,10699+24])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[298,10699+9]..[298,10699+22])
                                                        Pexp_ident "Ctype.end_def" (typing/typedecl.ml[298,10699+9]..[298,10699+22])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[298,10699+22]..[298,10699+24])
                                                            Pexp_construct "()" (typing/typedecl.ml[298,10699+22]..[298,10699+24])
                                                            None
                                                      ]
                                                    expression (typing/typedecl.ml[299,10725+9]..[304,11011+28])
                                                      Pexp_sequence
                                                      expression (typing/typedecl.ml[299,10725+9]..[299,10725+61])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[299,10725+9]..[299,10725+39])
                                                          Pexp_ident "Btype.iter_type_expr_cstr_args" (typing/typedecl.ml[299,10725+9]..[299,10725+39])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[299,10725+40]..[299,10725+56])
                                                              Pexp_ident "Ctype.generalize" (typing/typedecl.ml[299,10725+40]..[299,10725+56])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[299,10725+57]..[299,10725+61])
                                                              Pexp_ident "args" (typing/typedecl.ml[299,10725+57]..[299,10725+61])
                                                        ]
                                                      expression (typing/typedecl.ml[300,10788+9]..[304,11011+28])
                                                        Pexp_sequence
                                                        expression (typing/typedecl.ml[300,10788+9]..[300,10788+34])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[300,10788+9]..[300,10788+25])
                                                            Pexp_ident "Ctype.generalize" (typing/typedecl.ml[300,10788+9]..[300,10788+25])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[300,10788+26]..[300,10788+34])
                                                                Pexp_ident "ret_type" (typing/typedecl.ml[300,10788+26]..[300,10788+34])
                                                          ]
                                                        expression (typing/typedecl.ml[301,10824+9]..[304,11011+28])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (typing/typedecl.ml[301,10824+13]..[301,10824+18])
                                                                Ppat_var "_vars" (typing/typedecl.ml[301,10824+13]..[301,10824+18])
                                                              expression (typing/typedecl.ml[301,10824+21]..[301,10824+58])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[301,10824+21]..[301,10824+42])
                                                                  Pexp_ident "instance_poly_univars" (typing/typedecl.ml[301,10824+21]..[301,10824+42])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[301,10824+43]..[301,10824+46])
                                                                      Pexp_ident "env" (typing/typedecl.ml[301,10824+43]..[301,10824+46])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[301,10824+47]..[301,10824+50])
                                                                      Pexp_ident "loc" (typing/typedecl.ml[301,10824+47]..[301,10824+50])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[301,10824+51]..[301,10824+58])
                                                                      Pexp_ident "univars" (typing/typedecl.ml[301,10824+51]..[301,10824+58])
                                                                ]
                                                          ]
                                                          expression (typing/typedecl.ml[302,10886+9]..[304,11011+28])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (typing/typedecl.ml[302,10886+13]..[302,10886+22])
                                                                  Ppat_var "set_level" (typing/typedecl.ml[302,10886+13]..[302,10886+22])
                                                                expression (typing/typedecl.ml[302,10886+23]..[302,10886+65]) ghost
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (typing/typedecl.ml[302,10886+23]..[302,10886+24])
                                                                    Ppat_var "t" (typing/typedecl.ml[302,10886+23]..[302,10886+24])
                                                                  expression (typing/typedecl.ml[302,10886+27]..[302,10886+65])
                                                                    Pexp_apply
                                                                    expression (typing/typedecl.ml[302,10886+27]..[302,10886+42])
                                                                      Pexp_ident "Ctype.unify_var" (typing/typedecl.ml[302,10886+27]..[302,10886+42])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[302,10886+43]..[302,10886+46])
  Pexp_ident "env" (typing/typedecl.ml[302,10886+43]..[302,10886+46])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[302,10886+47]..[302,10886+63])
  Pexp_apply
  expression (typing/typedecl.ml[302,10886+48]..[302,10886+60])
    Pexp_ident "Ctype.newvar" (typing/typedecl.ml[302,10886+48]..[302,10886+60])
  [
    <arg>
    Nolabel
      expression (typing/typedecl.ml[302,10886+60]..[302,10886+62])
        Pexp_construct "()" (typing/typedecl.ml[302,10886+60]..[302,10886+62])
        None
  ]
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[302,10886+64]..[302,10886+65])
  Pexp_ident "t" (typing/typedecl.ml[302,10886+64]..[302,10886+65])
                                                                    ]
                                                            ]
                                                            expression (typing/typedecl.ml[303,10955+9]..[304,11011+28])
                                                              Pexp_sequence
                                                              expression (typing/typedecl.ml[303,10955+9]..[303,10955+54])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[303,10955+9]..[303,10955+39])
                                                                  Pexp_ident "Btype.iter_type_expr_cstr_args" (typing/typedecl.ml[303,10955+9]..[303,10955+39])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[303,10955+40]..[303,10955+49])
                                                                      Pexp_ident "set_level" (typing/typedecl.ml[303,10955+40]..[303,10955+49])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[303,10955+50]..[303,10955+54])
                                                                      Pexp_ident "args" (typing/typedecl.ml[303,10955+50]..[303,10955+54])
                                                                ]
                                                              expression (typing/typedecl.ml[304,11011+9]..[304,11011+27])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[304,11011+9]..[304,11011+18])
                                                                  Pexp_ident "set_level" (typing/typedecl.ml[304,11011+9]..[304,11011+18])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[304,11011+19]..[304,11011+27])
                                                                      Pexp_ident "ret_type" (typing/typedecl.ml[304,11011+19]..[304,11011+27])
                                                                ]
                                              ]
                                            expression (typing/typedecl.ml[306,11051+6]..[307,11066+48])
                                              Pexp_sequence
                                              expression (typing/typedecl.ml[306,11051+6]..[306,11051+13])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[306,11051+6]..[306,11051+11])
                                                  Pexp_ident "widen" (typing/typedecl.ml[306,11051+6]..[306,11051+11])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[306,11051+12]..[306,11051+13])
                                                      Pexp_ident "z" (typing/typedecl.ml[306,11051+12]..[306,11051+13])
                                                ]
                                              expression (typing/typedecl.ml[307,11066+6]..[307,11066+48])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typedecl.ml[307,11066+6]..[307,11066+11])
                                                    Pexp_ident "targs" (typing/typedecl.ml[307,11066+6]..[307,11066+11])
                                                  expression (typing/typedecl.ml[307,11066+13]..[307,11066+27])
                                                    Pexp_construct "Some" (typing/typedecl.ml[307,11066+13]..[307,11066+17])
                                                    Some
                                                      expression (typing/typedecl.ml[307,11066+18]..[307,11066+27])
                                                        Pexp_ident "tret_type" (typing/typedecl.ml[307,11066+18]..[307,11066+27])
                                                  expression (typing/typedecl.ml[307,11066+29]..[307,11066+33])
                                                    Pexp_ident "args" (typing/typedecl.ml[307,11066+29]..[307,11066+33])
                                                  expression (typing/typedecl.ml[307,11066+35]..[307,11066+48])
                                                    Pexp_construct "Some" (typing/typedecl.ml[307,11066+35]..[307,11066+39])
                                                    Some
                                                      expression (typing/typedecl.ml[307,11066+40]..[307,11066+48])
                                                        Pexp_ident "ret_type" (typing/typedecl.ml[307,11066+40]..[307,11066+48])
                                                ]
                        ]
    ]
  structure_item (typing/typedecl.ml[309,11116+0]..[483,17779+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[309,11116+4]..[309,11116+22])
          Ppat_var "transl_declaration" (typing/typedecl.ml[309,11116+4]..[309,11116+22])
        expression (typing/typedecl.ml[309,11116+23]..[483,17779+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[309,11116+23]..[309,11116+26])
            Ppat_var "env" (typing/typedecl.ml[309,11116+23]..[309,11116+26])
          expression (typing/typedecl.ml[309,11116+27]..[483,17779+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[309,11116+27]..[309,11116+32])
              Ppat_var "sdecl" (typing/typedecl.ml[309,11116+27]..[309,11116+32])
            expression (typing/typedecl.ml[309,11116+33]..[483,17779+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[309,11116+33]..[309,11116+42])
                Ppat_tuple
                [
                  pattern (typing/typedecl.ml[309,11116+34]..[309,11116+36])
                    Ppat_var "id" (typing/typedecl.ml[309,11116+34]..[309,11116+36])
                  pattern (typing/typedecl.ml[309,11116+38]..[309,11116+41])
                    Ppat_var "uid" (typing/typedecl.ml[309,11116+38]..[309,11116+41])
                ]
              expression (typing/typedecl.ml[311,11190+2]..[483,17779+5])
                Pexp_sequence
                expression (typing/typedecl.ml[311,11190+2]..[311,11190+24])
                  Pexp_apply
                  expression (typing/typedecl.ml[311,11190+2]..[311,11190+22])
                    Pexp_ident "reset_type_variables" (typing/typedecl.ml[311,11190+2]..[311,11190+22])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[311,11190+22]..[311,11190+24])
                        Pexp_construct "()" (typing/typedecl.ml[311,11190+22]..[311,11190+24])
                        None
                  ]
                expression (typing/typedecl.ml[312,11216+2]..[483,17779+5])
                  Pexp_sequence
                  expression (typing/typedecl.ml[312,11216+2]..[312,11216+20])
                    Pexp_apply
                    expression (typing/typedecl.ml[312,11216+2]..[312,11216+17])
                      Pexp_ident "Ctype.begin_def" (typing/typedecl.ml[312,11216+2]..[312,11216+17])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[312,11216+18]..[312,11216+20])
                          Pexp_construct "()" (typing/typedecl.ml[312,11216+18]..[312,11216+20])
                          None
                    ]
                  expression (typing/typedecl.ml[313,11238+2]..[483,17779+5])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typedecl.ml[313,11238+6]..[313,11238+13])
                          Ppat_var "tparams" (typing/typedecl.ml[313,11238+6]..[313,11238+13])
                        expression (typing/typedecl.ml[313,11238+16]..[313,11238+50])
                          Pexp_apply
                          expression (typing/typedecl.ml[313,11238+16]..[313,11238+27])
                            Pexp_ident "make_params" (typing/typedecl.ml[313,11238+16]..[313,11238+27])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[313,11238+28]..[313,11238+31])
                                Pexp_ident "env" (typing/typedecl.ml[313,11238+28]..[313,11238+31])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[313,11238+32]..[313,11238+50])
                                Pexp_field
                                expression (typing/typedecl.ml[313,11238+32]..[313,11238+37])
                                  Pexp_ident "sdecl" (typing/typedecl.ml[313,11238+32]..[313,11238+37])
                                "ptype_params" (typing/typedecl.ml[313,11238+38]..[313,11238+50])
                          ]
                    ]
                    expression (typing/typedecl.ml[314,11292+2]..[483,17779+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typedecl.ml[314,11292+6]..[314,11292+12])
                            Ppat_var "params" (typing/typedecl.ml[314,11292+6]..[314,11292+12])
                          expression (typing/typedecl.ml[314,11292+15]..[314,11292+63])
                            Pexp_apply
                            expression (typing/typedecl.ml[314,11292+15]..[314,11292+23])
                              Pexp_ident "List.map" (typing/typedecl.ml[314,11292+15]..[314,11292+23])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[314,11292+24]..[314,11292+55])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typedecl.ml[314,11292+29]..[314,11292+37])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typedecl.ml[314,11292+30]..[314,11292+33])
                                        Ppat_var "cty" (typing/typedecl.ml[314,11292+30]..[314,11292+33])
                                      pattern (typing/typedecl.ml[314,11292+35]..[314,11292+36])
                                        Ppat_any
                                    ]
                                  expression (typing/typedecl.ml[314,11292+41]..[314,11292+54])
                                    Pexp_field
                                    expression (typing/typedecl.ml[314,11292+41]..[314,11292+44])
                                      Pexp_ident "cty" (typing/typedecl.ml[314,11292+41]..[314,11292+44])
                                    "ctyp_type" (typing/typedecl.ml[314,11292+45]..[314,11292+54])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[314,11292+56]..[314,11292+63])
                                  Pexp_ident "tparams" (typing/typedecl.ml[314,11292+56]..[314,11292+63])
                            ]
                      ]
                      expression (typing/typedecl.ml[315,11359+2]..[483,17779+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typedecl.ml[315,11359+6]..[315,11359+11])
                              Ppat_var "cstrs" (typing/typedecl.ml[315,11359+6]..[315,11359+11])
                            expression (typing/typedecl.ml[315,11359+14]..[319,11497+21])
                              Pexp_apply
                              expression (typing/typedecl.ml[315,11359+14]..[315,11359+22])
                                Pexp_ident "List.map" (typing/typedecl.ml[315,11359+14]..[315,11359+22])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[316,11382+4]..[318,11451+45])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typedecl.ml[316,11382+9]..[316,11382+25])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typedecl.ml[316,11382+10]..[316,11382+13])
                                          Ppat_var "sty" (typing/typedecl.ml[316,11382+10]..[316,11382+13])
                                        pattern (typing/typedecl.ml[316,11382+15]..[316,11382+19])
                                          Ppat_var "sty'" (typing/typedecl.ml[316,11382+15]..[316,11382+19])
                                        pattern (typing/typedecl.ml[316,11382+21]..[316,11382+24])
                                          Ppat_var "loc" (typing/typedecl.ml[316,11382+21]..[316,11382+24])
                                      ]
                                    expression (typing/typedecl.ml[317,11411+6]..[318,11451+44])
                                      Pexp_tuple
                                      [
                                        expression (typing/typedecl.ml[317,11411+6]..[317,11411+38])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[317,11411+6]..[317,11411+24])
                                            Pexp_ident "transl_simple_type" (typing/typedecl.ml[317,11411+6]..[317,11411+24])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[317,11411+25]..[317,11411+28])
                                                Pexp_ident "env" (typing/typedecl.ml[317,11411+25]..[317,11411+28])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[317,11411+29]..[317,11411+34])
                                                Pexp_construct "false" (typing/typedecl.ml[317,11411+29]..[317,11411+34])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[317,11411+35]..[317,11411+38])
                                                Pexp_ident "sty" (typing/typedecl.ml[317,11411+35]..[317,11411+38])
                                          ]
                                        expression (typing/typedecl.ml[318,11451+6]..[318,11451+39])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[318,11451+6]..[318,11451+24])
                                            Pexp_ident "transl_simple_type" (typing/typedecl.ml[318,11451+6]..[318,11451+24])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[318,11451+25]..[318,11451+28])
                                                Pexp_ident "env" (typing/typedecl.ml[318,11451+25]..[318,11451+28])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[318,11451+29]..[318,11451+34])
                                                Pexp_construct "false" (typing/typedecl.ml[318,11451+29]..[318,11451+34])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[318,11451+35]..[318,11451+39])
                                                Pexp_ident "sty'" (typing/typedecl.ml[318,11451+35]..[318,11451+39])
                                          ]
                                        expression (typing/typedecl.ml[318,11451+41]..[318,11451+44])
                                          Pexp_ident "loc" (typing/typedecl.ml[318,11451+41]..[318,11451+44])
                                      ]
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[319,11497+4]..[319,11497+21])
                                    Pexp_field
                                    expression (typing/typedecl.ml[319,11497+4]..[319,11497+9])
                                      Pexp_ident "sdecl" (typing/typedecl.ml[319,11497+4]..[319,11497+9])
                                    "ptype_cstrs" (typing/typedecl.ml[319,11497+10]..[319,11497+21])
                              ]
                        ]
                        expression (typing/typedecl.ml[321,11524+2]..[483,17779+5])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typedecl.ml[321,11524+6]..[321,11524+18])
                                Ppat_var "unboxed_attr" (typing/typedecl.ml[321,11524+6]..[321,11524+18])
                              expression (typing/typedecl.ml[321,11524+21]..[321,11524+54])
                                Pexp_apply
                                expression (typing/typedecl.ml[321,11524+21]..[321,11524+48])
                                  Pexp_ident "get_unboxed_from_attributes" (typing/typedecl.ml[321,11524+21]..[321,11524+48])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[321,11524+49]..[321,11524+54])
                                      Pexp_ident "sdecl" (typing/typedecl.ml[321,11524+49]..[321,11524+54])
                                ]
                          ]
                          expression (typing/typedecl.ml[322,11582+2]..[483,17779+5])
                            Pexp_sequence
                            expression (typing/typedecl.ml[322,11582+2]..[355,12994+5])
                              Pexp_match
                              expression (typing/typedecl.ml[322,11582+14]..[322,11582+26])
                                Pexp_ident "unboxed_attr" (typing/typedecl.ml[322,11582+14]..[322,11582+26])
                              [
                                <case>
                                  pattern (typing/typedecl.ml[323,11614+4]..[323,11614+23])
                                    Ppat_or
                                    pattern (typing/typedecl.ml[323,11614+5]..[323,11614+9])
                                      Ppat_construct "None" (typing/typedecl.ml[323,11614+5]..[323,11614+9])
                                      None
                                    pattern (typing/typedecl.ml[323,11614+12]..[323,11614+22])
                                      Ppat_construct "Some" (typing/typedecl.ml[323,11614+12]..[323,11614+16])
                                      Some
                                        []
                                        pattern (typing/typedecl.ml[323,11614+17]..[323,11614+22])
                                          Ppat_construct "false" (typing/typedecl.ml[323,11614+17]..[323,11614+22])
                                          None
                                  expression (typing/typedecl.ml[323,11614+27]..[323,11614+29])
                                    Pexp_construct "()" (typing/typedecl.ml[323,11614+27]..[323,11614+29])
                                    None
                                <case>
                                  pattern (typing/typedecl.ml[324,11644+4]..[324,11644+13])
                                    Ppat_construct "Some" (typing/typedecl.ml[324,11644+4]..[324,11644+8])
                                    Some
                                      []
                                      pattern (typing/typedecl.ml[324,11644+9]..[324,11644+13])
                                        Ppat_construct "true" (typing/typedecl.ml[324,11644+9]..[324,11644+13])
                                        None
                                  expression (typing/typedecl.ml[325,11661+4]..[354,12984+9])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typedecl.ml[325,11661+8]..[325,11661+11])
                                          Ppat_var "bad" (typing/typedecl.ml[325,11661+8]..[325,11661+11])
                                        expression (typing/typedecl.ml[325,11661+12]..[325,11661+74]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/typedecl.ml[325,11661+12]..[325,11661+15])
                                            Ppat_var "msg" (typing/typedecl.ml[325,11661+12]..[325,11661+15])
                                          expression (typing/typedecl.ml[325,11661+18]..[325,11661+74])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[325,11661+18]..[325,11661+23])
                                              Pexp_ident "raise" (typing/typedecl.ml[325,11661+18]..[325,11661+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[325,11661+23]..[325,11661+74])
                                                  Pexp_construct "Error" (typing/typedecl.ml[325,11661+24]..[325,11661+29])
                                                  Some
                                                    expression (typing/typedecl.ml[325,11661+29]..[325,11661+73])
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typedecl.ml[325,11661+30]..[325,11661+45])
                                                          Pexp_field
                                                          expression (typing/typedecl.ml[325,11661+30]..[325,11661+35])
                                                            Pexp_ident "sdecl" (typing/typedecl.ml[325,11661+30]..[325,11661+35])
                                                          "ptype_loc" (typing/typedecl.ml[325,11661+36]..[325,11661+45])
                                                        expression (typing/typedecl.ml[325,11661+47]..[325,11661+72])
                                                          Pexp_construct "Bad_unboxed_attribute" (typing/typedecl.ml[325,11661+47]..[325,11661+68])
                                                          Some
                                                            expression (typing/typedecl.ml[325,11661+69]..[325,11661+72])
                                                              Pexp_ident "msg" (typing/typedecl.ml[325,11661+69]..[325,11661+72])
                                                      ]
                                            ]
                                    ]
                                    expression (typing/typedecl.ml[326,11739+4]..[354,12984+9])
                                      Pexp_match
                                      expression (typing/typedecl.ml[326,11739+10]..[326,11739+26])
                                        Pexp_field
                                        expression (typing/typedecl.ml[326,11739+10]..[326,11739+15])
                                          Pexp_ident "sdecl" (typing/typedecl.ml[326,11739+10]..[326,11739+15])
                                        "ptype_kind" (typing/typedecl.ml[326,11739+16]..[326,11739+26])
                                      [
                                        <case>
                                          pattern (typing/typedecl.ml[327,11771+6]..[327,11771+20])
                                            Ppat_construct "Ptype_abstract" (typing/typedecl.ml[327,11771+6]..[327,11771+20])
                                            None
                                          expression (typing/typedecl.ml[327,11771+27]..[327,11771+47])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[327,11771+27]..[327,11771+30])
                                              Pexp_ident "bad" (typing/typedecl.ml[327,11771+27]..[327,11771+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[327,11771+31]..[327,11771+47])
                                                  Pexp_constant PConst_string("it is abstract",(typing/typedecl.ml[327,11771+32]..[327,11771+46]),None)
                                            ]
                                        <case>
                                          pattern (typing/typedecl.ml[328,11819+6]..[328,11819+16])
                                            Ppat_construct "Ptype_open" (typing/typedecl.ml[328,11819+6]..[328,11819+16])
                                            None
                                          expression (typing/typedecl.ml[328,11819+27]..[328,11819+75])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[328,11819+27]..[328,11819+30])
                                              Pexp_ident "bad" (typing/typedecl.ml[328,11819+27]..[328,11819+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[328,11819+31]..[328,11819+75])
                                                  Pexp_constant PConst_string("extensible variant types cannot be unboxed",(typing/typedecl.ml[328,11819+32]..[328,11819+74]),None)
                                            ]
                                        <case>
                                          pattern (typing/typedecl.ml[329,11895+6]..[329,11895+25])
                                            Ppat_construct "Ptype_record" (typing/typedecl.ml[329,11895+6]..[329,11895+18])
                                            Some
                                              []
                                              pattern (typing/typedecl.ml[329,11895+19]..[329,11895+25])
                                                Ppat_var "fields" (typing/typedecl.ml[329,11895+19]..[329,11895+25])
                                          expression (typing/typedecl.ml[329,11895+29]..[334,12144+9])
                                            Pexp_match
                                            expression (typing/typedecl.ml[329,11895+41]..[329,11895+47])
                                              Pexp_ident "fields" (typing/typedecl.ml[329,11895+41]..[329,11895+47])
                                            [
                                              <case>
                                                pattern (typing/typedecl.ml[330,11948+10]..[330,11948+12])
                                                  Ppat_construct "[]" (typing/typedecl.ml[330,11948+10]..[330,11948+12])
                                                  None
                                                expression (typing/typedecl.ml[330,11948+16]..[330,11948+38])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[330,11948+16]..[330,11948+19])
                                                    Pexp_ident "bad" (typing/typedecl.ml[330,11948+16]..[330,11948+19])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[330,11948+20]..[330,11948+38])
                                                        Pexp_constant PConst_string("it has no fields",(typing/typedecl.ml[330,11948+21]..[330,11948+37]),None)
                                                  ]
                                              <case>
                                                pattern (typing/typedecl.ml[331,11987+10]..[331,11987+17])
                                                  Ppat_construct "::" (typing/typedecl.ml[331,11987+11]..[331,11987+13])
                                                  Some
                                                    []
                                                    pattern (typing/typedecl.ml[331,11987+10]..[331,11987+17]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typedecl.ml[331,11987+10]..[331,11987+11])
                                                          Ppat_any
                                                        pattern (typing/typedecl.ml[331,11987+13]..[331,11987+17])
                                                          Ppat_construct "::" (typing/typedecl.ml[331,11987+14]..[331,11987+16])
                                                          Some
                                                            []
                                                            pattern (typing/typedecl.ml[331,11987+13]..[331,11987+17]) ghost
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typedecl.ml[331,11987+13]..[331,11987+14])
                                                                  Ppat_any
                                                                pattern (typing/typedecl.ml[331,11987+16]..[331,11987+17])
                                                                  Ppat_any
                                                              ]
                                                      ]
                                                expression (typing/typedecl.ml[331,11987+21]..[331,11987+53])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[331,11987+21]..[331,11987+24])
                                                    Pexp_ident "bad" (typing/typedecl.ml[331,11987+21]..[331,11987+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[331,11987+25]..[331,11987+53])
                                                        Pexp_constant PConst_string("it has more than one field",(typing/typedecl.ml[331,11987+26]..[331,11987+52]),None)
                                                  ]
                                              <case>
                                                pattern (typing/typedecl.ml[332,12041+10]..[332,12041+35])
                                                  Ppat_construct "::" (typing/typedecl.ml[332,12041+11]..[332,12041+35]) ghost
                                                  Some
                                                    []
                                                    pattern (typing/typedecl.ml[332,12041+11]..[332,12041+35]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typedecl.ml[332,12041+11]..[332,12041+34])
                                                          Ppat_record Closed
                                                          [
                                                            "pld_mutable" (typing/typedecl.ml[332,12041+12]..[332,12041+23])
                                                              pattern (typing/typedecl.ml[332,12041+26]..[332,12041+33])
                                                                Ppat_construct "Mutable" (typing/typedecl.ml[332,12041+26]..[332,12041+33])
                                                                None
                                                          ]
                                                        pattern (typing/typedecl.ml[332,12041+34]..[332,12041+35]) ghost
                                                          Ppat_construct "[]" (typing/typedecl.ml[332,12041+34]..[332,12041+35]) ghost
                                                          None
                                                      ]
                                                expression (typing/typedecl.ml[332,12041+39]..[332,12041+58])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[332,12041+39]..[332,12041+42])
                                                    Pexp_ident "bad" (typing/typedecl.ml[332,12041+39]..[332,12041+42])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[332,12041+43]..[332,12041+58])
                                                        Pexp_constant PConst_string("it is mutable",(typing/typedecl.ml[332,12041+44]..[332,12041+57]),None)
                                                  ]
                                              <case>
                                                pattern (typing/typedecl.ml[333,12100+10]..[333,12100+37])
                                                  Ppat_construct "::" (typing/typedecl.ml[333,12100+11]..[333,12100+37]) ghost
                                                  Some
                                                    []
                                                    pattern (typing/typedecl.ml[333,12100+11]..[333,12100+37]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typedecl.ml[333,12100+11]..[333,12100+36])
                                                          Ppat_record Closed
                                                          [
                                                            "pld_mutable" (typing/typedecl.ml[333,12100+12]..[333,12100+23])
                                                              pattern (typing/typedecl.ml[333,12100+26]..[333,12100+35])
                                                                Ppat_construct "Immutable" (typing/typedecl.ml[333,12100+26]..[333,12100+35])
                                                                None
                                                          ]
                                                        pattern (typing/typedecl.ml[333,12100+36]..[333,12100+37]) ghost
                                                          Ppat_construct "[]" (typing/typedecl.ml[333,12100+36]..[333,12100+37]) ghost
                                                          None
                                                      ]
                                                expression (typing/typedecl.ml[333,12100+41]..[333,12100+43])
                                                  Pexp_construct "()" (typing/typedecl.ml[333,12100+41]..[333,12100+43])
                                                  None
                                            ]
                                        <case>
                                          pattern (typing/typedecl.ml[335,12154+6]..[335,12154+32])
                                            Ppat_construct "Ptype_variant" (typing/typedecl.ml[335,12154+6]..[335,12154+19])
                                            Some
                                              []
                                              pattern (typing/typedecl.ml[335,12154+20]..[335,12154+32])
                                                Ppat_var "constructors" (typing/typedecl.ml[335,12154+20]..[335,12154+32])
                                          expression (typing/typedecl.ml[335,12154+36]..[354,12984+9])
                                            Pexp_match
                                            expression (typing/typedecl.ml[335,12154+48]..[335,12154+60])
                                              Pexp_ident "constructors" (typing/typedecl.ml[335,12154+48]..[335,12154+60])
                                            [
                                              <case>
                                                pattern (typing/typedecl.ml[336,12220+10]..[336,12220+12])
                                                  Ppat_construct "[]" (typing/typedecl.ml[336,12220+10]..[336,12220+12])
                                                  None
                                                expression (typing/typedecl.ml[336,12220+16]..[336,12220+43])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[336,12220+16]..[336,12220+19])
                                                    Pexp_ident "bad" (typing/typedecl.ml[336,12220+16]..[336,12220+19])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[336,12220+20]..[336,12220+43])
                                                        Pexp_constant PConst_string("it has no constructor",(typing/typedecl.ml[336,12220+21]..[336,12220+42]),None)
                                                  ]
                                              <case>
                                                pattern (typing/typedecl.ml[337,12264+10]..[337,12264+19])
                                                  Ppat_construct "::" (typing/typedecl.ml[337,12264+12]..[337,12264+14])
                                                  Some
                                                    []
                                                    pattern (typing/typedecl.ml[337,12264+11]..[337,12264+18]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typedecl.ml[337,12264+11]..[337,12264+12])
                                                          Ppat_any
                                                        pattern (typing/typedecl.ml[337,12264+14]..[337,12264+18])
                                                          Ppat_construct "::" (typing/typedecl.ml[337,12264+15]..[337,12264+17])
                                                          Some
                                                            []
                                                            pattern (typing/typedecl.ml[337,12264+14]..[337,12264+18]) ghost
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typedecl.ml[337,12264+14]..[337,12264+15])
                                                                  Ppat_any
                                                                pattern (typing/typedecl.ml[337,12264+17]..[337,12264+18])
                                                                  Ppat_any
                                                              ]
                                                      ]
                                                expression (typing/typedecl.ml[337,12264+23]..[337,12264+61])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[337,12264+23]..[337,12264+26])
                                                    Pexp_ident "bad" (typing/typedecl.ml[337,12264+23]..[337,12264+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[337,12264+27]..[337,12264+61])
                                                        Pexp_constant PConst_string("it has more than one constructor",(typing/typedecl.ml[337,12264+28]..[337,12264+60]),None)
                                                  ]
                                              <case>
                                                pattern (typing/typedecl.ml[338,12326+10]..[338,12326+13])
                                                  Ppat_construct "::" (typing/typedecl.ml[338,12326+11]..[338,12326+13]) ghost
                                                  Some
                                                    []
                                                    pattern (typing/typedecl.ml[338,12326+11]..[338,12326+13]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typedecl.ml[338,12326+11]..[338,12326+12])
                                                          Ppat_var "c" (typing/typedecl.ml[338,12326+11]..[338,12326+12])
                                                        pattern (typing/typedecl.ml[338,12326+12]..[338,12326+13]) ghost
                                                          Ppat_construct "[]" (typing/typedecl.ml[338,12326+12]..[338,12326+13]) ghost
                                                          None
                                                      ]
                                                expression (typing/typedecl.ml[338,12326+17]..[353,12970+13])
                                                  Pexp_match
                                                  expression (typing/typedecl.ml[338,12326+29]..[338,12326+39])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[338,12326+29]..[338,12326+30])
                                                      Pexp_ident "c" (typing/typedecl.ml[338,12326+29]..[338,12326+30])
                                                    "pcd_args" (typing/typedecl.ml[338,12326+31]..[338,12326+39])
                                                  [
                                                    <case>
                                                      pattern (typing/typedecl.ml[339,12371+14]..[339,12371+28])
                                                        Ppat_construct "Pcstr_tuple" (typing/typedecl.ml[339,12371+14]..[339,12371+25])
                                                        Some
                                                          []
                                                          pattern (typing/typedecl.ml[339,12371+26]..[339,12371+28])
                                                            Ppat_construct "[]" (typing/typedecl.ml[339,12371+26]..[339,12371+28])
                                                            None
                                                      expression (typing/typedecl.ml[340,12403+16]..[340,12403+53])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[340,12403+16]..[340,12403+19])
                                                          Pexp_ident "bad" (typing/typedecl.ml[340,12403+16]..[340,12403+19])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[340,12403+20]..[340,12403+53])
                                                              Pexp_constant PConst_string("its constructor has no argument",(typing/typedecl.ml[340,12403+21]..[340,12403+52]),None)
                                                        ]
                                                    <case>
                                                      pattern (typing/typedecl.ml[341,12457+14]..[341,12457+35])
                                                        Ppat_construct "Pcstr_tuple" (typing/typedecl.ml[341,12457+14]..[341,12457+25])
                                                        Some
                                                          []
                                                          pattern (typing/typedecl.ml[341,12457+26]..[341,12457+35])
                                                            Ppat_construct "::" (typing/typedecl.ml[341,12457+28]..[341,12457+30])
                                                            Some
                                                              []
                                                              pattern (typing/typedecl.ml[341,12457+27]..[341,12457+34]) ghost
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/typedecl.ml[341,12457+27]..[341,12457+28])
                                                                    Ppat_any
                                                                  pattern (typing/typedecl.ml[341,12457+30]..[341,12457+34])
                                                                    Ppat_construct "::" (typing/typedecl.ml[341,12457+31]..[341,12457+33])
                                                                    Some
                                                                      []
                                                                      pattern (typing/typedecl.ml[341,12457+30]..[341,12457+34]) ghost
Ppat_tuple
[
  pattern (typing/typedecl.ml[341,12457+30]..[341,12457+31])
    Ppat_any
  pattern (typing/typedecl.ml[341,12457+33]..[341,12457+34])
    Ppat_any
]
                                                                ]
                                                      expression (typing/typedecl.ml[342,12496+16]..[342,12496+64])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[342,12496+16]..[342,12496+19])
                                                          Pexp_ident "bad" (typing/typedecl.ml[342,12496+16]..[342,12496+19])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[342,12496+20]..[342,12496+64])
                                                              Pexp_constant PConst_string("its constructor has more than one argument",(typing/typedecl.ml[342,12496+21]..[342,12496+63]),None)
                                                        ]
                                                    <case>
                                                      pattern (typing/typedecl.ml[343,12561+14]..[343,12561+29])
                                                        Ppat_construct "Pcstr_tuple" (typing/typedecl.ml[343,12561+14]..[343,12561+25])
                                                        Some
                                                          []
                                                          pattern (typing/typedecl.ml[343,12561+26]..[343,12561+29])
                                                            Ppat_construct "::" (typing/typedecl.ml[343,12561+27]..[343,12561+29]) ghost
                                                            Some
                                                              []
                                                              pattern (typing/typedecl.ml[343,12561+27]..[343,12561+29]) ghost
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/typedecl.ml[343,12561+27]..[343,12561+28])
                                                                    Ppat_any
                                                                  pattern (typing/typedecl.ml[343,12561+28]..[343,12561+29]) ghost
                                                                    Ppat_construct "[]" (typing/typedecl.ml[343,12561+28]..[343,12561+29]) ghost
                                                                    None
                                                                ]
                                                      expression (typing/typedecl.ml[344,12595+16]..[344,12595+18])
                                                        Pexp_construct "()" (typing/typedecl.ml[344,12595+16]..[344,12595+18])
                                                        None
                                                    <case>
                                                      pattern (typing/typedecl.ml[345,12614+14]..[345,12614+29])
                                                        Ppat_construct "Pcstr_record" (typing/typedecl.ml[345,12614+14]..[345,12614+26])
                                                        Some
                                                          []
                                                          pattern (typing/typedecl.ml[345,12614+27]..[345,12614+29])
                                                            Ppat_construct "[]" (typing/typedecl.ml[345,12614+27]..[345,12614+29])
                                                            None
                                                      expression (typing/typedecl.ml[346,12647+16]..[346,12647+51])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[346,12647+16]..[346,12647+19])
                                                          Pexp_ident "bad" (typing/typedecl.ml[346,12647+16]..[346,12647+19])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[346,12647+20]..[346,12647+51])
                                                              Pexp_constant PConst_string("its constructor has no fields",(typing/typedecl.ml[346,12647+21]..[346,12647+50]),None)
                                                        ]
                                                    <case>
                                                      pattern (typing/typedecl.ml[347,12699+14]..[347,12699+36])
                                                        Ppat_construct "Pcstr_record" (typing/typedecl.ml[347,12699+14]..[347,12699+26])
                                                        Some
                                                          []
                                                          pattern (typing/typedecl.ml[347,12699+27]..[347,12699+36])
                                                            Ppat_construct "::" (typing/typedecl.ml[347,12699+29]..[347,12699+31])
                                                            Some
                                                              []
                                                              pattern (typing/typedecl.ml[347,12699+28]..[347,12699+35]) ghost
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/typedecl.ml[347,12699+28]..[347,12699+29])
                                                                    Ppat_any
                                                                  pattern (typing/typedecl.ml[347,12699+31]..[347,12699+35])
                                                                    Ppat_construct "::" (typing/typedecl.ml[347,12699+32]..[347,12699+34])
                                                                    Some
                                                                      []
                                                                      pattern (typing/typedecl.ml[347,12699+31]..[347,12699+35]) ghost
Ppat_tuple
[
  pattern (typing/typedecl.ml[347,12699+31]..[347,12699+32])
    Ppat_any
  pattern (typing/typedecl.ml[347,12699+34]..[347,12699+35])
    Ppat_any
]
                                                                ]
                                                      expression (typing/typedecl.ml[348,12739+16]..[348,12739+61])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[348,12739+16]..[348,12739+19])
                                                          Pexp_ident "bad" (typing/typedecl.ml[348,12739+16]..[348,12739+19])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[348,12739+20]..[348,12739+61])
                                                              Pexp_constant PConst_string("its constructor has more than one field",(typing/typedecl.ml[348,12739+21]..[348,12739+60]),None)
                                                        ]
                                                    <case>
                                                      pattern (typing/typedecl.ml[349,12801+14]..[349,12801+52])
                                                        Ppat_construct "Pcstr_record" (typing/typedecl.ml[349,12801+14]..[349,12801+26])
                                                        Some
                                                          []
                                                          pattern (typing/typedecl.ml[349,12801+27]..[349,12801+52])
                                                            Ppat_construct "::" (typing/typedecl.ml[349,12801+28]..[349,12801+52]) ghost
                                                            Some
                                                              []
                                                              pattern (typing/typedecl.ml[349,12801+28]..[349,12801+52]) ghost
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/typedecl.ml[349,12801+28]..[349,12801+51])
                                                                    Ppat_record Closed
                                                                    [
                                                                      "pld_mutable" (typing/typedecl.ml[349,12801+29]..[349,12801+40])
pattern (typing/typedecl.ml[349,12801+43]..[349,12801+50])
  Ppat_construct "Mutable" (typing/typedecl.ml[349,12801+43]..[349,12801+50])
  None
                                                                    ]
                                                                  pattern (typing/typedecl.ml[349,12801+51]..[349,12801+52]) ghost
                                                                    Ppat_construct "[]" (typing/typedecl.ml[349,12801+51]..[349,12801+52]) ghost
                                                                    None
                                                                ]
                                                      expression (typing/typedecl.ml[350,12857+16]..[350,12857+35])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[350,12857+16]..[350,12857+19])
                                                          Pexp_ident "bad" (typing/typedecl.ml[350,12857+16]..[350,12857+19])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[350,12857+20]..[350,12857+35])
                                                              Pexp_constant PConst_string("it is mutable",(typing/typedecl.ml[350,12857+21]..[350,12857+34]),None)
                                                        ]
                                                    <case>
                                                      pattern (typing/typedecl.ml[351,12893+14]..[351,12893+54])
                                                        Ppat_construct "Pcstr_record" (typing/typedecl.ml[351,12893+14]..[351,12893+26])
                                                        Some
                                                          []
                                                          pattern (typing/typedecl.ml[351,12893+27]..[351,12893+54])
                                                            Ppat_construct "::" (typing/typedecl.ml[351,12893+28]..[351,12893+54]) ghost
                                                            Some
                                                              []
                                                              pattern (typing/typedecl.ml[351,12893+28]..[351,12893+54]) ghost
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/typedecl.ml[351,12893+28]..[351,12893+53])
                                                                    Ppat_record Closed
                                                                    [
                                                                      "pld_mutable" (typing/typedecl.ml[351,12893+29]..[351,12893+40])
pattern (typing/typedecl.ml[351,12893+43]..[351,12893+52])
  Ppat_construct "Immutable" (typing/typedecl.ml[351,12893+43]..[351,12893+52])
  None
                                                                    ]
                                                                  pattern (typing/typedecl.ml[351,12893+53]..[351,12893+54]) ghost
                                                                    Ppat_construct "[]" (typing/typedecl.ml[351,12893+53]..[351,12893+54]) ghost
                                                                    None
                                                                ]
                                                      expression (typing/typedecl.ml[352,12951+16]..[352,12951+18])
                                                        Pexp_construct "()" (typing/typedecl.ml[352,12951+16]..[352,12951+18])
                                                        None
                                                  ]
                                            ]
                                      ]
                              ]
                            expression (typing/typedecl.ml[356,13001+2]..[483,17779+5])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typedecl.ml[356,13001+6]..[356,13001+28])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typedecl.ml[356,13001+6]..[356,13001+11])
                                        Ppat_var "unbox" (typing/typedecl.ml[356,13001+6]..[356,13001+11])
                                      pattern (typing/typedecl.ml[356,13001+13]..[356,13001+28])
                                        Ppat_var "unboxed_default" (typing/typedecl.ml[356,13001+13]..[356,13001+28])
                                    ]
                                  expression (typing/typedecl.ml[357,13032+4]..[363,13348+23])
                                    Pexp_match
                                    expression (typing/typedecl.ml[357,13032+10]..[357,13032+26])
                                      Pexp_field
                                      expression (typing/typedecl.ml[357,13032+10]..[357,13032+15])
                                        Pexp_ident "sdecl" (typing/typedecl.ml[357,13032+10]..[357,13032+15])
                                      "ptype_kind" (typing/typedecl.ml[357,13032+16]..[357,13032+26])
                                    [
                                      <case>
                                        pattern (typing/typedecl.ml[358,13064+6]..[360,13198+47])
                                          Ppat_or
                                          pattern (typing/typedecl.ml[358,13064+6]..[359,13118+79])
                                            Ppat_or
                                            pattern (typing/typedecl.ml[358,13064+6]..[358,13064+53])
                                              Ppat_construct "Ptype_variant" (typing/typedecl.ml[358,13064+6]..[358,13064+19])
                                              Some
                                                []
                                                pattern (typing/typedecl.ml[358,13064+20]..[358,13064+53])
                                                  Ppat_construct "::" (typing/typedecl.ml[358,13064+21]..[358,13064+53]) ghost
                                                  Some
                                                    []
                                                    pattern (typing/typedecl.ml[358,13064+21]..[358,13064+53]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typedecl.ml[358,13064+21]..[358,13064+52])
                                                          Ppat_record Open
                                                          [
                                                            "pcd_args" (typing/typedecl.ml[358,13064+22]..[358,13064+30])
                                                              pattern (typing/typedecl.ml[358,13064+33]..[358,13064+48])
                                                                Ppat_construct "Pcstr_tuple" (typing/typedecl.ml[358,13064+33]..[358,13064+44])
                                                                Some
                                                                  []
                                                                  pattern (typing/typedecl.ml[358,13064+45]..[358,13064+48])
                                                                    Ppat_construct "::" (typing/typedecl.ml[358,13064+46]..[358,13064+48]) ghost
                                                                    Some
                                                                      []
                                                                      pattern (typing/typedecl.ml[358,13064+46]..[358,13064+48]) ghost
Ppat_tuple
[
  pattern (typing/typedecl.ml[358,13064+46]..[358,13064+47])
    Ppat_any
  pattern (typing/typedecl.ml[358,13064+47]..[358,13064+48]) ghost
    Ppat_construct "[]" (typing/typedecl.ml[358,13064+47]..[358,13064+48]) ghost
    None
]
                                                          ]
                                                        pattern (typing/typedecl.ml[358,13064+52]..[358,13064+53]) ghost
                                                          Ppat_construct "[]" (typing/typedecl.ml[358,13064+52]..[358,13064+53]) ghost
                                                          None
                                                      ]
                                            pattern (typing/typedecl.ml[359,13118+6]..[359,13118+79])
                                              Ppat_construct "Ptype_variant" (typing/typedecl.ml[359,13118+6]..[359,13118+19])
                                              Some
                                                []
                                                pattern (typing/typedecl.ml[359,13118+20]..[359,13118+79])
                                                  Ppat_construct "::" (typing/typedecl.ml[359,13118+21]..[359,13118+79]) ghost
                                                  Some
                                                    []
                                                    pattern (typing/typedecl.ml[359,13118+21]..[359,13118+79]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typedecl.ml[359,13118+21]..[359,13118+78])
                                                          Ppat_record Open
                                                          [
                                                            "pcd_args" (typing/typedecl.ml[359,13118+22]..[359,13118+30])
                                                              pattern (typing/typedecl.ml[359,13118+33]..[359,13118+74])
                                                                Ppat_construct "Pcstr_record" (typing/typedecl.ml[359,13118+33]..[359,13118+45])
                                                                Some
                                                                  []
                                                                  pattern (typing/typedecl.ml[359,13118+46]..[359,13118+74])
                                                                    Ppat_construct "::" (typing/typedecl.ml[359,13118+47]..[359,13118+74]) ghost
                                                                    Some
                                                                      []
                                                                      pattern (typing/typedecl.ml[359,13118+47]..[359,13118+74]) ghost
Ppat_tuple
[
  pattern (typing/typedecl.ml[359,13118+47]..[359,13118+73])
    Ppat_record Open
    [
      "pld_mutable" (typing/typedecl.ml[359,13118+48]..[359,13118+59])
        pattern (typing/typedecl.ml[359,13118+60]..[359,13118+69])
          Ppat_construct "Immutable" (typing/typedecl.ml[359,13118+60]..[359,13118+69])
          None
    ]
  pattern (typing/typedecl.ml[359,13118+73]..[359,13118+74]) ghost
    Ppat_construct "[]" (typing/typedecl.ml[359,13118+73]..[359,13118+74]) ghost
    None
]
                                                          ]
                                                        pattern (typing/typedecl.ml[359,13118+78]..[359,13118+79]) ghost
                                                          Ppat_construct "[]" (typing/typedecl.ml[359,13118+78]..[359,13118+79]) ghost
                                                          None
                                                      ]
                                          pattern (typing/typedecl.ml[360,13198+6]..[360,13198+47])
                                            Ppat_construct "Ptype_record" (typing/typedecl.ml[360,13198+6]..[360,13198+18])
                                            Some
                                              []
                                              pattern (typing/typedecl.ml[360,13198+19]..[360,13198+47])
                                                Ppat_construct "::" (typing/typedecl.ml[360,13198+20]..[360,13198+47]) ghost
                                                Some
                                                  []
                                                  pattern (typing/typedecl.ml[360,13198+20]..[360,13198+47]) ghost
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/typedecl.ml[360,13198+20]..[360,13198+46])
                                                        Ppat_record Open
                                                        [
                                                          "pld_mutable" (typing/typedecl.ml[360,13198+21]..[360,13198+32])
                                                            pattern (typing/typedecl.ml[360,13198+33]..[360,13198+42])
                                                              Ppat_construct "Immutable" (typing/typedecl.ml[360,13198+33]..[360,13198+42])
                                                              None
                                                        ]
                                                      pattern (typing/typedecl.ml[360,13198+46]..[360,13198+47]) ghost
                                                        Ppat_construct "[]" (typing/typedecl.ml[360,13198+46]..[360,13198+47]) ghost
                                                        None
                                                    ]
                                        expression (typing/typedecl.ml[361,13249+6]..[362,13314+33])
                                          Pexp_tuple
                                          [
                                            expression (typing/typedecl.ml[361,13249+6]..[361,13249+63])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[361,13249+6]..[361,13249+18])
                                                Pexp_ident "Option.value" (typing/typedecl.ml[361,13249+6]..[361,13249+18])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[361,13249+19]..[361,13249+31])
                                                    Pexp_ident "unboxed_attr" (typing/typedecl.ml[361,13249+19]..[361,13249+31])
                                                <arg>
                                                Labelled "default"
                                                  expression (typing/typedecl.ml[361,13249+41]..[361,13249+63])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[361,13249+41]..[361,13249+42])
                                                      Pexp_ident "!" (typing/typedecl.ml[361,13249+41]..[361,13249+42])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[361,13249+42]..[361,13249+63])
                                                          Pexp_ident "Clflags.unboxed_types" (typing/typedecl.ml[361,13249+42]..[361,13249+63])
                                                    ]
                                              ]
                                            expression (typing/typedecl.ml[362,13314+6]..[362,13314+33])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[362,13314+6]..[362,13314+20])
                                                Pexp_ident "Option.is_none" (typing/typedecl.ml[362,13314+6]..[362,13314+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[362,13314+21]..[362,13314+33])
                                                    Pexp_ident "unboxed_attr" (typing/typedecl.ml[362,13314+21]..[362,13314+33])
                                              ]
                                          ]
                                      <case>
                                        pattern (typing/typedecl.ml[363,13348+6]..[363,13348+7])
                                          Ppat_any
                                        expression (typing/typedecl.ml[363,13348+11]..[363,13348+23])
                                          Pexp_tuple
                                          [
                                            expression (typing/typedecl.ml[363,13348+11]..[363,13348+16])
                                              Pexp_construct "false" (typing/typedecl.ml[363,13348+11]..[363,13348+16])
                                              None
                                            expression (typing/typedecl.ml[363,13348+18]..[363,13348+23])
                                              Pexp_construct "false" (typing/typedecl.ml[363,13348+18]..[363,13348+23])
                                              None
                                          ]
                                    ]
                              ]
                              expression (typing/typedecl.ml[365,13412+2]..[483,17779+5])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typedecl.ml[365,13412+6]..[365,13412+19])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typedecl.ml[365,13412+7]..[365,13412+12])
                                          Ppat_var "tkind" (typing/typedecl.ml[365,13412+7]..[365,13412+12])
                                        pattern (typing/typedecl.ml[365,13412+14]..[365,13412+18])
                                          Ppat_var "kind" (typing/typedecl.ml[365,13412+14]..[365,13412+18])
                                      ]
                                    expression (typing/typedecl.ml[366,13434+4]..[427,15940+43])
                                      Pexp_match
                                      expression (typing/typedecl.ml[366,13434+10]..[366,13434+26])
                                        Pexp_field
                                        expression (typing/typedecl.ml[366,13434+10]..[366,13434+15])
                                          Pexp_ident "sdecl" (typing/typedecl.ml[366,13434+10]..[366,13434+15])
                                        "ptype_kind" (typing/typedecl.ml[366,13434+16]..[366,13434+26])
                                      [
                                        <case>
                                          pattern (typing/typedecl.ml[367,13466+8]..[367,13466+22])
                                            Ppat_construct "Ptype_abstract" (typing/typedecl.ml[367,13466+8]..[367,13466+22])
                                            None
                                          expression (typing/typedecl.ml[367,13466+26]..[367,13466+55])
                                            Pexp_tuple
                                            [
                                              expression (typing/typedecl.ml[367,13466+26]..[367,13466+40])
                                                Pexp_construct "Ttype_abstract" (typing/typedecl.ml[367,13466+26]..[367,13466+40])
                                                None
                                              expression (typing/typedecl.ml[367,13466+42]..[367,13466+55])
                                                Pexp_construct "Type_abstract" (typing/typedecl.ml[367,13466+42]..[367,13466+55])
                                                None
                                            ]
                                        <case>
                                          pattern (typing/typedecl.ml[368,13522+8]..[368,13522+28])
                                            Ppat_construct "Ptype_variant" (typing/typedecl.ml[368,13522+8]..[368,13522+21])
                                            Some
                                              []
                                              pattern (typing/typedecl.ml[368,13522+22]..[368,13522+28])
                                                Ppat_var "scstrs" (typing/typedecl.ml[368,13522+22]..[368,13522+28])
                                          expression (typing/typedecl.ml[369,13554+8]..[417,15515+57])
                                            Pexp_sequence
                                            expression (typing/typedecl.ml[369,13554+8]..[374,13775+11])
                                              Pexp_ifthenelse
                                              expression (typing/typedecl.ml[369,13554+11]..[369,13554+64])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[369,13554+11]..[369,13554+22])
                                                  Pexp_ident "List.exists" (typing/typedecl.ml[369,13554+11]..[369,13554+22])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[369,13554+23]..[369,13554+57])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (typing/typedecl.ml[369,13554+28]..[369,13554+32])
                                                        Ppat_var "cstr" (typing/typedecl.ml[369,13554+28]..[369,13554+32])
                                                      expression (typing/typedecl.ml[369,13554+36]..[369,13554+56])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[369,13554+49]..[369,13554+51])
                                                          Pexp_ident "<>" (typing/typedecl.ml[369,13554+49]..[369,13554+51])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[369,13554+36]..[369,13554+48])
                                                              Pexp_field
                                                              expression (typing/typedecl.ml[369,13554+36]..[369,13554+40])
                                                                Pexp_ident "cstr" (typing/typedecl.ml[369,13554+36]..[369,13554+40])
                                                              "pcd_res" (typing/typedecl.ml[369,13554+41]..[369,13554+48])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[369,13554+52]..[369,13554+56])
                                                              Pexp_construct "None" (typing/typedecl.ml[369,13554+52]..[369,13554+56])
                                                              None
                                                        ]
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[369,13554+58]..[369,13554+64])
                                                      Pexp_ident "scstrs" (typing/typedecl.ml[369,13554+58]..[369,13554+64])
                                                ]
                                              expression (typing/typedecl.ml[369,13554+70]..[374,13775+11])
                                                Pexp_match
                                                expression (typing/typedecl.ml[370,13630+16]..[370,13630+21])
                                                  Pexp_ident "cstrs" (typing/typedecl.ml[370,13630+16]..[370,13630+21])
                                                [
                                                  <case>
                                                    pattern (typing/typedecl.ml[371,13657+12]..[371,13657+14])
                                                      Ppat_construct "[]" (typing/typedecl.ml[371,13657+12]..[371,13657+14])
                                                      None
                                                    expression (typing/typedecl.ml[371,13657+18]..[371,13657+20])
                                                      Pexp_construct "()" (typing/typedecl.ml[371,13657+18]..[371,13657+20])
                                                      None
                                                  <case>
                                                    pattern (typing/typedecl.ml[372,13678+12]..[372,13678+24])
                                                      Ppat_construct "::" (typing/typedecl.ml[372,13678+21]..[372,13678+23])
                                                      Some
                                                        []
                                                        pattern (typing/typedecl.ml[372,13678+12]..[372,13678+24]) ghost
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/typedecl.ml[372,13678+12]..[372,13678+21])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typedecl.ml[372,13678+13]..[372,13678+14])
                                                                  Ppat_any
                                                                pattern (typing/typedecl.ml[372,13678+15]..[372,13678+16])
                                                                  Ppat_any
                                                                pattern (typing/typedecl.ml[372,13678+17]..[372,13678+20])
                                                                  Ppat_var "loc" (typing/typedecl.ml[372,13678+17]..[372,13678+20])
                                                              ]
                                                            pattern (typing/typedecl.ml[372,13678+23]..[372,13678+24])
                                                              Ppat_any
                                                          ]
                                                    expression (typing/typedecl.ml[373,13706+14]..[373,13706+68])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[373,13706+14]..[373,13706+36])
                                                        Pexp_ident "Location.prerr_warning" (typing/typedecl.ml[373,13706+14]..[373,13706+36])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[373,13706+37]..[373,13706+40])
                                                            Pexp_ident "loc" (typing/typedecl.ml[373,13706+37]..[373,13706+40])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[373,13706+41]..[373,13706+68])
                                                            Pexp_construct "Warnings.Constraint_on_gadt" (typing/typedecl.ml[373,13706+41]..[373,13706+68])
                                                            None
                                                      ]
                                                ]
                                              None
                                            expression (typing/typedecl.ml[375,13788+8]..[417,15515+57])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typedecl.ml[375,13788+12]..[375,13788+23])
                                                    Ppat_var "all_constrs" (typing/typedecl.ml[375,13788+12]..[375,13788+23])
                                                  expression (typing/typedecl.ml[375,13788+26]..[375,13788+46])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[375,13788+26]..[375,13788+29])
                                                      Pexp_ident "ref" (typing/typedecl.ml[375,13788+26]..[375,13788+29])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[375,13788+30]..[375,13788+46])
                                                          Pexp_ident "String.Set.empty" (typing/typedecl.ml[375,13788+30]..[375,13788+46])
                                                    ]
                                              ]
                                              expression (typing/typedecl.ml[376,13838+8]..[417,15515+57])
                                                Pexp_sequence
                                                expression (typing/typedecl.ml[376,13838+8]..[381,14087+16])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[376,13838+8]..[376,13838+17])
                                                    Pexp_ident "List.iter" (typing/typedecl.ml[376,13838+8]..[376,13838+17])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[377,13856+10]..[380,14026+60])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (typing/typedecl.ml[377,13856+15]..[377,13856+40])
                                                          Ppat_record Closed
                                                          [
                                                            "pcd_name" (typing/typedecl.ml[377,13856+16]..[377,13856+24])
                                                              pattern (typing/typedecl.ml[377,13856+27]..[377,13856+39])
                                                                Ppat_record Closed
                                                                [
                                                                  "txt" (typing/typedecl.ml[377,13856+28]..[377,13856+31])
                                                                    pattern (typing/typedecl.ml[377,13856+34]..[377,13856+38])
                                                                      Ppat_var "name" (typing/typedecl.ml[377,13856+34]..[377,13856+38])
                                                                ]
                                                          ]
                                                        expression (typing/typedecl.ml[378,13900+12]..[380,14026+59])
                                                          Pexp_sequence
                                                          expression (typing/typedecl.ml[378,13900+12]..[379,13953+71])
                                                            Pexp_ifthenelse
                                                            expression (typing/typedecl.ml[378,13900+15]..[378,13900+47])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[378,13900+15]..[378,13900+29])
                                                                Pexp_ident "String.Set.mem" (typing/typedecl.ml[378,13900+15]..[378,13900+29])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[378,13900+30]..[378,13900+34])
                                                                    Pexp_ident "name" (typing/typedecl.ml[378,13900+30]..[378,13900+34])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[378,13900+35]..[378,13900+47])
                                                                    Pexp_apply
                                                                    expression (typing/typedecl.ml[378,13900+35]..[378,13900+36])
                                                                      Pexp_ident "!" (typing/typedecl.ml[378,13900+35]..[378,13900+36])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[378,13900+36]..[378,13900+47])
  Pexp_ident "all_constrs" (typing/typedecl.ml[378,13900+36]..[378,13900+47])
                                                                    ]
                                                              ]
                                                            expression (typing/typedecl.ml[379,13953+14]..[379,13953+71])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[379,13953+14]..[379,13953+19])
                                                                Pexp_ident "raise" (typing/typedecl.ml[379,13953+14]..[379,13953+19])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[379,13953+19]..[379,13953+71])
                                                                    Pexp_construct "Error" (typing/typedecl.ml[379,13953+20]..[379,13953+25])
                                                                    Some
                                                                      expression (typing/typedecl.ml[379,13953+25]..[379,13953+70])
Pexp_tuple
[
  expression (typing/typedecl.ml[379,13953+26]..[379,13953+41])
    Pexp_field
    expression (typing/typedecl.ml[379,13953+26]..[379,13953+31])
      Pexp_ident "sdecl" (typing/typedecl.ml[379,13953+26]..[379,13953+31])
    "ptype_loc" (typing/typedecl.ml[379,13953+32]..[379,13953+41])
  expression (typing/typedecl.ml[379,13953+43]..[379,13953+69])
    Pexp_construct "Duplicate_constructor" (typing/typedecl.ml[379,13953+43]..[379,13953+64])
    Some
      expression (typing/typedecl.ml[379,13953+65]..[379,13953+69])
        Pexp_ident "name" (typing/typedecl.ml[379,13953+65]..[379,13953+69])
]
                                                              ]
                                                            None
                                                          expression (typing/typedecl.ml[380,14026+12]..[380,14026+59])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[380,14026+24]..[380,14026+26])
                                                              Pexp_ident ":=" (typing/typedecl.ml[380,14026+24]..[380,14026+26])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[380,14026+12]..[380,14026+23])
                                                                  Pexp_ident "all_constrs" (typing/typedecl.ml[380,14026+12]..[380,14026+23])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[380,14026+27]..[380,14026+59])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[380,14026+27]..[380,14026+41])
                                                                    Pexp_ident "String.Set.add" (typing/typedecl.ml[380,14026+27]..[380,14026+41])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[380,14026+42]..[380,14026+46])
Pexp_ident "name" (typing/typedecl.ml[380,14026+42]..[380,14026+46])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[380,14026+47]..[380,14026+59])
Pexp_apply
expression (typing/typedecl.ml[380,14026+47]..[380,14026+48])
  Pexp_ident "!" (typing/typedecl.ml[380,14026+47]..[380,14026+48])
[
  <arg>
  Nolabel
    expression (typing/typedecl.ml[380,14026+48]..[380,14026+59])
      Pexp_ident "all_constrs" (typing/typedecl.ml[380,14026+48]..[380,14026+59])
]
                                                                  ]
                                                            ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[381,14087+10]..[381,14087+16])
                                                        Pexp_ident "scstrs" (typing/typedecl.ml[381,14087+10]..[381,14087+16])
                                                  ]
                                                expression (typing/typedecl.ml[382,14105+8]..[417,15515+57])
                                                  Pexp_sequence
                                                  expression (typing/typedecl.ml[382,14105+8]..[385,14242+62])
                                                    Pexp_ifthenelse
                                                    expression (typing/typedecl.ml[382,14105+11]..[384,14203+33])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[384,14203+11]..[384,14203+12])
                                                        Pexp_ident ">" (typing/typedecl.ml[384,14203+11]..[384,14203+12])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[382,14105+11]..[383,14128+74])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[382,14105+11]..[382,14105+22])
                                                              Pexp_ident "List.length" (typing/typedecl.ml[382,14105+11]..[382,14105+22])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[383,14128+12]..[383,14128+74])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[383,14128+13]..[383,14128+24])
                                                                    Pexp_ident "List.filter" (typing/typedecl.ml[383,14128+13]..[383,14128+24])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[383,14128+25]..[383,14128+66])
Pexp_fun
Nolabel
None
pattern (typing/typedecl.ml[383,14128+30]..[383,14128+32])
  Ppat_var "cd" (typing/typedecl.ml[383,14128+30]..[383,14128+32])
expression (typing/typedecl.ml[383,14128+36]..[383,14128+65])
  Pexp_apply
  expression (typing/typedecl.ml[383,14128+48]..[383,14128+50])
    Pexp_ident "<>" (typing/typedecl.ml[383,14128+48]..[383,14128+50])
  [
    <arg>
    Nolabel
      expression (typing/typedecl.ml[383,14128+36]..[383,14128+47])
        Pexp_field
        expression (typing/typedecl.ml[383,14128+36]..[383,14128+38])
          Pexp_ident "cd" (typing/typedecl.ml[383,14128+36]..[383,14128+38])
        "pcd_args" (typing/typedecl.ml[383,14128+39]..[383,14128+47])
    <arg>
    Nolabel
      expression (typing/typedecl.ml[383,14128+51]..[383,14128+65])
        Pexp_construct "Pcstr_tuple" (typing/typedecl.ml[383,14128+51]..[383,14128+62])
        Some
          expression (typing/typedecl.ml[383,14128+63]..[383,14128+65])
            Pexp_construct "[]" (typing/typedecl.ml[383,14128+63]..[383,14128+65])
            None
  ]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[383,14128+67]..[383,14128+73])
Pexp_ident "scstrs" (typing/typedecl.ml[383,14128+67]..[383,14128+73])
                                                                  ]
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[384,14203+13]..[384,14203+33])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[384,14203+29]..[384,14203+30])
                                                              Pexp_ident "+" (typing/typedecl.ml[384,14203+29]..[384,14203+30])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[384,14203+14]..[384,14203+28])
                                                                  Pexp_ident "Config.max_tag" (typing/typedecl.ml[384,14203+14]..[384,14203+28])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[384,14203+31]..[384,14203+32])
                                                                  Pexp_constant PConst_int (1,None)
                                                            ]
                                                      ]
                                                    expression (typing/typedecl.ml[385,14242+10]..[385,14242+62])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[385,14242+10]..[385,14242+15])
                                                        Pexp_ident "raise" (typing/typedecl.ml[385,14242+10]..[385,14242+15])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[385,14242+15]..[385,14242+62])
                                                            Pexp_construct "Error" (typing/typedecl.ml[385,14242+16]..[385,14242+21])
                                                            Some
                                                              expression (typing/typedecl.ml[385,14242+21]..[385,14242+61])
                                                                Pexp_tuple
                                                                [
                                                                  expression (typing/typedecl.ml[385,14242+22]..[385,14242+37])
                                                                    Pexp_field
                                                                    expression (typing/typedecl.ml[385,14242+22]..[385,14242+27])
                                                                      Pexp_ident "sdecl" (typing/typedecl.ml[385,14242+22]..[385,14242+27])
                                                                    "ptype_loc" (typing/typedecl.ml[385,14242+28]..[385,14242+37])
                                                                  expression (typing/typedecl.ml[385,14242+39]..[385,14242+60])
                                                                    Pexp_construct "Too_many_constructors" (typing/typedecl.ml[385,14242+39]..[385,14242+60])
                                                                    None
                                                                ]
                                                      ]
                                                    None
                                                  expression (typing/typedecl.ml[386,14306+8]..[417,15515+57])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typedecl.ml[386,14306+12]..[386,14306+21])
                                                          Ppat_var "make_cstr" (typing/typedecl.ml[386,14306+12]..[386,14306+21])
                                                        expression (typing/typedecl.ml[386,14306+22]..[409,15193+23]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (typing/typedecl.ml[386,14306+22]..[386,14306+27])
                                                            Ppat_var "scstr" (typing/typedecl.ml[386,14306+22]..[386,14306+27])
                                                          expression (typing/typedecl.ml[387,14336+10]..[409,15193+23])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (typing/typedecl.ml[387,14336+14]..[387,14336+18])
                                                                  Ppat_var "name" (typing/typedecl.ml[387,14336+14]..[387,14336+18])
                                                                expression (typing/typedecl.ml[387,14336+21]..[387,14336+58])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[387,14336+21]..[387,14336+39])
                                                                    Pexp_ident "Ident.create_local" (typing/typedecl.ml[387,14336+21]..[387,14336+39])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[387,14336+40]..[387,14336+58])
Pexp_field
expression (typing/typedecl.ml[387,14336+40]..[387,14336+54])
  Pexp_field
  expression (typing/typedecl.ml[387,14336+40]..[387,14336+45])
    Pexp_ident "scstr" (typing/typedecl.ml[387,14336+40]..[387,14336+45])
  "pcd_name" (typing/typedecl.ml[387,14336+46]..[387,14336+54])
"txt" (typing/typedecl.ml[387,14336+55]..[387,14336+58])
                                                                  ]
                                                            ]
                                                            expression (typing/typedecl.ml[388,14398+10]..[409,15193+23])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (typing/typedecl.ml[388,14398+14]..[388,14398+46])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (typing/typedecl.ml[388,14398+14]..[388,14398+19])
Ppat_var "targs" (typing/typedecl.ml[388,14398+14]..[388,14398+19])
                                                                      pattern (typing/typedecl.ml[388,14398+21]..[388,14398+30])
Ppat_var "tret_type" (typing/typedecl.ml[388,14398+21]..[388,14398+30])
                                                                      pattern (typing/typedecl.ml[388,14398+32]..[388,14398+36])
Ppat_var "args" (typing/typedecl.ml[388,14398+32]..[388,14398+36])
                                                                      pattern (typing/typedecl.ml[388,14398+38]..[388,14398+46])
Ppat_var "ret_type" (typing/typedecl.ml[388,14398+38]..[388,14398+46])
                                                                    ]
                                                                  expression (typing/typedecl.ml[389,14447+12]..[390,14518+72])
                                                                    Pexp_apply
                                                                    expression (typing/typedecl.ml[389,14447+12]..[389,14447+28])
                                                                      Pexp_ident "make_constructor" (typing/typedecl.ml[389,14447+12]..[389,14447+28])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[389,14447+29]..[389,14447+32])
  Pexp_ident "env" (typing/typedecl.ml[389,14447+29]..[389,14447+32])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[389,14447+33]..[389,14447+46])
  Pexp_field
  expression (typing/typedecl.ml[389,14447+33]..[389,14447+38])
    Pexp_ident "scstr" (typing/typedecl.ml[389,14447+33]..[389,14447+38])
  "pcd_loc" (typing/typedecl.ml[389,14447+39]..[389,14447+46])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[389,14447+47]..[389,14447+63])
  Pexp_construct "Path.Pident" (typing/typedecl.ml[389,14447+48]..[389,14447+59])
  Some
    expression (typing/typedecl.ml[389,14447+60]..[389,14447+62])
      Pexp_ident "id" (typing/typedecl.ml[389,14447+60]..[389,14447+62])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[389,14447+64]..[389,14447+70])
  Pexp_ident "params" (typing/typedecl.ml[389,14447+64]..[389,14447+70])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[390,14518+29]..[390,14518+43])
  Pexp_field
  expression (typing/typedecl.ml[390,14518+29]..[390,14518+34])
    Pexp_ident "scstr" (typing/typedecl.ml[390,14518+29]..[390,14518+34])
  "pcd_vars" (typing/typedecl.ml[390,14518+35]..[390,14518+43])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[390,14518+44]..[390,14518+58])
  Pexp_field
  expression (typing/typedecl.ml[390,14518+44]..[390,14518+49])
    Pexp_ident "scstr" (typing/typedecl.ml[390,14518+44]..[390,14518+49])
  "pcd_args" (typing/typedecl.ml[390,14518+50]..[390,14518+58])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[390,14518+59]..[390,14518+72])
  Pexp_field
  expression (typing/typedecl.ml[390,14518+59]..[390,14518+64])
    Pexp_ident "scstr" (typing/typedecl.ml[390,14518+59]..[390,14518+64])
  "pcd_res" (typing/typedecl.ml[390,14518+65]..[390,14518+72])
                                                                    ]
                                                              ]
                                                              expression (typing/typedecl.ml[392,14604+10]..[409,15193+23])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (typing/typedecl.ml[392,14604+14]..[392,14604+19])
                                                                      Ppat_var "tcstr" (typing/typedecl.ml[392,14604+14]..[392,14604+19])
                                                                    expression (typing/typedecl.ml[393,14626+12]..[399,14837+52])
                                                                      Pexp_record
                                                                      [
"cd_id" (typing/typedecl.ml[393,14626+14]..[393,14626+19])
  expression (typing/typedecl.ml[393,14626+22]..[393,14626+26])
    Pexp_ident "name" (typing/typedecl.ml[393,14626+22]..[393,14626+26])
"cd_name" (typing/typedecl.ml[394,14654+14]..[394,14654+21])
  expression (typing/typedecl.ml[394,14654+24]..[394,14654+38])
    Pexp_field
    expression (typing/typedecl.ml[394,14654+24]..[394,14654+29])
      Pexp_ident "scstr" (typing/typedecl.ml[394,14654+24]..[394,14654+29])
    "pcd_name" (typing/typedecl.ml[394,14654+30]..[394,14654+38])
"cd_vars" (typing/typedecl.ml[395,14694+14]..[395,14694+21])
  expression (typing/typedecl.ml[395,14694+24]..[395,14694+38])
    Pexp_field
    expression (typing/typedecl.ml[395,14694+24]..[395,14694+29])
      Pexp_ident "scstr" (typing/typedecl.ml[395,14694+24]..[395,14694+29])
    "pcd_vars" (typing/typedecl.ml[395,14694+30]..[395,14694+38])
"cd_args" (typing/typedecl.ml[396,14734+14]..[396,14734+21])
  expression (typing/typedecl.ml[396,14734+24]..[396,14734+29])
    Pexp_ident "targs" (typing/typedecl.ml[396,14734+24]..[396,14734+29])
"cd_res" (typing/typedecl.ml[397,14765+14]..[397,14765+20])
  expression (typing/typedecl.ml[397,14765+23]..[397,14765+32])
    Pexp_ident "tret_type" (typing/typedecl.ml[397,14765+23]..[397,14765+32])
"cd_loc" (typing/typedecl.ml[398,14799+14]..[398,14799+20])
  expression (typing/typedecl.ml[398,14799+23]..[398,14799+36])
    Pexp_field
    expression (typing/typedecl.ml[398,14799+23]..[398,14799+28])
      Pexp_ident "scstr" (typing/typedecl.ml[398,14799+23]..[398,14799+28])
    "pcd_loc" (typing/typedecl.ml[398,14799+29]..[398,14799+36])
"cd_attributes" (typing/typedecl.ml[399,14837+14]..[399,14837+27])
  expression (typing/typedecl.ml[399,14837+30]..[399,14837+50])
    Pexp_field
    expression (typing/typedecl.ml[399,14837+30]..[399,14837+35])
      Pexp_ident "scstr" (typing/typedecl.ml[399,14837+30]..[399,14837+35])
    "pcd_attributes" (typing/typedecl.ml[399,14837+36]..[399,14837+50])
                                                                      ]
                                                                      None
                                                                ]
                                                                expression (typing/typedecl.ml[401,14903+10]..[409,15193+23])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (typing/typedecl.ml[401,14903+14]..[401,14903+18])
Ppat_var "cstr" (typing/typedecl.ml[401,14903+14]..[401,14903+18])
                                                                      expression (typing/typedecl.ml[402,14924+12]..[407,15111+68])
Pexp_record
[
  "Types.cd_id" (typing/typedecl.ml[402,14924+14]..[402,14924+25])
    expression (typing/typedecl.ml[402,14924+28]..[402,14924+32])
      Pexp_ident "name" (typing/typedecl.ml[402,14924+28]..[402,14924+32])
  "cd_args" (typing/typedecl.ml[403,14958+14]..[403,14958+21])
    expression (typing/typedecl.ml[403,14958+24]..[403,14958+28])
      Pexp_ident "args" (typing/typedecl.ml[403,14958+24]..[403,14958+28])
  "cd_res" (typing/typedecl.ml[404,14988+14]..[404,14988+20])
    expression (typing/typedecl.ml[404,14988+23]..[404,14988+31])
      Pexp_ident "ret_type" (typing/typedecl.ml[404,14988+23]..[404,14988+31])
  "cd_loc" (typing/typedecl.ml[405,15021+14]..[405,15021+20])
    expression (typing/typedecl.ml[405,15021+23]..[405,15021+36])
      Pexp_field
      expression (typing/typedecl.ml[405,15021+23]..[405,15021+28])
        Pexp_ident "scstr" (typing/typedecl.ml[405,15021+23]..[405,15021+28])
      "pcd_loc" (typing/typedecl.ml[405,15021+29]..[405,15021+36])
  "cd_attributes" (typing/typedecl.ml[406,15059+14]..[406,15059+27])
    expression (typing/typedecl.ml[406,15059+30]..[406,15059+50])
      Pexp_field
      expression (typing/typedecl.ml[406,15059+30]..[406,15059+35])
        Pexp_ident "scstr" (typing/typedecl.ml[406,15059+30]..[406,15059+35])
      "pcd_attributes" (typing/typedecl.ml[406,15059+36]..[406,15059+50])
  "cd_uid" (typing/typedecl.ml[407,15111+14]..[407,15111+20])
    expression (typing/typedecl.ml[407,15111+23]..[407,15111+66])
      Pexp_apply
      expression (typing/typedecl.ml[407,15111+23]..[407,15111+29])
        Pexp_ident "Uid.mk" (typing/typedecl.ml[407,15111+23]..[407,15111+29])
      [
        <arg>
        Labelled "current_unit"
          expression (typing/typedecl.ml[407,15111+44]..[407,15111+66])
            Pexp_apply
            expression (typing/typedecl.ml[407,15111+45]..[407,15111+62])
              Pexp_ident "Env.get_unit_name" (typing/typedecl.ml[407,15111+45]..[407,15111+62])
            [
              <arg>
              Nolabel
                expression (typing/typedecl.ml[407,15111+63]..[407,15111+65])
                  Pexp_construct "()" (typing/typedecl.ml[407,15111+63]..[407,15111+65])
                  None
            ]
      ]
]
None
                                                                  ]
                                                                  expression (typing/typedecl.ml[409,15193+12]..[409,15193+23])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typedecl.ml[409,15193+12]..[409,15193+17])
Pexp_ident "tcstr" (typing/typedecl.ml[409,15193+12]..[409,15193+17])
                                                                      expression (typing/typedecl.ml[409,15193+19]..[409,15193+23])
Pexp_ident "cstr" (typing/typedecl.ml[409,15193+19]..[409,15193+23])
                                                                    ]
                                                    ]
                                                    expression (typing/typedecl.ml[411,15228+8]..[417,15515+57])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typedecl.ml[411,15228+12]..[411,15228+21])
                                                            Ppat_var "make_cstr" (typing/typedecl.ml[411,15228+12]..[411,15228+21])
                                                          expression (typing/typedecl.ml[411,15228+22]..[413,15322+39]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/typedecl.ml[411,15228+22]..[411,15228+27])
                                                              Ppat_var "scstr" (typing/typedecl.ml[411,15228+22]..[411,15228+27])
                                                            expression (typing/typedecl.ml[412,15258+10]..[413,15322+39])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[412,15258+10]..[412,15258+42])
                                                                Pexp_ident "Builtin_attributes.warning_scope" (typing/typedecl.ml[412,15258+10]..[412,15258+42])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[412,15258+43]..[412,15258+63])
                                                                    Pexp_field
                                                                    expression (typing/typedecl.ml[412,15258+43]..[412,15258+48])
                                                                      Pexp_ident "scstr" (typing/typedecl.ml[412,15258+43]..[412,15258+48])
                                                                    "pcd_attributes" (typing/typedecl.ml[412,15258+49]..[412,15258+63])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[413,15322+12]..[413,15322+39])
                                                                    Pexp_fun
                                                                    Nolabel
                                                                    None
                                                                    pattern (typing/typedecl.ml[413,15322+17]..[413,15322+19])
                                                                      Ppat_construct "()" (typing/typedecl.ml[413,15322+17]..[413,15322+19])
                                                                      None
                                                                    expression (typing/typedecl.ml[413,15322+23]..[413,15322+38])
                                                                      Pexp_apply
                                                                      expression (typing/typedecl.ml[413,15322+23]..[413,15322+32])
Pexp_ident "make_cstr" (typing/typedecl.ml[413,15322+23]..[413,15322+32])
                                                                      [
<arg>
Nolabel
  expression (typing/typedecl.ml[413,15322+33]..[413,15322+38])
    Pexp_ident "scstr" (typing/typedecl.ml[413,15322+33]..[413,15322+38])
                                                                      ]
                                                              ]
                                                      ]
                                                      expression (typing/typedecl.ml[415,15373+8]..[417,15515+57])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (typing/typedecl.ml[415,15373+12]..[415,15373+15])
                                                              Ppat_var "rep" (typing/typedecl.ml[415,15373+12]..[415,15373+15])
                                                            expression (typing/typedecl.ml[415,15373+18]..[415,15373+68])
                                                              Pexp_ifthenelse
                                                              expression (typing/typedecl.ml[415,15373+21]..[415,15373+26])
                                                                Pexp_ident "unbox" (typing/typedecl.ml[415,15373+21]..[415,15373+26])
                                                              expression (typing/typedecl.ml[415,15373+32]..[415,15373+47])
                                                                Pexp_construct "Variant_unboxed" (typing/typedecl.ml[415,15373+32]..[415,15373+47])
                                                                None
                                                              Some
                                                                expression (typing/typedecl.ml[415,15373+53]..[415,15373+68])
                                                                  Pexp_construct "Variant_regular" (typing/typedecl.ml[415,15373+53]..[415,15373+68])
                                                                  None
                                                        ]
                                                        expression (typing/typedecl.ml[416,15445+8]..[417,15515+57])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (typing/typedecl.ml[416,15445+12]..[416,15445+25])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/typedecl.ml[416,15445+12]..[416,15445+18])
                                                                    Ppat_var "tcstrs" (typing/typedecl.ml[416,15445+12]..[416,15445+18])
                                                                  pattern (typing/typedecl.ml[416,15445+20]..[416,15445+25])
                                                                    Ppat_var "cstrs" (typing/typedecl.ml[416,15445+20]..[416,15445+25])
                                                                ]
                                                              expression (typing/typedecl.ml[416,15445+28]..[416,15445+66])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[416,15445+28]..[416,15445+38])
                                                                  Pexp_ident "List.split" (typing/typedecl.ml[416,15445+28]..[416,15445+38])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[416,15445+39]..[416,15445+66])
                                                                      Pexp_apply
                                                                      expression (typing/typedecl.ml[416,15445+40]..[416,15445+48])
Pexp_ident "List.map" (typing/typedecl.ml[416,15445+40]..[416,15445+48])
                                                                      [
<arg>
Nolabel
  expression (typing/typedecl.ml[416,15445+49]..[416,15445+58])
    Pexp_ident "make_cstr" (typing/typedecl.ml[416,15445+49]..[416,15445+58])
<arg>
Nolabel
  expression (typing/typedecl.ml[416,15445+59]..[416,15445+65])
    Pexp_ident "scstrs" (typing/typedecl.ml[416,15445+59]..[416,15445+65])
                                                                      ]
                                                                ]
                                                          ]
                                                          expression (typing/typedecl.ml[417,15515+10]..[417,15515+57])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typedecl.ml[417,15515+10]..[417,15515+30])
                                                                Pexp_construct "Ttype_variant" (typing/typedecl.ml[417,15515+10]..[417,15515+23])
                                                                Some
                                                                  expression (typing/typedecl.ml[417,15515+24]..[417,15515+30])
                                                                    Pexp_ident "tcstrs" (typing/typedecl.ml[417,15515+24]..[417,15515+30])
                                                              expression (typing/typedecl.ml[417,15515+32]..[417,15515+57])
                                                                Pexp_construct "Type_variant" (typing/typedecl.ml[417,15515+32]..[417,15515+44])
                                                                Some
                                                                  expression (typing/typedecl.ml[417,15515+45]..[417,15515+57])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typedecl.ml[417,15515+46]..[417,15515+51])
Pexp_ident "cstrs" (typing/typedecl.ml[417,15515+46]..[417,15515+51])
                                                                      expression (typing/typedecl.ml[417,15515+53]..[417,15515+56])
Pexp_ident "rep" (typing/typedecl.ml[417,15515+53]..[417,15515+56])
                                                                    ]
                                                            ]
                                        <case>
                                          pattern (typing/typedecl.ml[418,15573+8]..[418,15573+25])
                                            Ppat_construct "Ptype_record" (typing/typedecl.ml[418,15573+8]..[418,15573+20])
                                            Some
                                              []
                                              pattern (typing/typedecl.ml[418,15573+21]..[418,15573+25])
                                                Ppat_var "lbls" (typing/typedecl.ml[418,15573+21]..[418,15573+25])
                                          expression (typing/typedecl.ml[419,15602+10]..[426,15887+52])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typedecl.ml[419,15602+14]..[419,15602+25])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typedecl.ml[419,15602+14]..[419,15602+18])
                                                      Ppat_var "lbls" (typing/typedecl.ml[419,15602+14]..[419,15602+18])
                                                    pattern (typing/typedecl.ml[419,15602+20]..[419,15602+25])
                                                      Ppat_var "lbls'" (typing/typedecl.ml[419,15602+20]..[419,15602+25])
                                                  ]
                                                expression (typing/typedecl.ml[419,15602+28]..[419,15602+60])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[419,15602+28]..[419,15602+41])
                                                    Pexp_ident "transl_labels" (typing/typedecl.ml[419,15602+28]..[419,15602+41])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[419,15602+42]..[419,15602+45])
                                                        Pexp_ident "env" (typing/typedecl.ml[419,15602+42]..[419,15602+45])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[419,15602+46]..[419,15602+50])
                                                        Pexp_construct "None" (typing/typedecl.ml[419,15602+46]..[419,15602+50])
                                                        None
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[419,15602+51]..[419,15602+55])
                                                        Pexp_construct "true" (typing/typedecl.ml[419,15602+51]..[419,15602+55])
                                                        None
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[419,15602+56]..[419,15602+60])
                                                        Pexp_ident "lbls" (typing/typedecl.ml[419,15602+56]..[419,15602+60])
                                                  ]
                                            ]
                                            expression (typing/typedecl.ml[420,15666+10]..[426,15887+52])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typedecl.ml[420,15666+14]..[420,15666+17])
                                                    Ppat_var "rep" (typing/typedecl.ml[420,15666+14]..[420,15666+17])
                                                  expression (typing/typedecl.ml[421,15686+12]..[424,15842+31])
                                                    Pexp_ifthenelse
                                                    expression (typing/typedecl.ml[421,15686+15]..[421,15686+20])
                                                      Pexp_ident "unbox" (typing/typedecl.ml[421,15686+15]..[421,15686+20])
                                                    expression (typing/typedecl.ml[421,15686+26]..[421,15686+46])
                                                      Pexp_construct "Record_unboxed" (typing/typedecl.ml[421,15686+26]..[421,15686+40])
                                                      Some
                                                        expression (typing/typedecl.ml[421,15686+41]..[421,15686+46])
                                                          Pexp_construct "false" (typing/typedecl.ml[421,15686+41]..[421,15686+46])
                                                          None
                                                    Some
                                                      expression (typing/typedecl.ml[422,15733+17]..[424,15842+31])
                                                        Pexp_ifthenelse
                                                        expression (typing/typedecl.ml[422,15733+20]..[422,15733+78])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[422,15733+20]..[422,15733+32])
                                                            Pexp_ident "List.for_all" (typing/typedecl.ml[422,15733+20]..[422,15733+32])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[422,15733+33]..[422,15733+72])
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (typing/typedecl.ml[422,15733+38]..[422,15733+39])
                                                                  Ppat_var "l" (typing/typedecl.ml[422,15733+38]..[422,15733+39])
                                                                expression (typing/typedecl.ml[422,15733+43]..[422,15733+71])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[422,15733+43]..[422,15733+51])
                                                                    Pexp_ident "is_float" (typing/typedecl.ml[422,15733+43]..[422,15733+51])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[422,15733+52]..[422,15733+55])
Pexp_ident "env" (typing/typedecl.ml[422,15733+52]..[422,15733+55])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[422,15733+56]..[422,15733+71])
Pexp_field
expression (typing/typedecl.ml[422,15733+56]..[422,15733+57])
  Pexp_ident "l" (typing/typedecl.ml[422,15733+56]..[422,15733+57])
"Types.ld_type" (typing/typedecl.ml[422,15733+58]..[422,15733+71])
                                                                  ]
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[422,15733+73]..[422,15733+78])
                                                                Pexp_ident "lbls'" (typing/typedecl.ml[422,15733+73]..[422,15733+78])
                                                          ]
                                                        expression (typing/typedecl.ml[423,15812+17]..[423,15812+29])
                                                          Pexp_construct "Record_float" (typing/typedecl.ml[423,15812+17]..[423,15812+29])
                                                          None
                                                        Some
                                                          expression (typing/typedecl.ml[424,15842+17]..[424,15842+31])
                                                            Pexp_construct "Record_regular" (typing/typedecl.ml[424,15842+17]..[424,15842+31])
                                                            None
                                              ]
                                              expression (typing/typedecl.ml[426,15887+10]..[426,15887+52])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typedecl.ml[426,15887+10]..[426,15887+27])
                                                    Pexp_construct "Ttype_record" (typing/typedecl.ml[426,15887+10]..[426,15887+22])
                                                    Some
                                                      expression (typing/typedecl.ml[426,15887+23]..[426,15887+27])
                                                        Pexp_ident "lbls" (typing/typedecl.ml[426,15887+23]..[426,15887+27])
                                                  expression (typing/typedecl.ml[426,15887+29]..[426,15887+52])
                                                    Pexp_construct "Type_record" (typing/typedecl.ml[426,15887+29]..[426,15887+40])
                                                    Some
                                                      expression (typing/typedecl.ml[426,15887+40]..[426,15887+52])
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typedecl.ml[426,15887+41]..[426,15887+46])
                                                            Pexp_ident "lbls'" (typing/typedecl.ml[426,15887+41]..[426,15887+46])
                                                          expression (typing/typedecl.ml[426,15887+48]..[426,15887+51])
                                                            Pexp_ident "rep" (typing/typedecl.ml[426,15887+48]..[426,15887+51])
                                                        ]
                                                ]
                                        <case>
                                          pattern (typing/typedecl.ml[427,15940+8]..[427,15940+18])
                                            Ppat_construct "Ptype_open" (typing/typedecl.ml[427,15940+8]..[427,15940+18])
                                            None
                                          expression (typing/typedecl.ml[427,15940+22]..[427,15940+43])
                                            Pexp_tuple
                                            [
                                              expression (typing/typedecl.ml[427,15940+22]..[427,15940+32])
                                                Pexp_construct "Ttype_open" (typing/typedecl.ml[427,15940+22]..[427,15940+32])
                                                None
                                              expression (typing/typedecl.ml[427,15940+34]..[427,15940+43])
                                                Pexp_construct "Type_open" (typing/typedecl.ml[427,15940+34]..[427,15940+43])
                                                None
                                            ]
                                      ]
                                ]
                                expression (typing/typedecl.ml[429,15993+4]..[483,17779+5])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typedecl.ml[429,15993+8]..[429,15993+19])
                                        Ppat_tuple
                                        [
                                          pattern (typing/typedecl.ml[429,15993+9]..[429,15993+13])
                                            Ppat_var "tman" (typing/typedecl.ml[429,15993+9]..[429,15993+13])
                                          pattern (typing/typedecl.ml[429,15993+15]..[429,15993+18])
                                            Ppat_var "man" (typing/typedecl.ml[429,15993+15]..[429,15993+18])
                                        ]
                                      expression (typing/typedecl.ml[429,15993+22]..[434,16199+36])
                                        Pexp_match
                                        expression (typing/typedecl.ml[429,15993+28]..[429,15993+48])
                                          Pexp_field
                                          expression (typing/typedecl.ml[429,15993+28]..[429,15993+33])
                                            Pexp_ident "sdecl" (typing/typedecl.ml[429,15993+28]..[429,15993+33])
                                          "ptype_manifest" (typing/typedecl.ml[429,15993+34]..[429,15993+48])
                                        [
                                          <case>
                                            pattern (typing/typedecl.ml[430,16047+8]..[430,16047+12])
                                              Ppat_construct "None" (typing/typedecl.ml[430,16047+8]..[430,16047+12])
                                              None
                                            expression (typing/typedecl.ml[430,16047+16]..[430,16047+26])
                                              Pexp_tuple
                                              [
                                                expression (typing/typedecl.ml[430,16047+16]..[430,16047+20])
                                                  Pexp_construct "None" (typing/typedecl.ml[430,16047+16]..[430,16047+20])
                                                  None
                                                expression (typing/typedecl.ml[430,16047+22]..[430,16047+26])
                                                  Pexp_construct "None" (typing/typedecl.ml[430,16047+22]..[430,16047+26])
                                                  None
                                              ]
                                          <case>
                                            pattern (typing/typedecl.ml[431,16074+8]..[431,16074+16])
                                              Ppat_construct "Some" (typing/typedecl.ml[431,16074+8]..[431,16074+12])
                                              Some
                                                []
                                                pattern (typing/typedecl.ml[431,16074+13]..[431,16074+16])
                                                  Ppat_var "sty" (typing/typedecl.ml[431,16074+13]..[431,16074+16])
                                            expression (typing/typedecl.ml[432,16094+8]..[434,16199+36])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typedecl.ml[432,16094+12]..[432,16094+18])
                                                    Ppat_var "no_row" (typing/typedecl.ml[432,16094+12]..[432,16094+18])
                                                  expression (typing/typedecl.ml[432,16094+21]..[432,16094+46])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[432,16094+21]..[432,16094+24])
                                                      Pexp_ident "not" (typing/typedecl.ml[432,16094+21]..[432,16094+24])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[432,16094+25]..[432,16094+46])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[432,16094+26]..[432,16094+39])
                                                            Pexp_ident "is_fixed_type" (typing/typedecl.ml[432,16094+26]..[432,16094+39])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[432,16094+40]..[432,16094+45])
                                                                Pexp_ident "sdecl" (typing/typedecl.ml[432,16094+40]..[432,16094+45])
                                                          ]
                                                    ]
                                              ]
                                              expression (typing/typedecl.ml[433,16144+8]..[434,16199+36])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typedecl.ml[433,16144+12]..[433,16144+15])
                                                      Ppat_var "cty" (typing/typedecl.ml[433,16144+12]..[433,16144+15])
                                                    expression (typing/typedecl.ml[433,16144+18]..[433,16144+51])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[433,16144+18]..[433,16144+36])
                                                        Pexp_ident "transl_simple_type" (typing/typedecl.ml[433,16144+18]..[433,16144+36])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[433,16144+37]..[433,16144+40])
                                                            Pexp_ident "env" (typing/typedecl.ml[433,16144+37]..[433,16144+40])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[433,16144+41]..[433,16144+47])
                                                            Pexp_ident "no_row" (typing/typedecl.ml[433,16144+41]..[433,16144+47])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[433,16144+48]..[433,16144+51])
                                                            Pexp_ident "sty" (typing/typedecl.ml[433,16144+48]..[433,16144+51])
                                                      ]
                                                ]
                                                expression (typing/typedecl.ml[434,16199+8]..[434,16199+36])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typedecl.ml[434,16199+8]..[434,16199+16])
                                                      Pexp_construct "Some" (typing/typedecl.ml[434,16199+8]..[434,16199+12])
                                                      Some
                                                        expression (typing/typedecl.ml[434,16199+13]..[434,16199+16])
                                                          Pexp_ident "cty" (typing/typedecl.ml[434,16199+13]..[434,16199+16])
                                                    expression (typing/typedecl.ml[434,16199+18]..[434,16199+36])
                                                      Pexp_construct "Some" (typing/typedecl.ml[434,16199+18]..[434,16199+22])
                                                      Some
                                                        expression (typing/typedecl.ml[434,16199+23]..[434,16199+36])
                                                          Pexp_field
                                                          expression (typing/typedecl.ml[434,16199+23]..[434,16199+26])
                                                            Pexp_ident "cty" (typing/typedecl.ml[434,16199+23]..[434,16199+26])
                                                          "ctyp_type" (typing/typedecl.ml[434,16199+27]..[434,16199+36])
                                                  ]
                                        ]
                                  ]
                                  expression (typing/typedecl.ml[436,16243+4]..[483,17779+5])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typedecl.ml[436,16243+8]..[436,16243+13])
                                          Ppat_var "arity" (typing/typedecl.ml[436,16243+8]..[436,16243+13])
                                        expression (typing/typedecl.ml[436,16243+16]..[436,16243+34])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[436,16243+16]..[436,16243+27])
                                            Pexp_ident "List.length" (typing/typedecl.ml[436,16243+16]..[436,16243+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[436,16243+28]..[436,16243+34])
                                                Pexp_ident "params" (typing/typedecl.ml[436,16243+28]..[436,16243+34])
                                          ]
                                    ]
                                    expression (typing/typedecl.ml[437,16281+4]..[483,17779+5])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typedecl.ml[437,16281+8]..[437,16281+12])
                                            Ppat_var "decl" (typing/typedecl.ml[437,16281+8]..[437,16281+12])
                                          expression (typing/typedecl.ml[438,16296+6]..[452,16878+7])
                                            Pexp_record
                                            [
                                              "type_params" (typing/typedecl.ml[438,16296+8]..[438,16296+19])
                                                expression (typing/typedecl.ml[438,16296+22]..[438,16296+28])
                                                  Pexp_ident "params" (typing/typedecl.ml[438,16296+22]..[438,16296+28])
                                              "type_arity" (typing/typedecl.ml[439,16326+8]..[439,16326+18])
                                                expression (typing/typedecl.ml[439,16326+21]..[439,16326+26])
                                                  Pexp_ident "arity" (typing/typedecl.ml[439,16326+21]..[439,16326+26])
                                              "type_kind" (typing/typedecl.ml[440,16354+8]..[440,16354+17])
                                                expression (typing/typedecl.ml[440,16354+20]..[440,16354+24])
                                                  Pexp_ident "kind" (typing/typedecl.ml[440,16354+20]..[440,16354+24])
                                              "type_private" (typing/typedecl.ml[441,16380+8]..[441,16380+20])
                                                expression (typing/typedecl.ml[441,16380+23]..[441,16380+42])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[441,16380+23]..[441,16380+28])
                                                    Pexp_ident "sdecl" (typing/typedecl.ml[441,16380+23]..[441,16380+28])
                                                  "ptype_private" (typing/typedecl.ml[441,16380+29]..[441,16380+42])
                                              "type_manifest" (typing/typedecl.ml[442,16424+8]..[442,16424+21])
                                                expression (typing/typedecl.ml[442,16424+24]..[442,16424+27])
                                                  Pexp_ident "man" (typing/typedecl.ml[442,16424+24]..[442,16424+27])
                                              "type_variance" (typing/typedecl.ml[443,16453+8]..[443,16453+21])
                                                expression (typing/typedecl.ml[443,16453+24]..[443,16453+74])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[443,16453+24]..[443,16453+50])
                                                    Pexp_ident "Variance.unknown_signature" (typing/typedecl.ml[443,16453+24]..[443,16453+50])
                                                  [
                                                    <arg>
                                                    Labelled "injective"
                                                      expression (typing/typedecl.ml[443,16453+62]..[443,16453+67])
                                                        Pexp_construct "false" (typing/typedecl.ml[443,16453+62]..[443,16453+67])
                                                        None
                                                    <arg>
                                                    Labelled "arity"
                                                      expression (typing/typedecl.ml[443,16453+69]..[443,16453+74])
                                                        Pexp_ident "arity" (typing/typedecl.ml[443,16453+69]..[443,16453+74])
                                                  ]
                                              "type_separability" (typing/typedecl.ml[444,16529+8]..[444,16529+25])
                                                expression (typing/typedecl.ml[444,16529+28]..[444,16529+71])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[444,16529+28]..[444,16529+64])
                                                    Pexp_ident "Types.Separability.default_signature" (typing/typedecl.ml[444,16529+28]..[444,16529+64])
                                                  [
                                                    <arg>
                                                    Labelled "arity"
                                                      expression (typing/typedecl.ml[444,16529+66]..[444,16529+71])
                                                        Pexp_ident "arity" (typing/typedecl.ml[444,16529+66]..[444,16529+71])
                                                  ]
                                              "type_is_newtype" (typing/typedecl.ml[445,16602+8]..[445,16602+23])
                                                expression (typing/typedecl.ml[445,16602+26]..[445,16602+31])
                                                  Pexp_construct "false" (typing/typedecl.ml[445,16602+26]..[445,16602+31])
                                                  None
                                              "type_expansion_scope" (typing/typedecl.ml[446,16635+8]..[446,16635+28])
                                                expression (typing/typedecl.ml[446,16635+31]..[446,16635+49])
                                                  Pexp_ident "Btype.lowest_level" (typing/typedecl.ml[446,16635+31]..[446,16635+49])
                                              "type_loc" (typing/typedecl.ml[447,16686+8]..[447,16686+16])
                                                expression (typing/typedecl.ml[447,16686+19]..[447,16686+34])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[447,16686+19]..[447,16686+24])
                                                    Pexp_ident "sdecl" (typing/typedecl.ml[447,16686+19]..[447,16686+24])
                                                  "ptype_loc" (typing/typedecl.ml[447,16686+25]..[447,16686+34])
                                              "type_attributes" (typing/typedecl.ml[448,16722+8]..[448,16722+23])
                                                expression (typing/typedecl.ml[448,16722+26]..[448,16722+48])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[448,16722+26]..[448,16722+31])
                                                    Pexp_ident "sdecl" (typing/typedecl.ml[448,16722+26]..[448,16722+31])
                                                  "ptype_attributes" (typing/typedecl.ml[448,16722+32]..[448,16722+48])
                                              "type_immediate" (typing/typedecl.ml[449,16772+8]..[449,16772+22])
                                                expression (typing/typedecl.ml[449,16772+25]..[449,16772+32])
                                                  Pexp_construct "Unknown" (typing/typedecl.ml[449,16772+25]..[449,16772+32])
                                                  None
                                              "type_unboxed_default" (typing/typedecl.ml[450,16806+8]..[450,16806+28])
                                                expression (typing/typedecl.ml[450,16806+31]..[450,16806+46])
                                                  Pexp_ident "unboxed_default" (typing/typedecl.ml[450,16806+31]..[450,16806+46])
                                              "type_uid" (typing/typedecl.ml[451,16854+8]..[451,16854+16])
                                                expression (typing/typedecl.ml[451,16854+19]..[451,16854+22])
                                                  Pexp_ident "uid" (typing/typedecl.ml[451,16854+19]..[451,16854+22])
                                            ]
                                            None
                                      ]
                                      expression (typing/typedecl.ml[455,16916+4]..[483,17779+5])
                                        Pexp_sequence
                                        expression (typing/typedecl.ml[455,16916+4]..[461,17155+11])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[455,16916+4]..[455,16916+13])
                                            Pexp_ident "List.iter" (typing/typedecl.ml[455,16916+4]..[455,16916+13])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[456,16930+6]..[460,17090+64])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/typedecl.ml[456,16930+11]..[456,16930+27])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typedecl.ml[456,16930+12]..[456,16930+15])
                                                      Ppat_var "cty" (typing/typedecl.ml[456,16930+12]..[456,16930+15])
                                                    pattern (typing/typedecl.ml[456,16930+17]..[456,16930+21])
                                                      Ppat_var "cty'" (typing/typedecl.ml[456,16930+17]..[456,16930+21])
                                                    pattern (typing/typedecl.ml[456,16930+23]..[456,16930+26])
                                                      Ppat_var "loc" (typing/typedecl.ml[456,16930+23]..[456,16930+26])
                                                  ]
                                                expression (typing/typedecl.ml[457,16961+8]..[460,17090+63])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typedecl.ml[457,16961+12]..[457,16961+14])
                                                        Ppat_var "ty" (typing/typedecl.ml[457,16961+12]..[457,16961+14])
                                                      expression (typing/typedecl.ml[457,16961+17]..[457,16961+30])
                                                        Pexp_field
                                                        expression (typing/typedecl.ml[457,16961+17]..[457,16961+20])
                                                          Pexp_ident "cty" (typing/typedecl.ml[457,16961+17]..[457,16961+20])
                                                        "ctyp_type" (typing/typedecl.ml[457,16961+21]..[457,16961+30])
                                                  ]
                                                  expression (typing/typedecl.ml[458,16995+8]..[460,17090+63])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typedecl.ml[458,16995+12]..[458,16995+15])
                                                          Ppat_var "ty'" (typing/typedecl.ml[458,16995+12]..[458,16995+15])
                                                        expression (typing/typedecl.ml[458,16995+18]..[458,16995+32])
                                                          Pexp_field
                                                          expression (typing/typedecl.ml[458,16995+18]..[458,16995+22])
                                                            Pexp_ident "cty'" (typing/typedecl.ml[458,16995+18]..[458,16995+22])
                                                          "ctyp_type" (typing/typedecl.ml[458,16995+23]..[458,16995+32])
                                                    ]
                                                    expression (typing/typedecl.ml[459,17031+8]..[460,17090+63])
                                                      Pexp_try
                                                      expression (typing/typedecl.ml[459,17031+12]..[459,17031+34])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[459,17031+12]..[459,17031+23])
                                                          Pexp_ident "Ctype.unify" (typing/typedecl.ml[459,17031+12]..[459,17031+23])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[459,17031+24]..[459,17031+27])
                                                              Pexp_ident "env" (typing/typedecl.ml[459,17031+24]..[459,17031+27])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[459,17031+28]..[459,17031+30])
                                                              Pexp_ident "ty" (typing/typedecl.ml[459,17031+28]..[459,17031+30])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[459,17031+31]..[459,17031+34])
                                                              Pexp_ident "ty'" (typing/typedecl.ml[459,17031+31]..[459,17031+34])
                                                        ]
                                                      [
                                                        <case>
                                                          pattern (typing/typedecl.ml[459,17031+40]..[459,17031+55])
                                                            Ppat_construct "Ctype.Unify" (typing/typedecl.ml[459,17031+40]..[459,17031+51])
                                                            Some
                                                              []
                                                              pattern (typing/typedecl.ml[459,17031+52]..[459,17031+55])
                                                                Ppat_var "err" (typing/typedecl.ml[459,17031+52]..[459,17031+55])
                                                          expression (typing/typedecl.ml[460,17090+10]..[460,17090+63])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[460,17090+10]..[460,17090+15])
                                                              Pexp_ident "raise" (typing/typedecl.ml[460,17090+10]..[460,17090+15])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[460,17090+15]..[460,17090+63])
                                                                  Pexp_construct "Error" (typing/typedecl.ml[460,17090+16]..[460,17090+21])
                                                                  Some
                                                                    expression (typing/typedecl.ml[460,17090+21]..[460,17090+62])
                                                                      Pexp_tuple
                                                                      [
expression (typing/typedecl.ml[460,17090+22]..[460,17090+25])
  Pexp_ident "loc" (typing/typedecl.ml[460,17090+22]..[460,17090+25])
expression (typing/typedecl.ml[460,17090+27]..[460,17090+61])
  Pexp_construct "Inconsistent_constraint" (typing/typedecl.ml[460,17090+27]..[460,17090+50])
  Some
    expression (typing/typedecl.ml[460,17090+51]..[460,17090+61])
      Pexp_tuple
      [
        expression (typing/typedecl.ml[460,17090+52]..[460,17090+55])
          Pexp_ident "env" (typing/typedecl.ml[460,17090+52]..[460,17090+55])
        expression (typing/typedecl.ml[460,17090+57]..[460,17090+60])
          Pexp_ident "err" (typing/typedecl.ml[460,17090+57]..[460,17090+60])
      ]
                                                                      ]
                                                            ]
                                                      ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[461,17155+6]..[461,17155+11])
                                                Pexp_ident "cstrs" (typing/typedecl.ml[461,17155+6]..[461,17155+11])
                                          ]
                                        expression (typing/typedecl.ml[462,17168+4]..[483,17779+5])
                                          Pexp_sequence
                                          expression (typing/typedecl.ml[462,17168+4]..[462,17168+20])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[462,17168+4]..[462,17168+17])
                                              Pexp_ident "Ctype.end_def" (typing/typedecl.ml[462,17168+4]..[462,17168+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[462,17168+18]..[462,17168+20])
                                                  Pexp_construct "()" (typing/typedecl.ml[462,17168+18]..[462,17168+20])
                                                  None
                                            ]
                                          expression (typing/typedecl.ml[464,17215+4]..[483,17779+5])
                                            Pexp_sequence
                                            expression (typing/typedecl.ml[464,17215+4]..[471,17462+7])
                                              Pexp_ifthenelse
                                              expression (typing/typedecl.ml[464,17215+7]..[464,17215+26])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[464,17215+7]..[464,17215+20])
                                                  Pexp_ident "is_fixed_type" (typing/typedecl.ml[464,17215+7]..[464,17215+20])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[464,17215+21]..[464,17215+26])
                                                      Pexp_ident "sdecl" (typing/typedecl.ml[464,17215+21]..[464,17215+26])
                                                ]
                                              expression (typing/typedecl.ml[464,17215+32]..[471,17462+7])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typedecl.ml[465,17253+10]..[465,17253+14])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typedecl.ml[465,17253+10]..[465,17253+11])
                                                          Ppat_var "p" (typing/typedecl.ml[465,17253+10]..[465,17253+11])
                                                        pattern (typing/typedecl.ml[465,17253+13]..[465,17253+14])
                                                          Ppat_any
                                                      ]
                                                    expression (typing/typedecl.ml[466,17270+8]..[468,17365+38])
                                                      Pexp_try
                                                      expression (typing/typedecl.ml[466,17270+12]..[467,17304+60])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[466,17270+12]..[466,17270+33])
                                                          Pexp_ident "Env.find_type_by_name" (typing/typedecl.ml[466,17270+12]..[466,17270+33])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[467,17304+14]..[467,17304+56])
                                                              Pexp_construct "Longident.Lident" (typing/typedecl.ml[467,17304+15]..[467,17304+31])
                                                              Some
                                                                expression (typing/typedecl.ml[467,17304+31]..[467,17304+55])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[467,17304+46]..[467,17304+47])
                                                                    Pexp_ident "^" (typing/typedecl.ml[467,17304+46]..[467,17304+47])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[467,17304+32]..[467,17304+45])
Pexp_apply
expression (typing/typedecl.ml[467,17304+32]..[467,17304+42])
  Pexp_ident "Ident.name" (typing/typedecl.ml[467,17304+32]..[467,17304+42])
[
  <arg>
  Nolabel
    expression (typing/typedecl.ml[467,17304+43]..[467,17304+45])
      Pexp_ident "id" (typing/typedecl.ml[467,17304+43]..[467,17304+45])
]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[467,17304+48]..[467,17304+54])
Pexp_constant PConst_string("#row",(typing/typedecl.ml[467,17304+49]..[467,17304+53]),None)
                                                                  ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[467,17304+57]..[467,17304+60])
                                                              Pexp_ident "env" (typing/typedecl.ml[467,17304+57]..[467,17304+60])
                                                        ]
                                                      [
                                                        <case>
                                                          pattern (typing/typedecl.ml[468,17365+13]..[468,17365+22])
                                                            Ppat_construct "Not_found" (typing/typedecl.ml[468,17365+13]..[468,17365+22])
                                                            None
                                                          expression (typing/typedecl.ml[468,17365+26]..[468,17365+38])
                                                            Pexp_assert
                                                            expression (typing/typedecl.ml[468,17365+33]..[468,17365+38])
                                                              Pexp_construct "false" (typing/typedecl.ml[468,17365+33]..[468,17365+38])
                                                              None
                                                      ]
                                                ]
                                                expression (typing/typedecl.ml[470,17413+6]..[470,17413+48])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[470,17413+6]..[470,17413+21])
                                                    Pexp_ident "set_private_row" (typing/typedecl.ml[470,17413+6]..[470,17413+21])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[470,17413+22]..[470,17413+25])
                                                        Pexp_ident "env" (typing/typedecl.ml[470,17413+22]..[470,17413+25])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[470,17413+26]..[470,17413+41])
                                                        Pexp_field
                                                        expression (typing/typedecl.ml[470,17413+26]..[470,17413+31])
                                                          Pexp_ident "sdecl" (typing/typedecl.ml[470,17413+26]..[470,17413+31])
                                                        "ptype_loc" (typing/typedecl.ml[470,17413+32]..[470,17413+41])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[470,17413+42]..[470,17413+43])
                                                        Pexp_ident "p" (typing/typedecl.ml[470,17413+42]..[470,17413+43])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[470,17413+44]..[470,17413+48])
                                                        Pexp_ident "decl" (typing/typedecl.ml[470,17413+44]..[470,17413+48])
                                                  ]
                                              None
                                            expression (typing/typedecl.ml[472,17471+4]..[483,17779+5])
                                              Pexp_record
                                              [
                                                "typ_id" (typing/typedecl.ml[473,17477+6]..[473,17477+12])
                                                  expression (typing/typedecl.ml[473,17477+15]..[473,17477+17])
                                                    Pexp_ident "id" (typing/typedecl.ml[473,17477+15]..[473,17477+17])
                                                "typ_name" (typing/typedecl.ml[474,17496+6]..[474,17496+14])
                                                  expression (typing/typedecl.ml[474,17496+17]..[474,17496+33])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[474,17496+17]..[474,17496+22])
                                                      Pexp_ident "sdecl" (typing/typedecl.ml[474,17496+17]..[474,17496+22])
                                                    "ptype_name" (typing/typedecl.ml[474,17496+23]..[474,17496+33])
                                                "typ_params" (typing/typedecl.ml[475,17531+6]..[475,17531+16])
                                                  expression (typing/typedecl.ml[475,17531+19]..[475,17531+26])
                                                    Pexp_ident "tparams" (typing/typedecl.ml[475,17531+19]..[475,17531+26])
                                                "typ_type" (typing/typedecl.ml[476,17559+6]..[476,17559+14])
                                                  expression (typing/typedecl.ml[476,17559+17]..[476,17559+21])
                                                    Pexp_ident "decl" (typing/typedecl.ml[476,17559+17]..[476,17559+21])
                                                "typ_cstrs" (typing/typedecl.ml[477,17582+6]..[477,17582+15])
                                                  expression (typing/typedecl.ml[477,17582+18]..[477,17582+23])
                                                    Pexp_ident "cstrs" (typing/typedecl.ml[477,17582+18]..[477,17582+23])
                                                "typ_loc" (typing/typedecl.ml[478,17607+6]..[478,17607+13])
                                                  expression (typing/typedecl.ml[478,17607+16]..[478,17607+31])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[478,17607+16]..[478,17607+21])
                                                      Pexp_ident "sdecl" (typing/typedecl.ml[478,17607+16]..[478,17607+21])
                                                    "ptype_loc" (typing/typedecl.ml[478,17607+22]..[478,17607+31])
                                                "typ_manifest" (typing/typedecl.ml[479,17640+6]..[479,17640+18])
                                                  expression (typing/typedecl.ml[479,17640+21]..[479,17640+25])
                                                    Pexp_ident "tman" (typing/typedecl.ml[479,17640+21]..[479,17640+25])
                                                "typ_kind" (typing/typedecl.ml[480,17667+6]..[480,17667+14])
                                                  expression (typing/typedecl.ml[480,17667+17]..[480,17667+22])
                                                    Pexp_ident "tkind" (typing/typedecl.ml[480,17667+17]..[480,17667+22])
                                                "typ_private" (typing/typedecl.ml[481,17691+6]..[481,17691+17])
                                                  expression (typing/typedecl.ml[481,17691+20]..[481,17691+39])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[481,17691+20]..[481,17691+25])
                                                      Pexp_ident "sdecl" (typing/typedecl.ml[481,17691+20]..[481,17691+25])
                                                    "ptype_private" (typing/typedecl.ml[481,17691+26]..[481,17691+39])
                                                "typ_attributes" (typing/typedecl.ml[482,17732+6]..[482,17732+20])
                                                  expression (typing/typedecl.ml[482,17732+23]..[482,17732+45])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[482,17732+23]..[482,17732+28])
                                                      Pexp_ident "sdecl" (typing/typedecl.ml[482,17732+23]..[482,17732+28])
                                                    "ptype_attributes" (typing/typedecl.ml[482,17732+29]..[482,17732+45])
                                              ]
                                              None
    ]
  structure_item (typing/typedecl.ml[487,17823+0]..[493,18049+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[487,17823+4]..[487,17823+19])
          Ppat_var "generalize_decl" (typing/typedecl.ml[487,17823+4]..[487,17823+19])
        expression (typing/typedecl.ml[487,17823+20]..[493,18049+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[487,17823+20]..[487,17823+24])
            Ppat_var "decl" (typing/typedecl.ml[487,17823+20]..[487,17823+24])
          expression (typing/typedecl.ml[488,17850+2]..[493,18049+5])
            Pexp_sequence
            expression (typing/typedecl.ml[488,17850+2]..[488,17850+45])
              Pexp_apply
              expression (typing/typedecl.ml[488,17850+2]..[488,17850+11])
                Pexp_ident "List.iter" (typing/typedecl.ml[488,17850+2]..[488,17850+11])
              [
                <arg>
                Nolabel
                  expression (typing/typedecl.ml[488,17850+12]..[488,17850+28])
                    Pexp_ident "Ctype.generalize" (typing/typedecl.ml[488,17850+12]..[488,17850+28])
                <arg>
                Nolabel
                  expression (typing/typedecl.ml[488,17850+29]..[488,17850+45])
                    Pexp_field
                    expression (typing/typedecl.ml[488,17850+29]..[488,17850+33])
                      Pexp_ident "decl" (typing/typedecl.ml[488,17850+29]..[488,17850+33])
                    "type_params" (typing/typedecl.ml[488,17850+34]..[488,17850+45])
              ]
            expression (typing/typedecl.ml[489,17897+2]..[493,18049+5])
              Pexp_sequence
              expression (typing/typedecl.ml[489,17897+2]..[489,17897+59])
                Pexp_apply
                expression (typing/typedecl.ml[489,17897+2]..[489,17897+27])
                  Pexp_ident "Btype.iter_type_expr_kind" (typing/typedecl.ml[489,17897+2]..[489,17897+27])
                [
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[489,17897+28]..[489,17897+44])
                      Pexp_ident "Ctype.generalize" (typing/typedecl.ml[489,17897+28]..[489,17897+44])
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[489,17897+45]..[489,17897+59])
                      Pexp_field
                      expression (typing/typedecl.ml[489,17897+45]..[489,17897+49])
                        Pexp_ident "decl" (typing/typedecl.ml[489,17897+45]..[489,17897+49])
                      "type_kind" (typing/typedecl.ml[489,17897+50]..[489,17897+59])
                ]
              expression (typing/typedecl.ml[490,17958+2]..[493,18049+5])
                Pexp_match
                expression (typing/typedecl.ml[490,17958+14]..[490,17958+32])
                  Pexp_field
                  expression (typing/typedecl.ml[490,17958+14]..[490,17958+18])
                    Pexp_ident "decl" (typing/typedecl.ml[490,17958+14]..[490,17958+18])
                  "type_manifest" (typing/typedecl.ml[490,17958+19]..[490,17958+32])
                [
                  <case>
                    pattern (typing/typedecl.ml[491,17996+4]..[491,17996+8])
                      Ppat_construct "None" (typing/typedecl.ml[491,17996+4]..[491,17996+8])
                      None
                    expression (typing/typedecl.ml[491,17996+15]..[491,17996+17])
                      Pexp_construct "()" (typing/typedecl.ml[491,17996+15]..[491,17996+17])
                      None
                  <case>
                    pattern (typing/typedecl.ml[492,18014+4]..[492,18014+11])
                      Ppat_construct "Some" (typing/typedecl.ml[492,18014+4]..[492,18014+8])
                      Some
                        []
                        pattern (typing/typedecl.ml[492,18014+9]..[492,18014+11])
                          Ppat_var "ty" (typing/typedecl.ml[492,18014+9]..[492,18014+11])
                    expression (typing/typedecl.ml[492,18014+15]..[492,18014+34])
                      Pexp_apply
                      expression (typing/typedecl.ml[492,18014+15]..[492,18014+31])
                        Pexp_ident "Ctype.generalize" (typing/typedecl.ml[492,18014+15]..[492,18014+31])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[492,18014+32]..[492,18014+34])
                            Pexp_ident "ty" (typing/typedecl.ml[492,18014+32]..[492,18014+34])
                      ]
                ]
    ]
  structure_item (typing/typedecl.ml[497,18103+0]..[497,18103+30])
    Pstr_module
    "TypeSet" (typing/typedecl.ml[497,18103+7]..[497,18103+14])
      module_expr (typing/typedecl.ml[497,18103+17]..[497,18103+30])
        Pmod_ident "Btype.TypeSet" (typing/typedecl.ml[497,18103+17]..[497,18103+30])
  structure_item (typing/typedecl.ml[498,18134+0]..[498,18134+30])
    Pstr_module
    "TypeMap" (typing/typedecl.ml[498,18134+7]..[498,18134+14])
      module_expr (typing/typedecl.ml[498,18134+17]..[498,18134+30])
        Pmod_ident "Btype.TypeMap" (typing/typedecl.ml[498,18134+17]..[498,18134+30])
  structure_item (typing/typedecl.ml[500,18166+0]..[525,19344+5])
    Pstr_value Rec
    [
      <def>
        pattern (typing/typedecl.ml[500,18166+8]..[500,18166+29])
          Ppat_var "check_constraints_rec" (typing/typedecl.ml[500,18166+8]..[500,18166+29])
        expression (typing/typedecl.ml[500,18166+30]..[525,19344+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[500,18166+30]..[500,18166+33])
            Ppat_var "env" (typing/typedecl.ml[500,18166+30]..[500,18166+33])
          expression (typing/typedecl.ml[500,18166+34]..[525,19344+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[500,18166+34]..[500,18166+37])
              Ppat_var "loc" (typing/typedecl.ml[500,18166+34]..[500,18166+37])
            expression (typing/typedecl.ml[500,18166+38]..[525,19344+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[500,18166+38]..[500,18166+45])
                Ppat_var "visited" (typing/typedecl.ml[500,18166+38]..[500,18166+45])
              expression (typing/typedecl.ml[500,18166+46]..[525,19344+5]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[500,18166+46]..[500,18166+48])
                  Ppat_var "ty" (typing/typedecl.ml[500,18166+46]..[500,18166+48])
                expression (typing/typedecl.ml[501,18217+2]..[525,19344+5])
                  Pexp_ifthenelse
                  expression (typing/typedecl.ml[501,18217+5]..[501,18217+28])
                    Pexp_apply
                    expression (typing/typedecl.ml[501,18217+5]..[501,18217+16])
                      Pexp_ident "TypeSet.mem" (typing/typedecl.ml[501,18217+5]..[501,18217+16])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[501,18217+17]..[501,18217+19])
                          Pexp_ident "ty" (typing/typedecl.ml[501,18217+17]..[501,18217+19])
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[501,18217+20]..[501,18217+28])
                          Pexp_apply
                          expression (typing/typedecl.ml[501,18217+20]..[501,18217+21])
                            Pexp_ident "!" (typing/typedecl.ml[501,18217+20]..[501,18217+21])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[501,18217+21]..[501,18217+28])
                                Pexp_ident "visited" (typing/typedecl.ml[501,18217+21]..[501,18217+28])
                          ]
                    ]
                  expression (typing/typedecl.ml[501,18217+34]..[501,18217+36])
                    Pexp_construct "()" (typing/typedecl.ml[501,18217+34]..[501,18217+36])
                    None
                  Some
                    expression (typing/typedecl.ml[501,18217+42]..[525,19344+5])
                      Pexp_sequence
                      expression (typing/typedecl.ml[502,18265+2]..[502,18265+36])
                        Pexp_apply
                        expression (typing/typedecl.ml[502,18265+10]..[502,18265+12])
                          Pexp_ident ":=" (typing/typedecl.ml[502,18265+10]..[502,18265+12])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[502,18265+2]..[502,18265+9])
                              Pexp_ident "visited" (typing/typedecl.ml[502,18265+2]..[502,18265+9])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[502,18265+13]..[502,18265+36])
                              Pexp_apply
                              expression (typing/typedecl.ml[502,18265+13]..[502,18265+24])
                                Pexp_ident "TypeSet.add" (typing/typedecl.ml[502,18265+13]..[502,18265+24])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[502,18265+25]..[502,18265+27])
                                    Pexp_ident "ty" (typing/typedecl.ml[502,18265+25]..[502,18265+27])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[502,18265+28]..[502,18265+36])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[502,18265+28]..[502,18265+29])
                                      Pexp_ident "!" (typing/typedecl.ml[502,18265+28]..[502,18265+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[502,18265+29]..[502,18265+36])
                                          Pexp_ident "visited" (typing/typedecl.ml[502,18265+29]..[502,18265+36])
                                    ]
                              ]
                        ]
                      expression (typing/typedecl.ml[503,18303+2]..[524,19274+69])
                        Pexp_match
                        expression (typing/typedecl.ml[503,18303+8]..[503,18303+19])
                          Pexp_apply
                          expression (typing/typedecl.ml[503,18303+8]..[503,18303+16])
                            Pexp_ident "get_desc" (typing/typedecl.ml[503,18303+8]..[503,18303+16])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[503,18303+17]..[503,18303+19])
                                Pexp_ident "ty" (typing/typedecl.ml[503,18303+17]..[503,18303+19])
                          ]
                        [
                          <case>
                            pattern (typing/typedecl.ml[504,18328+4]..[504,18328+27])
                              Ppat_construct "Tconstr" (typing/typedecl.ml[504,18328+4]..[504,18328+11])
                              Some
                                []
                                pattern (typing/typedecl.ml[504,18328+12]..[504,18328+27])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typedecl.ml[504,18328+13]..[504,18328+17])
                                      Ppat_var "path" (typing/typedecl.ml[504,18328+13]..[504,18328+17])
                                    pattern (typing/typedecl.ml[504,18328+19]..[504,18328+23])
                                      Ppat_var "args" (typing/typedecl.ml[504,18328+19]..[504,18328+23])
                                    pattern (typing/typedecl.ml[504,18328+25]..[504,18328+26])
                                      Ppat_any
                                  ]
                            expression (typing/typedecl.ml[505,18359+6]..[519,19082+60])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typedecl.ml[505,18359+10]..[505,18359+14])
                                    Ppat_var "decl" (typing/typedecl.ml[505,18359+10]..[505,18359+14])
                                  expression (typing/typedecl.ml[506,18376+8]..[508,18437+63])
                                    Pexp_try
                                    expression (typing/typedecl.ml[506,18376+12]..[506,18376+34])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[506,18376+12]..[506,18376+25])
                                        Pexp_ident "Env.find_type" (typing/typedecl.ml[506,18376+12]..[506,18376+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[506,18376+26]..[506,18376+30])
                                            Pexp_ident "path" (typing/typedecl.ml[506,18376+26]..[506,18376+30])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[506,18376+31]..[506,18376+34])
                                            Pexp_ident "env" (typing/typedecl.ml[506,18376+31]..[506,18376+34])
                                      ]
                                    [
                                      <case>
                                        pattern (typing/typedecl.ml[507,18411+13]..[507,18411+22])
                                          Ppat_construct "Not_found" (typing/typedecl.ml[507,18411+13]..[507,18411+22])
                                          None
                                        expression (typing/typedecl.ml[508,18437+10]..[508,18437+63])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[508,18437+10]..[508,18437+15])
                                            Pexp_ident "raise" (typing/typedecl.ml[508,18437+10]..[508,18437+15])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[508,18437+16]..[508,18437+63])
                                                Pexp_construct "Error" (typing/typedecl.ml[508,18437+17]..[508,18437+22])
                                                Some
                                                  expression (typing/typedecl.ml[508,18437+22]..[508,18437+62])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typedecl.ml[508,18437+23]..[508,18437+26])
                                                        Pexp_ident "loc" (typing/typedecl.ml[508,18437+23]..[508,18437+26])
                                                      expression (typing/typedecl.ml[508,18437+28]..[508,18437+61])
                                                        Pexp_construct "Unavailable_type_constructor" (typing/typedecl.ml[508,18437+28]..[508,18437+56])
                                                        Some
                                                          expression (typing/typedecl.ml[508,18437+57]..[508,18437+61])
                                                            Pexp_ident "path" (typing/typedecl.ml[508,18437+57]..[508,18437+61])
                                                    ]
                                          ]
                                    ]
                              ]
                              expression (typing/typedecl.ml[509,18504+6]..[519,19082+60])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typedecl.ml[509,18504+10]..[509,18504+13])
                                      Ppat_var "ty'" (typing/typedecl.ml[509,18504+10]..[509,18504+13])
                                    expression (typing/typedecl.ml[509,18504+16]..[509,18504+75])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[509,18504+16]..[509,18504+31])
                                        Pexp_ident "Ctype.newconstr" (typing/typedecl.ml[509,18504+16]..[509,18504+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[509,18504+32]..[509,18504+36])
                                            Pexp_ident "path" (typing/typedecl.ml[509,18504+32]..[509,18504+36])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[509,18504+37]..[509,18504+75])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[509,18504+38]..[509,18504+57])
                                              Pexp_ident "Ctype.instance_list" (typing/typedecl.ml[509,18504+38]..[509,18504+57])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[509,18504+58]..[509,18504+74])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[509,18504+58]..[509,18504+62])
                                                    Pexp_ident "decl" (typing/typedecl.ml[509,18504+58]..[509,18504+62])
                                                  "type_params" (typing/typedecl.ml[509,18504+63]..[509,18504+74])
                                            ]
                                      ]
                                ]
                                expression (typing/typedecl.ml[510,18583+6]..[519,19082+60])
                                  Pexp_sequence
                                  expression (typing/typedecl.ml[510,18583+6]..[518,19071+9])
                                    Pexp_try
                                    expression (typing/typedecl.ml[515,18900+12]..[515,18900+62])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[515,18900+12]..[515,18900+25])
                                        Pexp_ident "Ctype.matches" (typing/typedecl.ml[515,18900+12]..[515,18900+25])
                                      [
                                        <arg>
                                        Labelled "expand_error_trace"
                                          expression (typing/typedecl.ml[515,18900+46]..[515,18900+51])
                                            Pexp_construct "false" (typing/typedecl.ml[515,18900+46]..[515,18900+51])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[515,18900+52]..[515,18900+55])
                                            Pexp_ident "env" (typing/typedecl.ml[515,18900+52]..[515,18900+55])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[515,18900+56]..[515,18900+58])
                                            Pexp_ident "ty" (typing/typedecl.ml[515,18900+56]..[515,18900+58])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[515,18900+59]..[515,18900+62])
                                            Pexp_ident "ty'" (typing/typedecl.ml[515,18900+59]..[515,18900+62])
                                      ]
                                    [
                                      <case>
                                        pattern (typing/typedecl.ml[516,18963+13]..[516,18963+45])
                                          Ppat_construct "Ctype.Matches_failure" (typing/typedecl.ml[516,18963+13]..[516,18963+34])
                                          Some
                                            []
                                            pattern (typing/typedecl.ml[516,18963+35]..[516,18963+45])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typedecl.ml[516,18963+36]..[516,18963+39])
                                                  Ppat_var "env" (typing/typedecl.ml[516,18963+36]..[516,18963+39])
                                                pattern (typing/typedecl.ml[516,18963+41]..[516,18963+44])
                                                  Ppat_var "err" (typing/typedecl.ml[516,18963+41]..[516,18963+44])
                                              ]
                                        expression (typing/typedecl.ml[517,19012+10]..[517,19012+58])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[517,19012+10]..[517,19012+15])
                                            Pexp_ident "raise" (typing/typedecl.ml[517,19012+10]..[517,19012+15])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[517,19012+16]..[517,19012+58])
                                                Pexp_construct "Error" (typing/typedecl.ml[517,19012+17]..[517,19012+22])
                                                Some
                                                  expression (typing/typedecl.ml[517,19012+22]..[517,19012+57])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typedecl.ml[517,19012+23]..[517,19012+26])
                                                        Pexp_ident "loc" (typing/typedecl.ml[517,19012+23]..[517,19012+26])
                                                      expression (typing/typedecl.ml[517,19012+28]..[517,19012+56])
                                                        Pexp_construct "Constraint_failed" (typing/typedecl.ml[517,19012+28]..[517,19012+45])
                                                        Some
                                                          expression (typing/typedecl.ml[517,19012+46]..[517,19012+56])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typedecl.ml[517,19012+47]..[517,19012+50])
                                                                Pexp_ident "env" (typing/typedecl.ml[517,19012+47]..[517,19012+50])
                                                              expression (typing/typedecl.ml[517,19012+52]..[517,19012+55])
                                                                Pexp_ident "err" (typing/typedecl.ml[517,19012+52]..[517,19012+55])
                                                            ]
                                                    ]
                                          ]
                                    ]
                                  expression (typing/typedecl.ml[519,19082+6]..[519,19082+60])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[519,19082+6]..[519,19082+15])
                                      Pexp_ident "List.iter" (typing/typedecl.ml[519,19082+6]..[519,19082+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[519,19082+16]..[519,19082+55])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[519,19082+17]..[519,19082+38])
                                            Pexp_ident "check_constraints_rec" (typing/typedecl.ml[519,19082+17]..[519,19082+38])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[519,19082+39]..[519,19082+42])
                                                Pexp_ident "env" (typing/typedecl.ml[519,19082+39]..[519,19082+42])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[519,19082+43]..[519,19082+46])
                                                Pexp_ident "loc" (typing/typedecl.ml[519,19082+43]..[519,19082+46])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[519,19082+47]..[519,19082+54])
                                                Pexp_ident "visited" (typing/typedecl.ml[519,19082+47]..[519,19082+54])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[519,19082+56]..[519,19082+60])
                                          Pexp_ident "args" (typing/typedecl.ml[519,19082+56]..[519,19082+60])
                                    ]
                          <case>
                            pattern (typing/typedecl.ml[520,19143+4]..[520,19143+18])
                              Ppat_construct "Tpoly" (typing/typedecl.ml[520,19143+4]..[520,19143+9])
                              Some
                                []
                                pattern (typing/typedecl.ml[520,19143+10]..[520,19143+18])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typedecl.ml[520,19143+11]..[520,19143+13])
                                      Ppat_var "ty" (typing/typedecl.ml[520,19143+11]..[520,19143+13])
                                    pattern (typing/typedecl.ml[520,19143+15]..[520,19143+17])
                                      Ppat_var "tl" (typing/typedecl.ml[520,19143+15]..[520,19143+17])
                                  ]
                            expression (typing/typedecl.ml[521,19165+6]..[522,19218+46])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typedecl.ml[521,19165+10]..[521,19165+15])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typedecl.ml[521,19165+10]..[521,19165+11])
                                        Ppat_any
                                      pattern (typing/typedecl.ml[521,19165+13]..[521,19165+15])
                                        Ppat_var "ty" (typing/typedecl.ml[521,19165+13]..[521,19165+15])
                                    ]
                                  expression (typing/typedecl.ml[521,19165+18]..[521,19165+49])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[521,19165+18]..[521,19165+37])
                                      Pexp_ident "Ctype.instance_poly" (typing/typedecl.ml[521,19165+18]..[521,19165+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[521,19165+38]..[521,19165+43])
                                          Pexp_construct "false" (typing/typedecl.ml[521,19165+38]..[521,19165+43])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[521,19165+44]..[521,19165+46])
                                          Pexp_ident "tl" (typing/typedecl.ml[521,19165+44]..[521,19165+46])
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[521,19165+47]..[521,19165+49])
                                          Pexp_ident "ty" (typing/typedecl.ml[521,19165+47]..[521,19165+49])
                                    ]
                              ]
                              expression (typing/typedecl.ml[522,19218+6]..[522,19218+46])
                                Pexp_apply
                                expression (typing/typedecl.ml[522,19218+6]..[522,19218+27])
                                  Pexp_ident "check_constraints_rec" (typing/typedecl.ml[522,19218+6]..[522,19218+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[522,19218+28]..[522,19218+31])
                                      Pexp_ident "env" (typing/typedecl.ml[522,19218+28]..[522,19218+31])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[522,19218+32]..[522,19218+35])
                                      Pexp_ident "loc" (typing/typedecl.ml[522,19218+32]..[522,19218+35])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[522,19218+36]..[522,19218+43])
                                      Pexp_ident "visited" (typing/typedecl.ml[522,19218+36]..[522,19218+43])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[522,19218+44]..[522,19218+46])
                                      Pexp_ident "ty" (typing/typedecl.ml[522,19218+44]..[522,19218+46])
                                ]
                          <case>
                            pattern (typing/typedecl.ml[523,19265+4]..[523,19265+5])
                              Ppat_any
                            expression (typing/typedecl.ml[524,19274+6]..[524,19274+69])
                              Pexp_apply
                              expression (typing/typedecl.ml[524,19274+6]..[524,19274+26])
                                Pexp_ident "Btype.iter_type_expr" (typing/typedecl.ml[524,19274+6]..[524,19274+26])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[524,19274+27]..[524,19274+66])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[524,19274+28]..[524,19274+49])
                                      Pexp_ident "check_constraints_rec" (typing/typedecl.ml[524,19274+28]..[524,19274+49])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[524,19274+50]..[524,19274+53])
                                          Pexp_ident "env" (typing/typedecl.ml[524,19274+50]..[524,19274+53])
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[524,19274+54]..[524,19274+57])
                                          Pexp_ident "loc" (typing/typedecl.ml[524,19274+54]..[524,19274+57])
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[524,19274+58]..[524,19274+65])
                                          Pexp_ident "visited" (typing/typedecl.ml[524,19274+58]..[524,19274+65])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[524,19274+67]..[524,19274+69])
                                    Pexp_ident "ty" (typing/typedecl.ml[524,19274+67]..[524,19274+69])
                              ]
                        ]
    ]
  structure_item (typing/typedecl.ml[527,19351+0]..[537,19704+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[527,19351+4]..[527,19351+28])
          Ppat_var "check_constraints_labels" (typing/typedecl.ml[527,19351+4]..[527,19351+28])
        expression (typing/typedecl.ml[527,19351+29]..[537,19704+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[527,19351+29]..[527,19351+32])
            Ppat_var "env" (typing/typedecl.ml[527,19351+29]..[527,19351+32])
          expression (typing/typedecl.ml[527,19351+33]..[537,19704+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[527,19351+33]..[527,19351+40])
              Ppat_var "visited" (typing/typedecl.ml[527,19351+33]..[527,19351+40])
            expression (typing/typedecl.ml[527,19351+41]..[537,19704+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[527,19351+41]..[527,19351+42])
                Ppat_var "l" (typing/typedecl.ml[527,19351+41]..[527,19351+42])
              expression (typing/typedecl.ml[527,19351+43]..[537,19704+5]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[527,19351+43]..[527,19351+45])
                  Ppat_var "pl" (typing/typedecl.ml[527,19351+43]..[527,19351+45])
                expression (typing/typedecl.ml[528,19399+2]..[537,19704+5])
                  Pexp_let Rec
                  [
                    <def>
                      pattern (typing/typedecl.ml[528,19399+10]..[528,19399+17])
                        Ppat_var "get_loc" (typing/typedecl.ml[528,19399+10]..[528,19399+17])
                      expression (typing/typedecl.ml[528,19399+18]..[532,19539+28]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typedecl.ml[528,19399+18]..[528,19399+22])
                          Ppat_var "name" (typing/typedecl.ml[528,19399+18]..[528,19399+22])
                        expression (typing/typedecl.ml[528,19399+25]..[532,19539+28])
                          Pexp_function
                          [
                            <case>
                              pattern (typing/typedecl.ml[529,19433+6]..[529,19433+8])
                                Ppat_construct "[]" (typing/typedecl.ml[529,19433+6]..[529,19433+8])
                                None
                              expression (typing/typedecl.ml[529,19433+12]..[529,19433+24])
                                Pexp_assert
                                expression (typing/typedecl.ml[529,19433+19]..[529,19433+24])
                                  Pexp_construct "false" (typing/typedecl.ml[529,19433+19]..[529,19433+24])
                                  None
                            <case>
                              pattern (typing/typedecl.ml[530,19458+6]..[530,19458+15])
                                Ppat_construct "::" (typing/typedecl.ml[530,19458+10]..[530,19458+12])
                                Some
                                  []
                                  pattern (typing/typedecl.ml[530,19458+6]..[530,19458+15]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (typing/typedecl.ml[530,19458+6]..[530,19458+9])
                                        Ppat_var "pld" (typing/typedecl.ml[530,19458+6]..[530,19458+9])
                                      pattern (typing/typedecl.ml[530,19458+13]..[530,19458+15])
                                        Ppat_var "tl" (typing/typedecl.ml[530,19458+13]..[530,19458+15])
                                    ]
                              expression (typing/typedecl.ml[531,19477+8]..[532,19539+28])
                                Pexp_ifthenelse
                                expression (typing/typedecl.ml[531,19477+11]..[531,19477+34])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[531,19477+16]..[531,19477+17])
                                    Pexp_ident "=" (typing/typedecl.ml[531,19477+16]..[531,19477+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[531,19477+11]..[531,19477+15])
                                        Pexp_ident "name" (typing/typedecl.ml[531,19477+11]..[531,19477+15])
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[531,19477+18]..[531,19477+34])
                                        Pexp_field
                                        expression (typing/typedecl.ml[531,19477+18]..[531,19477+30])
                                          Pexp_field
                                          expression (typing/typedecl.ml[531,19477+18]..[531,19477+21])
                                            Pexp_ident "pld" (typing/typedecl.ml[531,19477+18]..[531,19477+21])
                                          "pld_name" (typing/typedecl.ml[531,19477+22]..[531,19477+30])
                                        "txt" (typing/typedecl.ml[531,19477+31]..[531,19477+34])
                                  ]
                                expression (typing/typedecl.ml[531,19477+40]..[531,19477+61])
                                  Pexp_field
                                  expression (typing/typedecl.ml[531,19477+40]..[531,19477+52])
                                    Pexp_field
                                    expression (typing/typedecl.ml[531,19477+40]..[531,19477+43])
                                      Pexp_ident "pld" (typing/typedecl.ml[531,19477+40]..[531,19477+43])
                                    "pld_type" (typing/typedecl.ml[531,19477+44]..[531,19477+52])
                                  "ptyp_loc" (typing/typedecl.ml[531,19477+53]..[531,19477+61])
                                Some
                                  expression (typing/typedecl.ml[532,19539+13]..[532,19539+28])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[532,19539+13]..[532,19539+20])
                                      Pexp_ident "get_loc" (typing/typedecl.ml[532,19539+13]..[532,19539+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[532,19539+21]..[532,19539+25])
                                          Pexp_ident "name" (typing/typedecl.ml[532,19539+21]..[532,19539+25])
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[532,19539+26]..[532,19539+28])
                                          Pexp_ident "tl" (typing/typedecl.ml[532,19539+26]..[532,19539+28])
                                    ]
                          ]
                  ]
                  expression (typing/typedecl.ml[534,19573+2]..[537,19704+5])
                    Pexp_apply
                    expression (typing/typedecl.ml[534,19573+2]..[534,19573+11])
                      Pexp_ident "List.iter" (typing/typedecl.ml[534,19573+2]..[534,19573+11])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[535,19585+4]..[536,19628+75])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typedecl.ml[535,19585+9]..[535,19585+39])
                            Ppat_record Closed
                            [
                              "Types.ld_id" (typing/typedecl.ml[535,19585+10]..[535,19585+21])
                                pattern (typing/typedecl.ml[535,19585+22]..[535,19585+26])
                                  Ppat_var "name" (typing/typedecl.ml[535,19585+22]..[535,19585+26])
                              "ld_type" (typing/typedecl.ml[535,19585+28]..[535,19585+35])
                                pattern (typing/typedecl.ml[535,19585+36]..[535,19585+38])
                                  Ppat_var "ty" (typing/typedecl.ml[535,19585+36]..[535,19585+38])
                            ]
                          expression (typing/typedecl.ml[536,19628+7]..[536,19628+74])
                            Pexp_apply
                            expression (typing/typedecl.ml[536,19628+7]..[536,19628+28])
                              Pexp_ident "check_constraints_rec" (typing/typedecl.ml[536,19628+7]..[536,19628+28])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[536,19628+29]..[536,19628+32])
                                  Pexp_ident "env" (typing/typedecl.ml[536,19628+29]..[536,19628+32])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[536,19628+33]..[536,19628+63])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[536,19628+34]..[536,19628+41])
                                    Pexp_ident "get_loc" (typing/typedecl.ml[536,19628+34]..[536,19628+41])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[536,19628+42]..[536,19628+59])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[536,19628+43]..[536,19628+53])
                                          Pexp_ident "Ident.name" (typing/typedecl.ml[536,19628+43]..[536,19628+53])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[536,19628+54]..[536,19628+58])
                                              Pexp_ident "name" (typing/typedecl.ml[536,19628+54]..[536,19628+58])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[536,19628+60]..[536,19628+62])
                                        Pexp_ident "pl" (typing/typedecl.ml[536,19628+60]..[536,19628+62])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[536,19628+64]..[536,19628+71])
                                  Pexp_ident "visited" (typing/typedecl.ml[536,19628+64]..[536,19628+71])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[536,19628+72]..[536,19628+74])
                                  Pexp_ident "ty" (typing/typedecl.ml[536,19628+72]..[536,19628+74])
                            ]
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[537,19704+4]..[537,19704+5])
                          Pexp_ident "l" (typing/typedecl.ml[537,19704+4]..[537,19704+5])
                    ]
    ]
  structure_item (typing/typedecl.ml[539,19711+0]..[595,21654+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[539,19711+4]..[539,19711+21])
          Ppat_var "check_constraints" (typing/typedecl.ml[539,19711+4]..[539,19711+21])
        expression (typing/typedecl.ml[539,19711+22]..[595,21654+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[539,19711+22]..[539,19711+25])
            Ppat_var "env" (typing/typedecl.ml[539,19711+22]..[539,19711+25])
          expression (typing/typedecl.ml[539,19711+26]..[595,21654+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[539,19711+26]..[539,19711+31])
              Ppat_var "sdecl" (typing/typedecl.ml[539,19711+26]..[539,19711+31])
            expression (typing/typedecl.ml[539,19711+32]..[595,21654+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[539,19711+32]..[539,19711+41])
                Ppat_tuple
                [
                  pattern (typing/typedecl.ml[539,19711+33]..[539,19711+34])
                    Ppat_any
                  pattern (typing/typedecl.ml[539,19711+36]..[539,19711+40])
                    Ppat_var "decl" (typing/typedecl.ml[539,19711+36]..[539,19711+40])
                ]
              expression (typing/typedecl.ml[540,19755+2]..[595,21654+5])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/typedecl.ml[540,19755+6]..[540,19755+13])
                      Ppat_var "visited" (typing/typedecl.ml[540,19755+6]..[540,19755+13])
                    expression (typing/typedecl.ml[540,19755+16]..[540,19755+33])
                      Pexp_apply
                      expression (typing/typedecl.ml[540,19755+16]..[540,19755+19])
                        Pexp_ident "ref" (typing/typedecl.ml[540,19755+16]..[540,19755+19])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[540,19755+20]..[540,19755+33])
                            Pexp_ident "TypeSet.empty" (typing/typedecl.ml[540,19755+20]..[540,19755+33])
                      ]
                ]
                expression (typing/typedecl.ml[541,19792+2]..[595,21654+5])
                  Pexp_sequence
                  expression (typing/typedecl.ml[541,19792+2]..[543,19880+39])
                    Pexp_apply
                    expression (typing/typedecl.ml[541,19792+2]..[541,19792+12])
                      Pexp_ident "List.iter2" (typing/typedecl.ml[541,19792+2]..[541,19792+12])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[542,19805+4]..[542,19805+74])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typedecl.ml[542,19805+9]..[542,19805+17])
                            Ppat_tuple
                            [
                              pattern (typing/typedecl.ml[542,19805+10]..[542,19805+13])
                                Ppat_var "sty" (typing/typedecl.ml[542,19805+10]..[542,19805+13])
                              pattern (typing/typedecl.ml[542,19805+15]..[542,19805+16])
                                Ppat_any
                            ]
                          expression (typing/typedecl.ml[542,19805+18]..[542,19805+73]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typedecl.ml[542,19805+18]..[542,19805+20])
                              Ppat_var "ty" (typing/typedecl.ml[542,19805+18]..[542,19805+20])
                            expression (typing/typedecl.ml[542,19805+24]..[542,19805+73])
                              Pexp_apply
                              expression (typing/typedecl.ml[542,19805+24]..[542,19805+45])
                                Pexp_ident "check_constraints_rec" (typing/typedecl.ml[542,19805+24]..[542,19805+45])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[542,19805+46]..[542,19805+49])
                                    Pexp_ident "env" (typing/typedecl.ml[542,19805+46]..[542,19805+49])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[542,19805+50]..[542,19805+62])
                                    Pexp_field
                                    expression (typing/typedecl.ml[542,19805+50]..[542,19805+53])
                                      Pexp_ident "sty" (typing/typedecl.ml[542,19805+50]..[542,19805+53])
                                    "ptyp_loc" (typing/typedecl.ml[542,19805+54]..[542,19805+62])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[542,19805+63]..[542,19805+70])
                                    Pexp_ident "visited" (typing/typedecl.ml[542,19805+63]..[542,19805+70])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[542,19805+71]..[542,19805+73])
                                    Pexp_ident "ty" (typing/typedecl.ml[542,19805+71]..[542,19805+73])
                              ]
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[543,19880+4]..[543,19880+22])
                          Pexp_field
                          expression (typing/typedecl.ml[543,19880+4]..[543,19880+9])
                            Pexp_ident "sdecl" (typing/typedecl.ml[543,19880+4]..[543,19880+9])
                          "ptype_params" (typing/typedecl.ml[543,19880+10]..[543,19880+22])
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[543,19880+23]..[543,19880+39])
                          Pexp_field
                          expression (typing/typedecl.ml[543,19880+23]..[543,19880+27])
                            Pexp_ident "decl" (typing/typedecl.ml[543,19880+23]..[543,19880+27])
                          "type_params" (typing/typedecl.ml[543,19880+28]..[543,19880+39])
                    ]
                  expression (typing/typedecl.ml[544,19921+2]..[595,21654+5])
                    Pexp_sequence
                    expression (typing/typedecl.ml[544,19921+2]..[587,21422+5])
                      Pexp_match
                      expression (typing/typedecl.ml[544,19921+14]..[544,19921+28])
                        Pexp_field
                        expression (typing/typedecl.ml[544,19921+14]..[544,19921+18])
                          Pexp_ident "decl" (typing/typedecl.ml[544,19921+14]..[544,19921+18])
                        "type_kind" (typing/typedecl.ml[544,19921+19]..[544,19921+28])
                      [
                        <case>
                          pattern (typing/typedecl.ml[545,19955+4]..[545,19955+17])
                            Ppat_construct "Type_abstract" (typing/typedecl.ml[545,19955+4]..[545,19955+17])
                            None
                          expression (typing/typedecl.ml[545,19955+21]..[545,19955+23])
                            Pexp_construct "()" (typing/typedecl.ml[545,19955+21]..[545,19955+23])
                            None
                        <case>
                          pattern (typing/typedecl.ml[546,19979+4]..[546,19979+26])
                            Ppat_construct "Type_variant" (typing/typedecl.ml[546,19979+4]..[546,19979+16])
                            Some
                              []
                              pattern (typing/typedecl.ml[546,19979+17]..[546,19979+26])
                                Ppat_tuple
                                [
                                  pattern (typing/typedecl.ml[546,19979+18]..[546,19979+19])
                                    Ppat_var "l" (typing/typedecl.ml[546,19979+18]..[546,19979+19])
                                  pattern (typing/typedecl.ml[546,19979+21]..[546,19979+25])
                                    Ppat_var "_rep" (typing/typedecl.ml[546,19979+21]..[546,19979+25])
                                ]
                          expression (typing/typedecl.ml[547,20009+6]..[578,21133+9])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typedecl.ml[547,20009+10]..[547,20009+17])
                                  Ppat_var "find_pl" (typing/typedecl.ml[547,20009+10]..[547,20009+17])
                                expression (typing/typedecl.ml[547,20009+20]..[549,20071+70])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/typedecl.ml[548,20038+10]..[548,20038+26])
                                        Ppat_construct "Ptype_variant" (typing/typedecl.ml[548,20038+10]..[548,20038+23])
                                        Some
                                          []
                                          pattern (typing/typedecl.ml[548,20038+24]..[548,20038+26])
                                            Ppat_var "pl" (typing/typedecl.ml[548,20038+24]..[548,20038+26])
                                      expression (typing/typedecl.ml[548,20038+30]..[548,20038+32])
                                        Pexp_ident "pl" (typing/typedecl.ml[548,20038+30]..[548,20038+32])
                                    <case>
                                      pattern (typing/typedecl.ml[549,20071+10]..[549,20071+54])
                                        Ppat_or
                                        pattern (typing/typedecl.ml[549,20071+10]..[549,20071+41])
                                          Ppat_or
                                          pattern (typing/typedecl.ml[549,20071+10]..[549,20071+24])
                                            Ppat_construct "Ptype_record" (typing/typedecl.ml[549,20071+10]..[549,20071+22])
                                            Some
                                              []
                                              pattern (typing/typedecl.ml[549,20071+23]..[549,20071+24])
                                                Ppat_any
                                          pattern (typing/typedecl.ml[549,20071+27]..[549,20071+41])
                                            Ppat_construct "Ptype_abstract" (typing/typedecl.ml[549,20071+27]..[549,20071+41])
                                            None
                                        pattern (typing/typedecl.ml[549,20071+44]..[549,20071+54])
                                          Ppat_construct "Ptype_open" (typing/typedecl.ml[549,20071+44]..[549,20071+54])
                                          None
                                      expression (typing/typedecl.ml[549,20071+58]..[549,20071+70])
                                        Pexp_assert
                                        expression (typing/typedecl.ml[549,20071+65]..[549,20071+70])
                                          Pexp_construct "false" (typing/typedecl.ml[549,20071+65]..[549,20071+70])
                                          None
                                  ]
                            ]
                            expression (typing/typedecl.ml[551,20151+6]..[578,21133+9])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typedecl.ml[551,20151+10]..[551,20151+12])
                                    Ppat_var "pl" (typing/typedecl.ml[551,20151+10]..[551,20151+12])
                                  expression (typing/typedecl.ml[551,20151+15]..[551,20151+39])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[551,20151+15]..[551,20151+22])
                                      Pexp_ident "find_pl" (typing/typedecl.ml[551,20151+15]..[551,20151+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[551,20151+23]..[551,20151+39])
                                          Pexp_field
                                          expression (typing/typedecl.ml[551,20151+23]..[551,20151+28])
                                            Pexp_ident "sdecl" (typing/typedecl.ml[551,20151+23]..[551,20151+28])
                                          "ptype_kind" (typing/typedecl.ml[551,20151+29]..[551,20151+39])
                                    ]
                              ]
                              expression (typing/typedecl.ml[552,20194+6]..[578,21133+9])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typedecl.ml[552,20194+10]..[552,20194+18])
                                      Ppat_var "pl_index" (typing/typedecl.ml[552,20194+10]..[552,20194+18])
                                    expression (typing/typedecl.ml[553,20215+8]..[556,20298+48])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typedecl.ml[553,20215+12]..[553,20215+17])
                                            Ppat_var "foldf" (typing/typedecl.ml[553,20215+12]..[553,20215+17])
                                          expression (typing/typedecl.ml[553,20215+18]..[554,20241+45]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/typedecl.ml[553,20215+18]..[553,20215+21])
                                              Ppat_var "acc" (typing/typedecl.ml[553,20215+18]..[553,20215+21])
                                            expression (typing/typedecl.ml[553,20215+22]..[554,20241+45]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (typing/typedecl.ml[553,20215+22]..[553,20215+23])
                                                Ppat_var "x" (typing/typedecl.ml[553,20215+22]..[553,20215+23])
                                              expression (typing/typedecl.ml[554,20241+10]..[554,20241+45])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[554,20241+10]..[554,20241+24])
                                                  Pexp_ident "String.Map.add" (typing/typedecl.ml[554,20241+10]..[554,20241+24])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[554,20241+25]..[554,20241+39])
                                                      Pexp_field
                                                      expression (typing/typedecl.ml[554,20241+25]..[554,20241+35])
                                                        Pexp_field
                                                        expression (typing/typedecl.ml[554,20241+25]..[554,20241+26])
                                                          Pexp_ident "x" (typing/typedecl.ml[554,20241+25]..[554,20241+26])
                                                        "pcd_name" (typing/typedecl.ml[554,20241+27]..[554,20241+35])
                                                      "txt" (typing/typedecl.ml[554,20241+36]..[554,20241+39])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[554,20241+40]..[554,20241+41])
                                                      Pexp_ident "x" (typing/typedecl.ml[554,20241+40]..[554,20241+41])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[554,20241+42]..[554,20241+45])
                                                      Pexp_ident "acc" (typing/typedecl.ml[554,20241+42]..[554,20241+45])
                                                ]
                                      ]
                                      expression (typing/typedecl.ml[556,20298+8]..[556,20298+48])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[556,20298+8]..[556,20298+22])
                                          Pexp_ident "List.fold_left" (typing/typedecl.ml[556,20298+8]..[556,20298+22])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[556,20298+23]..[556,20298+28])
                                              Pexp_ident "foldf" (typing/typedecl.ml[556,20298+23]..[556,20298+28])
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[556,20298+29]..[556,20298+45])
                                              Pexp_ident "String.Map.empty" (typing/typedecl.ml[556,20298+29]..[556,20298+45])
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[556,20298+46]..[556,20298+48])
                                              Pexp_ident "pl" (typing/typedecl.ml[556,20298+46]..[556,20298+48])
                                        ]
                                ]
                                expression (typing/typedecl.ml[558,20356+6]..[578,21133+9])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[558,20356+6]..[558,20356+15])
                                    Pexp_ident "List.iter" (typing/typedecl.ml[558,20356+6]..[558,20356+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[559,20372+8]..[577,21114+18])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/typedecl.ml[559,20372+13]..[559,20372+48])
                                          Ppat_record Closed
                                          [
                                            "Types.cd_id" (typing/typedecl.ml[559,20372+14]..[559,20372+25])
                                              pattern (typing/typedecl.ml[559,20372+26]..[559,20372+30])
                                                Ppat_var "name" (typing/typedecl.ml[559,20372+26]..[559,20372+30])
                                            "cd_args" (typing/typedecl.ml[559,20372+32]..[559,20372+39]) ghost
                                              pattern (typing/typedecl.ml[559,20372+32]..[559,20372+39])
                                                Ppat_var "cd_args" (typing/typedecl.ml[559,20372+32]..[559,20372+39])
                                            "cd_res" (typing/typedecl.ml[559,20372+41]..[559,20372+47]) ghost
                                              pattern (typing/typedecl.ml[559,20372+41]..[559,20372+47])
                                                Ppat_var "cd_res" (typing/typedecl.ml[559,20372+41]..[559,20372+47])
                                          ]
                                        expression (typing/typedecl.ml[560,20424+10]..[577,21114+16])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typedecl.ml[560,20424+14]..[560,20424+36])
                                                Ppat_record Open
                                                [
                                                  "pcd_args" (typing/typedecl.ml[560,20424+15]..[560,20424+23]) ghost
                                                    pattern (typing/typedecl.ml[560,20424+15]..[560,20424+23])
                                                      Ppat_var "pcd_args" (typing/typedecl.ml[560,20424+15]..[560,20424+23])
                                                  "pcd_res" (typing/typedecl.ml[560,20424+25]..[560,20424+32]) ghost
                                                    pattern (typing/typedecl.ml[560,20424+25]..[560,20424+32])
                                                      Ppat_var "pcd_res" (typing/typedecl.ml[560,20424+25]..[560,20424+32])
                                                ]
                                              expression (typing/typedecl.ml[561,20463+12]..[562,20522+42])
                                                Pexp_try
                                                expression (typing/typedecl.ml[561,20463+16]..[561,20463+58])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[561,20463+16]..[561,20463+31])
                                                    Pexp_ident "String.Map.find" (typing/typedecl.ml[561,20463+16]..[561,20463+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[561,20463+32]..[561,20463+49])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[561,20463+33]..[561,20463+43])
                                                          Pexp_ident "Ident.name" (typing/typedecl.ml[561,20463+33]..[561,20463+43])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[561,20463+44]..[561,20463+48])
                                                              Pexp_ident "name" (typing/typedecl.ml[561,20463+44]..[561,20463+48])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[561,20463+50]..[561,20463+58])
                                                        Pexp_ident "pl_index" (typing/typedecl.ml[561,20463+50]..[561,20463+58])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (typing/typedecl.ml[562,20522+17]..[562,20522+26])
                                                      Ppat_construct "Not_found" (typing/typedecl.ml[562,20522+17]..[562,20522+26])
                                                      None
                                                    expression (typing/typedecl.ml[562,20522+30]..[562,20522+42])
                                                      Pexp_assert
                                                      expression (typing/typedecl.ml[562,20522+37]..[562,20522+42])
                                                        Pexp_construct "false" (typing/typedecl.ml[562,20522+37]..[562,20522+42])
                                                        None
                                                ]
                                          ]
                                          expression (typing/typedecl.ml[563,20568+10]..[577,21114+16])
                                            Pexp_sequence
                                            expression (typing/typedecl.ml[563,20568+10]..[572,20952+13])
                                              Pexp_match
                                              expression (typing/typedecl.ml[563,20568+22]..[563,20568+39])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typedecl.ml[563,20568+22]..[563,20568+29])
                                                    Pexp_ident "cd_args" (typing/typedecl.ml[563,20568+22]..[563,20568+29])
                                                  expression (typing/typedecl.ml[563,20568+31]..[563,20568+39])
                                                    Pexp_ident "pcd_args" (typing/typedecl.ml[563,20568+31]..[563,20568+39])
                                                ]
                                              [
                                                <case>
                                                  pattern (typing/typedecl.ml[564,20613+12]..[564,20613+44])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/typedecl.ml[564,20613+12]..[564,20613+26])
                                                        Ppat_construct "Cstr_tuple" (typing/typedecl.ml[564,20613+12]..[564,20613+22])
                                                        Some
                                                          []
                                                          pattern (typing/typedecl.ml[564,20613+23]..[564,20613+26])
                                                            Ppat_var "tyl" (typing/typedecl.ml[564,20613+23]..[564,20613+26])
                                                      pattern (typing/typedecl.ml[564,20613+28]..[564,20613+44])
                                                        Ppat_construct "Pcstr_tuple" (typing/typedecl.ml[564,20613+28]..[564,20613+39])
                                                        Some
                                                          []
                                                          pattern (typing/typedecl.ml[564,20613+40]..[564,20613+44])
                                                            Ppat_var "styl" (typing/typedecl.ml[564,20613+40]..[564,20613+44])
                                                    ]
                                                  expression (typing/typedecl.ml[565,20661+14]..[568,20787+24])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[565,20661+14]..[565,20661+24])
                                                      Pexp_ident "List.iter2" (typing/typedecl.ml[565,20661+14]..[565,20661+24])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[566,20686+16]..[567,20717+69])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (typing/typedecl.ml[566,20686+21]..[566,20686+24])
                                                            Ppat_var "sty" (typing/typedecl.ml[566,20686+21]..[566,20686+24])
                                                          expression (typing/typedecl.ml[566,20686+25]..[567,20717+68]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/typedecl.ml[566,20686+25]..[566,20686+27])
                                                              Ppat_var "ty" (typing/typedecl.ml[566,20686+25]..[566,20686+27])
                                                            expression (typing/typedecl.ml[567,20717+19]..[567,20717+68])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[567,20717+19]..[567,20717+40])
                                                                Pexp_ident "check_constraints_rec" (typing/typedecl.ml[567,20717+19]..[567,20717+40])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[567,20717+41]..[567,20717+44])
                                                                    Pexp_ident "env" (typing/typedecl.ml[567,20717+41]..[567,20717+44])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[567,20717+45]..[567,20717+57])
                                                                    Pexp_field
                                                                    expression (typing/typedecl.ml[567,20717+45]..[567,20717+48])
                                                                      Pexp_ident "sty" (typing/typedecl.ml[567,20717+45]..[567,20717+48])
                                                                    "ptyp_loc" (typing/typedecl.ml[567,20717+49]..[567,20717+57])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[567,20717+58]..[567,20717+65])
                                                                    Pexp_ident "visited" (typing/typedecl.ml[567,20717+58]..[567,20717+65])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[567,20717+66]..[567,20717+68])
                                                                    Pexp_ident "ty" (typing/typedecl.ml[567,20717+66]..[567,20717+68])
                                                              ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[568,20787+16]..[568,20787+20])
                                                          Pexp_ident "styl" (typing/typedecl.ml[568,20787+16]..[568,20787+20])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[568,20787+21]..[568,20787+24])
                                                          Pexp_ident "tyl" (typing/typedecl.ml[568,20787+21]..[568,20787+24])
                                                    ]
                                                <case>
                                                  pattern (typing/typedecl.ml[569,20812+12]..[569,20812+46])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/typedecl.ml[569,20812+12]..[569,20812+27])
                                                        Ppat_construct "Cstr_record" (typing/typedecl.ml[569,20812+12]..[569,20812+23])
                                                        Some
                                                          []
                                                          pattern (typing/typedecl.ml[569,20812+24]..[569,20812+27])
                                                            Ppat_var "tyl" (typing/typedecl.ml[569,20812+24]..[569,20812+27])
                                                      pattern (typing/typedecl.ml[569,20812+29]..[569,20812+46])
                                                        Ppat_construct "Pcstr_record" (typing/typedecl.ml[569,20812+29]..[569,20812+41])
                                                        Some
                                                          []
                                                          pattern (typing/typedecl.ml[569,20812+42]..[569,20812+46])
                                                            Ppat_var "styl" (typing/typedecl.ml[569,20812+42]..[569,20812+46])
                                                    ]
                                                  expression (typing/typedecl.ml[570,20862+14]..[570,20862+59])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[570,20862+14]..[570,20862+38])
                                                      Pexp_ident "check_constraints_labels" (typing/typedecl.ml[570,20862+14]..[570,20862+38])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[570,20862+39]..[570,20862+42])
                                                          Pexp_ident "env" (typing/typedecl.ml[570,20862+39]..[570,20862+42])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[570,20862+43]..[570,20862+50])
                                                          Pexp_ident "visited" (typing/typedecl.ml[570,20862+43]..[570,20862+50])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[570,20862+51]..[570,20862+54])
                                                          Pexp_ident "tyl" (typing/typedecl.ml[570,20862+51]..[570,20862+54])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[570,20862+55]..[570,20862+59])
                                                          Pexp_ident "styl" (typing/typedecl.ml[570,20862+55]..[570,20862+59])
                                                    ]
                                                <case>
                                                  pattern (typing/typedecl.ml[571,20922+12]..[571,20922+13])
                                                    Ppat_any
                                                  expression (typing/typedecl.ml[571,20922+17]..[571,20922+29])
                                                    Pexp_assert
                                                    expression (typing/typedecl.ml[571,20922+24]..[571,20922+29])
                                                      Pexp_construct "false" (typing/typedecl.ml[571,20922+24]..[571,20922+29])
                                                      None
                                              ]
                                            expression (typing/typedecl.ml[573,20967+10]..[577,21114+16])
                                              Pexp_match
                                              expression (typing/typedecl.ml[573,20967+16]..[573,20967+31])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typedecl.ml[573,20967+16]..[573,20967+23])
                                                    Pexp_ident "pcd_res" (typing/typedecl.ml[573,20967+16]..[573,20967+23])
                                                  expression (typing/typedecl.ml[573,20967+25]..[573,20967+31])
                                                    Pexp_ident "cd_res" (typing/typedecl.ml[573,20967+25]..[573,20967+31])
                                                ]
                                              [
                                                <case>
                                                  pattern (typing/typedecl.ml[574,21004+12]..[574,21004+27])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/typedecl.ml[574,21004+12]..[574,21004+19])
                                                        Ppat_construct "Some" (typing/typedecl.ml[574,21004+12]..[574,21004+16])
                                                        Some
                                                          []
                                                          pattern (typing/typedecl.ml[574,21004+17]..[574,21004+19])
                                                            Ppat_var "sr" (typing/typedecl.ml[574,21004+17]..[574,21004+19])
                                                      pattern (typing/typedecl.ml[574,21004+21]..[574,21004+27])
                                                        Ppat_construct "Some" (typing/typedecl.ml[574,21004+21]..[574,21004+25])
                                                        Some
                                                          []
                                                          pattern (typing/typedecl.ml[574,21004+26]..[574,21004+27])
                                                            Ppat_var "r" (typing/typedecl.ml[574,21004+26]..[574,21004+27])
                                                    ]
                                                  expression (typing/typedecl.ml[575,21035+14]..[575,21035+61])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[575,21035+14]..[575,21035+35])
                                                      Pexp_ident "check_constraints_rec" (typing/typedecl.ml[575,21035+14]..[575,21035+35])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[575,21035+36]..[575,21035+39])
                                                          Pexp_ident "env" (typing/typedecl.ml[575,21035+36]..[575,21035+39])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[575,21035+40]..[575,21035+51])
                                                          Pexp_field
                                                          expression (typing/typedecl.ml[575,21035+40]..[575,21035+42])
                                                            Pexp_ident "sr" (typing/typedecl.ml[575,21035+40]..[575,21035+42])
                                                          "ptyp_loc" (typing/typedecl.ml[575,21035+43]..[575,21035+51])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[575,21035+52]..[575,21035+59])
                                                          Pexp_ident "visited" (typing/typedecl.ml[575,21035+52]..[575,21035+59])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[575,21035+60]..[575,21035+61])
                                                          Pexp_ident "r" (typing/typedecl.ml[575,21035+60]..[575,21035+61])
                                                    ]
                                                <case>
                                                  pattern (typing/typedecl.ml[576,21097+12]..[576,21097+13])
                                                    Ppat_any
                                                  expression (typing/typedecl.ml[577,21114+14]..[577,21114+16])
                                                    Pexp_construct "()" (typing/typedecl.ml[577,21114+14]..[577,21114+16])
                                                    None
                                              ]
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[578,21133+8]..[578,21133+9])
                                        Pexp_ident "l" (typing/typedecl.ml[578,21133+8]..[578,21133+9])
                                  ]
                        <case>
                          pattern (typing/typedecl.ml[579,21143+4]..[579,21143+22])
                            Ppat_construct "Type_record" (typing/typedecl.ml[579,21143+4]..[579,21143+15])
                            Some
                              []
                              pattern (typing/typedecl.ml[579,21143+16]..[579,21143+22])
                                Ppat_tuple
                                [
                                  pattern (typing/typedecl.ml[579,21143+17]..[579,21143+18])
                                    Ppat_var "l" (typing/typedecl.ml[579,21143+17]..[579,21143+18])
                                  pattern (typing/typedecl.ml[579,21143+20]..[579,21143+21])
                                    Ppat_any
                                ]
                          expression (typing/typedecl.ml[580,21169+6]..[585,21354+47])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typedecl.ml[580,21169+10]..[580,21169+17])
                                  Ppat_var "find_pl" (typing/typedecl.ml[580,21169+10]..[580,21169+17])
                                expression (typing/typedecl.ml[580,21169+20]..[582,21230+71])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/typedecl.ml[581,21198+10]..[581,21198+25])
                                        Ppat_construct "Ptype_record" (typing/typedecl.ml[581,21198+10]..[581,21198+22])
                                        Some
                                          []
                                          pattern (typing/typedecl.ml[581,21198+23]..[581,21198+25])
                                            Ppat_var "pl" (typing/typedecl.ml[581,21198+23]..[581,21198+25])
                                      expression (typing/typedecl.ml[581,21198+29]..[581,21198+31])
                                        Pexp_ident "pl" (typing/typedecl.ml[581,21198+29]..[581,21198+31])
                                    <case>
                                      pattern (typing/typedecl.ml[582,21230+10]..[582,21230+55])
                                        Ppat_or
                                        pattern (typing/typedecl.ml[582,21230+10]..[582,21230+42])
                                          Ppat_or
                                          pattern (typing/typedecl.ml[582,21230+10]..[582,21230+25])
                                            Ppat_construct "Ptype_variant" (typing/typedecl.ml[582,21230+10]..[582,21230+23])
                                            Some
                                              []
                                              pattern (typing/typedecl.ml[582,21230+24]..[582,21230+25])
                                                Ppat_any
                                          pattern (typing/typedecl.ml[582,21230+28]..[582,21230+42])
                                            Ppat_construct "Ptype_abstract" (typing/typedecl.ml[582,21230+28]..[582,21230+42])
                                            None
                                        pattern (typing/typedecl.ml[582,21230+45]..[582,21230+55])
                                          Ppat_construct "Ptype_open" (typing/typedecl.ml[582,21230+45]..[582,21230+55])
                                          None
                                      expression (typing/typedecl.ml[582,21230+59]..[582,21230+71])
                                        Pexp_assert
                                        expression (typing/typedecl.ml[582,21230+66]..[582,21230+71])
                                          Pexp_construct "false" (typing/typedecl.ml[582,21230+66]..[582,21230+71])
                                          None
                                  ]
                            ]
                            expression (typing/typedecl.ml[584,21311+6]..[585,21354+47])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typedecl.ml[584,21311+10]..[584,21311+12])
                                    Ppat_var "pl" (typing/typedecl.ml[584,21311+10]..[584,21311+12])
                                  expression (typing/typedecl.ml[584,21311+15]..[584,21311+39])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[584,21311+15]..[584,21311+22])
                                      Pexp_ident "find_pl" (typing/typedecl.ml[584,21311+15]..[584,21311+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[584,21311+23]..[584,21311+39])
                                          Pexp_field
                                          expression (typing/typedecl.ml[584,21311+23]..[584,21311+28])
                                            Pexp_ident "sdecl" (typing/typedecl.ml[584,21311+23]..[584,21311+28])
                                          "ptype_kind" (typing/typedecl.ml[584,21311+29]..[584,21311+39])
                                    ]
                              ]
                              expression (typing/typedecl.ml[585,21354+6]..[585,21354+47])
                                Pexp_apply
                                expression (typing/typedecl.ml[585,21354+6]..[585,21354+30])
                                  Pexp_ident "check_constraints_labels" (typing/typedecl.ml[585,21354+6]..[585,21354+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[585,21354+31]..[585,21354+34])
                                      Pexp_ident "env" (typing/typedecl.ml[585,21354+31]..[585,21354+34])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[585,21354+35]..[585,21354+42])
                                      Pexp_ident "visited" (typing/typedecl.ml[585,21354+35]..[585,21354+42])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[585,21354+43]..[585,21354+44])
                                      Pexp_ident "l" (typing/typedecl.ml[585,21354+43]..[585,21354+44])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[585,21354+45]..[585,21354+47])
                                      Pexp_ident "pl" (typing/typedecl.ml[585,21354+45]..[585,21354+47])
                                ]
                        <case>
                          pattern (typing/typedecl.ml[586,21402+4]..[586,21402+13])
                            Ppat_construct "Type_open" (typing/typedecl.ml[586,21402+4]..[586,21402+13])
                            None
                          expression (typing/typedecl.ml[586,21402+17]..[586,21402+19])
                            Pexp_construct "()" (typing/typedecl.ml[586,21402+17]..[586,21402+19])
                            None
                      ]
                    expression (typing/typedecl.ml[588,21429+2]..[595,21654+5])
                      Pexp_match
                      expression (typing/typedecl.ml[588,21429+14]..[588,21429+32])
                        Pexp_field
                        expression (typing/typedecl.ml[588,21429+14]..[588,21429+18])
                          Pexp_ident "decl" (typing/typedecl.ml[588,21429+14]..[588,21429+18])
                        "type_manifest" (typing/typedecl.ml[588,21429+19]..[588,21429+32])
                      [
                        <case>
                          pattern (typing/typedecl.ml[589,21467+4]..[589,21467+8])
                            Ppat_construct "None" (typing/typedecl.ml[589,21467+4]..[589,21467+8])
                            None
                          expression (typing/typedecl.ml[589,21467+12]..[589,21467+14])
                            Pexp_construct "()" (typing/typedecl.ml[589,21467+12]..[589,21467+14])
                            None
                        <case>
                          pattern (typing/typedecl.ml[590,21482+4]..[590,21482+11])
                            Ppat_construct "Some" (typing/typedecl.ml[590,21482+4]..[590,21482+8])
                            Some
                              []
                              pattern (typing/typedecl.ml[590,21482+9]..[590,21482+11])
                                Ppat_var "ty" (typing/typedecl.ml[590,21482+9]..[590,21482+11])
                          expression (typing/typedecl.ml[591,21497+6]..[594,21598+55])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typedecl.ml[591,21497+10]..[591,21497+13])
                                  Ppat_var "sty" (typing/typedecl.ml[591,21497+10]..[591,21497+13])
                                expression (typing/typedecl.ml[592,21513+8]..[592,21513+75])
                                  Pexp_match
                                  expression (typing/typedecl.ml[592,21513+14]..[592,21513+34])
                                    Pexp_field
                                    expression (typing/typedecl.ml[592,21513+14]..[592,21513+19])
                                      Pexp_ident "sdecl" (typing/typedecl.ml[592,21513+14]..[592,21513+19])
                                    "ptype_manifest" (typing/typedecl.ml[592,21513+20]..[592,21513+34])
                                  [
                                    <case>
                                      pattern (typing/typedecl.ml[592,21513+40]..[592,21513+48])
                                        Ppat_construct "Some" (typing/typedecl.ml[592,21513+40]..[592,21513+44])
                                        Some
                                          []
                                          pattern (typing/typedecl.ml[592,21513+45]..[592,21513+48])
                                            Ppat_var "sty" (typing/typedecl.ml[592,21513+45]..[592,21513+48])
                                      expression (typing/typedecl.ml[592,21513+52]..[592,21513+55])
                                        Pexp_ident "sty" (typing/typedecl.ml[592,21513+52]..[592,21513+55])
                                    <case>
                                      pattern (typing/typedecl.ml[592,21513+58]..[592,21513+59])
                                        Ppat_any
                                      expression (typing/typedecl.ml[592,21513+63]..[592,21513+75])
                                        Pexp_assert
                                        expression (typing/typedecl.ml[592,21513+70]..[592,21513+75])
                                          Pexp_construct "false" (typing/typedecl.ml[592,21513+70]..[592,21513+75])
                                          None
                                  ]
                            ]
                            expression (typing/typedecl.ml[594,21598+6]..[594,21598+55])
                              Pexp_apply
                              expression (typing/typedecl.ml[594,21598+6]..[594,21598+27])
                                Pexp_ident "check_constraints_rec" (typing/typedecl.ml[594,21598+6]..[594,21598+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[594,21598+28]..[594,21598+31])
                                    Pexp_ident "env" (typing/typedecl.ml[594,21598+28]..[594,21598+31])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[594,21598+32]..[594,21598+44])
                                    Pexp_field
                                    expression (typing/typedecl.ml[594,21598+32]..[594,21598+35])
                                      Pexp_ident "sty" (typing/typedecl.ml[594,21598+32]..[594,21598+35])
                                    "ptyp_loc" (typing/typedecl.ml[594,21598+36]..[594,21598+44])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[594,21598+45]..[594,21598+52])
                                    Pexp_ident "visited" (typing/typedecl.ml[594,21598+45]..[594,21598+52])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[594,21598+53]..[594,21598+55])
                                    Pexp_ident "ty" (typing/typedecl.ml[594,21598+53]..[594,21598+55])
                              ]
                      ]
    ]
  structure_item (typing/typedecl.ml[602,21848+0]..[634,23143+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[602,21848+4]..[602,21848+19])
          Ppat_var "check_coherence" (typing/typedecl.ml[602,21848+4]..[602,21848+19])
        expression (typing/typedecl.ml[602,21848+20]..[634,23143+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[602,21848+20]..[602,21848+23])
            Ppat_var "env" (typing/typedecl.ml[602,21848+20]..[602,21848+23])
          expression (typing/typedecl.ml[602,21848+24]..[634,23143+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[602,21848+24]..[602,21848+27])
              Ppat_var "loc" (typing/typedecl.ml[602,21848+24]..[602,21848+27])
            expression (typing/typedecl.ml[602,21848+28]..[634,23143+11]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[602,21848+28]..[602,21848+33])
                Ppat_var "dpath" (typing/typedecl.ml[602,21848+28]..[602,21848+33])
              expression (typing/typedecl.ml[602,21848+34]..[634,23143+11]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[602,21848+34]..[602,21848+38])
                  Ppat_var "decl" (typing/typedecl.ml[602,21848+34]..[602,21848+38])
                expression (typing/typedecl.ml[603,21889+2]..[634,23143+11])
                  Pexp_match
                  expression (typing/typedecl.ml[603,21889+8]..[603,21889+12])
                    Pexp_ident "decl" (typing/typedecl.ml[603,21889+8]..[603,21889+12])
                  [
                    <case>
                      pattern (typing/typedecl.ml[604,21907+4]..[605,21970+31])
                        Ppat_record Closed
                        [
                          "type_kind" (typing/typedecl.ml[604,21907+6]..[604,21907+15])
                            pattern (typing/typedecl.ml[604,21907+18]..[604,21907+61])
                              Ppat_or
                              pattern (typing/typedecl.ml[604,21907+19]..[604,21907+49])
                                Ppat_or
                                pattern (typing/typedecl.ml[604,21907+19]..[604,21907+33])
                                  Ppat_construct "Type_variant" (typing/typedecl.ml[604,21907+19]..[604,21907+31])
                                  Some
                                    []
                                    pattern (typing/typedecl.ml[604,21907+32]..[604,21907+33])
                                      Ppat_any
                                pattern (typing/typedecl.ml[604,21907+36]..[604,21907+49])
                                  Ppat_construct "Type_record" (typing/typedecl.ml[604,21907+36]..[604,21907+47])
                                  Some
                                    []
                                    pattern (typing/typedecl.ml[604,21907+48]..[604,21907+49])
                                      Ppat_any
                              pattern (typing/typedecl.ml[604,21907+51]..[604,21907+60])
                                Ppat_construct "Type_open" (typing/typedecl.ml[604,21907+51]..[604,21907+60])
                                None
                          "type_manifest" (typing/typedecl.ml[605,21970+6]..[605,21970+19])
                            pattern (typing/typedecl.ml[605,21970+22]..[605,21970+29])
                              Ppat_construct "Some" (typing/typedecl.ml[605,21970+22]..[605,21970+26])
                              Some
                                []
                                pattern (typing/typedecl.ml[605,21970+27]..[605,21970+29])
                                  Ppat_var "ty" (typing/typedecl.ml[605,21970+27]..[605,21970+29])
                        ]
                      expression (typing/typedecl.ml[606,22005+6]..[633,23133+9])
                        Pexp_match
                        expression (typing/typedecl.ml[606,22005+18]..[606,22005+29])
                          Pexp_apply
                          expression (typing/typedecl.ml[606,22005+18]..[606,22005+26])
                            Pexp_ident "get_desc" (typing/typedecl.ml[606,22005+18]..[606,22005+26])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[606,22005+27]..[606,22005+29])
                                Pexp_ident "ty" (typing/typedecl.ml[606,22005+27]..[606,22005+29])
                          ]
                        [
                          <case>
                            pattern (typing/typedecl.ml[607,22040+8]..[607,22040+30])
                              Ppat_construct "Tconstr" (typing/typedecl.ml[607,22040+8]..[607,22040+15])
                              Some
                                []
                                pattern (typing/typedecl.ml[607,22040+15]..[607,22040+30])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typedecl.ml[607,22040+16]..[607,22040+20])
                                      Ppat_var "path" (typing/typedecl.ml[607,22040+16]..[607,22040+20])
                                    pattern (typing/typedecl.ml[607,22040+22]..[607,22040+26])
                                      Ppat_var "args" (typing/typedecl.ml[607,22040+22]..[607,22040+26])
                                    pattern (typing/typedecl.ml[607,22040+28]..[607,22040+29])
                                      Ppat_any
                                  ]
                            expression (typing/typedecl.ml[608,22074+10]..[631,23051+13])
                              Pexp_try
                              expression (typing/typedecl.ml[609,22094+12]..[628,22890+67])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typedecl.ml[609,22094+16]..[609,22094+21])
                                      Ppat_var "decl'" (typing/typedecl.ml[609,22094+16]..[609,22094+21])
                                    expression (typing/typedecl.ml[609,22094+24]..[609,22094+46])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[609,22094+24]..[609,22094+37])
                                        Pexp_ident "Env.find_type" (typing/typedecl.ml[609,22094+24]..[609,22094+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[609,22094+38]..[609,22094+42])
                                            Pexp_ident "path" (typing/typedecl.ml[609,22094+38]..[609,22094+42])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[609,22094+43]..[609,22094+46])
                                            Pexp_ident "env" (typing/typedecl.ml[609,22094+43]..[609,22094+46])
                                      ]
                                ]
                                expression (typing/typedecl.ml[610,22144+12]..[628,22890+67])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typedecl.ml[610,22144+16]..[610,22144+19])
                                        Ppat_var "err" (typing/typedecl.ml[610,22144+16]..[610,22144+19])
                                      expression (typing/typedecl.ml[611,22166+14]..[625,22825+17])
                                        Pexp_ifthenelse
                                        expression (typing/typedecl.ml[611,22166+17]..[611,22166+65])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[611,22166+34]..[611,22166+36])
                                            Pexp_ident "<>" (typing/typedecl.ml[611,22166+34]..[611,22166+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[611,22166+17]..[611,22166+33])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[611,22166+17]..[611,22166+28])
                                                  Pexp_ident "List.length" (typing/typedecl.ml[611,22166+17]..[611,22166+28])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[611,22166+29]..[611,22166+33])
                                                      Pexp_ident "args" (typing/typedecl.ml[611,22166+29]..[611,22166+33])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[611,22166+37]..[611,22166+65])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[611,22166+37]..[611,22166+48])
                                                  Pexp_ident "List.length" (typing/typedecl.ml[611,22166+37]..[611,22166+48])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[611,22166+49]..[611,22166+65])
                                                      Pexp_field
                                                      expression (typing/typedecl.ml[611,22166+49]..[611,22166+53])
                                                        Pexp_ident "decl" (typing/typedecl.ml[611,22166+49]..[611,22166+53])
                                                      "type_params" (typing/typedecl.ml[611,22166+54]..[611,22166+65])
                                                ]
                                          ]
                                        expression (typing/typedecl.ml[612,22232+19]..[612,22232+41])
                                          Pexp_construct "Some" (typing/typedecl.ml[612,22232+19]..[612,22232+23])
                                          Some
                                            expression (typing/typedecl.ml[612,22232+24]..[612,22232+41])
                                              Pexp_construct "Includecore.Arity" (typing/typedecl.ml[612,22232+24]..[612,22232+41])
                                              None
                                        Some
                                          expression (typing/typedecl.ml[613,22274+19]..[625,22825+17])
                                            Pexp_match
                                            expression (typing/typedecl.ml[614,22299+22]..[614,22299+65])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[614,22299+22]..[614,22299+33])
                                                Pexp_ident "Ctype.equal" (typing/typedecl.ml[614,22299+22]..[614,22299+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[614,22299+34]..[614,22299+37])
                                                    Pexp_ident "env" (typing/typedecl.ml[614,22299+34]..[614,22299+37])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[614,22299+38]..[614,22299+43])
                                                    Pexp_construct "false" (typing/typedecl.ml[614,22299+38]..[614,22299+43])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[614,22299+44]..[614,22299+48])
                                                    Pexp_ident "args" (typing/typedecl.ml[614,22299+44]..[614,22299+48])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[614,22299+49]..[614,22299+65])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[614,22299+49]..[614,22299+53])
                                                      Pexp_ident "decl" (typing/typedecl.ml[614,22299+49]..[614,22299+53])
                                                    "type_params" (typing/typedecl.ml[614,22299+54]..[614,22299+65])
                                              ]
                                            [
                                              <case>
                                                pattern (typing/typedecl.ml[615,22370+18]..[615,22370+46])
                                                  Ppat_exception
                                                  pattern (typing/typedecl.ml[615,22370+28]..[615,22370+46])
                                                    Ppat_construct "Ctype.Equality" (typing/typedecl.ml[615,22370+28]..[615,22370+42])
                                                    Some
                                                      []
                                                      pattern (typing/typedecl.ml[615,22370+43]..[615,22370+46])
                                                        Ppat_var "err" (typing/typedecl.ml[615,22370+43]..[615,22370+46])
                                                expression (typing/typedecl.ml[616,22420+20]..[616,22420+53])
                                                  Pexp_construct "Some" (typing/typedecl.ml[616,22420+20]..[616,22420+24])
                                                  Some
                                                    expression (typing/typedecl.ml[616,22420+25]..[616,22420+53])
                                                      Pexp_construct "Includecore.Constraint" (typing/typedecl.ml[616,22420+26]..[616,22420+48])
                                                      Some
                                                        expression (typing/typedecl.ml[616,22420+49]..[616,22420+52])
                                                          Pexp_ident "err" (typing/typedecl.ml[616,22420+49]..[616,22420+52])
                                              <case>
                                                pattern (typing/typedecl.ml[617,22474+18]..[617,22474+20])
                                                  Ppat_construct "()" (typing/typedecl.ml[617,22474+18]..[617,22474+20])
                                                  None
                                                expression (typing/typedecl.ml[618,22498+20]..[624,22746+78])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[618,22498+20]..[618,22498+49])
                                                    Pexp_ident "Includecore.type_declarations" (typing/typedecl.ml[618,22498+20]..[618,22498+49])
                                                  [
                                                    <arg>
                                                    Labelled "loc"
                                                      expression (typing/typedecl.ml[618,22498+51]..[618,22498+54])
                                                        Pexp_ident "loc" (typing/typedecl.ml[618,22498+51]..[618,22498+54])
                                                    <arg>
                                                    Labelled "equality"
                                                      expression (typing/typedecl.ml[618,22498+65]..[618,22498+69])
                                                        Pexp_construct "true" (typing/typedecl.ml[618,22498+65]..[618,22498+69])
                                                        None
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[618,22498+70]..[618,22498+73])
                                                        Pexp_ident "env" (typing/typedecl.ml[618,22498+70]..[618,22498+73])
                                                    <arg>
                                                    Labelled "mark"
                                                      expression (typing/typedecl.ml[619,22572+28]..[619,22572+32])
                                                        Pexp_construct "true" (typing/typedecl.ml[619,22572+28]..[619,22572+32])
                                                        None
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[620,22605+22]..[620,22605+38])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[620,22605+23]..[620,22605+32])
                                                          Pexp_ident "Path.last" (typing/typedecl.ml[620,22605+23]..[620,22605+32])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[620,22605+33]..[620,22605+37])
                                                              Pexp_ident "path" (typing/typedecl.ml[620,22605+33]..[620,22605+37])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[621,22644+22]..[621,22644+27])
                                                        Pexp_ident "decl'" (typing/typedecl.ml[621,22644+22]..[621,22644+27])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[622,22672+22]..[622,22672+27])
                                                        Pexp_ident "dpath" (typing/typedecl.ml[622,22672+22]..[622,22672+27])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[623,22700+22]..[624,22746+78])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[623,22700+23]..[623,22700+45])
                                                          Pexp_ident "Subst.type_declaration" (typing/typedecl.ml[623,22700+23]..[623,22700+45])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[624,22746+25]..[624,22746+72])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[624,22746+26]..[624,22746+45])
                                                                Pexp_ident "Subst.add_type_path" (typing/typedecl.ml[624,22746+26]..[624,22746+45])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[624,22746+46]..[624,22746+51])
                                                                    Pexp_ident "dpath" (typing/typedecl.ml[624,22746+46]..[624,22746+51])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[624,22746+52]..[624,22746+56])
                                                                    Pexp_ident "path" (typing/typedecl.ml[624,22746+52]..[624,22746+56])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[624,22746+57]..[624,22746+71])
                                                                    Pexp_ident "Subst.identity" (typing/typedecl.ml[624,22746+57]..[624,22746+71])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[624,22746+73]..[624,22746+77])
                                                              Pexp_ident "decl" (typing/typedecl.ml[624,22746+73]..[624,22746+77])
                                                        ]
                                                  ]
                                            ]
                                  ]
                                  expression (typing/typedecl.ml[627,22858+12]..[628,22890+67])
                                    Pexp_ifthenelse
                                    expression (typing/typedecl.ml[627,22858+15]..[627,22858+26])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[627,22858+19]..[627,22858+21])
                                        Pexp_ident "<>" (typing/typedecl.ml[627,22858+19]..[627,22858+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[627,22858+15]..[627,22858+18])
                                            Pexp_ident "err" (typing/typedecl.ml[627,22858+15]..[627,22858+18])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[627,22858+22]..[627,22858+26])
                                            Pexp_construct "None" (typing/typedecl.ml[627,22858+22]..[627,22858+26])
                                            None
                                      ]
                                    expression (typing/typedecl.ml[628,22890+14]..[628,22890+67])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[628,22890+14]..[628,22890+19])
                                        Pexp_ident "raise" (typing/typedecl.ml[628,22890+14]..[628,22890+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[628,22890+19]..[628,22890+67])
                                            Pexp_construct "Error" (typing/typedecl.ml[628,22890+20]..[628,22890+25])
                                            Some
                                              expression (typing/typedecl.ml[628,22890+25]..[628,22890+66])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typedecl.ml[628,22890+26]..[628,22890+29])
                                                    Pexp_ident "loc" (typing/typedecl.ml[628,22890+26]..[628,22890+29])
                                                  expression (typing/typedecl.ml[628,22890+31]..[628,22890+65])
                                                    Pexp_construct "Definition_mismatch" (typing/typedecl.ml[628,22890+31]..[628,22890+50])
                                                    Some
                                                      expression (typing/typedecl.ml[628,22890+51]..[628,22890+65])
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typedecl.ml[628,22890+52]..[628,22890+54])
                                                            Pexp_ident "ty" (typing/typedecl.ml[628,22890+52]..[628,22890+54])
                                                          expression (typing/typedecl.ml[628,22890+56]..[628,22890+59])
                                                            Pexp_ident "env" (typing/typedecl.ml[628,22890+56]..[628,22890+59])
                                                          expression (typing/typedecl.ml[628,22890+61]..[628,22890+64])
                                                            Pexp_ident "err" (typing/typedecl.ml[628,22890+61]..[628,22890+64])
                                                        ]
                                                ]
                                      ]
                                    None
                              [
                                <case>
                                  pattern (typing/typedecl.ml[629,22958+15]..[629,22958+24])
                                    Ppat_construct "Not_found" (typing/typedecl.ml[629,22958+15]..[629,22958+24])
                                    None
                                  expression (typing/typedecl.ml[630,22986+12]..[630,22986+64])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[630,22986+12]..[630,22986+17])
                                      Pexp_ident "raise" (typing/typedecl.ml[630,22986+12]..[630,22986+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[630,22986+17]..[630,22986+64])
                                          Pexp_construct "Error" (typing/typedecl.ml[630,22986+18]..[630,22986+23])
                                          Some
                                            expression (typing/typedecl.ml[630,22986+23]..[630,22986+63])
                                              Pexp_tuple
                                              [
                                                expression (typing/typedecl.ml[630,22986+24]..[630,22986+27])
                                                  Pexp_ident "loc" (typing/typedecl.ml[630,22986+24]..[630,22986+27])
                                                expression (typing/typedecl.ml[630,22986+29]..[630,22986+62])
                                                  Pexp_construct "Unavailable_type_constructor" (typing/typedecl.ml[630,22986+29]..[630,22986+57])
                                                  Some
                                                    expression (typing/typedecl.ml[630,22986+58]..[630,22986+62])
                                                      Pexp_ident "path" (typing/typedecl.ml[630,22986+58]..[630,22986+62])
                                              ]
                                    ]
                              ]
                          <case>
                            pattern (typing/typedecl.ml[632,23065+8]..[632,23065+9])
                              Ppat_any
                            expression (typing/typedecl.ml[632,23065+13]..[632,23065+67])
                              Pexp_apply
                              expression (typing/typedecl.ml[632,23065+13]..[632,23065+18])
                                Pexp_ident "raise" (typing/typedecl.ml[632,23065+13]..[632,23065+18])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[632,23065+18]..[632,23065+67])
                                    Pexp_construct "Error" (typing/typedecl.ml[632,23065+19]..[632,23065+24])
                                    Some
                                      expression (typing/typedecl.ml[632,23065+24]..[632,23065+66])
                                        Pexp_tuple
                                        [
                                          expression (typing/typedecl.ml[632,23065+25]..[632,23065+28])
                                            Pexp_ident "loc" (typing/typedecl.ml[632,23065+25]..[632,23065+28])
                                          expression (typing/typedecl.ml[632,23065+30]..[632,23065+65])
                                            Pexp_construct "Definition_mismatch" (typing/typedecl.ml[632,23065+30]..[632,23065+49])
                                            Some
                                              expression (typing/typedecl.ml[632,23065+50]..[632,23065+65])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typedecl.ml[632,23065+51]..[632,23065+53])
                                                    Pexp_ident "ty" (typing/typedecl.ml[632,23065+51]..[632,23065+53])
                                                  expression (typing/typedecl.ml[632,23065+55]..[632,23065+58])
                                                    Pexp_ident "env" (typing/typedecl.ml[632,23065+55]..[632,23065+58])
                                                  expression (typing/typedecl.ml[632,23065+60]..[632,23065+64])
                                                    Pexp_construct "None" (typing/typedecl.ml[632,23065+60]..[632,23065+64])
                                                    None
                                                ]
                                        ]
                              ]
                        ]
                    <case>
                      pattern (typing/typedecl.ml[634,23143+4]..[634,23143+5])
                        Ppat_any
                      expression (typing/typedecl.ml[634,23143+9]..[634,23143+11])
                        Pexp_construct "()" (typing/typedecl.ml[634,23143+9]..[634,23143+11])
                        None
                  ]
    ]
  structure_item (typing/typedecl.ml[636,23156+0]..[637,23196+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[636,23156+4]..[636,23156+16])
          Ppat_var "check_abbrev" (typing/typedecl.ml[636,23156+4]..[636,23156+16])
        expression (typing/typedecl.ml[636,23156+17]..[637,23196+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[636,23156+17]..[636,23156+20])
            Ppat_var "env" (typing/typedecl.ml[636,23156+17]..[636,23156+20])
          expression (typing/typedecl.ml[636,23156+21]..[637,23196+59]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[636,23156+21]..[636,23156+26])
              Ppat_var "sdecl" (typing/typedecl.ml[636,23156+21]..[636,23156+26])
            expression (typing/typedecl.ml[636,23156+27]..[637,23196+59]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[636,23156+27]..[636,23156+37])
                Ppat_tuple
                [
                  pattern (typing/typedecl.ml[636,23156+28]..[636,23156+30])
                    Ppat_var "id" (typing/typedecl.ml[636,23156+28]..[636,23156+30])
                  pattern (typing/typedecl.ml[636,23156+32]..[636,23156+36])
                    Ppat_var "decl" (typing/typedecl.ml[636,23156+32]..[636,23156+36])
                ]
              expression (typing/typedecl.ml[637,23196+2]..[637,23196+59])
                Pexp_apply
                expression (typing/typedecl.ml[637,23196+2]..[637,23196+17])
                  Pexp_ident "check_coherence" (typing/typedecl.ml[637,23196+2]..[637,23196+17])
                [
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[637,23196+18]..[637,23196+21])
                      Pexp_ident "env" (typing/typedecl.ml[637,23196+18]..[637,23196+21])
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[637,23196+22]..[637,23196+37])
                      Pexp_field
                      expression (typing/typedecl.ml[637,23196+22]..[637,23196+27])
                        Pexp_ident "sdecl" (typing/typedecl.ml[637,23196+22]..[637,23196+27])
                      "ptype_loc" (typing/typedecl.ml[637,23196+28]..[637,23196+37])
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[637,23196+38]..[637,23196+54])
                      Pexp_construct "Path.Pident" (typing/typedecl.ml[637,23196+39]..[637,23196+50])
                      Some
                        expression (typing/typedecl.ml[637,23196+51]..[637,23196+53])
                          Pexp_ident "id" (typing/typedecl.ml[637,23196+51]..[637,23196+53])
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[637,23196+55]..[637,23196+59])
                      Pexp_ident "decl" (typing/typedecl.ml[637,23196+55]..[637,23196+59])
                ]
    ]
  structure_item (typing/typedecl.ml[641,23301+0]..[696,25284+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[641,23301+4]..[641,23301+22])
          Ppat_var "check_well_founded" (typing/typedecl.ml[641,23301+4]..[641,23301+22])
        expression (typing/typedecl.ml[641,23301+23]..[696,25284+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[641,23301+23]..[641,23301+26])
            Ppat_var "env" (typing/typedecl.ml[641,23301+23]..[641,23301+26])
          expression (typing/typedecl.ml[641,23301+27]..[696,25284+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[641,23301+27]..[641,23301+30])
              Ppat_var "loc" (typing/typedecl.ml[641,23301+27]..[641,23301+30])
            expression (typing/typedecl.ml[641,23301+31]..[696,25284+24]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[641,23301+31]..[641,23301+35])
                Ppat_var "path" (typing/typedecl.ml[641,23301+31]..[641,23301+35])
              expression (typing/typedecl.ml[641,23301+36]..[696,25284+24]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[641,23301+36]..[641,23301+44])
                  Ppat_var "to_check" (typing/typedecl.ml[641,23301+36]..[641,23301+44])
                expression (typing/typedecl.ml[641,23301+45]..[696,25284+24]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typedecl.ml[641,23301+45]..[641,23301+47])
                    Ppat_var "ty" (typing/typedecl.ml[641,23301+45]..[641,23301+47])
                  expression (typing/typedecl.ml[642,23351+2]..[696,25284+24])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typedecl.ml[642,23351+6]..[642,23351+13])
                          Ppat_var "visited" (typing/typedecl.ml[642,23351+6]..[642,23351+13])
                        expression (typing/typedecl.ml[642,23351+16]..[642,23351+33])
                          Pexp_apply
                          expression (typing/typedecl.ml[642,23351+16]..[642,23351+19])
                            Pexp_ident "ref" (typing/typedecl.ml[642,23351+16]..[642,23351+19])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[642,23351+20]..[642,23351+33])
                                Pexp_ident "TypeMap.empty" (typing/typedecl.ml[642,23351+20]..[642,23351+33])
                          ]
                    ]
                    expression (typing/typedecl.ml[643,23388+2]..[696,25284+24])
                      Pexp_let Rec
                      [
                        <def>
                          pattern (typing/typedecl.ml[643,23388+10]..[643,23388+15])
                            Ppat_var "check" (typing/typedecl.ml[643,23388+10]..[643,23388+15])
                          expression (typing/typedecl.ml[643,23388+16]..[690,25067+36]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typedecl.ml[643,23388+16]..[643,23388+19])
                              Ppat_var "ty0" (typing/typedecl.ml[643,23388+16]..[643,23388+19])
                            expression (typing/typedecl.ml[643,23388+20]..[690,25067+36]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typedecl.ml[643,23388+20]..[643,23388+27])
                                Ppat_var "parents" (typing/typedecl.ml[643,23388+20]..[643,23388+27])
                              expression (typing/typedecl.ml[643,23388+28]..[690,25067+36]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/typedecl.ml[643,23388+28]..[643,23388+30])
                                  Ppat_var "ty" (typing/typedecl.ml[643,23388+28]..[643,23388+30])
                                expression (typing/typedecl.ml[644,23421+4]..[690,25067+36])
                                  Pexp_sequence
                                  expression (typing/typedecl.ml[644,23421+4]..[651,23756+7])
                                    Pexp_ifthenelse
                                    expression (typing/typedecl.ml[644,23421+7]..[644,23421+29])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[644,23421+7]..[644,23421+18])
                                        Pexp_ident "TypeSet.mem" (typing/typedecl.ml[644,23421+7]..[644,23421+18])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[644,23421+19]..[644,23421+21])
                                            Pexp_ident "ty" (typing/typedecl.ml[644,23421+19]..[644,23421+21])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[644,23421+22]..[644,23421+29])
                                            Pexp_ident "parents" (typing/typedecl.ml[644,23421+22]..[644,23421+29])
                                      ]
                                    expression (typing/typedecl.ml[644,23421+35]..[651,23756+7])
                                      Pexp_ifthenelse
                                      expression (typing/typedecl.ml[646,23525+9]..[648,23604+18])
                                        Pexp_match
                                        expression (typing/typedecl.ml[646,23525+15]..[646,23525+27])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[646,23525+15]..[646,23525+23])
                                            Pexp_ident "get_desc" (typing/typedecl.ml[646,23525+15]..[646,23525+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[646,23525+24]..[646,23525+27])
                                                Pexp_ident "ty0" (typing/typedecl.ml[646,23525+24]..[646,23525+27])
                                          ]
                                        [
                                          <case>
                                            pattern (typing/typedecl.ml[647,23558+8]..[647,23558+25])
                                              Ppat_construct "Tconstr" (typing/typedecl.ml[647,23558+8]..[647,23558+15])
                                              Some
                                                []
                                                pattern (typing/typedecl.ml[647,23558+16]..[647,23558+25])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typedecl.ml[647,23558+17]..[647,23558+18])
                                                      Ppat_var "p" (typing/typedecl.ml[647,23558+17]..[647,23558+18])
                                                    pattern (typing/typedecl.ml[647,23558+20]..[647,23558+21])
                                                      Ppat_any
                                                    pattern (typing/typedecl.ml[647,23558+23]..[647,23558+24])
                                                      Ppat_any
                                                  ]
                                            expression (typing/typedecl.ml[647,23558+29]..[647,23558+45])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[647,23558+29]..[647,23558+38])
                                                Pexp_ident "Path.same" (typing/typedecl.ml[647,23558+29]..[647,23558+38])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[647,23558+39]..[647,23558+40])
                                                    Pexp_ident "p" (typing/typedecl.ml[647,23558+39]..[647,23558+40])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[647,23558+41]..[647,23558+45])
                                                    Pexp_ident "path" (typing/typedecl.ml[647,23558+41]..[647,23558+45])
                                              ]
                                          <case>
                                            pattern (typing/typedecl.ml[648,23604+8]..[648,23604+9])
                                              Ppat_any
                                            expression (typing/typedecl.ml[648,23604+13]..[648,23604+18])
                                              Pexp_construct "false" (typing/typedecl.ml[648,23604+13]..[648,23604+18])
                                              None
                                        ]
                                      expression (typing/typedecl.ml[649,23623+11]..[649,23623+65])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[649,23623+11]..[649,23623+16])
                                          Pexp_ident "raise" (typing/typedecl.ml[649,23623+11]..[649,23623+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[649,23623+17]..[649,23623+65])
                                              Pexp_construct "Error" (typing/typedecl.ml[649,23623+18]..[649,23623+23])
                                              Some
                                                expression (typing/typedecl.ml[649,23623+24]..[649,23623+64])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typedecl.ml[649,23623+25]..[649,23623+28])
                                                      Pexp_ident "loc" (typing/typedecl.ml[649,23623+25]..[649,23623+28])
                                                    expression (typing/typedecl.ml[649,23623+30]..[649,23623+63])
                                                      Pexp_construct "Recursive_abbrev" (typing/typedecl.ml[649,23623+30]..[649,23623+46])
                                                      Some
                                                        expression (typing/typedecl.ml[649,23623+47]..[649,23623+63])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[649,23623+48]..[649,23623+57])
                                                            Pexp_ident "Path.name" (typing/typedecl.ml[649,23623+48]..[649,23623+57])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[649,23623+58]..[649,23623+62])
                                                                Pexp_ident "path" (typing/typedecl.ml[649,23623+58]..[649,23623+62])
                                                          ]
                                                  ]
                                        ]
                                      Some
                                        expression (typing/typedecl.ml[650,23689+11]..[650,23689+66])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[650,23689+11]..[650,23689+16])
                                            Pexp_ident "raise" (typing/typedecl.ml[650,23689+11]..[650,23689+16])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[650,23689+17]..[650,23689+66])
                                                Pexp_construct "Error" (typing/typedecl.ml[650,23689+18]..[650,23689+23])
                                                Some
                                                  expression (typing/typedecl.ml[650,23689+24]..[650,23689+65])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typedecl.ml[650,23689+25]..[650,23689+28])
                                                        Pexp_ident "loc" (typing/typedecl.ml[650,23689+25]..[650,23689+28])
                                                      expression (typing/typedecl.ml[650,23689+30]..[650,23689+64])
                                                        Pexp_construct "Cycle_in_def" (typing/typedecl.ml[650,23689+30]..[650,23689+42])
                                                        Some
                                                          expression (typing/typedecl.ml[650,23689+43]..[650,23689+64])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typedecl.ml[650,23689+44]..[650,23689+58])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[650,23689+44]..[650,23689+53])
                                                                  Pexp_ident "Path.name" (typing/typedecl.ml[650,23689+44]..[650,23689+53])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[650,23689+54]..[650,23689+58])
                                                                      Pexp_ident "path" (typing/typedecl.ml[650,23689+54]..[650,23689+58])
                                                                ]
                                                              expression (typing/typedecl.ml[650,23689+60]..[650,23689+63])
                                                                Pexp_ident "ty0" (typing/typedecl.ml[650,23689+60]..[650,23689+63])
                                                            ]
                                                    ]
                                          ]
                                    None
                                  expression (typing/typedecl.ml[652,23765+4]..[690,25067+36])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typedecl.ml[652,23765+8]..[652,23765+23])
                                          Ppat_tuple
                                          [
                                            pattern (typing/typedecl.ml[652,23765+9]..[652,23765+13])
                                              Ppat_var "fini" (typing/typedecl.ml[652,23765+9]..[652,23765+13])
                                            pattern (typing/typedecl.ml[652,23765+15]..[652,23765+22])
                                              Ppat_var "parents" (typing/typedecl.ml[652,23765+15]..[652,23765+22])
                                          ]
                                        expression (typing/typedecl.ml[653,23791+6]..[658,23981+24])
                                          Pexp_try
                                          expression (typing/typedecl.ml[654,23801+8]..[656,23913+43])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typedecl.ml[654,23801+12]..[654,23801+16])
                                                  Ppat_var "prev" (typing/typedecl.ml[654,23801+12]..[654,23801+16])
                                                expression (typing/typedecl.ml[654,23801+19]..[654,23801+43])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[654,23801+19]..[654,23801+31])
                                                    Pexp_ident "TypeMap.find" (typing/typedecl.ml[654,23801+19]..[654,23801+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[654,23801+32]..[654,23801+34])
                                                        Pexp_ident "ty" (typing/typedecl.ml[654,23801+32]..[654,23801+34])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[654,23801+35]..[654,23801+43])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[654,23801+35]..[654,23801+36])
                                                          Pexp_ident "!" (typing/typedecl.ml[654,23801+35]..[654,23801+36])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[654,23801+36]..[654,23801+43])
                                                              Pexp_ident "visited" (typing/typedecl.ml[654,23801+36]..[654,23801+43])
                                                        ]
                                                  ]
                                            ]
                                            expression (typing/typedecl.ml[655,23848+8]..[656,23913+43])
                                              Pexp_ifthenelse
                                              expression (typing/typedecl.ml[655,23848+11]..[655,23848+38])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[655,23848+11]..[655,23848+25])
                                                  Pexp_ident "TypeSet.subset" (typing/typedecl.ml[655,23848+11]..[655,23848+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[655,23848+26]..[655,23848+33])
                                                      Pexp_ident "parents" (typing/typedecl.ml[655,23848+26]..[655,23848+33])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[655,23848+34]..[655,23848+38])
                                                      Pexp_ident "prev" (typing/typedecl.ml[655,23848+34]..[655,23848+38])
                                                ]
                                              expression (typing/typedecl.ml[655,23848+44]..[655,23848+59])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typedecl.ml[655,23848+45]..[655,23848+49])
                                                    Pexp_construct "true" (typing/typedecl.ml[655,23848+45]..[655,23848+49])
                                                    None
                                                  expression (typing/typedecl.ml[655,23848+51]..[655,23848+58])
                                                    Pexp_ident "parents" (typing/typedecl.ml[655,23848+51]..[655,23848+58])
                                                ]
                                              Some
                                                expression (typing/typedecl.ml[656,23913+8]..[656,23913+43])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typedecl.ml[656,23913+9]..[656,23913+14])
                                                      Pexp_construct "false" (typing/typedecl.ml[656,23913+9]..[656,23913+14])
                                                      None
                                                    expression (typing/typedecl.ml[656,23913+16]..[656,23913+42])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[656,23913+16]..[656,23913+29])
                                                        Pexp_ident "TypeSet.union" (typing/typedecl.ml[656,23913+16]..[656,23913+29])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[656,23913+30]..[656,23913+37])
                                                            Pexp_ident "parents" (typing/typedecl.ml[656,23913+30]..[656,23913+37])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[656,23913+38]..[656,23913+42])
                                                            Pexp_ident "prev" (typing/typedecl.ml[656,23913+38]..[656,23913+42])
                                                      ]
                                                  ]
                                          [
                                            <case>
                                              pattern (typing/typedecl.ml[657,23957+11]..[657,23957+20])
                                                Ppat_construct "Not_found" (typing/typedecl.ml[657,23957+11]..[657,23957+20])
                                                None
                                              expression (typing/typedecl.ml[658,23981+8]..[658,23981+24])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typedecl.ml[658,23981+9]..[658,23981+14])
                                                    Pexp_construct "false" (typing/typedecl.ml[658,23981+9]..[658,23981+14])
                                                    None
                                                  expression (typing/typedecl.ml[658,23981+16]..[658,23981+23])
                                                    Pexp_ident "parents" (typing/typedecl.ml[658,23981+16]..[658,23981+23])
                                                ]
                                          ]
                                    ]
                                    expression (typing/typedecl.ml[660,24013+4]..[690,25067+36])
                                      Pexp_ifthenelse
                                      expression (typing/typedecl.ml[660,24013+7]..[660,24013+11])
                                        Pexp_ident "fini" (typing/typedecl.ml[660,24013+7]..[660,24013+11])
                                      expression (typing/typedecl.ml[660,24013+17]..[660,24013+19])
                                        Pexp_construct "()" (typing/typedecl.ml[660,24013+17]..[660,24013+19])
                                        None
                                      Some
                                        expression (typing/typedecl.ml[661,24038+4]..[690,25067+36])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typedecl.ml[661,24038+8]..[661,24038+14])
                                                Ppat_var "rec_ok" (typing/typedecl.ml[661,24038+8]..[661,24038+14])
                                              expression (typing/typedecl.ml[662,24055+6]..[666,24214+37])
                                                Pexp_match
                                                expression (typing/typedecl.ml[662,24055+12]..[662,24055+23])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[662,24055+12]..[662,24055+20])
                                                    Pexp_ident "get_desc" (typing/typedecl.ml[662,24055+12]..[662,24055+20])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[662,24055+21]..[662,24055+23])
                                                        Pexp_ident "ty" (typing/typedecl.ml[662,24055+21]..[662,24055+23])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (typing/typedecl.ml[663,24084+8]..[663,24084+22])
                                                      Ppat_construct "Tconstr" (typing/typedecl.ml[663,24084+8]..[663,24084+15])
                                                      Some
                                                        []
                                                        pattern (typing/typedecl.ml[663,24084+15]..[663,24084+22])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/typedecl.ml[663,24084+16]..[663,24084+17])
                                                              Ppat_var "p" (typing/typedecl.ml[663,24084+16]..[663,24084+17])
                                                            pattern (typing/typedecl.ml[663,24084+18]..[663,24084+19])
                                                              Ppat_any
                                                            pattern (typing/typedecl.ml[663,24084+20]..[663,24084+21])
                                                              Ppat_any
                                                          ]
                                                    expression (typing/typedecl.ml[664,24110+10]..[664,24110+64])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[664,24110+35]..[664,24110+37])
                                                        Pexp_ident "&&" (typing/typedecl.ml[664,24110+35]..[664,24110+37])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[664,24110+10]..[664,24110+34])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[664,24110+10]..[664,24110+11])
                                                              Pexp_ident "!" (typing/typedecl.ml[664,24110+10]..[664,24110+11])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[664,24110+11]..[664,24110+34])
                                                                  Pexp_ident "Clflags.recursive_types" (typing/typedecl.ml[664,24110+11]..[664,24110+34])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[664,24110+38]..[664,24110+64])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[664,24110+38]..[664,24110+58])
                                                              Pexp_ident "Ctype.is_contractive" (typing/typedecl.ml[664,24110+38]..[664,24110+58])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[664,24110+59]..[664,24110+62])
                                                                  Pexp_ident "env" (typing/typedecl.ml[664,24110+59]..[664,24110+62])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[664,24110+63]..[664,24110+64])
                                                                  Pexp_ident "p" (typing/typedecl.ml[664,24110+63]..[664,24110+64])
                                                            ]
                                                      ]
                                                  <case>
                                                    pattern (typing/typedecl.ml[665,24175+8]..[665,24175+30])
                                                      Ppat_or
                                                      pattern (typing/typedecl.ml[665,24175+8]..[665,24175+17])
                                                        Ppat_construct "Tobject" (typing/typedecl.ml[665,24175+8]..[665,24175+15])
                                                        Some
                                                          []
                                                          pattern (typing/typedecl.ml[665,24175+16]..[665,24175+17])
                                                            Ppat_any
                                                      pattern (typing/typedecl.ml[665,24175+20]..[665,24175+30])
                                                        Ppat_construct "Tvariant" (typing/typedecl.ml[665,24175+20]..[665,24175+28])
                                                        Some
                                                          []
                                                          pattern (typing/typedecl.ml[665,24175+29]..[665,24175+30])
                                                            Ppat_any
                                                    expression (typing/typedecl.ml[665,24175+34]..[665,24175+38])
                                                      Pexp_construct "true" (typing/typedecl.ml[665,24175+34]..[665,24175+38])
                                                      None
                                                  <case>
                                                    pattern (typing/typedecl.ml[666,24214+8]..[666,24214+9])
                                                      Ppat_any
                                                    expression (typing/typedecl.ml[666,24214+13]..[666,24214+37])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[666,24214+13]..[666,24214+14])
                                                        Pexp_ident "!" (typing/typedecl.ml[666,24214+13]..[666,24214+14])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[666,24214+14]..[666,24214+37])
                                                            Pexp_ident "Clflags.recursive_types" (typing/typedecl.ml[666,24214+14]..[666,24214+37])
                                                      ]
                                                ]
                                          ]
                                          expression (typing/typedecl.ml[668,24259+4]..[690,25067+36])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typedecl.ml[668,24259+8]..[668,24259+16])
                                                  Ppat_var "visited'" (typing/typedecl.ml[668,24259+8]..[668,24259+16])
                                                expression (typing/typedecl.ml[668,24259+19]..[668,24259+50])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[668,24259+19]..[668,24259+30])
                                                    Pexp_ident "TypeMap.add" (typing/typedecl.ml[668,24259+19]..[668,24259+30])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[668,24259+31]..[668,24259+33])
                                                        Pexp_ident "ty" (typing/typedecl.ml[668,24259+31]..[668,24259+33])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[668,24259+34]..[668,24259+41])
                                                        Pexp_ident "parents" (typing/typedecl.ml[668,24259+34]..[668,24259+41])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[668,24259+42]..[668,24259+50])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[668,24259+42]..[668,24259+43])
                                                          Pexp_ident "!" (typing/typedecl.ml[668,24259+42]..[668,24259+43])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[668,24259+43]..[668,24259+50])
                                                              Pexp_ident "visited" (typing/typedecl.ml[668,24259+43]..[668,24259+50])
                                                        ]
                                                  ]
                                            ]
                                            expression (typing/typedecl.ml[669,24313+4]..[690,25067+36])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typedecl.ml[669,24313+8]..[669,24313+15])
                                                    Ppat_var "arg_exn" (typing/typedecl.ml[669,24313+8]..[669,24313+15])
                                                  expression (typing/typedecl.ml[670,24331+6]..[677,24544+35])
                                                    Pexp_try
                                                    expression (typing/typedecl.ml[671,24341+8]..[675,24515+12])
                                                      Pexp_sequence
                                                      expression (typing/typedecl.ml[671,24341+8]..[671,24341+27])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[671,24341+16]..[671,24341+18])
                                                          Pexp_ident ":=" (typing/typedecl.ml[671,24341+16]..[671,24341+18])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[671,24341+8]..[671,24341+15])
                                                              Pexp_ident "visited" (typing/typedecl.ml[671,24341+8]..[671,24341+15])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[671,24341+19]..[671,24341+27])
                                                              Pexp_ident "visited'" (typing/typedecl.ml[671,24341+19]..[671,24341+27])
                                                        ]
                                                      expression (typing/typedecl.ml[672,24370+8]..[675,24515+12])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (typing/typedecl.ml[672,24370+12]..[672,24370+19])
                                                              Ppat_var "parents" (typing/typedecl.ml[672,24370+12]..[672,24370+19])
                                                            expression (typing/typedecl.ml[673,24392+10]..[673,24392+66])
                                                              Pexp_ifthenelse
                                                              expression (typing/typedecl.ml[673,24392+13]..[673,24392+19])
                                                                Pexp_ident "rec_ok" (typing/typedecl.ml[673,24392+13]..[673,24392+19])
                                                              expression (typing/typedecl.ml[673,24392+25]..[673,24392+38])
                                                                Pexp_ident "TypeSet.empty" (typing/typedecl.ml[673,24392+25]..[673,24392+38])
                                                              Some
                                                                expression (typing/typedecl.ml[673,24392+44]..[673,24392+66])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[673,24392+44]..[673,24392+55])
                                                                    Pexp_ident "TypeSet.add" (typing/typedecl.ml[673,24392+44]..[673,24392+55])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[673,24392+56]..[673,24392+58])
Pexp_ident "ty" (typing/typedecl.ml[673,24392+56]..[673,24392+58])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[673,24392+59]..[673,24392+66])
Pexp_ident "parents" (typing/typedecl.ml[673,24392+59]..[673,24392+66])
                                                                  ]
                                                        ]
                                                        expression (typing/typedecl.ml[674,24462+8]..[675,24515+12])
                                                          Pexp_sequence
                                                          expression (typing/typedecl.ml[674,24462+8]..[674,24462+51])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[674,24462+8]..[674,24462+28])
                                                              Pexp_ident "Btype.iter_type_expr" (typing/typedecl.ml[674,24462+8]..[674,24462+28])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[674,24462+29]..[674,24462+48])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[674,24462+30]..[674,24462+35])
                                                                    Pexp_ident "check" (typing/typedecl.ml[674,24462+30]..[674,24462+35])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[674,24462+36]..[674,24462+39])
Pexp_ident "ty0" (typing/typedecl.ml[674,24462+36]..[674,24462+39])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[674,24462+40]..[674,24462+47])
Pexp_ident "parents" (typing/typedecl.ml[674,24462+40]..[674,24462+47])
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[674,24462+49]..[674,24462+51])
                                                                  Pexp_ident "ty" (typing/typedecl.ml[674,24462+49]..[674,24462+51])
                                                            ]
                                                          expression (typing/typedecl.ml[675,24515+8]..[675,24515+12])
                                                            Pexp_construct "None" (typing/typedecl.ml[675,24515+8]..[675,24515+12])
                                                            None
                                                    [
                                                      <case>
                                                        pattern (typing/typedecl.ml[676,24528+11]..[676,24528+12])
                                                          Ppat_var "e" (typing/typedecl.ml[676,24528+11]..[676,24528+12])
                                                        expression (typing/typedecl.ml[677,24544+8]..[677,24544+35])
                                                          Pexp_sequence
                                                          expression (typing/typedecl.ml[677,24544+8]..[677,24544+27])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[677,24544+16]..[677,24544+18])
                                                              Pexp_ident ":=" (typing/typedecl.ml[677,24544+16]..[677,24544+18])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[677,24544+8]..[677,24544+15])
                                                                  Pexp_ident "visited" (typing/typedecl.ml[677,24544+8]..[677,24544+15])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[677,24544+19]..[677,24544+27])
                                                                  Pexp_ident "visited'" (typing/typedecl.ml[677,24544+19]..[677,24544+27])
                                                            ]
                                                          expression (typing/typedecl.ml[677,24544+29]..[677,24544+35])
                                                            Pexp_construct "Some" (typing/typedecl.ml[677,24544+29]..[677,24544+33])
                                                            Some
                                                              expression (typing/typedecl.ml[677,24544+34]..[677,24544+35])
                                                                Pexp_ident "e" (typing/typedecl.ml[677,24544+34]..[677,24544+35])
                                                    ]
                                              ]
                                              expression (typing/typedecl.ml[679,24587+4]..[690,25067+36])
                                                Pexp_match
                                                expression (typing/typedecl.ml[679,24587+10]..[679,24587+21])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[679,24587+10]..[679,24587+18])
                                                    Pexp_ident "get_desc" (typing/typedecl.ml[679,24587+10]..[679,24587+18])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[679,24587+19]..[679,24587+21])
                                                        Pexp_ident "ty" (typing/typedecl.ml[679,24587+19]..[679,24587+21])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (typing/typedecl.ml[680,24614+6]..[680,24614+22])
                                                      Ppat_construct "Tconstr" (typing/typedecl.ml[680,24614+6]..[680,24614+13])
                                                      Some
                                                        []
                                                        pattern (typing/typedecl.ml[680,24614+13]..[680,24614+22])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/typedecl.ml[680,24614+14]..[680,24614+15])
                                                              Ppat_var "p" (typing/typedecl.ml[680,24614+14]..[680,24614+15])
                                                            pattern (typing/typedecl.ml[680,24614+17]..[680,24614+18])
                                                              Ppat_any
                                                            pattern (typing/typedecl.ml[680,24614+20]..[680,24614+21])
                                                              Ppat_any
                                                          ]
                                                    <when>
                                                      expression (typing/typedecl.ml[680,24614+28]..[680,24614+57])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[680,24614+44]..[680,24614+46])
                                                          Pexp_ident "||" (typing/typedecl.ml[680,24614+44]..[680,24614+46])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[680,24614+28]..[680,24614+43])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[680,24614+36]..[680,24614+38])
                                                                Pexp_ident "<>" (typing/typedecl.ml[680,24614+36]..[680,24614+38])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[680,24614+28]..[680,24614+35])
                                                                    Pexp_ident "arg_exn" (typing/typedecl.ml[680,24614+28]..[680,24614+35])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[680,24614+39]..[680,24614+43])
                                                                    Pexp_construct "None" (typing/typedecl.ml[680,24614+39]..[680,24614+43])
                                                                    None
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[680,24614+47]..[680,24614+57])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[680,24614+47]..[680,24614+55])
                                                                Pexp_ident "to_check" (typing/typedecl.ml[680,24614+47]..[680,24614+55])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[680,24614+56]..[680,24614+57])
                                                                    Pexp_ident "p" (typing/typedecl.ml[680,24614+56]..[680,24614+57])
                                                              ]
                                                        ]
                                                    expression (typing/typedecl.ml[681,24675+8]..[689,25055+11])
                                                      Pexp_sequence
                                                      expression (typing/typedecl.ml[681,24675+8]..[682,24728+62])
                                                        Pexp_ifthenelse
                                                        expression (typing/typedecl.ml[681,24675+11]..[681,24675+21])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[681,24675+11]..[681,24675+19])
                                                            Pexp_ident "to_check" (typing/typedecl.ml[681,24675+11]..[681,24675+19])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[681,24675+20]..[681,24675+21])
                                                                Pexp_ident "p" (typing/typedecl.ml[681,24675+20]..[681,24675+21])
                                                          ]
                                                        expression (typing/typedecl.ml[681,24675+27]..[681,24675+52])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[681,24675+27]..[681,24675+38])
                                                            Pexp_ident "Option.iter" (typing/typedecl.ml[681,24675+27]..[681,24675+38])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[681,24675+39]..[681,24675+44])
                                                                Pexp_ident "raise" (typing/typedecl.ml[681,24675+39]..[681,24675+44])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[681,24675+45]..[681,24675+52])
                                                                Pexp_ident "arg_exn" (typing/typedecl.ml[681,24675+45]..[681,24675+52])
                                                          ]
                                                        Some
                                                          expression (typing/typedecl.ml[682,24728+13]..[682,24728+62])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[682,24728+13]..[682,24728+33])
                                                              Pexp_ident "Btype.iter_type_expr" (typing/typedecl.ml[682,24728+13]..[682,24728+33])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[682,24728+34]..[682,24728+59])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[682,24728+35]..[682,24728+40])
                                                                    Pexp_ident "check" (typing/typedecl.ml[682,24728+35]..[682,24728+40])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[682,24728+41]..[682,24728+44])
Pexp_ident "ty0" (typing/typedecl.ml[682,24728+41]..[682,24728+44])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[682,24728+45]..[682,24728+58])
Pexp_ident "TypeSet.empty" (typing/typedecl.ml[682,24728+45]..[682,24728+58])
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[682,24728+60]..[682,24728+62])
                                                                  Pexp_ident "ty" (typing/typedecl.ml[682,24728+60]..[682,24728+62])
                                                            ]
                                                      expression (typing/typedecl.ml[683,24792+8]..[689,25055+11])
                                                        Pexp_try
                                                        expression (typing/typedecl.ml[684,24810+10]..[686,24934+48])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (typing/typedecl.ml[684,24810+14]..[684,24810+17])
                                                                Ppat_var "ty'" (typing/typedecl.ml[684,24810+14]..[684,24810+17])
                                                              expression (typing/typedecl.ml[684,24810+20]..[684,24810+52])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[684,24810+20]..[684,24810+45])
                                                                  Pexp_ident "Ctype.try_expand_once_opt" (typing/typedecl.ml[684,24810+20]..[684,24810+45])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[684,24810+46]..[684,24810+49])
                                                                      Pexp_ident "env" (typing/typedecl.ml[684,24810+46]..[684,24810+49])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[684,24810+50]..[684,24810+52])
                                                                      Pexp_ident "ty" (typing/typedecl.ml[684,24810+50]..[684,24810+52])
                                                                ]
                                                          ]
                                                          expression (typing/typedecl.ml[685,24866+10]..[686,24934+48])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (typing/typedecl.ml[685,24866+14]..[685,24866+17])
                                                                  Ppat_var "ty0" (typing/typedecl.ml[685,24866+14]..[685,24866+17])
                                                                expression (typing/typedecl.ml[685,24866+20]..[685,24866+64])
                                                                  Pexp_ifthenelse
                                                                  expression (typing/typedecl.ml[685,24866+23]..[685,24866+47])
                                                                    Pexp_apply
                                                                    expression (typing/typedecl.ml[685,24866+23]..[685,24866+39])
                                                                      Pexp_ident "TypeSet.is_empty" (typing/typedecl.ml[685,24866+23]..[685,24866+39])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[685,24866+40]..[685,24866+47])
  Pexp_ident "parents" (typing/typedecl.ml[685,24866+40]..[685,24866+47])
                                                                    ]
                                                                  expression (typing/typedecl.ml[685,24866+53]..[685,24866+55])
                                                                    Pexp_ident "ty" (typing/typedecl.ml[685,24866+53]..[685,24866+55])
                                                                  Some
                                                                    expression (typing/typedecl.ml[685,24866+61]..[685,24866+64])
                                                                      Pexp_ident "ty0" (typing/typedecl.ml[685,24866+61]..[685,24866+64])
                                                            ]
                                                            expression (typing/typedecl.ml[686,24934+10]..[686,24934+48])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[686,24934+10]..[686,24934+15])
                                                                Pexp_ident "check" (typing/typedecl.ml[686,24934+10]..[686,24934+15])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[686,24934+16]..[686,24934+19])
                                                                    Pexp_ident "ty0" (typing/typedecl.ml[686,24934+16]..[686,24934+19])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[686,24934+20]..[686,24934+44])
                                                                    Pexp_apply
                                                                    expression (typing/typedecl.ml[686,24934+21]..[686,24934+32])
                                                                      Pexp_ident "TypeSet.add" (typing/typedecl.ml[686,24934+21]..[686,24934+32])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[686,24934+33]..[686,24934+35])
  Pexp_ident "ty" (typing/typedecl.ml[686,24934+33]..[686,24934+35])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[686,24934+36]..[686,24934+43])
  Pexp_ident "parents" (typing/typedecl.ml[686,24934+36]..[686,24934+43])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[686,24934+45]..[686,24934+48])
                                                                    Pexp_ident "ty'" (typing/typedecl.ml[686,24934+45]..[686,24934+48])
                                                              ]
                                                        [
                                                          <case>
                                                            pattern (typing/typedecl.ml[688,24996+10]..[688,24996+29])
                                                              Ppat_construct "Ctype.Cannot_expand" (typing/typedecl.ml[688,24996+10]..[688,24996+29])
                                                              None
                                                            expression (typing/typedecl.ml[688,24996+33]..[688,24996+58])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[688,24996+33]..[688,24996+44])
                                                                Pexp_ident "Option.iter" (typing/typedecl.ml[688,24996+33]..[688,24996+44])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[688,24996+45]..[688,24996+50])
                                                                    Pexp_ident "raise" (typing/typedecl.ml[688,24996+45]..[688,24996+50])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[688,24996+51]..[688,24996+58])
                                                                    Pexp_ident "arg_exn" (typing/typedecl.ml[688,24996+51]..[688,24996+58])
                                                              ]
                                                        ]
                                                  <case>
                                                    pattern (typing/typedecl.ml[690,25067+6]..[690,25067+7])
                                                      Ppat_any
                                                    expression (typing/typedecl.ml[690,25067+11]..[690,25067+36])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[690,25067+11]..[690,25067+22])
                                                        Pexp_ident "Option.iter" (typing/typedecl.ml[690,25067+11]..[690,25067+22])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[690,25067+23]..[690,25067+28])
                                                            Pexp_ident "raise" (typing/typedecl.ml[690,25067+23]..[690,25067+28])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[690,25067+29]..[690,25067+36])
                                                            Pexp_ident "arg_exn" (typing/typedecl.ml[690,25067+29]..[690,25067+36])
                                                      ]
                                                ]
                      ]
                      expression (typing/typedecl.ml[692,25109+2]..[696,25284+24])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typedecl.ml[692,25109+6]..[692,25109+10])
                              Ppat_var "snap" (typing/typedecl.ml[692,25109+6]..[692,25109+10])
                            expression (typing/typedecl.ml[692,25109+13]..[692,25109+30])
                              Pexp_apply
                              expression (typing/typedecl.ml[692,25109+13]..[692,25109+27])
                                Pexp_ident "Btype.snapshot" (typing/typedecl.ml[692,25109+13]..[692,25109+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[692,25109+28]..[692,25109+30])
                                    Pexp_construct "()" (typing/typedecl.ml[692,25109+28]..[692,25109+30])
                                    None
                              ]
                        ]
                        expression (typing/typedecl.ml[693,25143+2]..[696,25284+24])
                          Pexp_try
                          expression (typing/typedecl.ml[693,25143+6]..[693,25143+69])
                            Pexp_apply
                            expression (typing/typedecl.ml[693,25143+6]..[693,25143+37])
                              Pexp_ident "Ctype.wrap_trace_gadt_instances" (typing/typedecl.ml[693,25143+6]..[693,25143+37])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[693,25143+38]..[693,25143+41])
                                  Pexp_ident "env" (typing/typedecl.ml[693,25143+38]..[693,25143+41])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[693,25143+42]..[693,25143+66])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[693,25143+43]..[693,25143+48])
                                    Pexp_ident "check" (typing/typedecl.ml[693,25143+43]..[693,25143+48])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[693,25143+49]..[693,25143+51])
                                        Pexp_ident "ty" (typing/typedecl.ml[693,25143+49]..[693,25143+51])
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[693,25143+52]..[693,25143+65])
                                        Pexp_ident "TypeSet.empty" (typing/typedecl.ml[693,25143+52]..[693,25143+65])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[693,25143+67]..[693,25143+69])
                                  Pexp_ident "ty" (typing/typedecl.ml[693,25143+67]..[693,25143+69])
                            ]
                          [
                            <case>
                              pattern (typing/typedecl.ml[694,25213+7]..[694,25213+21])
                                Ppat_construct "Ctype.Escape" (typing/typedecl.ml[694,25213+7]..[694,25213+19])
                                Some
                                  []
                                  pattern (typing/typedecl.ml[694,25213+20]..[694,25213+21])
                                    Ppat_any
                              expression (typing/typedecl.ml[696,25284+4]..[696,25284+24])
                                Pexp_apply
                                expression (typing/typedecl.ml[696,25284+4]..[696,25284+19])
                                  Pexp_ident "Btype.backtrack" (typing/typedecl.ml[696,25284+4]..[696,25284+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[696,25284+20]..[696,25284+24])
                                      Pexp_ident "snap" (typing/typedecl.ml[696,25284+20]..[696,25284+24])
                                ]
                          ]
    ]
  structure_item (typing/typedecl.ml[698,25310+0]..[701,25474+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[698,25310+4]..[698,25310+31])
          Ppat_var "check_well_founded_manifest" (typing/typedecl.ml[698,25310+4]..[698,25310+31])
        expression (typing/typedecl.ml[698,25310+32]..[701,25474+78]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[698,25310+32]..[698,25310+35])
            Ppat_var "env" (typing/typedecl.ml[698,25310+32]..[698,25310+35])
          expression (typing/typedecl.ml[698,25310+36]..[701,25474+78]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[698,25310+36]..[698,25310+39])
              Ppat_var "loc" (typing/typedecl.ml[698,25310+36]..[698,25310+39])
            expression (typing/typedecl.ml[698,25310+40]..[701,25474+78]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[698,25310+40]..[698,25310+44])
                Ppat_var "path" (typing/typedecl.ml[698,25310+40]..[698,25310+44])
              expression (typing/typedecl.ml[698,25310+45]..[701,25474+78]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[698,25310+45]..[698,25310+49])
                  Ppat_var "decl" (typing/typedecl.ml[698,25310+45]..[698,25310+49])
                expression (typing/typedecl.ml[699,25362+2]..[701,25474+78])
                  Pexp_ifthenelse
                  expression (typing/typedecl.ml[699,25362+5]..[699,25362+30])
                    Pexp_apply
                    expression (typing/typedecl.ml[699,25362+24]..[699,25362+25])
                      Pexp_ident "=" (typing/typedecl.ml[699,25362+24]..[699,25362+25])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[699,25362+5]..[699,25362+23])
                          Pexp_field
                          expression (typing/typedecl.ml[699,25362+5]..[699,25362+9])
                            Pexp_ident "decl" (typing/typedecl.ml[699,25362+5]..[699,25362+9])
                          "type_manifest" (typing/typedecl.ml[699,25362+10]..[699,25362+23])
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[699,25362+26]..[699,25362+30])
                          Pexp_construct "None" (typing/typedecl.ml[699,25362+26]..[699,25362+30])
                          None
                    ]
                  expression (typing/typedecl.ml[699,25362+36]..[699,25362+38])
                    Pexp_construct "()" (typing/typedecl.ml[699,25362+36]..[699,25362+38])
                    None
                  Some
                    expression (typing/typedecl.ml[700,25406+2]..[701,25474+78])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typedecl.ml[700,25406+6]..[700,25406+10])
                            Ppat_var "args" (typing/typedecl.ml[700,25406+6]..[700,25406+10])
                          expression (typing/typedecl.ml[700,25406+13]..[700,25406+64])
                            Pexp_apply
                            expression (typing/typedecl.ml[700,25406+13]..[700,25406+21])
                              Pexp_ident "List.map" (typing/typedecl.ml[700,25406+13]..[700,25406+21])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[700,25406+22]..[700,25406+47])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typedecl.ml[700,25406+27]..[700,25406+28])
                                    Ppat_any
                                  expression (typing/typedecl.ml[700,25406+32]..[700,25406+46])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[700,25406+32]..[700,25406+44])
                                      Pexp_ident "Ctype.newvar" (typing/typedecl.ml[700,25406+32]..[700,25406+44])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[700,25406+44]..[700,25406+46])
                                          Pexp_construct "()" (typing/typedecl.ml[700,25406+44]..[700,25406+46])
                                          None
                                    ]
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[700,25406+48]..[700,25406+64])
                                  Pexp_field
                                  expression (typing/typedecl.ml[700,25406+48]..[700,25406+52])
                                    Pexp_ident "decl" (typing/typedecl.ml[700,25406+48]..[700,25406+52])
                                  "type_params" (typing/typedecl.ml[700,25406+53]..[700,25406+64])
                            ]
                      ]
                      expression (typing/typedecl.ml[701,25474+2]..[701,25474+78])
                        Pexp_apply
                        expression (typing/typedecl.ml[701,25474+2]..[701,25474+20])
                          Pexp_ident "check_well_founded" (typing/typedecl.ml[701,25474+2]..[701,25474+20])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[701,25474+21]..[701,25474+24])
                              Pexp_ident "env" (typing/typedecl.ml[701,25474+21]..[701,25474+24])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[701,25474+25]..[701,25474+28])
                              Pexp_ident "loc" (typing/typedecl.ml[701,25474+25]..[701,25474+28])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[701,25474+29]..[701,25474+33])
                              Pexp_ident "path" (typing/typedecl.ml[701,25474+29]..[701,25474+33])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[701,25474+34]..[701,25474+50])
                              Pexp_apply
                              expression (typing/typedecl.ml[701,25474+35]..[701,25474+44])
                                Pexp_ident "Path.same" (typing/typedecl.ml[701,25474+35]..[701,25474+44])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[701,25474+45]..[701,25474+49])
                                    Pexp_ident "path" (typing/typedecl.ml[701,25474+45]..[701,25474+49])
                              ]
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[701,25474+51]..[701,25474+78])
                              Pexp_apply
                              expression (typing/typedecl.ml[701,25474+52]..[701,25474+67])
                                Pexp_ident "Ctype.newconstr" (typing/typedecl.ml[701,25474+52]..[701,25474+67])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[701,25474+68]..[701,25474+72])
                                    Pexp_ident "path" (typing/typedecl.ml[701,25474+68]..[701,25474+72])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[701,25474+73]..[701,25474+77])
                                    Pexp_ident "args" (typing/typedecl.ml[701,25474+73]..[701,25474+77])
                              ]
                        ]
    ]
  structure_item (typing/typedecl.ml[703,25554+0]..[708,25743+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[703,25554+4]..[703,25554+27])
          Ppat_var "check_well_founded_decl" (typing/typedecl.ml[703,25554+4]..[703,25554+27])
        expression (typing/typedecl.ml[703,25554+28]..[708,25743+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[703,25554+28]..[703,25554+31])
            Ppat_var "env" (typing/typedecl.ml[703,25554+28]..[703,25554+31])
          expression (typing/typedecl.ml[703,25554+32]..[708,25743+69]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[703,25554+32]..[703,25554+35])
              Ppat_var "loc" (typing/typedecl.ml[703,25554+32]..[703,25554+35])
            expression (typing/typedecl.ml[703,25554+36]..[708,25743+69]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[703,25554+36]..[703,25554+40])
                Ppat_var "path" (typing/typedecl.ml[703,25554+36]..[703,25554+40])
              expression (typing/typedecl.ml[703,25554+41]..[708,25743+69]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[703,25554+41]..[703,25554+45])
                  Ppat_var "decl" (typing/typedecl.ml[703,25554+41]..[703,25554+45])
                expression (typing/typedecl.ml[703,25554+46]..[708,25743+69]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typedecl.ml[703,25554+46]..[703,25554+54])
                    Ppat_var "to_check" (typing/typedecl.ml[703,25554+46]..[703,25554+54])
                  expression (typing/typedecl.ml[704,25611+2]..[708,25743+69])
                    Pexp_open Fresh
                    module_expr (typing/typedecl.ml[704,25611+11]..[704,25611+16])
                      Pmod_ident "Btype" (typing/typedecl.ml[704,25611+11]..[704,25611+16])
                    expression (typing/typedecl.ml[705,25631+2]..[708,25743+69])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typedecl.ml[705,25631+6]..[705,25631+8])
                            Ppat_var "it" (typing/typedecl.ml[705,25631+6]..[705,25631+8])
                          expression (typing/typedecl.ml[706,25642+4]..[707,25667+72])
                            Pexp_record
                            [
                              "it_type_expr" (typing/typedecl.ml[707,25667+5]..[707,25667+17])
                                expression (typing/typedecl.ml[707,25667+20]..[707,25667+71])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typedecl.ml[707,25667+25]..[707,25667+26])
                                    Ppat_any
                                  expression (typing/typedecl.ml[707,25667+30]..[707,25667+70])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[707,25667+30]..[707,25667+48])
                                      Pexp_ident "check_well_founded" (typing/typedecl.ml[707,25667+30]..[707,25667+48])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[707,25667+49]..[707,25667+52])
                                          Pexp_ident "env" (typing/typedecl.ml[707,25667+49]..[707,25667+52])
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[707,25667+53]..[707,25667+56])
                                          Pexp_ident "loc" (typing/typedecl.ml[707,25667+53]..[707,25667+56])
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[707,25667+57]..[707,25667+61])
                                          Pexp_ident "path" (typing/typedecl.ml[707,25667+57]..[707,25667+61])
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[707,25667+62]..[707,25667+70])
                                          Pexp_ident "to_check" (typing/typedecl.ml[707,25667+62]..[707,25667+70])
                                    ]
                            ]
                            Some
                              expression (typing/typedecl.ml[706,25642+5]..[706,25642+19])
                                Pexp_ident "type_iterators" (typing/typedecl.ml[706,25642+5]..[706,25642+19])
                      ]
                      expression (typing/typedecl.ml[708,25743+2]..[708,25743+69])
                        Pexp_apply
                        expression (typing/typedecl.ml[708,25743+2]..[708,25743+24])
                          Pexp_field
                          expression (typing/typedecl.ml[708,25743+2]..[708,25743+4])
                            Pexp_ident "it" (typing/typedecl.ml[708,25743+2]..[708,25743+4])
                          "it_type_declaration" (typing/typedecl.ml[708,25743+5]..[708,25743+24])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[708,25743+25]..[708,25743+27])
                              Pexp_ident "it" (typing/typedecl.ml[708,25743+25]..[708,25743+27])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[708,25743+28]..[708,25743+69])
                              Pexp_apply
                              expression (typing/typedecl.ml[708,25743+29]..[708,25743+63])
                                Pexp_ident "Ctype.generic_instance_declaration" (typing/typedecl.ml[708,25743+29]..[708,25743+63])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[708,25743+64]..[708,25743+68])
                                    Pexp_ident "decl" (typing/typedecl.ml[708,25743+64]..[708,25743+68])
                              ]
                        ]
    ]
  structure_item (typing/typedecl.ml[712,25851+0]..[773,28403+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[712,25851+4]..[712,25851+19])
          Ppat_var "check_recursion" (typing/typedecl.ml[712,25851+4]..[712,25851+19])
        expression (typing/typedecl.ml[712,25851+20]..[773,28403+22]) ghost
          Pexp_fun
          Labelled "orig_env"
          None
          pattern (typing/typedecl.ml[712,25851+21]..[712,25851+29])
            Ppat_var "orig_env" (typing/typedecl.ml[712,25851+21]..[712,25851+29])
          expression (typing/typedecl.ml[712,25851+30]..[773,28403+22]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[712,25851+30]..[712,25851+33])
              Ppat_var "env" (typing/typedecl.ml[712,25851+30]..[712,25851+33])
            expression (typing/typedecl.ml[712,25851+34]..[773,28403+22]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[712,25851+34]..[712,25851+37])
                Ppat_var "loc" (typing/typedecl.ml[712,25851+34]..[712,25851+37])
              expression (typing/typedecl.ml[712,25851+38]..[773,28403+22]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[712,25851+38]..[712,25851+42])
                  Ppat_var "path" (typing/typedecl.ml[712,25851+38]..[712,25851+42])
                expression (typing/typedecl.ml[712,25851+43]..[773,28403+22]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typedecl.ml[712,25851+43]..[712,25851+47])
                    Ppat_var "decl" (typing/typedecl.ml[712,25851+43]..[712,25851+47])
                  expression (typing/typedecl.ml[712,25851+48]..[773,28403+22]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typedecl.ml[712,25851+48]..[712,25851+56])
                      Ppat_var "to_check" (typing/typedecl.ml[712,25851+48]..[712,25851+56])
                    expression (typing/typedecl.ml[716,26035+2]..[773,28403+22])
                      Pexp_ifthenelse
                      expression (typing/typedecl.ml[716,26035+5]..[716,26035+26])
                        Pexp_apply
                        expression (typing/typedecl.ml[716,26035+22]..[716,26035+23])
                          Pexp_ident "=" (typing/typedecl.ml[716,26035+22]..[716,26035+23])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[716,26035+5]..[716,26035+21])
                              Pexp_field
                              expression (typing/typedecl.ml[716,26035+5]..[716,26035+9])
                                Pexp_ident "decl" (typing/typedecl.ml[716,26035+5]..[716,26035+9])
                              "type_params" (typing/typedecl.ml[716,26035+10]..[716,26035+21])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[716,26035+24]..[716,26035+26])
                              Pexp_construct "[]" (typing/typedecl.ml[716,26035+24]..[716,26035+26])
                              None
                        ]
                      expression (typing/typedecl.ml[716,26035+32]..[716,26035+34])
                        Pexp_construct "()" (typing/typedecl.ml[716,26035+32]..[716,26035+34])
                        None
                      Some
                        expression (typing/typedecl.ml[718,26076+2]..[773,28403+22])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typedecl.ml[718,26076+6]..[718,26076+13])
                                Ppat_var "visited" (typing/typedecl.ml[718,26076+6]..[718,26076+13])
                              expression (typing/typedecl.ml[718,26076+16]..[718,26076+33])
                                Pexp_apply
                                expression (typing/typedecl.ml[718,26076+16]..[718,26076+19])
                                  Pexp_ident "ref" (typing/typedecl.ml[718,26076+16]..[718,26076+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[718,26076+20]..[718,26076+33])
                                      Pexp_ident "TypeSet.empty" (typing/typedecl.ml[718,26076+20]..[718,26076+33])
                                ]
                          ]
                          expression (typing/typedecl.ml[720,26114+2]..[773,28403+22])
                            Pexp_let Rec
                            [
                              <def>
                                pattern (typing/typedecl.ml[720,26114+10]..[720,26114+23])
                                  Ppat_var "check_regular" (typing/typedecl.ml[720,26114+10]..[720,26114+23])
                                expression (typing/typedecl.ml[720,26114+24]..[764,28145+7]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typedecl.ml[720,26114+24]..[720,26114+29])
                                    Ppat_var "cpath" (typing/typedecl.ml[720,26114+24]..[720,26114+29])
                                  expression (typing/typedecl.ml[720,26114+30]..[764,28145+7]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typedecl.ml[720,26114+30]..[720,26114+34])
                                      Ppat_var "args" (typing/typedecl.ml[720,26114+30]..[720,26114+34])
                                    expression (typing/typedecl.ml[720,26114+35]..[764,28145+7]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/typedecl.ml[720,26114+35]..[720,26114+43])
                                        Ppat_var "prev_exp" (typing/typedecl.ml[720,26114+35]..[720,26114+43])
                                      expression (typing/typedecl.ml[720,26114+44]..[764,28145+7]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/typedecl.ml[720,26114+44]..[720,26114+59])
                                          Ppat_var "prev_expansions" (typing/typedecl.ml[720,26114+44]..[720,26114+59])
                                        expression (typing/typedecl.ml[720,26114+60]..[764,28145+7]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/typedecl.ml[720,26114+60]..[720,26114+62])
                                            Ppat_var "ty" (typing/typedecl.ml[720,26114+60]..[720,26114+62])
                                          expression (typing/typedecl.ml[721,26179+4]..[764,28145+7])
                                            Pexp_ifthenelse
                                            expression (typing/typedecl.ml[721,26179+7]..[721,26179+36])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[721,26179+7]..[721,26179+10])
                                                Pexp_ident "not" (typing/typedecl.ml[721,26179+7]..[721,26179+10])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[721,26179+11]..[721,26179+36])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[721,26179+12]..[721,26179+23])
                                                      Pexp_ident "TypeSet.mem" (typing/typedecl.ml[721,26179+12]..[721,26179+23])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[721,26179+24]..[721,26179+26])
                                                          Pexp_ident "ty" (typing/typedecl.ml[721,26179+24]..[721,26179+26])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[721,26179+27]..[721,26179+35])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[721,26179+27]..[721,26179+28])
                                                            Pexp_ident "!" (typing/typedecl.ml[721,26179+27]..[721,26179+28])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[721,26179+28]..[721,26179+35])
                                                                Pexp_ident "visited" (typing/typedecl.ml[721,26179+28]..[721,26179+35])
                                                          ]
                                                    ]
                                              ]
                                            expression (typing/typedecl.ml[721,26179+42]..[764,28145+7])
                                              Pexp_sequence
                                              expression (typing/typedecl.ml[722,26227+6]..[722,26227+40])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[722,26227+14]..[722,26227+16])
                                                  Pexp_ident ":=" (typing/typedecl.ml[722,26227+14]..[722,26227+16])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[722,26227+6]..[722,26227+13])
                                                      Pexp_ident "visited" (typing/typedecl.ml[722,26227+6]..[722,26227+13])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[722,26227+17]..[722,26227+40])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[722,26227+17]..[722,26227+28])
                                                        Pexp_ident "TypeSet.add" (typing/typedecl.ml[722,26227+17]..[722,26227+28])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[722,26227+29]..[722,26227+31])
                                                            Pexp_ident "ty" (typing/typedecl.ml[722,26227+29]..[722,26227+31])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[722,26227+32]..[722,26227+40])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[722,26227+32]..[722,26227+33])
                                                              Pexp_ident "!" (typing/typedecl.ml[722,26227+32]..[722,26227+33])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[722,26227+33]..[722,26227+40])
                                                                  Pexp_ident "visited" (typing/typedecl.ml[722,26227+33]..[722,26227+40])
                                                            ]
                                                      ]
                                                ]
                                              expression (typing/typedecl.ml[723,26269+6]..[763,28078+66])
                                                Pexp_match
                                                expression (typing/typedecl.ml[723,26269+12]..[723,26269+23])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[723,26269+12]..[723,26269+20])
                                                    Pexp_ident "get_desc" (typing/typedecl.ml[723,26269+12]..[723,26269+20])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[723,26269+21]..[723,26269+23])
                                                        Pexp_ident "ty" (typing/typedecl.ml[723,26269+21]..[723,26269+23])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (typing/typedecl.ml[724,26298+8]..[724,26298+32])
                                                      Ppat_construct "Tconstr" (typing/typedecl.ml[724,26298+8]..[724,26298+15])
                                                      Some
                                                        []
                                                        pattern (typing/typedecl.ml[724,26298+15]..[724,26298+32])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/typedecl.ml[724,26298+16]..[724,26298+21])
                                                              Ppat_var "path'" (typing/typedecl.ml[724,26298+16]..[724,26298+21])
                                                            pattern (typing/typedecl.ml[724,26298+23]..[724,26298+28])
                                                              Ppat_var "args'" (typing/typedecl.ml[724,26298+23]..[724,26298+28])
                                                            pattern (typing/typedecl.ml[724,26298+30]..[724,26298+31])
                                                              Ppat_any
                                                          ]
                                                    expression (typing/typedecl.ml[725,26334+10]..[757,27791+77])
                                                      Pexp_sequence
                                                      expression (typing/typedecl.ml[725,26334+10]..[756,27776+13])
                                                        Pexp_ifthenelse
                                                        expression (typing/typedecl.ml[725,26334+13]..[725,26334+33])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[725,26334+13]..[725,26334+22])
                                                            Pexp_ident "Path.same" (typing/typedecl.ml[725,26334+13]..[725,26334+22])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[725,26334+23]..[725,26334+27])
                                                                Pexp_ident "path" (typing/typedecl.ml[725,26334+23]..[725,26334+27])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[725,26334+28]..[725,26334+33])
                                                                Pexp_ident "path'" (typing/typedecl.ml[725,26334+28]..[725,26334+33])
                                                          ]
                                                        expression (typing/typedecl.ml[725,26334+39]..[734,26734+13])
                                                          Pexp_ifthenelse
                                                          expression (typing/typedecl.ml[726,26379+15]..[726,26379+61])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[726,26379+15]..[726,26379+18])
                                                              Pexp_ident "not" (typing/typedecl.ml[726,26379+15]..[726,26379+18])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[726,26379+19]..[726,26379+61])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[726,26379+20]..[726,26379+34])
                                                                    Pexp_ident "Ctype.is_equal" (typing/typedecl.ml[726,26379+20]..[726,26379+34])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[726,26379+35]..[726,26379+43])
Pexp_ident "orig_env" (typing/typedecl.ml[726,26379+35]..[726,26379+43])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[726,26379+44]..[726,26379+49])
Pexp_construct "false" (typing/typedecl.ml[726,26379+44]..[726,26379+49])
None
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[726,26379+50]..[726,26379+54])
Pexp_ident "args" (typing/typedecl.ml[726,26379+50]..[726,26379+54])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[726,26379+55]..[726,26379+60])
Pexp_ident "args'" (typing/typedecl.ml[726,26379+55]..[726,26379+60])
                                                                  ]
                                                            ]
                                                          expression (typing/typedecl.ml[727,26446+14]..[733,26709+24])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[727,26446+14]..[727,26446+19])
                                                              Pexp_ident "raise" (typing/typedecl.ml[727,26446+14]..[727,26446+19])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[727,26446+20]..[733,26709+24])
                                                                  Pexp_construct "Error" (typing/typedecl.ml[727,26446+21]..[727,26446+26])
                                                                  Some
                                                                    expression (typing/typedecl.ml[727,26446+26]..[733,26709+23])
                                                                      Pexp_tuple
                                                                      [
expression (typing/typedecl.ml[727,26446+27]..[727,26446+30])
  Pexp_ident "loc" (typing/typedecl.ml[727,26446+27]..[727,26446+30])
expression (typing/typedecl.ml[728,26478+21]..[733,26709+22])
  Pexp_construct "Non_regular" (typing/typedecl.ml[728,26478+21]..[728,26478+32])
  Some
    expression (typing/typedecl.ml[728,26478+33]..[733,26709+22])
      Pexp_record
      [
        "definition" (typing/typedecl.ml[729,26513+23]..[729,26513+33])
          expression (typing/typedecl.ml[729,26513+34]..[729,26513+38])
            Pexp_ident "path" (typing/typedecl.ml[729,26513+34]..[729,26513+38])
        "used_as" (typing/typedecl.ml[730,26553+23]..[730,26553+30])
          expression (typing/typedecl.ml[730,26553+31]..[730,26553+33])
            Pexp_ident "ty" (typing/typedecl.ml[730,26553+31]..[730,26553+33])
        "defined_as" (typing/typedecl.ml[731,26588+23]..[731,26588+33])
          expression (typing/typedecl.ml[731,26588+34]..[731,26588+59])
            Pexp_apply
            expression (typing/typedecl.ml[731,26588+34]..[731,26588+49])
              Pexp_ident "Ctype.newconstr" (typing/typedecl.ml[731,26588+34]..[731,26588+49])
            [
              <arg>
              Nolabel
                expression (typing/typedecl.ml[731,26588+50]..[731,26588+54])
                  Pexp_ident "path" (typing/typedecl.ml[731,26588+50]..[731,26588+54])
              <arg>
              Nolabel
                expression (typing/typedecl.ml[731,26588+55]..[731,26588+59])
                  Pexp_ident "args" (typing/typedecl.ml[731,26588+55]..[731,26588+59])
            ]
        "expansions" (typing/typedecl.ml[732,26649+23]..[732,26649+33])
          expression (typing/typedecl.ml[732,26649+34]..[732,26649+58])
            Pexp_apply
            expression (typing/typedecl.ml[732,26649+34]..[732,26649+42])
              Pexp_ident "List.rev" (typing/typedecl.ml[732,26649+34]..[732,26649+42])
            [
              <arg>
              Nolabel
                expression (typing/typedecl.ml[732,26649+43]..[732,26649+58])
                  Pexp_ident "prev_expansions" (typing/typedecl.ml[732,26649+43]..[732,26649+58])
            ]
      ]
      None
                                                                      ]
                                                            ]
                                                          None
                                                        Some
                                                          expression (typing/typedecl.ml[741,27087+15]..[756,27776+13])
                                                            Pexp_ifthenelse
                                                            expression (typing/typedecl.ml[741,27087+18]..[741,27087+65])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[741,27087+33]..[741,27087+35])
                                                                Pexp_ident "&&" (typing/typedecl.ml[741,27087+33]..[741,27087+35])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[741,27087+18]..[741,27087+32])
                                                                    Pexp_apply
                                                                    expression (typing/typedecl.ml[741,27087+18]..[741,27087+26])
                                                                      Pexp_ident "to_check" (typing/typedecl.ml[741,27087+18]..[741,27087+26])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[741,27087+27]..[741,27087+32])
  Pexp_ident "path'" (typing/typedecl.ml[741,27087+27]..[741,27087+32])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[741,27087+36]..[741,27087+65])
                                                                    Pexp_apply
                                                                    expression (typing/typedecl.ml[741,27087+36]..[741,27087+39])
                                                                      Pexp_ident "not" (typing/typedecl.ml[741,27087+36]..[741,27087+39])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[741,27087+40]..[741,27087+65])
  Pexp_apply
  expression (typing/typedecl.ml[741,27087+41]..[741,27087+49])
    Pexp_ident "List.mem" (typing/typedecl.ml[741,27087+41]..[741,27087+49])
  [
    <arg>
    Nolabel
      expression (typing/typedecl.ml[741,27087+50]..[741,27087+55])
        Pexp_ident "path'" (typing/typedecl.ml[741,27087+50]..[741,27087+55])
    <arg>
    Nolabel
      expression (typing/typedecl.ml[741,27087+56]..[741,27087+64])
        Pexp_ident "prev_exp" (typing/typedecl.ml[741,27087+56]..[741,27087+64])
  ]
                                                                    ]
                                                              ]
                                                            expression (typing/typedecl.ml[741,27087+71]..[756,27776+13])
                                                              Pexp_try
                                                              expression (typing/typedecl.ml[744,27218+14]..[754,27722+20])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (typing/typedecl.ml[744,27218+18]..[744,27218+37])
                                                                      Ppat_tuple
                                                                      [
pattern (typing/typedecl.ml[744,27218+19]..[744,27218+26])
  Ppat_var "params0" (typing/typedecl.ml[744,27218+19]..[744,27218+26])
pattern (typing/typedecl.ml[744,27218+28]..[744,27218+33])
  Ppat_var "body0" (typing/typedecl.ml[744,27218+28]..[744,27218+33])
pattern (typing/typedecl.ml[744,27218+35]..[744,27218+36])
  Ppat_any
                                                                      ]
                                                                    expression (typing/typedecl.ml[744,27218+40]..[744,27218+73])
                                                                      Pexp_apply
                                                                      expression (typing/typedecl.ml[744,27218+40]..[744,27218+63])
Pexp_ident "Env.find_type_expansion" (typing/typedecl.ml[744,27218+40]..[744,27218+63])
                                                                      [
<arg>
Nolabel
  expression (typing/typedecl.ml[744,27218+64]..[744,27218+69])
    Pexp_ident "path'" (typing/typedecl.ml[744,27218+64]..[744,27218+69])
<arg>
Nolabel
  expression (typing/typedecl.ml[744,27218+70]..[744,27218+73])
    Pexp_ident "env" (typing/typedecl.ml[744,27218+70]..[744,27218+73])
                                                                      ]
                                                                ]
                                                                expression (typing/typedecl.ml[745,27295+14]..[754,27722+20])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (typing/typedecl.ml[745,27295+18]..[745,27295+32])
Ppat_tuple
[
  pattern (typing/typedecl.ml[745,27295+19]..[745,27295+25])
    Ppat_var "params" (typing/typedecl.ml[745,27295+19]..[745,27295+25])
  pattern (typing/typedecl.ml[745,27295+27]..[745,27295+31])
    Ppat_var "body" (typing/typedecl.ml[745,27295+27]..[745,27295+31])
]
                                                                      expression (typing/typedecl.ml[746,27330+16]..[746,27330+63])
Pexp_apply
expression (typing/typedecl.ml[746,27330+16]..[746,27330+49])
  Pexp_ident "Ctype.instance_parameterized_type" (typing/typedecl.ml[746,27330+16]..[746,27330+49])
[
  <arg>
  Nolabel
    expression (typing/typedecl.ml[746,27330+50]..[746,27330+57])
      Pexp_ident "params0" (typing/typedecl.ml[746,27330+50]..[746,27330+57])
  <arg>
  Nolabel
    expression (typing/typedecl.ml[746,27330+58]..[746,27330+63])
      Pexp_ident "body0" (typing/typedecl.ml[746,27330+58]..[746,27330+63])
]
                                                                  ]
                                                                  expression (typing/typedecl.ml[747,27397+14]..[754,27722+20])
                                                                    Pexp_sequence
                                                                    expression (typing/typedecl.ml[747,27397+14]..[751,27597+17])
                                                                      Pexp_try
                                                                      expression (typing/typedecl.ml[748,27417+20]..[748,27417+66])
Pexp_apply
expression (typing/typedecl.ml[748,27417+20]..[748,27417+30])
  Pexp_ident "List.iter2" (typing/typedecl.ml[748,27417+20]..[748,27417+30])
[
  <arg>
  Nolabel
    expression (typing/typedecl.ml[748,27417+31]..[748,27417+53])
      Pexp_apply
      expression (typing/typedecl.ml[748,27417+32]..[748,27417+43])
        Pexp_ident "Ctype.unify" (typing/typedecl.ml[748,27417+32]..[748,27417+43])
      [
        <arg>
        Nolabel
          expression (typing/typedecl.ml[748,27417+44]..[748,27417+52])
            Pexp_ident "orig_env" (typing/typedecl.ml[748,27417+44]..[748,27417+52])
      ]
  <arg>
  Nolabel
    expression (typing/typedecl.ml[748,27417+54]..[748,27417+60])
      Pexp_ident "params" (typing/typedecl.ml[748,27417+54]..[748,27417+60])
  <arg>
  Nolabel
    expression (typing/typedecl.ml[748,27417+61]..[748,27417+66])
      Pexp_ident "args'" (typing/typedecl.ml[748,27417+61]..[748,27417+66])
]
                                                                      [
<case>
  pattern (typing/typedecl.ml[749,27484+21]..[749,27484+36])
    Ppat_construct "Ctype.Unify" (typing/typedecl.ml[749,27484+21]..[749,27484+32])
    Some
      []
      pattern (typing/typedecl.ml[749,27484+33]..[749,27484+36])
        Ppat_var "err" (typing/typedecl.ml[749,27484+33]..[749,27484+36])
  expression (typing/typedecl.ml[750,27524+18]..[750,27524+71])
    Pexp_apply
    expression (typing/typedecl.ml[750,27524+18]..[750,27524+23])
      Pexp_ident "raise" (typing/typedecl.ml[750,27524+18]..[750,27524+23])
    [
      <arg>
      Nolabel
        expression (typing/typedecl.ml[750,27524+24]..[750,27524+71])
          Pexp_construct "Error" (typing/typedecl.ml[750,27524+25]..[750,27524+30])
          Some
            expression (typing/typedecl.ml[750,27524+30]..[750,27524+70])
              Pexp_tuple
              [
                expression (typing/typedecl.ml[750,27524+31]..[750,27524+34])
                  Pexp_ident "loc" (typing/typedecl.ml[750,27524+31]..[750,27524+34])
                expression (typing/typedecl.ml[750,27524+36]..[750,27524+69])
                  Pexp_construct "Constraint_failed" (typing/typedecl.ml[750,27524+36]..[750,27524+53])
                  Some
                    expression (typing/typedecl.ml[750,27524+54]..[750,27524+69])
                      Pexp_tuple
                      [
                        expression (typing/typedecl.ml[750,27524+55]..[750,27524+63])
                          Pexp_ident "orig_env" (typing/typedecl.ml[750,27524+55]..[750,27524+63])
                        expression (typing/typedecl.ml[750,27524+65]..[750,27524+68])
                          Pexp_ident "err" (typing/typedecl.ml[750,27524+65]..[750,27524+68])
                      ]
              ]
    ]
                                                                      ]
                                                                    expression (typing/typedecl.ml[752,27616+14]..[754,27722+20])
                                                                      Pexp_apply
                                                                      expression (typing/typedecl.ml[752,27616+14]..[752,27616+27])
Pexp_ident "check_regular" (typing/typedecl.ml[752,27616+14]..[752,27616+27])
                                                                      [
<arg>
Nolabel
  expression (typing/typedecl.ml[752,27616+28]..[752,27616+33])
    Pexp_ident "path'" (typing/typedecl.ml[752,27616+28]..[752,27616+33])
<arg>
Nolabel
  expression (typing/typedecl.ml[752,27616+34]..[752,27616+38])
    Pexp_ident "args" (typing/typedecl.ml[752,27616+34]..[752,27616+38])
<arg>
Nolabel
  expression (typing/typedecl.ml[753,27655+16]..[753,27655+35])
    Pexp_construct "::" (typing/typedecl.ml[753,27655+23]..[753,27655+25])
    Some
      expression (typing/typedecl.ml[753,27655+17]..[753,27655+34]) ghost
        Pexp_tuple
        [
          expression (typing/typedecl.ml[753,27655+17]..[753,27655+22])
            Pexp_ident "path'" (typing/typedecl.ml[753,27655+17]..[753,27655+22])
          expression (typing/typedecl.ml[753,27655+26]..[753,27655+34])
            Pexp_ident "prev_exp" (typing/typedecl.ml[753,27655+26]..[753,27655+34])
        ]
<arg>
Nolabel
  expression (typing/typedecl.ml[753,27655+36]..[753,27655+66])
    Pexp_construct "::" (typing/typedecl.ml[753,27655+47]..[753,27655+49])
    Some
      expression (typing/typedecl.ml[753,27655+37]..[753,27655+65]) ghost
        Pexp_tuple
        [
          expression (typing/typedecl.ml[753,27655+37]..[753,27655+46])
            Pexp_tuple
            [
              expression (typing/typedecl.ml[753,27655+38]..[753,27655+40])
                Pexp_ident "ty" (typing/typedecl.ml[753,27655+38]..[753,27655+40])
              expression (typing/typedecl.ml[753,27655+41]..[753,27655+45])
                Pexp_ident "body" (typing/typedecl.ml[753,27655+41]..[753,27655+45])
            ]
          expression (typing/typedecl.ml[753,27655+50]..[753,27655+65])
            Pexp_ident "prev_expansions" (typing/typedecl.ml[753,27655+50]..[753,27655+65])
        ]
<arg>
Nolabel
  expression (typing/typedecl.ml[754,27722+16]..[754,27722+20])
    Pexp_ident "body" (typing/typedecl.ml[754,27722+16]..[754,27722+20])
                                                                      ]
                                                              [
                                                                <case>
                                                                  pattern (typing/typedecl.ml[755,27743+17]..[755,27743+26])
                                                                    Ppat_construct "Not_found" (typing/typedecl.ml[755,27743+17]..[755,27743+26])
                                                                    None
                                                                  expression (typing/typedecl.ml[755,27743+30]..[755,27743+32])
                                                                    Pexp_construct "()" (typing/typedecl.ml[755,27743+30]..[755,27743+32])
                                                                    None
                                                              ]
                                                            None
                                                      expression (typing/typedecl.ml[757,27791+10]..[757,27791+77])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[757,27791+10]..[757,27791+19])
                                                          Pexp_ident "List.iter" (typing/typedecl.ml[757,27791+10]..[757,27791+19])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[757,27791+20]..[757,27791+71])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[757,27791+21]..[757,27791+34])
                                                                Pexp_ident "check_regular" (typing/typedecl.ml[757,27791+21]..[757,27791+34])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[757,27791+35]..[757,27791+40])
                                                                    Pexp_ident "cpath" (typing/typedecl.ml[757,27791+35]..[757,27791+40])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[757,27791+41]..[757,27791+45])
                                                                    Pexp_ident "args" (typing/typedecl.ml[757,27791+41]..[757,27791+45])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[757,27791+46]..[757,27791+54])
                                                                    Pexp_ident "prev_exp" (typing/typedecl.ml[757,27791+46]..[757,27791+54])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[757,27791+55]..[757,27791+70])
                                                                    Pexp_ident "prev_expansions" (typing/typedecl.ml[757,27791+55]..[757,27791+70])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[757,27791+72]..[757,27791+77])
                                                              Pexp_ident "args'" (typing/typedecl.ml[757,27791+72]..[757,27791+77])
                                                        ]
                                                  <case>
                                                    pattern (typing/typedecl.ml[758,27869+8]..[758,27869+22])
                                                      Ppat_construct "Tpoly" (typing/typedecl.ml[758,27869+8]..[758,27869+13])
                                                      Some
                                                        []
                                                        pattern (typing/typedecl.ml[758,27869+14]..[758,27869+22])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/typedecl.ml[758,27869+15]..[758,27869+17])
                                                              Ppat_var "ty" (typing/typedecl.ml[758,27869+15]..[758,27869+17])
                                                            pattern (typing/typedecl.ml[758,27869+19]..[758,27869+21])
                                                              Ppat_var "tl" (typing/typedecl.ml[758,27869+19]..[758,27869+21])
                                                          ]
                                                    expression (typing/typedecl.ml[759,27895+10]..[760,27971+62])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typedecl.ml[759,27895+14]..[759,27895+21])
                                                            Ppat_tuple
                                                            [
                                                              pattern (typing/typedecl.ml[759,27895+15]..[759,27895+16])
                                                                Ppat_any
                                                              pattern (typing/typedecl.ml[759,27895+18]..[759,27895+20])
                                                                Ppat_var "ty" (typing/typedecl.ml[759,27895+18]..[759,27895+20])
                                                            ]
                                                          expression (typing/typedecl.ml[759,27895+24]..[759,27895+72])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[759,27895+24]..[759,27895+43])
                                                              Pexp_ident "Ctype.instance_poly" (typing/typedecl.ml[759,27895+24]..[759,27895+43])
                                                            [
                                                              <arg>
                                                              Labelled "keep_names"
                                                                expression (typing/typedecl.ml[759,27895+56]..[759,27895+60])
                                                                  Pexp_construct "true" (typing/typedecl.ml[759,27895+56]..[759,27895+60])
                                                                  None
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[759,27895+61]..[759,27895+66])
                                                                  Pexp_construct "false" (typing/typedecl.ml[759,27895+61]..[759,27895+66])
                                                                  None
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[759,27895+67]..[759,27895+69])
                                                                  Pexp_ident "tl" (typing/typedecl.ml[759,27895+67]..[759,27895+69])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[759,27895+70]..[759,27895+72])
                                                                  Pexp_ident "ty" (typing/typedecl.ml[759,27895+70]..[759,27895+72])
                                                            ]
                                                      ]
                                                      expression (typing/typedecl.ml[760,27971+10]..[760,27971+62])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[760,27971+10]..[760,27971+23])
                                                          Pexp_ident "check_regular" (typing/typedecl.ml[760,27971+10]..[760,27971+23])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[760,27971+24]..[760,27971+29])
                                                              Pexp_ident "cpath" (typing/typedecl.ml[760,27971+24]..[760,27971+29])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[760,27971+30]..[760,27971+34])
                                                              Pexp_ident "args" (typing/typedecl.ml[760,27971+30]..[760,27971+34])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[760,27971+35]..[760,27971+43])
                                                              Pexp_ident "prev_exp" (typing/typedecl.ml[760,27971+35]..[760,27971+43])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[760,27971+44]..[760,27971+59])
                                                              Pexp_ident "prev_expansions" (typing/typedecl.ml[760,27971+44]..[760,27971+59])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[760,27971+60]..[760,27971+62])
                                                              Pexp_ident "ty" (typing/typedecl.ml[760,27971+60]..[760,27971+62])
                                                        ]
                                                  <case>
                                                    pattern (typing/typedecl.ml[761,28034+8]..[761,28034+9])
                                                      Ppat_any
                                                    expression (typing/typedecl.ml[762,28047+10]..[763,28078+66])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[762,28047+10]..[762,28047+30])
                                                        Pexp_ident "Btype.iter_type_expr" (typing/typedecl.ml[762,28047+10]..[762,28047+30])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[763,28078+12]..[763,28078+63])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[763,28078+13]..[763,28078+26])
                                                              Pexp_ident "check_regular" (typing/typedecl.ml[763,28078+13]..[763,28078+26])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[763,28078+27]..[763,28078+32])
                                                                  Pexp_ident "cpath" (typing/typedecl.ml[763,28078+27]..[763,28078+32])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[763,28078+33]..[763,28078+37])
                                                                  Pexp_ident "args" (typing/typedecl.ml[763,28078+33]..[763,28078+37])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[763,28078+38]..[763,28078+46])
                                                                  Pexp_ident "prev_exp" (typing/typedecl.ml[763,28078+38]..[763,28078+46])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[763,28078+47]..[763,28078+62])
                                                                  Pexp_ident "prev_expansions" (typing/typedecl.ml[763,28078+47]..[763,28078+62])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[763,28078+64]..[763,28078+66])
                                                            Pexp_ident "ty" (typing/typedecl.ml[763,28078+64]..[763,28078+66])
                                                      ]
                                                ]
                                            None
                            ]
                            expression (typing/typedecl.ml[766,28157+2]..[773,28403+22])
                              Pexp_apply
                              expression (typing/typedecl.ml[766,28157+2]..[766,28157+13])
                                Pexp_ident "Option.iter" (typing/typedecl.ml[766,28157+2]..[766,28157+13])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[767,28171+4]..[772,28361+41])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typedecl.ml[767,28171+9]..[767,28171+13])
                                      Ppat_var "body" (typing/typedecl.ml[767,28171+9]..[767,28171+13])
                                    expression (typing/typedecl.ml[768,28188+6]..[772,28361+40])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typedecl.ml[768,28188+10]..[768,28188+22])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typedecl.ml[768,28188+11]..[768,28188+15])
                                                Ppat_var "args" (typing/typedecl.ml[768,28188+11]..[768,28188+15])
                                              pattern (typing/typedecl.ml[768,28188+17]..[768,28188+21])
                                                Ppat_var "body" (typing/typedecl.ml[768,28188+17]..[768,28188+21])
                                            ]
                                          expression (typing/typedecl.ml[769,28213+8]..[770,28255+48])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[769,28213+8]..[769,28213+41])
                                              Pexp_ident "Ctype.instance_parameterized_type" (typing/typedecl.ml[769,28213+8]..[769,28213+41])
                                            [
                                              <arg>
                                              Labelled "keep_names"
                                                expression (typing/typedecl.ml[770,28255+22]..[770,28255+26])
                                                  Pexp_construct "true" (typing/typedecl.ml[770,28255+22]..[770,28255+26])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[770,28255+27]..[770,28255+43])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[770,28255+27]..[770,28255+31])
                                                    Pexp_ident "decl" (typing/typedecl.ml[770,28255+27]..[770,28255+31])
                                                  "type_params" (typing/typedecl.ml[770,28255+32]..[770,28255+43])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[770,28255+44]..[770,28255+48])
                                                  Pexp_ident "body" (typing/typedecl.ml[770,28255+44]..[770,28255+48])
                                            ]
                                      ]
                                      expression (typing/typedecl.ml[771,28307+6]..[772,28361+40])
                                        Pexp_sequence
                                        expression (typing/typedecl.ml[771,28307+6]..[771,28307+52])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[771,28307+6]..[771,28307+15])
                                            Pexp_ident "List.iter" (typing/typedecl.ml[771,28307+6]..[771,28307+15])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[771,28307+16]..[771,28307+47])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[771,28307+17]..[771,28307+30])
                                                  Pexp_ident "check_regular" (typing/typedecl.ml[771,28307+17]..[771,28307+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[771,28307+31]..[771,28307+35])
                                                      Pexp_ident "path" (typing/typedecl.ml[771,28307+31]..[771,28307+35])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[771,28307+36]..[771,28307+40])
                                                      Pexp_ident "args" (typing/typedecl.ml[771,28307+36]..[771,28307+40])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[771,28307+41]..[771,28307+43])
                                                      Pexp_construct "[]" (typing/typedecl.ml[771,28307+41]..[771,28307+43])
                                                      None
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[771,28307+44]..[771,28307+46])
                                                      Pexp_construct "[]" (typing/typedecl.ml[771,28307+44]..[771,28307+46])
                                                      None
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[771,28307+48]..[771,28307+52])
                                                Pexp_ident "args" (typing/typedecl.ml[771,28307+48]..[771,28307+52])
                                          ]
                                        expression (typing/typedecl.ml[772,28361+6]..[772,28361+40])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[772,28361+6]..[772,28361+19])
                                            Pexp_ident "check_regular" (typing/typedecl.ml[772,28361+6]..[772,28361+19])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[772,28361+20]..[772,28361+24])
                                                Pexp_ident "path" (typing/typedecl.ml[772,28361+20]..[772,28361+24])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[772,28361+25]..[772,28361+29])
                                                Pexp_ident "args" (typing/typedecl.ml[772,28361+25]..[772,28361+29])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[772,28361+30]..[772,28361+32])
                                                Pexp_construct "[]" (typing/typedecl.ml[772,28361+30]..[772,28361+32])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[772,28361+33]..[772,28361+35])
                                                Pexp_construct "[]" (typing/typedecl.ml[772,28361+33]..[772,28361+35])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[772,28361+36]..[772,28361+40])
                                                Pexp_ident "body" (typing/typedecl.ml[772,28361+36]..[772,28361+40])
                                          ]
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[773,28403+4]..[773,28403+22])
                                    Pexp_field
                                    expression (typing/typedecl.ml[773,28403+4]..[773,28403+8])
                                      Pexp_ident "decl" (typing/typedecl.ml[773,28403+4]..[773,28403+8])
                                    "type_manifest" (typing/typedecl.ml[773,28403+9]..[773,28403+22])
                              ]
    ]
  structure_item (typing/typedecl.ml[775,28427+0]..[779,28632+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[775,28427+4]..[775,28427+26])
          Ppat_var "check_abbrev_recursion" (typing/typedecl.ml[775,28427+4]..[775,28427+26])
        expression (typing/typedecl.ml[775,28427+27]..[779,28632+17]) ghost
          Pexp_fun
          Labelled "orig_env"
          None
          pattern (typing/typedecl.ml[775,28427+28]..[775,28427+36])
            Ppat_var "orig_env" (typing/typedecl.ml[775,28427+28]..[775,28427+36])
          expression (typing/typedecl.ml[775,28427+37]..[779,28632+17]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[775,28427+37]..[775,28427+40])
              Ppat_var "env" (typing/typedecl.ml[775,28427+37]..[775,28427+40])
            expression (typing/typedecl.ml[775,28427+41]..[779,28632+17]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[775,28427+41]..[775,28427+52])
                Ppat_var "id_loc_list" (typing/typedecl.ml[775,28427+41]..[775,28427+52])
              expression (typing/typedecl.ml[775,28427+53]..[779,28632+17]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[775,28427+53]..[775,28427+61])
                  Ppat_var "to_check" (typing/typedecl.ml[775,28427+53]..[775,28427+61])
                expression (typing/typedecl.ml[775,28427+62]..[779,28632+17]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typedecl.ml[775,28427+62]..[775,28427+67])
                    Ppat_var "tdecl" (typing/typedecl.ml[775,28427+62]..[775,28427+67])
                  expression (typing/typedecl.ml[776,28497+2]..[779,28632+17])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typedecl.ml[776,28497+6]..[776,28497+10])
                          Ppat_var "decl" (typing/typedecl.ml[776,28497+6]..[776,28497+10])
                        expression (typing/typedecl.ml[776,28497+13]..[776,28497+27])
                          Pexp_field
                          expression (typing/typedecl.ml[776,28497+13]..[776,28497+18])
                            Pexp_ident "tdecl" (typing/typedecl.ml[776,28497+13]..[776,28497+18])
                          "typ_type" (typing/typedecl.ml[776,28497+19]..[776,28497+27])
                    ]
                    expression (typing/typedecl.ml[777,28528+2]..[779,28632+17])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typedecl.ml[777,28528+6]..[777,28528+8])
                            Ppat_var "id" (typing/typedecl.ml[777,28528+6]..[777,28528+8])
                          expression (typing/typedecl.ml[777,28528+11]..[777,28528+23])
                            Pexp_field
                            expression (typing/typedecl.ml[777,28528+11]..[777,28528+16])
                              Pexp_ident "tdecl" (typing/typedecl.ml[777,28528+11]..[777,28528+16])
                            "typ_id" (typing/typedecl.ml[777,28528+17]..[777,28528+23])
                      ]
                      expression (typing/typedecl.ml[778,28555+2]..[779,28632+17])
                        Pexp_apply
                        expression (typing/typedecl.ml[778,28555+2]..[778,28555+17])
                          Pexp_ident "check_recursion" (typing/typedecl.ml[778,28555+2]..[778,28555+17])
                        [
                          <arg>
                          Labelled "orig_env"
                            expression (typing/typedecl.ml[778,28555+19]..[778,28555+27])
                              Pexp_ident "orig_env" (typing/typedecl.ml[778,28555+19]..[778,28555+27])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[778,28555+28]..[778,28555+31])
                              Pexp_ident "env" (typing/typedecl.ml[778,28555+28]..[778,28555+31])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[778,28555+32]..[778,28555+59])
                              Pexp_apply
                              expression (typing/typedecl.ml[778,28555+33]..[778,28555+43])
                                Pexp_ident "List.assoc" (typing/typedecl.ml[778,28555+33]..[778,28555+43])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[778,28555+44]..[778,28555+46])
                                    Pexp_ident "id" (typing/typedecl.ml[778,28555+44]..[778,28555+46])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[778,28555+47]..[778,28555+58])
                                    Pexp_ident "id_loc_list" (typing/typedecl.ml[778,28555+47]..[778,28555+58])
                              ]
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[778,28555+60]..[778,28555+76])
                              Pexp_construct "Path.Pident" (typing/typedecl.ml[778,28555+61]..[778,28555+72])
                              Some
                                expression (typing/typedecl.ml[778,28555+73]..[778,28555+75])
                                  Pexp_ident "id" (typing/typedecl.ml[778,28555+73]..[778,28555+75])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[779,28632+4]..[779,28632+8])
                              Pexp_ident "decl" (typing/typedecl.ml[779,28632+4]..[779,28632+8])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[779,28632+9]..[779,28632+17])
                              Pexp_ident "to_check" (typing/typedecl.ml[779,28632+9]..[779,28632+17])
                        ]
    ]
  structure_item (typing/typedecl.ml[781,28651+0]..[809,29743+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[781,28651+4]..[781,28651+20])
          Ppat_var "check_duplicates" (typing/typedecl.ml[781,28651+4]..[781,28651+20])
        expression (typing/typedecl.ml[781,28651+21]..[809,29743+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[781,28651+21]..[781,28651+31])
            Ppat_var "sdecl_list" (typing/typedecl.ml[781,28651+21]..[781,28651+31])
          expression (typing/typedecl.ml[782,28685+2]..[809,29743+14])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/typedecl.ml[782,28685+6]..[782,28685+12])
                  Ppat_var "labels" (typing/typedecl.ml[782,28685+6]..[782,28685+12])
                expression (typing/typedecl.ml[782,28685+15]..[782,28685+31])
                  Pexp_apply
                  expression (typing/typedecl.ml[782,28685+15]..[782,28685+29])
                    Pexp_ident "Hashtbl.create" (typing/typedecl.ml[782,28685+15]..[782,28685+29])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[782,28685+30]..[782,28685+31])
                        Pexp_constant PConst_int (7,None)
                  ]
              <def>
                pattern (typing/typedecl.ml[782,28685+36]..[782,28685+43])
                  Ppat_var "constrs" (typing/typedecl.ml[782,28685+36]..[782,28685+43])
                expression (typing/typedecl.ml[782,28685+46]..[782,28685+62])
                  Pexp_apply
                  expression (typing/typedecl.ml[782,28685+46]..[782,28685+60])
                    Pexp_ident "Hashtbl.create" (typing/typedecl.ml[782,28685+46]..[782,28685+60])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[782,28685+61]..[782,28685+62])
                        Pexp_constant PConst_int (7,None)
                  ]
            ]
            expression (typing/typedecl.ml[783,28751+2]..[809,29743+14])
              Pexp_apply
              expression (typing/typedecl.ml[783,28751+2]..[783,28751+11])
                Pexp_ident "List.iter" (typing/typedecl.ml[783,28751+2]..[783,28751+11])
              [
                <arg>
                Nolabel
                  expression (typing/typedecl.ml[784,28763+4]..[808,29719+23])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typedecl.ml[784,28763+9]..[784,28763+14])
                      Ppat_var "sdecl" (typing/typedecl.ml[784,28763+9]..[784,28763+14])
                    expression (typing/typedecl.ml[784,28763+18]..[808,29719+22])
                      Pexp_match
                      expression (typing/typedecl.ml[784,28763+24]..[784,28763+40])
                        Pexp_field
                        expression (typing/typedecl.ml[784,28763+24]..[784,28763+29])
                          Pexp_ident "sdecl" (typing/typedecl.ml[784,28763+24]..[784,28763+29])
                        "ptype_kind" (typing/typedecl.ml[784,28763+30]..[784,28763+40])
                      [
                        <case>
                          pattern (typing/typedecl.ml[785,28809+6]..[785,28809+22])
                            Ppat_construct "Ptype_variant" (typing/typedecl.ml[785,28809+6]..[785,28809+19])
                            Some
                              []
                              pattern (typing/typedecl.ml[785,28809+20]..[785,28809+22])
                                Ppat_var "cl" (typing/typedecl.ml[785,28809+20]..[785,28809+22])
                          expression (typing/typedecl.ml[786,28835+8]..[796,29261+12])
                            Pexp_apply
                            expression (typing/typedecl.ml[786,28835+8]..[786,28835+17])
                              Pexp_ident "List.iter" (typing/typedecl.ml[786,28835+8]..[786,28835+17])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[787,28853+10]..[795,29188+72])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typedecl.ml[787,28853+15]..[787,28853+18])
                                    Ppat_var "pcd" (typing/typedecl.ml[787,28853+15]..[787,28853+18])
                                  expression (typing/typedecl.ml[788,28875+12]..[795,29188+71])
                                    Pexp_try
                                    expression (typing/typedecl.ml[789,28891+14]..[793,29115+42])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typedecl.ml[789,28891+18]..[789,28891+23])
                                            Ppat_var "name'" (typing/typedecl.ml[789,28891+18]..[789,28891+23])
                                          expression (typing/typedecl.ml[789,28891+26]..[789,28891+63])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[789,28891+26]..[789,28891+38])
                                              Pexp_ident "Hashtbl.find" (typing/typedecl.ml[789,28891+26]..[789,28891+38])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[789,28891+39]..[789,28891+46])
                                                  Pexp_ident "constrs" (typing/typedecl.ml[789,28891+39]..[789,28891+46])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[789,28891+47]..[789,28891+63])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[789,28891+47]..[789,28891+59])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[789,28891+47]..[789,28891+50])
                                                      Pexp_ident "pcd" (typing/typedecl.ml[789,28891+47]..[789,28891+50])
                                                    "pcd_name" (typing/typedecl.ml[789,28891+51]..[789,28891+59])
                                                  "txt" (typing/typedecl.ml[789,28891+60]..[789,28891+63])
                                            ]
                                      ]
                                      expression (typing/typedecl.ml[790,28958+14]..[793,29115+42])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[790,28958+14]..[790,28958+36])
                                          Pexp_ident "Location.prerr_warning" (typing/typedecl.ml[790,28958+14]..[790,28958+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[790,28958+37]..[790,28958+48])
                                              Pexp_field
                                              expression (typing/typedecl.ml[790,28958+37]..[790,28958+40])
                                                Pexp_ident "pcd" (typing/typedecl.ml[790,28958+37]..[790,28958+40])
                                              "pcd_loc" (typing/typedecl.ml[790,28958+41]..[790,28958+48])
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[791,29007+16]..[793,29115+42])
                                              Pexp_construct "Warnings.Duplicate_definitions" (typing/typedecl.ml[791,29007+17]..[791,29007+47])
                                              Some
                                                expression (typing/typedecl.ml[792,29055+19]..[793,29115+41])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typedecl.ml[792,29055+20]..[792,29055+33])
                                                      Pexp_constant PConst_string("constructor",(typing/typedecl.ml[792,29055+21]..[792,29055+32]),None)
                                                    expression (typing/typedecl.ml[792,29055+35]..[792,29055+51])
                                                      Pexp_field
                                                      expression (typing/typedecl.ml[792,29055+35]..[792,29055+47])
                                                        Pexp_field
                                                        expression (typing/typedecl.ml[792,29055+35]..[792,29055+38])
                                                          Pexp_ident "pcd" (typing/typedecl.ml[792,29055+35]..[792,29055+38])
                                                        "pcd_name" (typing/typedecl.ml[792,29055+39]..[792,29055+47])
                                                      "txt" (typing/typedecl.ml[792,29055+48]..[792,29055+51])
                                                    expression (typing/typedecl.ml[792,29055+53]..[792,29055+58])
                                                      Pexp_ident "name'" (typing/typedecl.ml[792,29055+53]..[792,29055+58])
                                                    expression (typing/typedecl.ml[793,29115+20]..[793,29115+40])
                                                      Pexp_field
                                                      expression (typing/typedecl.ml[793,29115+20]..[793,29115+36])
                                                        Pexp_field
                                                        expression (typing/typedecl.ml[793,29115+20]..[793,29115+25])
                                                          Pexp_ident "sdecl" (typing/typedecl.ml[793,29115+20]..[793,29115+25])
                                                        "ptype_name" (typing/typedecl.ml[793,29115+26]..[793,29115+36])
                                                      "txt" (typing/typedecl.ml[793,29115+37]..[793,29115+40])
                                                  ]
                                        ]
                                    [
                                      <case>
                                        pattern (typing/typedecl.ml[794,29158+17]..[794,29158+26])
                                          Ppat_construct "Not_found" (typing/typedecl.ml[794,29158+17]..[794,29158+26])
                                          None
                                        expression (typing/typedecl.ml[795,29188+14]..[795,29188+71])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[795,29188+14]..[795,29188+25])
                                            Pexp_ident "Hashtbl.add" (typing/typedecl.ml[795,29188+14]..[795,29188+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[795,29188+26]..[795,29188+33])
                                                Pexp_ident "constrs" (typing/typedecl.ml[795,29188+26]..[795,29188+33])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[795,29188+34]..[795,29188+50])
                                                Pexp_field
                                                expression (typing/typedecl.ml[795,29188+34]..[795,29188+46])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[795,29188+34]..[795,29188+37])
                                                    Pexp_ident "pcd" (typing/typedecl.ml[795,29188+34]..[795,29188+37])
                                                  "pcd_name" (typing/typedecl.ml[795,29188+38]..[795,29188+46])
                                                "txt" (typing/typedecl.ml[795,29188+47]..[795,29188+50])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[795,29188+51]..[795,29188+71])
                                                Pexp_field
                                                expression (typing/typedecl.ml[795,29188+51]..[795,29188+67])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[795,29188+51]..[795,29188+56])
                                                    Pexp_ident "sdecl" (typing/typedecl.ml[795,29188+51]..[795,29188+56])
                                                  "ptype_name" (typing/typedecl.ml[795,29188+57]..[795,29188+67])
                                                "txt" (typing/typedecl.ml[795,29188+68]..[795,29188+71])
                                          ]
                                    ]
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[796,29261+10]..[796,29261+12])
                                  Pexp_ident "cl" (typing/typedecl.ml[796,29261+10]..[796,29261+12])
                            ]
                        <case>
                          pattern (typing/typedecl.ml[797,29274+6]..[797,29274+21])
                            Ppat_construct "Ptype_record" (typing/typedecl.ml[797,29274+6]..[797,29274+18])
                            Some
                              []
                              pattern (typing/typedecl.ml[797,29274+19]..[797,29274+21])
                                Ppat_var "fl" (typing/typedecl.ml[797,29274+19]..[797,29274+21])
                          expression (typing/typedecl.ml[798,29299+8]..[806,29679+12])
                            Pexp_apply
                            expression (typing/typedecl.ml[798,29299+8]..[798,29299+17])
                              Pexp_ident "List.iter" (typing/typedecl.ml[798,29299+8]..[798,29299+17])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[799,29317+10]..[805,29598+80])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typedecl.ml[799,29317+15]..[799,29317+43])
                                    Ppat_record Closed
                                    [
                                      "pld_name" (typing/typedecl.ml[799,29317+16]..[799,29317+24])
                                        pattern (typing/typedecl.ml[799,29317+25]..[799,29317+30])
                                          Ppat_var "cname" (typing/typedecl.ml[799,29317+25]..[799,29317+30])
                                      "pld_loc" (typing/typedecl.ml[799,29317+31]..[799,29317+38])
                                        pattern (typing/typedecl.ml[799,29317+39]..[799,29317+42])
                                          Ppat_var "loc" (typing/typedecl.ml[799,29317+39]..[799,29317+42])
                                    ]
                                  expression (typing/typedecl.ml[800,29364+12]..[805,29598+79])
                                    Pexp_try
                                    expression (typing/typedecl.ml[801,29380+14]..[804,29528+69])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typedecl.ml[801,29380+18]..[801,29380+23])
                                            Ppat_var "name'" (typing/typedecl.ml[801,29380+18]..[801,29380+23])
                                          expression (typing/typedecl.ml[801,29380+26]..[801,29380+55])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[801,29380+26]..[801,29380+38])
                                              Pexp_ident "Hashtbl.find" (typing/typedecl.ml[801,29380+26]..[801,29380+38])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[801,29380+39]..[801,29380+45])
                                                  Pexp_ident "labels" (typing/typedecl.ml[801,29380+39]..[801,29380+45])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[801,29380+46]..[801,29380+55])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[801,29380+46]..[801,29380+51])
                                                    Pexp_ident "cname" (typing/typedecl.ml[801,29380+46]..[801,29380+51])
                                                  "txt" (typing/typedecl.ml[801,29380+52]..[801,29380+55])
                                            ]
                                      ]
                                      expression (typing/typedecl.ml[802,29439+14]..[804,29528+69])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[802,29439+14]..[802,29439+36])
                                          Pexp_ident "Location.prerr_warning" (typing/typedecl.ml[802,29439+14]..[802,29439+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[802,29439+37]..[802,29439+40])
                                              Pexp_ident "loc" (typing/typedecl.ml[802,29439+37]..[802,29439+40])
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[803,29480+16]..[804,29528+69])
                                              Pexp_construct "Warnings.Duplicate_definitions" (typing/typedecl.ml[803,29480+17]..[803,29480+47])
                                              Some
                                                expression (typing/typedecl.ml[804,29528+19]..[804,29528+68])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typedecl.ml[804,29528+20]..[804,29528+27])
                                                      Pexp_constant PConst_string("label",(typing/typedecl.ml[804,29528+21]..[804,29528+26]),None)
                                                    expression (typing/typedecl.ml[804,29528+29]..[804,29528+38])
                                                      Pexp_field
                                                      expression (typing/typedecl.ml[804,29528+29]..[804,29528+34])
                                                        Pexp_ident "cname" (typing/typedecl.ml[804,29528+29]..[804,29528+34])
                                                      "txt" (typing/typedecl.ml[804,29528+35]..[804,29528+38])
                                                    expression (typing/typedecl.ml[804,29528+40]..[804,29528+45])
                                                      Pexp_ident "name'" (typing/typedecl.ml[804,29528+40]..[804,29528+45])
                                                    expression (typing/typedecl.ml[804,29528+47]..[804,29528+67])
                                                      Pexp_field
                                                      expression (typing/typedecl.ml[804,29528+47]..[804,29528+63])
                                                        Pexp_field
                                                        expression (typing/typedecl.ml[804,29528+47]..[804,29528+52])
                                                          Pexp_ident "sdecl" (typing/typedecl.ml[804,29528+47]..[804,29528+52])
                                                        "ptype_name" (typing/typedecl.ml[804,29528+53]..[804,29528+63])
                                                      "txt" (typing/typedecl.ml[804,29528+64]..[804,29528+67])
                                                  ]
                                        ]
                                    [
                                      <case>
                                        pattern (typing/typedecl.ml[805,29598+17]..[805,29598+26])
                                          Ppat_construct "Not_found" (typing/typedecl.ml[805,29598+17]..[805,29598+26])
                                          None
                                        expression (typing/typedecl.ml[805,29598+30]..[805,29598+79])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[805,29598+30]..[805,29598+41])
                                            Pexp_ident "Hashtbl.add" (typing/typedecl.ml[805,29598+30]..[805,29598+41])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[805,29598+42]..[805,29598+48])
                                                Pexp_ident "labels" (typing/typedecl.ml[805,29598+42]..[805,29598+48])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[805,29598+49]..[805,29598+58])
                                                Pexp_field
                                                expression (typing/typedecl.ml[805,29598+49]..[805,29598+54])
                                                  Pexp_ident "cname" (typing/typedecl.ml[805,29598+49]..[805,29598+54])
                                                "txt" (typing/typedecl.ml[805,29598+55]..[805,29598+58])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[805,29598+59]..[805,29598+79])
                                                Pexp_field
                                                expression (typing/typedecl.ml[805,29598+59]..[805,29598+75])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[805,29598+59]..[805,29598+64])
                                                    Pexp_ident "sdecl" (typing/typedecl.ml[805,29598+59]..[805,29598+64])
                                                  "ptype_name" (typing/typedecl.ml[805,29598+65]..[805,29598+75])
                                                "txt" (typing/typedecl.ml[805,29598+76]..[805,29598+79])
                                          ]
                                    ]
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[806,29679+10]..[806,29679+12])
                                  Pexp_ident "fl" (typing/typedecl.ml[806,29679+10]..[806,29679+12])
                            ]
                        <case>
                          pattern (typing/typedecl.ml[807,29692+6]..[807,29692+20])
                            Ppat_construct "Ptype_abstract" (typing/typedecl.ml[807,29692+6]..[807,29692+20])
                            None
                          expression (typing/typedecl.ml[807,29692+24]..[807,29692+26])
                            Pexp_construct "()" (typing/typedecl.ml[807,29692+24]..[807,29692+26])
                            None
                        <case>
                          pattern (typing/typedecl.ml[808,29719+6]..[808,29719+16])
                            Ppat_construct "Ptype_open" (typing/typedecl.ml[808,29719+6]..[808,29719+16])
                            None
                          expression (typing/typedecl.ml[808,29719+20]..[808,29719+22])
                            Pexp_construct "()" (typing/typedecl.ml[808,29719+20]..[808,29719+22])
                            None
                      ]
                <arg>
                Nolabel
                  expression (typing/typedecl.ml[809,29743+4]..[809,29743+14])
                    Pexp_ident "sdecl_list" (typing/typedecl.ml[809,29743+4]..[809,29743+14])
              ]
    ]
  structure_item (typing/typedecl.ml[812,29815+0]..[823,30269+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[812,29815+4]..[812,29815+18])
          Ppat_var "name_recursion" (typing/typedecl.ml[812,29815+4]..[812,29815+18])
        expression (typing/typedecl.ml[812,29815+19]..[823,30269+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[812,29815+19]..[812,29815+24])
            Ppat_var "sdecl" (typing/typedecl.ml[812,29815+19]..[812,29815+24])
          expression (typing/typedecl.ml[812,29815+25]..[823,30269+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[812,29815+25]..[812,29815+27])
              Ppat_var "id" (typing/typedecl.ml[812,29815+25]..[812,29815+27])
            expression (typing/typedecl.ml[812,29815+28]..[823,30269+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[812,29815+28]..[812,29815+32])
                Ppat_var "decl" (typing/typedecl.ml[812,29815+28]..[812,29815+32])
              expression (typing/typedecl.ml[813,29850+2]..[823,30269+13])
                Pexp_match
                expression (typing/typedecl.ml[813,29850+8]..[813,29850+12])
                  Pexp_ident "decl" (typing/typedecl.ml[813,29850+8]..[813,29850+12])
                [
                  <case>
                    pattern (typing/typedecl.ml[814,29868+4]..[816,29932+31])
                      Ppat_record Closed
                      [
                        "type_kind" (typing/typedecl.ml[814,29868+6]..[814,29868+15])
                          pattern (typing/typedecl.ml[814,29868+18]..[814,29868+31])
                            Ppat_construct "Type_abstract" (typing/typedecl.ml[814,29868+18]..[814,29868+31])
                            None
                        "type_manifest" (typing/typedecl.ml[815,29901+6]..[815,29901+19])
                          pattern (typing/typedecl.ml[815,29901+22]..[815,29901+29])
                            Ppat_construct "Some" (typing/typedecl.ml[815,29901+22]..[815,29901+26])
                            Some
                              []
                              pattern (typing/typedecl.ml[815,29901+27]..[815,29901+29])
                                Ppat_var "ty" (typing/typedecl.ml[815,29901+27]..[815,29901+29])
                        "type_private" (typing/typedecl.ml[816,29932+6]..[816,29932+18])
                          pattern (typing/typedecl.ml[816,29932+21]..[816,29932+28])
                            Ppat_construct "Private" (typing/typedecl.ml[816,29932+21]..[816,29932+28])
                            None
                      ]
                    <when>
                      expression (typing/typedecl.ml[816,29932+37]..[816,29932+56])
                        Pexp_apply
                        expression (typing/typedecl.ml[816,29932+37]..[816,29932+50])
                          Pexp_ident "is_fixed_type" (typing/typedecl.ml[816,29932+37]..[816,29932+50])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[816,29932+51]..[816,29932+56])
                              Pexp_ident "sdecl" (typing/typedecl.ml[816,29932+51]..[816,29932+56])
                        ]
                    expression (typing/typedecl.ml[817,29992+4]..[822,30255+13])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typedecl.ml[817,29992+8]..[817,29992+11])
                            Ppat_var "ty'" (typing/typedecl.ml[817,29992+8]..[817,29992+11])
                          expression (typing/typedecl.ml[817,29992+14]..[817,29992+56])
                            Pexp_apply
                            expression (typing/typedecl.ml[817,29992+14]..[817,29992+20])
                              Pexp_ident "newty2" (typing/typedecl.ml[817,29992+14]..[817,29992+20])
                            [
                              <arg>
                              Labelled "level"
                                expression (typing/typedecl.ml[817,29992+28]..[817,29992+42])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[817,29992+29]..[817,29992+38])
                                    Pexp_ident "get_level" (typing/typedecl.ml[817,29992+29]..[817,29992+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[817,29992+39]..[817,29992+41])
                                        Pexp_ident "ty" (typing/typedecl.ml[817,29992+39]..[817,29992+41])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[817,29992+43]..[817,29992+56])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[817,29992+44]..[817,29992+52])
                                    Pexp_ident "get_desc" (typing/typedecl.ml[817,29992+44]..[817,29992+52])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[817,29992+53]..[817,29992+55])
                                        Pexp_ident "ty" (typing/typedecl.ml[817,29992+53]..[817,29992+55])
                                  ]
                            ]
                      ]
                      expression (typing/typedecl.ml[818,30052+4]..[822,30255+13])
                        Pexp_ifthenelse
                        expression (typing/typedecl.ml[818,30052+7]..[818,30052+30])
                          Pexp_apply
                          expression (typing/typedecl.ml[818,30052+7]..[818,30052+23])
                            Pexp_ident "Ctype.deep_occur" (typing/typedecl.ml[818,30052+7]..[818,30052+23])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[818,30052+24]..[818,30052+26])
                                Pexp_ident "ty" (typing/typedecl.ml[818,30052+24]..[818,30052+26])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[818,30052+27]..[818,30052+30])
                                Pexp_ident "ty'" (typing/typedecl.ml[818,30052+27]..[818,30052+30])
                          ]
                        expression (typing/typedecl.ml[819,30088+6]..[821,30212+42])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typedecl.ml[819,30088+10]..[819,30088+12])
                                Ppat_var "td" (typing/typedecl.ml[819,30088+10]..[819,30088+12])
                              expression (typing/typedecl.ml[819,30088+15]..[819,30088+66])
                                Pexp_construct "Tconstr" (typing/typedecl.ml[819,30088+15]..[819,30088+22])
                                Some
                                  expression (typing/typedecl.ml[819,30088+22]..[819,30088+66])
                                    Pexp_tuple
                                    [
                                      expression (typing/typedecl.ml[819,30088+23]..[819,30088+37])
                                        Pexp_construct "Path.Pident" (typing/typedecl.ml[819,30088+23]..[819,30088+34])
                                        Some
                                          expression (typing/typedecl.ml[819,30088+35]..[819,30088+37])
                                            Pexp_ident "id" (typing/typedecl.ml[819,30088+35]..[819,30088+37])
                                      expression (typing/typedecl.ml[819,30088+39]..[819,30088+55])
                                        Pexp_field
                                        expression (typing/typedecl.ml[819,30088+39]..[819,30088+43])
                                          Pexp_ident "decl" (typing/typedecl.ml[819,30088+39]..[819,30088+43])
                                        "type_params" (typing/typedecl.ml[819,30088+44]..[819,30088+55])
                                      expression (typing/typedecl.ml[819,30088+57]..[819,30088+65])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[819,30088+57]..[819,30088+60])
                                          Pexp_ident "ref" (typing/typedecl.ml[819,30088+57]..[819,30088+60])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[819,30088+61]..[819,30088+65])
                                              Pexp_construct "Mnil" (typing/typedecl.ml[819,30088+61]..[819,30088+65])
                                              None
                                        ]
                                    ]
                          ]
                          expression (typing/typedecl.ml[820,30158+6]..[821,30212+42])
                            Pexp_sequence
                            expression (typing/typedecl.ml[820,30158+6]..[820,30158+52])
                              Pexp_apply
                              expression (typing/typedecl.ml[820,30158+6]..[820,30158+15])
                                Pexp_ident "link_type" (typing/typedecl.ml[820,30158+6]..[820,30158+15])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[820,30158+16]..[820,30158+18])
                                    Pexp_ident "ty" (typing/typedecl.ml[820,30158+16]..[820,30158+18])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[820,30158+19]..[820,30158+52])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[820,30158+20]..[820,30158+26])
                                      Pexp_ident "newty2" (typing/typedecl.ml[820,30158+20]..[820,30158+26])
                                    [
                                      <arg>
                                      Labelled "level"
                                        expression (typing/typedecl.ml[820,30158+34]..[820,30158+48])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[820,30158+35]..[820,30158+44])
                                            Pexp_ident "get_level" (typing/typedecl.ml[820,30158+35]..[820,30158+44])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[820,30158+45]..[820,30158+47])
                                                Pexp_ident "ty" (typing/typedecl.ml[820,30158+45]..[820,30158+47])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[820,30158+49]..[820,30158+51])
                                          Pexp_ident "td" (typing/typedecl.ml[820,30158+49]..[820,30158+51])
                                    ]
                              ]
                            expression (typing/typedecl.ml[821,30212+6]..[821,30212+42])
                              Pexp_record
                              [
                                "type_manifest" (typing/typedecl.ml[821,30212+17]..[821,30212+30])
                                  expression (typing/typedecl.ml[821,30212+33]..[821,30212+41])
                                    Pexp_construct "Some" (typing/typedecl.ml[821,30212+33]..[821,30212+37])
                                    Some
                                      expression (typing/typedecl.ml[821,30212+38]..[821,30212+41])
                                        Pexp_ident "ty'" (typing/typedecl.ml[821,30212+38]..[821,30212+41])
                              ]
                              Some
                                expression (typing/typedecl.ml[821,30212+7]..[821,30212+11])
                                  Pexp_ident "decl" (typing/typedecl.ml[821,30212+7]..[821,30212+11])
                        Some
                          expression (typing/typedecl.ml[822,30255+9]..[822,30255+13])
                            Pexp_ident "decl" (typing/typedecl.ml[822,30255+9]..[822,30255+13])
                  <case>
                    pattern (typing/typedecl.ml[823,30269+4]..[823,30269+5])
                      Ppat_any
                    expression (typing/typedecl.ml[823,30269+9]..[823,30269+13])
                      Pexp_ident "decl" (typing/typedecl.ml[823,30269+9]..[823,30269+13])
                ]
    ]
  structure_item (typing/typedecl.ml[825,30284+0]..[827,30397+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[825,30284+4]..[825,30284+24])
          Ppat_var "name_recursion_decls" (typing/typedecl.ml[825,30284+4]..[825,30284+24])
        expression (typing/typedecl.ml[825,30284+25]..[827,30397+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[825,30284+25]..[825,30284+31])
            Ppat_var "sdecls" (typing/typedecl.ml[825,30284+25]..[825,30284+31])
          expression (typing/typedecl.ml[825,30284+32]..[827,30397+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[825,30284+32]..[825,30284+37])
              Ppat_var "decls" (typing/typedecl.ml[825,30284+32]..[825,30284+37])
            expression (typing/typedecl.ml[826,30324+2]..[827,30397+16])
              Pexp_apply
              expression (typing/typedecl.ml[826,30324+2]..[826,30324+11])
                Pexp_ident "List.map2" (typing/typedecl.ml[826,30324+2]..[826,30324+11])
              [
                <arg>
                Nolabel
                  expression (typing/typedecl.ml[826,30324+12]..[826,30324+72])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typedecl.ml[826,30324+17]..[826,30324+22])
                      Ppat_var "sdecl" (typing/typedecl.ml[826,30324+17]..[826,30324+22])
                    expression (typing/typedecl.ml[826,30324+23]..[826,30324+71]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typedecl.ml[826,30324+23]..[826,30324+33])
                        Ppat_tuple
                        [
                          pattern (typing/typedecl.ml[826,30324+24]..[826,30324+26])
                            Ppat_var "id" (typing/typedecl.ml[826,30324+24]..[826,30324+26])
                          pattern (typing/typedecl.ml[826,30324+28]..[826,30324+32])
                            Ppat_var "decl" (typing/typedecl.ml[826,30324+28]..[826,30324+32])
                        ]
                      expression (typing/typedecl.ml[826,30324+37]..[826,30324+71])
                        Pexp_tuple
                        [
                          expression (typing/typedecl.ml[826,30324+38]..[826,30324+40])
                            Pexp_ident "id" (typing/typedecl.ml[826,30324+38]..[826,30324+40])
                          expression (typing/typedecl.ml[826,30324+42]..[826,30324+70])
                            Pexp_apply
                            expression (typing/typedecl.ml[826,30324+42]..[826,30324+56])
                              Pexp_ident "name_recursion" (typing/typedecl.ml[826,30324+42]..[826,30324+56])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[826,30324+57]..[826,30324+62])
                                  Pexp_ident "sdecl" (typing/typedecl.ml[826,30324+57]..[826,30324+62])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[826,30324+63]..[826,30324+65])
                                  Pexp_ident "id" (typing/typedecl.ml[826,30324+63]..[826,30324+65])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[826,30324+66]..[826,30324+70])
                                  Pexp_ident "decl" (typing/typedecl.ml[826,30324+66]..[826,30324+70])
                            ]
                        ]
                <arg>
                Nolabel
                  expression (typing/typedecl.ml[827,30397+4]..[827,30397+10])
                    Pexp_ident "sdecls" (typing/typedecl.ml[827,30397+4]..[827,30397+10])
                <arg>
                Nolabel
                  expression (typing/typedecl.ml[827,30397+11]..[827,30397+16])
                    Pexp_ident "decls" (typing/typedecl.ml[827,30397+11]..[827,30397+16])
              ]
    ]
  structure_item (typing/typedecl.ml[831,30531+0]..[841,30912+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[831,30531+4]..[831,30531+24])
          Ppat_var "check_redefined_unit" (typing/typedecl.ml[831,30531+4]..[831,30531+24])
        expression (typing/typedecl.ml[831,30531+25]..[841,30912+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[831,30531+25]..[831,30531+57])
            Ppat_constraint
            pattern (typing/typedecl.ml[831,30531+26]..[831,30531+28])
              Ppat_var "td" (typing/typedecl.ml[831,30531+26]..[831,30531+28])
            core_type (typing/typedecl.ml[831,30531+30]..[831,30531+56])
              Ptyp_constr "Parsetree.type_declaration" (typing/typedecl.ml[831,30531+30]..[831,30531+56])
              []
          expression (typing/typedecl.ml[832,30591+2]..[841,30912+8])
            Pexp_open Fresh
            module_expr (typing/typedecl.ml[832,30591+11]..[832,30591+20])
              Pmod_ident "Parsetree" (typing/typedecl.ml[832,30591+11]..[832,30591+20])
            expression (typing/typedecl.ml[833,30615+2]..[841,30912+8])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typedecl.ml[833,30615+6]..[833,30615+25])
                    Ppat_var "is_unit_constructor" (typing/typedecl.ml[833,30615+6]..[833,30615+25])
                  expression (typing/typedecl.ml[833,30615+26]..[833,30615+53]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typedecl.ml[833,30615+26]..[833,30615+28])
                      Ppat_var "cd" (typing/typedecl.ml[833,30615+26]..[833,30615+28])
                    expression (typing/typedecl.ml[833,30615+31]..[833,30615+53])
                      Pexp_apply
                      expression (typing/typedecl.ml[833,30615+47]..[833,30615+48])
                        Pexp_ident "=" (typing/typedecl.ml[833,30615+47]..[833,30615+48])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[833,30615+31]..[833,30615+46])
                            Pexp_field
                            expression (typing/typedecl.ml[833,30615+31]..[833,30615+42])
                              Pexp_field
                              expression (typing/typedecl.ml[833,30615+31]..[833,30615+33])
                                Pexp_ident "cd" (typing/typedecl.ml[833,30615+31]..[833,30615+33])
                              "pcd_name" (typing/typedecl.ml[833,30615+34]..[833,30615+42])
                            "txt" (typing/typedecl.ml[833,30615+43]..[833,30615+46])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[833,30615+49]..[833,30615+53])
                            Pexp_constant PConst_string("()",(typing/typedecl.ml[833,30615+50]..[833,30615+52]),None)
                      ]
              ]
              expression (typing/typedecl.ml[834,30672+2]..[841,30912+8])
                Pexp_match
                expression (typing/typedecl.ml[834,30672+8]..[834,30672+10])
                  Pexp_ident "td" (typing/typedecl.ml[834,30672+8]..[834,30672+10])
                [
                  <case>
                    pattern (typing/typedecl.ml[835,30688+4]..[837,30752+41])
                      Ppat_record Closed
                      [
                        "ptype_name" (typing/typedecl.ml[835,30688+6]..[835,30688+16])
                          pattern (typing/typedecl.ml[835,30688+19]..[835,30688+33])
                            Ppat_record Closed
                            [
                              "txt" (typing/typedecl.ml[835,30688+21]..[835,30688+24])
                                pattern (typing/typedecl.ml[835,30688+27]..[835,30688+31])
                                  Ppat_var "name" (typing/typedecl.ml[835,30688+27]..[835,30688+31])
                            ]
                        "ptype_manifest" (typing/typedecl.ml[836,30723+6]..[836,30723+20])
                          pattern (typing/typedecl.ml[836,30723+23]..[836,30723+27])
                            Ppat_construct "None" (typing/typedecl.ml[836,30723+23]..[836,30723+27])
                            None
                        "ptype_kind" (typing/typedecl.ml[837,30752+6]..[837,30752+16])
                          pattern (typing/typedecl.ml[837,30752+19]..[837,30752+39])
                            Ppat_construct "Ptype_variant" (typing/typedecl.ml[837,30752+19]..[837,30752+32])
                            Some
                              []
                              pattern (typing/typedecl.ml[837,30752+33]..[837,30752+39])
                                Ppat_construct "::" (typing/typedecl.ml[837,30752+35]..[837,30752+39]) ghost
                                Some
                                  []
                                  pattern (typing/typedecl.ml[837,30752+35]..[837,30752+39]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (typing/typedecl.ml[837,30752+35]..[837,30752+37])
                                        Ppat_var "cd" (typing/typedecl.ml[837,30752+35]..[837,30752+37])
                                      pattern (typing/typedecl.ml[837,30752+38]..[837,30752+39]) ghost
                                        Ppat_construct "[]" (typing/typedecl.ml[837,30752+38]..[837,30752+39]) ghost
                                        None
                                    ]
                      ]
                    <when>
                      expression (typing/typedecl.ml[838,30794+9]..[838,30794+31])
                        Pexp_apply
                        expression (typing/typedecl.ml[838,30794+9]..[838,30794+28])
                          Pexp_ident "is_unit_constructor" (typing/typedecl.ml[838,30794+9]..[838,30794+28])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[838,30794+29]..[838,30794+31])
                              Pexp_ident "cd" (typing/typedecl.ml[838,30794+29]..[838,30794+31])
                        ]
                    expression (typing/typedecl.ml[839,30829+6]..[839,30829+73])
                      Pexp_apply
                      expression (typing/typedecl.ml[839,30829+6]..[839,30829+28])
                        Pexp_ident "Location.prerr_warning" (typing/typedecl.ml[839,30829+6]..[839,30829+28])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[839,30829+29]..[839,30829+41])
                            Pexp_field
                            expression (typing/typedecl.ml[839,30829+29]..[839,30829+31])
                              Pexp_ident "td" (typing/typedecl.ml[839,30829+29]..[839,30829+31])
                            "ptype_loc" (typing/typedecl.ml[839,30829+32]..[839,30829+41])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[839,30829+42]..[839,30829+73])
                            Pexp_construct "Warnings.Redefining_unit" (typing/typedecl.ml[839,30829+43]..[839,30829+67])
                            Some
                              expression (typing/typedecl.ml[839,30829+68]..[839,30829+72])
                                Pexp_ident "name" (typing/typedecl.ml[839,30829+68]..[839,30829+72])
                      ]
                  <case>
                    pattern (typing/typedecl.ml[840,30903+4]..[840,30903+5])
                      Ppat_any
                    expression (typing/typedecl.ml[841,30912+6]..[841,30912+8])
                      Pexp_construct "()" (typing/typedecl.ml[841,30912+6]..[841,30912+8])
                      None
                ]
    ]
  structure_item (typing/typedecl.ml[843,30922+0]..[846,31034+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[843,30922+4]..[843,30922+20])
          Ppat_var "add_types_to_env" (typing/typedecl.ml[843,30922+4]..[843,30922+20])
        expression (typing/typedecl.ml[843,30922+21]..[846,31034+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[843,30922+21]..[843,30922+26])
            Ppat_var "decls" (typing/typedecl.ml[843,30922+21]..[843,30922+26])
          expression (typing/typedecl.ml[843,30922+27]..[846,31034+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[843,30922+27]..[843,30922+30])
              Ppat_var "env" (typing/typedecl.ml[843,30922+27]..[843,30922+30])
            expression (typing/typedecl.ml[844,30955+2]..[846,31034+13])
              Pexp_apply
              expression (typing/typedecl.ml[844,30955+2]..[844,30955+17])
                Pexp_ident "List.fold_right" (typing/typedecl.ml[844,30955+2]..[844,30955+17])
              [
                <arg>
                Nolabel
                  expression (typing/typedecl.ml[845,30973+4]..[845,30973+60])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typedecl.ml[845,30973+9]..[845,30973+19])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[845,30973+10]..[845,30973+12])
                          Ppat_var "id" (typing/typedecl.ml[845,30973+10]..[845,30973+12])
                        pattern (typing/typedecl.ml[845,30973+14]..[845,30973+18])
                          Ppat_var "decl" (typing/typedecl.ml[845,30973+14]..[845,30973+18])
                      ]
                    expression (typing/typedecl.ml[845,30973+20]..[845,30973+59]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typedecl.ml[845,30973+20]..[845,30973+23])
                        Ppat_var "env" (typing/typedecl.ml[845,30973+20]..[845,30973+23])
                      expression (typing/typedecl.ml[845,30973+27]..[845,30973+59])
                        Pexp_apply
                        expression (typing/typedecl.ml[845,30973+27]..[845,30973+35])
                          Pexp_ident "add_type" (typing/typedecl.ml[845,30973+27]..[845,30973+35])
                        [
                          <arg>
                          Labelled "check"
                            expression (typing/typedecl.ml[845,30973+43]..[845,30973+47])
                              Pexp_construct "true" (typing/typedecl.ml[845,30973+43]..[845,30973+47])
                              None
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[845,30973+48]..[845,30973+50])
                              Pexp_ident "id" (typing/typedecl.ml[845,30973+48]..[845,30973+50])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[845,30973+51]..[845,30973+55])
                              Pexp_ident "decl" (typing/typedecl.ml[845,30973+51]..[845,30973+55])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[845,30973+56]..[845,30973+59])
                              Pexp_ident "env" (typing/typedecl.ml[845,30973+56]..[845,30973+59])
                        ]
                <arg>
                Nolabel
                  expression (typing/typedecl.ml[846,31034+4]..[846,31034+9])
                    Pexp_ident "decls" (typing/typedecl.ml[846,31034+4]..[846,31034+9])
                <arg>
                Nolabel
                  expression (typing/typedecl.ml[846,31034+10]..[846,31034+13])
                    Pexp_ident "env" (typing/typedecl.ml[846,31034+10]..[846,31034+13])
              ]
    ]
  structure_item (typing/typedecl.ml[849,31119+0]..[985,35917+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[849,31119+4]..[849,31119+20])
          Ppat_var "transl_type_decl" (typing/typedecl.ml[849,31119+4]..[849,31119+20])
        expression (typing/typedecl.ml[849,31119+21]..[985,35917+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[849,31119+21]..[849,31119+24])
            Ppat_var "env" (typing/typedecl.ml[849,31119+21]..[849,31119+24])
          expression (typing/typedecl.ml[849,31119+25]..[985,35917+26]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[849,31119+25]..[849,31119+33])
              Ppat_var "rec_flag" (typing/typedecl.ml[849,31119+25]..[849,31119+33])
            expression (typing/typedecl.ml[849,31119+34]..[985,35917+26]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[849,31119+34]..[849,31119+44])
                Ppat_var "sdecl_list" (typing/typedecl.ml[849,31119+34]..[849,31119+44])
              expression (typing/typedecl.ml[850,31166+2]..[985,35917+26])
                Pexp_sequence
                expression (typing/typedecl.ml[850,31166+2]..[850,31166+43])
                  Pexp_apply
                  expression (typing/typedecl.ml[850,31166+2]..[850,31166+11])
                    Pexp_ident "List.iter" (typing/typedecl.ml[850,31166+2]..[850,31166+11])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[850,31166+12]..[850,31166+32])
                        Pexp_ident "check_redefined_unit" (typing/typedecl.ml[850,31166+12]..[850,31166+32])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[850,31166+33]..[850,31166+43])
                        Pexp_ident "sdecl_list" (typing/typedecl.ml[850,31166+33]..[850,31166+43])
                  ]
                expression (typing/typedecl.ml[852,31250+2]..[985,35917+26])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typedecl.ml[852,31250+6]..[852,31250+17])
                        Ppat_var "fixed_types" (typing/typedecl.ml[852,31250+6]..[852,31250+17])
                      expression (typing/typedecl.ml[852,31250+20]..[852,31250+56])
                        Pexp_apply
                        expression (typing/typedecl.ml[852,31250+20]..[852,31250+31])
                          Pexp_ident "List.filter" (typing/typedecl.ml[852,31250+20]..[852,31250+31])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[852,31250+32]..[852,31250+45])
                              Pexp_ident "is_fixed_type" (typing/typedecl.ml[852,31250+32]..[852,31250+45])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[852,31250+46]..[852,31250+56])
                              Pexp_ident "sdecl_list" (typing/typedecl.ml[852,31250+46]..[852,31250+56])
                        ]
                  ]
                  expression (typing/typedecl.ml[853,31310+2]..[985,35917+26])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typedecl.ml[853,31310+6]..[853,31310+16])
                          Ppat_var "sdecl_list" (typing/typedecl.ml[853,31310+6]..[853,31310+16])
                        expression (typing/typedecl.ml[854,31329+4]..[866,31795+16])
                          Pexp_apply
                          expression (typing/typedecl.ml[866,31795+4]..[866,31795+5])
                            Pexp_ident "@" (typing/typedecl.ml[866,31795+4]..[866,31795+5])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[854,31329+4]..[865,31777+17])
                                Pexp_apply
                                expression (typing/typedecl.ml[854,31329+4]..[854,31329+12])
                                  Pexp_ident "List.map" (typing/typedecl.ml[854,31329+4]..[854,31329+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[855,31342+6]..[864,31713+63])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/typedecl.ml[855,31342+11]..[855,31342+16])
                                        Ppat_var "sdecl" (typing/typedecl.ml[855,31342+11]..[855,31342+16])
                                      expression (typing/typedecl.ml[856,31362+9]..[864,31713+62])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typedecl.ml[856,31362+13]..[856,31362+23])
                                              Ppat_var "ptype_name" (typing/typedecl.ml[856,31362+13]..[856,31362+23])
                                            expression (typing/typedecl.ml[857,31388+11]..[858,31468+51])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typedecl.ml[857,31388+15]..[857,31388+18])
                                                    Ppat_var "loc" (typing/typedecl.ml[857,31388+15]..[857,31388+18])
                                                  expression (typing/typedecl.ml[857,31388+21]..[857,31388+76])
                                                    Pexp_record
                                                    [
                                                      "Location.loc_ghost" (typing/typedecl.ml[857,31388+49]..[857,31388+67])
                                                        expression (typing/typedecl.ml[857,31388+70]..[857,31388+74])
                                                          Pexp_construct "true" (typing/typedecl.ml[857,31388+70]..[857,31388+74])
                                                          None
                                                    ]
                                                    Some
                                                      expression (typing/typedecl.ml[857,31388+23]..[857,31388+43])
                                                        Pexp_field
                                                        expression (typing/typedecl.ml[857,31388+23]..[857,31388+39])
                                                          Pexp_field
                                                          expression (typing/typedecl.ml[857,31388+23]..[857,31388+28])
                                                            Pexp_ident "sdecl" (typing/typedecl.ml[857,31388+23]..[857,31388+28])
                                                          "ptype_name" (typing/typedecl.ml[857,31388+29]..[857,31388+39])
                                                        "loc" (typing/typedecl.ml[857,31388+40]..[857,31388+43])
                                              ]
                                              expression (typing/typedecl.ml[858,31468+11]..[858,31468+51])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[858,31468+11]..[858,31468+16])
                                                  Pexp_ident "mkloc" (typing/typedecl.ml[858,31468+11]..[858,31468+16])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[858,31468+17]..[858,31468+47])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[858,31468+39]..[858,31468+40])
                                                        Pexp_ident "^" (typing/typedecl.ml[858,31468+39]..[858,31468+40])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[858,31468+18]..[858,31468+38])
                                                            Pexp_field
                                                            expression (typing/typedecl.ml[858,31468+18]..[858,31468+34])
                                                              Pexp_field
                                                              expression (typing/typedecl.ml[858,31468+18]..[858,31468+23])
                                                                Pexp_ident "sdecl" (typing/typedecl.ml[858,31468+18]..[858,31468+23])
                                                              "ptype_name" (typing/typedecl.ml[858,31468+24]..[858,31468+34])
                                                            "txt" (typing/typedecl.ml[858,31468+35]..[858,31468+38])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[858,31468+40]..[858,31468+46])
                                                            Pexp_constant PConst_string("#row",(typing/typedecl.ml[858,31468+41]..[858,31468+45]),None)
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[858,31468+48]..[858,31468+51])
                                                      Pexp_ident "loc" (typing/typedecl.ml[858,31468+48]..[858,31468+51])
                                                ]
                                        ]
                                        expression (typing/typedecl.ml[860,31532+9]..[864,31713+62])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typedecl.ml[860,31532+13]..[860,31532+23])
                                                Ppat_var "ptype_kind" (typing/typedecl.ml[860,31532+13]..[860,31532+23])
                                              expression (typing/typedecl.ml[860,31532+26]..[860,31532+40])
                                                Pexp_construct "Ptype_abstract" (typing/typedecl.ml[860,31532+26]..[860,31532+40])
                                                None
                                          ]
                                          expression (typing/typedecl.ml[861,31576+9]..[864,31713+62])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typedecl.ml[861,31576+13]..[861,31576+27])
                                                  Ppat_var "ptype_manifest" (typing/typedecl.ml[861,31576+13]..[861,31576+27])
                                                expression (typing/typedecl.ml[861,31576+30]..[861,31576+34])
                                                  Pexp_construct "None" (typing/typedecl.ml[861,31576+30]..[861,31576+34])
                                                  None
                                            ]
                                            expression (typing/typedecl.ml[862,31614+9]..[864,31713+62])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typedecl.ml[862,31614+13]..[862,31614+22])
                                                    Ppat_var "ptype_loc" (typing/typedecl.ml[862,31614+13]..[862,31614+22])
                                                  expression (typing/typedecl.ml[862,31614+25]..[862,31614+75])
                                                    Pexp_record
                                                    [
                                                      "Location.loc_ghost" (typing/typedecl.ml[862,31614+48]..[862,31614+66])
                                                        expression (typing/typedecl.ml[862,31614+69]..[862,31614+73])
                                                          Pexp_construct "true" (typing/typedecl.ml[862,31614+69]..[862,31614+73])
                                                          None
                                                    ]
                                                    Some
                                                      expression (typing/typedecl.ml[862,31614+27]..[862,31614+42])
                                                        Pexp_field
                                                        expression (typing/typedecl.ml[862,31614+27]..[862,31614+32])
                                                          Pexp_ident "sdecl" (typing/typedecl.ml[862,31614+27]..[862,31614+32])
                                                        "ptype_loc" (typing/typedecl.ml[862,31614+33]..[862,31614+42])
                                              ]
                                              expression (typing/typedecl.ml[863,31693+8]..[864,31713+62])
                                                Pexp_record
                                                [
                                                  "ptype_name" (typing/typedecl.ml[864,31713+11]..[864,31713+21]) ghost
                                                    expression (typing/typedecl.ml[864,31713+11]..[864,31713+21])
                                                      Pexp_ident "ptype_name" (typing/typedecl.ml[864,31713+11]..[864,31713+21])
                                                  "ptype_kind" (typing/typedecl.ml[864,31713+23]..[864,31713+33]) ghost
                                                    expression (typing/typedecl.ml[864,31713+23]..[864,31713+33])
                                                      Pexp_ident "ptype_kind" (typing/typedecl.ml[864,31713+23]..[864,31713+33])
                                                  "ptype_manifest" (typing/typedecl.ml[864,31713+35]..[864,31713+49]) ghost
                                                    expression (typing/typedecl.ml[864,31713+35]..[864,31713+49])
                                                      Pexp_ident "ptype_manifest" (typing/typedecl.ml[864,31713+35]..[864,31713+49])
                                                  "ptype_loc" (typing/typedecl.ml[864,31713+51]..[864,31713+60]) ghost
                                                    expression (typing/typedecl.ml[864,31713+51]..[864,31713+60])
                                                      Pexp_ident "ptype_loc" (typing/typedecl.ml[864,31713+51]..[864,31713+60])
                                                ]
                                                Some
                                                  expression (typing/typedecl.ml[863,31693+9]..[863,31693+14])
                                                    Pexp_ident "sdecl" (typing/typedecl.ml[863,31693+9]..[863,31693+14])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[865,31777+6]..[865,31777+17])
                                      Pexp_ident "fixed_types" (typing/typedecl.ml[865,31777+6]..[865,31777+17])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[866,31795+6]..[866,31795+16])
                                Pexp_ident "sdecl_list" (typing/typedecl.ml[866,31795+6]..[866,31795+16])
                          ]
                    ]
                    expression (typing/typedecl.ml[870,31846+2]..[985,35917+26])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typedecl.ml[870,31846+6]..[870,31846+11])
                            Ppat_var "scope" (typing/typedecl.ml[870,31846+6]..[870,31846+11])
                          expression (typing/typedecl.ml[870,31846+14]..[870,31846+35])
                            Pexp_apply
                            expression (typing/typedecl.ml[870,31846+14]..[870,31846+32])
                              Pexp_ident "Ctype.create_scope" (typing/typedecl.ml[870,31846+14]..[870,31846+32])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[870,31846+33]..[870,31846+35])
                                  Pexp_construct "()" (typing/typedecl.ml[870,31846+33]..[870,31846+35])
                                  None
                            ]
                      ]
                      expression (typing/typedecl.ml[871,31885+2]..[985,35917+26])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typedecl.ml[871,31885+6]..[871,31885+14])
                              Ppat_var "ids_list" (typing/typedecl.ml[871,31885+6]..[871,31885+14])
                            expression (typing/typedecl.ml[872,31902+4]..[875,32034+16])
                              Pexp_apply
                              expression (typing/typedecl.ml[872,31902+4]..[872,31902+12])
                                Pexp_ident "List.map" (typing/typedecl.ml[872,31902+4]..[872,31902+12])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[872,31902+13]..[875,32034+5])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typedecl.ml[872,31902+18]..[872,31902+23])
                                      Ppat_var "sdecl" (typing/typedecl.ml[872,31902+18]..[872,31902+23])
                                    expression (typing/typedecl.ml[873,31929+6]..[874,31984+49])
                                      Pexp_tuple
                                      [
                                        expression (typing/typedecl.ml[873,31929+6]..[873,31929+53])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[873,31929+6]..[873,31929+25])
                                            Pexp_ident "Ident.create_scoped" (typing/typedecl.ml[873,31929+6]..[873,31929+25])
                                          [
                                            <arg>
                                            Labelled "scope"
                                              expression (typing/typedecl.ml[873,31929+27]..[873,31929+32])
                                                Pexp_ident "scope" (typing/typedecl.ml[873,31929+27]..[873,31929+32])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[873,31929+33]..[873,31929+53])
                                                Pexp_field
                                                expression (typing/typedecl.ml[873,31929+33]..[873,31929+49])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[873,31929+33]..[873,31929+38])
                                                    Pexp_ident "sdecl" (typing/typedecl.ml[873,31929+33]..[873,31929+38])
                                                  "ptype_name" (typing/typedecl.ml[873,31929+39]..[873,31929+49])
                                                "txt" (typing/typedecl.ml[873,31929+50]..[873,31929+53])
                                          ]
                                        expression (typing/typedecl.ml[874,31984+6]..[874,31984+49])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[874,31984+6]..[874,31984+12])
                                            Pexp_ident "Uid.mk" (typing/typedecl.ml[874,31984+6]..[874,31984+12])
                                          [
                                            <arg>
                                            Labelled "current_unit"
                                              expression (typing/typedecl.ml[874,31984+27]..[874,31984+49])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[874,31984+28]..[874,31984+45])
                                                  Pexp_ident "Env.get_unit_name" (typing/typedecl.ml[874,31984+28]..[874,31984+45])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[874,31984+46]..[874,31984+48])
                                                      Pexp_construct "()" (typing/typedecl.ml[874,31984+46]..[874,31984+48])
                                                      None
                                                ]
                                          ]
                                      ]
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[875,32034+6]..[875,32034+16])
                                    Pexp_ident "sdecl_list" (typing/typedecl.ml[875,32034+6]..[875,32034+16])
                              ]
                        ]
                        expression (typing/typedecl.ml[877,32056+2]..[985,35917+26])
                          Pexp_sequence
                          expression (typing/typedecl.ml[877,32056+2]..[877,32056+19])
                            Pexp_apply
                            expression (typing/typedecl.ml[877,32056+2]..[877,32056+17])
                              Pexp_ident "Ctype.begin_def" (typing/typedecl.ml[877,32056+2]..[877,32056+17])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[877,32056+17]..[877,32056+19])
                                  Pexp_construct "()" (typing/typedecl.ml[877,32056+17]..[877,32056+19])
                                  None
                            ]
                          expression (typing/typedecl.ml[879,32098+2]..[985,35917+26])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typedecl.ml[879,32098+6]..[879,32098+14])
                                  Ppat_var "temp_env" (typing/typedecl.ml[879,32098+6]..[879,32098+14])
                                expression (typing/typedecl.ml[880,32115+4]..[880,32115+65])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[880,32115+4]..[880,32115+19])
                                    Pexp_ident "List.fold_left2" (typing/typedecl.ml[880,32115+4]..[880,32115+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[880,32115+20]..[880,32115+41])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[880,32115+21]..[880,32115+31])
                                          Pexp_ident "enter_type" (typing/typedecl.ml[880,32115+21]..[880,32115+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[880,32115+32]..[880,32115+40])
                                              Pexp_ident "rec_flag" (typing/typedecl.ml[880,32115+32]..[880,32115+40])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[880,32115+42]..[880,32115+45])
                                        Pexp_ident "env" (typing/typedecl.ml[880,32115+42]..[880,32115+45])
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[880,32115+46]..[880,32115+56])
                                        Pexp_ident "sdecl_list" (typing/typedecl.ml[880,32115+46]..[880,32115+56])
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[880,32115+57]..[880,32115+65])
                                        Pexp_ident "ids_list" (typing/typedecl.ml[880,32115+57]..[880,32115+65])
                                  ]
                            ]
                            expression (typing/typedecl.ml[882,32220+2]..[985,35917+26])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typedecl.ml[882,32220+6]..[882,32220+18])
                                    Ppat_var "current_slot" (typing/typedecl.ml[882,32220+6]..[882,32220+18])
                                  expression (typing/typedecl.ml[882,32220+21]..[882,32220+29])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[882,32220+21]..[882,32220+24])
                                      Pexp_ident "ref" (typing/typedecl.ml[882,32220+21]..[882,32220+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[882,32220+25]..[882,32220+29])
                                          Pexp_construct "None" (typing/typedecl.ml[882,32220+25]..[882,32220+29])
                                          None
                                    ]
                              ]
                              expression (typing/typedecl.ml[883,32253+2]..[985,35917+26])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typedecl.ml[883,32253+6]..[883,32253+17])
                                      Ppat_var "warn_unused" (typing/typedecl.ml[883,32253+6]..[883,32253+17])
                                    expression (typing/typedecl.ml[883,32253+20]..[883,32253+76])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[883,32253+20]..[883,32253+38])
                                        Pexp_ident "Warnings.is_active" (typing/typedecl.ml[883,32253+20]..[883,32253+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[883,32253+39]..[883,32253+76])
                                            Pexp_construct "Warnings.Unused_type_declaration" (typing/typedecl.ml[883,32253+40]..[883,32253+72])
                                            Some
                                              expression (typing/typedecl.ml[883,32253+73]..[883,32253+75])
                                                Pexp_constant PConst_string("",(typing/typedecl.ml[883,32253+74]..[883,32253+74]),None)
                                      ]
                                ]
                                expression (typing/typedecl.ml[884,32333+2]..[985,35917+26])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typedecl.ml[884,32333+6]..[884,32333+15])
                                        Ppat_var "ids_slots" (typing/typedecl.ml[884,32333+6]..[884,32333+15])
                                      expression (typing/typedecl.ml[884,32333+16]..[902,33055+17]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/typedecl.ml[884,32333+16]..[884,32333+33])
                                          Ppat_alias "ids" (typing/typedecl.ml[884,32333+29]..[884,32333+32])
                                          pattern (typing/typedecl.ml[884,32333+17]..[884,32333+25])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typedecl.ml[884,32333+17]..[884,32333+19])
                                                Ppat_var "id" (typing/typedecl.ml[884,32333+17]..[884,32333+19])
                                              pattern (typing/typedecl.ml[884,32333+21]..[884,32333+25])
                                                Ppat_var "_uid" (typing/typedecl.ml[884,32333+21]..[884,32333+25])
                                            ]
                                        expression (typing/typedecl.ml[885,32369+4]..[902,33055+17])
                                          Pexp_match
                                          expression (typing/typedecl.ml[885,32369+10]..[885,32369+18])
                                            Pexp_ident "rec_flag" (typing/typedecl.ml[885,32369+10]..[885,32369+18])
                                          [
                                            <case>
                                              pattern (typing/typedecl.ml[886,32393+6]..[886,32393+24])
                                                Ppat_construct "Asttypes.Recursive" (typing/typedecl.ml[886,32393+6]..[886,32393+24])
                                                None
                                              <when>
                                                expression (typing/typedecl.ml[886,32393+30]..[886,32393+41])
                                                  Pexp_ident "warn_unused" (typing/typedecl.ml[886,32393+30]..[886,32393+41])
                                              expression (typing/typedecl.ml[889,32586+8]..[900,32980+22])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typedecl.ml[889,32586+12]..[889,32586+16])
                                                      Ppat_var "slot" (typing/typedecl.ml[889,32586+12]..[889,32586+16])
                                                    expression (typing/typedecl.ml[889,32586+19]..[889,32586+25])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[889,32586+19]..[889,32586+22])
                                                        Pexp_ident "ref" (typing/typedecl.ml[889,32586+19]..[889,32586+22])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[889,32586+23]..[889,32586+25])
                                                            Pexp_construct "[]" (typing/typedecl.ml[889,32586+23]..[889,32586+25])
                                                            None
                                                      ]
                                                ]
                                                expression (typing/typedecl.ml[890,32615+8]..[900,32980+22])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typedecl.ml[890,32615+12]..[890,32615+14])
                                                        Ppat_var "td" (typing/typedecl.ml[890,32615+12]..[890,32615+14])
                                                      expression (typing/typedecl.ml[890,32615+17]..[890,32615+56])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[890,32615+17]..[890,32615+30])
                                                          Pexp_ident "Env.find_type" (typing/typedecl.ml[890,32615+17]..[890,32615+30])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[890,32615+31]..[890,32615+47])
                                                              Pexp_construct "Path.Pident" (typing/typedecl.ml[890,32615+32]..[890,32615+43])
                                                              Some
                                                                expression (typing/typedecl.ml[890,32615+44]..[890,32615+46])
                                                                  Pexp_ident "id" (typing/typedecl.ml[890,32615+44]..[890,32615+46])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[890,32615+48]..[890,32615+56])
                                                              Pexp_ident "temp_env" (typing/typedecl.ml[890,32615+48]..[890,32615+56])
                                                        ]
                                                  ]
                                                  expression (typing/typedecl.ml[891,32675+8]..[900,32980+22])
                                                    Pexp_sequence
                                                    expression (typing/typedecl.ml[891,32675+8]..[899,32967+11])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[891,32675+8]..[891,32675+34])
                                                        Pexp_ident "Env.set_type_used_callback" (typing/typedecl.ml[891,32675+8]..[891,32675+34])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[892,32710+10]..[892,32710+12])
                                                            Pexp_ident "td" (typing/typedecl.ml[892,32710+10]..[892,32710+12])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[893,32723+10]..[899,32967+11])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/typedecl.ml[893,32723+15]..[893,32723+27])
                                                              Ppat_var "old_callback" (typing/typedecl.ml[893,32723+15]..[893,32723+27])
                                                            expression (typing/typedecl.ml[894,32754+13]..[898,32934+32])
                                                              Pexp_match
                                                              expression (typing/typedecl.ml[894,32754+19]..[894,32754+32])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[894,32754+19]..[894,32754+20])
                                                                  Pexp_ident "!" (typing/typedecl.ml[894,32754+19]..[894,32754+20])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[894,32754+20]..[894,32754+32])
                                                                      Pexp_ident "current_slot" (typing/typedecl.ml[894,32754+20]..[894,32754+32])
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (typing/typedecl.ml[895,32792+15]..[895,32792+24])
                                                                    Ppat_construct "Some" (typing/typedecl.ml[895,32792+15]..[895,32792+19])
                                                                    Some
                                                                      []
                                                                      pattern (typing/typedecl.ml[895,32792+20]..[895,32792+24])
Ppat_var "slot" (typing/typedecl.ml[895,32792+20]..[895,32792+24])
                                                                  expression (typing/typedecl.ml[895,32792+28]..[895,32792+56])
                                                                    Pexp_apply
                                                                    expression (typing/typedecl.ml[895,32792+33]..[895,32792+35])
                                                                      Pexp_ident ":=" (typing/typedecl.ml[895,32792+33]..[895,32792+35])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[895,32792+28]..[895,32792+32])
  Pexp_ident "slot" (typing/typedecl.ml[895,32792+28]..[895,32792+32])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[895,32792+36]..[895,32792+56])
  Pexp_construct "::" (typing/typedecl.ml[895,32792+48]..[895,32792+50])
  Some
    expression (typing/typedecl.ml[895,32792+36]..[895,32792+56]) ghost
      Pexp_tuple
      [
        expression (typing/typedecl.ml[895,32792+36]..[895,32792+47])
          Pexp_field
          expression (typing/typedecl.ml[895,32792+36]..[895,32792+38])
            Pexp_ident "td" (typing/typedecl.ml[895,32792+36]..[895,32792+38])
          "type_uid" (typing/typedecl.ml[895,32792+39]..[895,32792+47])
        expression (typing/typedecl.ml[895,32792+51]..[895,32792+56])
          Pexp_apply
          expression (typing/typedecl.ml[895,32792+51]..[895,32792+52])
            Pexp_ident "!" (typing/typedecl.ml[895,32792+51]..[895,32792+52])
          [
            <arg>
            Nolabel
              expression (typing/typedecl.ml[895,32792+52]..[895,32792+56])
                Pexp_ident "slot" (typing/typedecl.ml[895,32792+52]..[895,32792+56])
          ]
      ]
                                                                    ]
                                                                <case>
                                                                  pattern (typing/typedecl.ml[896,32849+15]..[896,32849+19])
                                                                    Ppat_construct "None" (typing/typedecl.ml[896,32849+15]..[896,32849+19])
                                                                    None
                                                                  expression (typing/typedecl.ml[897,32872+17]..[898,32934+32])
                                                                    Pexp_sequence
                                                                    expression (typing/typedecl.ml[897,32872+17]..[897,32872+60])
                                                                      Pexp_apply
                                                                      expression (typing/typedecl.ml[897,32872+17]..[897,32872+26])
Pexp_ident "List.iter" (typing/typedecl.ml[897,32872+17]..[897,32872+26])
                                                                      [
<arg>
Nolabel
  expression (typing/typedecl.ml[897,32872+27]..[897,32872+45])
    Pexp_ident "Env.mark_type_used" (typing/typedecl.ml[897,32872+27]..[897,32872+45])
<arg>
Nolabel
  expression (typing/typedecl.ml[897,32872+46]..[897,32872+60])
    Pexp_apply
    expression (typing/typedecl.ml[897,32872+47]..[897,32872+54])
      Pexp_ident "get_ref" (typing/typedecl.ml[897,32872+47]..[897,32872+54])
    [
      <arg>
      Nolabel
        expression (typing/typedecl.ml[897,32872+55]..[897,32872+59])
          Pexp_ident "slot" (typing/typedecl.ml[897,32872+55]..[897,32872+59])
    ]
                                                                      ]
                                                                    expression (typing/typedecl.ml[898,32934+17]..[898,32934+32])
                                                                      Pexp_apply
                                                                      expression (typing/typedecl.ml[898,32934+17]..[898,32934+29])
Pexp_ident "old_callback" (typing/typedecl.ml[898,32934+17]..[898,32934+29])
                                                                      [
<arg>
Nolabel
  expression (typing/typedecl.ml[898,32934+30]..[898,32934+32])
    Pexp_construct "()" (typing/typedecl.ml[898,32934+30]..[898,32934+32])
    None
                                                                      ]
                                                              ]
                                                      ]
                                                    expression (typing/typedecl.ml[900,32980+8]..[900,32980+22])
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typedecl.ml[900,32980+8]..[900,32980+11])
                                                          Pexp_ident "ids" (typing/typedecl.ml[900,32980+8]..[900,32980+11])
                                                        expression (typing/typedecl.ml[900,32980+13]..[900,32980+22])
                                                          Pexp_construct "Some" (typing/typedecl.ml[900,32980+13]..[900,32980+17])
                                                          Some
                                                            expression (typing/typedecl.ml[900,32980+18]..[900,32980+22])
                                                              Pexp_ident "slot" (typing/typedecl.ml[900,32980+18]..[900,32980+22])
                                                      ]
                                            <case>
                                              pattern (typing/typedecl.ml[901,33003+6]..[901,33003+48])
                                                Ppat_or
                                                pattern (typing/typedecl.ml[901,33003+6]..[901,33003+24])
                                                  Ppat_construct "Asttypes.Recursive" (typing/typedecl.ml[901,33003+6]..[901,33003+24])
                                                  None
                                                pattern (typing/typedecl.ml[901,33003+27]..[901,33003+48])
                                                  Ppat_construct "Asttypes.Nonrecursive" (typing/typedecl.ml[901,33003+27]..[901,33003+48])
                                                  None
                                              expression (typing/typedecl.ml[902,33055+8]..[902,33055+17])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typedecl.ml[902,33055+8]..[902,33055+11])
                                                    Pexp_ident "ids" (typing/typedecl.ml[902,33055+8]..[902,33055+11])
                                                  expression (typing/typedecl.ml[902,33055+13]..[902,33055+17])
                                                    Pexp_construct "None" (typing/typedecl.ml[902,33055+13]..[902,33055+17])
                                                    None
                                                ]
                                          ]
                                  ]
                                  expression (typing/typedecl.ml[904,33078+2]..[985,35917+26])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typedecl.ml[904,33078+6]..[904,33078+24])
                                          Ppat_var "transl_declaration" (typing/typedecl.ml[904,33078+6]..[904,33078+24])
                                        expression (typing/typedecl.ml[904,33078+25]..[908,33224+59]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/typedecl.ml[904,33078+25]..[904,33078+35])
                                            Ppat_var "name_sdecl" (typing/typedecl.ml[904,33078+25]..[904,33078+35])
                                          expression (typing/typedecl.ml[904,33078+36]..[908,33224+59]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/typedecl.ml[904,33078+36]..[904,33078+46])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typedecl.ml[904,33078+37]..[904,33078+39])
                                                  Ppat_var "id" (typing/typedecl.ml[904,33078+37]..[904,33078+39])
                                                pattern (typing/typedecl.ml[904,33078+41]..[904,33078+45])
                                                  Ppat_var "slot" (typing/typedecl.ml[904,33078+41]..[904,33078+45])
                                              ]
                                            expression (typing/typedecl.ml[905,33127+4]..[908,33224+59])
                                              Pexp_sequence
                                              expression (typing/typedecl.ml[905,33127+4]..[905,33127+24])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[905,33127+17]..[905,33127+19])
                                                  Pexp_ident ":=" (typing/typedecl.ml[905,33127+17]..[905,33127+19])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[905,33127+4]..[905,33127+16])
                                                      Pexp_ident "current_slot" (typing/typedecl.ml[905,33127+4]..[905,33127+16])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[905,33127+20]..[905,33127+24])
                                                      Pexp_ident "slot" (typing/typedecl.ml[905,33127+20]..[905,33127+24])
                                                ]
                                              expression (typing/typedecl.ml[906,33153+4]..[908,33224+59])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[906,33153+4]..[906,33153+36])
                                                  Pexp_ident "Builtin_attributes.warning_scope" (typing/typedecl.ml[906,33153+4]..[906,33153+36])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[907,33190+6]..[907,33190+33])
                                                      Pexp_field
                                                      expression (typing/typedecl.ml[907,33190+6]..[907,33190+16])
                                                        Pexp_ident "name_sdecl" (typing/typedecl.ml[907,33190+6]..[907,33190+16])
                                                      "ptype_attributes" (typing/typedecl.ml[907,33190+17]..[907,33190+33])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[908,33224+6]..[908,33224+59])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (typing/typedecl.ml[908,33224+11]..[908,33224+13])
                                                        Ppat_construct "()" (typing/typedecl.ml[908,33224+11]..[908,33224+13])
                                                        None
                                                      expression (typing/typedecl.ml[908,33224+17]..[908,33224+58])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[908,33224+17]..[908,33224+35])
                                                          Pexp_ident "transl_declaration" (typing/typedecl.ml[908,33224+17]..[908,33224+35])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[908,33224+36]..[908,33224+44])
                                                              Pexp_ident "temp_env" (typing/typedecl.ml[908,33224+36]..[908,33224+44])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[908,33224+45]..[908,33224+55])
                                                              Pexp_ident "name_sdecl" (typing/typedecl.ml[908,33224+45]..[908,33224+55])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[908,33224+56]..[908,33224+58])
                                                              Pexp_ident "id" (typing/typedecl.ml[908,33224+56]..[908,33224+58])
                                                        ]
                                                ]
                                    ]
                                    expression (typing/typedecl.ml[910,33289+2]..[985,35917+26])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typedecl.ml[910,33289+6]..[910,33289+12])
                                            Ppat_var "tdecls" (typing/typedecl.ml[910,33289+6]..[910,33289+12])
                                          expression (typing/typedecl.ml[911,33304+4]..[911,33304+73])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[911,33304+4]..[911,33304+13])
                                              Pexp_ident "List.map2" (typing/typedecl.ml[911,33304+4]..[911,33304+13])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[911,33304+14]..[911,33304+32])
                                                  Pexp_ident "transl_declaration" (typing/typedecl.ml[911,33304+14]..[911,33304+32])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[911,33304+33]..[911,33304+43])
                                                  Pexp_ident "sdecl_list" (typing/typedecl.ml[911,33304+33]..[911,33304+43])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[911,33304+44]..[911,33304+73])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[911,33304+45]..[911,33304+53])
                                                    Pexp_ident "List.map" (typing/typedecl.ml[911,33304+45]..[911,33304+53])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[911,33304+54]..[911,33304+63])
                                                        Pexp_ident "ids_slots" (typing/typedecl.ml[911,33304+54]..[911,33304+63])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[911,33304+64]..[911,33304+72])
                                                        Pexp_ident "ids_list" (typing/typedecl.ml[911,33304+64]..[911,33304+72])
                                                  ]
                                            ]
                                      ]
                                      expression (typing/typedecl.ml[912,33381+2]..[985,35917+26])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typedecl.ml[912,33381+6]..[912,33381+11])
                                              Ppat_var "decls" (typing/typedecl.ml[912,33381+6]..[912,33381+11])
                                            expression (typing/typedecl.ml[913,33395+4]..[913,33395+65])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[913,33395+4]..[913,33395+12])
                                                Pexp_ident "List.map" (typing/typedecl.ml[913,33395+4]..[913,33395+12])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[913,33395+13]..[913,33395+58])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (typing/typedecl.ml[913,33395+18]..[913,33395+23])
                                                      Ppat_var "tdecl" (typing/typedecl.ml[913,33395+18]..[913,33395+23])
                                                    expression (typing/typedecl.ml[913,33395+27]..[913,33395+57])
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typedecl.ml[913,33395+28]..[913,33395+40])
                                                          Pexp_field
                                                          expression (typing/typedecl.ml[913,33395+28]..[913,33395+33])
                                                            Pexp_ident "tdecl" (typing/typedecl.ml[913,33395+28]..[913,33395+33])
                                                          "typ_id" (typing/typedecl.ml[913,33395+34]..[913,33395+40])
                                                        expression (typing/typedecl.ml[913,33395+42]..[913,33395+56])
                                                          Pexp_field
                                                          expression (typing/typedecl.ml[913,33395+42]..[913,33395+47])
                                                            Pexp_ident "tdecl" (typing/typedecl.ml[913,33395+42]..[913,33395+47])
                                                          "typ_type" (typing/typedecl.ml[913,33395+48]..[913,33395+56])
                                                      ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[913,33395+59]..[913,33395+65])
                                                    Pexp_ident "tdecls" (typing/typedecl.ml[913,33395+59]..[913,33395+65])
                                              ]
                                        ]
                                        expression (typing/typedecl.ml[914,33464+2]..[985,35917+26])
                                          Pexp_sequence
                                          expression (typing/typedecl.ml[914,33464+2]..[914,33464+22])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[914,33464+15]..[914,33464+17])
                                              Pexp_ident ":=" (typing/typedecl.ml[914,33464+15]..[914,33464+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[914,33464+2]..[914,33464+14])
                                                  Pexp_ident "current_slot" (typing/typedecl.ml[914,33464+2]..[914,33464+14])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[914,33464+18]..[914,33464+22])
                                                  Pexp_construct "None" (typing/typedecl.ml[914,33464+18]..[914,33464+22])
                                                  None
                                            ]
                                          expression (typing/typedecl.ml[916,33517+2]..[985,35917+26])
                                            Pexp_sequence
                                            expression (typing/typedecl.ml[916,33517+2]..[916,33517+29])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[916,33517+2]..[916,33517+18])
                                                Pexp_ident "check_duplicates" (typing/typedecl.ml[916,33517+2]..[916,33517+18])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[916,33517+19]..[916,33517+29])
                                                    Pexp_ident "sdecl_list" (typing/typedecl.ml[916,33517+19]..[916,33517+29])
                                              ]
                                            expression (typing/typedecl.ml[918,33577+2]..[985,35917+26])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typedecl.ml[918,33577+6]..[918,33577+13])
                                                    Ppat_var "new_env" (typing/typedecl.ml[918,33577+6]..[918,33577+13])
                                                  expression (typing/typedecl.ml[918,33577+16]..[918,33577+42])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[918,33577+16]..[918,33577+32])
                                                      Pexp_ident "add_types_to_env" (typing/typedecl.ml[918,33577+16]..[918,33577+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[918,33577+33]..[918,33577+38])
                                                          Pexp_ident "decls" (typing/typedecl.ml[918,33577+33]..[918,33577+38])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[918,33577+39]..[918,33577+42])
                                                          Pexp_ident "env" (typing/typedecl.ml[918,33577+39]..[918,33577+42])
                                                    ]
                                              ]
                                              expression (typing/typedecl.ml[920,33644+2]..[985,35917+26])
                                                Pexp_sequence
                                                expression (typing/typedecl.ml[920,33644+2]..[926,33858+5])
                                                  Pexp_match
                                                  expression (typing/typedecl.ml[920,33644+14]..[920,33644+22])
                                                    Pexp_ident "rec_flag" (typing/typedecl.ml[920,33644+14]..[920,33644+22])
                                                  [
                                                    <case>
                                                      pattern (typing/typedecl.ml[921,33672+6]..[921,33672+27])
                                                        Ppat_construct "Asttypes.Nonrecursive" (typing/typedecl.ml[921,33672+6]..[921,33672+27])
                                                        None
                                                      expression (typing/typedecl.ml[921,33672+31]..[921,33672+33])
                                                        Pexp_construct "()" (typing/typedecl.ml[921,33672+31]..[921,33672+33])
                                                        None
                                                    <case>
                                                      pattern (typing/typedecl.ml[922,33706+6]..[922,33706+24])
                                                        Ppat_construct "Asttypes.Recursive" (typing/typedecl.ml[922,33706+6]..[922,33706+24])
                                                        None
                                                      expression (typing/typedecl.ml[923,33734+6]..[925,33830+27])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[923,33734+6]..[923,33734+16])
                                                          Pexp_ident "List.iter2" (typing/typedecl.ml[923,33734+6]..[923,33734+16])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[924,33751+8]..[924,33751+78])
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (typing/typedecl.ml[924,33751+13]..[924,33751+20])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/typedecl.ml[924,33751+14]..[924,33751+16])
                                                                    Ppat_var "id" (typing/typedecl.ml[924,33751+14]..[924,33751+16])
                                                                  pattern (typing/typedecl.ml[924,33751+18]..[924,33751+19])
                                                                    Ppat_any
                                                                ]
                                                              expression (typing/typedecl.ml[924,33751+21]..[924,33751+77]) ghost
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (typing/typedecl.ml[924,33751+21]..[924,33751+26])
                                                                  Ppat_var "sdecl" (typing/typedecl.ml[924,33751+21]..[924,33751+26])
                                                                expression (typing/typedecl.ml[924,33751+30]..[924,33751+77])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[924,33751+30]..[924,33751+41])
                                                                    Pexp_ident "update_type" (typing/typedecl.ml[924,33751+30]..[924,33751+41])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[924,33751+42]..[924,33751+50])
Pexp_ident "temp_env" (typing/typedecl.ml[924,33751+42]..[924,33751+50])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[924,33751+51]..[924,33751+58])
Pexp_ident "new_env" (typing/typedecl.ml[924,33751+51]..[924,33751+58])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[924,33751+59]..[924,33751+61])
Pexp_ident "id" (typing/typedecl.ml[924,33751+59]..[924,33751+61])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[924,33751+62]..[924,33751+77])
Pexp_field
expression (typing/typedecl.ml[924,33751+62]..[924,33751+67])
  Pexp_ident "sdecl" (typing/typedecl.ml[924,33751+62]..[924,33751+67])
"ptype_loc" (typing/typedecl.ml[924,33751+68]..[924,33751+77])
                                                                  ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[925,33830+8]..[925,33830+16])
                                                              Pexp_ident "ids_list" (typing/typedecl.ml[925,33830+8]..[925,33830+16])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[925,33830+17]..[925,33830+27])
                                                              Pexp_ident "sdecl_list" (typing/typedecl.ml[925,33830+17]..[925,33830+27])
                                                        ]
                                                  ]
                                                expression (typing/typedecl.ml[928,33903+2]..[985,35917+26])
                                                  Pexp_sequence
                                                  expression (typing/typedecl.ml[928,33903+2]..[928,33903+17])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[928,33903+2]..[928,33903+15])
                                                      Pexp_ident "Ctype.end_def" (typing/typedecl.ml[928,33903+2]..[928,33903+15])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[928,33903+15]..[928,33903+17])
                                                          Pexp_construct "()" (typing/typedecl.ml[928,33903+15]..[928,33903+17])
                                                          None
                                                    ]
                                                  expression (typing/typedecl.ml[929,33922+2]..[985,35917+26])
                                                    Pexp_sequence
                                                    expression (typing/typedecl.ml[929,33922+2]..[929,33922+57])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[929,33922+2]..[929,33922+11])
                                                        Pexp_ident "List.iter" (typing/typedecl.ml[929,33922+2]..[929,33922+11])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[929,33922+12]..[929,33922+51])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/typedecl.ml[929,33922+17]..[929,33922+26])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typedecl.ml[929,33922+18]..[929,33922+19])
                                                                  Ppat_any
                                                                pattern (typing/typedecl.ml[929,33922+21]..[929,33922+25])
                                                                  Ppat_var "decl" (typing/typedecl.ml[929,33922+21]..[929,33922+25])
                                                              ]
                                                            expression (typing/typedecl.ml[929,33922+30]..[929,33922+50])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[929,33922+30]..[929,33922+45])
                                                                Pexp_ident "generalize_decl" (typing/typedecl.ml[929,33922+30]..[929,33922+45])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[929,33922+46]..[929,33922+50])
                                                                    Pexp_ident "decl" (typing/typedecl.ml[929,33922+46]..[929,33922+50])
                                                              ]
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[929,33922+52]..[929,33922+57])
                                                            Pexp_ident "decls" (typing/typedecl.ml[929,33922+52]..[929,33922+57])
                                                      ]
                                                    expression (typing/typedecl.ml[931,34018+2]..[985,35917+26])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typedecl.ml[931,34018+6]..[931,34018+17])
                                                            Ppat_var "id_loc_list" (typing/typedecl.ml[931,34018+6]..[931,34018+17])
                                                          expression (typing/typedecl.ml[932,34038+4]..[933,34097+25])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[932,34038+4]..[932,34038+13])
                                                              Pexp_ident "List.map2" (typing/typedecl.ml[932,34038+4]..[932,34038+13])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[932,34038+14]..[932,34038+58])
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (typing/typedecl.ml[932,34038+19]..[932,34038+26])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (typing/typedecl.ml[932,34038+20]..[932,34038+22])
Ppat_var "id" (typing/typedecl.ml[932,34038+20]..[932,34038+22])
                                                                      pattern (typing/typedecl.ml[932,34038+24]..[932,34038+25])
Ppat_any
                                                                    ]
                                                                  expression (typing/typedecl.ml[932,34038+27]..[932,34038+57]) ghost
                                                                    Pexp_fun
                                                                    Nolabel
                                                                    None
                                                                    pattern (typing/typedecl.ml[932,34038+27]..[932,34038+32])
                                                                      Ppat_var "sdecl" (typing/typedecl.ml[932,34038+27]..[932,34038+32])
                                                                    expression (typing/typedecl.ml[932,34038+36]..[932,34038+57])
                                                                      Pexp_tuple
                                                                      [
expression (typing/typedecl.ml[932,34038+37]..[932,34038+39])
  Pexp_ident "id" (typing/typedecl.ml[932,34038+37]..[932,34038+39])
expression (typing/typedecl.ml[932,34038+41]..[932,34038+56])
  Pexp_field
  expression (typing/typedecl.ml[932,34038+41]..[932,34038+46])
    Pexp_ident "sdecl" (typing/typedecl.ml[932,34038+41]..[932,34038+46])
  "ptype_loc" (typing/typedecl.ml[932,34038+47]..[932,34038+56])
                                                                      ]
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[933,34097+6]..[933,34097+14])
                                                                  Pexp_ident "ids_list" (typing/typedecl.ml[933,34097+6]..[933,34097+14])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[933,34097+15]..[933,34097+25])
                                                                  Pexp_ident "sdecl_list" (typing/typedecl.ml[933,34097+15]..[933,34097+25])
                                                            ]
                                                      ]
                                                      expression (typing/typedecl.ml[935,34128+2]..[985,35917+26])
                                                        Pexp_sequence
                                                        expression (typing/typedecl.ml[935,34128+2]..[938,34256+9])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[935,34128+2]..[935,34128+11])
                                                            Pexp_ident "List.iter" (typing/typedecl.ml[935,34128+2]..[935,34128+11])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[935,34128+12]..[937,34227+28])
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (typing/typedecl.ml[935,34128+17]..[935,34128+27])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (typing/typedecl.ml[935,34128+18]..[935,34128+20])
                                                                      Ppat_var "id" (typing/typedecl.ml[935,34128+18]..[935,34128+20])
                                                                    pattern (typing/typedecl.ml[935,34128+22]..[935,34128+26])
                                                                      Ppat_var "decl" (typing/typedecl.ml[935,34128+22]..[935,34128+26])
                                                                  ]
                                                                expression (typing/typedecl.ml[936,34159+4]..[937,34227+27])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[936,34159+4]..[936,34159+31])
                                                                    Pexp_ident "check_well_founded_manifest" (typing/typedecl.ml[936,34159+4]..[936,34159+31])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[936,34159+32]..[936,34159+39])
Pexp_ident "new_env" (typing/typedecl.ml[936,34159+32]..[936,34159+39])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[936,34159+40]..[936,34159+67])
Pexp_apply
expression (typing/typedecl.ml[936,34159+41]..[936,34159+51])
  Pexp_ident "List.assoc" (typing/typedecl.ml[936,34159+41]..[936,34159+51])
[
  <arg>
  Nolabel
    expression (typing/typedecl.ml[936,34159+52]..[936,34159+54])
      Pexp_ident "id" (typing/typedecl.ml[936,34159+52]..[936,34159+54])
  <arg>
  Nolabel
    expression (typing/typedecl.ml[936,34159+55]..[936,34159+66])
      Pexp_ident "id_loc_list" (typing/typedecl.ml[936,34159+55]..[936,34159+66])
]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[937,34227+6]..[937,34227+22])
Pexp_construct "Path.Pident" (typing/typedecl.ml[937,34227+7]..[937,34227+18])
Some
  expression (typing/typedecl.ml[937,34227+19]..[937,34227+21])
    Pexp_ident "id" (typing/typedecl.ml[937,34227+19]..[937,34227+21])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[937,34227+23]..[937,34227+27])
Pexp_ident "decl" (typing/typedecl.ml[937,34227+23]..[937,34227+27])
                                                                  ]
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[938,34256+4]..[938,34256+9])
                                                                Pexp_ident "decls" (typing/typedecl.ml[938,34256+4]..[938,34256+9])
                                                          ]
                                                        expression (typing/typedecl.ml[939,34267+2]..[985,35917+26])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (typing/typedecl.ml[939,34267+6]..[939,34267+14])
                                                                Ppat_var "to_check" (typing/typedecl.ml[939,34267+6]..[939,34267+14])
                                                              expression (typing/typedecl.ml[940,34284+4]..[940,34284+73])
                                                                Pexp_function
                                                                [
                                                                  <case>
                                                                    pattern (typing/typedecl.ml[940,34284+13]..[940,34284+27])
                                                                      Ppat_construct "Path.Pident" (typing/typedecl.ml[940,34284+13]..[940,34284+24])
                                                                      Some
[]
pattern (typing/typedecl.ml[940,34284+25]..[940,34284+27])
  Ppat_var "id" (typing/typedecl.ml[940,34284+25]..[940,34284+27])
                                                                    expression (typing/typedecl.ml[940,34284+31]..[940,34284+60])
                                                                      Pexp_apply
                                                                      expression (typing/typedecl.ml[940,34284+31]..[940,34284+45])
Pexp_ident "List.mem_assoc" (typing/typedecl.ml[940,34284+31]..[940,34284+45])
                                                                      [
<arg>
Nolabel
  expression (typing/typedecl.ml[940,34284+46]..[940,34284+48])
    Pexp_ident "id" (typing/typedecl.ml[940,34284+46]..[940,34284+48])
<arg>
Nolabel
  expression (typing/typedecl.ml[940,34284+49]..[940,34284+60])
    Pexp_ident "id_loc_list" (typing/typedecl.ml[940,34284+49]..[940,34284+60])
                                                                      ]
                                                                  <case>
                                                                    pattern (typing/typedecl.ml[940,34284+63]..[940,34284+64])
                                                                      Ppat_any
                                                                    expression (typing/typedecl.ml[940,34284+68]..[940,34284+73])
                                                                      Pexp_construct "false" (typing/typedecl.ml[940,34284+68]..[940,34284+73])
                                                                      None
                                                                ]
                                                          ]
                                                          expression (typing/typedecl.ml[941,34361+2]..[985,35917+26])
                                                            Pexp_sequence
                                                            expression (typing/typedecl.ml[941,34361+2]..[944,34494+9])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[941,34361+2]..[941,34361+11])
                                                                Pexp_ident "List.iter" (typing/typedecl.ml[941,34361+2]..[941,34361+11])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[941,34361+12]..[943,34473+20])
                                                                    Pexp_fun
                                                                    Nolabel
                                                                    None
                                                                    pattern (typing/typedecl.ml[941,34361+17]..[941,34361+27])
                                                                      Ppat_tuple
                                                                      [
pattern (typing/typedecl.ml[941,34361+18]..[941,34361+20])
  Ppat_var "id" (typing/typedecl.ml[941,34361+18]..[941,34361+20])
pattern (typing/typedecl.ml[941,34361+22]..[941,34361+26])
  Ppat_var "decl" (typing/typedecl.ml[941,34361+22]..[941,34361+26])
                                                                      ]
                                                                    expression (typing/typedecl.ml[942,34392+4]..[943,34473+19])
                                                                      Pexp_apply
                                                                      expression (typing/typedecl.ml[942,34392+4]..[942,34392+27])
Pexp_ident "check_well_founded_decl" (typing/typedecl.ml[942,34392+4]..[942,34392+27])
                                                                      [
<arg>
Nolabel
  expression (typing/typedecl.ml[942,34392+28]..[942,34392+35])
    Pexp_ident "new_env" (typing/typedecl.ml[942,34392+28]..[942,34392+35])
<arg>
Nolabel
  expression (typing/typedecl.ml[942,34392+36]..[942,34392+63])
    Pexp_apply
    expression (typing/typedecl.ml[942,34392+37]..[942,34392+47])
      Pexp_ident "List.assoc" (typing/typedecl.ml[942,34392+37]..[942,34392+47])
    [
      <arg>
      Nolabel
        expression (typing/typedecl.ml[942,34392+48]..[942,34392+50])
          Pexp_ident "id" (typing/typedecl.ml[942,34392+48]..[942,34392+50])
      <arg>
      Nolabel
        expression (typing/typedecl.ml[942,34392+51]..[942,34392+62])
          Pexp_ident "id_loc_list" (typing/typedecl.ml[942,34392+51]..[942,34392+62])
    ]
<arg>
Nolabel
  expression (typing/typedecl.ml[942,34392+64]..[942,34392+80])
    Pexp_construct "Path.Pident" (typing/typedecl.ml[942,34392+65]..[942,34392+76])
    Some
      expression (typing/typedecl.ml[942,34392+77]..[942,34392+79])
        Pexp_ident "id" (typing/typedecl.ml[942,34392+77]..[942,34392+79])
<arg>
Nolabel
  expression (typing/typedecl.ml[943,34473+6]..[943,34473+10])
    Pexp_ident "decl" (typing/typedecl.ml[943,34473+6]..[943,34473+10])
<arg>
Nolabel
  expression (typing/typedecl.ml[943,34473+11]..[943,34473+19])
    Pexp_ident "to_check" (typing/typedecl.ml[943,34473+11]..[943,34473+19])
                                                                      ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[944,34494+4]..[944,34494+9])
                                                                    Pexp_ident "decls" (typing/typedecl.ml[944,34494+4]..[944,34494+9])
                                                              ]
                                                            expression (typing/typedecl.ml[945,34505+2]..[985,35917+26])
                                                              Pexp_sequence
                                                              expression (typing/typedecl.ml[945,34505+2]..[946,34517+78])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[945,34505+2]..[945,34505+11])
                                                                  Pexp_ident "List.iter" (typing/typedecl.ml[945,34505+2]..[945,34505+11])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[946,34517+4]..[946,34517+71])
                                                                      Pexp_apply
                                                                      expression (typing/typedecl.ml[946,34517+5]..[946,34517+27])
Pexp_ident "check_abbrev_recursion" (typing/typedecl.ml[946,34517+5]..[946,34517+27])
                                                                      [
<arg>
Labelled "orig_env"
  expression (typing/typedecl.ml[946,34517+38]..[946,34517+41])
    Pexp_ident "env" (typing/typedecl.ml[946,34517+38]..[946,34517+41])
<arg>
Nolabel
  expression (typing/typedecl.ml[946,34517+42]..[946,34517+49])
    Pexp_ident "new_env" (typing/typedecl.ml[946,34517+42]..[946,34517+49])
<arg>
Nolabel
  expression (typing/typedecl.ml[946,34517+50]..[946,34517+61])
    Pexp_ident "id_loc_list" (typing/typedecl.ml[946,34517+50]..[946,34517+61])
<arg>
Nolabel
  expression (typing/typedecl.ml[946,34517+62]..[946,34517+70])
    Pexp_ident "to_check" (typing/typedecl.ml[946,34517+62]..[946,34517+70])
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[946,34517+72]..[946,34517+78])
                                                                      Pexp_ident "tdecls" (typing/typedecl.ml[946,34517+72]..[946,34517+78])
                                                                ]
                                                              expression (typing/typedecl.ml[948,34646+2]..[985,35917+26])
                                                                Pexp_sequence
                                                                expression (typing/typedecl.ml[948,34646+2]..[954,34864+21])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[948,34646+2]..[948,34646+12])
                                                                    Pexp_ident "List.iter2" (typing/typedecl.ml[948,34646+2]..[948,34646+12])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[949,34659+4]..[953,34841+22])
Pexp_fun
Nolabel
None
pattern (typing/typedecl.ml[949,34659+9]..[949,34659+14])
  Ppat_var "sdecl" (typing/typedecl.ml[949,34659+9]..[949,34659+14])
expression (typing/typedecl.ml[949,34659+15]..[953,34841+21]) ghost
  Pexp_fun
  Nolabel
  None
  pattern (typing/typedecl.ml[949,34659+15]..[949,34659+20])
    Ppat_var "tdecl" (typing/typedecl.ml[949,34659+15]..[949,34659+20])
  expression (typing/typedecl.ml[950,34683+6]..[953,34841+21])
    Pexp_let Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[950,34683+10]..[950,34683+14])
          Ppat_var "decl" (typing/typedecl.ml[950,34683+10]..[950,34683+14])
        expression (typing/typedecl.ml[950,34683+17]..[950,34683+31])
          Pexp_field
          expression (typing/typedecl.ml[950,34683+17]..[950,34683+22])
            Pexp_ident "tdecl" (typing/typedecl.ml[950,34683+17]..[950,34683+22])
          "typ_type" (typing/typedecl.ml[950,34683+23]..[950,34683+31])
    ]
    expression (typing/typedecl.ml[951,34718+7]..[953,34841+21])
      Pexp_match
      expression (typing/typedecl.ml[951,34718+13]..[951,34718+40])
        Pexp_apply
        expression (typing/typedecl.ml[951,34718+13]..[951,34718+35])
          Pexp_ident "Ctype.closed_type_decl" (typing/typedecl.ml[951,34718+13]..[951,34718+35])
        [
          <arg>
          Nolabel
            expression (typing/typedecl.ml[951,34718+36]..[951,34718+40])
              Pexp_ident "decl" (typing/typedecl.ml[951,34718+36]..[951,34718+40])
        ]
      [
        <case>
          pattern (typing/typedecl.ml[952,34764+9]..[952,34764+16])
            Ppat_construct "Some" (typing/typedecl.ml[952,34764+9]..[952,34764+13])
            Some
              []
              pattern (typing/typedecl.ml[952,34764+14]..[952,34764+16])
                Ppat_var "ty" (typing/typedecl.ml[952,34764+14]..[952,34764+16])
          expression (typing/typedecl.ml[952,34764+20]..[952,34764+76])
            Pexp_apply
            expression (typing/typedecl.ml[952,34764+20]..[952,34764+25])
              Pexp_ident "raise" (typing/typedecl.ml[952,34764+20]..[952,34764+25])
            [
              <arg>
              Nolabel
                expression (typing/typedecl.ml[952,34764+25]..[952,34764+76])
                  Pexp_construct "Error" (typing/typedecl.ml[952,34764+26]..[952,34764+31])
                  Some
                    expression (typing/typedecl.ml[952,34764+31]..[952,34764+75])
                      Pexp_tuple
                      [
                        expression (typing/typedecl.ml[952,34764+32]..[952,34764+47])
                          Pexp_field
                          expression (typing/typedecl.ml[952,34764+32]..[952,34764+37])
                            Pexp_ident "sdecl" (typing/typedecl.ml[952,34764+32]..[952,34764+37])
                          "ptype_loc" (typing/typedecl.ml[952,34764+38]..[952,34764+47])
                        expression (typing/typedecl.ml[952,34764+49]..[952,34764+74])
                          Pexp_construct "Unbound_type_var" (typing/typedecl.ml[952,34764+49]..[952,34764+65])
                          Some
                            expression (typing/typedecl.ml[952,34764+65]..[952,34764+74])
                              Pexp_tuple
                              [
                                expression (typing/typedecl.ml[952,34764+66]..[952,34764+68])
                                  Pexp_ident "ty" (typing/typedecl.ml[952,34764+66]..[952,34764+68])
                                expression (typing/typedecl.ml[952,34764+69]..[952,34764+73])
                                  Pexp_ident "decl" (typing/typedecl.ml[952,34764+69]..[952,34764+73])
                              ]
                      ]
            ]
        <case>
          pattern (typing/typedecl.ml[953,34841+9]..[953,34841+13])
            Ppat_construct "None" (typing/typedecl.ml[953,34841+9]..[953,34841+13])
            None
          expression (typing/typedecl.ml[953,34841+19]..[953,34841+21])
            Pexp_construct "()" (typing/typedecl.ml[953,34841+19]..[953,34841+21])
            None
      ]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[954,34864+4]..[954,34864+14])
Pexp_ident "sdecl_list" (typing/typedecl.ml[954,34864+4]..[954,34864+14])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[954,34864+15]..[954,34864+21])
Pexp_ident "tdecls" (typing/typedecl.ml[954,34864+15]..[954,34864+21])
                                                                  ]
                                                                expression (typing/typedecl.ml[956,34931+2]..[985,35917+26])
                                                                  Pexp_sequence
                                                                  expression (typing/typedecl.ml[956,34931+2]..[956,34931+57])
                                                                    Pexp_apply
                                                                    expression (typing/typedecl.ml[956,34931+2]..[956,34931+12])
                                                                      Pexp_ident "List.iter2" (typing/typedecl.ml[956,34931+2]..[956,34931+12])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[956,34931+13]..[956,34931+40])
  Pexp_apply
  expression (typing/typedecl.ml[956,34931+14]..[956,34931+31])
    Pexp_ident "check_constraints" (typing/typedecl.ml[956,34931+14]..[956,34931+31])
  [
    <arg>
    Nolabel
      expression (typing/typedecl.ml[956,34931+32]..[956,34931+39])
        Pexp_ident "new_env" (typing/typedecl.ml[956,34931+32]..[956,34931+39])
  ]
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[956,34931+41]..[956,34931+51])
  Pexp_ident "sdecl_list" (typing/typedecl.ml[956,34931+41]..[956,34931+51])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[956,34931+52]..[956,34931+57])
  Pexp_ident "decls" (typing/typedecl.ml[956,34931+52]..[956,34931+57])
                                                                    ]
                                                                  expression (typing/typedecl.ml[958,35034+2]..[985,35917+26])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (typing/typedecl.ml[958,35034+6]..[958,35034+11])
  Ppat_var "decls" (typing/typedecl.ml[958,35034+6]..[958,35034+11])
expression (typing/typedecl.ml[959,35048+4]..[971,35488+45])
  Pexp_try
  expression (typing/typedecl.ml[960,35056+6]..[964,35209+47])
    Pexp_apply
    expression (typing/typedecl.ml[964,35209+6]..[964,35209+8])
      Pexp_ident "|>" (typing/typedecl.ml[964,35209+6]..[964,35209+8])
    [
      <arg>
      Nolabel
        expression (typing/typedecl.ml[960,35056+6]..[963,35164+44])
          Pexp_apply
          expression (typing/typedecl.ml[963,35164+6]..[963,35164+8])
            Pexp_ident "|>" (typing/typedecl.ml[963,35164+6]..[963,35164+8])
          [
            <arg>
            Nolabel
              expression (typing/typedecl.ml[960,35056+6]..[962,35109+54])
                Pexp_apply
                expression (typing/typedecl.ml[962,35109+6]..[962,35109+8])
                  Pexp_ident "|>" (typing/typedecl.ml[962,35109+6]..[962,35109+8])
                [
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[960,35056+6]..[961,35068+40])
                      Pexp_apply
                      expression (typing/typedecl.ml[961,35068+6]..[961,35068+8])
                        Pexp_ident "|>" (typing/typedecl.ml[961,35068+6]..[961,35068+8])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[960,35056+6]..[960,35056+11])
                            Pexp_ident "decls" (typing/typedecl.ml[960,35056+6]..[960,35056+11])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[961,35068+9]..[961,35068+40])
                            Pexp_apply
                            expression (typing/typedecl.ml[961,35068+9]..[961,35068+29])
                              Pexp_ident "name_recursion_decls" (typing/typedecl.ml[961,35068+9]..[961,35068+29])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[961,35068+30]..[961,35068+40])
                                  Pexp_ident "sdecl_list" (typing/typedecl.ml[961,35068+30]..[961,35068+40])
                            ]
                      ]
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[962,35109+9]..[962,35109+54])
                      Pexp_apply
                      expression (typing/typedecl.ml[962,35109+9]..[962,35109+39])
                        Pexp_ident "Typedecl_variance.update_decls" (typing/typedecl.ml[962,35109+9]..[962,35109+39])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[962,35109+40]..[962,35109+43])
                            Pexp_ident "env" (typing/typedecl.ml[962,35109+40]..[962,35109+43])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[962,35109+44]..[962,35109+54])
                            Pexp_ident "sdecl_list" (typing/typedecl.ml[962,35109+44]..[962,35109+54])
                      ]
                ]
            <arg>
            Nolabel
              expression (typing/typedecl.ml[963,35164+9]..[963,35164+44])
                Pexp_apply
                expression (typing/typedecl.ml[963,35164+9]..[963,35164+40])
                  Pexp_ident "Typedecl_immediacy.update_decls" (typing/typedecl.ml[963,35164+9]..[963,35164+40])
                [
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[963,35164+41]..[963,35164+44])
                      Pexp_ident "env" (typing/typedecl.ml[963,35164+41]..[963,35164+44])
                ]
          ]
      <arg>
      Nolabel
        expression (typing/typedecl.ml[964,35209+9]..[964,35209+47])
          Pexp_apply
          expression (typing/typedecl.ml[964,35209+9]..[964,35209+43])
            Pexp_ident "Typedecl_separability.update_decls" (typing/typedecl.ml[964,35209+9]..[964,35209+43])
          [
            <arg>
            Nolabel
              expression (typing/typedecl.ml[964,35209+44]..[964,35209+47])
                Pexp_ident "env" (typing/typedecl.ml[964,35209+44]..[964,35209+47])
          ]
    ]
  [
    <case>
      pattern (typing/typedecl.ml[966,35266+6]..[966,35266+40])
        Ppat_construct "Typedecl_variance.Error" (typing/typedecl.ml[966,35266+6]..[966,35266+29])
        Some
          []
          pattern (typing/typedecl.ml[966,35266+30]..[966,35266+40])
            Ppat_tuple
            [
              pattern (typing/typedecl.ml[966,35266+31]..[966,35266+34])
                Ppat_var "loc" (typing/typedecl.ml[966,35266+31]..[966,35266+34])
              pattern (typing/typedecl.ml[966,35266+36]..[966,35266+39])
                Ppat_var "err" (typing/typedecl.ml[966,35266+36]..[966,35266+39])
            ]
      expression (typing/typedecl.ml[967,35310+8]..[967,35310+41])
        Pexp_apply
        expression (typing/typedecl.ml[967,35310+8]..[967,35310+13])
          Pexp_ident "raise" (typing/typedecl.ml[967,35310+8]..[967,35310+13])
        [
          <arg>
          Nolabel
            expression (typing/typedecl.ml[967,35310+14]..[967,35310+41])
              Pexp_construct "Error" (typing/typedecl.ml[967,35310+15]..[967,35310+20])
              Some
                expression (typing/typedecl.ml[967,35310+21]..[967,35310+40])
                  Pexp_tuple
                  [
                    expression (typing/typedecl.ml[967,35310+22]..[967,35310+25])
                      Pexp_ident "loc" (typing/typedecl.ml[967,35310+22]..[967,35310+25])
                    expression (typing/typedecl.ml[967,35310+27]..[967,35310+39])
                      Pexp_construct "Variance" (typing/typedecl.ml[967,35310+27]..[967,35310+35])
                      Some
                        expression (typing/typedecl.ml[967,35310+36]..[967,35310+39])
                          Pexp_ident "err" (typing/typedecl.ml[967,35310+36]..[967,35310+39])
                  ]
        ]
    <case>
      pattern (typing/typedecl.ml[968,35352+6]..[968,35352+41])
        Ppat_construct "Typedecl_immediacy.Error" (typing/typedecl.ml[968,35352+6]..[968,35352+30])
        Some
          []
          pattern (typing/typedecl.ml[968,35352+31]..[968,35352+41])
            Ppat_tuple
            [
              pattern (typing/typedecl.ml[968,35352+32]..[968,35352+35])
                Ppat_var "loc" (typing/typedecl.ml[968,35352+32]..[968,35352+35])
              pattern (typing/typedecl.ml[968,35352+37]..[968,35352+40])
                Ppat_var "err" (typing/typedecl.ml[968,35352+37]..[968,35352+40])
            ]
      expression (typing/typedecl.ml[969,35397+8]..[969,35397+42])
        Pexp_apply
        expression (typing/typedecl.ml[969,35397+8]..[969,35397+13])
          Pexp_ident "raise" (typing/typedecl.ml[969,35397+8]..[969,35397+13])
        [
          <arg>
          Nolabel
            expression (typing/typedecl.ml[969,35397+14]..[969,35397+42])
              Pexp_construct "Error" (typing/typedecl.ml[969,35397+15]..[969,35397+20])
              Some
                expression (typing/typedecl.ml[969,35397+21]..[969,35397+41])
                  Pexp_tuple
                  [
                    expression (typing/typedecl.ml[969,35397+22]..[969,35397+25])
                      Pexp_ident "loc" (typing/typedecl.ml[969,35397+22]..[969,35397+25])
                    expression (typing/typedecl.ml[969,35397+27]..[969,35397+40])
                      Pexp_construct "Immediacy" (typing/typedecl.ml[969,35397+27]..[969,35397+36])
                      Some
                        expression (typing/typedecl.ml[969,35397+37]..[969,35397+40])
                          Pexp_ident "err" (typing/typedecl.ml[969,35397+37]..[969,35397+40])
                  ]
        ]
    <case>
      pattern (typing/typedecl.ml[970,35440+6]..[970,35440+44])
        Ppat_construct "Typedecl_separability.Error" (typing/typedecl.ml[970,35440+6]..[970,35440+33])
        Some
          []
          pattern (typing/typedecl.ml[970,35440+34]..[970,35440+44])
            Ppat_tuple
            [
              pattern (typing/typedecl.ml[970,35440+35]..[970,35440+38])
                Ppat_var "loc" (typing/typedecl.ml[970,35440+35]..[970,35440+38])
              pattern (typing/typedecl.ml[970,35440+40]..[970,35440+43])
                Ppat_var "err" (typing/typedecl.ml[970,35440+40]..[970,35440+43])
            ]
      expression (typing/typedecl.ml[971,35488+8]..[971,35488+45])
        Pexp_apply
        expression (typing/typedecl.ml[971,35488+8]..[971,35488+13])
          Pexp_ident "raise" (typing/typedecl.ml[971,35488+8]..[971,35488+13])
        [
          <arg>
          Nolabel
            expression (typing/typedecl.ml[971,35488+14]..[971,35488+45])
              Pexp_construct "Error" (typing/typedecl.ml[971,35488+15]..[971,35488+20])
              Some
                expression (typing/typedecl.ml[971,35488+21]..[971,35488+44])
                  Pexp_tuple
                  [
                    expression (typing/typedecl.ml[971,35488+22]..[971,35488+25])
                      Pexp_ident "loc" (typing/typedecl.ml[971,35488+22]..[971,35488+25])
                    expression (typing/typedecl.ml[971,35488+27]..[971,35488+43])
                      Pexp_construct "Separability" (typing/typedecl.ml[971,35488+27]..[971,35488+39])
                      Some
                        expression (typing/typedecl.ml[971,35488+40]..[971,35488+43])
                          Pexp_ident "err" (typing/typedecl.ml[971,35488+40]..[971,35488+43])
                  ]
        ]
  ]
                                                                    ]
                                                                    expression (typing/typedecl.ml[974,35605+2]..[985,35917+26])
                                                                      Pexp_let Nonrec
                                                                      [
<def>
  pattern (typing/typedecl.ml[974,35605+6]..[974,35605+15])
    Ppat_var "final_env" (typing/typedecl.ml[974,35605+6]..[974,35605+15])
  expression (typing/typedecl.ml[974,35605+18]..[974,35605+44])
    Pexp_apply
    expression (typing/typedecl.ml[974,35605+18]..[974,35605+34])
      Pexp_ident "add_types_to_env" (typing/typedecl.ml[974,35605+18]..[974,35605+34])
    [
      <arg>
      Nolabel
        expression (typing/typedecl.ml[974,35605+35]..[974,35605+40])
          Pexp_ident "decls" (typing/typedecl.ml[974,35605+35]..[974,35605+40])
      <arg>
      Nolabel
        expression (typing/typedecl.ml[974,35605+41]..[974,35605+44])
          Pexp_ident "env" (typing/typedecl.ml[974,35605+41]..[974,35605+44])
    ]
                                                                      ]
                                                                      expression (typing/typedecl.ml[976,35682+2]..[985,35917+26])
Pexp_sequence
expression (typing/typedecl.ml[976,35682+2]..[976,35682+54])
  Pexp_apply
  expression (typing/typedecl.ml[976,35682+2]..[976,35682+12])
    Pexp_ident "List.iter2" (typing/typedecl.ml[976,35682+2]..[976,35682+12])
  [
    <arg>
    Nolabel
      expression (typing/typedecl.ml[976,35682+13]..[976,35682+37])
        Pexp_apply
        expression (typing/typedecl.ml[976,35682+14]..[976,35682+26])
          Pexp_ident "check_abbrev" (typing/typedecl.ml[976,35682+14]..[976,35682+26])
        [
          <arg>
          Nolabel
            expression (typing/typedecl.ml[976,35682+27]..[976,35682+36])
              Pexp_ident "final_env" (typing/typedecl.ml[976,35682+27]..[976,35682+36])
        ]
    <arg>
    Nolabel
      expression (typing/typedecl.ml[976,35682+38]..[976,35682+48])
        Pexp_ident "sdecl_list" (typing/typedecl.ml[976,35682+38]..[976,35682+48])
    <arg>
    Nolabel
      expression (typing/typedecl.ml[976,35682+49]..[976,35682+54])
        Pexp_ident "decls" (typing/typedecl.ml[976,35682+49]..[976,35682+54])
  ]
expression (typing/typedecl.ml[978,35772+2]..[985,35917+26])
  Pexp_let Nonrec
  [
    <def>
      pattern (typing/typedecl.ml[978,35772+6]..[978,35772+17])
        Ppat_var "final_decls" (typing/typedecl.ml[978,35772+6]..[978,35772+17])
      expression (typing/typedecl.ml[979,35792+4]..[982,35878+20])
        Pexp_apply
        expression (typing/typedecl.ml[979,35792+4]..[979,35792+13])
          Pexp_ident "List.map2" (typing/typedecl.ml[979,35792+4]..[979,35792+13])
        [
          <arg>
          Nolabel
            expression (typing/typedecl.ml[980,35806+6]..[982,35878+7])
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[980,35806+11]..[980,35806+16])
                Ppat_var "tdecl" (typing/typedecl.ml[980,35806+11]..[980,35806+16])
              expression (typing/typedecl.ml[980,35806+17]..[981,35839+38]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[980,35806+17]..[980,35806+29])
                  Ppat_tuple
                  [
                    pattern (typing/typedecl.ml[980,35806+18]..[980,35806+22])
                      Ppat_var "_id2" (typing/typedecl.ml[980,35806+18]..[980,35806+22])
                    pattern (typing/typedecl.ml[980,35806+24]..[980,35806+28])
                      Ppat_var "decl" (typing/typedecl.ml[980,35806+24]..[980,35806+28])
                  ]
                expression (typing/typedecl.ml[981,35839+8]..[981,35839+38])
                  Pexp_record
                  [
                    "typ_type" (typing/typedecl.ml[981,35839+21]..[981,35839+29])
                      expression (typing/typedecl.ml[981,35839+32]..[981,35839+36])
                        Pexp_ident "decl" (typing/typedecl.ml[981,35839+32]..[981,35839+36])
                  ]
                  Some
                    expression (typing/typedecl.ml[981,35839+10]..[981,35839+15])
                      Pexp_ident "tdecl" (typing/typedecl.ml[981,35839+10]..[981,35839+15])
          <arg>
          Nolabel
            expression (typing/typedecl.ml[982,35878+8]..[982,35878+14])
              Pexp_ident "tdecls" (typing/typedecl.ml[982,35878+8]..[982,35878+14])
          <arg>
          Nolabel
            expression (typing/typedecl.ml[982,35878+15]..[982,35878+20])
              Pexp_ident "decls" (typing/typedecl.ml[982,35878+15]..[982,35878+20])
        ]
  ]
  expression (typing/typedecl.ml[985,35917+2]..[985,35917+26])
    Pexp_tuple
    [
      expression (typing/typedecl.ml[985,35917+3]..[985,35917+14])
        Pexp_ident "final_decls" (typing/typedecl.ml[985,35917+3]..[985,35917+14])
      expression (typing/typedecl.ml[985,35917+16]..[985,35917+25])
        Pexp_ident "final_env" (typing/typedecl.ml[985,35917+16]..[985,35917+25])
    ]
    ]
  structure_item (typing/typedecl.ml[989,35980+0]..[1099,40155+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[989,35980+4]..[989,35980+32])
          Ppat_var "transl_extension_constructor" (typing/typedecl.ml[989,35980+4]..[989,35980+32])
        expression (typing/typedecl.ml[989,35980+33]..[1099,40155+56]) ghost
          Pexp_fun
          Labelled "scope"
          None
          pattern (typing/typedecl.ml[989,35980+34]..[989,35980+39])
            Ppat_var "scope" (typing/typedecl.ml[989,35980+34]..[989,35980+39])
          expression (typing/typedecl.ml[989,35980+40]..[1099,40155+56]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[989,35980+40]..[989,35980+43])
              Ppat_var "env" (typing/typedecl.ml[989,35980+40]..[989,35980+43])
            expression (typing/typedecl.ml[989,35980+44]..[1099,40155+56]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[989,35980+44]..[989,35980+53])
                Ppat_var "type_path" (typing/typedecl.ml[989,35980+44]..[989,35980+53])
              expression (typing/typedecl.ml[989,35980+54]..[1099,40155+56]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[989,35980+54]..[989,35980+65])
                  Ppat_var "type_params" (typing/typedecl.ml[989,35980+54]..[989,35980+65])
                expression (typing/typedecl.ml[990,36046+33]..[1099,40155+56]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typedecl.ml[990,36046+33]..[990,36046+46])
                    Ppat_var "typext_params" (typing/typedecl.ml[990,36046+33]..[990,36046+46])
                  expression (typing/typedecl.ml[990,36046+47]..[1099,40155+56]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typedecl.ml[990,36046+47]..[990,36046+51])
                      Ppat_var "priv" (typing/typedecl.ml[990,36046+47]..[990,36046+51])
                    expression (typing/typedecl.ml[990,36046+52]..[1099,40155+56]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typedecl.ml[990,36046+52]..[990,36046+56])
                        Ppat_var "sext" (typing/typedecl.ml[990,36046+52]..[990,36046+56])
                      expression (typing/typedecl.ml[991,36105+2]..[1099,40155+56])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typedecl.ml[991,36105+6]..[991,36105+8])
                              Ppat_var "id" (typing/typedecl.ml[991,36105+6]..[991,36105+8])
                            expression (typing/typedecl.ml[991,36105+11]..[991,36105+56])
                              Pexp_apply
                              expression (typing/typedecl.ml[991,36105+11]..[991,36105+30])
                                Pexp_ident "Ident.create_scoped" (typing/typedecl.ml[991,36105+11]..[991,36105+30])
                              [
                                <arg>
                                Labelled "scope"
                                  expression (typing/typedecl.ml[991,36105+32]..[991,36105+37])
                                    Pexp_ident "scope" (typing/typedecl.ml[991,36105+32]..[991,36105+37])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[991,36105+38]..[991,36105+56])
                                    Pexp_field
                                    expression (typing/typedecl.ml[991,36105+38]..[991,36105+52])
                                      Pexp_field
                                      expression (typing/typedecl.ml[991,36105+38]..[991,36105+42])
                                        Pexp_ident "sext" (typing/typedecl.ml[991,36105+38]..[991,36105+42])
                                      "pext_name" (typing/typedecl.ml[991,36105+43]..[991,36105+52])
                                    "txt" (typing/typedecl.ml[991,36105+53]..[991,36105+56])
                              ]
                        ]
                        expression (typing/typedecl.ml[992,36165+2]..[1099,40155+56])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typedecl.ml[992,36165+6]..[992,36165+26])
                                Ppat_tuple
                                [
                                  pattern (typing/typedecl.ml[992,36165+6]..[992,36165+10])
                                    Ppat_var "args" (typing/typedecl.ml[992,36165+6]..[992,36165+10])
                                  pattern (typing/typedecl.ml[992,36165+12]..[992,36165+20])
                                    Ppat_var "ret_type" (typing/typedecl.ml[992,36165+12]..[992,36165+20])
                                  pattern (typing/typedecl.ml[992,36165+22]..[992,36165+26])
                                    Ppat_var "kind" (typing/typedecl.ml[992,36165+22]..[992,36165+26])
                                ]
                              expression (typing/typedecl.ml[993,36194+4]..[1081,39641+46])
                                Pexp_match
                                expression (typing/typedecl.ml[993,36194+10]..[993,36194+24])
                                  Pexp_field
                                  expression (typing/typedecl.ml[993,36194+10]..[993,36194+14])
                                    Pexp_ident "sext" (typing/typedecl.ml[993,36194+10]..[993,36194+14])
                                  "pext_kind" (typing/typedecl.ml[993,36194+15]..[993,36194+24])
                                [
                                  <case>
                                    pattern (typing/typedecl.ml[994,36224+6]..[994,36224+40])
                                      Ppat_construct "Pext_decl" (typing/typedecl.ml[994,36224+6]..[994,36224+15])
                                      Some
                                        []
                                        pattern (typing/typedecl.ml[994,36224+15]..[994,36224+40])
                                          Ppat_tuple
                                          [
                                            pattern (typing/typedecl.ml[994,36224+16]..[994,36224+21])
                                              Ppat_var "svars" (typing/typedecl.ml[994,36224+16]..[994,36224+21])
                                            pattern (typing/typedecl.ml[994,36224+23]..[994,36224+28])
                                              Ppat_var "sargs" (typing/typedecl.ml[994,36224+23]..[994,36224+28])
                                            pattern (typing/typedecl.ml[994,36224+30]..[994,36224+39])
                                              Ppat_var "sret_type" (typing/typedecl.ml[994,36224+30]..[994,36224+39])
                                          ]
                                    expression (typing/typedecl.ml[995,36268+8]..[999,36429+60])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typedecl.ml[995,36268+12]..[995,36268+44])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typedecl.ml[995,36268+12]..[995,36268+17])
                                                Ppat_var "targs" (typing/typedecl.ml[995,36268+12]..[995,36268+17])
                                              pattern (typing/typedecl.ml[995,36268+19]..[995,36268+28])
                                                Ppat_var "tret_type" (typing/typedecl.ml[995,36268+19]..[995,36268+28])
                                              pattern (typing/typedecl.ml[995,36268+30]..[995,36268+34])
                                                Ppat_var "args" (typing/typedecl.ml[995,36268+30]..[995,36268+34])
                                              pattern (typing/typedecl.ml[995,36268+36]..[995,36268+44])
                                                Ppat_var "ret_type" (typing/typedecl.ml[995,36268+36]..[995,36268+44])
                                            ]
                                          expression (typing/typedecl.ml[996,36315+10]..[997,36384+33])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[996,36315+10]..[996,36315+26])
                                              Pexp_ident "make_constructor" (typing/typedecl.ml[996,36315+10]..[996,36315+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[996,36315+27]..[996,36315+30])
                                                  Pexp_ident "env" (typing/typedecl.ml[996,36315+27]..[996,36315+30])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[996,36315+31]..[996,36315+44])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[996,36315+31]..[996,36315+35])
                                                    Pexp_ident "sext" (typing/typedecl.ml[996,36315+31]..[996,36315+35])
                                                  "pext_loc" (typing/typedecl.ml[996,36315+36]..[996,36315+44])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[996,36315+45]..[996,36315+54])
                                                  Pexp_ident "type_path" (typing/typedecl.ml[996,36315+45]..[996,36315+54])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[996,36315+55]..[996,36315+68])
                                                  Pexp_ident "typext_params" (typing/typedecl.ml[996,36315+55]..[996,36315+68])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[997,36384+12]..[997,36384+17])
                                                  Pexp_ident "svars" (typing/typedecl.ml[997,36384+12]..[997,36384+17])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[997,36384+18]..[997,36384+23])
                                                  Pexp_ident "sargs" (typing/typedecl.ml[997,36384+18]..[997,36384+23])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[997,36384+24]..[997,36384+33])
                                                  Pexp_ident "sret_type" (typing/typedecl.ml[997,36384+24]..[997,36384+33])
                                            ]
                                      ]
                                      expression (typing/typedecl.ml[999,36429+10]..[999,36429+60])
                                        Pexp_tuple
                                        [
                                          expression (typing/typedecl.ml[999,36429+10]..[999,36429+14])
                                            Pexp_ident "args" (typing/typedecl.ml[999,36429+10]..[999,36429+14])
                                          expression (typing/typedecl.ml[999,36429+16]..[999,36429+24])
                                            Pexp_ident "ret_type" (typing/typedecl.ml[999,36429+16]..[999,36429+24])
                                          expression (typing/typedecl.ml[999,36429+26]..[999,36429+60])
                                            Pexp_construct "Text_decl" (typing/typedecl.ml[999,36429+26]..[999,36429+35])
                                            Some
                                              expression (typing/typedecl.ml[999,36429+35]..[999,36429+60])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typedecl.ml[999,36429+36]..[999,36429+41])
                                                    Pexp_ident "svars" (typing/typedecl.ml[999,36429+36]..[999,36429+41])
                                                  expression (typing/typedecl.ml[999,36429+43]..[999,36429+48])
                                                    Pexp_ident "targs" (typing/typedecl.ml[999,36429+43]..[999,36429+48])
                                                  expression (typing/typedecl.ml[999,36429+50]..[999,36429+59])
                                                    Pexp_ident "tret_type" (typing/typedecl.ml[999,36429+50]..[999,36429+59])
                                                ]
                                        ]
                                  <case>
                                    pattern (typing/typedecl.ml[1000,36490+6]..[1000,36490+21])
                                      Ppat_construct "Pext_rebind" (typing/typedecl.ml[1000,36490+6]..[1000,36490+17])
                                      Some
                                        []
                                        pattern (typing/typedecl.ml[1000,36490+18]..[1000,36490+21])
                                          Ppat_var "lid" (typing/typedecl.ml[1000,36490+18]..[1000,36490+21])
                                    expression (typing/typedecl.ml[1001,36515+8]..[1081,39641+46])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typedecl.ml[1001,36515+12]..[1001,36515+41]) ghost
                                            Ppat_constraint
                                            pattern (typing/typedecl.ml[1001,36515+12]..[1001,36515+17])
                                              Ppat_var "usage" (typing/typedecl.ml[1001,36515+12]..[1001,36515+17])
                                            core_type (typing/typedecl.ml[1001,36515+20]..[1001,36515+41]) ghost
                                              Ptyp_poly
                                              core_type (typing/typedecl.ml[1001,36515+20]..[1001,36515+41])
                                                Ptyp_constr "Env.constructor_usage" (typing/typedecl.ml[1001,36515+20]..[1001,36515+41])
                                                []
                                          expression (typing/typedecl.ml[1001,36515+12]..[1002,36559+70])
                                            Pexp_constraint
                                            expression (typing/typedecl.ml[1002,36559+10]..[1002,36559+70])
                                              Pexp_ifthenelse
                                              expression (typing/typedecl.ml[1002,36559+13]..[1002,36559+26])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[1002,36559+18]..[1002,36559+19])
                                                  Pexp_ident "=" (typing/typedecl.ml[1002,36559+18]..[1002,36559+19])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[1002,36559+13]..[1002,36559+17])
                                                      Pexp_ident "priv" (typing/typedecl.ml[1002,36559+13]..[1002,36559+17])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[1002,36559+20]..[1002,36559+26])
                                                      Pexp_construct "Public" (typing/typedecl.ml[1002,36559+20]..[1002,36559+26])
                                                      None
                                                ]
                                              expression (typing/typedecl.ml[1002,36559+32]..[1002,36559+44])
                                                Pexp_construct "Env.Exported" (typing/typedecl.ml[1002,36559+32]..[1002,36559+44])
                                                None
                                              Some
                                                expression (typing/typedecl.ml[1002,36559+50]..[1002,36559+70])
                                                  Pexp_construct "Env.Exported_private" (typing/typedecl.ml[1002,36559+50]..[1002,36559+70])
                                                  None
                                            core_type (typing/typedecl.ml[1001,36515+20]..[1001,36515+41])
                                              Ptyp_constr "Env.constructor_usage" (typing/typedecl.ml[1001,36515+20]..[1001,36515+41])
                                              []
                                      ]
                                      expression (typing/typedecl.ml[1004,36641+8]..[1081,39641+46])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typedecl.ml[1004,36641+12]..[1004,36641+18])
                                              Ppat_var "cdescr" (typing/typedecl.ml[1004,36641+12]..[1004,36641+18])
                                            expression (typing/typedecl.ml[1004,36641+21]..[1004,36641+74])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[1004,36641+21]..[1004,36641+43])
                                                Pexp_ident "Env.lookup_constructor" (typing/typedecl.ml[1004,36641+21]..[1004,36641+43])
                                              [
                                                <arg>
                                                Labelled "loc"
                                                  expression (typing/typedecl.ml[1004,36641+49]..[1004,36641+56])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[1004,36641+49]..[1004,36641+52])
                                                      Pexp_ident "lid" (typing/typedecl.ml[1004,36641+49]..[1004,36641+52])
                                                    "loc" (typing/typedecl.ml[1004,36641+53]..[1004,36641+56])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[1004,36641+57]..[1004,36641+62])
                                                    Pexp_ident "usage" (typing/typedecl.ml[1004,36641+57]..[1004,36641+62])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[1004,36641+63]..[1004,36641+70])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[1004,36641+63]..[1004,36641+66])
                                                      Pexp_ident "lid" (typing/typedecl.ml[1004,36641+63]..[1004,36641+66])
                                                    "txt" (typing/typedecl.ml[1004,36641+67]..[1004,36641+70])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[1004,36641+71]..[1004,36641+74])
                                                    Pexp_ident "env" (typing/typedecl.ml[1004,36641+71]..[1004,36641+74])
                                              ]
                                        ]
                                        expression (typing/typedecl.ml[1005,36719+8]..[1081,39641+46])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typedecl.ml[1005,36719+12]..[1005,36719+33])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/typedecl.ml[1005,36719+13]..[1005,36719+17])
                                                    Ppat_var "args" (typing/typedecl.ml[1005,36719+13]..[1005,36719+17])
                                                  pattern (typing/typedecl.ml[1005,36719+19]..[1005,36719+27])
                                                    Ppat_var "cstr_res" (typing/typedecl.ml[1005,36719+19]..[1005,36719+27])
                                                  pattern (typing/typedecl.ml[1005,36719+29]..[1005,36719+32])
                                                    Ppat_var "_ex" (typing/typedecl.ml[1005,36719+29]..[1005,36719+32])
                                                ]
                                              expression (typing/typedecl.ml[1005,36719+36]..[1005,36719+69])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[1005,36719+36]..[1005,36719+62])
                                                  Pexp_ident "Ctype.instance_constructor" (typing/typedecl.ml[1005,36719+36]..[1005,36719+62])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[1005,36719+63]..[1005,36719+69])
                                                      Pexp_ident "cdescr" (typing/typedecl.ml[1005,36719+63]..[1005,36719+69])
                                                ]
                                          ]
                                          expression (typing/typedecl.ml[1006,36792+8]..[1081,39641+46])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typedecl.ml[1006,36792+12]..[1006,36792+25])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typedecl.ml[1006,36792+12]..[1006,36792+15])
                                                      Ppat_var "res" (typing/typedecl.ml[1006,36792+12]..[1006,36792+15])
                                                    pattern (typing/typedecl.ml[1006,36792+17]..[1006,36792+25])
                                                      Ppat_var "ret_type" (typing/typedecl.ml[1006,36792+17]..[1006,36792+25])
                                                  ]
                                                expression (typing/typedecl.ml[1007,36820+10]..[1012,37078+62])
                                                  Pexp_ifthenelse
                                                  expression (typing/typedecl.ml[1007,36820+13]..[1007,36820+36])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[1007,36820+13]..[1007,36820+19])
                                                      Pexp_ident "cdescr" (typing/typedecl.ml[1007,36820+13]..[1007,36820+19])
                                                    "cstr_generalized" (typing/typedecl.ml[1007,36820+20]..[1007,36820+36])
                                                  expression (typing/typedecl.ml[1008,36862+12]..[1011,37050+27])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typedecl.ml[1008,36862+16]..[1008,36862+22])
                                                          Ppat_var "params" (typing/typedecl.ml[1008,36862+16]..[1008,36862+22])
                                                        expression (typing/typedecl.ml[1008,36862+25]..[1008,36862+56])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[1008,36862+25]..[1008,36862+44])
                                                            Pexp_ident "Ctype.instance_list" (typing/typedecl.ml[1008,36862+25]..[1008,36862+44])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1008,36862+45]..[1008,36862+56])
                                                                Pexp_ident "type_params" (typing/typedecl.ml[1008,36862+45]..[1008,36862+56])
                                                          ]
                                                    ]
                                                    expression (typing/typedecl.ml[1009,36922+12]..[1011,37050+27])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typedecl.ml[1009,36922+16]..[1009,36922+19])
                                                            Ppat_var "res" (typing/typedecl.ml[1009,36922+16]..[1009,36922+19])
                                                          expression (typing/typedecl.ml[1009,36922+22]..[1009,36922+54])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[1009,36922+22]..[1009,36922+37])
                                                              Pexp_ident "Ctype.newconstr" (typing/typedecl.ml[1009,36922+22]..[1009,36922+37])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1009,36922+38]..[1009,36922+47])
                                                                  Pexp_ident "type_path" (typing/typedecl.ml[1009,36922+38]..[1009,36922+47])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1009,36922+48]..[1009,36922+54])
                                                                  Pexp_ident "params" (typing/typedecl.ml[1009,36922+48]..[1009,36922+54])
                                                            ]
                                                      ]
                                                      expression (typing/typedecl.ml[1010,36980+12]..[1011,37050+27])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (typing/typedecl.ml[1010,36980+16]..[1010,36980+24])
                                                              Ppat_var "ret_type" (typing/typedecl.ml[1010,36980+16]..[1010,36980+24])
                                                            expression (typing/typedecl.ml[1010,36980+27]..[1010,36980+66])
                                                              Pexp_construct "Some" (typing/typedecl.ml[1010,36980+27]..[1010,36980+31])
                                                              Some
                                                                expression (typing/typedecl.ml[1010,36980+32]..[1010,36980+66])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[1010,36980+33]..[1010,36980+48])
                                                                    Pexp_ident "Ctype.newconstr" (typing/typedecl.ml[1010,36980+33]..[1010,36980+48])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[1010,36980+49]..[1010,36980+58])
Pexp_ident "type_path" (typing/typedecl.ml[1010,36980+49]..[1010,36980+58])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[1010,36980+59]..[1010,36980+65])
Pexp_ident "params" (typing/typedecl.ml[1010,36980+59]..[1010,36980+65])
                                                                  ]
                                                        ]
                                                        expression (typing/typedecl.ml[1011,37050+14]..[1011,37050+27])
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/typedecl.ml[1011,37050+14]..[1011,37050+17])
                                                              Pexp_ident "res" (typing/typedecl.ml[1011,37050+14]..[1011,37050+17])
                                                            expression (typing/typedecl.ml[1011,37050+19]..[1011,37050+27])
                                                              Pexp_ident "ret_type" (typing/typedecl.ml[1011,37050+19]..[1011,37050+27])
                                                          ]
                                                  Some
                                                    expression (typing/typedecl.ml[1012,37078+15]..[1012,37078+62])
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typedecl.ml[1012,37078+15]..[1012,37078+56])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[1012,37078+16]..[1012,37078+31])
                                                            Pexp_ident "Ctype.newconstr" (typing/typedecl.ml[1012,37078+16]..[1012,37078+31])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1012,37078+32]..[1012,37078+41])
                                                                Pexp_ident "type_path" (typing/typedecl.ml[1012,37078+32]..[1012,37078+41])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1012,37078+42]..[1012,37078+55])
                                                                Pexp_ident "typext_params" (typing/typedecl.ml[1012,37078+42]..[1012,37078+55])
                                                          ]
                                                        expression (typing/typedecl.ml[1012,37078+58]..[1012,37078+62])
                                                          Pexp_construct "None" (typing/typedecl.ml[1012,37078+58]..[1012,37078+62])
                                                          None
                                                      ]
                                            ]
                                            expression (typing/typedecl.ml[1014,37152+8]..[1081,39641+46])
                                              Pexp_sequence
                                              expression (typing/typedecl.ml[1014,37152+8]..[1020,37349+11])
                                                Pexp_try
                                                expression (typing/typedecl.ml[1016,37180+12]..[1016,37180+40])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[1016,37180+12]..[1016,37180+23])
                                                    Pexp_ident "Ctype.unify" (typing/typedecl.ml[1016,37180+12]..[1016,37180+23])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[1016,37180+24]..[1016,37180+27])
                                                        Pexp_ident "env" (typing/typedecl.ml[1016,37180+24]..[1016,37180+27])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[1016,37180+28]..[1016,37180+36])
                                                        Pexp_ident "cstr_res" (typing/typedecl.ml[1016,37180+28]..[1016,37180+36])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[1016,37180+37]..[1016,37180+40])
                                                        Pexp_ident "res" (typing/typedecl.ml[1016,37180+37]..[1016,37180+40])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (typing/typedecl.ml[1017,37221+15]..[1017,37221+30])
                                                      Ppat_construct "Ctype.Unify" (typing/typedecl.ml[1017,37221+15]..[1017,37221+26])
                                                      Some
                                                        []
                                                        pattern (typing/typedecl.ml[1017,37221+27]..[1017,37221+30])
                                                          Ppat_var "err" (typing/typedecl.ml[1017,37221+27]..[1017,37221+30])
                                                    expression (typing/typedecl.ml[1018,37255+12]..[1019,37289+59])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[1018,37255+12]..[1018,37255+17])
                                                        Pexp_ident "raise" (typing/typedecl.ml[1018,37255+12]..[1018,37255+17])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[1018,37255+18]..[1019,37289+59])
                                                            Pexp_construct "Error" (typing/typedecl.ml[1018,37255+19]..[1018,37255+24])
                                                            Some
                                                              expression (typing/typedecl.ml[1018,37255+24]..[1019,37289+58])
                                                                Pexp_tuple
                                                                [
                                                                  expression (typing/typedecl.ml[1018,37255+25]..[1018,37255+32])
                                                                    Pexp_field
                                                                    expression (typing/typedecl.ml[1018,37255+25]..[1018,37255+28])
                                                                      Pexp_ident "lid" (typing/typedecl.ml[1018,37255+25]..[1018,37255+28])
                                                                    "loc" (typing/typedecl.ml[1018,37255+29]..[1018,37255+32])
                                                                  expression (typing/typedecl.ml[1019,37289+21]..[1019,37289+57])
                                                                    Pexp_construct "Rebind_wrong_type" (typing/typedecl.ml[1019,37289+21]..[1019,37289+38])
                                                                    Some
                                                                      expression (typing/typedecl.ml[1019,37289+38]..[1019,37289+57])
Pexp_tuple
[
  expression (typing/typedecl.ml[1019,37289+39]..[1019,37289+46])
    Pexp_field
    expression (typing/typedecl.ml[1019,37289+39]..[1019,37289+42])
      Pexp_ident "lid" (typing/typedecl.ml[1019,37289+39]..[1019,37289+42])
    "txt" (typing/typedecl.ml[1019,37289+43]..[1019,37289+46])
  expression (typing/typedecl.ml[1019,37289+48]..[1019,37289+51])
    Pexp_ident "env" (typing/typedecl.ml[1019,37289+48]..[1019,37289+51])
  expression (typing/typedecl.ml[1019,37289+53]..[1019,37289+56])
    Pexp_ident "err" (typing/typedecl.ml[1019,37289+53]..[1019,37289+56])
]
                                                                ]
                                                      ]
                                                ]
                                              expression (typing/typedecl.ml[1022,37433+8]..[1081,39641+46])
                                                Pexp_sequence
                                                expression (typing/typedecl.ml[1022,37433+8]..[1032,37793+11])
                                                  Pexp_ifthenelse
                                                  expression (typing/typedecl.ml[1022,37433+11]..[1022,37433+38])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[1022,37433+11]..[1022,37433+14])
                                                      Pexp_ident "not" (typing/typedecl.ml[1022,37433+11]..[1022,37433+14])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[1022,37433+15]..[1022,37433+38])
                                                          Pexp_field
                                                          expression (typing/typedecl.ml[1022,37433+15]..[1022,37433+21])
                                                            Pexp_ident "cdescr" (typing/typedecl.ml[1022,37433+15]..[1022,37433+21])
                                                          "cstr_generalized" (typing/typedecl.ml[1022,37433+22]..[1022,37433+38])
                                                    ]
                                                  expression (typing/typedecl.ml[1022,37433+44]..[1032,37793+11])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typedecl.ml[1023,37483+14]..[1023,37483+18])
                                                          Ppat_var "vars" (typing/typedecl.ml[1023,37483+14]..[1023,37483+18])
                                                        expression (typing/typedecl.ml[1024,37504+12]..[1024,37504+63])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[1024,37504+12]..[1024,37504+32])
                                                            Pexp_ident "Ctype.free_variables" (typing/typedecl.ml[1024,37504+12]..[1024,37504+32])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1024,37504+33]..[1024,37504+63])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[1024,37504+34]..[1024,37504+48])
                                                                  Pexp_ident "Btype.newgenty" (typing/typedecl.ml[1024,37504+34]..[1024,37504+48])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[1024,37504+49]..[1024,37504+62])
                                                                      Pexp_construct "Ttuple" (typing/typedecl.ml[1024,37504+50]..[1024,37504+56])
                                                                      Some
expression (typing/typedecl.ml[1024,37504+57]..[1024,37504+61])
  Pexp_ident "args" (typing/typedecl.ml[1024,37504+57]..[1024,37504+61])
                                                                ]
                                                          ]
                                                    ]
                                                    expression (typing/typedecl.ml[1026,37581+10]..[1031,37767+25])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[1026,37581+10]..[1026,37581+19])
                                                        Pexp_ident "List.iter" (typing/typedecl.ml[1026,37581+10]..[1026,37581+19])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[1027,37601+12]..[1030,37718+48])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/typedecl.ml[1027,37601+17]..[1027,37601+19])
                                                              Ppat_var "ty" (typing/typedecl.ml[1027,37601+17]..[1027,37601+19])
                                                            expression (typing/typedecl.ml[1028,37624+14]..[1030,37718+47])
                                                              Pexp_ifthenelse
                                                              expression (typing/typedecl.ml[1028,37624+17]..[1029,37671+46])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[1029,37671+14]..[1029,37671+16])
                                                                  Pexp_ident "&&" (typing/typedecl.ml[1029,37671+14]..[1029,37671+16])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[1028,37624+17]..[1028,37624+46])
                                                                      Pexp_apply
                                                                      expression (typing/typedecl.ml[1028,37624+29]..[1028,37624+30])
Pexp_ident "=" (typing/typedecl.ml[1028,37624+29]..[1028,37624+30])
                                                                      [
<arg>
Nolabel
  expression (typing/typedecl.ml[1028,37624+17]..[1028,37624+28])
    Pexp_apply
    expression (typing/typedecl.ml[1028,37624+17]..[1028,37624+25])
      Pexp_ident "get_desc" (typing/typedecl.ml[1028,37624+17]..[1028,37624+25])
    [
      <arg>
      Nolabel
        expression (typing/typedecl.ml[1028,37624+26]..[1028,37624+28])
          Pexp_ident "ty" (typing/typedecl.ml[1028,37624+26]..[1028,37624+28])
    ]
<arg>
Nolabel
  expression (typing/typedecl.ml[1028,37624+31]..[1028,37624+46])
    Pexp_construct "Tvar" (typing/typedecl.ml[1028,37624+31]..[1028,37624+35])
    Some
      expression (typing/typedecl.ml[1028,37624+36]..[1028,37624+46])
        Pexp_construct "Some" (typing/typedecl.ml[1028,37624+37]..[1028,37624+41])
        Some
          expression (typing/typedecl.ml[1028,37624+42]..[1028,37624+45])
            Pexp_constant PConst_string("_",(typing/typedecl.ml[1028,37624+43]..[1028,37624+44]),None)
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[1029,37671+17]..[1029,37671+46])
                                                                      Pexp_apply
                                                                      expression (typing/typedecl.ml[1029,37671+17]..[1029,37671+28])
Pexp_ident "List.exists" (typing/typedecl.ml[1029,37671+17]..[1029,37671+28])
                                                                      [
<arg>
Nolabel
  expression (typing/typedecl.ml[1029,37671+29]..[1029,37671+41])
    Pexp_apply
    expression (typing/typedecl.ml[1029,37671+30]..[1029,37671+37])
      Pexp_ident "eq_type" (typing/typedecl.ml[1029,37671+30]..[1029,37671+37])
    [
      <arg>
      Nolabel
        expression (typing/typedecl.ml[1029,37671+38]..[1029,37671+40])
          Pexp_ident "ty" (typing/typedecl.ml[1029,37671+38]..[1029,37671+40])
    ]
<arg>
Nolabel
  expression (typing/typedecl.ml[1029,37671+42]..[1029,37671+46])
    Pexp_ident "vars" (typing/typedecl.ml[1029,37671+42]..[1029,37671+46])
                                                                      ]
                                                                ]
                                                              expression (typing/typedecl.ml[1030,37718+19]..[1030,37718+47])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[1030,37718+19]..[1030,37718+32])
                                                                  Pexp_ident "set_type_desc" (typing/typedecl.ml[1030,37718+19]..[1030,37718+32])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[1030,37718+33]..[1030,37718+35])
                                                                      Pexp_ident "ty" (typing/typedecl.ml[1030,37718+33]..[1030,37718+35])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[1030,37718+36]..[1030,37718+47])
                                                                      Pexp_construct "Tvar" (typing/typedecl.ml[1030,37718+37]..[1030,37718+41])
                                                                      Some
expression (typing/typedecl.ml[1030,37718+42]..[1030,37718+46])
  Pexp_construct "None" (typing/typedecl.ml[1030,37718+42]..[1030,37718+46])
  None
                                                                ]
                                                              None
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[1031,37767+12]..[1031,37767+25])
                                                            Pexp_ident "typext_params" (typing/typedecl.ml[1031,37767+12]..[1031,37767+25])
                                                      ]
                                                  None
                                                expression (typing/typedecl.ml[1034,37883+8]..[1081,39641+46])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typedecl.ml[1034,37883+12]..[1034,37883+26])
                                                        Ppat_var "cstr_type_path" (typing/typedecl.ml[1034,37883+12]..[1034,37883+26])
                                                      expression (typing/typedecl.ml[1034,37883+29]..[1034,37883+56])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[1034,37883+29]..[1034,37883+49])
                                                          Pexp_ident "Btype.cstr_type_path" (typing/typedecl.ml[1034,37883+29]..[1034,37883+49])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[1034,37883+50]..[1034,37883+56])
                                                              Pexp_ident "cdescr" (typing/typedecl.ml[1034,37883+50]..[1034,37883+56])
                                                        ]
                                                  ]
                                                  expression (typing/typedecl.ml[1035,37943+8]..[1081,39641+46])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typedecl.ml[1035,37943+12]..[1035,37943+28])
                                                          Ppat_var "cstr_type_params" (typing/typedecl.ml[1035,37943+12]..[1035,37943+28])
                                                        expression (typing/typedecl.ml[1035,37943+31]..[1035,37943+77])
                                                          Pexp_field
                                                          expression (typing/typedecl.ml[1035,37943+31]..[1035,37943+65])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[1035,37943+32]..[1035,37943+45])
                                                              Pexp_ident "Env.find_type" (typing/typedecl.ml[1035,37943+32]..[1035,37943+45])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1035,37943+46]..[1035,37943+60])
                                                                  Pexp_ident "cstr_type_path" (typing/typedecl.ml[1035,37943+46]..[1035,37943+60])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1035,37943+61]..[1035,37943+64])
                                                                  Pexp_ident "env" (typing/typedecl.ml[1035,37943+61]..[1035,37943+64])
                                                            ]
                                                          "type_params" (typing/typedecl.ml[1035,37943+66]..[1035,37943+77])
                                                    ]
                                                    expression (typing/typedecl.ml[1036,38024+8]..[1081,39641+46])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typedecl.ml[1036,38024+12]..[1036,38024+22])
                                                            Ppat_var "cstr_types" (typing/typedecl.ml[1036,38024+12]..[1036,38024+22])
                                                          expression (typing/typedecl.ml[1037,38049+10]..[1039,38143+29])
                                                            Pexp_construct "::" (typing/typedecl.ml[1039,38143+10]..[1039,38143+12])
                                                            Some
                                                              expression (typing/typedecl.ml[1037,38049+10]..[1039,38143+29]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (typing/typedecl.ml[1037,38049+10]..[1038,38075+67])
                                                                    Pexp_apply
                                                                    expression (typing/typedecl.ml[1037,38049+11]..[1037,38049+25])
                                                                      Pexp_ident "Btype.newgenty" (typing/typedecl.ml[1037,38049+11]..[1037,38049+25])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[1038,38075+13]..[1038,38075+66])
  Pexp_construct "Tconstr" (typing/typedecl.ml[1038,38075+14]..[1038,38075+21])
  Some
    expression (typing/typedecl.ml[1038,38075+21]..[1038,38075+65])
      Pexp_tuple
      [
        expression (typing/typedecl.ml[1038,38075+22]..[1038,38075+36])
          Pexp_ident "cstr_type_path" (typing/typedecl.ml[1038,38075+22]..[1038,38075+36])
        expression (typing/typedecl.ml[1038,38075+38]..[1038,38075+54])
          Pexp_ident "cstr_type_params" (typing/typedecl.ml[1038,38075+38]..[1038,38075+54])
        expression (typing/typedecl.ml[1038,38075+56]..[1038,38075+64])
          Pexp_apply
          expression (typing/typedecl.ml[1038,38075+56]..[1038,38075+59])
            Pexp_ident "ref" (typing/typedecl.ml[1038,38075+56]..[1038,38075+59])
          [
            <arg>
            Nolabel
              expression (typing/typedecl.ml[1038,38075+60]..[1038,38075+64])
                Pexp_construct "Mnil" (typing/typedecl.ml[1038,38075+60]..[1038,38075+64])
                None
          ]
      ]
                                                                    ]
                                                                  expression (typing/typedecl.ml[1039,38143+13]..[1039,38143+29])
                                                                    Pexp_ident "cstr_type_params" (typing/typedecl.ml[1039,38143+13]..[1039,38143+29])
                                                                ]
                                                      ]
                                                      expression (typing/typedecl.ml[1041,38184+8]..[1081,39641+46])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (typing/typedecl.ml[1041,38184+12]..[1041,38184+21])
                                                              Ppat_var "ext_types" (typing/typedecl.ml[1041,38184+12]..[1041,38184+21])
                                                            expression (typing/typedecl.ml[1042,38208+10]..[1044,38292+24])
                                                              Pexp_construct "::" (typing/typedecl.ml[1044,38292+10]..[1044,38292+12])
                                                              Some
                                                                expression (typing/typedecl.ml[1042,38208+10]..[1044,38292+24]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (typing/typedecl.ml[1042,38208+10]..[1043,38234+57])
                                                                      Pexp_apply
                                                                      expression (typing/typedecl.ml[1042,38208+11]..[1042,38208+25])
Pexp_ident "Btype.newgenty" (typing/typedecl.ml[1042,38208+11]..[1042,38208+25])
                                                                      [
<arg>
Nolabel
  expression (typing/typedecl.ml[1043,38234+13]..[1043,38234+56])
    Pexp_construct "Tconstr" (typing/typedecl.ml[1043,38234+14]..[1043,38234+21])
    Some
      expression (typing/typedecl.ml[1043,38234+21]..[1043,38234+55])
        Pexp_tuple
        [
          expression (typing/typedecl.ml[1043,38234+22]..[1043,38234+31])
            Pexp_ident "type_path" (typing/typedecl.ml[1043,38234+22]..[1043,38234+31])
          expression (typing/typedecl.ml[1043,38234+33]..[1043,38234+44])
            Pexp_ident "type_params" (typing/typedecl.ml[1043,38234+33]..[1043,38234+44])
          expression (typing/typedecl.ml[1043,38234+46]..[1043,38234+54])
            Pexp_apply
            expression (typing/typedecl.ml[1043,38234+46]..[1043,38234+49])
              Pexp_ident "ref" (typing/typedecl.ml[1043,38234+46]..[1043,38234+49])
            [
              <arg>
              Nolabel
                expression (typing/typedecl.ml[1043,38234+50]..[1043,38234+54])
                  Pexp_construct "Mnil" (typing/typedecl.ml[1043,38234+50]..[1043,38234+54])
                  None
            ]
        ]
                                                                      ]
                                                                    expression (typing/typedecl.ml[1044,38292+13]..[1044,38292+24])
                                                                      Pexp_ident "type_params" (typing/typedecl.ml[1044,38292+13]..[1044,38292+24])
                                                                  ]
                                                        ]
                                                        expression (typing/typedecl.ml[1046,38328+8]..[1081,39641+46])
                                                          Pexp_sequence
                                                          expression (typing/typedecl.ml[1046,38328+8]..[1048,38427+76])
                                                            Pexp_ifthenelse
                                                            expression (typing/typedecl.ml[1046,38328+11]..[1046,38328+61])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[1046,38328+11]..[1046,38328+14])
                                                                Pexp_ident "not" (typing/typedecl.ml[1046,38328+11]..[1046,38328+14])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[1046,38328+15]..[1046,38328+61])
                                                                    Pexp_apply
                                                                    expression (typing/typedecl.ml[1046,38328+16]..[1046,38328+30])
                                                                      Pexp_ident "Ctype.is_equal" (typing/typedecl.ml[1046,38328+16]..[1046,38328+30])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[1046,38328+31]..[1046,38328+34])
  Pexp_ident "env" (typing/typedecl.ml[1046,38328+31]..[1046,38328+34])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[1046,38328+35]..[1046,38328+39])
  Pexp_construct "true" (typing/typedecl.ml[1046,38328+35]..[1046,38328+39])
  None
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[1046,38328+40]..[1046,38328+50])
  Pexp_ident "cstr_types" (typing/typedecl.ml[1046,38328+40]..[1046,38328+50])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[1046,38328+51]..[1046,38328+60])
  Pexp_ident "ext_types" (typing/typedecl.ml[1046,38328+51]..[1046,38328+60])
                                                                    ]
                                                              ]
                                                            expression (typing/typedecl.ml[1047,38395+10]..[1048,38427+76])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[1047,38395+10]..[1047,38395+15])
                                                                Pexp_ident "raise" (typing/typedecl.ml[1047,38395+10]..[1047,38395+15])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[1047,38395+16]..[1048,38427+76])
                                                                    Pexp_construct "Error" (typing/typedecl.ml[1047,38395+17]..[1047,38395+22])
                                                                    Some
                                                                      expression (typing/typedecl.ml[1047,38395+22]..[1048,38427+75])
Pexp_tuple
[
  expression (typing/typedecl.ml[1047,38395+23]..[1047,38395+30])
    Pexp_field
    expression (typing/typedecl.ml[1047,38395+23]..[1047,38395+26])
      Pexp_ident "lid" (typing/typedecl.ml[1047,38395+23]..[1047,38395+26])
    "loc" (typing/typedecl.ml[1047,38395+27]..[1047,38395+30])
  expression (typing/typedecl.ml[1048,38427+23]..[1048,38427+74])
    Pexp_construct "Rebind_mismatch" (typing/typedecl.ml[1048,38427+23]..[1048,38427+38])
    Some
      expression (typing/typedecl.ml[1048,38427+38]..[1048,38427+74])
        Pexp_tuple
        [
          expression (typing/typedecl.ml[1048,38427+39]..[1048,38427+46])
            Pexp_field
            expression (typing/typedecl.ml[1048,38427+39]..[1048,38427+42])
              Pexp_ident "lid" (typing/typedecl.ml[1048,38427+39]..[1048,38427+42])
            "txt" (typing/typedecl.ml[1048,38427+43]..[1048,38427+46])
          expression (typing/typedecl.ml[1048,38427+48]..[1048,38427+62])
            Pexp_ident "cstr_type_path" (typing/typedecl.ml[1048,38427+48]..[1048,38427+62])
          expression (typing/typedecl.ml[1048,38427+64]..[1048,38427+73])
            Pexp_ident "type_path" (typing/typedecl.ml[1048,38427+64]..[1048,38427+73])
        ]
]
                                                              ]
                                                            None
                                                          expression (typing/typedecl.ml[1050,38574+8]..[1081,39641+46])
                                                            Pexp_sequence
                                                            expression (typing/typedecl.ml[1050,38574+8]..[1055,38747+11])
                                                              Pexp_match
                                                              expression (typing/typedecl.ml[1051,38588+16]..[1051,38588+41])
                                                                Pexp_tuple
                                                                [
                                                                  expression (typing/typedecl.ml[1051,38588+16]..[1051,38588+35])
                                                                    Pexp_field
                                                                    expression (typing/typedecl.ml[1051,38588+16]..[1051,38588+22])
                                                                      Pexp_ident "cdescr" (typing/typedecl.ml[1051,38588+16]..[1051,38588+22])
                                                                    "cstr_private" (typing/typedecl.ml[1051,38588+23]..[1051,38588+35])
                                                                  expression (typing/typedecl.ml[1051,38588+37]..[1051,38588+41])
                                                                    Pexp_ident "priv" (typing/typedecl.ml[1051,38588+37]..[1051,38588+41])
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (typing/typedecl.ml[1052,38635+12]..[1052,38635+27])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (typing/typedecl.ml[1052,38635+12]..[1052,38635+19])
Ppat_construct "Private" (typing/typedecl.ml[1052,38635+12]..[1052,38635+19])
None
                                                                      pattern (typing/typedecl.ml[1052,38635+21]..[1052,38635+27])
Ppat_construct "Public" (typing/typedecl.ml[1052,38635+21]..[1052,38635+27])
None
                                                                    ]
                                                                  expression (typing/typedecl.ml[1053,38666+14]..[1053,38666+60])
                                                                    Pexp_apply
                                                                    expression (typing/typedecl.ml[1053,38666+14]..[1053,38666+19])
                                                                      Pexp_ident "raise" (typing/typedecl.ml[1053,38666+14]..[1053,38666+19])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[1053,38666+20]..[1053,38666+60])
  Pexp_construct "Error" (typing/typedecl.ml[1053,38666+21]..[1053,38666+26])
  Some
    expression (typing/typedecl.ml[1053,38666+26]..[1053,38666+59])
      Pexp_tuple
      [
        expression (typing/typedecl.ml[1053,38666+27]..[1053,38666+34])
          Pexp_field
          expression (typing/typedecl.ml[1053,38666+27]..[1053,38666+30])
            Pexp_ident "lid" (typing/typedecl.ml[1053,38666+27]..[1053,38666+30])
          "loc" (typing/typedecl.ml[1053,38666+31]..[1053,38666+34])
        expression (typing/typedecl.ml[1053,38666+36]..[1053,38666+58])
          Pexp_construct "Rebind_private" (typing/typedecl.ml[1053,38666+36]..[1053,38666+50])
          Some
            expression (typing/typedecl.ml[1053,38666+51]..[1053,38666+58])
              Pexp_field
              expression (typing/typedecl.ml[1053,38666+51]..[1053,38666+54])
                Pexp_ident "lid" (typing/typedecl.ml[1053,38666+51]..[1053,38666+54])
              "txt" (typing/typedecl.ml[1053,38666+55]..[1053,38666+58])
      ]
                                                                    ]
                                                                <case>
                                                                  pattern (typing/typedecl.ml[1054,38727+12]..[1054,38727+13])
                                                                    Ppat_any
                                                                  expression (typing/typedecl.ml[1054,38727+17]..[1054,38727+19])
                                                                    Pexp_construct "()" (typing/typedecl.ml[1054,38727+17]..[1054,38727+19])
                                                                    None
                                                              ]
                                                            expression (typing/typedecl.ml[1056,38760+8]..[1081,39641+46])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (typing/typedecl.ml[1056,38760+12]..[1056,38760+16])
                                                                    Ppat_var "path" (typing/typedecl.ml[1056,38760+12]..[1056,38760+16])
                                                                  expression (typing/typedecl.ml[1057,38779+10]..[1059,38860+29])
                                                                    Pexp_match
                                                                    expression (typing/typedecl.ml[1057,38779+16]..[1057,38779+31])
                                                                      Pexp_field
                                                                      expression (typing/typedecl.ml[1057,38779+16]..[1057,38779+22])
Pexp_ident "cdescr" (typing/typedecl.ml[1057,38779+16]..[1057,38779+22])
                                                                      "cstr_tag" (typing/typedecl.ml[1057,38779+23]..[1057,38779+31])
                                                                    [
                                                                      <case>
pattern (typing/typedecl.ml[1058,38816+12]..[1058,38816+35])
  Ppat_construct "Cstr_extension" (typing/typedecl.ml[1058,38816+12]..[1058,38816+26])
  Some
    []
    pattern (typing/typedecl.ml[1058,38816+26]..[1058,38816+35])
      Ppat_tuple
      [
        pattern (typing/typedecl.ml[1058,38816+27]..[1058,38816+31])
          Ppat_var "path" (typing/typedecl.ml[1058,38816+27]..[1058,38816+31])
        pattern (typing/typedecl.ml[1058,38816+33]..[1058,38816+34])
          Ppat_any
      ]
expression (typing/typedecl.ml[1058,38816+39]..[1058,38816+43])
  Pexp_ident "path" (typing/typedecl.ml[1058,38816+39]..[1058,38816+43])
                                                                      <case>
pattern (typing/typedecl.ml[1059,38860+12]..[1059,38860+13])
  Ppat_any
expression (typing/typedecl.ml[1059,38860+17]..[1059,38860+29])
  Pexp_assert
  expression (typing/typedecl.ml[1059,38860+24]..[1059,38860+29])
    Pexp_construct "false" (typing/typedecl.ml[1059,38860+24]..[1059,38860+29])
    None
                                                                    ]
                                                              ]
                                                              expression (typing/typedecl.ml[1061,38901+8]..[1081,39641+46])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (typing/typedecl.ml[1061,38901+12]..[1061,38901+16])
                                                                      Ppat_var "args" (typing/typedecl.ml[1061,38901+12]..[1061,38901+16])
                                                                    expression (typing/typedecl.ml[1062,38920+10]..[1079,39593+36])
                                                                      Pexp_match
                                                                      expression (typing/typedecl.ml[1062,38920+16]..[1062,38920+35])
Pexp_field
expression (typing/typedecl.ml[1062,38920+16]..[1062,38920+22])
  Pexp_ident "cdescr" (typing/typedecl.ml[1062,38920+16]..[1062,38920+22])
"cstr_inlined" (typing/typedecl.ml[1062,38920+23]..[1062,38920+35])
                                                                      [
<case>
  pattern (typing/typedecl.ml[1063,38961+12]..[1063,38961+16])
    Ppat_construct "None" (typing/typedecl.ml[1063,38961+12]..[1063,38961+16])
    None
  expression (typing/typedecl.ml[1064,38981+14]..[1064,38981+35])
    Pexp_construct "Types.Cstr_tuple" (typing/typedecl.ml[1064,38981+14]..[1064,38981+30])
    Some
      expression (typing/typedecl.ml[1064,38981+31]..[1064,38981+35])
        Pexp_ident "args" (typing/typedecl.ml[1064,38981+31]..[1064,38981+35])
<case>
  pattern (typing/typedecl.ml[1065,39017+12]..[1065,39017+21])
    Ppat_construct "Some" (typing/typedecl.ml[1065,39017+12]..[1065,39017+16])
    Some
      []
      pattern (typing/typedecl.ml[1065,39017+17]..[1065,39017+21])
        Ppat_var "decl" (typing/typedecl.ml[1065,39017+17]..[1065,39017+21])
  expression (typing/typedecl.ml[1066,39042+14]..[1079,39593+36])
    Pexp_let Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1066,39042+18]..[1066,39042+20])
          Ppat_var "tl" (typing/typedecl.ml[1066,39042+18]..[1066,39042+20])
        expression (typing/typedecl.ml[1067,39065+16]..[1069,39161+35])
          Pexp_match
          expression (typing/typedecl.ml[1067,39065+22]..[1067,39065+44])
            Pexp_apply
            expression (typing/typedecl.ml[1067,39065+22]..[1067,39065+30])
              Pexp_ident "List.map" (typing/typedecl.ml[1067,39065+22]..[1067,39065+30])
            [
              <arg>
              Nolabel
                expression (typing/typedecl.ml[1067,39065+31]..[1067,39065+39])
                  Pexp_ident "get_desc" (typing/typedecl.ml[1067,39065+31]..[1067,39065+39])
              <arg>
              Nolabel
                expression (typing/typedecl.ml[1067,39065+40]..[1067,39065+44])
                  Pexp_ident "args" (typing/typedecl.ml[1067,39065+40]..[1067,39065+44])
            ]
          [
            <case>
              pattern (typing/typedecl.ml[1068,39115+18]..[1068,39115+39])
                Ppat_construct "::" (typing/typedecl.ml[1068,39115+20]..[1068,39115+39]) ghost
                Some
                  []
                  pattern (typing/typedecl.ml[1068,39115+20]..[1068,39115+39]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/typedecl.ml[1068,39115+20]..[1068,39115+37])
                        Ppat_construct "Tconstr" (typing/typedecl.ml[1068,39115+20]..[1068,39115+27])
                        Some
                          []
                          pattern (typing/typedecl.ml[1068,39115+27]..[1068,39115+37])
                            Ppat_tuple
                            [
                              pattern (typing/typedecl.ml[1068,39115+28]..[1068,39115+29])
                                Ppat_any
                              pattern (typing/typedecl.ml[1068,39115+31]..[1068,39115+33])
                                Ppat_var "tl" (typing/typedecl.ml[1068,39115+31]..[1068,39115+33])
                              pattern (typing/typedecl.ml[1068,39115+35]..[1068,39115+36])
                                Ppat_any
                            ]
                      pattern (typing/typedecl.ml[1068,39115+38]..[1068,39115+39]) ghost
                        Ppat_construct "[]" (typing/typedecl.ml[1068,39115+38]..[1068,39115+39]) ghost
                        None
                    ]
              expression (typing/typedecl.ml[1068,39115+43]..[1068,39115+45])
                Pexp_ident "tl" (typing/typedecl.ml[1068,39115+43]..[1068,39115+45])
            <case>
              pattern (typing/typedecl.ml[1069,39161+18]..[1069,39161+19])
                Ppat_any
              expression (typing/typedecl.ml[1069,39161+23]..[1069,39161+35])
                Pexp_assert
                expression (typing/typedecl.ml[1069,39161+30]..[1069,39161+35])
                  Pexp_construct "false" (typing/typedecl.ml[1069,39161+30]..[1069,39161+35])
                  None
          ]
    ]
    expression (typing/typedecl.ml[1071,39214+14]..[1079,39593+36])
      Pexp_let Nonrec
      [
        <def>
          pattern (typing/typedecl.ml[1071,39214+18]..[1071,39214+22])
            Ppat_var "decl" (typing/typedecl.ml[1071,39214+18]..[1071,39214+22])
          expression (typing/typedecl.ml[1071,39214+25]..[1071,39214+56])
            Pexp_apply
            expression (typing/typedecl.ml[1071,39214+25]..[1071,39214+51])
              Pexp_ident "Ctype.instance_declaration" (typing/typedecl.ml[1071,39214+25]..[1071,39214+51])
            [
              <arg>
              Nolabel
                expression (typing/typedecl.ml[1071,39214+52]..[1071,39214+56])
                  Pexp_ident "decl" (typing/typedecl.ml[1071,39214+52]..[1071,39214+56])
            ]
      ]
      expression (typing/typedecl.ml[1072,39274+14]..[1079,39593+36])
        Pexp_sequence
        expression (typing/typedecl.ml[1072,39274+14]..[1072,39274+68])
          Pexp_assert
          expression (typing/typedecl.ml[1072,39274+21]..[1072,39274+68])
            Pexp_apply
            expression (typing/typedecl.ml[1072,39274+51]..[1072,39274+52])
              Pexp_ident "=" (typing/typedecl.ml[1072,39274+51]..[1072,39274+52])
            [
              <arg>
              Nolabel
                expression (typing/typedecl.ml[1072,39274+22]..[1072,39274+50])
                  Pexp_apply
                  expression (typing/typedecl.ml[1072,39274+22]..[1072,39274+33])
                    Pexp_ident "List.length" (typing/typedecl.ml[1072,39274+22]..[1072,39274+33])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1072,39274+34]..[1072,39274+50])
                        Pexp_field
                        expression (typing/typedecl.ml[1072,39274+34]..[1072,39274+38])
                          Pexp_ident "decl" (typing/typedecl.ml[1072,39274+34]..[1072,39274+38])
                        "type_params" (typing/typedecl.ml[1072,39274+39]..[1072,39274+50])
                  ]
              <arg>
              Nolabel
                expression (typing/typedecl.ml[1072,39274+53]..[1072,39274+67])
                  Pexp_apply
                  expression (typing/typedecl.ml[1072,39274+53]..[1072,39274+64])
                    Pexp_ident "List.length" (typing/typedecl.ml[1072,39274+53]..[1072,39274+64])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1072,39274+65]..[1072,39274+67])
                        Pexp_ident "tl" (typing/typedecl.ml[1072,39274+65]..[1072,39274+67])
                  ]
            ]
        expression (typing/typedecl.ml[1073,39344+14]..[1079,39593+36])
          Pexp_sequence
          expression (typing/typedecl.ml[1073,39344+14]..[1073,39344+62])
            Pexp_apply
            expression (typing/typedecl.ml[1073,39344+14]..[1073,39344+24])
              Pexp_ident "List.iter2" (typing/typedecl.ml[1073,39344+14]..[1073,39344+24])
            [
              <arg>
              Nolabel
                expression (typing/typedecl.ml[1073,39344+25]..[1073,39344+42])
                  Pexp_apply
                  expression (typing/typedecl.ml[1073,39344+26]..[1073,39344+37])
                    Pexp_ident "Ctype.unify" (typing/typedecl.ml[1073,39344+26]..[1073,39344+37])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1073,39344+38]..[1073,39344+41])
                        Pexp_ident "env" (typing/typedecl.ml[1073,39344+38]..[1073,39344+41])
                  ]
              <arg>
              Nolabel
                expression (typing/typedecl.ml[1073,39344+43]..[1073,39344+59])
                  Pexp_field
                  expression (typing/typedecl.ml[1073,39344+43]..[1073,39344+47])
                    Pexp_ident "decl" (typing/typedecl.ml[1073,39344+43]..[1073,39344+47])
                  "type_params" (typing/typedecl.ml[1073,39344+48]..[1073,39344+59])
              <arg>
              Nolabel
                expression (typing/typedecl.ml[1073,39344+60]..[1073,39344+62])
                  Pexp_ident "tl" (typing/typedecl.ml[1073,39344+60]..[1073,39344+62])
            ]
          expression (typing/typedecl.ml[1074,39408+14]..[1079,39593+36])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/typedecl.ml[1074,39408+18]..[1074,39408+22])
                  Ppat_var "lbls" (typing/typedecl.ml[1074,39408+18]..[1074,39408+22])
                expression (typing/typedecl.ml[1075,39433+16]..[1077,39540+35])
                  Pexp_match
                  expression (typing/typedecl.ml[1075,39433+22]..[1075,39433+36])
                    Pexp_field
                    expression (typing/typedecl.ml[1075,39433+22]..[1075,39433+26])
                      Pexp_ident "decl" (typing/typedecl.ml[1075,39433+22]..[1075,39433+26])
                    "type_kind" (typing/typedecl.ml[1075,39433+27]..[1075,39433+36])
                  [
                    <case>
                      pattern (typing/typedecl.ml[1076,39475+18]..[1076,39475+56])
                        Ppat_construct "Type_record" (typing/typedecl.ml[1076,39475+18]..[1076,39475+29])
                        Some
                          []
                          pattern (typing/typedecl.ml[1076,39475+30]..[1076,39475+56])
                            Ppat_tuple
                            [
                              pattern (typing/typedecl.ml[1076,39475+31]..[1076,39475+35])
                                Ppat_var "lbls" (typing/typedecl.ml[1076,39475+31]..[1076,39475+35])
                              pattern (typing/typedecl.ml[1076,39475+37]..[1076,39475+55])
                                Ppat_construct "Record_extension" (typing/typedecl.ml[1076,39475+37]..[1076,39475+53])
                                Some
                                  []
                                  pattern (typing/typedecl.ml[1076,39475+54]..[1076,39475+55])
                                    Ppat_any
                            ]
                      expression (typing/typedecl.ml[1076,39475+60]..[1076,39475+64])
                        Pexp_ident "lbls" (typing/typedecl.ml[1076,39475+60]..[1076,39475+64])
                    <case>
                      pattern (typing/typedecl.ml[1077,39540+18]..[1077,39540+19])
                        Ppat_any
                      expression (typing/typedecl.ml[1077,39540+23]..[1077,39540+35])
                        Pexp_assert
                        expression (typing/typedecl.ml[1077,39540+30]..[1077,39540+35])
                          Pexp_construct "false" (typing/typedecl.ml[1077,39540+30]..[1077,39540+35])
                          None
                  ]
            ]
            expression (typing/typedecl.ml[1079,39593+14]..[1079,39593+36])
              Pexp_construct "Types.Cstr_record" (typing/typedecl.ml[1079,39593+14]..[1079,39593+31])
              Some
                expression (typing/typedecl.ml[1079,39593+32]..[1079,39593+36])
                  Pexp_ident "lbls" (typing/typedecl.ml[1079,39593+32]..[1079,39593+36])
                                                                      ]
                                                                ]
                                                                expression (typing/typedecl.ml[1081,39641+8]..[1081,39641+46])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (typing/typedecl.ml[1081,39641+8]..[1081,39641+12])
                                                                      Pexp_ident "args" (typing/typedecl.ml[1081,39641+8]..[1081,39641+12])
                                                                    expression (typing/typedecl.ml[1081,39641+14]..[1081,39641+22])
                                                                      Pexp_ident "ret_type" (typing/typedecl.ml[1081,39641+14]..[1081,39641+22])
                                                                    expression (typing/typedecl.ml[1081,39641+24]..[1081,39641+46])
                                                                      Pexp_construct "Text_rebind" (typing/typedecl.ml[1081,39641+24]..[1081,39641+35])
                                                                      Some
expression (typing/typedecl.ml[1081,39641+35]..[1081,39641+46])
  Pexp_tuple
  [
    expression (typing/typedecl.ml[1081,39641+36]..[1081,39641+40])
      Pexp_ident "path" (typing/typedecl.ml[1081,39641+36]..[1081,39641+40])
    expression (typing/typedecl.ml[1081,39641+42]..[1081,39641+45])
      Pexp_ident "lid" (typing/typedecl.ml[1081,39641+42]..[1081,39641+45])
  ]
                                                                  ]
                                ]
                          ]
                          expression (typing/typedecl.ml[1083,39693+2]..[1099,40155+56])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typedecl.ml[1083,39693+6]..[1083,39693+9])
                                  Ppat_var "ext" (typing/typedecl.ml[1083,39693+6]..[1083,39693+9])
                                expression (typing/typedecl.ml[1084,39705+4]..[1092,40006+5])
                                  Pexp_record
                                  [
                                    "ext_type_path" (typing/typedecl.ml[1084,39705+6]..[1084,39705+19])
                                      expression (typing/typedecl.ml[1084,39705+22]..[1084,39705+31])
                                        Pexp_ident "type_path" (typing/typedecl.ml[1084,39705+22]..[1084,39705+31])
                                    "ext_type_params" (typing/typedecl.ml[1085,39738+6]..[1085,39738+21])
                                      expression (typing/typedecl.ml[1085,39738+24]..[1085,39738+37])
                                        Pexp_ident "typext_params" (typing/typedecl.ml[1085,39738+24]..[1085,39738+37])
                                    "ext_args" (typing/typedecl.ml[1086,39777+6]..[1086,39777+14])
                                      expression (typing/typedecl.ml[1086,39777+17]..[1086,39777+21])
                                        Pexp_ident "args" (typing/typedecl.ml[1086,39777+17]..[1086,39777+21])
                                    "ext_ret_type" (typing/typedecl.ml[1087,39800+6]..[1087,39800+18])
                                      expression (typing/typedecl.ml[1087,39800+21]..[1087,39800+29])
                                        Pexp_ident "ret_type" (typing/typedecl.ml[1087,39800+21]..[1087,39800+29])
                                    "ext_private" (typing/typedecl.ml[1088,39831+6]..[1088,39831+17])
                                      expression (typing/typedecl.ml[1088,39831+20]..[1088,39831+24])
                                        Pexp_ident "priv" (typing/typedecl.ml[1088,39831+20]..[1088,39831+24])
                                    "Types.ext_loc" (typing/typedecl.ml[1089,39857+6]..[1089,39857+19])
                                      expression (typing/typedecl.ml[1089,39857+22]..[1089,39857+35])
                                        Pexp_field
                                        expression (typing/typedecl.ml[1089,39857+22]..[1089,39857+26])
                                          Pexp_ident "sext" (typing/typedecl.ml[1089,39857+22]..[1089,39857+26])
                                        "pext_loc" (typing/typedecl.ml[1089,39857+27]..[1089,39857+35])
                                    "Types.ext_attributes" (typing/typedecl.ml[1090,39894+6]..[1090,39894+26])
                                      expression (typing/typedecl.ml[1090,39894+29]..[1090,39894+49])
                                        Pexp_field
                                        expression (typing/typedecl.ml[1090,39894+29]..[1090,39894+33])
                                          Pexp_ident "sext" (typing/typedecl.ml[1090,39894+29]..[1090,39894+33])
                                        "pext_attributes" (typing/typedecl.ml[1090,39894+34]..[1090,39894+49])
                                    "ext_uid" (typing/typedecl.ml[1091,39945+6]..[1091,39945+13])
                                      expression (typing/typedecl.ml[1091,39945+16]..[1091,39945+59])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[1091,39945+16]..[1091,39945+22])
                                          Pexp_ident "Uid.mk" (typing/typedecl.ml[1091,39945+16]..[1091,39945+22])
                                        [
                                          <arg>
                                          Labelled "current_unit"
                                            expression (typing/typedecl.ml[1091,39945+37]..[1091,39945+59])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[1091,39945+38]..[1091,39945+55])
                                                Pexp_ident "Env.get_unit_name" (typing/typedecl.ml[1091,39945+38]..[1091,39945+55])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[1091,39945+56]..[1091,39945+58])
                                                    Pexp_construct "()" (typing/typedecl.ml[1091,39945+56]..[1091,39945+58])
                                                    None
                                              ]
                                        ]
                                  ]
                                  None
                            ]
                            expression (typing/typedecl.ml[1094,40017+4]..[1099,40155+56])
                              Pexp_record
                              [
                                "ext_id" (typing/typedecl.ml[1094,40017+6]..[1094,40017+12])
                                  expression (typing/typedecl.ml[1094,40017+15]..[1094,40017+17])
                                    Pexp_ident "id" (typing/typedecl.ml[1094,40017+15]..[1094,40017+17])
                                "ext_name" (typing/typedecl.ml[1095,40036+6]..[1095,40036+14])
                                  expression (typing/typedecl.ml[1095,40036+17]..[1095,40036+31])
                                    Pexp_field
                                    expression (typing/typedecl.ml[1095,40036+17]..[1095,40036+21])
                                      Pexp_ident "sext" (typing/typedecl.ml[1095,40036+17]..[1095,40036+21])
                                    "pext_name" (typing/typedecl.ml[1095,40036+22]..[1095,40036+31])
                                "ext_type" (typing/typedecl.ml[1096,40069+6]..[1096,40069+14])
                                  expression (typing/typedecl.ml[1096,40069+17]..[1096,40069+20])
                                    Pexp_ident "ext" (typing/typedecl.ml[1096,40069+17]..[1096,40069+20])
                                "ext_kind" (typing/typedecl.ml[1097,40091+6]..[1097,40091+14])
                                  expression (typing/typedecl.ml[1097,40091+17]..[1097,40091+21])
                                    Pexp_ident "kind" (typing/typedecl.ml[1097,40091+17]..[1097,40091+21])
                                "Typedtree.ext_loc" (typing/typedecl.ml[1098,40114+6]..[1098,40114+23])
                                  expression (typing/typedecl.ml[1098,40114+26]..[1098,40114+39])
                                    Pexp_field
                                    expression (typing/typedecl.ml[1098,40114+26]..[1098,40114+30])
                                      Pexp_ident "sext" (typing/typedecl.ml[1098,40114+26]..[1098,40114+30])
                                    "pext_loc" (typing/typedecl.ml[1098,40114+31]..[1098,40114+39])
                                "Typedtree.ext_attributes" (typing/typedecl.ml[1099,40155+6]..[1099,40155+30])
                                  expression (typing/typedecl.ml[1099,40155+33]..[1099,40155+53])
                                    Pexp_field
                                    expression (typing/typedecl.ml[1099,40155+33]..[1099,40155+37])
                                      Pexp_ident "sext" (typing/typedecl.ml[1099,40155+33]..[1099,40155+37])
                                    "pext_attributes" (typing/typedecl.ml[1099,40155+38]..[1099,40155+53])
                              ]
                              None
    ]
  structure_item (typing/typedecl.ml[1101,40213+0]..[1105,40442+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1101,40213+4]..[1101,40213+32])
          Ppat_var "transl_extension_constructor" (typing/typedecl.ml[1101,40213+4]..[1101,40213+32])
        expression (typing/typedecl.ml[1101,40213+33]..[1105,40442+32]) ghost
          Pexp_fun
          Labelled "scope"
          None
          pattern (typing/typedecl.ml[1101,40213+34]..[1101,40213+39])
            Ppat_var "scope" (typing/typedecl.ml[1101,40213+34]..[1101,40213+39])
          expression (typing/typedecl.ml[1101,40213+40]..[1105,40442+32]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[1101,40213+40]..[1101,40213+43])
              Ppat_var "env" (typing/typedecl.ml[1101,40213+40]..[1101,40213+43])
            expression (typing/typedecl.ml[1101,40213+44]..[1105,40442+32]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[1101,40213+44]..[1101,40213+53])
                Ppat_var "type_path" (typing/typedecl.ml[1101,40213+44]..[1101,40213+53])
              expression (typing/typedecl.ml[1101,40213+54]..[1105,40442+32]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[1101,40213+54]..[1101,40213+65])
                  Ppat_var "type_params" (typing/typedecl.ml[1101,40213+54]..[1101,40213+65])
                expression (typing/typedecl.ml[1102,40279+4]..[1105,40442+32]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typedecl.ml[1102,40279+4]..[1102,40279+17])
                    Ppat_var "typext_params" (typing/typedecl.ml[1102,40279+4]..[1102,40279+17])
                  expression (typing/typedecl.ml[1102,40279+18]..[1105,40442+32]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typedecl.ml[1102,40279+18]..[1102,40279+22])
                      Ppat_var "priv" (typing/typedecl.ml[1102,40279+18]..[1102,40279+22])
                    expression (typing/typedecl.ml[1102,40279+23]..[1105,40442+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typedecl.ml[1102,40279+23]..[1102,40279+27])
                        Ppat_var "sext" (typing/typedecl.ml[1102,40279+23]..[1102,40279+27])
                      expression (typing/typedecl.ml[1103,40309+2]..[1105,40442+32])
                        Pexp_apply
                        expression (typing/typedecl.ml[1103,40309+2]..[1103,40309+34])
                          Pexp_ident "Builtin_attributes.warning_scope" (typing/typedecl.ml[1103,40309+2]..[1103,40309+34])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1103,40309+35]..[1103,40309+55])
                              Pexp_field
                              expression (typing/typedecl.ml[1103,40309+35]..[1103,40309+39])
                                Pexp_ident "sext" (typing/typedecl.ml[1103,40309+35]..[1103,40309+39])
                              "pext_attributes" (typing/typedecl.ml[1103,40309+40]..[1103,40309+55])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1104,40365+4]..[1105,40442+32])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typedecl.ml[1104,40365+9]..[1104,40365+11])
                                Ppat_construct "()" (typing/typedecl.ml[1104,40365+9]..[1104,40365+11])
                                None
                              expression (typing/typedecl.ml[1104,40365+15]..[1105,40442+31])
                                Pexp_apply
                                expression (typing/typedecl.ml[1104,40365+15]..[1104,40365+43])
                                  Pexp_ident "transl_extension_constructor" (typing/typedecl.ml[1104,40365+15]..[1104,40365+43])
                                [
                                  <arg>
                                  Labelled "scope"
                                    expression (typing/typedecl.ml[1104,40365+45]..[1104,40365+50])
                                      Pexp_ident "scope" (typing/typedecl.ml[1104,40365+45]..[1104,40365+50])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1104,40365+51]..[1104,40365+54])
                                      Pexp_ident "env" (typing/typedecl.ml[1104,40365+51]..[1104,40365+54])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1104,40365+55]..[1104,40365+64])
                                      Pexp_ident "type_path" (typing/typedecl.ml[1104,40365+55]..[1104,40365+64])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1104,40365+65]..[1104,40365+76])
                                      Pexp_ident "type_params" (typing/typedecl.ml[1104,40365+65]..[1104,40365+76])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1105,40442+8]..[1105,40442+21])
                                      Pexp_ident "typext_params" (typing/typedecl.ml[1105,40442+8]..[1105,40442+21])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1105,40442+22]..[1105,40442+26])
                                      Pexp_ident "priv" (typing/typedecl.ml[1105,40442+22]..[1105,40442+26])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1105,40442+27]..[1105,40442+31])
                                      Pexp_ident "sext" (typing/typedecl.ml[1105,40442+27]..[1105,40442+31])
                                ]
                        ]
    ]
  structure_item (typing/typedecl.ml[1107,40476+0]..[1110,40548+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1107,40476+4]..[1107,40476+13])
          Ppat_var "is_rebind" (typing/typedecl.ml[1107,40476+4]..[1107,40476+13])
        expression (typing/typedecl.ml[1107,40476+14]..[1110,40548+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1107,40476+14]..[1107,40476+17])
            Ppat_var "ext" (typing/typedecl.ml[1107,40476+14]..[1107,40476+17])
          expression (typing/typedecl.ml[1108,40496+2]..[1110,40548+24])
            Pexp_match
            expression (typing/typedecl.ml[1108,40496+8]..[1108,40496+20])
              Pexp_field
              expression (typing/typedecl.ml[1108,40496+8]..[1108,40496+11])
                Pexp_ident "ext" (typing/typedecl.ml[1108,40496+8]..[1108,40496+11])
              "ext_kind" (typing/typedecl.ml[1108,40496+12]..[1108,40496+20])
            [
              <case>
                pattern (typing/typedecl.ml[1109,40522+4]..[1109,40522+17])
                  Ppat_construct "Text_rebind" (typing/typedecl.ml[1109,40522+4]..[1109,40522+15])
                  Some
                    []
                    pattern (typing/typedecl.ml[1109,40522+16]..[1109,40522+17])
                      Ppat_any
                expression (typing/typedecl.ml[1109,40522+21]..[1109,40522+25])
                  Pexp_construct "true" (typing/typedecl.ml[1109,40522+21]..[1109,40522+25])
                  None
              <case>
                pattern (typing/typedecl.ml[1110,40548+4]..[1110,40548+15])
                  Ppat_construct "Text_decl" (typing/typedecl.ml[1110,40548+4]..[1110,40548+13])
                  Some
                    []
                    pattern (typing/typedecl.ml[1110,40548+14]..[1110,40548+15])
                      Ppat_any
                expression (typing/typedecl.ml[1110,40548+19]..[1110,40548+24])
                  Pexp_construct "false" (typing/typedecl.ml[1110,40548+19]..[1110,40548+24])
                  None
            ]
    ]
  structure_item (typing/typedecl.ml[1112,40574+0]..[1217,44359+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1112,40574+4]..[1112,40574+25])
          Ppat_var "transl_type_extension" (typing/typedecl.ml[1112,40574+4]..[1112,40574+25])
        expression (typing/typedecl.ml[1112,40574+26]..[1217,44359+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1112,40574+26]..[1112,40574+32])
            Ppat_var "extend" (typing/typedecl.ml[1112,40574+26]..[1112,40574+32])
          expression (typing/typedecl.ml[1112,40574+33]..[1217,44359+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[1112,40574+33]..[1112,40574+36])
              Ppat_var "env" (typing/typedecl.ml[1112,40574+33]..[1112,40574+36])
            expression (typing/typedecl.ml[1112,40574+37]..[1217,44359+19]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[1112,40574+37]..[1112,40574+40])
                Ppat_var "loc" (typing/typedecl.ml[1112,40574+37]..[1112,40574+40])
              expression (typing/typedecl.ml[1112,40574+41]..[1217,44359+19]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[1112,40574+41]..[1112,40574+47])
                  Ppat_var "styext" (typing/typedecl.ml[1112,40574+41]..[1112,40574+47])
                expression (typing/typedecl.ml[1115,40754+2]..[1217,44359+19])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typedecl.ml[1115,40754+6]..[1115,40754+11])
                        Ppat_var "scope" (typing/typedecl.ml[1115,40754+6]..[1115,40754+11])
                      expression (typing/typedecl.ml[1115,40754+14]..[1115,40754+35])
                        Pexp_apply
                        expression (typing/typedecl.ml[1115,40754+14]..[1115,40754+32])
                          Pexp_ident "Ctype.create_scope" (typing/typedecl.ml[1115,40754+14]..[1115,40754+32])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1115,40754+33]..[1115,40754+35])
                              Pexp_construct "()" (typing/typedecl.ml[1115,40754+33]..[1115,40754+35])
                              None
                        ]
                  ]
                  expression (typing/typedecl.ml[1116,40793+2]..[1217,44359+19])
                    Pexp_sequence
                    expression (typing/typedecl.ml[1116,40793+2]..[1116,40793+24])
                      Pexp_apply
                      expression (typing/typedecl.ml[1116,40793+2]..[1116,40793+22])
                        Pexp_ident "reset_type_variables" (typing/typedecl.ml[1116,40793+2]..[1116,40793+22])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1116,40793+22]..[1116,40793+24])
                            Pexp_construct "()" (typing/typedecl.ml[1116,40793+22]..[1116,40793+24])
                            None
                      ]
                    expression (typing/typedecl.ml[1117,40819+2]..[1217,44359+19])
                      Pexp_sequence
                      expression (typing/typedecl.ml[1117,40819+2]..[1117,40819+19])
                        Pexp_apply
                        expression (typing/typedecl.ml[1117,40819+2]..[1117,40819+17])
                          Pexp_ident "Ctype.begin_def" (typing/typedecl.ml[1117,40819+2]..[1117,40819+17])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1117,40819+17]..[1117,40819+19])
                              Pexp_construct "()" (typing/typedecl.ml[1117,40819+17]..[1117,40819+19])
                              None
                        ]
                      expression (typing/typedecl.ml[1118,40840+2]..[1217,44359+19])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typedecl.ml[1118,40840+6]..[1118,40840+26])
                              Ppat_tuple
                              [
                                pattern (typing/typedecl.ml[1118,40840+6]..[1118,40840+15])
                                  Ppat_var "type_path" (typing/typedecl.ml[1118,40840+6]..[1118,40840+15])
                                pattern (typing/typedecl.ml[1118,40840+17]..[1118,40840+26])
                                  Ppat_var "type_decl" (typing/typedecl.ml[1118,40840+17]..[1118,40840+26])
                              ]
                            expression (typing/typedecl.ml[1119,40869+4]..[1120,40905+44])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typedecl.ml[1119,40869+8]..[1119,40869+11])
                                    Ppat_var "lid" (typing/typedecl.ml[1119,40869+8]..[1119,40869+11])
                                  expression (typing/typedecl.ml[1119,40869+14]..[1119,40869+32])
                                    Pexp_field
                                    expression (typing/typedecl.ml[1119,40869+14]..[1119,40869+20])
                                      Pexp_ident "styext" (typing/typedecl.ml[1119,40869+14]..[1119,40869+20])
                                    "ptyext_path" (typing/typedecl.ml[1119,40869+21]..[1119,40869+32])
                              ]
                              expression (typing/typedecl.ml[1120,40905+4]..[1120,40905+44])
                                Pexp_apply
                                expression (typing/typedecl.ml[1120,40905+4]..[1120,40905+19])
                                  Pexp_ident "Env.lookup_type" (typing/typedecl.ml[1120,40905+4]..[1120,40905+19])
                                [
                                  <arg>
                                  Labelled "loc"
                                    expression (typing/typedecl.ml[1120,40905+25]..[1120,40905+32])
                                      Pexp_field
                                      expression (typing/typedecl.ml[1120,40905+25]..[1120,40905+28])
                                        Pexp_ident "lid" (typing/typedecl.ml[1120,40905+25]..[1120,40905+28])
                                      "loc" (typing/typedecl.ml[1120,40905+29]..[1120,40905+32])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1120,40905+33]..[1120,40905+40])
                                      Pexp_field
                                      expression (typing/typedecl.ml[1120,40905+33]..[1120,40905+36])
                                        Pexp_ident "lid" (typing/typedecl.ml[1120,40905+33]..[1120,40905+36])
                                      "txt" (typing/typedecl.ml[1120,40905+37]..[1120,40905+40])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1120,40905+41]..[1120,40905+44])
                                      Pexp_ident "env" (typing/typedecl.ml[1120,40905+41]..[1120,40905+44])
                                ]
                        ]
                        expression (typing/typedecl.ml[1122,40955+2]..[1217,44359+19])
                          Pexp_sequence
                          expression (typing/typedecl.ml[1122,40955+2]..[1141,41587+5])
                            Pexp_match
                            expression (typing/typedecl.ml[1123,40963+10]..[1123,40963+29])
                              Pexp_field
                              expression (typing/typedecl.ml[1123,40963+10]..[1123,40963+19])
                                Pexp_ident "type_decl" (typing/typedecl.ml[1123,40963+10]..[1123,40963+19])
                              "type_kind" (typing/typedecl.ml[1123,40963+20]..[1123,40963+29])
                            [
                              <case>
                                pattern (typing/typedecl.ml[1124,40998+6]..[1124,40998+15])
                                  Ppat_construct "Type_open" (typing/typedecl.ml[1124,40998+6]..[1124,40998+15])
                                  None
                                expression (typing/typedecl.ml[1124,40998+19]..[1138,41508+9])
                                  Pexp_match
                                  expression (typing/typedecl.ml[1125,41023+14]..[1125,41023+36])
                                    Pexp_field
                                    expression (typing/typedecl.ml[1125,41023+14]..[1125,41023+23])
                                      Pexp_ident "type_decl" (typing/typedecl.ml[1125,41023+14]..[1125,41023+23])
                                    "type_private" (typing/typedecl.ml[1125,41023+24]..[1125,41023+36])
                                  [
                                    <case>
                                      pattern (typing/typedecl.ml[1126,41065+10]..[1126,41065+17])
                                        Ppat_construct "Private" (typing/typedecl.ml[1126,41065+10]..[1126,41065+17])
                                        None
                                      <when>
                                        expression (typing/typedecl.ml[1126,41065+23]..[1126,41065+29])
                                          Pexp_ident "extend" (typing/typedecl.ml[1126,41065+23]..[1126,41065+29])
                                      expression (typing/typedecl.ml[1126,41065+33]..[1136,41476+13])
                                        Pexp_match
                                        expression (typing/typedecl.ml[1128,41122+14]..[1131,41270+42])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1128,41122+14]..[1128,41122+23])
                                            Pexp_ident "List.find" (typing/typedecl.ml[1128,41122+14]..[1128,41122+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1129,41146+16]..[1130,41206+63])
                                                Pexp_function
                                                [
                                                  <case>
                                                    pattern (typing/typedecl.ml[1129,41146+26]..[1129,41146+51])
                                                      Ppat_record Closed
                                                      [
                                                        "pext_kind" (typing/typedecl.ml[1129,41146+27]..[1129,41146+36])
                                                          pattern (typing/typedecl.ml[1129,41146+39]..[1129,41146+50])
                                                            Ppat_construct "Pext_decl" (typing/typedecl.ml[1129,41146+39]..[1129,41146+48])
                                                            Some
                                                              []
                                                              pattern (typing/typedecl.ml[1129,41146+49]..[1129,41146+50])
                                                                Ppat_any
                                                      ]
                                                    expression (typing/typedecl.ml[1129,41146+55]..[1129,41146+59])
                                                      Pexp_construct "true" (typing/typedecl.ml[1129,41146+55]..[1129,41146+59])
                                                      None
                                                  <case>
                                                    pattern (typing/typedecl.ml[1130,41206+26]..[1130,41206+53])
                                                      Ppat_record Closed
                                                      [
                                                        "pext_kind" (typing/typedecl.ml[1130,41206+27]..[1130,41206+36])
                                                          pattern (typing/typedecl.ml[1130,41206+39]..[1130,41206+52])
                                                            Ppat_construct "Pext_rebind" (typing/typedecl.ml[1130,41206+39]..[1130,41206+50])
                                                            Some
                                                              []
                                                              pattern (typing/typedecl.ml[1130,41206+51]..[1130,41206+52])
                                                                Ppat_any
                                                      ]
                                                    expression (typing/typedecl.ml[1130,41206+57]..[1130,41206+62])
                                                      Pexp_construct "false" (typing/typedecl.ml[1130,41206+57]..[1130,41206+62])
                                                      None
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1131,41270+16]..[1131,41270+42])
                                                Pexp_field
                                                expression (typing/typedecl.ml[1131,41270+16]..[1131,41270+22])
                                                  Pexp_ident "styext" (typing/typedecl.ml[1131,41270+16]..[1131,41270+22])
                                                "ptyext_constructors" (typing/typedecl.ml[1131,41270+23]..[1131,41270+42])
                                          ]
                                        [
                                          <case>
                                            pattern (typing/typedecl.ml[1133,41330+14]..[1133,41330+24])
                                              Ppat_record Closed
                                              [
                                                "pext_loc" (typing/typedecl.ml[1133,41330+15]..[1133,41330+23]) ghost
                                                  pattern (typing/typedecl.ml[1133,41330+15]..[1133,41330+23])
                                                    Ppat_var "pext_loc" (typing/typedecl.ml[1133,41330+15]..[1133,41330+23])
                                              ]
                                            expression (typing/typedecl.ml[1134,41358+16]..[1134,41358+77])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[1134,41358+16]..[1134,41358+21])
                                                Pexp_ident "raise" (typing/typedecl.ml[1134,41358+16]..[1134,41358+21])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[1134,41358+22]..[1134,41358+77])
                                                    Pexp_construct "Error" (typing/typedecl.ml[1134,41358+23]..[1134,41358+28])
                                                    Some
                                                      expression (typing/typedecl.ml[1134,41358+28]..[1134,41358+76])
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typedecl.ml[1134,41358+29]..[1134,41358+37])
                                                            Pexp_ident "pext_loc" (typing/typedecl.ml[1134,41358+29]..[1134,41358+37])
                                                          expression (typing/typedecl.ml[1134,41358+39]..[1134,41358+75])
                                                            Pexp_construct "Cannot_extend_private_type" (typing/typedecl.ml[1134,41358+39]..[1134,41358+65])
                                                            Some
                                                              expression (typing/typedecl.ml[1134,41358+66]..[1134,41358+75])
                                                                Pexp_ident "type_path" (typing/typedecl.ml[1134,41358+66]..[1134,41358+75])
                                                        ]
                                              ]
                                          <case>
                                            pattern (typing/typedecl.ml[1135,41436+14]..[1135,41436+33])
                                              Ppat_exception
                                              pattern (typing/typedecl.ml[1135,41436+24]..[1135,41436+33])
                                                Ppat_construct "Not_found" (typing/typedecl.ml[1135,41436+24]..[1135,41436+33])
                                                None
                                            expression (typing/typedecl.ml[1135,41436+37]..[1135,41436+39])
                                              Pexp_construct "()" (typing/typedecl.ml[1135,41436+37]..[1135,41436+39])
                                              None
                                        ]
                                    <case>
                                      pattern (typing/typedecl.ml[1137,41490+10]..[1137,41490+11])
                                        Ppat_any
                                      expression (typing/typedecl.ml[1137,41490+15]..[1137,41490+17])
                                        Pexp_construct "()" (typing/typedecl.ml[1137,41490+15]..[1137,41490+17])
                                        None
                                  ]
                              <case>
                                pattern (typing/typedecl.ml[1139,41518+6]..[1139,41518+7])
                                  Ppat_any
                                expression (typing/typedecl.ml[1140,41529+8]..[1140,41529+57])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[1140,41529+8]..[1140,41529+13])
                                    Pexp_ident "raise" (typing/typedecl.ml[1140,41529+8]..[1140,41529+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1140,41529+14]..[1140,41529+57])
                                        Pexp_construct "Error" (typing/typedecl.ml[1140,41529+15]..[1140,41529+20])
                                        Some
                                          expression (typing/typedecl.ml[1140,41529+20]..[1140,41529+56])
                                            Pexp_tuple
                                            [
                                              expression (typing/typedecl.ml[1140,41529+21]..[1140,41529+24])
                                                Pexp_ident "loc" (typing/typedecl.ml[1140,41529+21]..[1140,41529+24])
                                              expression (typing/typedecl.ml[1140,41529+26]..[1140,41529+55])
                                                Pexp_construct "Not_extensible_type" (typing/typedecl.ml[1140,41529+26]..[1140,41529+45])
                                                Some
                                                  expression (typing/typedecl.ml[1140,41529+46]..[1140,41529+55])
                                                    Pexp_ident "type_path" (typing/typedecl.ml[1140,41529+46]..[1140,41529+55])
                                            ]
                                  ]
                            ]
                          expression (typing/typedecl.ml[1142,41594+2]..[1217,44359+19])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typedecl.ml[1142,41594+6]..[1142,41594+19])
                                  Ppat_var "type_variance" (typing/typedecl.ml[1142,41594+6]..[1142,41594+19])
                                expression (typing/typedecl.ml[1143,41616+4]..[1146,41737+36])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[1143,41616+4]..[1143,41616+12])
                                    Pexp_ident "List.map" (typing/typedecl.ml[1143,41616+4]..[1143,41616+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1143,41616+13]..[1145,41694+42])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/typedecl.ml[1143,41616+18]..[1143,41616+19])
                                          Ppat_var "v" (typing/typedecl.ml[1143,41616+18]..[1143,41616+19])
                                        expression (typing/typedecl.ml[1144,41639+16]..[1145,41694+41])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typedecl.ml[1144,41639+20]..[1144,41639+28])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/typedecl.ml[1144,41639+21]..[1144,41639+23])
                                                    Ppat_var "co" (typing/typedecl.ml[1144,41639+21]..[1144,41639+23])
                                                  pattern (typing/typedecl.ml[1144,41639+25]..[1144,41639+27])
                                                    Ppat_var "cn" (typing/typedecl.ml[1144,41639+25]..[1144,41639+27])
                                                ]
                                              expression (typing/typedecl.ml[1144,41639+31]..[1144,41639+51])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[1144,41639+31]..[1144,41639+49])
                                                  Pexp_ident "Variance.get_upper" (typing/typedecl.ml[1144,41639+31]..[1144,41639+49])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[1144,41639+50]..[1144,41639+51])
                                                      Pexp_ident "v" (typing/typedecl.ml[1144,41639+50]..[1144,41639+51])
                                                ]
                                          ]
                                          expression (typing/typedecl.ml[1145,41694+18]..[1145,41694+41])
                                            Pexp_tuple
                                            [
                                              expression (typing/typedecl.ml[1145,41694+19]..[1145,41694+25])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[1145,41694+19]..[1145,41694+22])
                                                  Pexp_ident "not" (typing/typedecl.ml[1145,41694+19]..[1145,41694+22])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[1145,41694+23]..[1145,41694+25])
                                                      Pexp_ident "cn" (typing/typedecl.ml[1145,41694+23]..[1145,41694+25])
                                                ]
                                              expression (typing/typedecl.ml[1145,41694+27]..[1145,41694+33])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[1145,41694+27]..[1145,41694+30])
                                                  Pexp_ident "not" (typing/typedecl.ml[1145,41694+27]..[1145,41694+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[1145,41694+31]..[1145,41694+33])
                                                      Pexp_ident "co" (typing/typedecl.ml[1145,41694+31]..[1145,41694+33])
                                                ]
                                              expression (typing/typedecl.ml[1145,41694+35]..[1145,41694+40])
                                                Pexp_construct "false" (typing/typedecl.ml[1145,41694+35]..[1145,41694+40])
                                                None
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1146,41737+13]..[1146,41737+36])
                                        Pexp_field
                                        expression (typing/typedecl.ml[1146,41737+13]..[1146,41737+22])
                                          Pexp_ident "type_decl" (typing/typedecl.ml[1146,41737+13]..[1146,41737+22])
                                        "type_variance" (typing/typedecl.ml[1146,41737+23]..[1146,41737+36])
                                  ]
                            ]
                            expression (typing/typedecl.ml[1148,41779+2]..[1217,44359+19])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typedecl.ml[1148,41779+6]..[1148,41779+9])
                                    Ppat_var "err" (typing/typedecl.ml[1148,41779+6]..[1148,41779+9])
                                  expression (typing/typedecl.ml[1149,41791+4]..[1156,42094+46])
                                    Pexp_ifthenelse
                                    expression (typing/typedecl.ml[1149,41791+7]..[1149,41791+63])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[1149,41791+28]..[1149,41791+30])
                                        Pexp_ident "<>" (typing/typedecl.ml[1149,41791+28]..[1149,41791+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1149,41791+7]..[1149,41791+27])
                                            Pexp_field
                                            expression (typing/typedecl.ml[1149,41791+7]..[1149,41791+16])
                                              Pexp_ident "type_decl" (typing/typedecl.ml[1149,41791+7]..[1149,41791+16])
                                            "type_arity" (typing/typedecl.ml[1149,41791+17]..[1149,41791+27])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1149,41791+31]..[1149,41791+63])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[1149,41791+31]..[1149,41791+42])
                                              Pexp_ident "List.length" (typing/typedecl.ml[1149,41791+31]..[1149,41791+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1149,41791+43]..[1149,41791+63])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[1149,41791+43]..[1149,41791+49])
                                                    Pexp_ident "styext" (typing/typedecl.ml[1149,41791+43]..[1149,41791+49])
                                                  "ptyext_params" (typing/typedecl.ml[1149,41791+50]..[1149,41791+63])
                                            ]
                                      ]
                                    expression (typing/typedecl.ml[1150,41860+6]..[1150,41860+28])
                                      Pexp_construct "Some" (typing/typedecl.ml[1150,41860+6]..[1150,41860+10])
                                      Some
                                        expression (typing/typedecl.ml[1150,41860+11]..[1150,41860+28])
                                          Pexp_construct "Includecore.Arity" (typing/typedecl.ml[1150,41860+11]..[1150,41860+28])
                                          None
                                    Some
                                      expression (typing/typedecl.ml[1152,41898+6]..[1156,42094+46])
                                        Pexp_ifthenelse
                                        expression (typing/typedecl.ml[1152,41898+9]..[1155,42023+70])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1152,41898+9]..[1152,41898+22])
                                            Pexp_ident "List.for_all2" (typing/typedecl.ml[1152,41898+9]..[1152,41898+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1153,41921+11]..[1153,41921+76])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/typedecl.ml[1153,41921+16]..[1153,41921+27])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typedecl.ml[1153,41921+17]..[1153,41921+19])
                                                      Ppat_var "c1" (typing/typedecl.ml[1153,41921+17]..[1153,41921+19])
                                                    pattern (typing/typedecl.ml[1153,41921+21]..[1153,41921+23])
                                                      Ppat_var "n1" (typing/typedecl.ml[1153,41921+21]..[1153,41921+23])
                                                    pattern (typing/typedecl.ml[1153,41921+25]..[1153,41921+26])
                                                      Ppat_any
                                                  ]
                                                expression (typing/typedecl.ml[1153,41921+28]..[1153,41921+75]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/typedecl.ml[1153,41921+28]..[1153,41921+39])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/typedecl.ml[1153,41921+29]..[1153,41921+31])
                                                        Ppat_var "c2" (typing/typedecl.ml[1153,41921+29]..[1153,41921+31])
                                                      pattern (typing/typedecl.ml[1153,41921+33]..[1153,41921+35])
                                                        Ppat_var "n2" (typing/typedecl.ml[1153,41921+33]..[1153,41921+35])
                                                      pattern (typing/typedecl.ml[1153,41921+37]..[1153,41921+38])
                                                        Ppat_any
                                                    ]
                                                  expression (typing/typedecl.ml[1153,41921+43]..[1153,41921+75])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[1153,41921+58]..[1153,41921+60])
                                                      Pexp_ident "&&" (typing/typedecl.ml[1153,41921+58]..[1153,41921+60])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[1153,41921+43]..[1153,41921+57])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[1153,41921+51]..[1153,41921+53])
                                                            Pexp_ident "||" (typing/typedecl.ml[1153,41921+51]..[1153,41921+53])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1153,41921+44]..[1153,41921+50])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[1153,41921+44]..[1153,41921+47])
                                                                  Pexp_ident "not" (typing/typedecl.ml[1153,41921+44]..[1153,41921+47])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[1153,41921+48]..[1153,41921+50])
                                                                      Pexp_ident "c2" (typing/typedecl.ml[1153,41921+48]..[1153,41921+50])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1153,41921+54]..[1153,41921+56])
                                                                Pexp_ident "c1" (typing/typedecl.ml[1153,41921+54]..[1153,41921+56])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[1153,41921+61]..[1153,41921+75])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[1153,41921+69]..[1153,41921+71])
                                                            Pexp_ident "||" (typing/typedecl.ml[1153,41921+69]..[1153,41921+71])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1153,41921+62]..[1153,41921+68])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[1153,41921+62]..[1153,41921+65])
                                                                  Pexp_ident "not" (typing/typedecl.ml[1153,41921+62]..[1153,41921+65])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[1153,41921+66]..[1153,41921+68])
                                                                      Pexp_ident "n2" (typing/typedecl.ml[1153,41921+66]..[1153,41921+68])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1153,41921+72]..[1153,41921+74])
                                                                Pexp_ident "n1" (typing/typedecl.ml[1153,41921+72]..[1153,41921+74])
                                                          ]
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1154,41998+11]..[1154,41998+24])
                                                Pexp_ident "type_variance" (typing/typedecl.ml[1154,41998+11]..[1154,41998+24])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1155,42023+11]..[1155,42023+70])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[1155,42023+12]..[1155,42023+48])
                                                  Pexp_ident "Typedecl_variance.variance_of_params" (typing/typedecl.ml[1155,42023+12]..[1155,42023+48])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[1155,42023+49]..[1155,42023+69])
                                                      Pexp_field
                                                      expression (typing/typedecl.ml[1155,42023+49]..[1155,42023+55])
                                                        Pexp_ident "styext" (typing/typedecl.ml[1155,42023+49]..[1155,42023+55])
                                                      "ptyext_params" (typing/typedecl.ml[1155,42023+56]..[1155,42023+69])
                                                ]
                                          ]
                                        expression (typing/typedecl.ml[1156,42094+11]..[1156,42094+15])
                                          Pexp_construct "None" (typing/typedecl.ml[1156,42094+11]..[1156,42094+15])
                                          None
                                        Some
                                          expression (typing/typedecl.ml[1156,42094+21]..[1156,42094+46])
                                            Pexp_construct "Some" (typing/typedecl.ml[1156,42094+21]..[1156,42094+25])
                                            Some
                                              expression (typing/typedecl.ml[1156,42094+26]..[1156,42094+46])
                                                Pexp_construct "Includecore.Variance" (typing/typedecl.ml[1156,42094+26]..[1156,42094+46])
                                                None
                              ]
                              expression (typing/typedecl.ml[1158,42146+2]..[1217,44359+19])
                                Pexp_sequence
                                expression (typing/typedecl.ml[1158,42146+2]..[1161,42261+5])
                                  Pexp_match
                                  expression (typing/typedecl.ml[1158,42146+14]..[1158,42146+17])
                                    Pexp_ident "err" (typing/typedecl.ml[1158,42146+14]..[1158,42146+17])
                                  [
                                    <case>
                                      pattern (typing/typedecl.ml[1159,42169+4]..[1159,42169+8])
                                        Ppat_construct "None" (typing/typedecl.ml[1159,42169+4]..[1159,42169+8])
                                        None
                                      expression (typing/typedecl.ml[1159,42169+12]..[1159,42169+14])
                                        Pexp_construct "()" (typing/typedecl.ml[1159,42169+12]..[1159,42169+14])
                                        None
                                    <case>
                                      pattern (typing/typedecl.ml[1160,42184+4]..[1160,42184+12])
                                        Ppat_construct "Some" (typing/typedecl.ml[1160,42184+4]..[1160,42184+8])
                                        Some
                                          []
                                          pattern (typing/typedecl.ml[1160,42184+9]..[1160,42184+12])
                                            Ppat_var "err" (typing/typedecl.ml[1160,42184+9]..[1160,42184+12])
                                      expression (typing/typedecl.ml[1160,42184+16]..[1160,42184+76])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[1160,42184+16]..[1160,42184+21])
                                          Pexp_ident "raise" (typing/typedecl.ml[1160,42184+16]..[1160,42184+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[1160,42184+22]..[1160,42184+76])
                                              Pexp_construct "Error" (typing/typedecl.ml[1160,42184+23]..[1160,42184+28])
                                              Some
                                                expression (typing/typedecl.ml[1160,42184+28]..[1160,42184+75])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typedecl.ml[1160,42184+29]..[1160,42184+32])
                                                      Pexp_ident "loc" (typing/typedecl.ml[1160,42184+29]..[1160,42184+32])
                                                    expression (typing/typedecl.ml[1160,42184+34]..[1160,42184+74])
                                                      Pexp_construct "Extension_mismatch" (typing/typedecl.ml[1160,42184+34]..[1160,42184+52])
                                                      Some
                                                        expression (typing/typedecl.ml[1160,42184+53]..[1160,42184+74])
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/typedecl.ml[1160,42184+54]..[1160,42184+63])
                                                              Pexp_ident "type_path" (typing/typedecl.ml[1160,42184+54]..[1160,42184+63])
                                                            expression (typing/typedecl.ml[1160,42184+65]..[1160,42184+68])
                                                              Pexp_ident "env" (typing/typedecl.ml[1160,42184+65]..[1160,42184+68])
                                                            expression (typing/typedecl.ml[1160,42184+70]..[1160,42184+73])
                                                              Pexp_ident "err" (typing/typedecl.ml[1160,42184+70]..[1160,42184+73])
                                                          ]
                                                  ]
                                        ]
                                  ]
                                expression (typing/typedecl.ml[1162,42268+2]..[1217,44359+19])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typedecl.ml[1162,42268+6]..[1162,42268+18])
                                        Ppat_var "ttype_params" (typing/typedecl.ml[1162,42268+6]..[1162,42268+18])
                                      expression (typing/typedecl.ml[1162,42268+21]..[1162,42268+57])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[1162,42268+21]..[1162,42268+32])
                                          Pexp_ident "make_params" (typing/typedecl.ml[1162,42268+21]..[1162,42268+32])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[1162,42268+33]..[1162,42268+36])
                                              Pexp_ident "env" (typing/typedecl.ml[1162,42268+33]..[1162,42268+36])
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[1162,42268+37]..[1162,42268+57])
                                              Pexp_field
                                              expression (typing/typedecl.ml[1162,42268+37]..[1162,42268+43])
                                                Pexp_ident "styext" (typing/typedecl.ml[1162,42268+37]..[1162,42268+43])
                                              "ptyext_params" (typing/typedecl.ml[1162,42268+44]..[1162,42268+57])
                                        ]
                                  ]
                                  expression (typing/typedecl.ml[1163,42329+2]..[1217,44359+19])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typedecl.ml[1163,42329+6]..[1163,42329+17])
                                          Ppat_var "type_params" (typing/typedecl.ml[1163,42329+6]..[1163,42329+17])
                                        expression (typing/typedecl.ml[1163,42329+20]..[1163,42329+73])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1163,42329+20]..[1163,42329+28])
                                            Pexp_ident "List.map" (typing/typedecl.ml[1163,42329+20]..[1163,42329+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1163,42329+29]..[1163,42329+60])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/typedecl.ml[1163,42329+34]..[1163,42329+42])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typedecl.ml[1163,42329+35]..[1163,42329+38])
                                                      Ppat_var "cty" (typing/typedecl.ml[1163,42329+35]..[1163,42329+38])
                                                    pattern (typing/typedecl.ml[1163,42329+40]..[1163,42329+41])
                                                      Ppat_any
                                                  ]
                                                expression (typing/typedecl.ml[1163,42329+46]..[1163,42329+59])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[1163,42329+46]..[1163,42329+49])
                                                    Pexp_ident "cty" (typing/typedecl.ml[1163,42329+46]..[1163,42329+49])
                                                  "ctyp_type" (typing/typedecl.ml[1163,42329+50]..[1163,42329+59])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1163,42329+61]..[1163,42329+73])
                                                Pexp_ident "ttype_params" (typing/typedecl.ml[1163,42329+61]..[1163,42329+73])
                                          ]
                                    ]
                                    expression (typing/typedecl.ml[1164,42406+2]..[1217,44359+19])
                                      Pexp_sequence
                                      expression (typing/typedecl.ml[1164,42406+2]..[1166,42489+15])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[1164,42406+2]..[1164,42406+12])
                                          Pexp_ident "List.iter2" (typing/typedecl.ml[1164,42406+2]..[1164,42406+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[1164,42406+13]..[1164,42406+34])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[1164,42406+14]..[1164,42406+29])
                                                Pexp_ident "Ctype.unify_var" (typing/typedecl.ml[1164,42406+14]..[1164,42406+29])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[1164,42406+30]..[1164,42406+33])
                                                    Pexp_ident "env" (typing/typedecl.ml[1164,42406+30]..[1164,42406+33])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[1165,42441+4]..[1165,42441+47])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[1165,42441+5]..[1165,42441+24])
                                                Pexp_ident "Ctype.instance_list" (typing/typedecl.ml[1165,42441+5]..[1165,42441+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[1165,42441+25]..[1165,42441+46])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[1165,42441+25]..[1165,42441+34])
                                                      Pexp_ident "type_decl" (typing/typedecl.ml[1165,42441+25]..[1165,42441+34])
                                                    "type_params" (typing/typedecl.ml[1165,42441+35]..[1165,42441+46])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[1166,42489+4]..[1166,42489+15])
                                              Pexp_ident "type_params" (typing/typedecl.ml[1166,42489+4]..[1166,42489+15])
                                        ]
                                      expression (typing/typedecl.ml[1167,42506+2]..[1217,44359+19])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typedecl.ml[1167,42506+6]..[1167,42506+18])
                                              Ppat_var "constructors" (typing/typedecl.ml[1167,42506+6]..[1167,42506+18])
                                            expression (typing/typedecl.ml[1168,42527+4]..[1170,42663+32])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[1168,42527+4]..[1168,42527+12])
                                                Pexp_ident "List.map" (typing/typedecl.ml[1168,42527+4]..[1168,42527+12])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[1168,42527+13]..[1169,42591+71])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[1168,42527+14]..[1168,42527+42])
                                                      Pexp_ident "transl_extension_constructor" (typing/typedecl.ml[1168,42527+14]..[1168,42527+42])
                                                    [
                                                      <arg>
                                                      Labelled "scope"
                                                        expression (typing/typedecl.ml[1168,42527+44]..[1168,42527+49])
                                                          Pexp_ident "scope" (typing/typedecl.ml[1168,42527+44]..[1168,42527+49])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[1168,42527+50]..[1168,42527+53])
                                                          Pexp_ident "env" (typing/typedecl.ml[1168,42527+50]..[1168,42527+53])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[1168,42527+54]..[1168,42527+63])
                                                          Pexp_ident "type_path" (typing/typedecl.ml[1168,42527+54]..[1168,42527+63])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[1169,42591+15]..[1169,42591+36])
                                                          Pexp_field
                                                          expression (typing/typedecl.ml[1169,42591+15]..[1169,42591+24])
                                                            Pexp_ident "type_decl" (typing/typedecl.ml[1169,42591+15]..[1169,42591+24])
                                                          "type_params" (typing/typedecl.ml[1169,42591+25]..[1169,42591+36])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[1169,42591+37]..[1169,42591+48])
                                                          Pexp_ident "type_params" (typing/typedecl.ml[1169,42591+37]..[1169,42591+48])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[1169,42591+49]..[1169,42591+70])
                                                          Pexp_field
                                                          expression (typing/typedecl.ml[1169,42591+49]..[1169,42591+55])
                                                            Pexp_ident "styext" (typing/typedecl.ml[1169,42591+49]..[1169,42591+55])
                                                          "ptyext_private" (typing/typedecl.ml[1169,42591+56]..[1169,42591+70])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[1170,42663+6]..[1170,42663+32])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[1170,42663+6]..[1170,42663+12])
                                                      Pexp_ident "styext" (typing/typedecl.ml[1170,42663+6]..[1170,42663+12])
                                                    "ptyext_constructors" (typing/typedecl.ml[1170,42663+13]..[1170,42663+32])
                                              ]
                                        ]
                                        expression (typing/typedecl.ml[1172,42701+2]..[1217,44359+19])
                                          Pexp_sequence
                                          expression (typing/typedecl.ml[1172,42701+2]..[1172,42701+17])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[1172,42701+2]..[1172,42701+15])
                                              Pexp_ident "Ctype.end_def" (typing/typedecl.ml[1172,42701+2]..[1172,42701+15])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1172,42701+15]..[1172,42701+17])
                                                  Pexp_construct "()" (typing/typedecl.ml[1172,42701+15]..[1172,42701+17])
                                                  None
                                            ]
                                          expression (typing/typedecl.ml[1174,42745+2]..[1217,44359+19])
                                            Pexp_sequence
                                            expression (typing/typedecl.ml[1174,42745+2]..[1174,42745+40])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[1174,42745+2]..[1174,42745+11])
                                                Pexp_ident "List.iter" (typing/typedecl.ml[1174,42745+2]..[1174,42745+11])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[1174,42745+12]..[1174,42745+28])
                                                    Pexp_ident "Ctype.generalize" (typing/typedecl.ml[1174,42745+12]..[1174,42745+28])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[1174,42745+29]..[1174,42745+40])
                                                    Pexp_ident "type_params" (typing/typedecl.ml[1174,42745+29]..[1174,42745+40])
                                              ]
                                            expression (typing/typedecl.ml[1175,42787+2]..[1217,44359+19])
                                              Pexp_sequence
                                              expression (typing/typedecl.ml[1175,42787+2]..[1179,42956+16])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[1175,42787+2]..[1175,42787+11])
                                                  Pexp_ident "List.iter" (typing/typedecl.ml[1175,42787+2]..[1175,42787+11])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[1176,42799+4]..[1178,42893+62])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (typing/typedecl.ml[1176,42799+9]..[1176,42799+12])
                                                        Ppat_var "ext" (typing/typedecl.ml[1176,42799+9]..[1176,42799+12])
                                                      expression (typing/typedecl.ml[1177,42815+7]..[1178,42893+61])
                                                        Pexp_sequence
                                                        expression (typing/typedecl.ml[1177,42815+7]..[1177,42815+76])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[1177,42815+7]..[1177,42815+37])
                                                            Pexp_ident "Btype.iter_type_expr_cstr_args" (typing/typedecl.ml[1177,42815+7]..[1177,42815+37])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1177,42815+38]..[1177,42815+54])
                                                                Pexp_ident "Ctype.generalize" (typing/typedecl.ml[1177,42815+38]..[1177,42815+54])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1177,42815+55]..[1177,42815+76])
                                                                Pexp_field
                                                                expression (typing/typedecl.ml[1177,42815+55]..[1177,42815+67])
                                                                  Pexp_field
                                                                  expression (typing/typedecl.ml[1177,42815+55]..[1177,42815+58])
                                                                    Pexp_ident "ext" (typing/typedecl.ml[1177,42815+55]..[1177,42815+58])
                                                                  "ext_type" (typing/typedecl.ml[1177,42815+59]..[1177,42815+67])
                                                                "ext_args" (typing/typedecl.ml[1177,42815+68]..[1177,42815+76])
                                                          ]
                                                        expression (typing/typedecl.ml[1178,42893+7]..[1178,42893+61])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[1178,42893+7]..[1178,42893+18])
                                                            Pexp_ident "Option.iter" (typing/typedecl.ml[1178,42893+7]..[1178,42893+18])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1178,42893+19]..[1178,42893+35])
                                                                Pexp_ident "Ctype.generalize" (typing/typedecl.ml[1178,42893+19]..[1178,42893+35])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1178,42893+36]..[1178,42893+61])
                                                                Pexp_field
                                                                expression (typing/typedecl.ml[1178,42893+36]..[1178,42893+48])
                                                                  Pexp_field
                                                                  expression (typing/typedecl.ml[1178,42893+36]..[1178,42893+39])
                                                                    Pexp_ident "ext" (typing/typedecl.ml[1178,42893+36]..[1178,42893+39])
                                                                  "ext_type" (typing/typedecl.ml[1178,42893+40]..[1178,42893+48])
                                                                "ext_ret_type" (typing/typedecl.ml[1178,42893+49]..[1178,42893+61])
                                                          ]
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[1179,42956+4]..[1179,42956+16])
                                                      Pexp_ident "constructors" (typing/typedecl.ml[1179,42956+4]..[1179,42956+16])
                                                ]
                                              expression (typing/typedecl.ml[1181,43023+2]..[1217,44359+19])
                                                Pexp_sequence
                                                expression (typing/typedecl.ml[1181,43023+2]..[1187,43235+16])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[1181,43023+2]..[1181,43023+11])
                                                    Pexp_ident "List.iter" (typing/typedecl.ml[1181,43023+2]..[1181,43023+11])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[1182,43035+4]..[1186,43214+20])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (typing/typedecl.ml[1182,43035+9]..[1182,43035+12])
                                                          Ppat_var "ext" (typing/typedecl.ml[1182,43035+9]..[1182,43035+12])
                                                        expression (typing/typedecl.ml[1183,43051+7]..[1186,43214+19])
                                                          Pexp_match
                                                          expression (typing/typedecl.ml[1183,43051+13]..[1183,43051+60])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[1183,43051+13]..[1183,43051+47])
                                                              Pexp_ident "Ctype.closed_extension_constructor" (typing/typedecl.ml[1183,43051+13]..[1183,43051+47])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1183,43051+48]..[1183,43051+60])
                                                                  Pexp_field
                                                                  expression (typing/typedecl.ml[1183,43051+48]..[1183,43051+51])
                                                                    Pexp_ident "ext" (typing/typedecl.ml[1183,43051+48]..[1183,43051+51])
                                                                  "ext_type" (typing/typedecl.ml[1183,43051+52]..[1183,43051+60])
                                                            ]
                                                          [
                                                            <case>
                                                              pattern (typing/typedecl.ml[1184,43117+9]..[1184,43117+16])
                                                                Ppat_construct "Some" (typing/typedecl.ml[1184,43117+9]..[1184,43117+13])
                                                                Some
                                                                  []
                                                                  pattern (typing/typedecl.ml[1184,43117+14]..[1184,43117+16])
                                                                    Ppat_var "ty" (typing/typedecl.ml[1184,43117+14]..[1184,43117+16])
                                                              expression (typing/typedecl.ml[1185,43137+11]..[1185,43137+76])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[1185,43137+11]..[1185,43137+16])
                                                                  Pexp_ident "raise" (typing/typedecl.ml[1185,43137+11]..[1185,43137+16])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[1185,43137+16]..[1185,43137+76])
                                                                      Pexp_construct "Error" (typing/typedecl.ml[1185,43137+17]..[1185,43137+22])
                                                                      Some
expression (typing/typedecl.ml[1185,43137+22]..[1185,43137+75])
  Pexp_tuple
  [
    expression (typing/typedecl.ml[1185,43137+23]..[1185,43137+34])
      Pexp_field
      expression (typing/typedecl.ml[1185,43137+23]..[1185,43137+26])
        Pexp_ident "ext" (typing/typedecl.ml[1185,43137+23]..[1185,43137+26])
      "ext_loc" (typing/typedecl.ml[1185,43137+27]..[1185,43137+34])
    expression (typing/typedecl.ml[1185,43137+36]..[1185,43137+74])
      Pexp_construct "Unbound_type_var_ext" (typing/typedecl.ml[1185,43137+36]..[1185,43137+56])
      Some
        expression (typing/typedecl.ml[1185,43137+56]..[1185,43137+74])
          Pexp_tuple
          [
            expression (typing/typedecl.ml[1185,43137+57]..[1185,43137+59])
              Pexp_ident "ty" (typing/typedecl.ml[1185,43137+57]..[1185,43137+59])
            expression (typing/typedecl.ml[1185,43137+61]..[1185,43137+73])
              Pexp_field
              expression (typing/typedecl.ml[1185,43137+61]..[1185,43137+64])
                Pexp_ident "ext" (typing/typedecl.ml[1185,43137+61]..[1185,43137+64])
              "ext_type" (typing/typedecl.ml[1185,43137+65]..[1185,43137+73])
          ]
  ]
                                                                ]
                                                            <case>
                                                              pattern (typing/typedecl.ml[1186,43214+9]..[1186,43214+13])
                                                                Ppat_construct "None" (typing/typedecl.ml[1186,43214+9]..[1186,43214+13])
                                                                None
                                                              expression (typing/typedecl.ml[1186,43214+17]..[1186,43214+19])
                                                                Pexp_construct "()" (typing/typedecl.ml[1186,43214+17]..[1186,43214+19])
                                                                None
                                                          ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[1187,43235+4]..[1187,43235+16])
                                                        Pexp_ident "constructors" (typing/typedecl.ml[1187,43235+4]..[1187,43235+16])
                                                  ]
                                                expression (typing/typedecl.ml[1189,43289+2]..[1217,44359+19])
                                                  Pexp_sequence
                                                  expression (typing/typedecl.ml[1189,43289+2]..[1199,43790+16])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[1189,43289+2]..[1189,43289+11])
                                                      Pexp_ident "List.iter" (typing/typedecl.ml[1189,43289+2]..[1189,43289+11])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[1190,43301+4]..[1198,43746+43])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (typing/typedecl.ml[1190,43301+9]..[1190,43301+12])
                                                            Ppat_var "ext" (typing/typedecl.ml[1190,43301+9]..[1190,43301+12])
                                                          expression (typing/typedecl.ml[1195,43590+7]..[1198,43746+42])
                                                            Pexp_try
                                                            expression (typing/typedecl.ml[1195,43590+11]..[1196,43644+51])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[1195,43590+11]..[1195,43590+53])
                                                                Pexp_ident "Typedecl_variance.check_variance_extension" (typing/typedecl.ml[1195,43590+11]..[1195,43590+53])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[1196,43644+13]..[1196,43644+16])
                                                                    Pexp_ident "env" (typing/typedecl.ml[1196,43644+13]..[1196,43644+16])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[1196,43644+17]..[1196,43644+26])
                                                                    Pexp_ident "type_decl" (typing/typedecl.ml[1196,43644+17]..[1196,43644+26])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[1196,43644+27]..[1196,43644+30])
                                                                    Pexp_ident "ext" (typing/typedecl.ml[1196,43644+27]..[1196,43644+30])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[1196,43644+31]..[1196,43644+51])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typedecl.ml[1196,43644+32]..[1196,43644+45])
Pexp_ident "type_variance" (typing/typedecl.ml[1196,43644+32]..[1196,43644+45])
                                                                      expression (typing/typedecl.ml[1196,43644+47]..[1196,43644+50])
Pexp_ident "loc" (typing/typedecl.ml[1196,43644+47]..[1196,43644+50])
                                                                    ]
                                                              ]
                                                            [
                                                              <case>
                                                                pattern (typing/typedecl.ml[1197,43696+12]..[1197,43696+46])
                                                                  Ppat_construct "Typedecl_variance.Error" (typing/typedecl.ml[1197,43696+12]..[1197,43696+35])
                                                                  Some
                                                                    []
                                                                    pattern (typing/typedecl.ml[1197,43696+36]..[1197,43696+46])
                                                                      Ppat_tuple
                                                                      [
pattern (typing/typedecl.ml[1197,43696+37]..[1197,43696+40])
  Ppat_var "loc" (typing/typedecl.ml[1197,43696+37]..[1197,43696+40])
pattern (typing/typedecl.ml[1197,43696+42]..[1197,43696+45])
  Ppat_var "err" (typing/typedecl.ml[1197,43696+42]..[1197,43696+45])
                                                                      ]
                                                                expression (typing/typedecl.ml[1198,43746+9]..[1198,43746+42])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[1198,43746+9]..[1198,43746+14])
                                                                    Pexp_ident "raise" (typing/typedecl.ml[1198,43746+9]..[1198,43746+14])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[1198,43746+15]..[1198,43746+42])
Pexp_construct "Error" (typing/typedecl.ml[1198,43746+16]..[1198,43746+21])
Some
  expression (typing/typedecl.ml[1198,43746+22]..[1198,43746+41])
    Pexp_tuple
    [
      expression (typing/typedecl.ml[1198,43746+23]..[1198,43746+26])
        Pexp_ident "loc" (typing/typedecl.ml[1198,43746+23]..[1198,43746+26])
      expression (typing/typedecl.ml[1198,43746+28]..[1198,43746+40])
        Pexp_construct "Variance" (typing/typedecl.ml[1198,43746+28]..[1198,43746+36])
        Some
          expression (typing/typedecl.ml[1198,43746+37]..[1198,43746+40])
            Pexp_ident "err" (typing/typedecl.ml[1198,43746+37]..[1198,43746+40])
    ]
                                                                  ]
                                                            ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[1199,43790+4]..[1199,43790+16])
                                                          Pexp_ident "constructors" (typing/typedecl.ml[1199,43790+4]..[1199,43790+16])
                                                    ]
                                                  expression (typing/typedecl.ml[1201,43862+2]..[1217,44359+19])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typedecl.ml[1201,43862+6]..[1201,43862+12])
                                                          Ppat_var "newenv" (typing/typedecl.ml[1201,43862+6]..[1201,43862+12])
                                                        expression (typing/typedecl.ml[1202,43877+4]..[1206,44033+22])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[1202,43877+4]..[1202,43877+18])
                                                            Pexp_ident "List.fold_left" (typing/typedecl.ml[1202,43877+4]..[1202,43877+18])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1203,43896+6]..[1205,43957+75])
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (typing/typedecl.ml[1203,43896+11]..[1203,43896+14])
                                                                  Ppat_var "env" (typing/typedecl.ml[1203,43896+11]..[1203,43896+14])
                                                                expression (typing/typedecl.ml[1203,43896+15]..[1205,43957+74]) ghost
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (typing/typedecl.ml[1203,43896+15]..[1203,43896+18])
                                                                    Ppat_var "ext" (typing/typedecl.ml[1203,43896+15]..[1203,43896+18])
                                                                  expression (typing/typedecl.ml[1204,43918+9]..[1205,43957+74])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (typing/typedecl.ml[1204,43918+13]..[1204,43918+19])
  Ppat_var "rebind" (typing/typedecl.ml[1204,43918+13]..[1204,43918+19])
expression (typing/typedecl.ml[1204,43918+22]..[1204,43918+35])
  Pexp_apply
  expression (typing/typedecl.ml[1204,43918+22]..[1204,43918+31])
    Pexp_ident "is_rebind" (typing/typedecl.ml[1204,43918+22]..[1204,43918+31])
  [
    <arg>
    Nolabel
      expression (typing/typedecl.ml[1204,43918+32]..[1204,43918+35])
        Pexp_ident "ext" (typing/typedecl.ml[1204,43918+32]..[1204,43918+35])
  ]
                                                                    ]
                                                                    expression (typing/typedecl.ml[1205,43957+9]..[1205,43957+74])
                                                                      Pexp_apply
                                                                      expression (typing/typedecl.ml[1205,43957+9]..[1205,43957+26])
Pexp_ident "Env.add_extension" (typing/typedecl.ml[1205,43957+9]..[1205,43957+26])
                                                                      [
<arg>
Labelled "check"
  expression (typing/typedecl.ml[1205,43957+34]..[1205,43957+38])
    Pexp_construct "true" (typing/typedecl.ml[1205,43957+34]..[1205,43957+38])
    None
<arg>
Labelled "rebind"
  expression (typing/typedecl.ml[1205,43957+40]..[1205,43957+46])
    Pexp_ident "rebind" (typing/typedecl.ml[1205,43957+40]..[1205,43957+46])
<arg>
Nolabel
  expression (typing/typedecl.ml[1205,43957+47]..[1205,43957+57])
    Pexp_field
    expression (typing/typedecl.ml[1205,43957+47]..[1205,43957+50])
      Pexp_ident "ext" (typing/typedecl.ml[1205,43957+47]..[1205,43957+50])
    "ext_id" (typing/typedecl.ml[1205,43957+51]..[1205,43957+57])
<arg>
Nolabel
  expression (typing/typedecl.ml[1205,43957+58]..[1205,43957+70])
    Pexp_field
    expression (typing/typedecl.ml[1205,43957+58]..[1205,43957+61])
      Pexp_ident "ext" (typing/typedecl.ml[1205,43957+58]..[1205,43957+61])
    "ext_type" (typing/typedecl.ml[1205,43957+62]..[1205,43957+70])
<arg>
Nolabel
  expression (typing/typedecl.ml[1205,43957+71]..[1205,43957+74])
    Pexp_ident "env" (typing/typedecl.ml[1205,43957+71]..[1205,43957+74])
                                                                      ]
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1206,44033+6]..[1206,44033+9])
                                                                Pexp_ident "env" (typing/typedecl.ml[1206,44033+6]..[1206,44033+9])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1206,44033+10]..[1206,44033+22])
                                                                Pexp_ident "constructors" (typing/typedecl.ml[1206,44033+10]..[1206,44033+22])
                                                          ]
                                                    ]
                                                    expression (typing/typedecl.ml[1208,44061+2]..[1217,44359+19])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typedecl.ml[1208,44061+6]..[1208,44061+11])
                                                            Ppat_var "tyext" (typing/typedecl.ml[1208,44061+6]..[1208,44061+11])
                                                          expression (typing/typedecl.ml[1209,44075+4]..[1215,44301+52])
                                                            Pexp_record
                                                            [
                                                              "tyext_path" (typing/typedecl.ml[1209,44075+6]..[1209,44075+16])
                                                                expression (typing/typedecl.ml[1209,44075+19]..[1209,44075+28])
                                                                  Pexp_ident "type_path" (typing/typedecl.ml[1209,44075+19]..[1209,44075+28])
                                                              "tyext_txt" (typing/typedecl.ml[1210,44105+6]..[1210,44105+15])
                                                                expression (typing/typedecl.ml[1210,44105+18]..[1210,44105+36])
                                                                  Pexp_field
                                                                  expression (typing/typedecl.ml[1210,44105+18]..[1210,44105+24])
                                                                    Pexp_ident "styext" (typing/typedecl.ml[1210,44105+18]..[1210,44105+24])
                                                                  "ptyext_path" (typing/typedecl.ml[1210,44105+25]..[1210,44105+36])
                                                              "tyext_params" (typing/typedecl.ml[1211,44143+6]..[1211,44143+18])
                                                                expression (typing/typedecl.ml[1211,44143+21]..[1211,44143+33])
                                                                  Pexp_ident "ttype_params" (typing/typedecl.ml[1211,44143+21]..[1211,44143+33])
                                                              "tyext_constructors" (typing/typedecl.ml[1212,44178+6]..[1212,44178+24])
                                                                expression (typing/typedecl.ml[1212,44178+27]..[1212,44178+39])
                                                                  Pexp_ident "constructors" (typing/typedecl.ml[1212,44178+27]..[1212,44178+39])
                                                              "tyext_private" (typing/typedecl.ml[1213,44219+6]..[1213,44219+19])
                                                                expression (typing/typedecl.ml[1213,44219+22]..[1213,44219+43])
                                                                  Pexp_field
                                                                  expression (typing/typedecl.ml[1213,44219+22]..[1213,44219+28])
                                                                    Pexp_ident "styext" (typing/typedecl.ml[1213,44219+22]..[1213,44219+28])
                                                                  "ptyext_private" (typing/typedecl.ml[1213,44219+29]..[1213,44219+43])
                                                              "tyext_loc" (typing/typedecl.ml[1214,44264+6]..[1214,44264+15])
                                                                expression (typing/typedecl.ml[1214,44264+18]..[1214,44264+35])
                                                                  Pexp_field
                                                                  expression (typing/typedecl.ml[1214,44264+18]..[1214,44264+24])
                                                                    Pexp_ident "styext" (typing/typedecl.ml[1214,44264+18]..[1214,44264+24])
                                                                  "ptyext_loc" (typing/typedecl.ml[1214,44264+25]..[1214,44264+35])
                                                              "tyext_attributes" (typing/typedecl.ml[1215,44301+6]..[1215,44301+22])
                                                                expression (typing/typedecl.ml[1215,44301+25]..[1215,44301+49])
                                                                  Pexp_field
                                                                  expression (typing/typedecl.ml[1215,44301+25]..[1215,44301+31])
                                                                    Pexp_ident "styext" (typing/typedecl.ml[1215,44301+25]..[1215,44301+31])
                                                                  "ptyext_attributes" (typing/typedecl.ml[1215,44301+32]..[1215,44301+49])
                                                            ]
                                                            None
                                                      ]
                                                      expression (typing/typedecl.ml[1217,44359+4]..[1217,44359+19])
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typedecl.ml[1217,44359+5]..[1217,44359+10])
                                                            Pexp_ident "tyext" (typing/typedecl.ml[1217,44359+5]..[1217,44359+10])
                                                          expression (typing/typedecl.ml[1217,44359+12]..[1217,44359+18])
                                                            Pexp_ident "newenv" (typing/typedecl.ml[1217,44359+12]..[1217,44359+18])
                                                        ]
    ]
  structure_item (typing/typedecl.ml[1219,44380+0]..[1221,44490+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1219,44380+4]..[1219,44380+25])
          Ppat_var "transl_type_extension" (typing/typedecl.ml[1219,44380+4]..[1219,44380+25])
        expression (typing/typedecl.ml[1219,44380+26]..[1221,44490+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1219,44380+26]..[1219,44380+32])
            Ppat_var "extend" (typing/typedecl.ml[1219,44380+26]..[1219,44380+32])
          expression (typing/typedecl.ml[1219,44380+33]..[1221,44490+59]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[1219,44380+33]..[1219,44380+36])
              Ppat_var "env" (typing/typedecl.ml[1219,44380+33]..[1219,44380+36])
            expression (typing/typedecl.ml[1219,44380+37]..[1221,44490+59]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[1219,44380+37]..[1219,44380+40])
                Ppat_var "loc" (typing/typedecl.ml[1219,44380+37]..[1219,44380+40])
              expression (typing/typedecl.ml[1219,44380+41]..[1221,44490+59]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[1219,44380+41]..[1219,44380+47])
                  Ppat_var "styext" (typing/typedecl.ml[1219,44380+41]..[1219,44380+47])
                expression (typing/typedecl.ml[1220,44430+2]..[1221,44490+59])
                  Pexp_apply
                  expression (typing/typedecl.ml[1220,44430+2]..[1220,44430+34])
                    Pexp_ident "Builtin_attributes.warning_scope" (typing/typedecl.ml[1220,44430+2]..[1220,44430+34])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1220,44430+35]..[1220,44430+59])
                        Pexp_field
                        expression (typing/typedecl.ml[1220,44430+35]..[1220,44430+41])
                          Pexp_ident "styext" (typing/typedecl.ml[1220,44430+35]..[1220,44430+41])
                        "ptyext_attributes" (typing/typedecl.ml[1220,44430+42]..[1220,44430+59])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1221,44490+4]..[1221,44490+59])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typedecl.ml[1221,44490+9]..[1221,44490+11])
                          Ppat_construct "()" (typing/typedecl.ml[1221,44490+9]..[1221,44490+11])
                          None
                        expression (typing/typedecl.ml[1221,44490+15]..[1221,44490+58])
                          Pexp_apply
                          expression (typing/typedecl.ml[1221,44490+15]..[1221,44490+36])
                            Pexp_ident "transl_type_extension" (typing/typedecl.ml[1221,44490+15]..[1221,44490+36])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1221,44490+37]..[1221,44490+43])
                                Pexp_ident "extend" (typing/typedecl.ml[1221,44490+37]..[1221,44490+43])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1221,44490+44]..[1221,44490+47])
                                Pexp_ident "env" (typing/typedecl.ml[1221,44490+44]..[1221,44490+47])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1221,44490+48]..[1221,44490+51])
                                Pexp_ident "loc" (typing/typedecl.ml[1221,44490+48]..[1221,44490+51])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1221,44490+52]..[1221,44490+58])
                                Pexp_ident "styext" (typing/typedecl.ml[1221,44490+52]..[1221,44490+58])
                          ]
                  ]
    ]
  structure_item (typing/typedecl.ml[1223,44551+0]..[1245,45302+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1223,44551+4]..[1223,44551+20])
          Ppat_var "transl_exception" (typing/typedecl.ml[1223,44551+4]..[1223,44551+20])
        expression (typing/typedecl.ml[1223,44551+21]..[1245,45302+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1223,44551+21]..[1223,44551+24])
            Ppat_var "env" (typing/typedecl.ml[1223,44551+21]..[1223,44551+24])
          expression (typing/typedecl.ml[1223,44551+25]..[1245,45302+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[1223,44551+25]..[1223,44551+29])
              Ppat_var "sext" (typing/typedecl.ml[1223,44551+25]..[1223,44551+29])
            expression (typing/typedecl.ml[1224,44583+2]..[1245,45302+13])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typedecl.ml[1224,44583+6]..[1224,44583+11])
                    Ppat_var "scope" (typing/typedecl.ml[1224,44583+6]..[1224,44583+11])
                  expression (typing/typedecl.ml[1224,44583+14]..[1224,44583+35])
                    Pexp_apply
                    expression (typing/typedecl.ml[1224,44583+14]..[1224,44583+32])
                      Pexp_ident "Ctype.create_scope" (typing/typedecl.ml[1224,44583+14]..[1224,44583+32])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1224,44583+33]..[1224,44583+35])
                          Pexp_construct "()" (typing/typedecl.ml[1224,44583+33]..[1224,44583+35])
                          None
                    ]
              ]
              expression (typing/typedecl.ml[1225,44622+2]..[1245,45302+13])
                Pexp_sequence
                expression (typing/typedecl.ml[1225,44622+2]..[1225,44622+24])
                  Pexp_apply
                  expression (typing/typedecl.ml[1225,44622+2]..[1225,44622+22])
                    Pexp_ident "reset_type_variables" (typing/typedecl.ml[1225,44622+2]..[1225,44622+22])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1225,44622+22]..[1225,44622+24])
                        Pexp_construct "()" (typing/typedecl.ml[1225,44622+22]..[1225,44622+24])
                        None
                  ]
                expression (typing/typedecl.ml[1226,44648+2]..[1245,45302+13])
                  Pexp_sequence
                  expression (typing/typedecl.ml[1226,44648+2]..[1226,44648+19])
                    Pexp_apply
                    expression (typing/typedecl.ml[1226,44648+2]..[1226,44648+17])
                      Pexp_ident "Ctype.begin_def" (typing/typedecl.ml[1226,44648+2]..[1226,44648+17])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1226,44648+17]..[1226,44648+19])
                          Pexp_construct "()" (typing/typedecl.ml[1226,44648+17]..[1226,44648+19])
                          None
                    ]
                  expression (typing/typedecl.ml[1227,44669+2]..[1245,45302+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typedecl.ml[1227,44669+6]..[1227,44669+9])
                          Ppat_var "ext" (typing/typedecl.ml[1227,44669+6]..[1227,44669+9])
                        expression (typing/typedecl.ml[1228,44681+4]..[1229,44725+48])
                          Pexp_apply
                          expression (typing/typedecl.ml[1228,44681+4]..[1228,44681+32])
                            Pexp_ident "transl_extension_constructor" (typing/typedecl.ml[1228,44681+4]..[1228,44681+32])
                          [
                            <arg>
                            Labelled "scope"
                              expression (typing/typedecl.ml[1228,44681+34]..[1228,44681+39])
                                Pexp_ident "scope" (typing/typedecl.ml[1228,44681+34]..[1228,44681+39])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1228,44681+40]..[1228,44681+43])
                                Pexp_ident "env" (typing/typedecl.ml[1228,44681+40]..[1228,44681+43])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1229,44725+6]..[1229,44725+21])
                                Pexp_ident "Predef.path_exn" (typing/typedecl.ml[1229,44725+6]..[1229,44725+21])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1229,44725+22]..[1229,44725+24])
                                Pexp_construct "[]" (typing/typedecl.ml[1229,44725+22]..[1229,44725+24])
                                None
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1229,44725+25]..[1229,44725+27])
                                Pexp_construct "[]" (typing/typedecl.ml[1229,44725+25]..[1229,44725+27])
                                None
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1229,44725+28]..[1229,44725+43])
                                Pexp_construct "Asttypes.Public" (typing/typedecl.ml[1229,44725+28]..[1229,44725+43])
                                None
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1229,44725+44]..[1229,44725+48])
                                Pexp_ident "sext" (typing/typedecl.ml[1229,44725+44]..[1229,44725+48])
                          ]
                    ]
                    expression (typing/typedecl.ml[1231,44779+2]..[1245,45302+13])
                      Pexp_sequence
                      expression (typing/typedecl.ml[1231,44779+2]..[1231,44779+17])
                        Pexp_apply
                        expression (typing/typedecl.ml[1231,44779+2]..[1231,44779+15])
                          Pexp_ident "Ctype.end_def" (typing/typedecl.ml[1231,44779+2]..[1231,44779+15])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1231,44779+15]..[1231,44779+17])
                              Pexp_construct "()" (typing/typedecl.ml[1231,44779+15]..[1231,44779+17])
                              None
                        ]
                      expression (typing/typedecl.ml[1233,44823+2]..[1245,45302+13])
                        Pexp_sequence
                        expression (typing/typedecl.ml[1233,44823+2]..[1233,44823+71])
                          Pexp_apply
                          expression (typing/typedecl.ml[1233,44823+2]..[1233,44823+32])
                            Pexp_ident "Btype.iter_type_expr_cstr_args" (typing/typedecl.ml[1233,44823+2]..[1233,44823+32])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1233,44823+33]..[1233,44823+49])
                                Pexp_ident "Ctype.generalize" (typing/typedecl.ml[1233,44823+33]..[1233,44823+49])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1233,44823+50]..[1233,44823+71])
                                Pexp_field
                                expression (typing/typedecl.ml[1233,44823+50]..[1233,44823+62])
                                  Pexp_field
                                  expression (typing/typedecl.ml[1233,44823+50]..[1233,44823+53])
                                    Pexp_ident "ext" (typing/typedecl.ml[1233,44823+50]..[1233,44823+53])
                                  "ext_type" (typing/typedecl.ml[1233,44823+54]..[1233,44823+62])
                                "ext_args" (typing/typedecl.ml[1233,44823+63]..[1233,44823+71])
                          ]
                        expression (typing/typedecl.ml[1234,44896+2]..[1245,45302+13])
                          Pexp_sequence
                          expression (typing/typedecl.ml[1234,44896+2]..[1234,44896+56])
                            Pexp_apply
                            expression (typing/typedecl.ml[1234,44896+2]..[1234,44896+13])
                              Pexp_ident "Option.iter" (typing/typedecl.ml[1234,44896+2]..[1234,44896+13])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1234,44896+14]..[1234,44896+30])
                                  Pexp_ident "Ctype.generalize" (typing/typedecl.ml[1234,44896+14]..[1234,44896+30])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1234,44896+31]..[1234,44896+56])
                                  Pexp_field
                                  expression (typing/typedecl.ml[1234,44896+31]..[1234,44896+43])
                                    Pexp_field
                                    expression (typing/typedecl.ml[1234,44896+31]..[1234,44896+34])
                                      Pexp_ident "ext" (typing/typedecl.ml[1234,44896+31]..[1234,44896+34])
                                    "ext_type" (typing/typedecl.ml[1234,44896+35]..[1234,44896+43])
                                  "ext_ret_type" (typing/typedecl.ml[1234,44896+44]..[1234,44896+56])
                            ]
                          expression (typing/typedecl.ml[1236,45003+2]..[1245,45302+13])
                            Pexp_sequence
                            expression (typing/typedecl.ml[1236,45003+2]..[1240,45173+5])
                              Pexp_match
                              expression (typing/typedecl.ml[1236,45003+14]..[1236,45003+61])
                                Pexp_apply
                                expression (typing/typedecl.ml[1236,45003+14]..[1236,45003+48])
                                  Pexp_ident "Ctype.closed_extension_constructor" (typing/typedecl.ml[1236,45003+14]..[1236,45003+48])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1236,45003+49]..[1236,45003+61])
                                      Pexp_field
                                      expression (typing/typedecl.ml[1236,45003+49]..[1236,45003+52])
                                        Pexp_ident "ext" (typing/typedecl.ml[1236,45003+49]..[1236,45003+52])
                                      "ext_type" (typing/typedecl.ml[1236,45003+53]..[1236,45003+61])
                                ]
                              [
                                <case>
                                  pattern (typing/typedecl.ml[1237,45070+4]..[1237,45070+11])
                                    Ppat_construct "Some" (typing/typedecl.ml[1237,45070+4]..[1237,45070+8])
                                    Some
                                      []
                                      pattern (typing/typedecl.ml[1237,45070+9]..[1237,45070+11])
                                        Ppat_var "ty" (typing/typedecl.ml[1237,45070+9]..[1237,45070+11])
                                  expression (typing/typedecl.ml[1238,45085+6]..[1238,45085+72])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[1238,45085+6]..[1238,45085+11])
                                      Pexp_ident "raise" (typing/typedecl.ml[1238,45085+6]..[1238,45085+11])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1238,45085+12]..[1238,45085+72])
                                          Pexp_construct "Error" (typing/typedecl.ml[1238,45085+13]..[1238,45085+18])
                                          Some
                                            expression (typing/typedecl.ml[1238,45085+18]..[1238,45085+71])
                                              Pexp_tuple
                                              [
                                                expression (typing/typedecl.ml[1238,45085+19]..[1238,45085+30])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[1238,45085+19]..[1238,45085+22])
                                                    Pexp_ident "ext" (typing/typedecl.ml[1238,45085+19]..[1238,45085+22])
                                                  "ext_loc" (typing/typedecl.ml[1238,45085+23]..[1238,45085+30])
                                                expression (typing/typedecl.ml[1238,45085+32]..[1238,45085+70])
                                                  Pexp_construct "Unbound_type_var_ext" (typing/typedecl.ml[1238,45085+32]..[1238,45085+52])
                                                  Some
                                                    expression (typing/typedecl.ml[1238,45085+52]..[1238,45085+70])
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typedecl.ml[1238,45085+53]..[1238,45085+55])
                                                          Pexp_ident "ty" (typing/typedecl.ml[1238,45085+53]..[1238,45085+55])
                                                        expression (typing/typedecl.ml[1238,45085+57]..[1238,45085+69])
                                                          Pexp_field
                                                          expression (typing/typedecl.ml[1238,45085+57]..[1238,45085+60])
                                                            Pexp_ident "ext" (typing/typedecl.ml[1238,45085+57]..[1238,45085+60])
                                                          "ext_type" (typing/typedecl.ml[1238,45085+61]..[1238,45085+69])
                                                      ]
                                              ]
                                    ]
                                <case>
                                  pattern (typing/typedecl.ml[1239,45158+4]..[1239,45158+8])
                                    Ppat_construct "None" (typing/typedecl.ml[1239,45158+4]..[1239,45158+8])
                                    None
                                  expression (typing/typedecl.ml[1239,45158+12]..[1239,45158+14])
                                    Pexp_construct "()" (typing/typedecl.ml[1239,45158+12]..[1239,45158+14])
                                    None
                              ]
                            expression (typing/typedecl.ml[1241,45180+2]..[1245,45302+13])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typedecl.ml[1241,45180+6]..[1241,45180+12])
                                    Ppat_var "rebind" (typing/typedecl.ml[1241,45180+6]..[1241,45180+12])
                                  expression (typing/typedecl.ml[1241,45180+15]..[1241,45180+28])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[1241,45180+15]..[1241,45180+24])
                                      Pexp_ident "is_rebind" (typing/typedecl.ml[1241,45180+15]..[1241,45180+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1241,45180+25]..[1241,45180+28])
                                          Pexp_ident "ext" (typing/typedecl.ml[1241,45180+25]..[1241,45180+28])
                                    ]
                              ]
                              expression (typing/typedecl.ml[1242,45212+2]..[1245,45302+13])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typedecl.ml[1242,45212+6]..[1242,45212+12])
                                      Ppat_var "newenv" (typing/typedecl.ml[1242,45212+6]..[1242,45212+12])
                                    expression (typing/typedecl.ml[1243,45227+4]..[1243,45227+69])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[1243,45227+4]..[1243,45227+21])
                                        Pexp_ident "Env.add_extension" (typing/typedecl.ml[1243,45227+4]..[1243,45227+21])
                                      [
                                        <arg>
                                        Labelled "check"
                                          expression (typing/typedecl.ml[1243,45227+29]..[1243,45227+33])
                                            Pexp_construct "true" (typing/typedecl.ml[1243,45227+29]..[1243,45227+33])
                                            None
                                        <arg>
                                        Labelled "rebind"
                                          expression (typing/typedecl.ml[1243,45227+35]..[1243,45227+41])
                                            Pexp_ident "rebind" (typing/typedecl.ml[1243,45227+35]..[1243,45227+41])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1243,45227+42]..[1243,45227+52])
                                            Pexp_field
                                            expression (typing/typedecl.ml[1243,45227+42]..[1243,45227+45])
                                              Pexp_ident "ext" (typing/typedecl.ml[1243,45227+42]..[1243,45227+45])
                                            "ext_id" (typing/typedecl.ml[1243,45227+46]..[1243,45227+52])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1243,45227+53]..[1243,45227+65])
                                            Pexp_field
                                            expression (typing/typedecl.ml[1243,45227+53]..[1243,45227+56])
                                              Pexp_ident "ext" (typing/typedecl.ml[1243,45227+53]..[1243,45227+56])
                                            "ext_type" (typing/typedecl.ml[1243,45227+57]..[1243,45227+65])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1243,45227+66]..[1243,45227+69])
                                            Pexp_ident "env" (typing/typedecl.ml[1243,45227+66]..[1243,45227+69])
                                      ]
                                ]
                                expression (typing/typedecl.ml[1245,45302+2]..[1245,45302+13])
                                  Pexp_tuple
                                  [
                                    expression (typing/typedecl.ml[1245,45302+2]..[1245,45302+5])
                                      Pexp_ident "ext" (typing/typedecl.ml[1245,45302+2]..[1245,45302+5])
                                    expression (typing/typedecl.ml[1245,45302+7]..[1245,45302+13])
                                      Pexp_ident "newenv" (typing/typedecl.ml[1245,45302+7]..[1245,45302+13])
                                  ]
    ]
  structure_item (typing/typedecl.ml[1247,45317+0]..[1257,45637+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1247,45317+4]..[1247,45317+25])
          Ppat_var "transl_type_exception" (typing/typedecl.ml[1247,45317+4]..[1247,45317+25])
        expression (typing/typedecl.ml[1247,45317+26]..[1257,45637+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1247,45317+26]..[1247,45317+29])
            Ppat_var "env" (typing/typedecl.ml[1247,45317+26]..[1247,45317+29])
          expression (typing/typedecl.ml[1247,45317+30]..[1257,45637+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[1247,45317+30]..[1247,45317+31])
              Ppat_var "t" (typing/typedecl.ml[1247,45317+30]..[1247,45317+31])
            expression (typing/typedecl.ml[1248,45351+2]..[1257,45637+50])
              Pexp_sequence
              expression (typing/typedecl.ml[1248,45351+2]..[1248,45351+55])
                Pexp_apply
                expression (typing/typedecl.ml[1248,45351+2]..[1248,45351+35])
                  Pexp_ident "Builtin_attributes.check_no_alert" (typing/typedecl.ml[1248,45351+2]..[1248,45351+35])
                [
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[1248,45351+36]..[1248,45351+55])
                      Pexp_field
                      expression (typing/typedecl.ml[1248,45351+36]..[1248,45351+37])
                        Pexp_ident "t" (typing/typedecl.ml[1248,45351+36]..[1248,45351+37])
                      "ptyexn_attributes" (typing/typedecl.ml[1248,45351+38]..[1248,45351+55])
                ]
              expression (typing/typedecl.ml[1249,45408+2]..[1257,45637+50])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/typedecl.ml[1249,45408+6]..[1249,45408+24])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1249,45408+6]..[1249,45408+16])
                          Ppat_var "contructor" (typing/typedecl.ml[1249,45408+6]..[1249,45408+16])
                        pattern (typing/typedecl.ml[1249,45408+18]..[1249,45408+24])
                          Ppat_var "newenv" (typing/typedecl.ml[1249,45408+18]..[1249,45408+24])
                      ]
                    expression (typing/typedecl.ml[1250,45435+4]..[1253,45560+7])
                      Pexp_apply
                      expression (typing/typedecl.ml[1250,45435+4]..[1250,45435+36])
                        Pexp_ident "Builtin_attributes.warning_scope" (typing/typedecl.ml[1250,45435+4]..[1250,45435+36])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1250,45435+37]..[1250,45435+56])
                            Pexp_field
                            expression (typing/typedecl.ml[1250,45435+37]..[1250,45435+38])
                              Pexp_ident "t" (typing/typedecl.ml[1250,45435+37]..[1250,45435+38])
                            "ptyexn_attributes" (typing/typedecl.ml[1250,45435+39]..[1250,45435+56])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1251,45492+6]..[1253,45560+7])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typedecl.ml[1251,45492+11]..[1251,45492+13])
                              Ppat_construct "()" (typing/typedecl.ml[1251,45492+11]..[1251,45492+13])
                              None
                            expression (typing/typedecl.ml[1252,45509+9]..[1252,45509+50])
                              Pexp_apply
                              expression (typing/typedecl.ml[1252,45509+9]..[1252,45509+25])
                                Pexp_ident "transl_exception" (typing/typedecl.ml[1252,45509+9]..[1252,45509+25])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1252,45509+26]..[1252,45509+29])
                                    Pexp_ident "env" (typing/typedecl.ml[1252,45509+26]..[1252,45509+29])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1252,45509+30]..[1252,45509+50])
                                    Pexp_field
                                    expression (typing/typedecl.ml[1252,45509+30]..[1252,45509+31])
                                      Pexp_ident "t" (typing/typedecl.ml[1252,45509+30]..[1252,45509+31])
                                    "ptyexn_constructor" (typing/typedecl.ml[1252,45509+32]..[1252,45509+50])
                              ]
                      ]
                ]
                expression (typing/typedecl.ml[1255,45573+2]..[1257,45637+50])
                  Pexp_tuple
                  [
                    expression (typing/typedecl.ml[1255,45573+2]..[1257,45637+42])
                      Pexp_record
                      [
                        "tyexn_constructor" (typing/typedecl.ml[1255,45573+3]..[1255,45573+20])
                          expression (typing/typedecl.ml[1255,45573+23]..[1255,45573+33])
                            Pexp_ident "contructor" (typing/typedecl.ml[1255,45573+23]..[1255,45573+33])
                        "tyexn_loc" (typing/typedecl.ml[1256,45608+3]..[1256,45608+12])
                          expression (typing/typedecl.ml[1256,45608+15]..[1256,45608+27])
                            Pexp_field
                            expression (typing/typedecl.ml[1256,45608+15]..[1256,45608+16])
                              Pexp_ident "t" (typing/typedecl.ml[1256,45608+15]..[1256,45608+16])
                            "ptyexn_loc" (typing/typedecl.ml[1256,45608+17]..[1256,45608+27])
                        "tyexn_attributes" (typing/typedecl.ml[1257,45637+3]..[1257,45637+19])
                          expression (typing/typedecl.ml[1257,45637+22]..[1257,45637+41])
                            Pexp_field
                            expression (typing/typedecl.ml[1257,45637+22]..[1257,45637+23])
                              Pexp_ident "t" (typing/typedecl.ml[1257,45637+22]..[1257,45637+23])
                            "ptyexn_attributes" (typing/typedecl.ml[1257,45637+24]..[1257,45637+41])
                      ]
                      None
                    expression (typing/typedecl.ml[1257,45637+44]..[1257,45637+50])
                      Pexp_ident "newenv" (typing/typedecl.ml[1257,45637+44]..[1257,45637+50])
                  ]
    ]
  structure_item (typing/typedecl.ml[1260,45690+0]..[1262,45747+48])
    Pstr_type Rec
    [
      type_declaration "native_repr_attribute" (typing/typedecl.ml[1260,45690+5]..[1260,45690+26]) (typing/typedecl.ml[1260,45690+0]..[1262,45747+48])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedecl.ml[1261,45719+2]..[1261,45719+27])
                "Native_repr_attr_absent" (typing/typedecl.ml[1261,45719+4]..[1261,45719+27])
                []
                None
              (typing/typedecl.ml[1262,45747+2]..[1262,45747+48])
                "Native_repr_attr_present" (typing/typedecl.ml[1262,45747+4]..[1262,45747+28])
                [
                  core_type (typing/typedecl.ml[1262,45747+32]..[1262,45747+48])
                    Ptyp_constr "native_repr_kind" (typing/typedecl.ml[1262,45747+32]..[1262,45747+48])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/typedecl.ml[1264,45797+0]..[1276,46329+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1264,45797+4]..[1264,45797+29])
          Ppat_var "get_native_repr_attribute" (typing/typedecl.ml[1264,45797+4]..[1264,45797+29])
        expression (typing/typedecl.ml[1264,45797+30]..[1276,46329+56]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1264,45797+30]..[1264,45797+35])
            Ppat_var "attrs" (typing/typedecl.ml[1264,45797+30]..[1264,45797+35])
          expression (typing/typedecl.ml[1264,45797+36]..[1276,46329+56]) ghost
            Pexp_fun
            Labelled "global_repr"
            None
            pattern (typing/typedecl.ml[1264,45797+37]..[1264,45797+48])
              Ppat_var "global_repr" (typing/typedecl.ml[1264,45797+37]..[1264,45797+48])
            expression (typing/typedecl.ml[1265,45848+2]..[1276,46329+56])
              Pexp_match
              expression (typing/typedecl.ml[1266,45856+4]..[1268,46013+15])
                Pexp_tuple
                [
                  expression (typing/typedecl.ml[1266,45856+4]..[1266,45856+76])
                    Pexp_apply
                    expression (typing/typedecl.ml[1266,45856+4]..[1266,45856+40])
                      Pexp_ident "Attr_helper.get_no_payload_attribute" (typing/typedecl.ml[1266,45856+4]..[1266,45856+40])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1266,45856+41]..[1266,45856+69])
                          Pexp_construct "::" (typing/typedecl.ml[1266,45856+42]..[1266,45856+69]) ghost
                          Some
                            expression (typing/typedecl.ml[1266,45856+42]..[1266,45856+69]) ghost
                              Pexp_tuple
                              [
                                expression (typing/typedecl.ml[1266,45856+42]..[1266,45856+51])
                                  Pexp_constant PConst_string("unboxed",(typing/typedecl.ml[1266,45856+43]..[1266,45856+50]),None)
                                expression (typing/typedecl.ml[1266,45856+53]..[1266,45856+69]) ghost
                                  Pexp_construct "::" (typing/typedecl.ml[1266,45856+53]..[1266,45856+69]) ghost
                                  Some
                                    expression (typing/typedecl.ml[1266,45856+53]..[1266,45856+69]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/typedecl.ml[1266,45856+53]..[1266,45856+68])
                                          Pexp_constant PConst_string("ocaml.unboxed",(typing/typedecl.ml[1266,45856+54]..[1266,45856+67]),None)
                                        expression (typing/typedecl.ml[1266,45856+68]..[1266,45856+69]) ghost
                                          Pexp_construct "[]" (typing/typedecl.ml[1266,45856+68]..[1266,45856+69]) ghost
                                          None
                                      ]
                              ]
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1266,45856+71]..[1266,45856+76])
                          Pexp_ident "attrs" (typing/typedecl.ml[1266,45856+71]..[1266,45856+76])
                    ]
                  expression (typing/typedecl.ml[1267,45934+4]..[1267,45934+77])
                    Pexp_apply
                    expression (typing/typedecl.ml[1267,45934+4]..[1267,45934+40])
                      Pexp_ident "Attr_helper.get_no_payload_attribute" (typing/typedecl.ml[1267,45934+4]..[1267,45934+40])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1267,45934+41]..[1267,45934+71])
                          Pexp_construct "::" (typing/typedecl.ml[1267,45934+42]..[1267,45934+71]) ghost
                          Some
                            expression (typing/typedecl.ml[1267,45934+42]..[1267,45934+71]) ghost
                              Pexp_tuple
                              [
                                expression (typing/typedecl.ml[1267,45934+42]..[1267,45934+52])
                                  Pexp_constant PConst_string("untagged",(typing/typedecl.ml[1267,45934+43]..[1267,45934+51]),None)
                                expression (typing/typedecl.ml[1267,45934+54]..[1267,45934+71]) ghost
                                  Pexp_construct "::" (typing/typedecl.ml[1267,45934+54]..[1267,45934+71]) ghost
                                  Some
                                    expression (typing/typedecl.ml[1267,45934+54]..[1267,45934+71]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/typedecl.ml[1267,45934+54]..[1267,45934+70])
                                          Pexp_constant PConst_string("ocaml.untagged",(typing/typedecl.ml[1267,45934+55]..[1267,45934+69]),None)
                                        expression (typing/typedecl.ml[1267,45934+70]..[1267,45934+71]) ghost
                                          Pexp_construct "[]" (typing/typedecl.ml[1267,45934+70]..[1267,45934+71]) ghost
                                          None
                                      ]
                              ]
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1267,45934+72]..[1267,45934+77])
                          Pexp_ident "attrs" (typing/typedecl.ml[1267,45934+72]..[1267,45934+77])
                    ]
                  expression (typing/typedecl.ml[1268,46013+4]..[1268,46013+15])
                    Pexp_ident "global_repr" (typing/typedecl.ml[1268,46013+4]..[1268,46013+15])
                ]
              [
                <case>
                  pattern (typing/typedecl.ml[1270,46036+4]..[1270,46036+20])
                    Ppat_tuple
                    [
                      pattern (typing/typedecl.ml[1270,46036+4]..[1270,46036+8])
                        Ppat_construct "None" (typing/typedecl.ml[1270,46036+4]..[1270,46036+8])
                        None
                      pattern (typing/typedecl.ml[1270,46036+10]..[1270,46036+14])
                        Ppat_construct "None" (typing/typedecl.ml[1270,46036+10]..[1270,46036+14])
                        None
                      pattern (typing/typedecl.ml[1270,46036+16]..[1270,46036+20])
                        Ppat_construct "None" (typing/typedecl.ml[1270,46036+16]..[1270,46036+20])
                        None
                    ]
                  expression (typing/typedecl.ml[1270,46036+24]..[1270,46036+47])
                    Pexp_construct "Native_repr_attr_absent" (typing/typedecl.ml[1270,46036+24]..[1270,46036+47])
                    None
                <case>
                  pattern (typing/typedecl.ml[1271,46084+4]..[1271,46084+25])
                    Ppat_tuple
                    [
                      pattern (typing/typedecl.ml[1271,46084+4]..[1271,46084+8])
                        Ppat_construct "None" (typing/typedecl.ml[1271,46084+4]..[1271,46084+8])
                        None
                      pattern (typing/typedecl.ml[1271,46084+10]..[1271,46084+14])
                        Ppat_construct "None" (typing/typedecl.ml[1271,46084+10]..[1271,46084+14])
                        None
                      pattern (typing/typedecl.ml[1271,46084+16]..[1271,46084+25])
                        Ppat_construct "Some" (typing/typedecl.ml[1271,46084+16]..[1271,46084+20])
                        Some
                          []
                          pattern (typing/typedecl.ml[1271,46084+21]..[1271,46084+25])
                            Ppat_var "repr" (typing/typedecl.ml[1271,46084+21]..[1271,46084+25])
                    ]
                  expression (typing/typedecl.ml[1271,46084+29]..[1271,46084+58])
                    Pexp_construct "Native_repr_attr_present" (typing/typedecl.ml[1271,46084+29]..[1271,46084+53])
                    Some
                      expression (typing/typedecl.ml[1271,46084+54]..[1271,46084+58])
                        Pexp_ident "repr" (typing/typedecl.ml[1271,46084+54]..[1271,46084+58])
                <case>
                  pattern (typing/typedecl.ml[1272,46143+4]..[1272,46143+22])
                    Ppat_tuple
                    [
                      pattern (typing/typedecl.ml[1272,46143+4]..[1272,46143+10])
                        Ppat_construct "Some" (typing/typedecl.ml[1272,46143+4]..[1272,46143+8])
                        Some
                          []
                          pattern (typing/typedecl.ml[1272,46143+9]..[1272,46143+10])
                            Ppat_any
                      pattern (typing/typedecl.ml[1272,46143+12]..[1272,46143+16])
                        Ppat_construct "None" (typing/typedecl.ml[1272,46143+12]..[1272,46143+16])
                        None
                      pattern (typing/typedecl.ml[1272,46143+18]..[1272,46143+22])
                        Ppat_construct "None" (typing/typedecl.ml[1272,46143+18]..[1272,46143+22])
                        None
                    ]
                  expression (typing/typedecl.ml[1272,46143+26]..[1272,46143+58])
                    Pexp_construct "Native_repr_attr_present" (typing/typedecl.ml[1272,46143+26]..[1272,46143+50])
                    Some
                      expression (typing/typedecl.ml[1272,46143+51]..[1272,46143+58])
                        Pexp_construct "Unboxed" (typing/typedecl.ml[1272,46143+51]..[1272,46143+58])
                        None
                <case>
                  pattern (typing/typedecl.ml[1273,46202+4]..[1273,46202+22])
                    Ppat_tuple
                    [
                      pattern (typing/typedecl.ml[1273,46202+4]..[1273,46202+8])
                        Ppat_construct "None" (typing/typedecl.ml[1273,46202+4]..[1273,46202+8])
                        None
                      pattern (typing/typedecl.ml[1273,46202+10]..[1273,46202+16])
                        Ppat_construct "Some" (typing/typedecl.ml[1273,46202+10]..[1273,46202+14])
                        Some
                          []
                          pattern (typing/typedecl.ml[1273,46202+15]..[1273,46202+16])
                            Ppat_any
                      pattern (typing/typedecl.ml[1273,46202+18]..[1273,46202+22])
                        Ppat_construct "None" (typing/typedecl.ml[1273,46202+18]..[1273,46202+22])
                        None
                    ]
                  expression (typing/typedecl.ml[1273,46202+26]..[1273,46202+59])
                    Pexp_construct "Native_repr_attr_present" (typing/typedecl.ml[1273,46202+26]..[1273,46202+50])
                    Some
                      expression (typing/typedecl.ml[1273,46202+51]..[1273,46202+59])
                        Pexp_construct "Untagged" (typing/typedecl.ml[1273,46202+51]..[1273,46202+59])
                        None
                <case>
                  pattern (typing/typedecl.ml[1274,46262+4]..[1275,46294+31])
                    Ppat_or
                    pattern (typing/typedecl.ml[1274,46262+4]..[1274,46262+31])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1274,46262+4]..[1274,46262+25])
                          Ppat_construct "Some" (typing/typedecl.ml[1274,46262+4]..[1274,46262+8])
                          Some
                            []
                            pattern (typing/typedecl.ml[1274,46262+9]..[1274,46262+25])
                              Ppat_record Closed
                              [
                                "Location.loc" (typing/typedecl.ml[1274,46262+11]..[1274,46262+23]) ghost
                                  pattern (typing/typedecl.ml[1274,46262+11]..[1274,46262+23])
                                    Ppat_var "loc" (typing/typedecl.ml[1274,46262+11]..[1274,46262+23])
                              ]
                        pattern (typing/typedecl.ml[1274,46262+27]..[1274,46262+28])
                          Ppat_any
                        pattern (typing/typedecl.ml[1274,46262+30]..[1274,46262+31])
                          Ppat_any
                      ]
                    pattern (typing/typedecl.ml[1275,46294+4]..[1275,46294+31])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1275,46294+4]..[1275,46294+5])
                          Ppat_any
                        pattern (typing/typedecl.ml[1275,46294+7]..[1275,46294+28])
                          Ppat_construct "Some" (typing/typedecl.ml[1275,46294+7]..[1275,46294+11])
                          Some
                            []
                            pattern (typing/typedecl.ml[1275,46294+12]..[1275,46294+28])
                              Ppat_record Closed
                              [
                                "Location.loc" (typing/typedecl.ml[1275,46294+14]..[1275,46294+26]) ghost
                                  pattern (typing/typedecl.ml[1275,46294+14]..[1275,46294+26])
                                    Ppat_var "loc" (typing/typedecl.ml[1275,46294+14]..[1275,46294+26])
                              ]
                        pattern (typing/typedecl.ml[1275,46294+30]..[1275,46294+31])
                          Ppat_any
                      ]
                  expression (typing/typedecl.ml[1276,46329+4]..[1276,46329+56])
                    Pexp_apply
                    expression (typing/typedecl.ml[1276,46329+4]..[1276,46329+9])
                      Pexp_ident "raise" (typing/typedecl.ml[1276,46329+4]..[1276,46329+9])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1276,46329+10]..[1276,46329+56])
                          Pexp_construct "Error" (typing/typedecl.ml[1276,46329+11]..[1276,46329+16])
                          Some
                            expression (typing/typedecl.ml[1276,46329+17]..[1276,46329+55])
                              Pexp_tuple
                              [
                                expression (typing/typedecl.ml[1276,46329+18]..[1276,46329+21])
                                  Pexp_ident "loc" (typing/typedecl.ml[1276,46329+18]..[1276,46329+21])
                                expression (typing/typedecl.ml[1276,46329+23]..[1276,46329+54])
                                  Pexp_construct "Multiple_native_repr_attributes" (typing/typedecl.ml[1276,46329+23]..[1276,46329+54])
                                  None
                              ]
                    ]
              ]
    ]
  structure_item (typing/typedecl.ml[1278,46387+0]..[1291,47022+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1278,46387+4]..[1278,46387+23])
          Ppat_var "native_repr_of_type" (typing/typedecl.ml[1278,46387+4]..[1278,46387+23])
        expression (typing/typedecl.ml[1278,46387+24]..[1291,47022+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1278,46387+24]..[1278,46387+27])
            Ppat_var "env" (typing/typedecl.ml[1278,46387+24]..[1278,46387+27])
          expression (typing/typedecl.ml[1278,46387+28]..[1291,47022+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[1278,46387+28]..[1278,46387+32])
              Ppat_var "kind" (typing/typedecl.ml[1278,46387+28]..[1278,46387+32])
            expression (typing/typedecl.ml[1278,46387+33]..[1291,47022+8]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[1278,46387+33]..[1278,46387+35])
                Ppat_var "ty" (typing/typedecl.ml[1278,46387+33]..[1278,46387+35])
              expression (typing/typedecl.ml[1279,46425+2]..[1291,47022+8])
                Pexp_match
                expression (typing/typedecl.ml[1279,46425+8]..[1279,46425+53])
                  Pexp_tuple
                  [
                    expression (typing/typedecl.ml[1279,46425+8]..[1279,46425+12])
                      Pexp_ident "kind" (typing/typedecl.ml[1279,46425+8]..[1279,46425+12])
                    expression (typing/typedecl.ml[1279,46425+14]..[1279,46425+53])
                      Pexp_apply
                      expression (typing/typedecl.ml[1279,46425+14]..[1279,46425+22])
                        Pexp_ident "get_desc" (typing/typedecl.ml[1279,46425+14]..[1279,46425+22])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1279,46425+23]..[1279,46425+53])
                            Pexp_apply
                            expression (typing/typedecl.ml[1279,46425+24]..[1279,46425+45])
                              Pexp_ident "Ctype.expand_head_opt" (typing/typedecl.ml[1279,46425+24]..[1279,46425+45])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1279,46425+46]..[1279,46425+49])
                                  Pexp_ident "env" (typing/typedecl.ml[1279,46425+46]..[1279,46425+49])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1279,46425+50]..[1279,46425+52])
                                  Pexp_ident "ty" (typing/typedecl.ml[1279,46425+50]..[1279,46425+52])
                            ]
                      ]
                  ]
                [
                  <case>
                    pattern (typing/typedecl.ml[1280,46484+4]..[1280,46484+34])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1280,46484+4]..[1280,46484+12])
                          Ppat_construct "Untagged" (typing/typedecl.ml[1280,46484+4]..[1280,46484+12])
                          None
                        pattern (typing/typedecl.ml[1280,46484+14]..[1280,46484+34])
                          Ppat_construct "Tconstr" (typing/typedecl.ml[1280,46484+14]..[1280,46484+21])
                          Some
                            []
                            pattern (typing/typedecl.ml[1280,46484+22]..[1280,46484+34])
                              Ppat_tuple
                              [
                                pattern (typing/typedecl.ml[1280,46484+23]..[1280,46484+27])
                                  Ppat_var "path" (typing/typedecl.ml[1280,46484+23]..[1280,46484+27])
                                pattern (typing/typedecl.ml[1280,46484+29]..[1280,46484+30])
                                  Ppat_any
                                pattern (typing/typedecl.ml[1280,46484+32]..[1280,46484+33])
                                  Ppat_any
                              ]
                      ]
                    <when>
                      expression (typing/typedecl.ml[1280,46484+40]..[1280,46484+70])
                        Pexp_apply
                        expression (typing/typedecl.ml[1280,46484+40]..[1280,46484+49])
                          Pexp_ident "Path.same" (typing/typedecl.ml[1280,46484+40]..[1280,46484+49])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1280,46484+50]..[1280,46484+54])
                              Pexp_ident "path" (typing/typedecl.ml[1280,46484+50]..[1280,46484+54])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1280,46484+55]..[1280,46484+70])
                              Pexp_ident "Predef.path_int" (typing/typedecl.ml[1280,46484+55]..[1280,46484+70])
                        ]
                    expression (typing/typedecl.ml[1281,46558+4]..[1281,46558+21])
                      Pexp_construct "Some" (typing/typedecl.ml[1281,46558+4]..[1281,46558+8])
                      Some
                        expression (typing/typedecl.ml[1281,46558+9]..[1281,46558+21])
                          Pexp_construct "Untagged_int" (typing/typedecl.ml[1281,46558+9]..[1281,46558+21])
                          None
                  <case>
                    pattern (typing/typedecl.ml[1282,46580+4]..[1282,46580+33])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1282,46580+4]..[1282,46580+11])
                          Ppat_construct "Unboxed" (typing/typedecl.ml[1282,46580+4]..[1282,46580+11])
                          None
                        pattern (typing/typedecl.ml[1282,46580+13]..[1282,46580+33])
                          Ppat_construct "Tconstr" (typing/typedecl.ml[1282,46580+13]..[1282,46580+20])
                          Some
                            []
                            pattern (typing/typedecl.ml[1282,46580+21]..[1282,46580+33])
                              Ppat_tuple
                              [
                                pattern (typing/typedecl.ml[1282,46580+22]..[1282,46580+26])
                                  Ppat_var "path" (typing/typedecl.ml[1282,46580+22]..[1282,46580+26])
                                pattern (typing/typedecl.ml[1282,46580+28]..[1282,46580+29])
                                  Ppat_any
                                pattern (typing/typedecl.ml[1282,46580+31]..[1282,46580+32])
                                  Ppat_any
                              ]
                      ]
                    <when>
                      expression (typing/typedecl.ml[1282,46580+39]..[1282,46580+71])
                        Pexp_apply
                        expression (typing/typedecl.ml[1282,46580+39]..[1282,46580+48])
                          Pexp_ident "Path.same" (typing/typedecl.ml[1282,46580+39]..[1282,46580+48])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1282,46580+49]..[1282,46580+53])
                              Pexp_ident "path" (typing/typedecl.ml[1282,46580+49]..[1282,46580+53])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1282,46580+54]..[1282,46580+71])
                              Pexp_ident "Predef.path_float" (typing/typedecl.ml[1282,46580+54]..[1282,46580+71])
                        ]
                    expression (typing/typedecl.ml[1283,46655+4]..[1283,46655+22])
                      Pexp_construct "Some" (typing/typedecl.ml[1283,46655+4]..[1283,46655+8])
                      Some
                        expression (typing/typedecl.ml[1283,46655+9]..[1283,46655+22])
                          Pexp_construct "Unboxed_float" (typing/typedecl.ml[1283,46655+9]..[1283,46655+22])
                          None
                  <case>
                    pattern (typing/typedecl.ml[1284,46678+4]..[1284,46678+33])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1284,46678+4]..[1284,46678+11])
                          Ppat_construct "Unboxed" (typing/typedecl.ml[1284,46678+4]..[1284,46678+11])
                          None
                        pattern (typing/typedecl.ml[1284,46678+13]..[1284,46678+33])
                          Ppat_construct "Tconstr" (typing/typedecl.ml[1284,46678+13]..[1284,46678+20])
                          Some
                            []
                            pattern (typing/typedecl.ml[1284,46678+21]..[1284,46678+33])
                              Ppat_tuple
                              [
                                pattern (typing/typedecl.ml[1284,46678+22]..[1284,46678+26])
                                  Ppat_var "path" (typing/typedecl.ml[1284,46678+22]..[1284,46678+26])
                                pattern (typing/typedecl.ml[1284,46678+28]..[1284,46678+29])
                                  Ppat_any
                                pattern (typing/typedecl.ml[1284,46678+31]..[1284,46678+32])
                                  Ppat_any
                              ]
                      ]
                    <when>
                      expression (typing/typedecl.ml[1284,46678+39]..[1284,46678+71])
                        Pexp_apply
                        expression (typing/typedecl.ml[1284,46678+39]..[1284,46678+48])
                          Pexp_ident "Path.same" (typing/typedecl.ml[1284,46678+39]..[1284,46678+48])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1284,46678+49]..[1284,46678+53])
                              Pexp_ident "path" (typing/typedecl.ml[1284,46678+49]..[1284,46678+53])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1284,46678+54]..[1284,46678+71])
                              Pexp_ident "Predef.path_int32" (typing/typedecl.ml[1284,46678+54]..[1284,46678+71])
                        ]
                    expression (typing/typedecl.ml[1285,46753+4]..[1285,46753+33])
                      Pexp_construct "Some" (typing/typedecl.ml[1285,46753+4]..[1285,46753+8])
                      Some
                        expression (typing/typedecl.ml[1285,46753+9]..[1285,46753+33])
                          Pexp_construct "Unboxed_integer" (typing/typedecl.ml[1285,46753+10]..[1285,46753+25])
                          Some
                            expression (typing/typedecl.ml[1285,46753+26]..[1285,46753+32])
                              Pexp_construct "Pint32" (typing/typedecl.ml[1285,46753+26]..[1285,46753+32])
                              None
                  <case>
                    pattern (typing/typedecl.ml[1286,46787+4]..[1286,46787+33])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1286,46787+4]..[1286,46787+11])
                          Ppat_construct "Unboxed" (typing/typedecl.ml[1286,46787+4]..[1286,46787+11])
                          None
                        pattern (typing/typedecl.ml[1286,46787+13]..[1286,46787+33])
                          Ppat_construct "Tconstr" (typing/typedecl.ml[1286,46787+13]..[1286,46787+20])
                          Some
                            []
                            pattern (typing/typedecl.ml[1286,46787+21]..[1286,46787+33])
                              Ppat_tuple
                              [
                                pattern (typing/typedecl.ml[1286,46787+22]..[1286,46787+26])
                                  Ppat_var "path" (typing/typedecl.ml[1286,46787+22]..[1286,46787+26])
                                pattern (typing/typedecl.ml[1286,46787+28]..[1286,46787+29])
                                  Ppat_any
                                pattern (typing/typedecl.ml[1286,46787+31]..[1286,46787+32])
                                  Ppat_any
                              ]
                      ]
                    <when>
                      expression (typing/typedecl.ml[1286,46787+39]..[1286,46787+71])
                        Pexp_apply
                        expression (typing/typedecl.ml[1286,46787+39]..[1286,46787+48])
                          Pexp_ident "Path.same" (typing/typedecl.ml[1286,46787+39]..[1286,46787+48])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1286,46787+49]..[1286,46787+53])
                              Pexp_ident "path" (typing/typedecl.ml[1286,46787+49]..[1286,46787+53])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1286,46787+54]..[1286,46787+71])
                              Pexp_ident "Predef.path_int64" (typing/typedecl.ml[1286,46787+54]..[1286,46787+71])
                        ]
                    expression (typing/typedecl.ml[1287,46862+4]..[1287,46862+33])
                      Pexp_construct "Some" (typing/typedecl.ml[1287,46862+4]..[1287,46862+8])
                      Some
                        expression (typing/typedecl.ml[1287,46862+9]..[1287,46862+33])
                          Pexp_construct "Unboxed_integer" (typing/typedecl.ml[1287,46862+10]..[1287,46862+25])
                          Some
                            expression (typing/typedecl.ml[1287,46862+26]..[1287,46862+32])
                              Pexp_construct "Pint64" (typing/typedecl.ml[1287,46862+26]..[1287,46862+32])
                              None
                  <case>
                    pattern (typing/typedecl.ml[1288,46896+4]..[1288,46896+33])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1288,46896+4]..[1288,46896+11])
                          Ppat_construct "Unboxed" (typing/typedecl.ml[1288,46896+4]..[1288,46896+11])
                          None
                        pattern (typing/typedecl.ml[1288,46896+13]..[1288,46896+33])
                          Ppat_construct "Tconstr" (typing/typedecl.ml[1288,46896+13]..[1288,46896+20])
                          Some
                            []
                            pattern (typing/typedecl.ml[1288,46896+21]..[1288,46896+33])
                              Ppat_tuple
                              [
                                pattern (typing/typedecl.ml[1288,46896+22]..[1288,46896+26])
                                  Ppat_var "path" (typing/typedecl.ml[1288,46896+22]..[1288,46896+26])
                                pattern (typing/typedecl.ml[1288,46896+28]..[1288,46896+29])
                                  Ppat_any
                                pattern (typing/typedecl.ml[1288,46896+31]..[1288,46896+32])
                                  Ppat_any
                              ]
                      ]
                    <when>
                      expression (typing/typedecl.ml[1288,46896+39]..[1288,46896+75])
                        Pexp_apply
                        expression (typing/typedecl.ml[1288,46896+39]..[1288,46896+48])
                          Pexp_ident "Path.same" (typing/typedecl.ml[1288,46896+39]..[1288,46896+48])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1288,46896+49]..[1288,46896+53])
                              Pexp_ident "path" (typing/typedecl.ml[1288,46896+49]..[1288,46896+53])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1288,46896+54]..[1288,46896+75])
                              Pexp_ident "Predef.path_nativeint" (typing/typedecl.ml[1288,46896+54]..[1288,46896+75])
                        ]
                    expression (typing/typedecl.ml[1289,46975+4]..[1289,46975+37])
                      Pexp_construct "Some" (typing/typedecl.ml[1289,46975+4]..[1289,46975+8])
                      Some
                        expression (typing/typedecl.ml[1289,46975+9]..[1289,46975+37])
                          Pexp_construct "Unboxed_integer" (typing/typedecl.ml[1289,46975+10]..[1289,46975+25])
                          Some
                            expression (typing/typedecl.ml[1289,46975+26]..[1289,46975+36])
                              Pexp_construct "Pnativeint" (typing/typedecl.ml[1289,46975+26]..[1289,46975+36])
                              None
                  <case>
                    pattern (typing/typedecl.ml[1290,47013+4]..[1290,47013+5])
                      Ppat_any
                    expression (typing/typedecl.ml[1291,47022+4]..[1291,47022+8])
                      Pexp_construct "None" (typing/typedecl.ml[1291,47022+4]..[1291,47022+8])
                      None
                ]
    ]
  structure_item (typing/typedecl.ml[1295,47144+0]..[1310,47683+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1295,47144+4]..[1295,47144+44])
          Ppat_var "error_if_has_deep_native_repr_attributes" (typing/typedecl.ml[1295,47144+4]..[1295,47144+44])
        expression (typing/typedecl.ml[1295,47144+45]..[1310,47683+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1295,47144+45]..[1295,47144+54])
            Ppat_var "core_type" (typing/typedecl.ml[1295,47144+45]..[1295,47144+54])
          expression (typing/typedecl.ml[1296,47201+2]..[1310,47683+46])
            Pexp_open Fresh
            module_expr (typing/typedecl.ml[1296,47201+11]..[1296,47201+23])
              Pmod_ident "Ast_iterator" (typing/typedecl.ml[1296,47201+11]..[1296,47201+23])
            expression (typing/typedecl.ml[1297,47228+2]..[1310,47683+46])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typedecl.ml[1297,47228+6]..[1297,47228+19])
                    Ppat_var "this_iterator" (typing/typedecl.ml[1297,47228+6]..[1297,47228+19])
                  expression (typing/typedecl.ml[1298,47250+4]..[1308,47630+47])
                    Pexp_record
                    [
                      "typ" (typing/typedecl.ml[1298,47250+28]..[1298,47250+31])
                        expression (typing/typedecl.ml[1298,47250+34]..[1308,47630+45])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typedecl.ml[1298,47250+38]..[1298,47250+46])
                            Ppat_var "iterator" (typing/typedecl.ml[1298,47250+38]..[1298,47250+46])
                          expression (typing/typedecl.ml[1298,47250+47]..[1308,47630+45]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typedecl.ml[1298,47250+47]..[1298,47250+56])
                              Ppat_var "core_type" (typing/typedecl.ml[1298,47250+47]..[1298,47250+56])
                            expression (typing/typedecl.ml[1299,47310+6]..[1308,47630+45])
                              Pexp_sequence
                              expression (typing/typedecl.ml[1299,47310+6]..[1307,47619+9])
                                Pexp_match
                                expression (typing/typedecl.ml[1301,47336+10]..[1301,47336+79])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[1301,47336+10]..[1301,47336+35])
                                    Pexp_ident "get_native_repr_attribute" (typing/typedecl.ml[1301,47336+10]..[1301,47336+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1301,47336+36]..[1301,47336+61])
                                        Pexp_field
                                        expression (typing/typedecl.ml[1301,47336+36]..[1301,47336+45])
                                          Pexp_ident "core_type" (typing/typedecl.ml[1301,47336+36]..[1301,47336+45])
                                        "ptyp_attributes" (typing/typedecl.ml[1301,47336+46]..[1301,47336+61])
                                    <arg>
                                    Labelled "global_repr"
                                      expression (typing/typedecl.ml[1301,47336+75]..[1301,47336+79])
                                        Pexp_construct "None" (typing/typedecl.ml[1301,47336+75]..[1301,47336+79])
                                        None
                                  ]
                                [
                                  <case>
                                    pattern (typing/typedecl.ml[1303,47429+10]..[1303,47429+39])
                                      Ppat_construct "Native_repr_attr_present" (typing/typedecl.ml[1303,47429+10]..[1303,47429+34])
                                      Some
                                        []
                                        pattern (typing/typedecl.ml[1303,47429+35]..[1303,47429+39])
                                          Ppat_var "kind" (typing/typedecl.ml[1303,47429+35]..[1303,47429+39])
                                    expression (typing/typedecl.ml[1304,47472+11]..[1305,47517+61])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[1304,47472+11]..[1304,47472+16])
                                        Pexp_ident "raise" (typing/typedecl.ml[1304,47472+11]..[1304,47472+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1304,47472+17]..[1305,47517+61])
                                            Pexp_construct "Error" (typing/typedecl.ml[1304,47472+18]..[1304,47472+23])
                                            Some
                                              expression (typing/typedecl.ml[1304,47472+24]..[1305,47517+60])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typedecl.ml[1304,47472+25]..[1304,47472+43])
                                                    Pexp_field
                                                    expression (typing/typedecl.ml[1304,47472+25]..[1304,47472+34])
                                                      Pexp_ident "core_type" (typing/typedecl.ml[1304,47472+25]..[1304,47472+34])
                                                    "ptyp_loc" (typing/typedecl.ml[1304,47472+35]..[1304,47472+43])
                                                  expression (typing/typedecl.ml[1305,47517+25]..[1305,47517+59])
                                                    Pexp_construct "Deep_unbox_or_untag_attribute" (typing/typedecl.ml[1305,47517+25]..[1305,47517+54])
                                                    Some
                                                      expression (typing/typedecl.ml[1305,47517+55]..[1305,47517+59])
                                                        Pexp_ident "kind" (typing/typedecl.ml[1305,47517+55]..[1305,47517+59])
                                                ]
                                      ]
                                  <case>
                                    pattern (typing/typedecl.ml[1306,47579+10]..[1306,47579+33])
                                      Ppat_construct "Native_repr_attr_absent" (typing/typedecl.ml[1306,47579+10]..[1306,47579+33])
                                      None
                                    expression (typing/typedecl.ml[1306,47579+37]..[1306,47579+39])
                                      Pexp_construct "()" (typing/typedecl.ml[1306,47579+37]..[1306,47579+39])
                                      None
                                ]
                              expression (typing/typedecl.ml[1308,47630+6]..[1308,47630+45])
                                Pexp_apply
                                expression (typing/typedecl.ml[1308,47630+6]..[1308,47630+26])
                                  Pexp_field
                                  expression (typing/typedecl.ml[1308,47630+6]..[1308,47630+22])
                                    Pexp_ident "default_iterator" (typing/typedecl.ml[1308,47630+6]..[1308,47630+22])
                                  "typ" (typing/typedecl.ml[1308,47630+23]..[1308,47630+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1308,47630+27]..[1308,47630+35])
                                      Pexp_ident "iterator" (typing/typedecl.ml[1308,47630+27]..[1308,47630+35])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1308,47630+36]..[1308,47630+45])
                                      Pexp_ident "core_type" (typing/typedecl.ml[1308,47630+36]..[1308,47630+45])
                                ]
                    ]
                    Some
                      expression (typing/typedecl.ml[1298,47250+6]..[1298,47250+22])
                        Pexp_ident "default_iterator" (typing/typedecl.ml[1298,47250+6]..[1298,47250+22])
              ]
              expression (typing/typedecl.ml[1310,47683+2]..[1310,47683+46])
                Pexp_apply
                expression (typing/typedecl.ml[1310,47683+2]..[1310,47683+22])
                  Pexp_field
                  expression (typing/typedecl.ml[1310,47683+2]..[1310,47683+18])
                    Pexp_ident "default_iterator" (typing/typedecl.ml[1310,47683+2]..[1310,47683+18])
                  "typ" (typing/typedecl.ml[1310,47683+19]..[1310,47683+22])
                [
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[1310,47683+23]..[1310,47683+36])
                      Pexp_ident "this_iterator" (typing/typedecl.ml[1310,47683+23]..[1310,47683+36])
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[1310,47683+37]..[1310,47683+46])
                      Pexp_ident "core_type" (typing/typedecl.ml[1310,47683+37]..[1310,47683+46])
                ]
    ]
  structure_item (typing/typedecl.ml[1312,47731+0]..[1322,48172+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1312,47731+4]..[1312,47731+20])
          Ppat_var "make_native_repr" (typing/typedecl.ml[1312,47731+4]..[1312,47731+20])
        expression (typing/typedecl.ml[1312,47731+21]..[1322,48172+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1312,47731+21]..[1312,47731+24])
            Ppat_var "env" (typing/typedecl.ml[1312,47731+21]..[1312,47731+24])
          expression (typing/typedecl.ml[1312,47731+25]..[1322,48172+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[1312,47731+25]..[1312,47731+34])
              Ppat_var "core_type" (typing/typedecl.ml[1312,47731+25]..[1312,47731+34])
            expression (typing/typedecl.ml[1312,47731+35]..[1322,48172+7]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[1312,47731+35]..[1312,47731+37])
                Ppat_var "ty" (typing/typedecl.ml[1312,47731+35]..[1312,47731+37])
              expression (typing/typedecl.ml[1312,47731+38]..[1322,48172+7]) ghost
                Pexp_fun
                Labelled "global_repr"
                None
                pattern (typing/typedecl.ml[1312,47731+39]..[1312,47731+50])
                  Ppat_var "global_repr" (typing/typedecl.ml[1312,47731+39]..[1312,47731+50])
                expression (typing/typedecl.ml[1313,47784+2]..[1322,48172+7])
                  Pexp_sequence
                  expression (typing/typedecl.ml[1313,47784+2]..[1313,47784+52])
                    Pexp_apply
                    expression (typing/typedecl.ml[1313,47784+2]..[1313,47784+42])
                      Pexp_ident "error_if_has_deep_native_repr_attributes" (typing/typedecl.ml[1313,47784+2]..[1313,47784+42])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1313,47784+43]..[1313,47784+52])
                          Pexp_ident "core_type" (typing/typedecl.ml[1313,47784+43]..[1313,47784+52])
                    ]
                  expression (typing/typedecl.ml[1314,47838+2]..[1322,48172+7])
                    Pexp_match
                    expression (typing/typedecl.ml[1314,47838+8]..[1314,47838+72])
                      Pexp_apply
                      expression (typing/typedecl.ml[1314,47838+8]..[1314,47838+33])
                        Pexp_ident "get_native_repr_attribute" (typing/typedecl.ml[1314,47838+8]..[1314,47838+33])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1314,47838+34]..[1314,47838+59])
                            Pexp_field
                            expression (typing/typedecl.ml[1314,47838+34]..[1314,47838+43])
                              Pexp_ident "core_type" (typing/typedecl.ml[1314,47838+34]..[1314,47838+43])
                            "ptyp_attributes" (typing/typedecl.ml[1314,47838+44]..[1314,47838+59])
                        <arg>
                        Labelled "global_repr"
                          expression (typing/typedecl.ml[1314,47838+61]..[1314,47838+72])
                            Pexp_ident "global_repr" (typing/typedecl.ml[1314,47838+61]..[1314,47838+72])
                      ]
                    [
                      <case>
                        pattern (typing/typedecl.ml[1315,47916+4]..[1315,47916+27])
                          Ppat_construct "Native_repr_attr_absent" (typing/typedecl.ml[1315,47916+4]..[1315,47916+27])
                          None
                        expression (typing/typedecl.ml[1316,47947+4]..[1316,47947+22])
                          Pexp_construct "Same_as_ocaml_repr" (typing/typedecl.ml[1316,47947+4]..[1316,47947+22])
                          None
                      <case>
                        pattern (typing/typedecl.ml[1317,47970+4]..[1317,47970+33])
                          Ppat_construct "Native_repr_attr_present" (typing/typedecl.ml[1317,47970+4]..[1317,47970+28])
                          Some
                            []
                            pattern (typing/typedecl.ml[1317,47970+29]..[1317,47970+33])
                              Ppat_var "kind" (typing/typedecl.ml[1317,47970+29]..[1317,47970+33])
                        expression (typing/typedecl.ml[1318,48007+4]..[1322,48172+7])
                          Pexp_match
                          expression (typing/typedecl.ml[1318,48007+16]..[1318,48007+47])
                            Pexp_apply
                            expression (typing/typedecl.ml[1318,48007+16]..[1318,48007+35])
                              Pexp_ident "native_repr_of_type" (typing/typedecl.ml[1318,48007+16]..[1318,48007+35])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1318,48007+36]..[1318,48007+39])
                                  Pexp_ident "env" (typing/typedecl.ml[1318,48007+36]..[1318,48007+39])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1318,48007+40]..[1318,48007+44])
                                  Pexp_ident "kind" (typing/typedecl.ml[1318,48007+40]..[1318,48007+44])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1318,48007+45]..[1318,48007+47])
                                  Pexp_ident "ty" (typing/typedecl.ml[1318,48007+45]..[1318,48007+47])
                            ]
                          [
                            <case>
                              pattern (typing/typedecl.ml[1319,48060+6]..[1319,48060+10])
                                Ppat_construct "None" (typing/typedecl.ml[1319,48060+6]..[1319,48060+10])
                                None
                              expression (typing/typedecl.ml[1320,48074+6]..[1320,48074+73])
                                Pexp_apply
                                expression (typing/typedecl.ml[1320,48074+6]..[1320,48074+11])
                                  Pexp_ident "raise" (typing/typedecl.ml[1320,48074+6]..[1320,48074+11])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1320,48074+12]..[1320,48074+73])
                                      Pexp_construct "Error" (typing/typedecl.ml[1320,48074+13]..[1320,48074+18])
                                      Some
                                        expression (typing/typedecl.ml[1320,48074+19]..[1320,48074+72])
                                          Pexp_tuple
                                          [
                                            expression (typing/typedecl.ml[1320,48074+20]..[1320,48074+38])
                                              Pexp_field
                                              expression (typing/typedecl.ml[1320,48074+20]..[1320,48074+29])
                                                Pexp_ident "core_type" (typing/typedecl.ml[1320,48074+20]..[1320,48074+29])
                                              "ptyp_loc" (typing/typedecl.ml[1320,48074+30]..[1320,48074+38])
                                            expression (typing/typedecl.ml[1320,48074+40]..[1320,48074+71])
                                              Pexp_construct "Cannot_unbox_or_untag_type" (typing/typedecl.ml[1320,48074+40]..[1320,48074+66])
                                              Some
                                                expression (typing/typedecl.ml[1320,48074+67]..[1320,48074+71])
                                                  Pexp_ident "kind" (typing/typedecl.ml[1320,48074+67]..[1320,48074+71])
                                          ]
                                ]
                            <case>
                              pattern (typing/typedecl.ml[1321,48148+6]..[1321,48148+15])
                                Ppat_construct "Some" (typing/typedecl.ml[1321,48148+6]..[1321,48148+10])
                                Some
                                  []
                                  pattern (typing/typedecl.ml[1321,48148+11]..[1321,48148+15])
                                    Ppat_var "repr" (typing/typedecl.ml[1321,48148+11]..[1321,48148+15])
                              expression (typing/typedecl.ml[1321,48148+19]..[1321,48148+23])
                                Pexp_ident "repr" (typing/typedecl.ml[1321,48148+19]..[1321,48148+23])
                          ]
                    ]
    ]
  structure_item (typing/typedecl.ml[1324,48181+0]..[1339,48904+61])
    Pstr_value Rec
    [
      <def>
        pattern (typing/typedecl.ml[1324,48181+8]..[1324,48181+36])
          Ppat_var "parse_native_repr_attributes" (typing/typedecl.ml[1324,48181+8]..[1324,48181+36])
        expression (typing/typedecl.ml[1324,48181+37]..[1339,48904+61]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1324,48181+37]..[1324,48181+40])
            Ppat_var "env" (typing/typedecl.ml[1324,48181+37]..[1324,48181+40])
          expression (typing/typedecl.ml[1324,48181+41]..[1339,48904+61]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[1324,48181+41]..[1324,48181+50])
              Ppat_var "core_type" (typing/typedecl.ml[1324,48181+41]..[1324,48181+50])
            expression (typing/typedecl.ml[1324,48181+51]..[1339,48904+61]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[1324,48181+51]..[1324,48181+53])
                Ppat_var "ty" (typing/typedecl.ml[1324,48181+51]..[1324,48181+53])
              expression (typing/typedecl.ml[1324,48181+54]..[1339,48904+61]) ghost
                Pexp_fun
                Labelled "global_repr"
                None
                pattern (typing/typedecl.ml[1324,48181+55]..[1324,48181+66])
                  Ppat_var "global_repr" (typing/typedecl.ml[1324,48181+55]..[1324,48181+66])
                expression (typing/typedecl.ml[1325,48250+2]..[1339,48904+61])
                  Pexp_match
                  expression (typing/typedecl.ml[1325,48250+8]..[1326,48292+73])
                    Pexp_tuple
                    [
                      expression (typing/typedecl.ml[1325,48250+8]..[1325,48250+27])
                        Pexp_field
                        expression (typing/typedecl.ml[1325,48250+8]..[1325,48250+17])
                          Pexp_ident "core_type" (typing/typedecl.ml[1325,48250+8]..[1325,48250+17])
                        "ptyp_desc" (typing/typedecl.ml[1325,48250+18]..[1325,48250+27])
                      expression (typing/typedecl.ml[1325,48250+29]..[1325,48250+40])
                        Pexp_apply
                        expression (typing/typedecl.ml[1325,48250+29]..[1325,48250+37])
                          Pexp_ident "get_desc" (typing/typedecl.ml[1325,48250+29]..[1325,48250+37])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1325,48250+38]..[1325,48250+40])
                              Pexp_ident "ty" (typing/typedecl.ml[1325,48250+38]..[1325,48250+40])
                        ]
                      expression (typing/typedecl.ml[1326,48292+4]..[1326,48292+73])
                        Pexp_apply
                        expression (typing/typedecl.ml[1326,48292+4]..[1326,48292+29])
                          Pexp_ident "get_native_repr_attribute" (typing/typedecl.ml[1326,48292+4]..[1326,48292+29])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1326,48292+30]..[1326,48292+55])
                              Pexp_field
                              expression (typing/typedecl.ml[1326,48292+30]..[1326,48292+39])
                                Pexp_ident "core_type" (typing/typedecl.ml[1326,48292+30]..[1326,48292+39])
                              "ptyp_attributes" (typing/typedecl.ml[1326,48292+40]..[1326,48292+55])
                          <arg>
                          Labelled "global_repr"
                            expression (typing/typedecl.ml[1326,48292+69]..[1326,48292+73])
                              Pexp_construct "None" (typing/typedecl.ml[1326,48292+69]..[1326,48292+73])
                              None
                        ]
                    ]
                  [
                    <case>
                      pattern (typing/typedecl.ml[1328,48373+4]..[1328,48373+57])
                        Ppat_tuple
                        [
                          pattern (typing/typedecl.ml[1328,48373+4]..[1328,48373+16])
                            Ppat_construct "Ptyp_arrow" (typing/typedecl.ml[1328,48373+4]..[1328,48373+14])
                            Some
                              []
                              pattern (typing/typedecl.ml[1328,48373+15]..[1328,48373+16])
                                Ppat_any
                          pattern (typing/typedecl.ml[1328,48373+18]..[1328,48373+26])
                            Ppat_construct "Tarrow" (typing/typedecl.ml[1328,48373+18]..[1328,48373+24])
                            Some
                              []
                              pattern (typing/typedecl.ml[1328,48373+25]..[1328,48373+26])
                                Ppat_any
                          pattern (typing/typedecl.ml[1328,48373+28]..[1328,48373+57])
                            Ppat_construct "Native_repr_attr_present" (typing/typedecl.ml[1328,48373+28]..[1328,48373+52])
                            Some
                              []
                              pattern (typing/typedecl.ml[1328,48373+53]..[1328,48373+57])
                                Ppat_var "kind" (typing/typedecl.ml[1328,48373+53]..[1328,48373+57])
                        ]
                      expression (typing/typedecl.ml[1329,48435+4]..[1329,48435+71])
                        Pexp_apply
                        expression (typing/typedecl.ml[1329,48435+4]..[1329,48435+9])
                          Pexp_ident "raise" (typing/typedecl.ml[1329,48435+4]..[1329,48435+9])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1329,48435+10]..[1329,48435+71])
                              Pexp_construct "Error" (typing/typedecl.ml[1329,48435+11]..[1329,48435+16])
                              Some
                                expression (typing/typedecl.ml[1329,48435+17]..[1329,48435+70])
                                  Pexp_tuple
                                  [
                                    expression (typing/typedecl.ml[1329,48435+18]..[1329,48435+36])
                                      Pexp_field
                                      expression (typing/typedecl.ml[1329,48435+18]..[1329,48435+27])
                                        Pexp_ident "core_type" (typing/typedecl.ml[1329,48435+18]..[1329,48435+27])
                                      "ptyp_loc" (typing/typedecl.ml[1329,48435+28]..[1329,48435+36])
                                    expression (typing/typedecl.ml[1329,48435+38]..[1329,48435+69])
                                      Pexp_construct "Cannot_unbox_or_untag_type" (typing/typedecl.ml[1329,48435+38]..[1329,48435+64])
                                      Some
                                        expression (typing/typedecl.ml[1329,48435+65]..[1329,48435+69])
                                          Pexp_ident "kind" (typing/typedecl.ml[1329,48435+65]..[1329,48435+69])
                                  ]
                        ]
                    <case>
                      pattern (typing/typedecl.ml[1330,48507+4]..[1330,48507+54])
                        Ppat_tuple
                        [
                          pattern (typing/typedecl.ml[1330,48507+4]..[1330,48507+28])
                            Ppat_construct "Ptyp_arrow" (typing/typedecl.ml[1330,48507+4]..[1330,48507+14])
                            Some
                              []
                              pattern (typing/typedecl.ml[1330,48507+15]..[1330,48507+28])
                                Ppat_tuple
                                [
                                  pattern (typing/typedecl.ml[1330,48507+16]..[1330,48507+17])
                                    Ppat_any
                                  pattern (typing/typedecl.ml[1330,48507+19]..[1330,48507+22])
                                    Ppat_var "ct1" (typing/typedecl.ml[1330,48507+19]..[1330,48507+22])
                                  pattern (typing/typedecl.ml[1330,48507+24]..[1330,48507+27])
                                    Ppat_var "ct2" (typing/typedecl.ml[1330,48507+24]..[1330,48507+27])
                                ]
                          pattern (typing/typedecl.ml[1330,48507+30]..[1330,48507+51])
                            Ppat_construct "Tarrow" (typing/typedecl.ml[1330,48507+30]..[1330,48507+36])
                            Some
                              []
                              pattern (typing/typedecl.ml[1330,48507+37]..[1330,48507+51])
                                Ppat_tuple
                                [
                                  pattern (typing/typedecl.ml[1330,48507+38]..[1330,48507+39])
                                    Ppat_any
                                  pattern (typing/typedecl.ml[1330,48507+41]..[1330,48507+43])
                                    Ppat_var "t1" (typing/typedecl.ml[1330,48507+41]..[1330,48507+43])
                                  pattern (typing/typedecl.ml[1330,48507+45]..[1330,48507+47])
                                    Ppat_var "t2" (typing/typedecl.ml[1330,48507+45]..[1330,48507+47])
                                  pattern (typing/typedecl.ml[1330,48507+49]..[1330,48507+50])
                                    Ppat_any
                                ]
                          pattern (typing/typedecl.ml[1330,48507+53]..[1330,48507+54])
                            Ppat_any
                        ]
                      expression (typing/typedecl.ml[1331,48565+4]..[1335,48724+37])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typedecl.ml[1331,48565+8]..[1331,48565+16])
                              Ppat_var "repr_arg" (typing/typedecl.ml[1331,48565+8]..[1331,48565+16])
                            expression (typing/typedecl.ml[1331,48565+19]..[1331,48565+59])
                              Pexp_apply
                              expression (typing/typedecl.ml[1331,48565+19]..[1331,48565+35])
                                Pexp_ident "make_native_repr" (typing/typedecl.ml[1331,48565+19]..[1331,48565+35])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1331,48565+36]..[1331,48565+39])
                                    Pexp_ident "env" (typing/typedecl.ml[1331,48565+36]..[1331,48565+39])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1331,48565+40]..[1331,48565+43])
                                    Pexp_ident "ct1" (typing/typedecl.ml[1331,48565+40]..[1331,48565+43])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1331,48565+44]..[1331,48565+46])
                                    Pexp_ident "t1" (typing/typedecl.ml[1331,48565+44]..[1331,48565+46])
                                <arg>
                                Labelled "global_repr"
                                  expression (typing/typedecl.ml[1331,48565+48]..[1331,48565+59])
                                    Pexp_ident "global_repr" (typing/typedecl.ml[1331,48565+48]..[1331,48565+59])
                              ]
                        ]
                        expression (typing/typedecl.ml[1332,48628+4]..[1335,48724+37])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typedecl.ml[1332,48628+8]..[1332,48628+27])
                                Ppat_tuple
                                [
                                  pattern (typing/typedecl.ml[1332,48628+8]..[1332,48628+17])
                                    Ppat_var "repr_args" (typing/typedecl.ml[1332,48628+8]..[1332,48628+17])
                                  pattern (typing/typedecl.ml[1332,48628+19]..[1332,48628+27])
                                    Ppat_var "repr_res" (typing/typedecl.ml[1332,48628+19]..[1332,48628+27])
                                ]
                              expression (typing/typedecl.ml[1333,48658+6]..[1333,48658+58])
                                Pexp_apply
                                expression (typing/typedecl.ml[1333,48658+6]..[1333,48658+34])
                                  Pexp_ident "parse_native_repr_attributes" (typing/typedecl.ml[1333,48658+6]..[1333,48658+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1333,48658+35]..[1333,48658+38])
                                      Pexp_ident "env" (typing/typedecl.ml[1333,48658+35]..[1333,48658+38])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1333,48658+39]..[1333,48658+42])
                                      Pexp_ident "ct2" (typing/typedecl.ml[1333,48658+39]..[1333,48658+42])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1333,48658+43]..[1333,48658+45])
                                      Pexp_ident "t2" (typing/typedecl.ml[1333,48658+43]..[1333,48658+45])
                                  <arg>
                                  Labelled "global_repr"
                                    expression (typing/typedecl.ml[1333,48658+47]..[1333,48658+58])
                                      Pexp_ident "global_repr" (typing/typedecl.ml[1333,48658+47]..[1333,48658+58])
                                ]
                          ]
                          expression (typing/typedecl.ml[1335,48724+4]..[1335,48724+37])
                            Pexp_tuple
                            [
                              expression (typing/typedecl.ml[1335,48724+5]..[1335,48724+26])
                                Pexp_construct "::" (typing/typedecl.ml[1335,48724+14]..[1335,48724+16])
                                Some
                                  expression (typing/typedecl.ml[1335,48724+5]..[1335,48724+26]) ghost
                                    Pexp_tuple
                                    [
                                      expression (typing/typedecl.ml[1335,48724+5]..[1335,48724+13])
                                        Pexp_ident "repr_arg" (typing/typedecl.ml[1335,48724+5]..[1335,48724+13])
                                      expression (typing/typedecl.ml[1335,48724+17]..[1335,48724+26])
                                        Pexp_ident "repr_args" (typing/typedecl.ml[1335,48724+17]..[1335,48724+26])
                                    ]
                              expression (typing/typedecl.ml[1335,48724+28]..[1335,48724+36])
                                Pexp_ident "repr_res" (typing/typedecl.ml[1335,48724+28]..[1335,48724+36])
                            ]
                    <case>
                      pattern (typing/typedecl.ml[1336,48762+4]..[1336,48762+26])
                        Ppat_tuple
                        [
                          pattern (typing/typedecl.ml[1336,48762+4]..[1336,48762+20])
                            Ppat_construct "Ptyp_poly" (typing/typedecl.ml[1336,48762+4]..[1336,48762+13])
                            Some
                              []
                              pattern (typing/typedecl.ml[1336,48762+14]..[1336,48762+20])
                                Ppat_tuple
                                [
                                  pattern (typing/typedecl.ml[1336,48762+15]..[1336,48762+16])
                                    Ppat_any
                                  pattern (typing/typedecl.ml[1336,48762+18]..[1336,48762+19])
                                    Ppat_var "t" (typing/typedecl.ml[1336,48762+18]..[1336,48762+19])
                                ]
                          pattern (typing/typedecl.ml[1336,48762+22]..[1336,48762+23])
                            Ppat_any
                          pattern (typing/typedecl.ml[1336,48762+25]..[1336,48762+26])
                            Ppat_any
                        ]
                      expression (typing/typedecl.ml[1337,48792+5]..[1337,48792+55])
                        Pexp_apply
                        expression (typing/typedecl.ml[1337,48792+5]..[1337,48792+33])
                          Pexp_ident "parse_native_repr_attributes" (typing/typedecl.ml[1337,48792+5]..[1337,48792+33])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1337,48792+34]..[1337,48792+37])
                              Pexp_ident "env" (typing/typedecl.ml[1337,48792+34]..[1337,48792+37])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1337,48792+38]..[1337,48792+39])
                              Pexp_ident "t" (typing/typedecl.ml[1337,48792+38]..[1337,48792+39])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1337,48792+40]..[1337,48792+42])
                              Pexp_ident "ty" (typing/typedecl.ml[1337,48792+40]..[1337,48792+42])
                          <arg>
                          Labelled "global_repr"
                            expression (typing/typedecl.ml[1337,48792+44]..[1337,48792+55])
                              Pexp_ident "global_repr" (typing/typedecl.ml[1337,48792+44]..[1337,48792+55])
                        ]
                    <case>
                      pattern (typing/typedecl.ml[1338,48848+4]..[1338,48848+39])
                        Ppat_or
                        pattern (typing/typedecl.ml[1338,48848+4]..[1338,48848+22])
                          Ppat_tuple
                          [
                            pattern (typing/typedecl.ml[1338,48848+4]..[1338,48848+16])
                              Ppat_construct "Ptyp_arrow" (typing/typedecl.ml[1338,48848+4]..[1338,48848+14])
                              Some
                                []
                                pattern (typing/typedecl.ml[1338,48848+15]..[1338,48848+16])
                                  Ppat_any
                            pattern (typing/typedecl.ml[1338,48848+18]..[1338,48848+19])
                              Ppat_any
                            pattern (typing/typedecl.ml[1338,48848+21]..[1338,48848+22])
                              Ppat_any
                          ]
                        pattern (typing/typedecl.ml[1338,48848+25]..[1338,48848+39])
                          Ppat_tuple
                          [
                            pattern (typing/typedecl.ml[1338,48848+25]..[1338,48848+26])
                              Ppat_any
                            pattern (typing/typedecl.ml[1338,48848+28]..[1338,48848+36])
                              Ppat_construct "Tarrow" (typing/typedecl.ml[1338,48848+28]..[1338,48848+34])
                              Some
                                []
                                pattern (typing/typedecl.ml[1338,48848+35]..[1338,48848+36])
                                  Ppat_any
                            pattern (typing/typedecl.ml[1338,48848+38]..[1338,48848+39])
                              Ppat_any
                          ]
                      expression (typing/typedecl.ml[1338,48848+43]..[1338,48848+55])
                        Pexp_assert
                        expression (typing/typedecl.ml[1338,48848+50]..[1338,48848+55])
                          Pexp_construct "false" (typing/typedecl.ml[1338,48848+50]..[1338,48848+55])
                          None
                    <case>
                      pattern (typing/typedecl.ml[1339,48904+4]..[1339,48904+5])
                        Ppat_any
                      expression (typing/typedecl.ml[1339,48904+9]..[1339,48904+61])
                        Pexp_tuple
                        [
                          expression (typing/typedecl.ml[1339,48904+10]..[1339,48904+12])
                            Pexp_construct "[]" (typing/typedecl.ml[1339,48904+10]..[1339,48904+12])
                            None
                          expression (typing/typedecl.ml[1339,48904+14]..[1339,48904+60])
                            Pexp_apply
                            expression (typing/typedecl.ml[1339,48904+14]..[1339,48904+30])
                              Pexp_ident "make_native_repr" (typing/typedecl.ml[1339,48904+14]..[1339,48904+30])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1339,48904+31]..[1339,48904+34])
                                  Pexp_ident "env" (typing/typedecl.ml[1339,48904+31]..[1339,48904+34])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1339,48904+35]..[1339,48904+44])
                                  Pexp_ident "core_type" (typing/typedecl.ml[1339,48904+35]..[1339,48904+44])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1339,48904+45]..[1339,48904+47])
                                  Pexp_ident "ty" (typing/typedecl.ml[1339,48904+45]..[1339,48904+47])
                              <arg>
                              Labelled "global_repr"
                                expression (typing/typedecl.ml[1339,48904+49]..[1339,48904+60])
                                  Pexp_ident "global_repr" (typing/typedecl.ml[1339,48904+49]..[1339,48904+60])
                            ]
                        ]
                  ]
    ]
  structure_item (typing/typedecl.ml[1342,48968+0]..[1361,49567+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1342,48968+4]..[1342,48968+19])
          Ppat_var "check_unboxable" (typing/typedecl.ml[1342,48968+4]..[1342,48968+19])
        expression (typing/typedecl.ml[1342,48968+20]..[1361,49567+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1342,48968+20]..[1342,48968+23])
            Ppat_var "env" (typing/typedecl.ml[1342,48968+20]..[1342,48968+23])
          expression (typing/typedecl.ml[1342,48968+24]..[1361,49567+6]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[1342,48968+24]..[1342,48968+27])
              Ppat_var "loc" (typing/typedecl.ml[1342,48968+24]..[1342,48968+27])
            expression (typing/typedecl.ml[1342,48968+28]..[1361,49567+6]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[1342,48968+28]..[1342,48968+30])
                Ppat_var "ty" (typing/typedecl.ml[1342,48968+28]..[1342,48968+30])
              expression (typing/typedecl.ml[1343,49001+2]..[1361,49567+6])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/typedecl.ml[1343,49001+6]..[1343,49001+16])
                      Ppat_var "check_type" (typing/typedecl.ml[1343,49001+6]..[1343,49001+16])
                    expression (typing/typedecl.ml[1343,49001+17]..[1352,49296+25]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typedecl.ml[1343,49001+17]..[1343,49001+20])
                        Ppat_var "acc" (typing/typedecl.ml[1343,49001+17]..[1343,49001+20])
                      expression (typing/typedecl.ml[1343,49001+21]..[1352,49296+25]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typedecl.ml[1343,49001+21]..[1343,49001+23])
                          Ppat_var "ty" (typing/typedecl.ml[1343,49001+21]..[1343,49001+23])
                        expression (typing/typedecl.ml[1343,49001+24]..[1352,49296+25])
                          Pexp_constraint
                          expression (typing/typedecl.ml[1344,49040+4]..[1352,49296+25])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typedecl.ml[1344,49040+8]..[1344,49040+10])
                                  Ppat_var "ty" (typing/typedecl.ml[1344,49040+8]..[1344,49040+10])
                                expression (typing/typedecl.ml[1344,49040+13]..[1344,49040+41])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[1344,49040+13]..[1344,49040+34])
                                    Pexp_ident "Ctype.expand_head_opt" (typing/typedecl.ml[1344,49040+13]..[1344,49040+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1344,49040+35]..[1344,49040+38])
                                        Pexp_ident "env" (typing/typedecl.ml[1344,49040+35]..[1344,49040+38])
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1344,49040+39]..[1344,49040+41])
                                        Pexp_ident "ty" (typing/typedecl.ml[1344,49040+39]..[1344,49040+41])
                                  ]
                            ]
                            expression (typing/typedecl.ml[1345,49085+4]..[1352,49296+25])
                              Pexp_try
                              expression (typing/typedecl.ml[1345,49085+8]..[1351,49279+16])
                                Pexp_match
                                expression (typing/typedecl.ml[1345,49085+14]..[1345,49085+25])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[1345,49085+14]..[1345,49085+22])
                                    Pexp_ident "get_desc" (typing/typedecl.ml[1345,49085+14]..[1345,49085+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1345,49085+23]..[1345,49085+25])
                                        Pexp_ident "ty" (typing/typedecl.ml[1345,49085+23]..[1345,49085+25])
                                  ]
                                [
                                  <case>
                                    pattern (typing/typedecl.ml[1346,49116+8]..[1346,49116+25])
                                      Ppat_construct "Tconstr" (typing/typedecl.ml[1346,49116+8]..[1346,49116+15])
                                      Some
                                        []
                                        pattern (typing/typedecl.ml[1346,49116+16]..[1346,49116+25])
                                          Ppat_tuple
                                          [
                                            pattern (typing/typedecl.ml[1346,49116+17]..[1346,49116+18])
                                              Ppat_var "p" (typing/typedecl.ml[1346,49116+17]..[1346,49116+18])
                                            pattern (typing/typedecl.ml[1346,49116+20]..[1346,49116+21])
                                              Ppat_any
                                            pattern (typing/typedecl.ml[1346,49116+23]..[1346,49116+24])
                                              Ppat_any
                                          ]
                                    expression (typing/typedecl.ml[1347,49145+8]..[1350,49262+16])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typedecl.ml[1347,49145+12]..[1347,49145+18])
                                            Ppat_var "tydecl" (typing/typedecl.ml[1347,49145+12]..[1347,49145+18])
                                          expression (typing/typedecl.ml[1347,49145+21]..[1347,49145+40])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[1347,49145+21]..[1347,49145+34])
                                              Pexp_ident "Env.find_type" (typing/typedecl.ml[1347,49145+21]..[1347,49145+34])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1347,49145+35]..[1347,49145+36])
                                                  Pexp_ident "p" (typing/typedecl.ml[1347,49145+35]..[1347,49145+36])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1347,49145+37]..[1347,49145+40])
                                                  Pexp_ident "env" (typing/typedecl.ml[1347,49145+37]..[1347,49145+40])
                                            ]
                                      ]
                                      expression (typing/typedecl.ml[1348,49189+8]..[1350,49262+16])
                                        Pexp_ifthenelse
                                        expression (typing/typedecl.ml[1348,49189+11]..[1348,49189+38])
                                          Pexp_field
                                          expression (typing/typedecl.ml[1348,49189+11]..[1348,49189+17])
                                            Pexp_ident "tydecl" (typing/typedecl.ml[1348,49189+11]..[1348,49189+17])
                                          "type_unboxed_default" (typing/typedecl.ml[1348,49189+18]..[1348,49189+38])
                                        expression (typing/typedecl.ml[1349,49233+10]..[1349,49233+28])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1349,49233+10]..[1349,49233+22])
                                            Pexp_ident "Path.Set.add" (typing/typedecl.ml[1349,49233+10]..[1349,49233+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1349,49233+23]..[1349,49233+24])
                                                Pexp_ident "p" (typing/typedecl.ml[1349,49233+23]..[1349,49233+24])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1349,49233+25]..[1349,49233+28])
                                                Pexp_ident "acc" (typing/typedecl.ml[1349,49233+25]..[1349,49233+28])
                                          ]
                                        Some
                                          expression (typing/typedecl.ml[1350,49262+13]..[1350,49262+16])
                                            Pexp_ident "acc" (typing/typedecl.ml[1350,49262+13]..[1350,49262+16])
                                  <case>
                                    pattern (typing/typedecl.ml[1351,49279+8]..[1351,49279+9])
                                      Ppat_any
                                    expression (typing/typedecl.ml[1351,49279+13]..[1351,49279+16])
                                      Pexp_ident "acc" (typing/typedecl.ml[1351,49279+13]..[1351,49279+16])
                                ]
                              [
                                <case>
                                  pattern (typing/typedecl.ml[1352,49296+9]..[1352,49296+18])
                                    Ppat_construct "Not_found" (typing/typedecl.ml[1352,49296+9]..[1352,49296+18])
                                    None
                                  expression (typing/typedecl.ml[1352,49296+22]..[1352,49296+25])
                                    Pexp_ident "acc" (typing/typedecl.ml[1352,49296+22]..[1352,49296+25])
                              ]
                          core_type (typing/typedecl.ml[1343,49001+26]..[1343,49001+36])
                            Ptyp_constr "Path.Set.t" (typing/typedecl.ml[1343,49001+26]..[1343,49001+36])
                            []
                ]
                expression (typing/typedecl.ml[1354,49327+2]..[1361,49567+6])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typedecl.ml[1354,49327+6]..[1354,49327+25])
                        Ppat_var "all_unboxable_types" (typing/typedecl.ml[1354,49327+6]..[1354,49327+25])
                      expression (typing/typedecl.ml[1354,49327+28]..[1354,49327+77])
                        Pexp_apply
                        expression (typing/typedecl.ml[1354,49327+28]..[1354,49327+48])
                          Pexp_ident "Btype.fold_type_expr" (typing/typedecl.ml[1354,49327+28]..[1354,49327+48])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1354,49327+49]..[1354,49327+59])
                              Pexp_ident "check_type" (typing/typedecl.ml[1354,49327+49]..[1354,49327+59])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1354,49327+60]..[1354,49327+74])
                              Pexp_ident "Path.Set.empty" (typing/typedecl.ml[1354,49327+60]..[1354,49327+74])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1354,49327+75]..[1354,49327+77])
                              Pexp_ident "ty" (typing/typedecl.ml[1354,49327+75]..[1354,49327+77])
                        ]
                  ]
                  expression (typing/typedecl.ml[1355,49408+2]..[1361,49567+6])
                    Pexp_apply
                    expression (typing/typedecl.ml[1355,49408+2]..[1355,49408+15])
                      Pexp_ident "Path.Set.fold" (typing/typedecl.ml[1355,49408+2]..[1355,49408+15])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1356,49424+4]..[1359,49537+5])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typedecl.ml[1356,49424+9]..[1356,49424+10])
                            Ppat_var "p" (typing/typedecl.ml[1356,49424+9]..[1356,49424+10])
                          expression (typing/typedecl.ml[1356,49424+11]..[1358,49475+61]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typedecl.ml[1356,49424+11]..[1356,49424+13])
                              Ppat_construct "()" (typing/typedecl.ml[1356,49424+11]..[1356,49424+13])
                              None
                            expression (typing/typedecl.ml[1357,49441+7]..[1358,49475+61])
                              Pexp_apply
                              expression (typing/typedecl.ml[1357,49441+7]..[1357,49441+29])
                                Pexp_ident "Location.prerr_warning" (typing/typedecl.ml[1357,49441+7]..[1357,49441+29])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1357,49441+30]..[1357,49441+33])
                                    Pexp_ident "loc" (typing/typedecl.ml[1357,49441+30]..[1357,49441+33])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1358,49475+9]..[1358,49475+61])
                                    Pexp_construct "Warnings.Unboxable_type_in_prim_decl" (typing/typedecl.ml[1358,49475+10]..[1358,49475+46])
                                    Some
                                      expression (typing/typedecl.ml[1358,49475+47]..[1358,49475+60])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[1358,49475+48]..[1358,49475+57])
                                          Pexp_ident "Path.name" (typing/typedecl.ml[1358,49475+48]..[1358,49475+57])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[1358,49475+58]..[1358,49475+59])
                                              Pexp_ident "p" (typing/typedecl.ml[1358,49475+58]..[1358,49475+59])
                                        ]
                              ]
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1360,49543+4]..[1360,49543+23])
                          Pexp_ident "all_unboxable_types" (typing/typedecl.ml[1360,49543+4]..[1360,49543+23])
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1361,49567+4]..[1361,49567+6])
                          Pexp_construct "()" (typing/typedecl.ml[1361,49567+4]..[1361,49567+6])
                          None
                    ]
    ]
  structure_item (typing/typedecl.ml[1364,49611+0]..[1419,51509+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1364,49611+4]..[1364,49611+21])
          Ppat_var "transl_value_decl" (typing/typedecl.ml[1364,49611+4]..[1364,49611+21])
        expression (typing/typedecl.ml[1364,49611+22]..[1419,51509+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1364,49611+22]..[1364,49611+25])
            Ppat_var "env" (typing/typedecl.ml[1364,49611+22]..[1364,49611+25])
          expression (typing/typedecl.ml[1364,49611+26]..[1419,51509+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[1364,49611+26]..[1364,49611+29])
              Ppat_var "loc" (typing/typedecl.ml[1364,49611+26]..[1364,49611+29])
            expression (typing/typedecl.ml[1364,49611+30]..[1419,51509+14]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[1364,49611+30]..[1364,49611+37])
                Ppat_var "valdecl" (typing/typedecl.ml[1364,49611+30]..[1364,49611+37])
              expression (typing/typedecl.ml[1365,49651+2]..[1419,51509+14])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/typedecl.ml[1365,49651+6]..[1365,49651+9])
                      Ppat_var "cty" (typing/typedecl.ml[1365,49651+6]..[1365,49651+9])
                    expression (typing/typedecl.ml[1365,49651+12]..[1365,49651+61])
                      Pexp_apply
                      expression (typing/typedecl.ml[1365,49651+12]..[1365,49651+39])
                        Pexp_ident "Typetexp.transl_type_scheme" (typing/typedecl.ml[1365,49651+12]..[1365,49651+39])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1365,49651+40]..[1365,49651+43])
                            Pexp_ident "env" (typing/typedecl.ml[1365,49651+40]..[1365,49651+43])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1365,49651+44]..[1365,49651+61])
                            Pexp_field
                            expression (typing/typedecl.ml[1365,49651+44]..[1365,49651+51])
                              Pexp_ident "valdecl" (typing/typedecl.ml[1365,49651+44]..[1365,49651+51])
                            "pval_type" (typing/typedecl.ml[1365,49651+52]..[1365,49651+61])
                      ]
                ]
                expression (typing/typedecl.ml[1366,49716+2]..[1419,51509+14])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typedecl.ml[1366,49716+6]..[1366,49716+8])
                        Ppat_var "ty" (typing/typedecl.ml[1366,49716+6]..[1366,49716+8])
                      expression (typing/typedecl.ml[1366,49716+11]..[1366,49716+24])
                        Pexp_field
                        expression (typing/typedecl.ml[1366,49716+11]..[1366,49716+14])
                          Pexp_ident "cty" (typing/typedecl.ml[1366,49716+11]..[1366,49716+14])
                        "ctyp_type" (typing/typedecl.ml[1366,49716+15]..[1366,49716+24])
                  ]
                  expression (typing/typedecl.ml[1367,49744+2]..[1419,51509+14])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typedecl.ml[1367,49744+6]..[1367,49744+7])
                          Ppat_var "v" (typing/typedecl.ml[1367,49744+6]..[1367,49744+7])
                        expression (typing/typedecl.ml[1368,49754+2]..[1403,51130+7])
                          Pexp_match
                          expression (typing/typedecl.ml[1368,49754+8]..[1368,49754+25])
                            Pexp_field
                            expression (typing/typedecl.ml[1368,49754+8]..[1368,49754+15])
                              Pexp_ident "valdecl" (typing/typedecl.ml[1368,49754+8]..[1368,49754+15])
                            "pval_prim" (typing/typedecl.ml[1368,49754+16]..[1368,49754+25])
                          [
                            <case>
                              pattern (typing/typedecl.ml[1369,49785+4]..[1369,49785+6])
                                Ppat_construct "[]" (typing/typedecl.ml[1369,49785+4]..[1369,49785+6])
                                None
                              <when>
                                expression (typing/typedecl.ml[1369,49785+12]..[1369,49785+35])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[1369,49785+12]..[1369,49785+31])
                                    Pexp_ident "Env.is_in_signature" (typing/typedecl.ml[1369,49785+12]..[1369,49785+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1369,49785+32]..[1369,49785+35])
                                        Pexp_ident "env" (typing/typedecl.ml[1369,49785+32]..[1369,49785+35])
                                  ]
                              expression (typing/typedecl.ml[1370,49824+6]..[1373,50001+7])
                                Pexp_record
                                [
                                  "val_type" (typing/typedecl.ml[1370,49824+8]..[1370,49824+16])
                                    expression (typing/typedecl.ml[1370,49824+19]..[1370,49824+21])
                                      Pexp_ident "ty" (typing/typedecl.ml[1370,49824+19]..[1370,49824+21])
                                  "val_kind" (typing/typedecl.ml[1370,49824+23]..[1370,49824+31])
                                    expression (typing/typedecl.ml[1370,49824+34]..[1370,49824+41])
                                      Pexp_construct "Val_reg" (typing/typedecl.ml[1370,49824+34]..[1370,49824+41])
                                      None
                                  "Types.val_loc" (typing/typedecl.ml[1370,49824+43]..[1370,49824+56])
                                    expression (typing/typedecl.ml[1370,49824+59]..[1370,49824+62])
                                      Pexp_ident "loc" (typing/typedecl.ml[1370,49824+59]..[1370,49824+62])
                                  "val_attributes" (typing/typedecl.ml[1371,49888+8]..[1371,49888+22])
                                    expression (typing/typedecl.ml[1371,49888+25]..[1371,49888+48])
                                      Pexp_field
                                      expression (typing/typedecl.ml[1371,49888+25]..[1371,49888+32])
                                        Pexp_ident "valdecl" (typing/typedecl.ml[1371,49888+25]..[1371,49888+32])
                                      "pval_attributes" (typing/typedecl.ml[1371,49888+33]..[1371,49888+48])
                                  "val_uid" (typing/typedecl.ml[1372,49938+8]..[1372,49938+15])
                                    expression (typing/typedecl.ml[1372,49938+18]..[1372,49938+61])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[1372,49938+18]..[1372,49938+24])
                                        Pexp_ident "Uid.mk" (typing/typedecl.ml[1372,49938+18]..[1372,49938+24])
                                      [
                                        <arg>
                                        Labelled "current_unit"
                                          expression (typing/typedecl.ml[1372,49938+39]..[1372,49938+61])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[1372,49938+40]..[1372,49938+57])
                                              Pexp_ident "Env.get_unit_name" (typing/typedecl.ml[1372,49938+40]..[1372,49938+57])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1372,49938+58]..[1372,49938+60])
                                                  Pexp_construct "()" (typing/typedecl.ml[1372,49938+58]..[1372,49938+60])
                                                  None
                                            ]
                                      ]
                                ]
                                None
                            <case>
                              pattern (typing/typedecl.ml[1374,50009+4]..[1374,50009+6])
                                Ppat_construct "[]" (typing/typedecl.ml[1374,50009+4]..[1374,50009+6])
                                None
                              expression (typing/typedecl.ml[1375,50019+6]..[1375,50019+55])
                                Pexp_apply
                                expression (typing/typedecl.ml[1375,50019+6]..[1375,50019+11])
                                  Pexp_ident "raise" (typing/typedecl.ml[1375,50019+6]..[1375,50019+11])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1375,50019+12]..[1375,50019+55])
                                      Pexp_construct "Error" (typing/typedecl.ml[1375,50019+13]..[1375,50019+18])
                                      Some
                                        expression (typing/typedecl.ml[1375,50019+18]..[1375,50019+54])
                                          Pexp_tuple
                                          [
                                            expression (typing/typedecl.ml[1375,50019+19]..[1375,50019+35])
                                              Pexp_field
                                              expression (typing/typedecl.ml[1375,50019+19]..[1375,50019+26])
                                                Pexp_ident "valdecl" (typing/typedecl.ml[1375,50019+19]..[1375,50019+26])
                                              "pval_loc" (typing/typedecl.ml[1375,50019+27]..[1375,50019+35])
                                            expression (typing/typedecl.ml[1375,50019+37]..[1375,50019+53])
                                              Pexp_construct "Val_in_structure" (typing/typedecl.ml[1375,50019+37]..[1375,50019+53])
                                              None
                                          ]
                                ]
                            <case>
                              pattern (typing/typedecl.ml[1376,50075+4]..[1376,50075+5])
                                Ppat_any
                              expression (typing/typedecl.ml[1377,50084+6]..[1403,51130+7])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typedecl.ml[1377,50084+10]..[1377,50084+21])
                                      Ppat_var "global_repr" (typing/typedecl.ml[1377,50084+10]..[1377,50084+21])
                                    expression (typing/typedecl.ml[1378,50108+8]..[1382,50266+41])
                                      Pexp_match
                                      expression (typing/typedecl.ml[1379,50122+10]..[1379,50122+77])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[1379,50122+10]..[1379,50122+35])
                                          Pexp_ident "get_native_repr_attribute" (typing/typedecl.ml[1379,50122+10]..[1379,50122+35])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[1379,50122+36]..[1379,50122+59])
                                              Pexp_field
                                              expression (typing/typedecl.ml[1379,50122+36]..[1379,50122+43])
                                                Pexp_ident "valdecl" (typing/typedecl.ml[1379,50122+36]..[1379,50122+43])
                                              "pval_attributes" (typing/typedecl.ml[1379,50122+44]..[1379,50122+59])
                                          <arg>
                                          Labelled "global_repr"
                                            expression (typing/typedecl.ml[1379,50122+73]..[1379,50122+77])
                                              Pexp_construct "None" (typing/typedecl.ml[1379,50122+73]..[1379,50122+77])
                                              None
                                        ]
                                      [
                                        <case>
                                          pattern (typing/typedecl.ml[1381,50213+10]..[1381,50213+39])
                                            Ppat_construct "Native_repr_attr_present" (typing/typedecl.ml[1381,50213+10]..[1381,50213+34])
                                            Some
                                              []
                                              pattern (typing/typedecl.ml[1381,50213+35]..[1381,50213+39])
                                                Ppat_var "repr" (typing/typedecl.ml[1381,50213+35]..[1381,50213+39])
                                          expression (typing/typedecl.ml[1381,50213+43]..[1381,50213+52])
                                            Pexp_construct "Some" (typing/typedecl.ml[1381,50213+43]..[1381,50213+47])
                                            Some
                                              expression (typing/typedecl.ml[1381,50213+48]..[1381,50213+52])
                                                Pexp_ident "repr" (typing/typedecl.ml[1381,50213+48]..[1381,50213+52])
                                        <case>
                                          pattern (typing/typedecl.ml[1382,50266+10]..[1382,50266+33])
                                            Ppat_construct "Native_repr_attr_absent" (typing/typedecl.ml[1382,50266+10]..[1382,50266+33])
                                            None
                                          expression (typing/typedecl.ml[1382,50266+37]..[1382,50266+41])
                                            Pexp_construct "None" (typing/typedecl.ml[1382,50266+37]..[1382,50266+41])
                                            None
                                      ]
                                ]
                                expression (typing/typedecl.ml[1384,50317+6]..[1403,51130+7])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typedecl.ml[1384,50317+10]..[1384,50317+43])
                                        Ppat_tuple
                                        [
                                          pattern (typing/typedecl.ml[1384,50317+10]..[1384,50317+26])
                                            Ppat_var "native_repr_args" (typing/typedecl.ml[1384,50317+10]..[1384,50317+26])
                                          pattern (typing/typedecl.ml[1384,50317+28]..[1384,50317+43])
                                            Ppat_var "native_repr_res" (typing/typedecl.ml[1384,50317+28]..[1384,50317+43])
                                        ]
                                      expression (typing/typedecl.ml[1385,50363+8]..[1385,50363+74])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[1385,50363+8]..[1385,50363+36])
                                          Pexp_ident "parse_native_repr_attributes" (typing/typedecl.ml[1385,50363+8]..[1385,50363+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[1385,50363+37]..[1385,50363+40])
                                              Pexp_ident "env" (typing/typedecl.ml[1385,50363+37]..[1385,50363+40])
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[1385,50363+41]..[1385,50363+58])
                                              Pexp_field
                                              expression (typing/typedecl.ml[1385,50363+41]..[1385,50363+48])
                                                Pexp_ident "valdecl" (typing/typedecl.ml[1385,50363+41]..[1385,50363+48])
                                              "pval_type" (typing/typedecl.ml[1385,50363+49]..[1385,50363+58])
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[1385,50363+59]..[1385,50363+61])
                                              Pexp_ident "ty" (typing/typedecl.ml[1385,50363+59]..[1385,50363+61])
                                          <arg>
                                          Labelled "global_repr"
                                            expression (typing/typedecl.ml[1385,50363+63]..[1385,50363+74])
                                              Pexp_ident "global_repr" (typing/typedecl.ml[1385,50363+63]..[1385,50363+74])
                                        ]
                                  ]
                                  expression (typing/typedecl.ml[1387,50447+6]..[1403,51130+7])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typedecl.ml[1387,50447+10]..[1387,50447+14])
                                          Ppat_var "prim" (typing/typedecl.ml[1387,50447+10]..[1387,50447+14])
                                        expression (typing/typedecl.ml[1388,50464+8]..[1390,50536+26])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1388,50464+8]..[1388,50464+35])
                                            Pexp_ident "Primitive.parse_declaration" (typing/typedecl.ml[1388,50464+8]..[1388,50464+35])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1388,50464+36]..[1388,50464+43])
                                                Pexp_ident "valdecl" (typing/typedecl.ml[1388,50464+36]..[1388,50464+43])
                                            <arg>
                                            Labelled "native_repr_args"
                                              expression (typing/typedecl.ml[1389,50508+11]..[1389,50508+27])
                                                Pexp_ident "native_repr_args" (typing/typedecl.ml[1389,50508+11]..[1389,50508+27])
                                            <arg>
                                            Labelled "native_repr_res"
                                              expression (typing/typedecl.ml[1390,50536+11]..[1390,50536+26])
                                                Pexp_ident "native_repr_res" (typing/typedecl.ml[1390,50536+11]..[1390,50536+26])
                                          ]
                                    ]
                                    expression (typing/typedecl.ml[1392,50572+6]..[1403,51130+7])
                                      Pexp_sequence
                                      expression (typing/typedecl.ml[1392,50572+6]..[1394,50669+69])
                                        Pexp_ifthenelse
                                        expression (typing/typedecl.ml[1392,50572+9]..[1393,50604+59])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1392,50572+29]..[1392,50572+31])
                                            Pexp_ident "&&" (typing/typedecl.ml[1392,50572+29]..[1392,50572+31])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1392,50572+9]..[1392,50572+28])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[1392,50572+25]..[1392,50572+26])
                                                  Pexp_ident "=" (typing/typedecl.ml[1392,50572+25]..[1392,50572+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[1392,50572+9]..[1392,50572+24])
                                                      Pexp_field
                                                      expression (typing/typedecl.ml[1392,50572+9]..[1392,50572+13])
                                                        Pexp_ident "prim" (typing/typedecl.ml[1392,50572+9]..[1392,50572+13])
                                                      "prim_arity" (typing/typedecl.ml[1392,50572+14]..[1392,50572+24])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[1392,50572+27]..[1392,50572+28])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1393,50604+9]..[1393,50604+59])
                                                Pexp_apply
                                                expression (typing/typedecl.ml[1393,50604+30]..[1393,50604+32])
                                                  Pexp_ident "||" (typing/typedecl.ml[1393,50604+30]..[1393,50604+32])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[1393,50604+10]..[1393,50604+29])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[1393,50604+25]..[1393,50604+26])
                                                        Pexp_ident "=" (typing/typedecl.ml[1393,50604+25]..[1393,50604+26])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[1393,50604+10]..[1393,50604+24])
                                                            Pexp_field
                                                            expression (typing/typedecl.ml[1393,50604+10]..[1393,50604+14])
                                                              Pexp_ident "prim" (typing/typedecl.ml[1393,50604+10]..[1393,50604+14])
                                                            "prim_name" (typing/typedecl.ml[1393,50604+15]..[1393,50604+24])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[1393,50604+27]..[1393,50604+29])
                                                            Pexp_constant PConst_string("",(typing/typedecl.ml[1393,50604+28]..[1393,50604+28]),None)
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typedecl.ml[1393,50604+33]..[1393,50604+58])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[1393,50604+52]..[1393,50604+54])
                                                        Pexp_ident "<>" (typing/typedecl.ml[1393,50604+52]..[1393,50604+54])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[1393,50604+33]..[1393,50604+51])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[1393,50604+33]..[1393,50604+51]) ghost
                                                              Pexp_ident "String.get" (typing/typedecl.ml[1393,50604+33]..[1393,50604+51]) ghost
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1393,50604+33]..[1393,50604+47])
                                                                  Pexp_field
                                                                  expression (typing/typedecl.ml[1393,50604+33]..[1393,50604+37])
                                                                    Pexp_ident "prim" (typing/typedecl.ml[1393,50604+33]..[1393,50604+37])
                                                                  "prim_name" (typing/typedecl.ml[1393,50604+38]..[1393,50604+47])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1393,50604+49]..[1393,50604+50])
                                                                  Pexp_constant PConst_int (0,None)
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[1393,50604+55]..[1393,50604+58])
                                                            Pexp_constant PConst_char 25
                                                      ]
                                                ]
                                          ]
                                        expression (typing/typedecl.ml[1394,50669+8]..[1394,50669+69])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1394,50669+8]..[1394,50669+13])
                                            Pexp_ident "raise" (typing/typedecl.ml[1394,50669+8]..[1394,50669+13])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1394,50669+13]..[1394,50669+69])
                                                Pexp_construct "Error" (typing/typedecl.ml[1394,50669+14]..[1394,50669+19])
                                                Some
                                                  expression (typing/typedecl.ml[1394,50669+19]..[1394,50669+68])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typedecl.ml[1394,50669+20]..[1394,50669+46])
                                                        Pexp_field
                                                        expression (typing/typedecl.ml[1394,50669+20]..[1394,50669+37])
                                                          Pexp_field
                                                          expression (typing/typedecl.ml[1394,50669+20]..[1394,50669+27])
                                                            Pexp_ident "valdecl" (typing/typedecl.ml[1394,50669+20]..[1394,50669+27])
                                                          "pval_type" (typing/typedecl.ml[1394,50669+28]..[1394,50669+37])
                                                        "ptyp_loc" (typing/typedecl.ml[1394,50669+38]..[1394,50669+46])
                                                      expression (typing/typedecl.ml[1394,50669+48]..[1394,50669+67])
                                                        Pexp_construct "Null_arity_external" (typing/typedecl.ml[1394,50669+48]..[1394,50669+67])
                                                        None
                                                    ]
                                          ]
                                        None
                                      expression (typing/typedecl.ml[1395,50740+6]..[1403,51130+7])
                                        Pexp_sequence
                                        expression (typing/typedecl.ml[1395,50740+6]..[1398,50835+76])
                                          Pexp_ifthenelse
                                          expression (typing/typedecl.ml[1395,50740+9]..[1397,50799+35])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[1396,50770+6]..[1396,50770+8])
                                              Pexp_ident "&&" (typing/typedecl.ml[1396,50770+6]..[1396,50770+8])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1395,50740+9]..[1395,50740+29])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[1395,50740+9]..[1395,50740+10])
                                                    Pexp_ident "!" (typing/typedecl.ml[1395,50740+9]..[1395,50740+10])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[1395,50740+10]..[1395,50740+29])
                                                        Pexp_ident "Clflags.native_code" (typing/typedecl.ml[1395,50740+10]..[1395,50740+29])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1396,50770+9]..[1397,50799+35])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[1397,50799+6]..[1397,50799+8])
                                                    Pexp_ident "&&" (typing/typedecl.ml[1397,50799+6]..[1397,50799+8])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[1396,50770+9]..[1396,50770+28])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[1396,50770+25]..[1396,50770+26])
                                                          Pexp_ident ">" (typing/typedecl.ml[1396,50770+25]..[1396,50770+26])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[1396,50770+9]..[1396,50770+24])
                                                              Pexp_field
                                                              expression (typing/typedecl.ml[1396,50770+9]..[1396,50770+13])
                                                                Pexp_ident "prim" (typing/typedecl.ml[1396,50770+9]..[1396,50770+13])
                                                              "prim_arity" (typing/typedecl.ml[1396,50770+14]..[1396,50770+24])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[1396,50770+27]..[1396,50770+28])
                                                              Pexp_constant PConst_int (5,None)
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typedecl.ml[1397,50799+9]..[1397,50799+35])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[1397,50799+31]..[1397,50799+32])
                                                          Pexp_ident "=" (typing/typedecl.ml[1397,50799+31]..[1397,50799+32])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[1397,50799+9]..[1397,50799+30])
                                                              Pexp_field
                                                              expression (typing/typedecl.ml[1397,50799+9]..[1397,50799+13])
                                                                Pexp_ident "prim" (typing/typedecl.ml[1397,50799+9]..[1397,50799+13])
                                                              "prim_native_name" (typing/typedecl.ml[1397,50799+14]..[1397,50799+30])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[1397,50799+33]..[1397,50799+35])
                                                              Pexp_constant PConst_string("",(typing/typedecl.ml[1397,50799+34]..[1397,50799+34]),None)
                                                        ]
                                                  ]
                                            ]
                                          expression (typing/typedecl.ml[1398,50835+11]..[1398,50835+76])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[1398,50835+11]..[1398,50835+16])
                                              Pexp_ident "raise" (typing/typedecl.ml[1398,50835+11]..[1398,50835+16])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1398,50835+16]..[1398,50835+76])
                                                  Pexp_construct "Error" (typing/typedecl.ml[1398,50835+17]..[1398,50835+22])
                                                  Some
                                                    expression (typing/typedecl.ml[1398,50835+22]..[1398,50835+75])
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typedecl.ml[1398,50835+23]..[1398,50835+49])
                                                          Pexp_field
                                                          expression (typing/typedecl.ml[1398,50835+23]..[1398,50835+40])
                                                            Pexp_field
                                                            expression (typing/typedecl.ml[1398,50835+23]..[1398,50835+30])
                                                              Pexp_ident "valdecl" (typing/typedecl.ml[1398,50835+23]..[1398,50835+30])
                                                            "pval_type" (typing/typedecl.ml[1398,50835+31]..[1398,50835+40])
                                                          "ptyp_loc" (typing/typedecl.ml[1398,50835+41]..[1398,50835+49])
                                                        expression (typing/typedecl.ml[1398,50835+51]..[1398,50835+74])
                                                          Pexp_construct "Missing_native_external" (typing/typedecl.ml[1398,50835+51]..[1398,50835+74])
                                                          None
                                                      ]
                                            ]
                                          None
                                        expression (typing/typedecl.ml[1399,50913+6]..[1403,51130+7])
                                          Pexp_sequence
                                          expression (typing/typedecl.ml[1399,50913+6]..[1399,50913+32])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[1399,50913+6]..[1399,50913+21])
                                              Pexp_ident "check_unboxable" (typing/typedecl.ml[1399,50913+6]..[1399,50913+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1399,50913+22]..[1399,50913+25])
                                                  Pexp_ident "env" (typing/typedecl.ml[1399,50913+22]..[1399,50913+25])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1399,50913+26]..[1399,50913+29])
                                                  Pexp_ident "loc" (typing/typedecl.ml[1399,50913+26]..[1399,50913+29])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1399,50913+30]..[1399,50913+32])
                                                  Pexp_ident "ty" (typing/typedecl.ml[1399,50913+30]..[1399,50913+32])
                                            ]
                                          expression (typing/typedecl.ml[1400,50947+6]..[1403,51130+7])
                                            Pexp_record
                                            [
                                              "val_type" (typing/typedecl.ml[1400,50947+8]..[1400,50947+16])
                                                expression (typing/typedecl.ml[1400,50947+19]..[1400,50947+21])
                                                  Pexp_ident "ty" (typing/typedecl.ml[1400,50947+19]..[1400,50947+21])
                                              "val_kind" (typing/typedecl.ml[1400,50947+23]..[1400,50947+31])
                                                expression (typing/typedecl.ml[1400,50947+34]..[1400,50947+47])
                                                  Pexp_construct "Val_prim" (typing/typedecl.ml[1400,50947+34]..[1400,50947+42])
                                                  Some
                                                    expression (typing/typedecl.ml[1400,50947+43]..[1400,50947+47])
                                                      Pexp_ident "prim" (typing/typedecl.ml[1400,50947+43]..[1400,50947+47])
                                              "Types.val_loc" (typing/typedecl.ml[1400,50947+49]..[1400,50947+62])
                                                expression (typing/typedecl.ml[1400,50947+65]..[1400,50947+68])
                                                  Pexp_ident "loc" (typing/typedecl.ml[1400,50947+65]..[1400,50947+68])
                                              "val_attributes" (typing/typedecl.ml[1401,51017+8]..[1401,51017+22])
                                                expression (typing/typedecl.ml[1401,51017+25]..[1401,51017+48])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[1401,51017+25]..[1401,51017+32])
                                                    Pexp_ident "valdecl" (typing/typedecl.ml[1401,51017+25]..[1401,51017+32])
                                                  "pval_attributes" (typing/typedecl.ml[1401,51017+33]..[1401,51017+48])
                                              "val_uid" (typing/typedecl.ml[1402,51067+8]..[1402,51067+15])
                                                expression (typing/typedecl.ml[1402,51067+18]..[1402,51067+61])
                                                  Pexp_apply
                                                  expression (typing/typedecl.ml[1402,51067+18]..[1402,51067+24])
                                                    Pexp_ident "Uid.mk" (typing/typedecl.ml[1402,51067+18]..[1402,51067+24])
                                                  [
                                                    <arg>
                                                    Labelled "current_unit"
                                                      expression (typing/typedecl.ml[1402,51067+39]..[1402,51067+61])
                                                        Pexp_apply
                                                        expression (typing/typedecl.ml[1402,51067+40]..[1402,51067+57])
                                                          Pexp_ident "Env.get_unit_name" (typing/typedecl.ml[1402,51067+40]..[1402,51067+57])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typedecl.ml[1402,51067+58]..[1402,51067+60])
                                                              Pexp_construct "()" (typing/typedecl.ml[1402,51067+58]..[1402,51067+60])
                                                              None
                                                        ]
                                                  ]
                                            ]
                                            None
                          ]
                    ]
                    expression (typing/typedecl.ml[1405,51143+2]..[1419,51509+14])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typedecl.ml[1405,51143+6]..[1405,51143+18])
                            Ppat_tuple
                            [
                              pattern (typing/typedecl.ml[1405,51143+7]..[1405,51143+9])
                                Ppat_var "id" (typing/typedecl.ml[1405,51143+7]..[1405,51143+9])
                              pattern (typing/typedecl.ml[1405,51143+11]..[1405,51143+17])
                                Ppat_var "newenv" (typing/typedecl.ml[1405,51143+11]..[1405,51143+17])
                            ]
                          expression (typing/typedecl.ml[1406,51164+4]..[1407,51212+59])
                            Pexp_apply
                            expression (typing/typedecl.ml[1406,51164+4]..[1406,51164+19])
                              Pexp_ident "Env.enter_value" (typing/typedecl.ml[1406,51164+4]..[1406,51164+19])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1406,51164+20]..[1406,51164+41])
                                  Pexp_field
                                  expression (typing/typedecl.ml[1406,51164+20]..[1406,51164+37])
                                    Pexp_field
                                    expression (typing/typedecl.ml[1406,51164+20]..[1406,51164+27])
                                      Pexp_ident "valdecl" (typing/typedecl.ml[1406,51164+20]..[1406,51164+27])
                                    "pval_name" (typing/typedecl.ml[1406,51164+28]..[1406,51164+37])
                                  "txt" (typing/typedecl.ml[1406,51164+38]..[1406,51164+41])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1406,51164+42]..[1406,51164+43])
                                  Pexp_ident "v" (typing/typedecl.ml[1406,51164+42]..[1406,51164+43])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1406,51164+44]..[1406,51164+47])
                                  Pexp_ident "env" (typing/typedecl.ml[1406,51164+44]..[1406,51164+47])
                              <arg>
                              Labelled "check"
                                expression (typing/typedecl.ml[1407,51212+13]..[1407,51212+59])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typedecl.ml[1407,51212+18]..[1407,51212+19])
                                    Ppat_var "s" (typing/typedecl.ml[1407,51212+18]..[1407,51212+19])
                                  expression (typing/typedecl.ml[1407,51212+23]..[1407,51212+58])
                                    Pexp_construct "Warnings.Unused_value_declaration" (typing/typedecl.ml[1407,51212+23]..[1407,51212+56])
                                    Some
                                      expression (typing/typedecl.ml[1407,51212+57]..[1407,51212+58])
                                        Pexp_ident "s" (typing/typedecl.ml[1407,51212+57]..[1407,51212+58])
                            ]
                      ]
                      expression (typing/typedecl.ml[1409,51277+2]..[1419,51509+14])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typedecl.ml[1409,51277+6]..[1409,51277+10])
                              Ppat_var "desc" (typing/typedecl.ml[1409,51277+6]..[1409,51277+10])
                            expression (typing/typedecl.ml[1410,51290+4]..[1417,51498+5])
                              Pexp_record
                              [
                                "val_id" (typing/typedecl.ml[1411,51296+5]..[1411,51296+11])
                                  expression (typing/typedecl.ml[1411,51296+14]..[1411,51296+16])
                                    Pexp_ident "id" (typing/typedecl.ml[1411,51296+14]..[1411,51296+16])
                                "val_name" (typing/typedecl.ml[1412,51314+5]..[1412,51314+13])
                                  expression (typing/typedecl.ml[1412,51314+16]..[1412,51314+33])
                                    Pexp_field
                                    expression (typing/typedecl.ml[1412,51314+16]..[1412,51314+23])
                                      Pexp_ident "valdecl" (typing/typedecl.ml[1412,51314+16]..[1412,51314+23])
                                    "pval_name" (typing/typedecl.ml[1412,51314+24]..[1412,51314+33])
                                "val_desc" (typing/typedecl.ml[1413,51349+5]..[1413,51349+13])
                                  expression (typing/typedecl.ml[1413,51349+16]..[1413,51349+19])
                                    Pexp_ident "cty" (typing/typedecl.ml[1413,51349+16]..[1413,51349+19])
                                "val_val" (typing/typedecl.ml[1413,51349+21]..[1413,51349+28])
                                  expression (typing/typedecl.ml[1413,51349+31]..[1413,51349+32])
                                    Pexp_ident "v" (typing/typedecl.ml[1413,51349+31]..[1413,51349+32])
                                "val_prim" (typing/typedecl.ml[1414,51383+5]..[1414,51383+13])
                                  expression (typing/typedecl.ml[1414,51383+16]..[1414,51383+33])
                                    Pexp_field
                                    expression (typing/typedecl.ml[1414,51383+16]..[1414,51383+23])
                                      Pexp_ident "valdecl" (typing/typedecl.ml[1414,51383+16]..[1414,51383+23])
                                    "pval_prim" (typing/typedecl.ml[1414,51383+24]..[1414,51383+33])
                                "val_loc" (typing/typedecl.ml[1415,51418+5]..[1415,51418+12])
                                  expression (typing/typedecl.ml[1415,51418+15]..[1415,51418+31])
                                    Pexp_field
                                    expression (typing/typedecl.ml[1415,51418+15]..[1415,51418+22])
                                      Pexp_ident "valdecl" (typing/typedecl.ml[1415,51418+15]..[1415,51418+22])
                                    "pval_loc" (typing/typedecl.ml[1415,51418+23]..[1415,51418+31])
                                "val_attributes" (typing/typedecl.ml[1416,51451+5]..[1416,51451+19])
                                  expression (typing/typedecl.ml[1416,51451+22]..[1416,51451+45])
                                    Pexp_field
                                    expression (typing/typedecl.ml[1416,51451+22]..[1416,51451+29])
                                      Pexp_ident "valdecl" (typing/typedecl.ml[1416,51451+22]..[1416,51451+29])
                                    "pval_attributes" (typing/typedecl.ml[1416,51451+30]..[1416,51451+45])
                              ]
                              None
                        ]
                        expression (typing/typedecl.ml[1419,51509+2]..[1419,51509+14])
                          Pexp_tuple
                          [
                            expression (typing/typedecl.ml[1419,51509+2]..[1419,51509+6])
                              Pexp_ident "desc" (typing/typedecl.ml[1419,51509+2]..[1419,51509+6])
                            expression (typing/typedecl.ml[1419,51509+8]..[1419,51509+14])
                              Pexp_ident "newenv" (typing/typedecl.ml[1419,51509+8]..[1419,51509+14])
                          ]
    ]
  structure_item (typing/typedecl.ml[1421,51525+0]..[1423,51624+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1421,51525+4]..[1421,51525+21])
          Ppat_var "transl_value_decl" (typing/typedecl.ml[1421,51525+4]..[1421,51525+21])
        expression (typing/typedecl.ml[1421,51525+22]..[1423,51624+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1421,51525+22]..[1421,51525+25])
            Ppat_var "env" (typing/typedecl.ml[1421,51525+22]..[1421,51525+25])
          expression (typing/typedecl.ml[1421,51525+26]..[1423,51624+49]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[1421,51525+26]..[1421,51525+29])
              Ppat_var "loc" (typing/typedecl.ml[1421,51525+26]..[1421,51525+29])
            expression (typing/typedecl.ml[1421,51525+30]..[1423,51624+49]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[1421,51525+30]..[1421,51525+37])
                Ppat_var "valdecl" (typing/typedecl.ml[1421,51525+30]..[1421,51525+37])
              expression (typing/typedecl.ml[1422,51565+2]..[1423,51624+49])
                Pexp_apply
                expression (typing/typedecl.ml[1422,51565+2]..[1422,51565+34])
                  Pexp_ident "Builtin_attributes.warning_scope" (typing/typedecl.ml[1422,51565+2]..[1422,51565+34])
                [
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[1422,51565+35]..[1422,51565+58])
                      Pexp_field
                      expression (typing/typedecl.ml[1422,51565+35]..[1422,51565+42])
                        Pexp_ident "valdecl" (typing/typedecl.ml[1422,51565+35]..[1422,51565+42])
                      "pval_attributes" (typing/typedecl.ml[1422,51565+43]..[1422,51565+58])
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[1423,51624+4]..[1423,51624+49])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typedecl.ml[1423,51624+9]..[1423,51624+11])
                        Ppat_construct "()" (typing/typedecl.ml[1423,51624+9]..[1423,51624+11])
                        None
                      expression (typing/typedecl.ml[1423,51624+15]..[1423,51624+48])
                        Pexp_apply
                        expression (typing/typedecl.ml[1423,51624+15]..[1423,51624+32])
                          Pexp_ident "transl_value_decl" (typing/typedecl.ml[1423,51624+15]..[1423,51624+32])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1423,51624+33]..[1423,51624+36])
                              Pexp_ident "env" (typing/typedecl.ml[1423,51624+33]..[1423,51624+36])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1423,51624+37]..[1423,51624+40])
                              Pexp_ident "loc" (typing/typedecl.ml[1423,51624+37]..[1423,51624+40])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1423,51624+41]..[1423,51624+48])
                              Pexp_ident "valdecl" (typing/typedecl.ml[1423,51624+41]..[1423,51624+48])
                        ]
                ]
    ]
  structure_item (typing/typedecl.ml[1437,52196+0]..[1574,57683+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1437,52196+4]..[1437,52196+26])
          Ppat_var "transl_with_constraint" (typing/typedecl.ml[1437,52196+4]..[1437,52196+26])
        expression (typing/typedecl.ml[1437,52196+27]..[1574,57683+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1437,52196+27]..[1437,52196+29])
            Ppat_var "id" (typing/typedecl.ml[1437,52196+27]..[1437,52196+29])
          expression (typing/typedecl.ml[1437,52196+30]..[1574,57683+3]) ghost
            Pexp_fun
            Optional "fixed_row_path"
            None
            pattern (typing/typedecl.ml[1437,52196+31]..[1437,52196+45])
              Ppat_var "fixed_row_path" (typing/typedecl.ml[1437,52196+31]..[1437,52196+45])
            expression (typing/typedecl.ml[1437,52196+46]..[1574,57683+3]) ghost
              Pexp_fun
              Labelled "sig_env"
              None
              pattern (typing/typedecl.ml[1437,52196+47]..[1437,52196+54])
                Ppat_var "sig_env" (typing/typedecl.ml[1437,52196+47]..[1437,52196+54])
              expression (typing/typedecl.ml[1437,52196+55]..[1574,57683+3]) ghost
                Pexp_fun
                Labelled "sig_decl"
                None
                pattern (typing/typedecl.ml[1437,52196+56]..[1437,52196+64])
                  Ppat_var "sig_decl" (typing/typedecl.ml[1437,52196+56]..[1437,52196+64])
                expression (typing/typedecl.ml[1437,52196+65]..[1574,57683+3]) ghost
                  Pexp_fun
                  Labelled "outer_env"
                  None
                  pattern (typing/typedecl.ml[1437,52196+66]..[1437,52196+75])
                    Ppat_var "outer_env" (typing/typedecl.ml[1437,52196+66]..[1437,52196+75])
                  expression (typing/typedecl.ml[1438,52272+4]..[1574,57683+3]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typedecl.ml[1438,52272+4]..[1438,52272+9])
                      Ppat_var "sdecl" (typing/typedecl.ml[1438,52272+4]..[1438,52272+9])
                    expression (typing/typedecl.ml[1439,52284+2]..[1574,57683+3])
                      Pexp_sequence
                      expression (typing/typedecl.ml[1439,52284+2]..[1439,52284+38])
                        Pexp_apply
                        expression (typing/typedecl.ml[1439,52284+2]..[1439,52284+20])
                          Pexp_ident "Env.mark_type_used" (typing/typedecl.ml[1439,52284+2]..[1439,52284+20])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1439,52284+21]..[1439,52284+38])
                              Pexp_field
                              expression (typing/typedecl.ml[1439,52284+21]..[1439,52284+29])
                                Pexp_ident "sig_decl" (typing/typedecl.ml[1439,52284+21]..[1439,52284+29])
                              "type_uid" (typing/typedecl.ml[1439,52284+30]..[1439,52284+38])
                        ]
                      expression (typing/typedecl.ml[1440,52324+2]..[1574,57683+3])
                        Pexp_sequence
                        expression (typing/typedecl.ml[1440,52324+2]..[1440,52324+24])
                          Pexp_apply
                          expression (typing/typedecl.ml[1440,52324+2]..[1440,52324+22])
                            Pexp_ident "reset_type_variables" (typing/typedecl.ml[1440,52324+2]..[1440,52324+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1440,52324+22]..[1440,52324+24])
                                Pexp_construct "()" (typing/typedecl.ml[1440,52324+22]..[1440,52324+24])
                                None
                          ]
                        expression (typing/typedecl.ml[1441,52350+2]..[1574,57683+3])
                          Pexp_sequence
                          expression (typing/typedecl.ml[1441,52350+2]..[1441,52350+19])
                            Pexp_apply
                            expression (typing/typedecl.ml[1441,52350+2]..[1441,52350+17])
                              Pexp_ident "Ctype.begin_def" (typing/typedecl.ml[1441,52350+2]..[1441,52350+17])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1441,52350+17]..[1441,52350+19])
                                  Pexp_construct "()" (typing/typedecl.ml[1441,52350+17]..[1441,52350+19])
                                  None
                            ]
                          expression (typing/typedecl.ml[1444,52505+2]..[1574,57683+3])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typedecl.ml[1444,52505+6]..[1444,52505+9])
                                  Ppat_var "env" (typing/typedecl.ml[1444,52505+6]..[1444,52505+9])
                                expression (typing/typedecl.ml[1444,52505+12]..[1444,52505+21])
                                  Pexp_ident "outer_env" (typing/typedecl.ml[1444,52505+12]..[1444,52505+21])
                            ]
                            expression (typing/typedecl.ml[1445,52530+2]..[1574,57683+3])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typedecl.ml[1445,52530+6]..[1445,52530+9])
                                    Ppat_var "loc" (typing/typedecl.ml[1445,52530+6]..[1445,52530+9])
                                  expression (typing/typedecl.ml[1445,52530+12]..[1445,52530+27])
                                    Pexp_field
                                    expression (typing/typedecl.ml[1445,52530+12]..[1445,52530+17])
                                      Pexp_ident "sdecl" (typing/typedecl.ml[1445,52530+12]..[1445,52530+17])
                                    "ptype_loc" (typing/typedecl.ml[1445,52530+18]..[1445,52530+27])
                              ]
                              expression (typing/typedecl.ml[1446,52561+2]..[1574,57683+3])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typedecl.ml[1446,52561+6]..[1446,52561+13])
                                      Ppat_var "tparams" (typing/typedecl.ml[1446,52561+6]..[1446,52561+13])
                                    expression (typing/typedecl.ml[1446,52561+16]..[1446,52561+50])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[1446,52561+16]..[1446,52561+27])
                                        Pexp_ident "make_params" (typing/typedecl.ml[1446,52561+16]..[1446,52561+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1446,52561+28]..[1446,52561+31])
                                            Pexp_ident "env" (typing/typedecl.ml[1446,52561+28]..[1446,52561+31])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1446,52561+32]..[1446,52561+50])
                                            Pexp_field
                                            expression (typing/typedecl.ml[1446,52561+32]..[1446,52561+37])
                                              Pexp_ident "sdecl" (typing/typedecl.ml[1446,52561+32]..[1446,52561+37])
                                            "ptype_params" (typing/typedecl.ml[1446,52561+38]..[1446,52561+50])
                                      ]
                                ]
                                expression (typing/typedecl.ml[1447,52615+2]..[1574,57683+3])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typedecl.ml[1447,52615+6]..[1447,52615+12])
                                        Ppat_var "params" (typing/typedecl.ml[1447,52615+6]..[1447,52615+12])
                                      expression (typing/typedecl.ml[1447,52615+15]..[1447,52615+63])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[1447,52615+15]..[1447,52615+23])
                                          Pexp_ident "List.map" (typing/typedecl.ml[1447,52615+15]..[1447,52615+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[1447,52615+24]..[1447,52615+55])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (typing/typedecl.ml[1447,52615+29]..[1447,52615+37])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/typedecl.ml[1447,52615+30]..[1447,52615+33])
                                                    Ppat_var "cty" (typing/typedecl.ml[1447,52615+30]..[1447,52615+33])
                                                  pattern (typing/typedecl.ml[1447,52615+35]..[1447,52615+36])
                                                    Ppat_any
                                                ]
                                              expression (typing/typedecl.ml[1447,52615+41]..[1447,52615+54])
                                                Pexp_field
                                                expression (typing/typedecl.ml[1447,52615+41]..[1447,52615+44])
                                                  Pexp_ident "cty" (typing/typedecl.ml[1447,52615+41]..[1447,52615+44])
                                                "ctyp_type" (typing/typedecl.ml[1447,52615+45]..[1447,52615+54])
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[1447,52615+56]..[1447,52615+63])
                                              Pexp_ident "tparams" (typing/typedecl.ml[1447,52615+56]..[1447,52615+63])
                                        ]
                                  ]
                                  expression (typing/typedecl.ml[1448,52682+2]..[1574,57683+3])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typedecl.ml[1448,52682+6]..[1448,52682+11])
                                          Ppat_var "arity" (typing/typedecl.ml[1448,52682+6]..[1448,52682+11])
                                        expression (typing/typedecl.ml[1448,52682+14]..[1448,52682+32])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1448,52682+14]..[1448,52682+25])
                                            Pexp_ident "List.length" (typing/typedecl.ml[1448,52682+14]..[1448,52682+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1448,52682+26]..[1448,52682+32])
                                                Pexp_ident "params" (typing/typedecl.ml[1448,52682+26]..[1448,52682+32])
                                          ]
                                    ]
                                    expression (typing/typedecl.ml[1449,52718+2]..[1574,57683+3])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typedecl.ml[1449,52718+6]..[1449,52718+17])
                                            Ppat_var "constraints" (typing/typedecl.ml[1449,52718+6]..[1449,52718+17])
                                          expression (typing/typedecl.ml[1450,52738+4]..[1458,53137+23])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[1450,52738+4]..[1450,52738+12])
                                              Pexp_ident "List.map" (typing/typedecl.ml[1450,52738+4]..[1450,52738+12])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1450,52738+13]..[1458,53137+5])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/typedecl.ml[1450,52738+18]..[1450,52738+32])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/typedecl.ml[1450,52738+19]..[1450,52738+21])
                                                        Ppat_var "ty" (typing/typedecl.ml[1450,52738+19]..[1450,52738+21])
                                                      pattern (typing/typedecl.ml[1450,52738+23]..[1450,52738+26])
                                                        Ppat_var "ty'" (typing/typedecl.ml[1450,52738+23]..[1450,52738+26])
                                                      pattern (typing/typedecl.ml[1450,52738+28]..[1450,52738+31])
                                                        Ppat_var "loc" (typing/typedecl.ml[1450,52738+28]..[1450,52738+31])
                                                    ]
                                                  expression (typing/typedecl.ml[1451,52774+6]..[1457,53114+22])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typedecl.ml[1451,52774+10]..[1451,52774+13])
                                                          Ppat_var "cty" (typing/typedecl.ml[1451,52774+10]..[1451,52774+13])
                                                        expression (typing/typedecl.ml[1451,52774+16]..[1451,52774+47])
                                                          Pexp_apply
                                                          expression (typing/typedecl.ml[1451,52774+16]..[1451,52774+34])
                                                            Pexp_ident "transl_simple_type" (typing/typedecl.ml[1451,52774+16]..[1451,52774+34])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1451,52774+35]..[1451,52774+38])
                                                                Pexp_ident "env" (typing/typedecl.ml[1451,52774+35]..[1451,52774+38])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1451,52774+39]..[1451,52774+44])
                                                                Pexp_construct "false" (typing/typedecl.ml[1451,52774+39]..[1451,52774+44])
                                                                None
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typedecl.ml[1451,52774+45]..[1451,52774+47])
                                                                Pexp_ident "ty" (typing/typedecl.ml[1451,52774+45]..[1451,52774+47])
                                                          ]
                                                    ]
                                                    expression (typing/typedecl.ml[1452,52825+6]..[1457,53114+22])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typedecl.ml[1452,52825+10]..[1452,52825+14])
                                                            Ppat_var "cty'" (typing/typedecl.ml[1452,52825+10]..[1452,52825+14])
                                                          expression (typing/typedecl.ml[1452,52825+17]..[1452,52825+49])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[1452,52825+17]..[1452,52825+35])
                                                              Pexp_ident "transl_simple_type" (typing/typedecl.ml[1452,52825+17]..[1452,52825+35])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1452,52825+36]..[1452,52825+39])
                                                                  Pexp_ident "env" (typing/typedecl.ml[1452,52825+36]..[1452,52825+39])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1452,52825+40]..[1452,52825+45])
                                                                  Pexp_construct "false" (typing/typedecl.ml[1452,52825+40]..[1452,52825+45])
                                                                  None
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1452,52825+46]..[1452,52825+49])
                                                                  Pexp_ident "ty'" (typing/typedecl.ml[1452,52825+46]..[1452,52825+49])
                                                            ]
                                                      ]
                                                      expression (typing/typedecl.ml[1457,53114+6]..[1457,53114+22])
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typedecl.ml[1457,53114+7]..[1457,53114+10])
                                                            Pexp_ident "cty" (typing/typedecl.ml[1457,53114+7]..[1457,53114+10])
                                                          expression (typing/typedecl.ml[1457,53114+12]..[1457,53114+16])
                                                            Pexp_ident "cty'" (typing/typedecl.ml[1457,53114+12]..[1457,53114+16])
                                                          expression (typing/typedecl.ml[1457,53114+18]..[1457,53114+21])
                                                            Pexp_ident "loc" (typing/typedecl.ml[1457,53114+18]..[1457,53114+21])
                                                        ]
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1458,53137+6]..[1458,53137+23])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[1458,53137+6]..[1458,53137+11])
                                                    Pexp_ident "sdecl" (typing/typedecl.ml[1458,53137+6]..[1458,53137+11])
                                                  "ptype_cstrs" (typing/typedecl.ml[1458,53137+12]..[1458,53137+23])
                                            ]
                                      ]
                                      expression (typing/typedecl.ml[1460,53166+2]..[1574,57683+3])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typedecl.ml[1460,53166+6]..[1460,53166+12])
                                              Ppat_var "no_row" (typing/typedecl.ml[1460,53166+6]..[1460,53166+12])
                                            expression (typing/typedecl.ml[1460,53166+15]..[1460,53166+40])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[1460,53166+15]..[1460,53166+18])
                                                Pexp_ident "not" (typing/typedecl.ml[1460,53166+15]..[1460,53166+18])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[1460,53166+19]..[1460,53166+40])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[1460,53166+20]..[1460,53166+33])
                                                      Pexp_ident "is_fixed_type" (typing/typedecl.ml[1460,53166+20]..[1460,53166+33])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[1460,53166+34]..[1460,53166+39])
                                                          Pexp_ident "sdecl" (typing/typedecl.ml[1460,53166+34]..[1460,53166+39])
                                                    ]
                                              ]
                                        ]
                                        expression (typing/typedecl.ml[1461,53210+2]..[1574,57683+3])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typedecl.ml[1461,53210+6]..[1461,53210+17])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/typedecl.ml[1461,53210+7]..[1461,53210+11])
                                                    Ppat_var "tman" (typing/typedecl.ml[1461,53210+7]..[1461,53210+11])
                                                  pattern (typing/typedecl.ml[1461,53210+13]..[1461,53210+16])
                                                    Ppat_var "man" (typing/typedecl.ml[1461,53210+13]..[1461,53210+16])
                                                ]
                                              expression (typing/typedecl.ml[1461,53210+21]..[1465,53361+36])
                                                Pexp_match
                                                expression (typing/typedecl.ml[1461,53210+27]..[1461,53210+47])
                                                  Pexp_field
                                                  expression (typing/typedecl.ml[1461,53210+27]..[1461,53210+32])
                                                    Pexp_ident "sdecl" (typing/typedecl.ml[1461,53210+27]..[1461,53210+32])
                                                  "ptype_manifest" (typing/typedecl.ml[1461,53210+33]..[1461,53210+47])
                                                [
                                                  <case>
                                                    pattern (typing/typedecl.ml[1462,53263+6]..[1462,53263+10])
                                                      Ppat_construct "None" (typing/typedecl.ml[1462,53263+6]..[1462,53263+10])
                                                      None
                                                    expression (typing/typedecl.ml[1462,53263+14]..[1462,53263+24])
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typedecl.ml[1462,53263+14]..[1462,53263+18])
                                                          Pexp_construct "None" (typing/typedecl.ml[1462,53263+14]..[1462,53263+18])
                                                          None
                                                        expression (typing/typedecl.ml[1462,53263+20]..[1462,53263+24])
                                                          Pexp_construct "None" (typing/typedecl.ml[1462,53263+20]..[1462,53263+24])
                                                          None
                                                      ]
                                                  <case>
                                                    pattern (typing/typedecl.ml[1463,53288+6]..[1463,53288+14])
                                                      Ppat_construct "Some" (typing/typedecl.ml[1463,53288+6]..[1463,53288+10])
                                                      Some
                                                        []
                                                        pattern (typing/typedecl.ml[1463,53288+11]..[1463,53288+14])
                                                          Ppat_var "sty" (typing/typedecl.ml[1463,53288+11]..[1463,53288+14])
                                                    expression (typing/typedecl.ml[1464,53306+8]..[1465,53361+36])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typedecl.ml[1464,53306+12]..[1464,53306+15])
                                                            Ppat_var "cty" (typing/typedecl.ml[1464,53306+12]..[1464,53306+15])
                                                          expression (typing/typedecl.ml[1464,53306+18]..[1464,53306+51])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[1464,53306+18]..[1464,53306+36])
                                                              Pexp_ident "transl_simple_type" (typing/typedecl.ml[1464,53306+18]..[1464,53306+36])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1464,53306+37]..[1464,53306+40])
                                                                  Pexp_ident "env" (typing/typedecl.ml[1464,53306+37]..[1464,53306+40])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1464,53306+41]..[1464,53306+47])
                                                                  Pexp_ident "no_row" (typing/typedecl.ml[1464,53306+41]..[1464,53306+47])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1464,53306+48]..[1464,53306+51])
                                                                  Pexp_ident "sty" (typing/typedecl.ml[1464,53306+48]..[1464,53306+51])
                                                            ]
                                                      ]
                                                      expression (typing/typedecl.ml[1465,53361+8]..[1465,53361+36])
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typedecl.ml[1465,53361+8]..[1465,53361+16])
                                                            Pexp_construct "Some" (typing/typedecl.ml[1465,53361+8]..[1465,53361+12])
                                                            Some
                                                              expression (typing/typedecl.ml[1465,53361+13]..[1465,53361+16])
                                                                Pexp_ident "cty" (typing/typedecl.ml[1465,53361+13]..[1465,53361+16])
                                                          expression (typing/typedecl.ml[1465,53361+18]..[1465,53361+36])
                                                            Pexp_construct "Some" (typing/typedecl.ml[1465,53361+18]..[1465,53361+22])
                                                            Some
                                                              expression (typing/typedecl.ml[1465,53361+23]..[1465,53361+36])
                                                                Pexp_field
                                                                expression (typing/typedecl.ml[1465,53361+23]..[1465,53361+26])
                                                                  Pexp_ident "cty" (typing/typedecl.ml[1465,53361+23]..[1465,53361+26])
                                                                "ctyp_type" (typing/typedecl.ml[1465,53361+27]..[1465,53361+36])
                                                        ]
                                                ]
                                          ]
                                          expression (typing/typedecl.ml[1472,53686+2]..[1574,57683+3])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typedecl.ml[1472,53686+6]..[1472,53686+9])
                                                  Ppat_var "env" (typing/typedecl.ml[1472,53686+6]..[1472,53686+9])
                                                expression (typing/typedecl.ml[1472,53686+12]..[1472,53686+19])
                                                  Pexp_ident "sig_env" (typing/typedecl.ml[1472,53686+12]..[1472,53686+19])
                                            ]
                                            expression (typing/typedecl.ml[1473,53709+2]..[1574,57683+3])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typedecl.ml[1473,53709+6]..[1473,53709+14])
                                                    Ppat_var "sig_decl" (typing/typedecl.ml[1473,53709+6]..[1473,53709+14])
                                                  expression (typing/typedecl.ml[1473,53709+17]..[1473,53709+52])
                                                    Pexp_apply
                                                    expression (typing/typedecl.ml[1473,53709+17]..[1473,53709+43])
                                                      Pexp_ident "Ctype.instance_declaration" (typing/typedecl.ml[1473,53709+17]..[1473,53709+43])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typedecl.ml[1473,53709+44]..[1473,53709+52])
                                                          Pexp_ident "sig_decl" (typing/typedecl.ml[1473,53709+44]..[1473,53709+52])
                                                    ]
                                              ]
                                              expression (typing/typedecl.ml[1474,53765+2]..[1574,57683+3])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typedecl.ml[1474,53765+6]..[1474,53765+14])
                                                      Ppat_var "arity_ok" (typing/typedecl.ml[1474,53765+6]..[1474,53765+14])
                                                    expression (typing/typedecl.ml[1474,53765+17]..[1474,53765+44])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[1474,53765+23]..[1474,53765+24])
                                                        Pexp_ident "=" (typing/typedecl.ml[1474,53765+23]..[1474,53765+24])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[1474,53765+17]..[1474,53765+22])
                                                            Pexp_ident "arity" (typing/typedecl.ml[1474,53765+17]..[1474,53765+22])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[1474,53765+25]..[1474,53765+44])
                                                            Pexp_field
                                                            expression (typing/typedecl.ml[1474,53765+25]..[1474,53765+33])
                                                              Pexp_ident "sig_decl" (typing/typedecl.ml[1474,53765+25]..[1474,53765+33])
                                                            "type_arity" (typing/typedecl.ml[1474,53765+34]..[1474,53765+44])
                                                      ]
                                                ]
                                                expression (typing/typedecl.ml[1475,53813+2]..[1574,57683+3])
                                                  Pexp_sequence
                                                  expression (typing/typedecl.ml[1475,53813+2]..[1480,54023+34])
                                                    Pexp_ifthenelse
                                                    expression (typing/typedecl.ml[1475,53813+5]..[1475,53813+13])
                                                      Pexp_ident "arity_ok" (typing/typedecl.ml[1475,53813+5]..[1475,53813+13])
                                                    expression (typing/typedecl.ml[1476,53832+4]..[1480,54023+34])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[1476,53832+4]..[1476,53832+14])
                                                        Pexp_ident "List.iter2" (typing/typedecl.ml[1476,53832+4]..[1476,53832+14])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[1476,53832+15]..[1480,54023+5])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/typedecl.ml[1476,53832+20]..[1476,53832+28])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typedecl.ml[1476,53832+21]..[1476,53832+24])
                                                                  Ppat_var "cty" (typing/typedecl.ml[1476,53832+21]..[1476,53832+24])
                                                                pattern (typing/typedecl.ml[1476,53832+26]..[1476,53832+27])
                                                                  Ppat_any
                                                              ]
                                                            expression (typing/typedecl.ml[1476,53832+29]..[1479,53952+70]) ghost
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (typing/typedecl.ml[1476,53832+29]..[1476,53832+35])
                                                                Ppat_var "tparam" (typing/typedecl.ml[1476,53832+29]..[1476,53832+35])
                                                              expression (typing/typedecl.ml[1477,53871+6]..[1479,53952+70])
                                                                Pexp_try
                                                                expression (typing/typedecl.ml[1477,53871+10]..[1477,53871+50])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[1477,53871+10]..[1477,53871+25])
                                                                    Pexp_ident "Ctype.unify_var" (typing/typedecl.ml[1477,53871+10]..[1477,53871+25])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[1477,53871+26]..[1477,53871+29])
Pexp_ident "env" (typing/typedecl.ml[1477,53871+26]..[1477,53871+29])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[1477,53871+30]..[1477,53871+43])
Pexp_field
expression (typing/typedecl.ml[1477,53871+30]..[1477,53871+33])
  Pexp_ident "cty" (typing/typedecl.ml[1477,53871+30]..[1477,53871+33])
"ctyp_type" (typing/typedecl.ml[1477,53871+34]..[1477,53871+43])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[1477,53871+44]..[1477,53871+50])
Pexp_ident "tparam" (typing/typedecl.ml[1477,53871+44]..[1477,53871+50])
                                                                  ]
                                                                [
                                                                  <case>
                                                                    pattern (typing/typedecl.ml[1478,53922+11]..[1478,53922+26])
                                                                      Ppat_construct "Ctype.Unify" (typing/typedecl.ml[1478,53922+11]..[1478,53922+22])
                                                                      Some
[]
pattern (typing/typedecl.ml[1478,53922+23]..[1478,53922+26])
  Ppat_var "err" (typing/typedecl.ml[1478,53922+23]..[1478,53922+26])
                                                                    expression (typing/typedecl.ml[1479,53952+8]..[1479,53952+70])
                                                                      Pexp_apply
                                                                      expression (typing/typedecl.ml[1479,53952+8]..[1479,53952+13])
Pexp_ident "raise" (typing/typedecl.ml[1479,53952+8]..[1479,53952+13])
                                                                      [
<arg>
Nolabel
  expression (typing/typedecl.ml[1479,53952+13]..[1479,53952+70])
    Pexp_construct "Error" (typing/typedecl.ml[1479,53952+14]..[1479,53952+19])
    Some
      expression (typing/typedecl.ml[1479,53952+19]..[1479,53952+69])
        Pexp_tuple
        [
          expression (typing/typedecl.ml[1479,53952+20]..[1479,53952+32])
            Pexp_field
            expression (typing/typedecl.ml[1479,53952+20]..[1479,53952+23])
              Pexp_ident "cty" (typing/typedecl.ml[1479,53952+20]..[1479,53952+23])
            "ctyp_loc" (typing/typedecl.ml[1479,53952+24]..[1479,53952+32])
          expression (typing/typedecl.ml[1479,53952+34]..[1479,53952+68])
            Pexp_construct "Inconsistent_constraint" (typing/typedecl.ml[1479,53952+34]..[1479,53952+57])
            Some
              expression (typing/typedecl.ml[1479,53952+58]..[1479,53952+68])
                Pexp_tuple
                [
                  expression (typing/typedecl.ml[1479,53952+59]..[1479,53952+62])
                    Pexp_ident "env" (typing/typedecl.ml[1479,53952+59]..[1479,53952+62])
                  expression (typing/typedecl.ml[1479,53952+64]..[1479,53952+67])
                    Pexp_ident "err" (typing/typedecl.ml[1479,53952+64]..[1479,53952+67])
                ]
        ]
                                                                      ]
                                                                ]
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[1480,54023+6]..[1480,54023+13])
                                                            Pexp_ident "tparams" (typing/typedecl.ml[1480,54023+6]..[1480,54023+13])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[1480,54023+14]..[1480,54023+34])
                                                            Pexp_field
                                                            expression (typing/typedecl.ml[1480,54023+14]..[1480,54023+22])
                                                              Pexp_ident "sig_decl" (typing/typedecl.ml[1480,54023+14]..[1480,54023+22])
                                                            "type_params" (typing/typedecl.ml[1480,54023+23]..[1480,54023+34])
                                                      ]
                                                    None
                                                  expression (typing/typedecl.ml[1481,54059+2]..[1574,57683+3])
                                                    Pexp_sequence
                                                    expression (typing/typedecl.ml[1481,54059+2]..[1488,54413+15])
                                                      Pexp_apply
                                                      expression (typing/typedecl.ml[1481,54059+2]..[1481,54059+11])
                                                        Pexp_ident "List.iter" (typing/typedecl.ml[1481,54059+2]..[1481,54059+11])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[1481,54059+12]..[1488,54413+3])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/typedecl.ml[1481,54059+17]..[1481,54059+33])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typedecl.ml[1481,54059+18]..[1481,54059+21])
                                                                  Ppat_var "cty" (typing/typedecl.ml[1481,54059+18]..[1481,54059+21])
                                                                pattern (typing/typedecl.ml[1481,54059+23]..[1481,54059+27])
                                                                  Ppat_var "cty'" (typing/typedecl.ml[1481,54059+23]..[1481,54059+27])
                                                                pattern (typing/typedecl.ml[1481,54059+29]..[1481,54059+32])
                                                                  Ppat_var "loc" (typing/typedecl.ml[1481,54059+29]..[1481,54059+32])
                                                              ]
                                                            expression (typing/typedecl.ml[1485,54272+4]..[1487,54353+59])
                                                              Pexp_try
                                                              expression (typing/typedecl.ml[1485,54272+8]..[1485,54272+52])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[1485,54272+8]..[1485,54272+19])
                                                                  Pexp_ident "Ctype.unify" (typing/typedecl.ml[1485,54272+8]..[1485,54272+19])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[1485,54272+20]..[1485,54272+23])
                                                                      Pexp_ident "env" (typing/typedecl.ml[1485,54272+20]..[1485,54272+23])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[1485,54272+24]..[1485,54272+37])
                                                                      Pexp_field
                                                                      expression (typing/typedecl.ml[1485,54272+24]..[1485,54272+27])
Pexp_ident "cty" (typing/typedecl.ml[1485,54272+24]..[1485,54272+27])
                                                                      "ctyp_type" (typing/typedecl.ml[1485,54272+28]..[1485,54272+37])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[1485,54272+38]..[1485,54272+52])
                                                                      Pexp_field
                                                                      expression (typing/typedecl.ml[1485,54272+38]..[1485,54272+42])
Pexp_ident "cty'" (typing/typedecl.ml[1485,54272+38]..[1485,54272+42])
                                                                      "ctyp_type" (typing/typedecl.ml[1485,54272+43]..[1485,54272+52])
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (typing/typedecl.ml[1486,54325+9]..[1486,54325+24])
                                                                    Ppat_construct "Ctype.Unify" (typing/typedecl.ml[1486,54325+9]..[1486,54325+20])
                                                                    Some
                                                                      []
                                                                      pattern (typing/typedecl.ml[1486,54325+21]..[1486,54325+24])
Ppat_var "err" (typing/typedecl.ml[1486,54325+21]..[1486,54325+24])
                                                                  expression (typing/typedecl.ml[1487,54353+6]..[1487,54353+59])
                                                                    Pexp_apply
                                                                    expression (typing/typedecl.ml[1487,54353+6]..[1487,54353+11])
                                                                      Pexp_ident "raise" (typing/typedecl.ml[1487,54353+6]..[1487,54353+11])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[1487,54353+11]..[1487,54353+59])
  Pexp_construct "Error" (typing/typedecl.ml[1487,54353+12]..[1487,54353+17])
  Some
    expression (typing/typedecl.ml[1487,54353+17]..[1487,54353+58])
      Pexp_tuple
      [
        expression (typing/typedecl.ml[1487,54353+18]..[1487,54353+21])
          Pexp_ident "loc" (typing/typedecl.ml[1487,54353+18]..[1487,54353+21])
        expression (typing/typedecl.ml[1487,54353+23]..[1487,54353+57])
          Pexp_construct "Inconsistent_constraint" (typing/typedecl.ml[1487,54353+23]..[1487,54353+46])
          Some
            expression (typing/typedecl.ml[1487,54353+47]..[1487,54353+57])
              Pexp_tuple
              [
                expression (typing/typedecl.ml[1487,54353+48]..[1487,54353+51])
                  Pexp_ident "env" (typing/typedecl.ml[1487,54353+48]..[1487,54353+51])
                expression (typing/typedecl.ml[1487,54353+53]..[1487,54353+56])
                  Pexp_ident "err" (typing/typedecl.ml[1487,54353+53]..[1487,54353+56])
              ]
      ]
                                                                    ]
                                                              ]
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typedecl.ml[1488,54413+4]..[1488,54413+15])
                                                            Pexp_ident "constraints" (typing/typedecl.ml[1488,54413+4]..[1488,54413+15])
                                                      ]
                                                    expression (typing/typedecl.ml[1489,54430+2]..[1574,57683+3])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typedecl.ml[1489,54430+6]..[1489,54430+10])
                                                            Ppat_var "priv" (typing/typedecl.ml[1489,54430+6]..[1489,54430+10])
                                                          expression (typing/typedecl.ml[1490,54443+4]..[1492,54553+55])
                                                            Pexp_ifthenelse
                                                            expression (typing/typedecl.ml[1490,54443+7]..[1490,54443+36])
                                                              Pexp_apply
                                                              expression (typing/typedecl.ml[1490,54443+27]..[1490,54443+28])
                                                                Pexp_ident "=" (typing/typedecl.ml[1490,54443+27]..[1490,54443+28])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[1490,54443+7]..[1490,54443+26])
                                                                    Pexp_field
                                                                    expression (typing/typedecl.ml[1490,54443+7]..[1490,54443+12])
                                                                      Pexp_ident "sdecl" (typing/typedecl.ml[1490,54443+7]..[1490,54443+12])
                                                                    "ptype_private" (typing/typedecl.ml[1490,54443+13]..[1490,54443+26])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typedecl.ml[1490,54443+29]..[1490,54443+36])
                                                                    Pexp_construct "Private" (typing/typedecl.ml[1490,54443+29]..[1490,54443+36])
                                                                    None
                                                              ]
                                                            expression (typing/typedecl.ml[1490,54443+42]..[1490,54443+49])
                                                              Pexp_construct "Private" (typing/typedecl.ml[1490,54443+42]..[1490,54443+49])
                                                              None
                                                            Some
                                                              expression (typing/typedecl.ml[1491,54498+4]..[1492,54553+55])
                                                                Pexp_ifthenelse
                                                                expression (typing/typedecl.ml[1491,54498+7]..[1491,54498+54])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[1491,54498+16]..[1491,54498+18])
                                                                    Pexp_ident "&&" (typing/typedecl.ml[1491,54498+16]..[1491,54498+18])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[1491,54498+7]..[1491,54498+15])
Pexp_ident "arity_ok" (typing/typedecl.ml[1491,54498+7]..[1491,54498+15])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[1491,54498+19]..[1491,54498+54])
Pexp_apply
expression (typing/typedecl.ml[1491,54498+38]..[1491,54498+40])
  Pexp_ident "<>" (typing/typedecl.ml[1491,54498+38]..[1491,54498+40])
[
  <arg>
  Nolabel
    expression (typing/typedecl.ml[1491,54498+19]..[1491,54498+37])
      Pexp_field
      expression (typing/typedecl.ml[1491,54498+19]..[1491,54498+27])
        Pexp_ident "sig_decl" (typing/typedecl.ml[1491,54498+19]..[1491,54498+27])
      "type_kind" (typing/typedecl.ml[1491,54498+28]..[1491,54498+37])
  <arg>
  Nolabel
    expression (typing/typedecl.ml[1491,54498+41]..[1491,54498+54])
      Pexp_construct "Type_abstract" (typing/typedecl.ml[1491,54498+41]..[1491,54498+54])
      None
]
                                                                  ]
                                                                expression (typing/typedecl.ml[1492,54553+9]..[1492,54553+30])
                                                                  Pexp_field
                                                                  expression (typing/typedecl.ml[1492,54553+9]..[1492,54553+17])
                                                                    Pexp_ident "sig_decl" (typing/typedecl.ml[1492,54553+9]..[1492,54553+17])
                                                                  "type_private" (typing/typedecl.ml[1492,54553+18]..[1492,54553+30])
                                                                Some
                                                                  expression (typing/typedecl.ml[1492,54553+36]..[1492,54553+55])
                                                                    Pexp_field
                                                                    expression (typing/typedecl.ml[1492,54553+36]..[1492,54553+41])
                                                                      Pexp_ident "sdecl" (typing/typedecl.ml[1492,54553+36]..[1492,54553+41])
                                                                    "ptype_private" (typing/typedecl.ml[1492,54553+42]..[1492,54553+55])
                                                      ]
                                                      expression (typing/typedecl.ml[1494,54614+2]..[1574,57683+3])
                                                        Pexp_sequence
                                                        expression (typing/typedecl.ml[1494,54614+2]..[1496,54707+53])
                                                          Pexp_ifthenelse
                                                          expression (typing/typedecl.ml[1494,54614+5]..[1495,54667+34])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[1494,54614+14]..[1494,54614+16])
                                                              Pexp_ident "&&" (typing/typedecl.ml[1494,54614+14]..[1494,54614+16])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1494,54614+5]..[1494,54614+13])
                                                                  Pexp_ident "arity_ok" (typing/typedecl.ml[1494,54614+5]..[1494,54614+13])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1494,54614+17]..[1495,54667+34])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[1495,54667+2]..[1495,54667+4])
                                                                    Pexp_ident "&&" (typing/typedecl.ml[1495,54667+2]..[1495,54667+4])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[1494,54614+17]..[1494,54614+52])
Pexp_apply
expression (typing/typedecl.ml[1494,54614+36]..[1494,54614+38])
  Pexp_ident "<>" (typing/typedecl.ml[1494,54614+36]..[1494,54614+38])
[
  <arg>
  Nolabel
    expression (typing/typedecl.ml[1494,54614+17]..[1494,54614+35])
      Pexp_field
      expression (typing/typedecl.ml[1494,54614+17]..[1494,54614+25])
        Pexp_ident "sig_decl" (typing/typedecl.ml[1494,54614+17]..[1494,54614+25])
      "type_kind" (typing/typedecl.ml[1494,54614+26]..[1494,54614+35])
  <arg>
  Nolabel
    expression (typing/typedecl.ml[1494,54614+39]..[1494,54614+52])
      Pexp_construct "Type_abstract" (typing/typedecl.ml[1494,54614+39]..[1494,54614+52])
      None
]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[1495,54667+5]..[1495,54667+34])
Pexp_apply
expression (typing/typedecl.ml[1495,54667+25]..[1495,54667+26])
  Pexp_ident "=" (typing/typedecl.ml[1495,54667+25]..[1495,54667+26])
[
  <arg>
  Nolabel
    expression (typing/typedecl.ml[1495,54667+5]..[1495,54667+24])
      Pexp_field
      expression (typing/typedecl.ml[1495,54667+5]..[1495,54667+10])
        Pexp_ident "sdecl" (typing/typedecl.ml[1495,54667+5]..[1495,54667+10])
      "ptype_private" (typing/typedecl.ml[1495,54667+11]..[1495,54667+24])
  <arg>
  Nolabel
    expression (typing/typedecl.ml[1495,54667+27]..[1495,54667+34])
      Pexp_construct "Private" (typing/typedecl.ml[1495,54667+27]..[1495,54667+34])
      None
]
                                                                  ]
                                                            ]
                                                          expression (typing/typedecl.ml[1496,54707+4]..[1496,54707+53])
                                                            Pexp_apply
                                                            expression (typing/typedecl.ml[1496,54707+4]..[1496,54707+23])
                                                              Pexp_ident "Location.deprecated" (typing/typedecl.ml[1496,54707+4]..[1496,54707+23])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1496,54707+24]..[1496,54707+27])
                                                                  Pexp_ident "loc" (typing/typedecl.ml[1496,54707+24]..[1496,54707+27])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typedecl.ml[1496,54707+28]..[1496,54707+53])
                                                                  Pexp_constant PConst_string("spurious use of private",(typing/typedecl.ml[1496,54707+29]..[1496,54707+52]),None)
                                                            ]
                                                          None
                                                        expression (typing/typedecl.ml[1497,54762+2]..[1574,57683+3])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (typing/typedecl.ml[1497,54762+6]..[1497,54762+37])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/typedecl.ml[1497,54762+6]..[1497,54762+15])
                                                                    Ppat_var "type_kind" (typing/typedecl.ml[1497,54762+6]..[1497,54762+15])
                                                                  pattern (typing/typedecl.ml[1497,54762+17]..[1497,54762+37])
                                                                    Ppat_var "type_unboxed_default" (typing/typedecl.ml[1497,54762+17]..[1497,54762+37])
                                                                ]
                                                              expression (typing/typedecl.ml[1498,54802+4]..[1501,54903+26])
                                                                Pexp_ifthenelse
                                                                expression (typing/typedecl.ml[1498,54802+7]..[1498,54802+30])
                                                                  Pexp_apply
                                                                  expression (typing/typedecl.ml[1498,54802+16]..[1498,54802+18])
                                                                    Pexp_ident "&&" (typing/typedecl.ml[1498,54802+16]..[1498,54802+18])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[1498,54802+7]..[1498,54802+15])
Pexp_ident "arity_ok" (typing/typedecl.ml[1498,54802+7]..[1498,54802+15])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typedecl.ml[1498,54802+19]..[1498,54802+30])
Pexp_apply
expression (typing/typedecl.ml[1498,54802+23]..[1498,54802+25])
  Pexp_ident "<>" (typing/typedecl.ml[1498,54802+23]..[1498,54802+25])
[
  <arg>
  Nolabel
    expression (typing/typedecl.ml[1498,54802+19]..[1498,54802+22])
      Pexp_ident "man" (typing/typedecl.ml[1498,54802+19]..[1498,54802+22])
  <arg>
  Nolabel
    expression (typing/typedecl.ml[1498,54802+26]..[1498,54802+30])
      Pexp_construct "None" (typing/typedecl.ml[1498,54802+26]..[1498,54802+30])
      None
]
                                                                  ]
                                                                expression (typing/typedecl.ml[1499,54838+6]..[1499,54838+55])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (typing/typedecl.ml[1499,54838+6]..[1499,54838+24])
                                                                      Pexp_field
                                                                      expression (typing/typedecl.ml[1499,54838+6]..[1499,54838+14])
Pexp_ident "sig_decl" (typing/typedecl.ml[1499,54838+6]..[1499,54838+14])
                                                                      "type_kind" (typing/typedecl.ml[1499,54838+15]..[1499,54838+24])
                                                                    expression (typing/typedecl.ml[1499,54838+26]..[1499,54838+55])
                                                                      Pexp_field
                                                                      expression (typing/typedecl.ml[1499,54838+26]..[1499,54838+34])
Pexp_ident "sig_decl" (typing/typedecl.ml[1499,54838+26]..[1499,54838+34])
                                                                      "type_unboxed_default" (typing/typedecl.ml[1499,54838+35]..[1499,54838+55])
                                                                  ]
                                                                Some
                                                                  expression (typing/typedecl.ml[1501,54903+6]..[1501,54903+26])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typedecl.ml[1501,54903+6]..[1501,54903+19])
Pexp_construct "Type_abstract" (typing/typedecl.ml[1501,54903+6]..[1501,54903+19])
None
                                                                      expression (typing/typedecl.ml[1501,54903+21]..[1501,54903+26])
Pexp_construct "false" (typing/typedecl.ml[1501,54903+21]..[1501,54903+26])
None
                                                                    ]
                                                          ]
                                                          expression (typing/typedecl.ml[1503,54935+2]..[1574,57683+3])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (typing/typedecl.ml[1503,54935+6]..[1503,54935+18])
                                                                  Ppat_var "new_sig_decl" (typing/typedecl.ml[1503,54935+6]..[1503,54935+18])
                                                                expression (typing/typedecl.ml[1504,54956+4]..[1518,55450+5])
                                                                  Pexp_record
                                                                  [
                                                                    "type_params" (typing/typedecl.ml[1504,54956+6]..[1504,54956+17])
                                                                      expression (typing/typedecl.ml[1504,54956+20]..[1504,54956+26])
Pexp_ident "params" (typing/typedecl.ml[1504,54956+20]..[1504,54956+26])
                                                                    "type_arity" (typing/typedecl.ml[1505,54984+6]..[1505,54984+16])
                                                                      expression (typing/typedecl.ml[1505,54984+19]..[1505,54984+24])
Pexp_ident "arity" (typing/typedecl.ml[1505,54984+19]..[1505,54984+24])
                                                                    "type_kind" (typing/typedecl.ml[1506,55010+6]..[1506,55010+15]) ghost
                                                                      expression (typing/typedecl.ml[1506,55010+6]..[1506,55010+15])
Pexp_ident "type_kind" (typing/typedecl.ml[1506,55010+6]..[1506,55010+15])
                                                                    "type_private" (typing/typedecl.ml[1507,55027+6]..[1507,55027+18])
                                                                      expression (typing/typedecl.ml[1507,55027+21]..[1507,55027+25])
Pexp_ident "priv" (typing/typedecl.ml[1507,55027+21]..[1507,55027+25])
                                                                    "type_manifest" (typing/typedecl.ml[1508,55054+6]..[1508,55054+19])
                                                                      expression (typing/typedecl.ml[1508,55054+22]..[1508,55054+25])
Pexp_ident "man" (typing/typedecl.ml[1508,55054+22]..[1508,55054+25])
                                                                    "type_variance" (typing/typedecl.ml[1509,55081+6]..[1509,55081+19])
                                                                      expression (typing/typedecl.ml[1509,55081+22]..[1509,55081+24])
Pexp_construct "[]" (typing/typedecl.ml[1509,55081+22]..[1509,55081+24])
None
                                                                    "type_separability" (typing/typedecl.ml[1510,55107+6]..[1510,55107+23])
                                                                      expression (typing/typedecl.ml[1510,55107+26]..[1510,55107+69])
Pexp_apply
expression (typing/typedecl.ml[1510,55107+26]..[1510,55107+62])
  Pexp_ident "Types.Separability.default_signature" (typing/typedecl.ml[1510,55107+26]..[1510,55107+62])
[
  <arg>
  Labelled "arity"
    expression (typing/typedecl.ml[1510,55107+64]..[1510,55107+69])
      Pexp_ident "arity" (typing/typedecl.ml[1510,55107+64]..[1510,55107+69])
]
                                                                    "type_is_newtype" (typing/typedecl.ml[1511,55178+6]..[1511,55178+21])
                                                                      expression (typing/typedecl.ml[1511,55178+24]..[1511,55178+29])
Pexp_construct "false" (typing/typedecl.ml[1511,55178+24]..[1511,55178+29])
None
                                                                    "type_expansion_scope" (typing/typedecl.ml[1512,55209+6]..[1512,55209+26])
                                                                      expression (typing/typedecl.ml[1512,55209+29]..[1512,55209+47])
Pexp_ident "Btype.lowest_level" (typing/typedecl.ml[1512,55209+29]..[1512,55209+47])
                                                                    "type_loc" (typing/typedecl.ml[1513,55258+6]..[1513,55258+14])
                                                                      expression (typing/typedecl.ml[1513,55258+17]..[1513,55258+20])
Pexp_ident "loc" (typing/typedecl.ml[1513,55258+17]..[1513,55258+20])
                                                                    "type_attributes" (typing/typedecl.ml[1514,55280+6]..[1514,55280+21])
                                                                      expression (typing/typedecl.ml[1514,55280+24]..[1514,55280+46])
Pexp_field
expression (typing/typedecl.ml[1514,55280+24]..[1514,55280+29])
  Pexp_ident "sdecl" (typing/typedecl.ml[1514,55280+24]..[1514,55280+29])
"ptype_attributes" (typing/typedecl.ml[1514,55280+30]..[1514,55280+46])
                                                                    "type_immediate" (typing/typedecl.ml[1515,55328+6]..[1515,55328+20])
                                                                      expression (typing/typedecl.ml[1515,55328+23]..[1515,55328+30])
Pexp_construct "Unknown" (typing/typedecl.ml[1515,55328+23]..[1515,55328+30])
None
                                                                    "type_unboxed_default" (typing/typedecl.ml[1516,55360+6]..[1516,55360+26]) ghost
                                                                      expression (typing/typedecl.ml[1516,55360+6]..[1516,55360+26])
Pexp_ident "type_unboxed_default" (typing/typedecl.ml[1516,55360+6]..[1516,55360+26])
                                                                    "type_uid" (typing/typedecl.ml[1517,55388+6]..[1517,55388+14])
                                                                      expression (typing/typedecl.ml[1517,55388+17]..[1517,55388+60])
Pexp_apply
expression (typing/typedecl.ml[1517,55388+17]..[1517,55388+23])
  Pexp_ident "Uid.mk" (typing/typedecl.ml[1517,55388+17]..[1517,55388+23])
[
  <arg>
  Labelled "current_unit"
    expression (typing/typedecl.ml[1517,55388+38]..[1517,55388+60])
      Pexp_apply
      expression (typing/typedecl.ml[1517,55388+39]..[1517,55388+56])
        Pexp_ident "Env.get_unit_name" (typing/typedecl.ml[1517,55388+39]..[1517,55388+56])
      [
        <arg>
        Nolabel
          expression (typing/typedecl.ml[1517,55388+57]..[1517,55388+59])
            Pexp_construct "()" (typing/typedecl.ml[1517,55388+57]..[1517,55388+59])
            None
      ]
]
                                                                  ]
                                                                  None
                                                            ]
                                                            expression (typing/typedecl.ml[1520,55461+2]..[1574,57683+3])
                                                              Pexp_sequence
                                                              expression (typing/typedecl.ml[1520,55461+2]..[1521,55537+18])
                                                                Pexp_apply
                                                                expression (typing/typedecl.ml[1520,55461+2]..[1520,55461+13])
                                                                  Pexp_ident "Option.iter" (typing/typedecl.ml[1520,55461+2]..[1520,55461+13])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[1520,55461+14]..[1520,55461+75])
                                                                      Pexp_fun
                                                                      Nolabel
                                                                      None
                                                                      pattern (typing/typedecl.ml[1520,55461+19]..[1520,55461+20])
Ppat_var "p" (typing/typedecl.ml[1520,55461+19]..[1520,55461+20])
                                                                      expression (typing/typedecl.ml[1520,55461+24]..[1520,55461+74])
Pexp_apply
expression (typing/typedecl.ml[1520,55461+24]..[1520,55461+39])
  Pexp_ident "set_private_row" (typing/typedecl.ml[1520,55461+24]..[1520,55461+39])
[
  <arg>
  Nolabel
    expression (typing/typedecl.ml[1520,55461+40]..[1520,55461+43])
      Pexp_ident "env" (typing/typedecl.ml[1520,55461+40]..[1520,55461+43])
  <arg>
  Nolabel
    expression (typing/typedecl.ml[1520,55461+44]..[1520,55461+59])
      Pexp_field
      expression (typing/typedecl.ml[1520,55461+44]..[1520,55461+49])
        Pexp_ident "sdecl" (typing/typedecl.ml[1520,55461+44]..[1520,55461+49])
      "ptype_loc" (typing/typedecl.ml[1520,55461+50]..[1520,55461+59])
  <arg>
  Nolabel
    expression (typing/typedecl.ml[1520,55461+60]..[1520,55461+61])
      Pexp_ident "p" (typing/typedecl.ml[1520,55461+60]..[1520,55461+61])
  <arg>
  Nolabel
    expression (typing/typedecl.ml[1520,55461+62]..[1520,55461+74])
      Pexp_ident "new_sig_decl" (typing/typedecl.ml[1520,55461+62]..[1520,55461+74])
]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typedecl.ml[1521,55537+4]..[1521,55537+18])
                                                                      Pexp_ident "fixed_row_path" (typing/typedecl.ml[1521,55537+4]..[1521,55537+18])
                                                                ]
                                                              expression (typing/typedecl.ml[1522,55557+2]..[1574,57683+3])
                                                                Pexp_sequence
                                                                expression (typing/typedecl.ml[1522,55557+2]..[1524,55692+5])
                                                                  Pexp_match
                                                                  expression (typing/typedecl.ml[1522,55557+14]..[1522,55557+49])
                                                                    Pexp_apply
                                                                    expression (typing/typedecl.ml[1522,55557+14]..[1522,55557+36])
                                                                      Pexp_ident "Ctype.closed_type_decl" (typing/typedecl.ml[1522,55557+14]..[1522,55557+36])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typedecl.ml[1522,55557+37]..[1522,55557+49])
  Pexp_ident "new_sig_decl" (typing/typedecl.ml[1522,55557+37]..[1522,55557+49])
                                                                    ]
                                                                  [
                                                                    <case>
                                                                      pattern (typing/typedecl.ml[1522,55557+55]..[1522,55557+59])
Ppat_construct "None" (typing/typedecl.ml[1522,55557+55]..[1522,55557+59])
None
                                                                      expression (typing/typedecl.ml[1522,55557+63]..[1522,55557+65])
Pexp_construct "()" (typing/typedecl.ml[1522,55557+63]..[1522,55557+65])
None
                                                                    <case>
                                                                      pattern (typing/typedecl.ml[1523,55623+4]..[1523,55623+11])
Ppat_construct "Some" (typing/typedecl.ml[1523,55623+4]..[1523,55623+8])
Some
  []
  pattern (typing/typedecl.ml[1523,55623+9]..[1523,55623+11])
    Ppat_var "ty" (typing/typedecl.ml[1523,55623+9]..[1523,55623+11])
                                                                      expression (typing/typedecl.ml[1523,55623+15]..[1523,55623+68])
Pexp_apply
expression (typing/typedecl.ml[1523,55623+15]..[1523,55623+20])
  Pexp_ident "raise" (typing/typedecl.ml[1523,55623+15]..[1523,55623+20])
[
  <arg>
  Nolabel
    expression (typing/typedecl.ml[1523,55623+20]..[1523,55623+68])
      Pexp_construct "Error" (typing/typedecl.ml[1523,55623+21]..[1523,55623+26])
      Some
        expression (typing/typedecl.ml[1523,55623+26]..[1523,55623+67])
          Pexp_tuple
          [
            expression (typing/typedecl.ml[1523,55623+27]..[1523,55623+30])
              Pexp_ident "loc" (typing/typedecl.ml[1523,55623+27]..[1523,55623+30])
            expression (typing/typedecl.ml[1523,55623+32]..[1523,55623+66])
              Pexp_construct "Unbound_type_var" (typing/typedecl.ml[1523,55623+32]..[1523,55623+48])
              Some
                expression (typing/typedecl.ml[1523,55623+48]..[1523,55623+66])
                  Pexp_tuple
                  [
                    expression (typing/typedecl.ml[1523,55623+49]..[1523,55623+51])
                      Pexp_ident "ty" (typing/typedecl.ml[1523,55623+49]..[1523,55623+51])
                    expression (typing/typedecl.ml[1523,55623+53]..[1523,55623+65])
                      Pexp_ident "new_sig_decl" (typing/typedecl.ml[1523,55623+53]..[1523,55623+65])
                  ]
          ]
]
                                                                  ]
                                                                expression (typing/typedecl.ml[1525,55699+2]..[1574,57683+3])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (typing/typedecl.ml[1525,55699+6]..[1525,55699+18])
Ppat_var "new_sig_decl" (typing/typedecl.ml[1525,55699+6]..[1525,55699+18])
                                                                      expression (typing/typedecl.ml[1525,55699+21]..[1525,55699+57])
Pexp_apply
expression (typing/typedecl.ml[1525,55699+21]..[1525,55699+35])
  Pexp_ident "name_recursion" (typing/typedecl.ml[1525,55699+21]..[1525,55699+35])
[
  <arg>
  Nolabel
    expression (typing/typedecl.ml[1525,55699+36]..[1525,55699+41])
      Pexp_ident "sdecl" (typing/typedecl.ml[1525,55699+36]..[1525,55699+41])
  <arg>
  Nolabel
    expression (typing/typedecl.ml[1525,55699+42]..[1525,55699+44])
      Pexp_ident "id" (typing/typedecl.ml[1525,55699+42]..[1525,55699+44])
  <arg>
  Nolabel
    expression (typing/typedecl.ml[1525,55699+45]..[1525,55699+57])
      Pexp_ident "new_sig_decl" (typing/typedecl.ml[1525,55699+45]..[1525,55699+57])
]
                                                                  ]
                                                                  expression (typing/typedecl.ml[1526,55760+2]..[1574,57683+3])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (typing/typedecl.ml[1526,55760+6]..[1526,55760+23])
  Ppat_var "new_type_variance" (typing/typedecl.ml[1526,55760+6]..[1526,55760+23])
expression (typing/typedecl.ml[1527,55786+4]..[1531,55980+39])
  Pexp_let Nonrec
  [
    <def>
      pattern (typing/typedecl.ml[1527,55786+8]..[1527,55786+16])
        Ppat_var "required" (typing/typedecl.ml[1527,55786+8]..[1527,55786+16])
      expression (typing/typedecl.ml[1527,55786+19]..[1527,55786+60])
        Pexp_apply
        expression (typing/typedecl.ml[1527,55786+19]..[1527,55786+54])
          Pexp_ident "Typedecl_variance.variance_of_sdecl" (typing/typedecl.ml[1527,55786+19]..[1527,55786+54])
        [
          <arg>
          Nolabel
            expression (typing/typedecl.ml[1527,55786+55]..[1527,55786+60])
              Pexp_ident "sdecl" (typing/typedecl.ml[1527,55786+55]..[1527,55786+60])
        ]
  ]
  expression (typing/typedecl.ml[1528,55850+4]..[1531,55980+39])
    Pexp_try
    expression (typing/typedecl.ml[1529,55858+6]..[1529,55858+74])
      Pexp_apply
      expression (typing/typedecl.ml[1529,55858+6]..[1529,55858+36])
        Pexp_ident "Typedecl_variance.compute_decl" (typing/typedecl.ml[1529,55858+6]..[1529,55858+36])
      [
        <arg>
        Nolabel
          expression (typing/typedecl.ml[1529,55858+37]..[1529,55858+40])
            Pexp_ident "env" (typing/typedecl.ml[1529,55858+37]..[1529,55858+40])
        <arg>
        Labelled "check"
          expression (typing/typedecl.ml[1529,55858+48]..[1529,55858+52])
            Pexp_construct "true" (typing/typedecl.ml[1529,55858+48]..[1529,55858+52])
            None
        <arg>
        Nolabel
          expression (typing/typedecl.ml[1529,55858+53]..[1529,55858+65])
            Pexp_ident "new_sig_decl" (typing/typedecl.ml[1529,55858+53]..[1529,55858+65])
        <arg>
        Nolabel
          expression (typing/typedecl.ml[1529,55858+66]..[1529,55858+74])
            Pexp_ident "required" (typing/typedecl.ml[1529,55858+66]..[1529,55858+74])
      ]
    [
      <case>
        pattern (typing/typedecl.ml[1530,55933+9]..[1530,55933+43])
          Ppat_construct "Typedecl_variance.Error" (typing/typedecl.ml[1530,55933+9]..[1530,55933+32])
          Some
            []
            pattern (typing/typedecl.ml[1530,55933+33]..[1530,55933+43])
              Ppat_tuple
              [
                pattern (typing/typedecl.ml[1530,55933+34]..[1530,55933+37])
                  Ppat_var "loc" (typing/typedecl.ml[1530,55933+34]..[1530,55933+37])
                pattern (typing/typedecl.ml[1530,55933+39]..[1530,55933+42])
                  Ppat_var "err" (typing/typedecl.ml[1530,55933+39]..[1530,55933+42])
              ]
        expression (typing/typedecl.ml[1531,55980+6]..[1531,55980+39])
          Pexp_apply
          expression (typing/typedecl.ml[1531,55980+6]..[1531,55980+11])
            Pexp_ident "raise" (typing/typedecl.ml[1531,55980+6]..[1531,55980+11])
          [
            <arg>
            Nolabel
              expression (typing/typedecl.ml[1531,55980+12]..[1531,55980+39])
                Pexp_construct "Error" (typing/typedecl.ml[1531,55980+13]..[1531,55980+18])
                Some
                  expression (typing/typedecl.ml[1531,55980+19]..[1531,55980+38])
                    Pexp_tuple
                    [
                      expression (typing/typedecl.ml[1531,55980+20]..[1531,55980+23])
                        Pexp_ident "loc" (typing/typedecl.ml[1531,55980+20]..[1531,55980+23])
                      expression (typing/typedecl.ml[1531,55980+25]..[1531,55980+37])
                        Pexp_construct "Variance" (typing/typedecl.ml[1531,55980+25]..[1531,55980+33])
                        Some
                          expression (typing/typedecl.ml[1531,55980+34]..[1531,55980+37])
                            Pexp_ident "err" (typing/typedecl.ml[1531,55980+34]..[1531,55980+37])
                    ]
          ]
    ]
                                                                    ]
                                                                    expression (typing/typedecl.ml[1532,56023+2]..[1574,57683+3])
                                                                      Pexp_let Nonrec
                                                                      [
<def>
  pattern (typing/typedecl.ml[1532,56023+6]..[1532,56023+24])
    Ppat_var "new_type_immediate" (typing/typedecl.ml[1532,56023+6]..[1532,56023+24])
  expression (typing/typedecl.ml[1534,56105+4]..[1534,56105+52])
    Pexp_apply
    expression (typing/typedecl.ml[1534,56105+4]..[1534,56105+35])
      Pexp_ident "Typedecl_immediacy.compute_decl" (typing/typedecl.ml[1534,56105+4]..[1534,56105+35])
    [
      <arg>
      Nolabel
        expression (typing/typedecl.ml[1534,56105+36]..[1534,56105+39])
          Pexp_ident "env" (typing/typedecl.ml[1534,56105+36]..[1534,56105+39])
      <arg>
      Nolabel
        expression (typing/typedecl.ml[1534,56105+40]..[1534,56105+52])
          Pexp_ident "new_sig_decl" (typing/typedecl.ml[1534,56105+40]..[1534,56105+52])
    ]
                                                                      ]
                                                                      expression (typing/typedecl.ml[1535,56161+2]..[1574,57683+3])
Pexp_let Nonrec
[
  <def>
    pattern (typing/typedecl.ml[1535,56161+6]..[1535,56161+27])
      Ppat_var "new_type_separability" (typing/typedecl.ml[1535,56161+6]..[1535,56161+27])
    expression (typing/typedecl.ml[1536,56191+4]..[1538,56302+43])
      Pexp_try
      expression (typing/typedecl.ml[1536,56191+8]..[1536,56191+59])
        Pexp_apply
        expression (typing/typedecl.ml[1536,56191+8]..[1536,56191+42])
          Pexp_ident "Typedecl_separability.compute_decl" (typing/typedecl.ml[1536,56191+8]..[1536,56191+42])
        [
          <arg>
          Nolabel
            expression (typing/typedecl.ml[1536,56191+43]..[1536,56191+46])
              Pexp_ident "env" (typing/typedecl.ml[1536,56191+43]..[1536,56191+46])
          <arg>
          Nolabel
            expression (typing/typedecl.ml[1536,56191+47]..[1536,56191+59])
              Pexp_ident "new_sig_decl" (typing/typedecl.ml[1536,56191+47]..[1536,56191+59])
        ]
      [
        <case>
          pattern (typing/typedecl.ml[1537,56251+9]..[1537,56251+47])
            Ppat_construct "Typedecl_separability.Error" (typing/typedecl.ml[1537,56251+9]..[1537,56251+36])
            Some
              []
              pattern (typing/typedecl.ml[1537,56251+37]..[1537,56251+47])
                Ppat_tuple
                [
                  pattern (typing/typedecl.ml[1537,56251+38]..[1537,56251+41])
                    Ppat_var "loc" (typing/typedecl.ml[1537,56251+38]..[1537,56251+41])
                  pattern (typing/typedecl.ml[1537,56251+43]..[1537,56251+46])
                    Ppat_var "err" (typing/typedecl.ml[1537,56251+43]..[1537,56251+46])
                ]
          expression (typing/typedecl.ml[1538,56302+6]..[1538,56302+43])
            Pexp_apply
            expression (typing/typedecl.ml[1538,56302+6]..[1538,56302+11])
              Pexp_ident "raise" (typing/typedecl.ml[1538,56302+6]..[1538,56302+11])
            [
              <arg>
              Nolabel
                expression (typing/typedecl.ml[1538,56302+12]..[1538,56302+43])
                  Pexp_construct "Error" (typing/typedecl.ml[1538,56302+13]..[1538,56302+18])
                  Some
                    expression (typing/typedecl.ml[1538,56302+19]..[1538,56302+42])
                      Pexp_tuple
                      [
                        expression (typing/typedecl.ml[1538,56302+20]..[1538,56302+23])
                          Pexp_ident "loc" (typing/typedecl.ml[1538,56302+20]..[1538,56302+23])
                        expression (typing/typedecl.ml[1538,56302+25]..[1538,56302+41])
                          Pexp_construct "Separability" (typing/typedecl.ml[1538,56302+25]..[1538,56302+37])
                          Some
                            expression (typing/typedecl.ml[1538,56302+38]..[1538,56302+41])
                              Pexp_ident "err" (typing/typedecl.ml[1538,56302+38]..[1538,56302+41])
                      ]
            ]
      ]
]
expression (typing/typedecl.ml[1539,56349+2]..[1574,57683+3])
  Pexp_let Nonrec
  [
    <def>
      pattern (typing/typedecl.ml[1539,56349+6]..[1539,56349+18])
        Ppat_var "new_sig_decl" (typing/typedecl.ml[1539,56349+6]..[1539,56349+18])
      expression (typing/typedecl.ml[1544,56640+4]..[1560,57326+5])
        Pexp_record
        [
          "type_params" (typing/typedecl.ml[1545,56646+6]..[1545,56646+17])
            expression (typing/typedecl.ml[1545,56646+20]..[1545,56646+44])
              Pexp_field
              expression (typing/typedecl.ml[1545,56646+20]..[1545,56646+32])
                Pexp_ident "new_sig_decl" (typing/typedecl.ml[1545,56646+20]..[1545,56646+32])
              "type_params" (typing/typedecl.ml[1545,56646+33]..[1545,56646+44])
          "type_arity" (typing/typedecl.ml[1546,56692+6]..[1546,56692+16])
            expression (typing/typedecl.ml[1546,56692+19]..[1546,56692+42])
              Pexp_field
              expression (typing/typedecl.ml[1546,56692+19]..[1546,56692+31])
                Pexp_ident "new_sig_decl" (typing/typedecl.ml[1546,56692+19]..[1546,56692+31])
              "type_arity" (typing/typedecl.ml[1546,56692+32]..[1546,56692+42])
          "type_kind" (typing/typedecl.ml[1547,56736+6]..[1547,56736+15])
            expression (typing/typedecl.ml[1547,56736+18]..[1547,56736+40])
              Pexp_field
              expression (typing/typedecl.ml[1547,56736+18]..[1547,56736+30])
                Pexp_ident "new_sig_decl" (typing/typedecl.ml[1547,56736+18]..[1547,56736+30])
              "type_kind" (typing/typedecl.ml[1547,56736+31]..[1547,56736+40])
          "type_private" (typing/typedecl.ml[1548,56778+6]..[1548,56778+18])
            expression (typing/typedecl.ml[1548,56778+21]..[1548,56778+46])
              Pexp_field
              expression (typing/typedecl.ml[1548,56778+21]..[1548,56778+33])
                Pexp_ident "new_sig_decl" (typing/typedecl.ml[1548,56778+21]..[1548,56778+33])
              "type_private" (typing/typedecl.ml[1548,56778+34]..[1548,56778+46])
          "type_manifest" (typing/typedecl.ml[1549,56826+6]..[1549,56826+19])
            expression (typing/typedecl.ml[1549,56826+22]..[1549,56826+48])
              Pexp_field
              expression (typing/typedecl.ml[1549,56826+22]..[1549,56826+34])
                Pexp_ident "new_sig_decl" (typing/typedecl.ml[1549,56826+22]..[1549,56826+34])
              "type_manifest" (typing/typedecl.ml[1549,56826+35]..[1549,56826+48])
          "type_unboxed_default" (typing/typedecl.ml[1550,56876+6]..[1550,56876+26])
            expression (typing/typedecl.ml[1550,56876+29]..[1550,56876+62])
              Pexp_field
              expression (typing/typedecl.ml[1550,56876+29]..[1550,56876+41])
                Pexp_ident "new_sig_decl" (typing/typedecl.ml[1550,56876+29]..[1550,56876+41])
              "type_unboxed_default" (typing/typedecl.ml[1550,56876+42]..[1550,56876+62])
          "type_is_newtype" (typing/typedecl.ml[1551,56940+6]..[1551,56940+21])
            expression (typing/typedecl.ml[1551,56940+24]..[1551,56940+52])
              Pexp_field
              expression (typing/typedecl.ml[1551,56940+24]..[1551,56940+36])
                Pexp_ident "new_sig_decl" (typing/typedecl.ml[1551,56940+24]..[1551,56940+36])
              "type_is_newtype" (typing/typedecl.ml[1551,56940+37]..[1551,56940+52])
          "type_expansion_scope" (typing/typedecl.ml[1552,56994+6]..[1552,56994+26])
            expression (typing/typedecl.ml[1552,56994+29]..[1552,56994+62])
              Pexp_field
              expression (typing/typedecl.ml[1552,56994+29]..[1552,56994+41])
                Pexp_ident "new_sig_decl" (typing/typedecl.ml[1552,56994+29]..[1552,56994+41])
              "type_expansion_scope" (typing/typedecl.ml[1552,56994+42]..[1552,56994+62])
          "type_loc" (typing/typedecl.ml[1553,57058+6]..[1553,57058+14])
            expression (typing/typedecl.ml[1553,57058+17]..[1553,57058+38])
              Pexp_field
              expression (typing/typedecl.ml[1553,57058+17]..[1553,57058+29])
                Pexp_ident "new_sig_decl" (typing/typedecl.ml[1553,57058+17]..[1553,57058+29])
              "type_loc" (typing/typedecl.ml[1553,57058+30]..[1553,57058+38])
          "type_attributes" (typing/typedecl.ml[1554,57098+6]..[1554,57098+21])
            expression (typing/typedecl.ml[1554,57098+24]..[1554,57098+52])
              Pexp_field
              expression (typing/typedecl.ml[1554,57098+24]..[1554,57098+36])
                Pexp_ident "new_sig_decl" (typing/typedecl.ml[1554,57098+24]..[1554,57098+36])
              "type_attributes" (typing/typedecl.ml[1554,57098+37]..[1554,57098+52])
          "type_uid" (typing/typedecl.ml[1555,57152+6]..[1555,57152+14])
            expression (typing/typedecl.ml[1555,57152+17]..[1555,57152+38])
              Pexp_field
              expression (typing/typedecl.ml[1555,57152+17]..[1555,57152+29])
                Pexp_ident "new_sig_decl" (typing/typedecl.ml[1555,57152+17]..[1555,57152+29])
              "type_uid" (typing/typedecl.ml[1555,57152+30]..[1555,57152+38])
          "type_variance" (typing/typedecl.ml[1557,57193+6]..[1557,57193+19])
            expression (typing/typedecl.ml[1557,57193+22]..[1557,57193+39])
              Pexp_ident "new_type_variance" (typing/typedecl.ml[1557,57193+22]..[1557,57193+39])
          "type_immediate" (typing/typedecl.ml[1558,57234+6]..[1558,57234+20])
            expression (typing/typedecl.ml[1558,57234+23]..[1558,57234+41])
              Pexp_ident "new_type_immediate" (typing/typedecl.ml[1558,57234+23]..[1558,57234+41])
          "type_separability" (typing/typedecl.ml[1559,57277+6]..[1559,57277+23])
            expression (typing/typedecl.ml[1559,57277+26]..[1559,57277+47])
              Pexp_ident "new_type_separability" (typing/typedecl.ml[1559,57277+26]..[1559,57277+47])
        ]
        None
  ]
  expression (typing/typedecl.ml[1561,57335+2]..[1574,57683+3])
    Pexp_sequence
    expression (typing/typedecl.ml[1561,57335+2]..[1561,57335+17])
      Pexp_apply
      expression (typing/typedecl.ml[1561,57335+2]..[1561,57335+15])
        Pexp_ident "Ctype.end_def" (typing/typedecl.ml[1561,57335+2]..[1561,57335+15])
      [
        <arg>
        Nolabel
          expression (typing/typedecl.ml[1561,57335+15]..[1561,57335+17])
            Pexp_construct "()" (typing/typedecl.ml[1561,57335+15]..[1561,57335+17])
            None
      ]
    expression (typing/typedecl.ml[1562,57354+2]..[1574,57683+3])
      Pexp_sequence
      expression (typing/typedecl.ml[1562,57354+2]..[1562,57354+30])
        Pexp_apply
        expression (typing/typedecl.ml[1562,57354+2]..[1562,57354+17])
          Pexp_ident "generalize_decl" (typing/typedecl.ml[1562,57354+2]..[1562,57354+17])
        [
          <arg>
          Nolabel
            expression (typing/typedecl.ml[1562,57354+18]..[1562,57354+30])
              Pexp_ident "new_sig_decl" (typing/typedecl.ml[1562,57354+18]..[1562,57354+30])
        ]
      expression (typing/typedecl.ml[1563,57386+2]..[1574,57683+3])
        Pexp_record
        [
          "typ_id" (typing/typedecl.ml[1564,57390+4]..[1564,57390+10])
            expression (typing/typedecl.ml[1564,57390+13]..[1564,57390+15])
              Pexp_ident "id" (typing/typedecl.ml[1564,57390+13]..[1564,57390+15])
          "typ_name" (typing/typedecl.ml[1565,57407+4]..[1565,57407+12])
            expression (typing/typedecl.ml[1565,57407+15]..[1565,57407+31])
              Pexp_field
              expression (typing/typedecl.ml[1565,57407+15]..[1565,57407+20])
                Pexp_ident "sdecl" (typing/typedecl.ml[1565,57407+15]..[1565,57407+20])
              "ptype_name" (typing/typedecl.ml[1565,57407+21]..[1565,57407+31])
          "typ_params" (typing/typedecl.ml[1566,57440+4]..[1566,57440+14])
            expression (typing/typedecl.ml[1566,57440+17]..[1566,57440+24])
              Pexp_ident "tparams" (typing/typedecl.ml[1566,57440+17]..[1566,57440+24])
          "typ_type" (typing/typedecl.ml[1567,57466+4]..[1567,57466+12])
            expression (typing/typedecl.ml[1567,57466+15]..[1567,57466+27])
              Pexp_ident "new_sig_decl" (typing/typedecl.ml[1567,57466+15]..[1567,57466+27])
          "typ_cstrs" (typing/typedecl.ml[1568,57495+4]..[1568,57495+13])
            expression (typing/typedecl.ml[1568,57495+16]..[1568,57495+27])
              Pexp_ident "constraints" (typing/typedecl.ml[1568,57495+16]..[1568,57495+27])
          "typ_loc" (typing/typedecl.ml[1569,57524+4]..[1569,57524+11])
            expression (typing/typedecl.ml[1569,57524+14]..[1569,57524+17])
              Pexp_ident "loc" (typing/typedecl.ml[1569,57524+14]..[1569,57524+17])
          "typ_manifest" (typing/typedecl.ml[1570,57543+4]..[1570,57543+16])
            expression (typing/typedecl.ml[1570,57543+19]..[1570,57543+23])
              Pexp_ident "tman" (typing/typedecl.ml[1570,57543+19]..[1570,57543+23])
          "typ_kind" (typing/typedecl.ml[1571,57568+4]..[1571,57568+12])
            expression (typing/typedecl.ml[1571,57568+15]..[1571,57568+29])
              Pexp_construct "Ttype_abstract" (typing/typedecl.ml[1571,57568+15]..[1571,57568+29])
              None
          "typ_private" (typing/typedecl.ml[1572,57599+4]..[1572,57599+15])
            expression (typing/typedecl.ml[1572,57599+18]..[1572,57599+37])
              Pexp_field
              expression (typing/typedecl.ml[1572,57599+18]..[1572,57599+23])
                Pexp_ident "sdecl" (typing/typedecl.ml[1572,57599+18]..[1572,57599+23])
              "ptype_private" (typing/typedecl.ml[1572,57599+24]..[1572,57599+37])
          "typ_attributes" (typing/typedecl.ml[1573,57638+4]..[1573,57638+18])
            expression (typing/typedecl.ml[1573,57638+21]..[1573,57638+43])
              Pexp_field
              expression (typing/typedecl.ml[1573,57638+21]..[1573,57638+26])
                Pexp_ident "sdecl" (typing/typedecl.ml[1573,57638+21]..[1573,57638+26])
              "ptype_attributes" (typing/typedecl.ml[1573,57638+27]..[1573,57638+43])
        ]
        None
    ]
  structure_item (typing/typedecl.ml[1578,57756+0]..[1600,58530+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1578,57756+4]..[1578,57756+22])
          Ppat_var "abstract_type_decl" (typing/typedecl.ml[1578,57756+4]..[1578,57756+22])
        expression (typing/typedecl.ml[1578,57756+23]..[1600,58530+6]) ghost
          Pexp_fun
          Labelled "injective"
          None
          pattern (typing/typedecl.ml[1578,57756+24]..[1578,57756+33])
            Ppat_var "injective" (typing/typedecl.ml[1578,57756+24]..[1578,57756+33])
          expression (typing/typedecl.ml[1578,57756+34]..[1600,58530+6]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[1578,57756+34]..[1578,57756+39])
              Ppat_var "arity" (typing/typedecl.ml[1578,57756+34]..[1578,57756+39])
            expression (typing/typedecl.ml[1579,57798+2]..[1600,58530+6])
              Pexp_let Rec
              [
                <def>
                  pattern (typing/typedecl.ml[1579,57798+10]..[1579,57798+21])
                    Ppat_var "make_params" (typing/typedecl.ml[1579,57798+10]..[1579,57798+21])
                  expression (typing/typedecl.ml[1579,57798+22]..[1580,57824+62]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typedecl.ml[1579,57798+22]..[1579,57798+23])
                      Ppat_var "n" (typing/typedecl.ml[1579,57798+22]..[1579,57798+23])
                    expression (typing/typedecl.ml[1580,57824+4]..[1580,57824+62])
                      Pexp_ifthenelse
                      expression (typing/typedecl.ml[1580,57824+7]..[1580,57824+13])
                        Pexp_apply
                        expression (typing/typedecl.ml[1580,57824+9]..[1580,57824+11])
                          Pexp_ident "<=" (typing/typedecl.ml[1580,57824+9]..[1580,57824+11])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1580,57824+7]..[1580,57824+8])
                              Pexp_ident "n" (typing/typedecl.ml[1580,57824+7]..[1580,57824+8])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1580,57824+12]..[1580,57824+13])
                              Pexp_constant PConst_int (0,None)
                        ]
                      expression (typing/typedecl.ml[1580,57824+19]..[1580,57824+21])
                        Pexp_construct "[]" (typing/typedecl.ml[1580,57824+19]..[1580,57824+21])
                        None
                      Some
                        expression (typing/typedecl.ml[1580,57824+27]..[1580,57824+62])
                          Pexp_construct "::" (typing/typedecl.ml[1580,57824+42]..[1580,57824+44])
                          Some
                            expression (typing/typedecl.ml[1580,57824+27]..[1580,57824+62]) ghost
                              Pexp_tuple
                              [
                                expression (typing/typedecl.ml[1580,57824+27]..[1580,57824+41])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[1580,57824+27]..[1580,57824+39])
                                    Pexp_ident "Ctype.newvar" (typing/typedecl.ml[1580,57824+27]..[1580,57824+39])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1580,57824+39]..[1580,57824+41])
                                        Pexp_construct "()" (typing/typedecl.ml[1580,57824+39]..[1580,57824+41])
                                        None
                                  ]
                                expression (typing/typedecl.ml[1580,57824+45]..[1580,57824+62])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[1580,57824+45]..[1580,57824+56])
                                    Pexp_ident "make_params" (typing/typedecl.ml[1580,57824+45]..[1580,57824+56])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1580,57824+57]..[1580,57824+62])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[1580,57824+59]..[1580,57824+60])
                                          Pexp_ident "-" (typing/typedecl.ml[1580,57824+59]..[1580,57824+60])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[1580,57824+58]..[1580,57824+59])
                                              Pexp_ident "n" (typing/typedecl.ml[1580,57824+58]..[1580,57824+59])
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[1580,57824+60]..[1580,57824+61])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                  ]
                              ]
              ]
              expression (typing/typedecl.ml[1581,57890+2]..[1600,58530+6])
                Pexp_sequence
                expression (typing/typedecl.ml[1581,57890+2]..[1581,57890+19])
                  Pexp_apply
                  expression (typing/typedecl.ml[1581,57890+2]..[1581,57890+17])
                    Pexp_ident "Ctype.begin_def" (typing/typedecl.ml[1581,57890+2]..[1581,57890+17])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1581,57890+17]..[1581,57890+19])
                        Pexp_construct "()" (typing/typedecl.ml[1581,57890+17]..[1581,57890+19])
                        None
                  ]
                expression (typing/typedecl.ml[1582,57911+2]..[1600,58530+6])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typedecl.ml[1582,57911+6]..[1582,57911+10])
                        Ppat_var "decl" (typing/typedecl.ml[1582,57911+6]..[1582,57911+10])
                      expression (typing/typedecl.ml[1583,57924+4]..[1597,58477+6])
                        Pexp_record
                        [
                          "type_params" (typing/typedecl.ml[1583,57924+6]..[1583,57924+17])
                            expression (typing/typedecl.ml[1583,57924+20]..[1583,57924+37])
                              Pexp_apply
                              expression (typing/typedecl.ml[1583,57924+20]..[1583,57924+31])
                                Pexp_ident "make_params" (typing/typedecl.ml[1583,57924+20]..[1583,57924+31])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1583,57924+32]..[1583,57924+37])
                                    Pexp_ident "arity" (typing/typedecl.ml[1583,57924+32]..[1583,57924+37])
                              ]
                          "type_arity" (typing/typedecl.ml[1584,57963+6]..[1584,57963+16])
                            expression (typing/typedecl.ml[1584,57963+19]..[1584,57963+24])
                              Pexp_ident "arity" (typing/typedecl.ml[1584,57963+19]..[1584,57963+24])
                          "type_kind" (typing/typedecl.ml[1585,57989+6]..[1585,57989+15])
                            expression (typing/typedecl.ml[1585,57989+18]..[1585,57989+31])
                              Pexp_construct "Type_abstract" (typing/typedecl.ml[1585,57989+18]..[1585,57989+31])
                              None
                          "type_private" (typing/typedecl.ml[1586,58022+6]..[1586,58022+18])
                            expression (typing/typedecl.ml[1586,58022+21]..[1586,58022+27])
                              Pexp_construct "Public" (typing/typedecl.ml[1586,58022+21]..[1586,58022+27])
                              None
                          "type_manifest" (typing/typedecl.ml[1587,58051+6]..[1587,58051+19])
                            expression (typing/typedecl.ml[1587,58051+22]..[1587,58051+26])
                              Pexp_construct "None" (typing/typedecl.ml[1587,58051+22]..[1587,58051+26])
                              None
                          "type_variance" (typing/typedecl.ml[1588,58079+6]..[1588,58079+19])
                            expression (typing/typedecl.ml[1588,58079+22]..[1588,58079+66])
                              Pexp_apply
                              expression (typing/typedecl.ml[1588,58079+22]..[1588,58079+48])
                                Pexp_ident "Variance.unknown_signature" (typing/typedecl.ml[1588,58079+22]..[1588,58079+48])
                              [
                                <arg>
                                Labelled "injective"
                                  expression (typing/typedecl.ml[1588,58079+50]..[1588,58079+59])
                                    Pexp_ident "injective" (typing/typedecl.ml[1588,58079+50]..[1588,58079+59])
                                <arg>
                                Labelled "arity"
                                  expression (typing/typedecl.ml[1588,58079+61]..[1588,58079+66])
                                    Pexp_ident "arity" (typing/typedecl.ml[1588,58079+61]..[1588,58079+66])
                              ]
                          "type_separability" (typing/typedecl.ml[1589,58147+6]..[1589,58147+23])
                            expression (typing/typedecl.ml[1589,58147+26]..[1589,58147+69])
                              Pexp_apply
                              expression (typing/typedecl.ml[1589,58147+26]..[1589,58147+62])
                                Pexp_ident "Types.Separability.default_signature" (typing/typedecl.ml[1589,58147+26]..[1589,58147+62])
                              [
                                <arg>
                                Labelled "arity"
                                  expression (typing/typedecl.ml[1589,58147+64]..[1589,58147+69])
                                    Pexp_ident "arity" (typing/typedecl.ml[1589,58147+64]..[1589,58147+69])
                              ]
                          "type_is_newtype" (typing/typedecl.ml[1590,58218+6]..[1590,58218+21])
                            expression (typing/typedecl.ml[1590,58218+24]..[1590,58218+29])
                              Pexp_construct "false" (typing/typedecl.ml[1590,58218+24]..[1590,58218+29])
                              None
                          "type_expansion_scope" (typing/typedecl.ml[1591,58249+6]..[1591,58249+26])
                            expression (typing/typedecl.ml[1591,58249+29]..[1591,58249+47])
                              Pexp_ident "Btype.lowest_level" (typing/typedecl.ml[1591,58249+29]..[1591,58249+47])
                          "type_loc" (typing/typedecl.ml[1592,58298+6]..[1592,58298+14])
                            expression (typing/typedecl.ml[1592,58298+17]..[1592,58298+30])
                              Pexp_ident "Location.none" (typing/typedecl.ml[1592,58298+17]..[1592,58298+30])
                          "type_attributes" (typing/typedecl.ml[1593,58330+6]..[1593,58330+21])
                            expression (typing/typedecl.ml[1593,58330+24]..[1593,58330+26])
                              Pexp_construct "[]" (typing/typedecl.ml[1593,58330+24]..[1593,58330+26])
                              None
                          "type_immediate" (typing/typedecl.ml[1594,58358+6]..[1594,58358+20])
                            expression (typing/typedecl.ml[1594,58358+23]..[1594,58358+30])
                              Pexp_construct "Unknown" (typing/typedecl.ml[1594,58358+23]..[1594,58358+30])
                              None
                          "type_unboxed_default" (typing/typedecl.ml[1595,58390+6]..[1595,58390+26])
                            expression (typing/typedecl.ml[1595,58390+29]..[1595,58390+34])
                              Pexp_construct "false" (typing/typedecl.ml[1595,58390+29]..[1595,58390+34])
                              None
                          "type_uid" (typing/typedecl.ml[1596,58426+6]..[1596,58426+14])
                            expression (typing/typedecl.ml[1596,58426+17]..[1596,58426+49])
                              Pexp_ident "Uid.internal_not_actually_unique" (typing/typedecl.ml[1596,58426+17]..[1596,58426+49])
                        ]
                        None
                  ]
                  expression (typing/typedecl.ml[1598,58487+2]..[1600,58530+6])
                    Pexp_sequence
                    expression (typing/typedecl.ml[1598,58487+2]..[1598,58487+17])
                      Pexp_apply
                      expression (typing/typedecl.ml[1598,58487+2]..[1598,58487+15])
                        Pexp_ident "Ctype.end_def" (typing/typedecl.ml[1598,58487+2]..[1598,58487+15])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1598,58487+15]..[1598,58487+17])
                            Pexp_construct "()" (typing/typedecl.ml[1598,58487+15]..[1598,58487+17])
                            None
                      ]
                    expression (typing/typedecl.ml[1599,58506+2]..[1600,58530+6])
                      Pexp_sequence
                      expression (typing/typedecl.ml[1599,58506+2]..[1599,58506+22])
                        Pexp_apply
                        expression (typing/typedecl.ml[1599,58506+2]..[1599,58506+17])
                          Pexp_ident "generalize_decl" (typing/typedecl.ml[1599,58506+2]..[1599,58506+17])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1599,58506+18]..[1599,58506+22])
                              Pexp_ident "decl" (typing/typedecl.ml[1599,58506+18]..[1599,58506+22])
                        ]
                      expression (typing/typedecl.ml[1600,58530+2]..[1600,58530+6])
                        Pexp_ident "decl" (typing/typedecl.ml[1600,58530+2]..[1600,58530+6])
    ]
  structure_item (typing/typedecl.ml[1602,58538+0]..[1609,58828+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1602,58538+4]..[1602,58538+20])
          Ppat_var "approx_type_decl" (typing/typedecl.ml[1602,58538+4]..[1602,58538+20])
        expression (typing/typedecl.ml[1602,58538+21]..[1609,58828+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1602,58538+21]..[1602,58538+31])
            Ppat_var "sdecl_list" (typing/typedecl.ml[1602,58538+21]..[1602,58538+31])
          expression (typing/typedecl.ml[1603,58572+2]..[1609,58828+14])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/typedecl.ml[1603,58572+6]..[1603,58572+11])
                  Ppat_var "scope" (typing/typedecl.ml[1603,58572+6]..[1603,58572+11])
                expression (typing/typedecl.ml[1603,58572+14]..[1603,58572+35])
                  Pexp_apply
                  expression (typing/typedecl.ml[1603,58572+14]..[1603,58572+32])
                    Pexp_ident "Ctype.create_scope" (typing/typedecl.ml[1603,58572+14]..[1603,58572+32])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1603,58572+33]..[1603,58572+35])
                        Pexp_construct "()" (typing/typedecl.ml[1603,58572+33]..[1603,58572+35])
                        None
                  ]
            ]
            expression (typing/typedecl.ml[1604,58611+2]..[1609,58828+14])
              Pexp_apply
              expression (typing/typedecl.ml[1604,58611+2]..[1604,58611+10])
                Pexp_ident "List.map" (typing/typedecl.ml[1604,58611+2]..[1604,58611+10])
              [
                <arg>
                Nolabel
                  expression (typing/typedecl.ml[1605,58622+4]..[1608,58756+71])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typedecl.ml[1605,58622+9]..[1605,58622+14])
                      Ppat_var "sdecl" (typing/typedecl.ml[1605,58622+9]..[1605,58622+14])
                    expression (typing/typedecl.ml[1606,58640+6]..[1608,58756+70])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typedecl.ml[1606,58640+10]..[1606,58640+19])
                            Ppat_var "injective" (typing/typedecl.ml[1606,58640+10]..[1606,58640+19])
                          expression (typing/typedecl.ml[1606,58640+22]..[1606,58640+56])
                            Pexp_apply
                            expression (typing/typedecl.ml[1606,58640+39]..[1606,58640+41])
                              Pexp_ident "<>" (typing/typedecl.ml[1606,58640+39]..[1606,58640+41])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1606,58640+22]..[1606,58640+38])
                                  Pexp_field
                                  expression (typing/typedecl.ml[1606,58640+22]..[1606,58640+27])
                                    Pexp_ident "sdecl" (typing/typedecl.ml[1606,58640+22]..[1606,58640+27])
                                  "ptype_kind" (typing/typedecl.ml[1606,58640+28]..[1606,58640+38])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1606,58640+42]..[1606,58640+56])
                                  Pexp_construct "Ptype_abstract" (typing/typedecl.ml[1606,58640+42]..[1606,58640+56])
                                  None
                            ]
                      ]
                      expression (typing/typedecl.ml[1607,58700+6]..[1608,58756+70])
                        Pexp_tuple
                        [
                          expression (typing/typedecl.ml[1607,58700+7]..[1607,58700+54])
                            Pexp_apply
                            expression (typing/typedecl.ml[1607,58700+7]..[1607,58700+26])
                              Pexp_ident "Ident.create_scoped" (typing/typedecl.ml[1607,58700+7]..[1607,58700+26])
                            [
                              <arg>
                              Labelled "scope"
                                expression (typing/typedecl.ml[1607,58700+28]..[1607,58700+33])
                                  Pexp_ident "scope" (typing/typedecl.ml[1607,58700+28]..[1607,58700+33])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1607,58700+34]..[1607,58700+54])
                                  Pexp_field
                                  expression (typing/typedecl.ml[1607,58700+34]..[1607,58700+50])
                                    Pexp_field
                                    expression (typing/typedecl.ml[1607,58700+34]..[1607,58700+39])
                                      Pexp_ident "sdecl" (typing/typedecl.ml[1607,58700+34]..[1607,58700+39])
                                    "ptype_name" (typing/typedecl.ml[1607,58700+40]..[1607,58700+50])
                                  "txt" (typing/typedecl.ml[1607,58700+51]..[1607,58700+54])
                            ]
                          expression (typing/typedecl.ml[1608,58756+7]..[1608,58756+69])
                            Pexp_apply
                            expression (typing/typedecl.ml[1608,58756+7]..[1608,58756+25])
                              Pexp_ident "abstract_type_decl" (typing/typedecl.ml[1608,58756+7]..[1608,58756+25])
                            [
                              <arg>
                              Labelled "injective"
                                expression (typing/typedecl.ml[1608,58756+27]..[1608,58756+36])
                                  Pexp_ident "injective" (typing/typedecl.ml[1608,58756+27]..[1608,58756+36])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1608,58756+37]..[1608,58756+69])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[1608,58756+38]..[1608,58756+49])
                                    Pexp_ident "List.length" (typing/typedecl.ml[1608,58756+38]..[1608,58756+49])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1608,58756+50]..[1608,58756+68])
                                        Pexp_field
                                        expression (typing/typedecl.ml[1608,58756+50]..[1608,58756+55])
                                          Pexp_ident "sdecl" (typing/typedecl.ml[1608,58756+50]..[1608,58756+55])
                                        "ptype_params" (typing/typedecl.ml[1608,58756+56]..[1608,58756+68])
                                  ]
                            ]
                        ]
                <arg>
                Nolabel
                  expression (typing/typedecl.ml[1609,58828+4]..[1609,58828+14])
                    Pexp_ident "sdecl_list" (typing/typedecl.ml[1609,58828+4]..[1609,58828+14])
              ]
    ]
  structure_item (typing/typedecl.ml[1614,58984+0]..[1622,59477+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1614,58984+4]..[1614,58984+25])
          Ppat_var "check_recmod_typedecl" (typing/typedecl.ml[1614,58984+4]..[1614,58984+25])
        expression (typing/typedecl.ml[1614,58984+26]..[1622,59477+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1614,58984+26]..[1614,58984+29])
            Ppat_var "env" (typing/typedecl.ml[1614,58984+26]..[1614,58984+29])
          expression (typing/typedecl.ml[1614,58984+30]..[1622,59477+35]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[1614,58984+30]..[1614,58984+33])
              Ppat_var "loc" (typing/typedecl.ml[1614,58984+30]..[1614,58984+33])
            expression (typing/typedecl.ml[1614,58984+34]..[1622,59477+35]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[1614,58984+34]..[1614,58984+44])
                Ppat_var "recmod_ids" (typing/typedecl.ml[1614,58984+34]..[1614,58984+44])
              expression (typing/typedecl.ml[1614,58984+45]..[1622,59477+35]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[1614,58984+45]..[1614,58984+49])
                  Ppat_var "path" (typing/typedecl.ml[1614,58984+45]..[1614,58984+49])
                expression (typing/typedecl.ml[1614,58984+50]..[1622,59477+35]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typedecl.ml[1614,58984+50]..[1614,58984+54])
                    Ppat_var "decl" (typing/typedecl.ml[1614,58984+50]..[1614,58984+54])
                  expression (typing/typedecl.ml[1617,59167+2]..[1622,59477+35])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typedecl.ml[1617,59167+6]..[1617,59167+14])
                          Ppat_var "to_check" (typing/typedecl.ml[1617,59167+6]..[1617,59167+14])
                        expression (typing/typedecl.ml[1617,59167+15]..[1617,59167+54]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typedecl.ml[1617,59167+15]..[1617,59167+19])
                            Ppat_var "path" (typing/typedecl.ml[1617,59167+15]..[1617,59167+19])
                          expression (typing/typedecl.ml[1617,59167+22]..[1617,59167+54])
                            Pexp_apply
                            expression (typing/typedecl.ml[1617,59167+22]..[1617,59167+38])
                              Pexp_ident "Path.exists_free" (typing/typedecl.ml[1617,59167+22]..[1617,59167+38])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1617,59167+39]..[1617,59167+49])
                                  Pexp_ident "recmod_ids" (typing/typedecl.ml[1617,59167+39]..[1617,59167+49])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1617,59167+50]..[1617,59167+54])
                                  Pexp_ident "path" (typing/typedecl.ml[1617,59167+50]..[1617,59167+54])
                            ]
                    ]
                    expression (typing/typedecl.ml[1618,59225+2]..[1622,59477+35])
                      Pexp_sequence
                      expression (typing/typedecl.ml[1618,59225+2]..[1618,59225+52])
                        Pexp_apply
                        expression (typing/typedecl.ml[1618,59225+2]..[1618,59225+25])
                          Pexp_ident "check_well_founded_decl" (typing/typedecl.ml[1618,59225+2]..[1618,59225+25])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1618,59225+26]..[1618,59225+29])
                              Pexp_ident "env" (typing/typedecl.ml[1618,59225+26]..[1618,59225+29])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1618,59225+30]..[1618,59225+33])
                              Pexp_ident "loc" (typing/typedecl.ml[1618,59225+30]..[1618,59225+33])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1618,59225+34]..[1618,59225+38])
                              Pexp_ident "path" (typing/typedecl.ml[1618,59225+34]..[1618,59225+38])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1618,59225+39]..[1618,59225+43])
                              Pexp_ident "decl" (typing/typedecl.ml[1618,59225+39]..[1618,59225+43])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1618,59225+44]..[1618,59225+52])
                              Pexp_ident "to_check" (typing/typedecl.ml[1618,59225+44]..[1618,59225+52])
                        ]
                      expression (typing/typedecl.ml[1619,59279+2]..[1622,59477+35])
                        Pexp_sequence
                        expression (typing/typedecl.ml[1619,59279+2]..[1619,59279+58])
                          Pexp_apply
                          expression (typing/typedecl.ml[1619,59279+2]..[1619,59279+17])
                            Pexp_ident "check_recursion" (typing/typedecl.ml[1619,59279+2]..[1619,59279+17])
                          [
                            <arg>
                            Labelled "orig_env"
                              expression (typing/typedecl.ml[1619,59279+28]..[1619,59279+31])
                                Pexp_ident "env" (typing/typedecl.ml[1619,59279+28]..[1619,59279+31])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1619,59279+32]..[1619,59279+35])
                                Pexp_ident "env" (typing/typedecl.ml[1619,59279+32]..[1619,59279+35])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1619,59279+36]..[1619,59279+39])
                                Pexp_ident "loc" (typing/typedecl.ml[1619,59279+36]..[1619,59279+39])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1619,59279+40]..[1619,59279+44])
                                Pexp_ident "path" (typing/typedecl.ml[1619,59279+40]..[1619,59279+44])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1619,59279+45]..[1619,59279+49])
                                Pexp_ident "decl" (typing/typedecl.ml[1619,59279+45]..[1619,59279+49])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1619,59279+50]..[1619,59279+58])
                                Pexp_ident "to_check" (typing/typedecl.ml[1619,59279+50]..[1619,59279+58])
                          ]
                        expression (typing/typedecl.ml[1622,59477+2]..[1622,59477+35])
                          Pexp_apply
                          expression (typing/typedecl.ml[1622,59477+2]..[1622,59477+17])
                            Pexp_ident "check_coherence" (typing/typedecl.ml[1622,59477+2]..[1622,59477+17])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1622,59477+18]..[1622,59477+21])
                                Pexp_ident "env" (typing/typedecl.ml[1622,59477+18]..[1622,59477+21])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1622,59477+22]..[1622,59477+25])
                                Pexp_ident "loc" (typing/typedecl.ml[1622,59477+22]..[1622,59477+25])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1622,59477+26]..[1622,59477+30])
                                Pexp_ident "path" (typing/typedecl.ml[1622,59477+26]..[1622,59477+30])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1622,59477+31]..[1622,59477+35])
                                Pexp_ident "decl" (typing/typedecl.ml[1622,59477+31]..[1622,59477+35])
                          ]
    ]
  structure_item (typing/typedecl.ml[1627,59541+0]..[1627,59541+11])
    Pstr_open Fresh
    module_expr (typing/typedecl.ml[1627,59541+5]..[1627,59541+11])
      Pmod_ident "Format" (typing/typedecl.ml[1627,59541+5]..[1627,59541+11])
  structure_item (typing/typedecl.ml[1629,59554+0]..[1638,59960+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1629,59554+4]..[1629,59554+23])
          Ppat_var "explain_unbound_gen" (typing/typedecl.ml[1629,59554+4]..[1629,59554+23])
        expression (typing/typedecl.ml[1629,59554+24]..[1638,59960+22]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1629,59554+24]..[1629,59554+27])
            Ppat_var "ppf" (typing/typedecl.ml[1629,59554+24]..[1629,59554+27])
          expression (typing/typedecl.ml[1629,59554+28]..[1638,59960+22]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[1629,59554+28]..[1629,59554+30])
              Ppat_var "tv" (typing/typedecl.ml[1629,59554+28]..[1629,59554+30])
            expression (typing/typedecl.ml[1629,59554+31]..[1638,59960+22]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[1629,59554+31]..[1629,59554+33])
                Ppat_var "tl" (typing/typedecl.ml[1629,59554+31]..[1629,59554+33])
              expression (typing/typedecl.ml[1629,59554+34]..[1638,59960+22]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[1629,59554+34]..[1629,59554+37])
                  Ppat_var "typ" (typing/typedecl.ml[1629,59554+34]..[1629,59554+37])
                expression (typing/typedecl.ml[1629,59554+38]..[1638,59960+22]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typedecl.ml[1629,59554+38]..[1629,59554+41])
                    Ppat_var "kwd" (typing/typedecl.ml[1629,59554+38]..[1629,59554+41])
                  expression (typing/typedecl.ml[1629,59554+42]..[1638,59960+22]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typedecl.ml[1629,59554+42]..[1629,59554+44])
                      Ppat_var "pr" (typing/typedecl.ml[1629,59554+42]..[1629,59554+44])
                    expression (typing/typedecl.ml[1630,59601+2]..[1638,59960+22])
                      Pexp_try
                      expression (typing/typedecl.ml[1631,59607+4]..[1637,59915+44])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typedecl.ml[1631,59607+8]..[1631,59607+10])
                              Ppat_var "ti" (typing/typedecl.ml[1631,59607+8]..[1631,59607+10])
                            expression (typing/typedecl.ml[1631,59607+13]..[1631,59607+66])
                              Pexp_apply
                              expression (typing/typedecl.ml[1631,59607+13]..[1631,59607+22])
                                Pexp_ident "List.find" (typing/typedecl.ml[1631,59607+13]..[1631,59607+22])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1631,59607+23]..[1631,59607+63])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typedecl.ml[1631,59607+28]..[1631,59607+30])
                                      Ppat_var "ti" (typing/typedecl.ml[1631,59607+28]..[1631,59607+30])
                                    expression (typing/typedecl.ml[1631,59607+34]..[1631,59607+62])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[1631,59607+34]..[1631,59607+50])
                                        Pexp_ident "Ctype.deep_occur" (typing/typedecl.ml[1631,59607+34]..[1631,59607+50])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1631,59607+51]..[1631,59607+53])
                                            Pexp_ident "tv" (typing/typedecl.ml[1631,59607+51]..[1631,59607+53])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1631,59607+54]..[1631,59607+62])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[1631,59607+55]..[1631,59607+58])
                                              Pexp_ident "typ" (typing/typedecl.ml[1631,59607+55]..[1631,59607+58])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1631,59607+59]..[1631,59607+61])
                                                  Pexp_ident "ti" (typing/typedecl.ml[1631,59607+59]..[1631,59607+61])
                                            ]
                                      ]
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1631,59607+64]..[1631,59607+66])
                                    Pexp_ident "tl" (typing/typedecl.ml[1631,59607+64]..[1631,59607+66])
                              ]
                        ]
                        expression (typing/typedecl.ml[1632,59677+4]..[1637,59915+44])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typedecl.ml[1632,59677+8]..[1632,59677+11])
                                Ppat_var "ty0" (typing/typedecl.ml[1632,59677+8]..[1632,59677+11])
                              expression (typing/typedecl.ml[1633,59732+6]..[1633,59732+44])
                                Pexp_apply
                                expression (typing/typedecl.ml[1633,59732+6]..[1633,59732+20])
                                  Pexp_ident "Btype.newgenty" (typing/typedecl.ml[1633,59732+6]..[1633,59732+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1633,59732+21]..[1633,59732+44])
                                      Pexp_construct "Tobject" (typing/typedecl.ml[1633,59732+22]..[1633,59732+29])
                                      Some
                                        expression (typing/typedecl.ml[1633,59732+29]..[1633,59732+43])
                                          Pexp_tuple
                                          [
                                            expression (typing/typedecl.ml[1633,59732+30]..[1633,59732+32])
                                              Pexp_ident "tv" (typing/typedecl.ml[1633,59732+30]..[1633,59732+32])
                                            expression (typing/typedecl.ml[1633,59732+34]..[1633,59732+42])
                                              Pexp_apply
                                              expression (typing/typedecl.ml[1633,59732+34]..[1633,59732+37])
                                                Pexp_ident "ref" (typing/typedecl.ml[1633,59732+34]..[1633,59732+37])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typedecl.ml[1633,59732+38]..[1633,59732+42])
                                                    Pexp_construct "None" (typing/typedecl.ml[1633,59732+38]..[1633,59732+42])
                                                    None
                                              ]
                                          ]
                                ]
                          ]
                          expression (typing/typedecl.ml[1634,59780+4]..[1637,59915+44])
                            Pexp_sequence
                            expression (typing/typedecl.ml[1634,59780+4]..[1634,59780+52])
                              Pexp_apply
                              expression (typing/typedecl.ml[1634,59780+4]..[1634,59780+38])
                                Pexp_ident "Printtyp.reset_and_mark_loops_list" (typing/typedecl.ml[1634,59780+4]..[1634,59780+38])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1634,59780+39]..[1634,59780+52])
                                    Pexp_construct "::" (typing/typedecl.ml[1634,59780+40]..[1634,59780+52]) ghost
                                    Some
                                      expression (typing/typedecl.ml[1634,59780+40]..[1634,59780+52]) ghost
                                        Pexp_tuple
                                        [
                                          expression (typing/typedecl.ml[1634,59780+40]..[1634,59780+46])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[1634,59780+40]..[1634,59780+43])
                                              Pexp_ident "typ" (typing/typedecl.ml[1634,59780+40]..[1634,59780+43])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1634,59780+44]..[1634,59780+46])
                                                  Pexp_ident "ti" (typing/typedecl.ml[1634,59780+44]..[1634,59780+46])
                                            ]
                                          expression (typing/typedecl.ml[1634,59780+48]..[1634,59780+52]) ghost
                                            Pexp_construct "::" (typing/typedecl.ml[1634,59780+48]..[1634,59780+52]) ghost
                                            Some
                                              expression (typing/typedecl.ml[1634,59780+48]..[1634,59780+52]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (typing/typedecl.ml[1634,59780+48]..[1634,59780+51])
                                                    Pexp_ident "ty0" (typing/typedecl.ml[1634,59780+48]..[1634,59780+51])
                                                  expression (typing/typedecl.ml[1634,59780+51]..[1634,59780+52]) ghost
                                                    Pexp_construct "[]" (typing/typedecl.ml[1634,59780+51]..[1634,59780+52]) ghost
                                                    None
                                                ]
                                        ]
                              ]
                            expression (typing/typedecl.ml[1635,59834+4]..[1637,59915+44])
                              Pexp_apply
                              expression (typing/typedecl.ml[1635,59834+4]..[1635,59834+11])
                                Pexp_ident "fprintf" (typing/typedecl.ml[1635,59834+4]..[1635,59834+11])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1635,59834+12]..[1635,59834+15])
                                    Pexp_ident "ppf" (typing/typedecl.ml[1635,59834+12]..[1635,59834+15])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1636,59850+6]..[1636,59850+64])
                                    Pexp_constant PConst_string(".@ @[<hov2>In %s@ %a@;<1 -2>the variable %a is unbound@]",(typing/typedecl.ml[1636,59850+7]..[1636,59850+63]),None)
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1637,59915+6]..[1637,59915+9])
                                    Pexp_ident "kwd" (typing/typedecl.ml[1637,59915+6]..[1637,59915+9])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1637,59915+10]..[1637,59915+12])
                                    Pexp_ident "pr" (typing/typedecl.ml[1637,59915+10]..[1637,59915+12])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1637,59915+13]..[1637,59915+15])
                                    Pexp_ident "ti" (typing/typedecl.ml[1637,59915+13]..[1637,59915+15])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1637,59915+16]..[1637,59915+41])
                                    Pexp_ident "Printtyp.marked_type_expr" (typing/typedecl.ml[1637,59915+16]..[1637,59915+41])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1637,59915+42]..[1637,59915+44])
                                    Pexp_ident "tv" (typing/typedecl.ml[1637,59915+42]..[1637,59915+44])
                              ]
                      [
                        <case>
                          pattern (typing/typedecl.ml[1638,59960+7]..[1638,59960+16])
                            Ppat_construct "Not_found" (typing/typedecl.ml[1638,59960+7]..[1638,59960+16])
                            None
                          expression (typing/typedecl.ml[1638,59960+20]..[1638,59960+22])
                            Pexp_construct "()" (typing/typedecl.ml[1638,59960+20]..[1638,59960+22])
                            None
                      ]
    ]
  structure_item (typing/typedecl.ml[1640,59984+0]..[1644,60157+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1640,59984+4]..[1640,59984+19])
          Ppat_var "explain_unbound" (typing/typedecl.ml[1640,59984+4]..[1640,59984+19])
        expression (typing/typedecl.ml[1640,59984+20]..[1644,60157+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1640,59984+20]..[1640,59984+23])
            Ppat_var "ppf" (typing/typedecl.ml[1640,59984+20]..[1640,59984+23])
          expression (typing/typedecl.ml[1640,59984+24]..[1644,60157+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[1640,59984+24]..[1640,59984+26])
              Ppat_var "tv" (typing/typedecl.ml[1640,59984+24]..[1640,59984+26])
            expression (typing/typedecl.ml[1640,59984+27]..[1644,60157+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[1640,59984+27]..[1640,59984+29])
                Ppat_var "tl" (typing/typedecl.ml[1640,59984+27]..[1640,59984+29])
              expression (typing/typedecl.ml[1640,59984+30]..[1644,60157+5]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typedecl.ml[1640,59984+30]..[1640,59984+33])
                  Ppat_var "typ" (typing/typedecl.ml[1640,59984+30]..[1640,59984+33])
                expression (typing/typedecl.ml[1640,59984+34]..[1644,60157+5]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typedecl.ml[1640,59984+34]..[1640,59984+37])
                    Ppat_var "kwd" (typing/typedecl.ml[1640,59984+34]..[1640,59984+37])
                  expression (typing/typedecl.ml[1640,59984+38]..[1644,60157+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typedecl.ml[1640,59984+38]..[1640,59984+41])
                      Ppat_var "lab" (typing/typedecl.ml[1640,59984+38]..[1640,59984+41])
                    expression (typing/typedecl.ml[1641,60028+2]..[1644,60157+5])
                      Pexp_apply
                      expression (typing/typedecl.ml[1641,60028+2]..[1641,60028+21])
                        Pexp_ident "explain_unbound_gen" (typing/typedecl.ml[1641,60028+2]..[1641,60028+21])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1641,60028+22]..[1641,60028+25])
                            Pexp_ident "ppf" (typing/typedecl.ml[1641,60028+22]..[1641,60028+25])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1641,60028+26]..[1641,60028+28])
                            Pexp_ident "tv" (typing/typedecl.ml[1641,60028+26]..[1641,60028+28])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1641,60028+29]..[1641,60028+31])
                            Pexp_ident "tl" (typing/typedecl.ml[1641,60028+29]..[1641,60028+31])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1641,60028+32]..[1641,60028+35])
                            Pexp_ident "typ" (typing/typedecl.ml[1641,60028+32]..[1641,60028+35])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1641,60028+36]..[1641,60028+39])
                            Pexp_ident "kwd" (typing/typedecl.ml[1641,60028+36]..[1641,60028+39])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1642,60068+4]..[1644,60157+5])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typedecl.ml[1642,60068+9]..[1642,60068+12])
                              Ppat_var "ppf" (typing/typedecl.ml[1642,60068+9]..[1642,60068+12])
                            expression (typing/typedecl.ml[1642,60068+13]..[1643,60087+69]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typedecl.ml[1642,60068+13]..[1642,60068+15])
                                Ppat_var "ti" (typing/typedecl.ml[1642,60068+13]..[1642,60068+15])
                              expression (typing/typedecl.ml[1643,60087+7]..[1643,60087+69])
                                Pexp_apply
                                expression (typing/typedecl.ml[1643,60087+7]..[1643,60087+14])
                                  Pexp_ident "fprintf" (typing/typedecl.ml[1643,60087+7]..[1643,60087+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1643,60087+15]..[1643,60087+18])
                                      Pexp_ident "ppf" (typing/typedecl.ml[1643,60087+15]..[1643,60087+18])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1643,60087+19]..[1643,60087+25])
                                      Pexp_constant PConst_string("%s%a",(typing/typedecl.ml[1643,60087+20]..[1643,60087+24]),None)
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1643,60087+26]..[1643,60087+34])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[1643,60087+27]..[1643,60087+30])
                                        Pexp_ident "lab" (typing/typedecl.ml[1643,60087+27]..[1643,60087+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1643,60087+31]..[1643,60087+33])
                                            Pexp_ident "ti" (typing/typedecl.ml[1643,60087+31]..[1643,60087+33])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1643,60087+35]..[1643,60087+60])
                                      Pexp_ident "Printtyp.marked_type_expr" (typing/typedecl.ml[1643,60087+35]..[1643,60087+60])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1643,60087+61]..[1643,60087+69])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[1643,60087+62]..[1643,60087+65])
                                        Pexp_ident "typ" (typing/typedecl.ml[1643,60087+62]..[1643,60087+65])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1643,60087+66]..[1643,60087+68])
                                            Pexp_ident "ti" (typing/typedecl.ml[1643,60087+66]..[1643,60087+68])
                                      ]
                                ]
                      ]
    ]
  structure_item (typing/typedecl.ml[1646,60164+0]..[1665,60960+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1646,60164+4]..[1646,60164+26])
          Ppat_var "explain_unbound_single" (typing/typedecl.ml[1646,60164+4]..[1646,60164+26])
        expression (typing/typedecl.ml[1646,60164+27]..[1665,60960+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1646,60164+27]..[1646,60164+30])
            Ppat_var "ppf" (typing/typedecl.ml[1646,60164+27]..[1646,60164+30])
          expression (typing/typedecl.ml[1646,60164+31]..[1665,60960+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl.ml[1646,60164+31]..[1646,60164+33])
              Ppat_var "tv" (typing/typedecl.ml[1646,60164+31]..[1646,60164+33])
            expression (typing/typedecl.ml[1646,60164+34]..[1665,60960+19]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl.ml[1646,60164+34]..[1646,60164+36])
                Ppat_var "ty" (typing/typedecl.ml[1646,60164+34]..[1646,60164+36])
              expression (typing/typedecl.ml[1647,60203+2]..[1665,60960+19])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/typedecl.ml[1647,60203+6]..[1647,60203+13])
                      Ppat_var "trivial" (typing/typedecl.ml[1647,60203+6]..[1647,60203+13])
                    expression (typing/typedecl.ml[1647,60203+14]..[1648,60222+65]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typedecl.ml[1647,60203+14]..[1647,60203+16])
                        Ppat_var "ty" (typing/typedecl.ml[1647,60203+14]..[1647,60203+16])
                      expression (typing/typedecl.ml[1648,60222+4]..[1648,60222+65])
                        Pexp_apply
                        expression (typing/typedecl.ml[1648,60222+4]..[1648,60222+19])
                          Pexp_ident "explain_unbound" (typing/typedecl.ml[1648,60222+4]..[1648,60222+19])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1648,60222+20]..[1648,60222+23])
                              Pexp_ident "ppf" (typing/typedecl.ml[1648,60222+20]..[1648,60222+23])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1648,60222+24]..[1648,60222+26])
                              Pexp_ident "tv" (typing/typedecl.ml[1648,60222+24]..[1648,60222+26])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1648,60222+27]..[1648,60222+31])
                              Pexp_construct "::" (typing/typedecl.ml[1648,60222+28]..[1648,60222+31]) ghost
                              Some
                                expression (typing/typedecl.ml[1648,60222+28]..[1648,60222+31]) ghost
                                  Pexp_tuple
                                  [
                                    expression (typing/typedecl.ml[1648,60222+28]..[1648,60222+30])
                                      Pexp_ident "ty" (typing/typedecl.ml[1648,60222+28]..[1648,60222+30])
                                    expression (typing/typedecl.ml[1648,60222+30]..[1648,60222+31]) ghost
                                      Pexp_construct "[]" (typing/typedecl.ml[1648,60222+30]..[1648,60222+31]) ghost
                                      None
                                  ]
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1648,60222+32]..[1648,60222+44])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typedecl.ml[1648,60222+37]..[1648,60222+38])
                                Ppat_var "t" (typing/typedecl.ml[1648,60222+37]..[1648,60222+38])
                              expression (typing/typedecl.ml[1648,60222+42]..[1648,60222+43])
                                Pexp_ident "t" (typing/typedecl.ml[1648,60222+42]..[1648,60222+43])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1648,60222+45]..[1648,60222+51])
                              Pexp_constant PConst_string("type",(typing/typedecl.ml[1648,60222+46]..[1648,60222+50]),None)
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1648,60222+52]..[1648,60222+65])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typedecl.ml[1648,60222+57]..[1648,60222+58])
                                Ppat_any
                              expression (typing/typedecl.ml[1648,60222+62]..[1648,60222+64])
                                Pexp_constant PConst_string("",(typing/typedecl.ml[1648,60222+63]..[1648,60222+63]),None)
                        ]
                ]
                expression (typing/typedecl.ml[1649,60291+2]..[1665,60960+19])
                  Pexp_match
                  expression (typing/typedecl.ml[1649,60291+8]..[1649,60291+19])
                    Pexp_apply
                    expression (typing/typedecl.ml[1649,60291+8]..[1649,60291+16])
                      Pexp_ident "get_desc" (typing/typedecl.ml[1649,60291+8]..[1649,60291+16])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1649,60291+17]..[1649,60291+19])
                          Pexp_ident "ty" (typing/typedecl.ml[1649,60291+17]..[1649,60291+19])
                    ]
                  [
                    <case>
                      pattern (typing/typedecl.ml[1650,60316+4]..[1650,60316+17])
                        Ppat_construct "Tobject" (typing/typedecl.ml[1650,60316+4]..[1650,60316+11])
                        Some
                          []
                          pattern (typing/typedecl.ml[1650,60316+11]..[1650,60316+17])
                            Ppat_tuple
                            [
                              pattern (typing/typedecl.ml[1650,60316+12]..[1650,60316+14])
                                Ppat_var "fi" (typing/typedecl.ml[1650,60316+12]..[1650,60316+14])
                              pattern (typing/typedecl.ml[1650,60316+15]..[1650,60316+16])
                                Ppat_any
                            ]
                      expression (typing/typedecl.ml[1651,60337+6]..[1654,60480+46])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typedecl.ml[1651,60337+10]..[1651,60337+18])
                              Ppat_tuple
                              [
                                pattern (typing/typedecl.ml[1651,60337+11]..[1651,60337+13])
                                  Ppat_var "tl" (typing/typedecl.ml[1651,60337+11]..[1651,60337+13])
                                pattern (typing/typedecl.ml[1651,60337+15]..[1651,60337+17])
                                  Ppat_var "rv" (typing/typedecl.ml[1651,60337+15]..[1651,60337+17])
                              ]
                            expression (typing/typedecl.ml[1651,60337+21]..[1651,60337+44])
                              Pexp_apply
                              expression (typing/typedecl.ml[1651,60337+21]..[1651,60337+41])
                                Pexp_ident "Ctype.flatten_fields" (typing/typedecl.ml[1651,60337+21]..[1651,60337+41])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1651,60337+42]..[1651,60337+44])
                                    Pexp_ident "fi" (typing/typedecl.ml[1651,60337+42]..[1651,60337+44])
                              ]
                        ]
                        expression (typing/typedecl.ml[1652,60385+6]..[1654,60480+46])
                          Pexp_ifthenelse
                          expression (typing/typedecl.ml[1652,60385+9]..[1652,60385+22])
                            Pexp_apply
                            expression (typing/typedecl.ml[1652,60385+9]..[1652,60385+16])
                              Pexp_ident "eq_type" (typing/typedecl.ml[1652,60385+9]..[1652,60385+16])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1652,60385+17]..[1652,60385+19])
                                  Pexp_ident "rv" (typing/typedecl.ml[1652,60385+17]..[1652,60385+19])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1652,60385+20]..[1652,60385+22])
                                  Pexp_ident "tv" (typing/typedecl.ml[1652,60385+20]..[1652,60385+22])
                            ]
                          expression (typing/typedecl.ml[1652,60385+28]..[1652,60385+38])
                            Pexp_apply
                            expression (typing/typedecl.ml[1652,60385+28]..[1652,60385+35])
                              Pexp_ident "trivial" (typing/typedecl.ml[1652,60385+28]..[1652,60385+35])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1652,60385+36]..[1652,60385+38])
                                  Pexp_ident "ty" (typing/typedecl.ml[1652,60385+36]..[1652,60385+38])
                            ]
                          Some
                            expression (typing/typedecl.ml[1653,60429+6]..[1654,60480+46])
                              Pexp_apply
                              expression (typing/typedecl.ml[1653,60429+6]..[1653,60429+21])
                                Pexp_ident "explain_unbound" (typing/typedecl.ml[1653,60429+6]..[1653,60429+21])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1653,60429+22]..[1653,60429+25])
                                    Pexp_ident "ppf" (typing/typedecl.ml[1653,60429+22]..[1653,60429+25])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1653,60429+26]..[1653,60429+28])
                                    Pexp_ident "tv" (typing/typedecl.ml[1653,60429+26]..[1653,60429+28])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1653,60429+29]..[1653,60429+31])
                                    Pexp_ident "tl" (typing/typedecl.ml[1653,60429+29]..[1653,60429+31])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1653,60429+32]..[1653,60429+50])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typedecl.ml[1653,60429+37]..[1653,60429+44])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typedecl.ml[1653,60429+38]..[1653,60429+39])
                                          Ppat_any
                                        pattern (typing/typedecl.ml[1653,60429+40]..[1653,60429+41])
                                          Ppat_any
                                        pattern (typing/typedecl.ml[1653,60429+42]..[1653,60429+43])
                                          Ppat_var "t" (typing/typedecl.ml[1653,60429+42]..[1653,60429+43])
                                      ]
                                    expression (typing/typedecl.ml[1653,60429+48]..[1653,60429+49])
                                      Pexp_ident "t" (typing/typedecl.ml[1653,60429+48]..[1653,60429+49])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1654,60480+8]..[1654,60480+16])
                                    Pexp_constant PConst_string("method",(typing/typedecl.ml[1654,60480+9]..[1654,60480+15]),None)
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1654,60480+17]..[1654,60480+46])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typedecl.ml[1654,60480+22]..[1654,60480+31])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typedecl.ml[1654,60480+23]..[1654,60480+26])
                                          Ppat_var "lab" (typing/typedecl.ml[1654,60480+23]..[1654,60480+26])
                                        pattern (typing/typedecl.ml[1654,60480+27]..[1654,60480+28])
                                          Ppat_any
                                        pattern (typing/typedecl.ml[1654,60480+29]..[1654,60480+30])
                                          Ppat_any
                                      ]
                                    expression (typing/typedecl.ml[1654,60480+35]..[1654,60480+45])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[1654,60480+39]..[1654,60480+40])
                                        Pexp_ident "^" (typing/typedecl.ml[1654,60480+39]..[1654,60480+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1654,60480+35]..[1654,60480+38])
                                            Pexp_ident "lab" (typing/typedecl.ml[1654,60480+35]..[1654,60480+38])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1654,60480+41]..[1654,60480+45])
                                            Pexp_constant PConst_string(": ",(typing/typedecl.ml[1654,60480+42]..[1654,60480+44]),None)
                                      ]
                              ]
                    <case>
                      pattern (typing/typedecl.ml[1655,60527+4]..[1655,60527+16])
                        Ppat_construct "Tvariant" (typing/typedecl.ml[1655,60527+4]..[1655,60527+12])
                        Some
                          []
                          pattern (typing/typedecl.ml[1655,60527+13]..[1655,60527+16])
                            Ppat_var "row" (typing/typedecl.ml[1655,60527+13]..[1655,60527+16])
                      expression (typing/typedecl.ml[1656,60547+6]..[1664,60909+50])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typedecl.ml[1656,60547+10]..[1656,60547+13])
                              Ppat_var "row" (typing/typedecl.ml[1656,60547+10]..[1656,60547+13])
                            expression (typing/typedecl.ml[1656,60547+16]..[1656,60547+34])
                              Pexp_apply
                              expression (typing/typedecl.ml[1656,60547+16]..[1656,60547+30])
                                Pexp_ident "Btype.row_repr" (typing/typedecl.ml[1656,60547+16]..[1656,60547+30])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1656,60547+31]..[1656,60547+34])
                                    Pexp_ident "row" (typing/typedecl.ml[1656,60547+31]..[1656,60547+34])
                              ]
                        ]
                        expression (typing/typedecl.ml[1657,60585+6]..[1664,60909+50])
                          Pexp_ifthenelse
                          expression (typing/typedecl.ml[1657,60585+9]..[1657,60585+32])
                            Pexp_apply
                            expression (typing/typedecl.ml[1657,60585+9]..[1657,60585+16])
                              Pexp_ident "eq_type" (typing/typedecl.ml[1657,60585+9]..[1657,60585+16])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1657,60585+17]..[1657,60585+29])
                                  Pexp_field
                                  expression (typing/typedecl.ml[1657,60585+17]..[1657,60585+20])
                                    Pexp_ident "row" (typing/typedecl.ml[1657,60585+17]..[1657,60585+20])
                                  "row_more" (typing/typedecl.ml[1657,60585+21]..[1657,60585+29])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1657,60585+30]..[1657,60585+32])
                                  Pexp_ident "tv" (typing/typedecl.ml[1657,60585+30]..[1657,60585+32])
                            ]
                          expression (typing/typedecl.ml[1657,60585+38]..[1657,60585+48])
                            Pexp_apply
                            expression (typing/typedecl.ml[1657,60585+38]..[1657,60585+45])
                              Pexp_ident "trivial" (typing/typedecl.ml[1657,60585+38]..[1657,60585+45])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1657,60585+46]..[1657,60585+48])
                                  Pexp_ident "ty" (typing/typedecl.ml[1657,60585+46]..[1657,60585+48])
                            ]
                          Some
                            expression (typing/typedecl.ml[1658,60639+6]..[1664,60909+50])
                              Pexp_apply
                              expression (typing/typedecl.ml[1658,60639+6]..[1658,60639+21])
                                Pexp_ident "explain_unbound" (typing/typedecl.ml[1658,60639+6]..[1658,60639+21])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1658,60639+22]..[1658,60639+25])
                                    Pexp_ident "ppf" (typing/typedecl.ml[1658,60639+22]..[1658,60639+25])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1658,60639+26]..[1658,60639+28])
                                    Pexp_ident "tv" (typing/typedecl.ml[1658,60639+26]..[1658,60639+28])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1658,60639+29]..[1658,60639+43])
                                    Pexp_field
                                    expression (typing/typedecl.ml[1658,60639+29]..[1658,60639+32])
                                      Pexp_ident "row" (typing/typedecl.ml[1658,60639+29]..[1658,60639+32])
                                    "row_fields" (typing/typedecl.ml[1658,60639+33]..[1658,60639+43])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1659,60683+8]..[1663,60867+41])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typedecl.ml[1659,60683+13]..[1659,60683+19])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typedecl.ml[1659,60683+14]..[1659,60683+16])
                                          Ppat_var "_l" (typing/typedecl.ml[1659,60683+14]..[1659,60683+16])
                                        pattern (typing/typedecl.ml[1659,60683+17]..[1659,60683+18])
                                          Ppat_var "f" (typing/typedecl.ml[1659,60683+17]..[1659,60683+18])
                                      ]
                                    expression (typing/typedecl.ml[1659,60683+23]..[1663,60867+40])
                                      Pexp_match
                                      expression (typing/typedecl.ml[1659,60683+29]..[1659,60683+51])
                                        Pexp_apply
                                        expression (typing/typedecl.ml[1659,60683+29]..[1659,60683+49])
                                          Pexp_ident "Btype.row_field_repr" (typing/typedecl.ml[1659,60683+29]..[1659,60683+49])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typedecl.ml[1659,60683+50]..[1659,60683+51])
                                              Pexp_ident "f" (typing/typedecl.ml[1659,60683+50]..[1659,60683+51])
                                        ]
                                      [
                                        <case>
                                          pattern (typing/typedecl.ml[1660,60740+10]..[1660,60740+27])
                                            Ppat_construct "Rpresent" (typing/typedecl.ml[1660,60740+10]..[1660,60740+18])
                                            Some
                                              []
                                              pattern (typing/typedecl.ml[1660,60740+19]..[1660,60740+27])
                                                Ppat_construct "Some" (typing/typedecl.ml[1660,60740+20]..[1660,60740+24])
                                                Some
                                                  []
                                                  pattern (typing/typedecl.ml[1660,60740+25]..[1660,60740+26])
                                                    Ppat_var "t" (typing/typedecl.ml[1660,60740+25]..[1660,60740+26])
                                          expression (typing/typedecl.ml[1660,60740+31]..[1660,60740+32])
                                            Pexp_ident "t" (typing/typedecl.ml[1660,60740+31]..[1660,60740+32])
                                        <case>
                                          pattern (typing/typedecl.ml[1661,60773+10]..[1661,60773+29])
                                            Ppat_construct "Reither" (typing/typedecl.ml[1661,60773+10]..[1661,60773+17])
                                            Some
                                              []
                                              pattern (typing/typedecl.ml[1661,60773+18]..[1661,60773+29])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/typedecl.ml[1661,60773+19]..[1661,60773+20])
                                                    Ppat_any
                                                  pattern (typing/typedecl.ml[1661,60773+21]..[1661,60773+24])
                                                    Ppat_construct "::" (typing/typedecl.ml[1661,60773+22]..[1661,60773+24]) ghost
                                                    Some
                                                      []
                                                      pattern (typing/typedecl.ml[1661,60773+22]..[1661,60773+24]) ghost
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typedecl.ml[1661,60773+22]..[1661,60773+23])
                                                            Ppat_var "t" (typing/typedecl.ml[1661,60773+22]..[1661,60773+23])
                                                          pattern (typing/typedecl.ml[1661,60773+23]..[1661,60773+24]) ghost
                                                            Ppat_construct "[]" (typing/typedecl.ml[1661,60773+23]..[1661,60773+24]) ghost
                                                            None
                                                        ]
                                                  pattern (typing/typedecl.ml[1661,60773+25]..[1661,60773+26])
                                                    Ppat_any
                                                  pattern (typing/typedecl.ml[1661,60773+27]..[1661,60773+28])
                                                    Ppat_any
                                                ]
                                          expression (typing/typedecl.ml[1661,60773+33]..[1661,60773+34])
                                            Pexp_ident "t" (typing/typedecl.ml[1661,60773+33]..[1661,60773+34])
                                        <case>
                                          pattern (typing/typedecl.ml[1662,60808+10]..[1662,60808+28])
                                            Ppat_construct "Reither" (typing/typedecl.ml[1662,60808+10]..[1662,60808+17])
                                            Some
                                              []
                                              pattern (typing/typedecl.ml[1662,60808+18]..[1662,60808+28])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/typedecl.ml[1662,60808+19]..[1662,60808+20])
                                                    Ppat_any
                                                  pattern (typing/typedecl.ml[1662,60808+21]..[1662,60808+23])
                                                    Ppat_var "tl" (typing/typedecl.ml[1662,60808+21]..[1662,60808+23])
                                                  pattern (typing/typedecl.ml[1662,60808+24]..[1662,60808+25])
                                                    Ppat_any
                                                  pattern (typing/typedecl.ml[1662,60808+26]..[1662,60808+27])
                                                    Ppat_any
                                                ]
                                          expression (typing/typedecl.ml[1662,60808+32]..[1662,60808+58])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[1662,60808+32]..[1662,60808+46])
                                              Pexp_ident "Btype.newgenty" (typing/typedecl.ml[1662,60808+32]..[1662,60808+46])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1662,60808+47]..[1662,60808+58])
                                                  Pexp_construct "Ttuple" (typing/typedecl.ml[1662,60808+48]..[1662,60808+54])
                                                  Some
                                                    expression (typing/typedecl.ml[1662,60808+55]..[1662,60808+57])
                                                      Pexp_ident "tl" (typing/typedecl.ml[1662,60808+55]..[1662,60808+57])
                                            ]
                                        <case>
                                          pattern (typing/typedecl.ml[1663,60867+10]..[1663,60867+11])
                                            Ppat_any
                                          expression (typing/typedecl.ml[1663,60867+15]..[1663,60867+40])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[1663,60867+15]..[1663,60867+29])
                                              Pexp_ident "Btype.newgenty" (typing/typedecl.ml[1663,60867+15]..[1663,60867+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1663,60867+30]..[1663,60867+40])
                                                  Pexp_construct "Ttuple" (typing/typedecl.ml[1663,60867+31]..[1663,60867+37])
                                                  Some
                                                    expression (typing/typedecl.ml[1663,60867+37]..[1663,60867+39])
                                                      Pexp_construct "[]" (typing/typedecl.ml[1663,60867+37]..[1663,60867+39])
                                                      None
                                            ]
                                      ]
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1664,60909+8]..[1664,60909+14])
                                    Pexp_constant PConst_string("case",(typing/typedecl.ml[1664,60909+9]..[1664,60909+13]),None)
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1664,60909+15]..[1664,60909+50])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typedecl.ml[1664,60909+20]..[1664,60909+27])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typedecl.ml[1664,60909+21]..[1664,60909+24])
                                          Ppat_var "lab" (typing/typedecl.ml[1664,60909+21]..[1664,60909+24])
                                        pattern (typing/typedecl.ml[1664,60909+25]..[1664,60909+26])
                                          Ppat_any
                                      ]
                                    expression (typing/typedecl.ml[1664,60909+31]..[1664,60909+49])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[1664,60909+35]..[1664,60909+36])
                                        Pexp_ident "^" (typing/typedecl.ml[1664,60909+35]..[1664,60909+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1664,60909+31]..[1664,60909+34])
                                            Pexp_constant PConst_string("`",(typing/typedecl.ml[1664,60909+32]..[1664,60909+33]),None)
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1664,60909+37]..[1664,60909+49])
                                            Pexp_apply
                                            expression (typing/typedecl.ml[1664,60909+41]..[1664,60909+42])
                                              Pexp_ident "^" (typing/typedecl.ml[1664,60909+41]..[1664,60909+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1664,60909+37]..[1664,60909+40])
                                                  Pexp_ident "lab" (typing/typedecl.ml[1664,60909+37]..[1664,60909+40])
                                              <arg>
                                              Nolabel
                                                expression (typing/typedecl.ml[1664,60909+43]..[1664,60909+49])
                                                  Pexp_constant PConst_string(" of ",(typing/typedecl.ml[1664,60909+44]..[1664,60909+48]),None)
                                            ]
                                      ]
                              ]
                    <case>
                      pattern (typing/typedecl.ml[1665,60960+4]..[1665,60960+5])
                        Ppat_any
                      expression (typing/typedecl.ml[1665,60960+9]..[1665,60960+19])
                        Pexp_apply
                        expression (typing/typedecl.ml[1665,60960+9]..[1665,60960+16])
                          Pexp_ident "trivial" (typing/typedecl.ml[1665,60960+9]..[1665,60960+16])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1665,60960+17]..[1665,60960+19])
                              Pexp_ident "ty" (typing/typedecl.ml[1665,60960+17]..[1665,60960+19])
                        ]
                  ]
    ]
  structure_item (typing/typedecl.ml[1668,60982+0]..[1670,61046+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1668,60982+4]..[1668,60982+22])
          Ppat_var "tys_of_constr_args" (typing/typedecl.ml[1668,60982+4]..[1668,60982+22])
        expression (typing/typedecl.ml[1668,60982+25]..[1670,61046+70])
          Pexp_function
          [
            <case>
              pattern (typing/typedecl.ml[1669,61016+4]..[1669,61016+23])
                Ppat_construct "Types.Cstr_tuple" (typing/typedecl.ml[1669,61016+4]..[1669,61016+20])
                Some
                  []
                  pattern (typing/typedecl.ml[1669,61016+21]..[1669,61016+23])
                    Ppat_var "tl" (typing/typedecl.ml[1669,61016+21]..[1669,61016+23])
              expression (typing/typedecl.ml[1669,61016+27]..[1669,61016+29])
                Pexp_ident "tl" (typing/typedecl.ml[1669,61016+27]..[1669,61016+29])
            <case>
              pattern (typing/typedecl.ml[1670,61046+4]..[1670,61046+26])
                Ppat_construct "Types.Cstr_record" (typing/typedecl.ml[1670,61046+4]..[1670,61046+21])
                Some
                  []
                  pattern (typing/typedecl.ml[1670,61046+22]..[1670,61046+26])
                    Ppat_var "lbls" (typing/typedecl.ml[1670,61046+22]..[1670,61046+26])
              expression (typing/typedecl.ml[1670,61046+30]..[1670,61046+70])
                Pexp_apply
                expression (typing/typedecl.ml[1670,61046+30]..[1670,61046+38])
                  Pexp_ident "List.map" (typing/typedecl.ml[1670,61046+30]..[1670,61046+38])
                [
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[1670,61046+39]..[1670,61046+65])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typedecl.ml[1670,61046+44]..[1670,61046+45])
                        Ppat_var "l" (typing/typedecl.ml[1670,61046+44]..[1670,61046+45])
                      expression (typing/typedecl.ml[1670,61046+49]..[1670,61046+64])
                        Pexp_field
                        expression (typing/typedecl.ml[1670,61046+49]..[1670,61046+50])
                          Pexp_ident "l" (typing/typedecl.ml[1670,61046+49]..[1670,61046+50])
                        "Types.ld_type" (typing/typedecl.ml[1670,61046+51]..[1670,61046+64])
                  <arg>
                  Nolabel
                    expression (typing/typedecl.ml[1670,61046+66]..[1670,61046+70])
                      Pexp_ident "lbls" (typing/typedecl.ml[1670,61046+66]..[1670,61046+70])
                ]
          ]
    ]
  structure_item (typing/typedecl.ml[1672,61118+0]..[1907,71759+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1672,61118+4]..[1672,61118+16])
          Ppat_var "report_error" (typing/typedecl.ml[1672,61118+4]..[1672,61118+16])
        expression (typing/typedecl.ml[1672,61118+17]..[1907,71759+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl.ml[1672,61118+17]..[1672,61118+20])
            Ppat_var "ppf" (typing/typedecl.ml[1672,61118+17]..[1672,61118+20])
          expression (typing/typedecl.ml[1672,61118+23]..[1907,71759+51])
            Pexp_function
            [
              <case>
                pattern (typing/typedecl.ml[1673,61150+4]..[1673,61150+22])
                  Ppat_construct "Repeated_parameter" (typing/typedecl.ml[1673,61150+4]..[1673,61150+22])
                  None
                expression (typing/typedecl.ml[1674,61176+6]..[1674,61176+57])
                  Pexp_apply
                  expression (typing/typedecl.ml[1674,61176+6]..[1674,61176+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1674,61176+6]..[1674,61176+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1674,61176+14]..[1674,61176+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1674,61176+14]..[1674,61176+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1674,61176+18]..[1674,61176+57])
                        Pexp_constant PConst_string("A type parameter occurs several times",(typing/typedecl.ml[1674,61176+19]..[1674,61176+56]),None)
                  ]
              <case>
                pattern (typing/typedecl.ml[1675,61234+4]..[1675,61234+27])
                  Ppat_construct "Duplicate_constructor" (typing/typedecl.ml[1675,61234+4]..[1675,61234+25])
                  Some
                    []
                    pattern (typing/typedecl.ml[1675,61234+26]..[1675,61234+27])
                      Ppat_var "s" (typing/typedecl.ml[1675,61234+26]..[1675,61234+27])
                expression (typing/typedecl.ml[1676,61265+6]..[1676,61265+51])
                  Pexp_apply
                  expression (typing/typedecl.ml[1676,61265+6]..[1676,61265+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1676,61265+6]..[1676,61265+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1676,61265+14]..[1676,61265+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1676,61265+14]..[1676,61265+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1676,61265+18]..[1676,61265+49])
                        Pexp_constant PConst_string("Two constructors are named %s",(typing/typedecl.ml[1676,61265+19]..[1676,61265+48]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1676,61265+50]..[1676,61265+51])
                        Pexp_ident "s" (typing/typedecl.ml[1676,61265+50]..[1676,61265+51])
                  ]
              <case>
                pattern (typing/typedecl.ml[1677,61317+4]..[1677,61317+25])
                  Ppat_construct "Too_many_constructors" (typing/typedecl.ml[1677,61317+4]..[1677,61317+25])
                  None
                expression (typing/typedecl.ml[1678,61346+6]..[1680,61434+56])
                  Pexp_apply
                  expression (typing/typedecl.ml[1678,61346+6]..[1678,61346+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1678,61346+6]..[1678,61346+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1678,61346+14]..[1678,61346+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1678,61346+14]..[1678,61346+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1679,61364+8]..[1679,61364+69])
                        Pexp_constant PConst_string("@[Too many non-constant constructors@ -- maximum is %i %s@]",(typing/typedecl.ml[1679,61364+9]..[1679,61364+68]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1680,61434+8]..[1680,61434+28])
                        Pexp_apply
                        expression (typing/typedecl.ml[1680,61434+24]..[1680,61434+25])
                          Pexp_ident "+" (typing/typedecl.ml[1680,61434+24]..[1680,61434+25])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1680,61434+9]..[1680,61434+23])
                              Pexp_ident "Config.max_tag" (typing/typedecl.ml[1680,61434+9]..[1680,61434+23])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1680,61434+26]..[1680,61434+27])
                              Pexp_constant PConst_int (1,None)
                        ]
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1680,61434+29]..[1680,61434+56])
                        Pexp_constant PConst_string("non-constant constructors",(typing/typedecl.ml[1680,61434+30]..[1680,61434+55]),None)
                  ]
              <case>
                pattern (typing/typedecl.ml[1681,61491+4]..[1681,61491+21])
                  Ppat_construct "Duplicate_label" (typing/typedecl.ml[1681,61491+4]..[1681,61491+19])
                  Some
                    []
                    pattern (typing/typedecl.ml[1681,61491+20]..[1681,61491+21])
                      Ppat_var "s" (typing/typedecl.ml[1681,61491+20]..[1681,61491+21])
                expression (typing/typedecl.ml[1682,61516+6]..[1682,61516+45])
                  Pexp_apply
                  expression (typing/typedecl.ml[1682,61516+6]..[1682,61516+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1682,61516+6]..[1682,61516+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1682,61516+14]..[1682,61516+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1682,61516+14]..[1682,61516+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1682,61516+18]..[1682,61516+43])
                        Pexp_constant PConst_string("Two labels are named %s",(typing/typedecl.ml[1682,61516+19]..[1682,61516+42]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1682,61516+44]..[1682,61516+45])
                        Pexp_ident "s" (typing/typedecl.ml[1682,61516+44]..[1682,61516+45])
                  ]
              <case>
                pattern (typing/typedecl.ml[1683,61562+4]..[1683,61562+22])
                  Ppat_construct "Recursive_abbrev" (typing/typedecl.ml[1683,61562+4]..[1683,61562+20])
                  Some
                    []
                    pattern (typing/typedecl.ml[1683,61562+21]..[1683,61562+22])
                      Ppat_var "s" (typing/typedecl.ml[1683,61562+21]..[1683,61562+22])
                expression (typing/typedecl.ml[1684,61588+6]..[1684,61588+56])
                  Pexp_apply
                  expression (typing/typedecl.ml[1684,61588+6]..[1684,61588+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1684,61588+6]..[1684,61588+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1684,61588+14]..[1684,61588+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1684,61588+14]..[1684,61588+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1684,61588+18]..[1684,61588+54])
                        Pexp_constant PConst_string("The type abbreviation %s is cyclic",(typing/typedecl.ml[1684,61588+19]..[1684,61588+53]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1684,61588+55]..[1684,61588+56])
                        Pexp_ident "s" (typing/typedecl.ml[1684,61588+55]..[1684,61588+56])
                  ]
              <case>
                pattern (typing/typedecl.ml[1685,61645+4]..[1685,61645+24])
                  Ppat_construct "Cycle_in_def" (typing/typedecl.ml[1685,61645+4]..[1685,61645+16])
                  Some
                    []
                    pattern (typing/typedecl.ml[1685,61645+17]..[1685,61645+24])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1685,61645+18]..[1685,61645+19])
                          Ppat_var "s" (typing/typedecl.ml[1685,61645+18]..[1685,61645+19])
                        pattern (typing/typedecl.ml[1685,61645+21]..[1685,61645+23])
                          Ppat_var "ty" (typing/typedecl.ml[1685,61645+21]..[1685,61645+23])
                      ]
                expression (typing/typedecl.ml[1686,61673+6]..[1687,61743+31])
                  Pexp_apply
                  expression (typing/typedecl.ml[1686,61673+6]..[1686,61673+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1686,61673+6]..[1686,61673+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1686,61673+14]..[1686,61673+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1686,61673+14]..[1686,61673+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1686,61673+18]..[1686,61673+69])
                        Pexp_constant PConst_string("@[<v>The definition of %s contains a cycle:@ %a@]",(typing/typedecl.ml[1686,61673+19]..[1686,61673+68]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1687,61743+8]..[1687,61743+9])
                        Pexp_ident "s" (typing/typedecl.ml[1687,61743+8]..[1687,61743+9])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1687,61743+10]..[1687,61743+28])
                        Pexp_ident "Printtyp.type_expr" (typing/typedecl.ml[1687,61743+10]..[1687,61743+28])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1687,61743+29]..[1687,61743+31])
                        Pexp_ident "ty" (typing/typedecl.ml[1687,61743+29]..[1687,61743+31])
                  ]
              <case>
                pattern (typing/typedecl.ml[1688,61775+4]..[1688,61775+40])
                  Ppat_construct "Definition_mismatch" (typing/typedecl.ml[1688,61775+4]..[1688,61775+23])
                  Some
                    []
                    pattern (typing/typedecl.ml[1688,61775+24]..[1688,61775+40])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1688,61775+25]..[1688,61775+27])
                          Ppat_var "ty" (typing/typedecl.ml[1688,61775+25]..[1688,61775+27])
                        pattern (typing/typedecl.ml[1688,61775+29]..[1688,61775+33])
                          Ppat_var "_env" (typing/typedecl.ml[1688,61775+29]..[1688,61775+33])
                        pattern (typing/typedecl.ml[1688,61775+35]..[1688,61775+39])
                          Ppat_construct "None" (typing/typedecl.ml[1688,61775+35]..[1688,61775+39])
                          None
                      ]
                expression (typing/typedecl.ml[1689,61819+6]..[1691,61945+29])
                  Pexp_apply
                  expression (typing/typedecl.ml[1689,61819+6]..[1689,61819+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1689,61819+6]..[1689,61819+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1689,61819+14]..[1689,61819+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1689,61819+14]..[1689,61819+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1689,61819+18]..[1689,61819+51])
                        Pexp_constant PConst_string("@[<v>@[<hov>%s@ %s@;<1 2>%a@]@]",(typing/typedecl.ml[1689,61819+19]..[1689,61819+50]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1690,61871+8]..[1690,61871+43])
                        Pexp_constant PConst_string("This variant or record definition",(typing/typedecl.ml[1690,61871+9]..[1690,61871+42]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1690,61871+44]..[1690,61871+73])
                        Pexp_constant PConst_string("does not match that of type",(typing/typedecl.ml[1690,61871+45]..[1690,61871+72]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1691,61945+8]..[1691,61945+26])
                        Pexp_ident "Printtyp.type_expr" (typing/typedecl.ml[1691,61945+8]..[1691,61945+26])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1691,61945+27]..[1691,61945+29])
                        Pexp_ident "ty" (typing/typedecl.ml[1691,61945+27]..[1691,61945+29])
                  ]
              <case>
                pattern (typing/typedecl.ml[1692,61975+4]..[1692,61975+43])
                  Ppat_construct "Definition_mismatch" (typing/typedecl.ml[1692,61975+4]..[1692,61975+23])
                  Some
                    []
                    pattern (typing/typedecl.ml[1692,61975+24]..[1692,61975+43])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1692,61975+25]..[1692,61975+27])
                          Ppat_var "ty" (typing/typedecl.ml[1692,61975+25]..[1692,61975+27])
                        pattern (typing/typedecl.ml[1692,61975+29]..[1692,61975+32])
                          Ppat_var "env" (typing/typedecl.ml[1692,61975+29]..[1692,61975+32])
                        pattern (typing/typedecl.ml[1692,61975+34]..[1692,61975+42])
                          Ppat_construct "Some" (typing/typedecl.ml[1692,61975+34]..[1692,61975+38])
                          Some
                            []
                            pattern (typing/typedecl.ml[1692,61975+39]..[1692,61975+42])
                              Ppat_var "err" (typing/typedecl.ml[1692,61975+39]..[1692,61975+42])
                      ]
                expression (typing/typedecl.ml[1693,62022+6]..[1698,62273+11])
                  Pexp_apply
                  expression (typing/typedecl.ml[1693,62022+6]..[1693,62022+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1693,62022+6]..[1693,62022+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1693,62022+14]..[1693,62022+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1693,62022+14]..[1693,62022+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1693,62022+18]..[1693,62022+53])
                        Pexp_constant PConst_string("@[<v>@[<hov>%s@ %s@;<1 2>%a@]%a@]",(typing/typedecl.ml[1693,62022+19]..[1693,62022+52]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1694,62076+8]..[1694,62076+43])
                        Pexp_constant PConst_string("This variant or record definition",(typing/typedecl.ml[1694,62076+9]..[1694,62076+42]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1694,62076+44]..[1694,62076+73])
                        Pexp_constant PConst_string("does not match that of type",(typing/typedecl.ml[1694,62076+45]..[1694,62076+72]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1695,62150+8]..[1695,62150+26])
                        Pexp_ident "Printtyp.type_expr" (typing/typedecl.ml[1695,62150+8]..[1695,62150+26])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1695,62150+27]..[1695,62150+29])
                        Pexp_ident "ty" (typing/typedecl.ml[1695,62150+27]..[1695,62150+29])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1696,62180+8]..[1697,62222+50])
                        Pexp_apply
                        expression (typing/typedecl.ml[1696,62180+9]..[1696,62180+41])
                          Pexp_ident "Includecore.report_type_mismatch" (typing/typedecl.ml[1696,62180+9]..[1696,62180+41])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1697,62222+11]..[1697,62222+25])
                              Pexp_constant PConst_string("the original",(typing/typedecl.ml[1697,62222+12]..[1697,62222+24]),None)
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1697,62222+26]..[1697,62222+32])
                              Pexp_constant PConst_string("this",(typing/typedecl.ml[1697,62222+27]..[1697,62222+31]),None)
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1697,62222+33]..[1697,62222+45])
                              Pexp_constant PConst_string("definition",(typing/typedecl.ml[1697,62222+34]..[1697,62222+44]),None)
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1697,62222+46]..[1697,62222+49])
                              Pexp_ident "env" (typing/typedecl.ml[1697,62222+46]..[1697,62222+49])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1698,62273+8]..[1698,62273+11])
                        Pexp_ident "err" (typing/typedecl.ml[1698,62273+8]..[1698,62273+11])
                  ]
              <case>
                pattern (typing/typedecl.ml[1699,62285+4]..[1699,62285+32])
                  Ppat_construct "Constraint_failed" (typing/typedecl.ml[1699,62285+4]..[1699,62285+21])
                  Some
                    []
                    pattern (typing/typedecl.ml[1699,62285+22]..[1699,62285+32])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1699,62285+23]..[1699,62285+26])
                          Ppat_var "env" (typing/typedecl.ml[1699,62285+23]..[1699,62285+26])
                        pattern (typing/typedecl.ml[1699,62285+28]..[1699,62285+31])
                          Ppat_var "err" (typing/typedecl.ml[1699,62285+28]..[1699,62285+31])
                      ]
                expression (typing/typedecl.ml[1700,62321+6]..[1704,62546+22])
                  Pexp_sequence
                  expression (typing/typedecl.ml[1700,62321+6]..[1700,62321+70])
                    Pexp_apply
                    expression (typing/typedecl.ml[1700,62321+6]..[1700,62321+13])
                      Pexp_ident "fprintf" (typing/typedecl.ml[1700,62321+6]..[1700,62321+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1700,62321+14]..[1700,62321+17])
                          Pexp_ident "ppf" (typing/typedecl.ml[1700,62321+14]..[1700,62321+17])
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1700,62321+18]..[1700,62321+70])
                          Pexp_constant PConst_string("@[<v>Constraints are not satisfied in this type.@ ",(typing/typedecl.ml[1700,62321+19]..[1700,62321+69]),None)
                    ]
                  expression (typing/typedecl.ml[1701,62393+6]..[1704,62546+22])
                    Pexp_sequence
                    expression (typing/typedecl.ml[1701,62393+6]..[1703,62485+59])
                      Pexp_apply
                      expression (typing/typedecl.ml[1701,62393+6]..[1701,62393+39])
                        Pexp_ident "Printtyp.report_unification_error" (typing/typedecl.ml[1701,62393+6]..[1701,62393+39])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1701,62393+40]..[1701,62393+43])
                            Pexp_ident "ppf" (typing/typedecl.ml[1701,62393+40]..[1701,62393+43])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1701,62393+44]..[1701,62393+47])
                            Pexp_ident "env" (typing/typedecl.ml[1701,62393+44]..[1701,62393+47])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1701,62393+48]..[1701,62393+51])
                            Pexp_ident "err" (typing/typedecl.ml[1701,62393+48]..[1701,62393+51])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1702,62445+8]..[1702,62445+39])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typedecl.ml[1702,62445+13]..[1702,62445+16])
                              Ppat_var "ppf" (typing/typedecl.ml[1702,62445+13]..[1702,62445+16])
                            expression (typing/typedecl.ml[1702,62445+20]..[1702,62445+38])
                              Pexp_apply
                              expression (typing/typedecl.ml[1702,62445+20]..[1702,62445+27])
                                Pexp_ident "fprintf" (typing/typedecl.ml[1702,62445+20]..[1702,62445+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1702,62445+28]..[1702,62445+31])
                                    Pexp_ident "ppf" (typing/typedecl.ml[1702,62445+28]..[1702,62445+31])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1702,62445+32]..[1702,62445+38])
                                    Pexp_constant PConst_string("Type",(typing/typedecl.ml[1702,62445+33]..[1702,62445+37]),None)
                              ]
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1703,62485+8]..[1703,62485+59])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typedecl.ml[1703,62485+13]..[1703,62485+16])
                              Ppat_var "ppf" (typing/typedecl.ml[1703,62485+13]..[1703,62485+16])
                            expression (typing/typedecl.ml[1703,62485+20]..[1703,62485+58])
                              Pexp_apply
                              expression (typing/typedecl.ml[1703,62485+20]..[1703,62485+27])
                                Pexp_ident "fprintf" (typing/typedecl.ml[1703,62485+20]..[1703,62485+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1703,62485+28]..[1703,62485+31])
                                    Pexp_ident "ppf" (typing/typedecl.ml[1703,62485+28]..[1703,62485+31])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1703,62485+32]..[1703,62485+58])
                                    Pexp_constant PConst_string("should be an instance of",(typing/typedecl.ml[1703,62485+33]..[1703,62485+57]),None)
                              ]
                      ]
                    expression (typing/typedecl.ml[1704,62546+6]..[1704,62546+22])
                      Pexp_apply
                      expression (typing/typedecl.ml[1704,62546+6]..[1704,62546+13])
                        Pexp_ident "fprintf" (typing/typedecl.ml[1704,62546+6]..[1704,62546+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1704,62546+14]..[1704,62546+17])
                            Pexp_ident "ppf" (typing/typedecl.ml[1704,62546+14]..[1704,62546+17])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1704,62546+18]..[1704,62546+22])
                            Pexp_constant PConst_string("@]",(typing/typedecl.ml[1704,62546+19]..[1704,62546+21]),None)
                      ]
              <case>
                pattern (typing/typedecl.ml[1705,62569+4]..[1705,62569+63])
                  Ppat_construct "Non_regular" (typing/typedecl.ml[1705,62569+4]..[1705,62569+15])
                  Some
                    []
                    pattern (typing/typedecl.ml[1705,62569+16]..[1705,62569+63])
                      Ppat_record Closed
                      [
                        "definition" (typing/typedecl.ml[1705,62569+18]..[1705,62569+28]) ghost
                          pattern (typing/typedecl.ml[1705,62569+18]..[1705,62569+28])
                            Ppat_var "definition" (typing/typedecl.ml[1705,62569+18]..[1705,62569+28])
                        "used_as" (typing/typedecl.ml[1705,62569+30]..[1705,62569+37]) ghost
                          pattern (typing/typedecl.ml[1705,62569+30]..[1705,62569+37])
                            Ppat_var "used_as" (typing/typedecl.ml[1705,62569+30]..[1705,62569+37])
                        "defined_as" (typing/typedecl.ml[1705,62569+39]..[1705,62569+49]) ghost
                          pattern (typing/typedecl.ml[1705,62569+39]..[1705,62569+49])
                            Ppat_var "defined_as" (typing/typedecl.ml[1705,62569+39]..[1705,62569+49])
                        "expansions" (typing/typedecl.ml[1705,62569+51]..[1705,62569+61]) ghost
                          pattern (typing/typedecl.ml[1705,62569+51]..[1705,62569+61])
                            Ppat_var "expansions" (typing/typedecl.ml[1705,62569+51]..[1705,62569+61])
                      ]
                expression (typing/typedecl.ml[1706,62636+6]..[1739,64186+9])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typedecl.ml[1706,62636+10]..[1706,62636+22])
                        Ppat_var "pp_expansion" (typing/typedecl.ml[1706,62636+10]..[1706,62636+22])
                      expression (typing/typedecl.ml[1706,62636+23]..[1709,62744+33]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typedecl.ml[1706,62636+23]..[1706,62636+26])
                          Ppat_var "ppf" (typing/typedecl.ml[1706,62636+23]..[1706,62636+26])
                        expression (typing/typedecl.ml[1706,62636+27]..[1709,62744+33]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typedecl.ml[1706,62636+27]..[1706,62636+36])
                            Ppat_tuple
                            [
                              pattern (typing/typedecl.ml[1706,62636+28]..[1706,62636+30])
                                Ppat_var "ty" (typing/typedecl.ml[1706,62636+28]..[1706,62636+30])
                              pattern (typing/typedecl.ml[1706,62636+31]..[1706,62636+35])
                                Ppat_var "body" (typing/typedecl.ml[1706,62636+31]..[1706,62636+35])
                            ]
                          expression (typing/typedecl.ml[1707,62675+8]..[1709,62744+33])
                            Pexp_apply
                            expression (typing/typedecl.ml[1707,62675+8]..[1707,62675+22])
                              Pexp_ident "Format.fprintf" (typing/typedecl.ml[1707,62675+8]..[1707,62675+22])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1707,62675+23]..[1707,62675+26])
                                  Pexp_ident "ppf" (typing/typedecl.ml[1707,62675+23]..[1707,62675+26])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1707,62675+27]..[1707,62675+36])
                                  Pexp_constant PConst_string("%a = %a",(typing/typedecl.ml[1707,62675+28]..[1707,62675+35]),None)
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1708,62712+10]..[1708,62712+28])
                                  Pexp_ident "Printtyp.type_expr" (typing/typedecl.ml[1708,62712+10]..[1708,62712+28])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1708,62712+29]..[1708,62712+31])
                                  Pexp_ident "ty" (typing/typedecl.ml[1708,62712+29]..[1708,62712+31])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1709,62744+10]..[1709,62744+28])
                                  Pexp_ident "Printtyp.type_expr" (typing/typedecl.ml[1709,62744+10]..[1709,62744+28])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1709,62744+29]..[1709,62744+33])
                                  Pexp_ident "body" (typing/typedecl.ml[1709,62744+29]..[1709,62744+33])
                            ]
                  ]
                  expression (typing/typedecl.ml[1710,62781+6]..[1739,64186+9])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typedecl.ml[1710,62781+10]..[1710,62781+15])
                          Ppat_var "comma" (typing/typedecl.ml[1710,62781+10]..[1710,62781+15])
                        expression (typing/typedecl.ml[1710,62781+16]..[1710,62781+54]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typedecl.ml[1710,62781+16]..[1710,62781+19])
                            Ppat_var "ppf" (typing/typedecl.ml[1710,62781+16]..[1710,62781+19])
                          expression (typing/typedecl.ml[1710,62781+20]..[1710,62781+54]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typedecl.ml[1710,62781+20]..[1710,62781+22])
                              Ppat_construct "()" (typing/typedecl.ml[1710,62781+20]..[1710,62781+22])
                              None
                            expression (typing/typedecl.ml[1710,62781+25]..[1710,62781+54])
                              Pexp_apply
                              expression (typing/typedecl.ml[1710,62781+25]..[1710,62781+39])
                                Pexp_ident "Format.fprintf" (typing/typedecl.ml[1710,62781+25]..[1710,62781+39])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1710,62781+40]..[1710,62781+43])
                                    Pexp_ident "ppf" (typing/typedecl.ml[1710,62781+40]..[1710,62781+43])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1710,62781+44]..[1710,62781+54])
                                    Pexp_constant PConst_string(",@;<1 2>",(typing/typedecl.ml[1710,62781+45]..[1710,62781+53]),None)
                              ]
                    ]
                    expression (typing/typedecl.ml[1711,62839+6]..[1739,64186+9])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typedecl.ml[1711,62839+10]..[1711,62839+23])
                            Ppat_var "pp_expansions" (typing/typedecl.ml[1711,62839+10]..[1711,62839+23])
                          expression (typing/typedecl.ml[1711,62839+24]..[1712,62880+72]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typedecl.ml[1711,62839+24]..[1711,62839+27])
                              Ppat_var "ppf" (typing/typedecl.ml[1711,62839+24]..[1711,62839+27])
                            expression (typing/typedecl.ml[1711,62839+28]..[1712,62880+72]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typedecl.ml[1711,62839+28]..[1711,62839+38])
                                Ppat_var "expansions" (typing/typedecl.ml[1711,62839+28]..[1711,62839+38])
                              expression (typing/typedecl.ml[1712,62880+8]..[1712,62880+72])
                                Pexp_apply
                                expression (typing/typedecl.ml[1712,62880+8]..[1712,62880+57])
                                  Pexp_open Fresh
                                  module_expr (typing/typedecl.ml[1712,62880+8]..[1712,62880+14])
                                    Pmod_ident "Format" (typing/typedecl.ml[1712,62880+8]..[1712,62880+14])
                                  expression (typing/typedecl.ml[1712,62880+16]..[1712,62880+56])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[1712,62880+16]..[1712,62880+29])
                                      Pexp_ident "pp_print_list" (typing/typedecl.ml[1712,62880+16]..[1712,62880+29])
                                    [
                                      <arg>
                                      Labelled "pp_sep"
                                        expression (typing/typedecl.ml[1712,62880+38]..[1712,62880+43])
                                          Pexp_ident "comma" (typing/typedecl.ml[1712,62880+38]..[1712,62880+43])
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1712,62880+44]..[1712,62880+56])
                                          Pexp_ident "pp_expansion" (typing/typedecl.ml[1712,62880+44]..[1712,62880+56])
                                    ]
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1712,62880+58]..[1712,62880+61])
                                      Pexp_ident "ppf" (typing/typedecl.ml[1712,62880+58]..[1712,62880+61])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1712,62880+62]..[1712,62880+72])
                                      Pexp_ident "expansions" (typing/typedecl.ml[1712,62880+62]..[1712,62880+72])
                                ]
                      ]
                      expression (typing/typedecl.ml[1713,62956+6]..[1739,64186+9])
                        Pexp_sequence
                        expression (typing/typedecl.ml[1713,62956+6]..[1713,62956+43])
                          Pexp_apply
                          expression (typing/typedecl.ml[1713,62956+6]..[1713,62956+35])
                            Pexp_ident "Printtyp.reset_and_mark_loops" (typing/typedecl.ml[1713,62956+6]..[1713,62956+35])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1713,62956+36]..[1713,62956+43])
                                Pexp_ident "used_as" (typing/typedecl.ml[1713,62956+36]..[1713,62956+43])
                          ]
                        expression (typing/typedecl.ml[1714,63001+6]..[1739,64186+9])
                          Pexp_sequence
                          expression (typing/typedecl.ml[1714,63001+6]..[1714,63001+36])
                            Pexp_apply
                            expression (typing/typedecl.ml[1714,63001+6]..[1714,63001+25])
                              Pexp_ident "Printtyp.mark_loops" (typing/typedecl.ml[1714,63001+6]..[1714,63001+25])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1714,63001+26]..[1714,63001+36])
                                  Pexp_ident "defined_as" (typing/typedecl.ml[1714,63001+26]..[1714,63001+36])
                            ]
                          expression (typing/typedecl.ml[1715,63039+6]..[1739,64186+9])
                            Pexp_sequence
                            expression (typing/typedecl.ml[1715,63039+6]..[1715,63039+38])
                              Pexp_apply
                              expression (typing/typedecl.ml[1715,63039+6]..[1715,63039+35])
                                Pexp_ident "Printtyp.Naming_context.reset" (typing/typedecl.ml[1715,63039+6]..[1715,63039+35])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1715,63039+36]..[1715,63039+38])
                                    Pexp_construct "()" (typing/typedecl.ml[1715,63039+36]..[1715,63039+38])
                                    None
                              ]
                            expression (typing/typedecl.ml[1716,63079+6]..[1739,64186+9])
                              Pexp_match
                              expression (typing/typedecl.ml[1716,63079+18]..[1716,63079+28])
                                Pexp_ident "expansions" (typing/typedecl.ml[1716,63079+18]..[1716,63079+28])
                              [
                                <case>
                                  pattern (typing/typedecl.ml[1717,63113+8]..[1717,63113+10])
                                    Ppat_construct "[]" (typing/typedecl.ml[1717,63113+8]..[1717,63113+10])
                                    None
                                  expression (typing/typedecl.ml[1718,63127+10]..[1726,63532+67])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[1718,63127+10]..[1718,63127+17])
                                      Pexp_ident "fprintf" (typing/typedecl.ml[1718,63127+10]..[1718,63127+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1718,63127+18]..[1718,63127+21])
                                          Pexp_ident "ppf" (typing/typedecl.ml[1718,63127+18]..[1718,63127+21])
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1719,63149+12]..[1723,63395+30])
                                          Pexp_constant PConst_string("@[<hv>This recursive type is not regular.@ The type constructor %s is defined as@;<1 2>type %a@ but it is used as@;<1 2>%a.@ All uses need to match the definition for the recursive type to be regular.@]",(typing/typedecl.ml[1719,63149+13]..[1723,63395+29]),None)
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1724,63426+12]..[1724,63426+34])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1724,63426+13]..[1724,63426+22])
                                            Pexp_ident "Path.name" (typing/typedecl.ml[1724,63426+13]..[1724,63426+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1724,63426+23]..[1724,63426+33])
                                                Pexp_ident "definition" (typing/typedecl.ml[1724,63426+23]..[1724,63426+33])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1725,63461+12]..[1725,63461+28])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1725,63461+12]..[1725,63461+13])
                                            Pexp_ident "!" (typing/typedecl.ml[1725,63461+12]..[1725,63461+13])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1725,63461+13]..[1725,63461+28])
                                                Pexp_ident "Oprint.out_type" (typing/typedecl.ml[1725,63461+13]..[1725,63461+28])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1725,63461+29]..[1725,63461+70])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1725,63461+30]..[1725,63461+53])
                                            Pexp_ident "Printtyp.tree_of_typexp" (typing/typedecl.ml[1725,63461+30]..[1725,63461+53])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1725,63461+54]..[1725,63461+58])
                                                Pexp_construct "Type" (typing/typedecl.ml[1725,63461+54]..[1725,63461+58])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1725,63461+59]..[1725,63461+69])
                                                Pexp_ident "defined_as" (typing/typedecl.ml[1725,63461+59]..[1725,63461+69])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1726,63532+12]..[1726,63532+28])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1726,63532+12]..[1726,63532+13])
                                            Pexp_ident "!" (typing/typedecl.ml[1726,63532+12]..[1726,63532+13])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1726,63532+13]..[1726,63532+28])
                                                Pexp_ident "Oprint.out_type" (typing/typedecl.ml[1726,63532+13]..[1726,63532+28])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1726,63532+29]..[1726,63532+67])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1726,63532+30]..[1726,63532+53])
                                            Pexp_ident "Printtyp.tree_of_typexp" (typing/typedecl.ml[1726,63532+30]..[1726,63532+53])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1726,63532+54]..[1726,63532+58])
                                                Pexp_construct "Type" (typing/typedecl.ml[1726,63532+54]..[1726,63532+58])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1726,63532+59]..[1726,63532+66])
                                                Pexp_ident "used_as" (typing/typedecl.ml[1726,63532+59]..[1726,63532+66])
                                          ]
                                    ]
                                <case>
                                  pattern (typing/typedecl.ml[1727,63600+8]..[1727,63600+14])
                                    Ppat_construct "::" (typing/typedecl.ml[1727,63600+10]..[1727,63600+12])
                                    Some
                                      []
                                      pattern (typing/typedecl.ml[1727,63600+8]..[1727,63600+14]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (typing/typedecl.ml[1727,63600+8]..[1727,63600+9])
                                            Ppat_any
                                          pattern (typing/typedecl.ml[1727,63600+13]..[1727,63600+14])
                                            Ppat_any
                                        ]
                                  expression (typing/typedecl.ml[1728,63618+10]..[1738,64149+36])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[1728,63618+10]..[1728,63618+17])
                                      Pexp_ident "fprintf" (typing/typedecl.ml[1728,63618+10]..[1728,63618+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1728,63618+18]..[1728,63618+21])
                                          Pexp_ident "ppf" (typing/typedecl.ml[1728,63618+18]..[1728,63618+21])
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1729,63640+12]..[1734,63944+30])
                                          Pexp_constant PConst_string("@[<hv>This recursive type is not regular.@ The type constructor %s is defined as@;<1 2>type %a@ but it is used as@;<1 2>%a@ after the following expansion(s):@;<1 2>%a@ All uses need to match the definition for the recursive type to be regular.@]",(typing/typedecl.ml[1729,63640+13]..[1734,63944+29]),None)
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1735,63975+12]..[1735,63975+34])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1735,63975+13]..[1735,63975+22])
                                            Pexp_ident "Path.name" (typing/typedecl.ml[1735,63975+13]..[1735,63975+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1735,63975+23]..[1735,63975+33])
                                                Pexp_ident "definition" (typing/typedecl.ml[1735,63975+23]..[1735,63975+33])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1736,64010+12]..[1736,64010+28])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1736,64010+12]..[1736,64010+13])
                                            Pexp_ident "!" (typing/typedecl.ml[1736,64010+12]..[1736,64010+13])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1736,64010+13]..[1736,64010+28])
                                                Pexp_ident "Oprint.out_type" (typing/typedecl.ml[1736,64010+13]..[1736,64010+28])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1736,64010+29]..[1736,64010+70])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1736,64010+30]..[1736,64010+53])
                                            Pexp_ident "Printtyp.tree_of_typexp" (typing/typedecl.ml[1736,64010+30]..[1736,64010+53])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1736,64010+54]..[1736,64010+58])
                                                Pexp_construct "Type" (typing/typedecl.ml[1736,64010+54]..[1736,64010+58])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1736,64010+59]..[1736,64010+69])
                                                Pexp_ident "defined_as" (typing/typedecl.ml[1736,64010+59]..[1736,64010+69])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1737,64081+12]..[1737,64081+28])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1737,64081+12]..[1737,64081+13])
                                            Pexp_ident "!" (typing/typedecl.ml[1737,64081+12]..[1737,64081+13])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1737,64081+13]..[1737,64081+28])
                                                Pexp_ident "Oprint.out_type" (typing/typedecl.ml[1737,64081+13]..[1737,64081+28])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1737,64081+29]..[1737,64081+67])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1737,64081+30]..[1737,64081+53])
                                            Pexp_ident "Printtyp.tree_of_typexp" (typing/typedecl.ml[1737,64081+30]..[1737,64081+53])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1737,64081+54]..[1737,64081+58])
                                                Pexp_construct "Type" (typing/typedecl.ml[1737,64081+54]..[1737,64081+58])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1737,64081+59]..[1737,64081+66])
                                                Pexp_ident "used_as" (typing/typedecl.ml[1737,64081+59]..[1737,64081+66])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1738,64149+12]..[1738,64149+25])
                                          Pexp_ident "pp_expansions" (typing/typedecl.ml[1738,64149+12]..[1738,64149+25])
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1738,64149+26]..[1738,64149+36])
                                          Pexp_ident "expansions" (typing/typedecl.ml[1738,64149+26]..[1738,64149+36])
                                    ]
                              ]
              <case>
                pattern (typing/typedecl.ml[1740,64196+4]..[1740,64196+38])
                  Ppat_construct "Inconsistent_constraint" (typing/typedecl.ml[1740,64196+4]..[1740,64196+27])
                  Some
                    []
                    pattern (typing/typedecl.ml[1740,64196+28]..[1740,64196+38])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1740,64196+29]..[1740,64196+32])
                          Ppat_var "env" (typing/typedecl.ml[1740,64196+29]..[1740,64196+32])
                        pattern (typing/typedecl.ml[1740,64196+34]..[1740,64196+37])
                          Ppat_var "err" (typing/typedecl.ml[1740,64196+34]..[1740,64196+37])
                      ]
                expression (typing/typedecl.ml[1741,64238+6]..[1745,64463+22])
                  Pexp_sequence
                  expression (typing/typedecl.ml[1741,64238+6]..[1741,64238+67])
                    Pexp_apply
                    expression (typing/typedecl.ml[1741,64238+6]..[1741,64238+13])
                      Pexp_ident "fprintf" (typing/typedecl.ml[1741,64238+6]..[1741,64238+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1741,64238+14]..[1741,64238+17])
                          Pexp_ident "ppf" (typing/typedecl.ml[1741,64238+14]..[1741,64238+17])
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1741,64238+18]..[1741,64238+67])
                          Pexp_constant PConst_string("@[<v>The type constraints are not consistent.@ ",(typing/typedecl.ml[1741,64238+19]..[1741,64238+66]),None)
                    ]
                  expression (typing/typedecl.ml[1742,64307+6]..[1745,64463+22])
                    Pexp_sequence
                    expression (typing/typedecl.ml[1742,64307+6]..[1744,64399+62])
                      Pexp_apply
                      expression (typing/typedecl.ml[1742,64307+6]..[1742,64307+39])
                        Pexp_ident "Printtyp.report_unification_error" (typing/typedecl.ml[1742,64307+6]..[1742,64307+39])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1742,64307+40]..[1742,64307+43])
                            Pexp_ident "ppf" (typing/typedecl.ml[1742,64307+40]..[1742,64307+43])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1742,64307+44]..[1742,64307+47])
                            Pexp_ident "env" (typing/typedecl.ml[1742,64307+44]..[1742,64307+47])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1742,64307+48]..[1742,64307+51])
                            Pexp_ident "err" (typing/typedecl.ml[1742,64307+48]..[1742,64307+51])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1743,64359+8]..[1743,64359+39])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typedecl.ml[1743,64359+13]..[1743,64359+16])
                              Ppat_var "ppf" (typing/typedecl.ml[1743,64359+13]..[1743,64359+16])
                            expression (typing/typedecl.ml[1743,64359+20]..[1743,64359+38])
                              Pexp_apply
                              expression (typing/typedecl.ml[1743,64359+20]..[1743,64359+27])
                                Pexp_ident "fprintf" (typing/typedecl.ml[1743,64359+20]..[1743,64359+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1743,64359+28]..[1743,64359+31])
                                    Pexp_ident "ppf" (typing/typedecl.ml[1743,64359+28]..[1743,64359+31])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1743,64359+32]..[1743,64359+38])
                                    Pexp_constant PConst_string("Type",(typing/typedecl.ml[1743,64359+33]..[1743,64359+37]),None)
                              ]
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1744,64399+8]..[1744,64399+62])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typedecl.ml[1744,64399+13]..[1744,64399+16])
                              Ppat_var "ppf" (typing/typedecl.ml[1744,64399+13]..[1744,64399+16])
                            expression (typing/typedecl.ml[1744,64399+20]..[1744,64399+61])
                              Pexp_apply
                              expression (typing/typedecl.ml[1744,64399+20]..[1744,64399+27])
                                Pexp_ident "fprintf" (typing/typedecl.ml[1744,64399+20]..[1744,64399+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1744,64399+28]..[1744,64399+31])
                                    Pexp_ident "ppf" (typing/typedecl.ml[1744,64399+28]..[1744,64399+31])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1744,64399+32]..[1744,64399+61])
                                    Pexp_constant PConst_string("is not compatible with type",(typing/typedecl.ml[1744,64399+33]..[1744,64399+60]),None)
                              ]
                      ]
                    expression (typing/typedecl.ml[1745,64463+6]..[1745,64463+22])
                      Pexp_apply
                      expression (typing/typedecl.ml[1745,64463+6]..[1745,64463+13])
                        Pexp_ident "fprintf" (typing/typedecl.ml[1745,64463+6]..[1745,64463+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1745,64463+14]..[1745,64463+17])
                            Pexp_ident "ppf" (typing/typedecl.ml[1745,64463+14]..[1745,64463+17])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1745,64463+18]..[1745,64463+22])
                            Pexp_constant PConst_string("@]",(typing/typedecl.ml[1745,64463+19]..[1745,64463+21]),None)
                      ]
              <case>
                pattern (typing/typedecl.ml[1746,64486+4]..[1746,64486+25])
                  Ppat_construct "Type_clash" (typing/typedecl.ml[1746,64486+4]..[1746,64486+14])
                  Some
                    []
                    pattern (typing/typedecl.ml[1746,64486+15]..[1746,64486+25])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1746,64486+16]..[1746,64486+19])
                          Ppat_var "env" (typing/typedecl.ml[1746,64486+16]..[1746,64486+19])
                        pattern (typing/typedecl.ml[1746,64486+21]..[1746,64486+24])
                          Ppat_var "err" (typing/typedecl.ml[1746,64486+21]..[1746,64486+24])
                      ]
                expression (typing/typedecl.ml[1747,64515+6]..[1751,64681+52])
                  Pexp_apply
                  expression (typing/typedecl.ml[1747,64515+6]..[1747,64515+39])
                    Pexp_ident "Printtyp.report_unification_error" (typing/typedecl.ml[1747,64515+6]..[1747,64515+39])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1747,64515+40]..[1747,64515+43])
                        Pexp_ident "ppf" (typing/typedecl.ml[1747,64515+40]..[1747,64515+43])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1747,64515+44]..[1747,64515+47])
                        Pexp_ident "env" (typing/typedecl.ml[1747,64515+44]..[1747,64515+47])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1747,64515+48]..[1747,64515+51])
                        Pexp_ident "err" (typing/typedecl.ml[1747,64515+48]..[1747,64515+51])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1748,64567+8]..[1749,64592+63])
                        Pexp_function
                        [
                          <case>
                            pattern (typing/typedecl.ml[1748,64567+18]..[1748,64567+21])
                              Ppat_var "ppf" (typing/typedecl.ml[1748,64567+18]..[1748,64567+21])
                            expression (typing/typedecl.ml[1749,64592+11]..[1749,64592+62])
                              Pexp_apply
                              expression (typing/typedecl.ml[1749,64592+11]..[1749,64592+18])
                                Pexp_ident "fprintf" (typing/typedecl.ml[1749,64592+11]..[1749,64592+18])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1749,64592+19]..[1749,64592+22])
                                    Pexp_ident "ppf" (typing/typedecl.ml[1749,64592+19]..[1749,64592+22])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1749,64592+23]..[1749,64592+62])
                                    Pexp_constant PConst_string("This type constructor expands to type",(typing/typedecl.ml[1749,64592+24]..[1749,64592+61]),None)
                              ]
                        ]
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1750,64656+8]..[1751,64681+52])
                        Pexp_function
                        [
                          <case>
                            pattern (typing/typedecl.ml[1750,64656+18]..[1750,64656+21])
                              Ppat_var "ppf" (typing/typedecl.ml[1750,64656+18]..[1750,64656+21])
                            expression (typing/typedecl.ml[1751,64681+11]..[1751,64681+51])
                              Pexp_apply
                              expression (typing/typedecl.ml[1751,64681+11]..[1751,64681+18])
                                Pexp_ident "fprintf" (typing/typedecl.ml[1751,64681+11]..[1751,64681+18])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1751,64681+19]..[1751,64681+22])
                                    Pexp_ident "ppf" (typing/typedecl.ml[1751,64681+19]..[1751,64681+22])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1751,64681+23]..[1751,64681+51])
                                    Pexp_constant PConst_string("but is used here with type",(typing/typedecl.ml[1751,64681+24]..[1751,64681+50]),None)
                              ]
                        ]
                  ]
              <case>
                pattern (typing/typedecl.ml[1752,64734+4]..[1752,64734+23])
                  Ppat_construct "Null_arity_external" (typing/typedecl.ml[1752,64734+4]..[1752,64734+23])
                  None
                expression (typing/typedecl.ml[1753,64761+6]..[1753,64761+58])
                  Pexp_apply
                  expression (typing/typedecl.ml[1753,64761+6]..[1753,64761+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1753,64761+6]..[1753,64761+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1753,64761+14]..[1753,64761+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1753,64761+14]..[1753,64761+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1753,64761+18]..[1753,64761+58])
                        Pexp_constant PConst_string("External identifiers must be functions",(typing/typedecl.ml[1753,64761+19]..[1753,64761+57]),None)
                  ]
              <case>
                pattern (typing/typedecl.ml[1754,64820+4]..[1754,64820+27])
                  Ppat_construct "Missing_native_external" (typing/typedecl.ml[1754,64820+4]..[1754,64820+27])
                  None
                expression (typing/typedecl.ml[1755,64851+6]..[1757,64980+49])
                  Pexp_apply
                  expression (typing/typedecl.ml[1755,64851+6]..[1755,64851+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1755,64851+6]..[1755,64851+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1755,64851+14]..[1755,64851+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1755,64851+14]..[1755,64851+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1755,64851+18]..[1757,64980+49])
                        Pexp_constant PConst_string("@[<hv>An external function with more than 5 arguments requires a second stub function@ for native-code compilation@]",(typing/typedecl.ml[1755,64851+19]..[1757,64980+48]),None)
                  ]
              <case>
                pattern (typing/typedecl.ml[1758,65030+4]..[1758,65030+31])
                  Ppat_construct "Unbound_type_var" (typing/typedecl.ml[1758,65030+4]..[1758,65030+20])
                  Some
                    []
                    pattern (typing/typedecl.ml[1758,65030+21]..[1758,65030+31])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1758,65030+22]..[1758,65030+24])
                          Ppat_var "ty" (typing/typedecl.ml[1758,65030+22]..[1758,65030+24])
                        pattern (typing/typedecl.ml[1758,65030+26]..[1758,65030+30])
                          Ppat_var "decl" (typing/typedecl.ml[1758,65030+26]..[1758,65030+30])
                      ]
                expression (typing/typedecl.ml[1759,65065+6]..[1777,65853+22])
                  Pexp_sequence
                  expression (typing/typedecl.ml[1759,65065+6]..[1759,65065+73])
                    Pexp_apply
                    expression (typing/typedecl.ml[1759,65065+6]..[1759,65065+13])
                      Pexp_ident "fprintf" (typing/typedecl.ml[1759,65065+6]..[1759,65065+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1759,65065+14]..[1759,65065+17])
                          Pexp_ident "ppf" (typing/typedecl.ml[1759,65065+14]..[1759,65065+17])
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1759,65065+18]..[1759,65065+73])
                          Pexp_constant PConst_string("@[A type variable is unbound in this type declaration",(typing/typedecl.ml[1759,65065+19]..[1759,65065+72]),None)
                    ]
                  expression (typing/typedecl.ml[1760,65140+6]..[1777,65853+22])
                    Pexp_sequence
                    expression (typing/typedecl.ml[1760,65140+6]..[1776,65842+9])
                      Pexp_match
                      expression (typing/typedecl.ml[1760,65140+18]..[1760,65140+52])
                        Pexp_tuple
                        [
                          expression (typing/typedecl.ml[1760,65140+18]..[1760,65140+32])
                            Pexp_field
                            expression (typing/typedecl.ml[1760,65140+18]..[1760,65140+22])
                              Pexp_ident "decl" (typing/typedecl.ml[1760,65140+18]..[1760,65140+22])
                            "type_kind" (typing/typedecl.ml[1760,65140+23]..[1760,65140+32])
                          expression (typing/typedecl.ml[1760,65140+34]..[1760,65140+52])
                            Pexp_field
                            expression (typing/typedecl.ml[1760,65140+34]..[1760,65140+38])
                              Pexp_ident "decl" (typing/typedecl.ml[1760,65140+34]..[1760,65140+38])
                            "type_manifest" (typing/typedecl.ml[1760,65140+39]..[1760,65140+52])
                        ]
                      [
                        <case>
                          pattern (typing/typedecl.ml[1761,65198+8]..[1761,65198+34])
                            Ppat_tuple
                            [
                              pattern (typing/typedecl.ml[1761,65198+8]..[1761,65198+31])
                                Ppat_construct "Type_variant" (typing/typedecl.ml[1761,65198+8]..[1761,65198+20])
                                Some
                                  []
                                  pattern (typing/typedecl.ml[1761,65198+21]..[1761,65198+31])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typedecl.ml[1761,65198+22]..[1761,65198+24])
                                        Ppat_var "tl" (typing/typedecl.ml[1761,65198+22]..[1761,65198+24])
                                      pattern (typing/typedecl.ml[1761,65198+26]..[1761,65198+30])
                                        Ppat_var "_rep" (typing/typedecl.ml[1761,65198+26]..[1761,65198+30])
                                    ]
                              pattern (typing/typedecl.ml[1761,65198+33]..[1761,65198+34])
                                Ppat_any
                            ]
                          expression (typing/typedecl.ml[1762,65236+10]..[1769,65521+65])
                            Pexp_apply
                            expression (typing/typedecl.ml[1762,65236+10]..[1762,65236+29])
                              Pexp_ident "explain_unbound_gen" (typing/typedecl.ml[1762,65236+10]..[1762,65236+29])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1762,65236+30]..[1762,65236+33])
                                  Pexp_ident "ppf" (typing/typedecl.ml[1762,65236+30]..[1762,65236+33])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1762,65236+34]..[1762,65236+36])
                                  Pexp_ident "ty" (typing/typedecl.ml[1762,65236+34]..[1762,65236+36])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1762,65236+37]..[1762,65236+39])
                                  Pexp_ident "tl" (typing/typedecl.ml[1762,65236+37]..[1762,65236+39])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1762,65236+40]..[1765,65388+13])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typedecl.ml[1762,65236+45]..[1762,65236+46])
                                    Ppat_var "c" (typing/typedecl.ml[1762,65236+45]..[1762,65236+46])
                                  expression (typing/typedecl.ml[1763,65286+14]..[1764,65347+40])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typedecl.ml[1763,65286+18]..[1763,65286+20])
                                          Ppat_var "tl" (typing/typedecl.ml[1763,65286+18]..[1763,65286+20])
                                        expression (typing/typedecl.ml[1763,65286+23]..[1763,65286+57])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1763,65286+23]..[1763,65286+41])
                                            Pexp_ident "tys_of_constr_args" (typing/typedecl.ml[1763,65286+23]..[1763,65286+41])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1763,65286+42]..[1763,65286+57])
                                                Pexp_field
                                                expression (typing/typedecl.ml[1763,65286+42]..[1763,65286+43])
                                                  Pexp_ident "c" (typing/typedecl.ml[1763,65286+42]..[1763,65286+43])
                                                "Types.cd_args" (typing/typedecl.ml[1763,65286+44]..[1763,65286+57])
                                          ]
                                    ]
                                    expression (typing/typedecl.ml[1764,65347+14]..[1764,65347+40])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[1764,65347+14]..[1764,65347+28])
                                        Pexp_ident "Btype.newgenty" (typing/typedecl.ml[1764,65347+14]..[1764,65347+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1764,65347+29]..[1764,65347+40])
                                            Pexp_construct "Ttuple" (typing/typedecl.ml[1764,65347+30]..[1764,65347+36])
                                            Some
                                              expression (typing/typedecl.ml[1764,65347+37]..[1764,65347+39])
                                                Pexp_ident "tl" (typing/typedecl.ml[1764,65347+37]..[1764,65347+39])
                                      ]
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1766,65402+12]..[1766,65402+18])
                                  Pexp_constant PConst_string("case",(typing/typedecl.ml[1766,65402+13]..[1766,65402+17]),None)
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1766,65402+19]..[1769,65521+65])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typedecl.ml[1766,65402+24]..[1766,65402+27])
                                    Ppat_var "ppf" (typing/typedecl.ml[1766,65402+24]..[1766,65402+27])
                                  expression (typing/typedecl.ml[1766,65402+28]..[1769,65521+64]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typedecl.ml[1766,65402+28]..[1766,65402+29])
                                      Ppat_var "c" (typing/typedecl.ml[1766,65402+28]..[1766,65402+29])
                                    expression (typing/typedecl.ml[1767,65435+16]..[1769,65521+64])
                                      Pexp_apply
                                      expression (typing/typedecl.ml[1767,65435+16]..[1767,65435+23])
                                        Pexp_ident "fprintf" (typing/typedecl.ml[1767,65435+16]..[1767,65435+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1767,65435+24]..[1767,65435+27])
                                            Pexp_ident "ppf" (typing/typedecl.ml[1767,65435+24]..[1767,65435+27])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1768,65463+18]..[1768,65463+28])
                                            Pexp_constant PConst_string("%a of %a",(typing/typedecl.ml[1768,65463+19]..[1768,65463+27]),None)
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1768,65463+29]..[1768,65463+43])
                                            Pexp_ident "Printtyp.ident" (typing/typedecl.ml[1768,65463+29]..[1768,65463+43])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1768,65463+44]..[1768,65463+57])
                                            Pexp_field
                                            expression (typing/typedecl.ml[1768,65463+44]..[1768,65463+45])
                                              Pexp_ident "c" (typing/typedecl.ml[1768,65463+44]..[1768,65463+45])
                                            "Types.cd_id" (typing/typedecl.ml[1768,65463+46]..[1768,65463+57])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1769,65521+18]..[1769,65521+48])
                                            Pexp_ident "Printtyp.constructor_arguments" (typing/typedecl.ml[1769,65521+18]..[1769,65521+48])
                                        <arg>
                                        Nolabel
                                          expression (typing/typedecl.ml[1769,65521+49]..[1769,65521+64])
                                            Pexp_field
                                            expression (typing/typedecl.ml[1769,65521+49]..[1769,65521+50])
                                              Pexp_ident "c" (typing/typedecl.ml[1769,65521+49]..[1769,65521+50])
                                            "Types.cd_args" (typing/typedecl.ml[1769,65521+51]..[1769,65521+64])
                                      ]
                            ]
                        <case>
                          pattern (typing/typedecl.ml[1770,65587+8]..[1770,65587+30])
                            Ppat_tuple
                            [
                              pattern (typing/typedecl.ml[1770,65587+8]..[1770,65587+27])
                                Ppat_construct "Type_record" (typing/typedecl.ml[1770,65587+8]..[1770,65587+19])
                                Some
                                  []
                                  pattern (typing/typedecl.ml[1770,65587+20]..[1770,65587+27])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typedecl.ml[1770,65587+21]..[1770,65587+23])
                                        Ppat_var "tl" (typing/typedecl.ml[1770,65587+21]..[1770,65587+23])
                                      pattern (typing/typedecl.ml[1770,65587+25]..[1770,65587+26])
                                        Ppat_any
                                    ]
                              pattern (typing/typedecl.ml[1770,65587+29]..[1770,65587+30])
                                Ppat_any
                            ]
                          expression (typing/typedecl.ml[1771,65621+10]..[1772,65684+62])
                            Pexp_apply
                            expression (typing/typedecl.ml[1771,65621+10]..[1771,65621+25])
                              Pexp_ident "explain_unbound" (typing/typedecl.ml[1771,65621+10]..[1771,65621+25])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1771,65621+26]..[1771,65621+29])
                                  Pexp_ident "ppf" (typing/typedecl.ml[1771,65621+26]..[1771,65621+29])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1771,65621+30]..[1771,65621+32])
                                  Pexp_ident "ty" (typing/typedecl.ml[1771,65621+30]..[1771,65621+32])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1771,65621+33]..[1771,65621+35])
                                  Pexp_ident "tl" (typing/typedecl.ml[1771,65621+33]..[1771,65621+35])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1771,65621+36]..[1771,65621+62])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typedecl.ml[1771,65621+41]..[1771,65621+42])
                                    Ppat_var "l" (typing/typedecl.ml[1771,65621+41]..[1771,65621+42])
                                  expression (typing/typedecl.ml[1771,65621+46]..[1771,65621+61])
                                    Pexp_field
                                    expression (typing/typedecl.ml[1771,65621+46]..[1771,65621+47])
                                      Pexp_ident "l" (typing/typedecl.ml[1771,65621+46]..[1771,65621+47])
                                    "Types.ld_type" (typing/typedecl.ml[1771,65621+48]..[1771,65621+61])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1772,65684+12]..[1772,65684+19])
                                  Pexp_constant PConst_string("field",(typing/typedecl.ml[1772,65684+13]..[1772,65684+18]),None)
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1772,65684+20]..[1772,65684+62])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typedecl.ml[1772,65684+25]..[1772,65684+26])
                                    Ppat_var "l" (typing/typedecl.ml[1772,65684+25]..[1772,65684+26])
                                  expression (typing/typedecl.ml[1772,65684+30]..[1772,65684+61])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[1772,65684+55]..[1772,65684+56])
                                      Pexp_ident "^" (typing/typedecl.ml[1772,65684+55]..[1772,65684+56])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1772,65684+30]..[1772,65684+54])
                                          Pexp_apply
                                          expression (typing/typedecl.ml[1772,65684+30]..[1772,65684+40])
                                            Pexp_ident "Ident.name" (typing/typedecl.ml[1772,65684+30]..[1772,65684+40])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl.ml[1772,65684+41]..[1772,65684+54])
                                                Pexp_field
                                                expression (typing/typedecl.ml[1772,65684+41]..[1772,65684+42])
                                                  Pexp_ident "l" (typing/typedecl.ml[1772,65684+41]..[1772,65684+42])
                                                "Types.ld_id" (typing/typedecl.ml[1772,65684+43]..[1772,65684+54])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1772,65684+57]..[1772,65684+61])
                                          Pexp_constant PConst_string(": ",(typing/typedecl.ml[1772,65684+58]..[1772,65684+60]),None)
                                    ]
                            ]
                        <case>
                          pattern (typing/typedecl.ml[1773,65747+8]..[1773,65747+31])
                            Ppat_tuple
                            [
                              pattern (typing/typedecl.ml[1773,65747+8]..[1773,65747+21])
                                Ppat_construct "Type_abstract" (typing/typedecl.ml[1773,65747+8]..[1773,65747+21])
                                None
                              pattern (typing/typedecl.ml[1773,65747+23]..[1773,65747+31])
                                Ppat_construct "Some" (typing/typedecl.ml[1773,65747+23]..[1773,65747+27])
                                Some
                                  []
                                  pattern (typing/typedecl.ml[1773,65747+28]..[1773,65747+31])
                                    Ppat_var "ty'" (typing/typedecl.ml[1773,65747+28]..[1773,65747+31])
                            ]
                          expression (typing/typedecl.ml[1774,65782+10]..[1774,65782+43])
                            Pexp_apply
                            expression (typing/typedecl.ml[1774,65782+10]..[1774,65782+32])
                              Pexp_ident "explain_unbound_single" (typing/typedecl.ml[1774,65782+10]..[1774,65782+32])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1774,65782+33]..[1774,65782+36])
                                  Pexp_ident "ppf" (typing/typedecl.ml[1774,65782+33]..[1774,65782+36])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1774,65782+37]..[1774,65782+39])
                                  Pexp_ident "ty" (typing/typedecl.ml[1774,65782+37]..[1774,65782+39])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1774,65782+40]..[1774,65782+43])
                                  Pexp_ident "ty'" (typing/typedecl.ml[1774,65782+40]..[1774,65782+43])
                            ]
                        <case>
                          pattern (typing/typedecl.ml[1775,65826+8]..[1775,65826+9])
                            Ppat_any
                          expression (typing/typedecl.ml[1775,65826+13]..[1775,65826+15])
                            Pexp_construct "()" (typing/typedecl.ml[1775,65826+13]..[1775,65826+15])
                            None
                      ]
                    expression (typing/typedecl.ml[1777,65853+6]..[1777,65853+22])
                      Pexp_apply
                      expression (typing/typedecl.ml[1777,65853+6]..[1777,65853+13])
                        Pexp_ident "fprintf" (typing/typedecl.ml[1777,65853+6]..[1777,65853+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1777,65853+14]..[1777,65853+17])
                            Pexp_ident "ppf" (typing/typedecl.ml[1777,65853+14]..[1777,65853+17])
                        <arg>
                        Nolabel
                          expression (typing/typedecl.ml[1777,65853+18]..[1777,65853+22])
                            Pexp_constant PConst_string("@]",(typing/typedecl.ml[1777,65853+19]..[1777,65853+21]),None)
                      ]
              <case>
                pattern (typing/typedecl.ml[1778,65876+4]..[1778,65876+34])
                  Ppat_construct "Unbound_type_var_ext" (typing/typedecl.ml[1778,65876+4]..[1778,65876+24])
                  Some
                    []
                    pattern (typing/typedecl.ml[1778,65876+25]..[1778,65876+34])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1778,65876+26]..[1778,65876+28])
                          Ppat_var "ty" (typing/typedecl.ml[1778,65876+26]..[1778,65876+28])
                        pattern (typing/typedecl.ml[1778,65876+30]..[1778,65876+33])
                          Ppat_var "ext" (typing/typedecl.ml[1778,65876+30]..[1778,65876+33])
                      ]
                expression (typing/typedecl.ml[1779,65914+6]..[1782,66115+22])
                  Pexp_sequence
                  expression (typing/typedecl.ml[1779,65914+6]..[1779,65914+78])
                    Pexp_apply
                    expression (typing/typedecl.ml[1779,65914+6]..[1779,65914+13])
                      Pexp_ident "fprintf" (typing/typedecl.ml[1779,65914+6]..[1779,65914+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1779,65914+14]..[1779,65914+17])
                          Pexp_ident "ppf" (typing/typedecl.ml[1779,65914+14]..[1779,65914+17])
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1779,65914+18]..[1779,65914+78])
                          Pexp_constant PConst_string("@[A type variable is unbound in this extension constructor",(typing/typedecl.ml[1779,65914+19]..[1779,65914+77]),None)
                    ]
                  expression (typing/typedecl.ml[1780,65994+6]..[1782,66115+22])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typedecl.ml[1780,65994+10]..[1780,65994+14])
                          Ppat_var "args" (typing/typedecl.ml[1780,65994+10]..[1780,65994+14])
                        expression (typing/typedecl.ml[1780,65994+17]..[1780,65994+48])
                          Pexp_apply
                          expression (typing/typedecl.ml[1780,65994+17]..[1780,65994+35])
                            Pexp_ident "tys_of_constr_args" (typing/typedecl.ml[1780,65994+17]..[1780,65994+35])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1780,65994+36]..[1780,65994+48])
                                Pexp_field
                                expression (typing/typedecl.ml[1780,65994+36]..[1780,65994+39])
                                  Pexp_ident "ext" (typing/typedecl.ml[1780,65994+36]..[1780,65994+39])
                                "ext_args" (typing/typedecl.ml[1780,65994+40]..[1780,65994+48])
                          ]
                    ]
                    expression (typing/typedecl.ml[1781,66046+6]..[1782,66115+22])
                      Pexp_sequence
                      expression (typing/typedecl.ml[1781,66046+6]..[1781,66046+67])
                        Pexp_apply
                        expression (typing/typedecl.ml[1781,66046+6]..[1781,66046+21])
                          Pexp_ident "explain_unbound" (typing/typedecl.ml[1781,66046+6]..[1781,66046+21])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1781,66046+22]..[1781,66046+25])
                              Pexp_ident "ppf" (typing/typedecl.ml[1781,66046+22]..[1781,66046+25])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1781,66046+26]..[1781,66046+28])
                              Pexp_ident "ty" (typing/typedecl.ml[1781,66046+26]..[1781,66046+28])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1781,66046+29]..[1781,66046+33])
                              Pexp_ident "args" (typing/typedecl.ml[1781,66046+29]..[1781,66046+33])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1781,66046+34]..[1781,66046+46])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typedecl.ml[1781,66046+39]..[1781,66046+40])
                                Ppat_var "c" (typing/typedecl.ml[1781,66046+39]..[1781,66046+40])
                              expression (typing/typedecl.ml[1781,66046+44]..[1781,66046+45])
                                Pexp_ident "c" (typing/typedecl.ml[1781,66046+44]..[1781,66046+45])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1781,66046+47]..[1781,66046+53])
                              Pexp_constant PConst_string("type",(typing/typedecl.ml[1781,66046+48]..[1781,66046+52]),None)
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1781,66046+54]..[1781,66046+67])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typedecl.ml[1781,66046+59]..[1781,66046+60])
                                Ppat_any
                              expression (typing/typedecl.ml[1781,66046+64]..[1781,66046+66])
                                Pexp_constant PConst_string("",(typing/typedecl.ml[1781,66046+65]..[1781,66046+65]),None)
                        ]
                      expression (typing/typedecl.ml[1782,66115+6]..[1782,66115+22])
                        Pexp_apply
                        expression (typing/typedecl.ml[1782,66115+6]..[1782,66115+13])
                          Pexp_ident "fprintf" (typing/typedecl.ml[1782,66115+6]..[1782,66115+13])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1782,66115+14]..[1782,66115+17])
                              Pexp_ident "ppf" (typing/typedecl.ml[1782,66115+14]..[1782,66115+17])
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1782,66115+18]..[1782,66115+22])
                              Pexp_constant PConst_string("@]",(typing/typedecl.ml[1782,66115+19]..[1782,66115+21]),None)
                        ]
              <case>
                pattern (typing/typedecl.ml[1783,66138+4]..[1783,66138+35])
                  Ppat_construct "Cannot_extend_private_type" (typing/typedecl.ml[1783,66138+4]..[1783,66138+30])
                  Some
                    []
                    pattern (typing/typedecl.ml[1783,66138+31]..[1783,66138+35])
                      Ppat_var "path" (typing/typedecl.ml[1783,66138+31]..[1783,66138+35])
                expression (typing/typedecl.ml[1784,66177+6]..[1786,66256+26])
                  Pexp_apply
                  expression (typing/typedecl.ml[1784,66177+6]..[1784,66177+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1784,66177+6]..[1784,66177+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1784,66177+14]..[1784,66177+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1784,66177+14]..[1784,66177+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1784,66177+18]..[1784,66177+30])
                        Pexp_constant PConst_string("@[%s@ %a@]",(typing/typedecl.ml[1784,66177+19]..[1784,66177+29]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1785,66208+8]..[1785,66208+47])
                        Pexp_constant PConst_string("Cannot extend private type definition",(typing/typedecl.ml[1785,66208+9]..[1785,66208+46]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1786,66256+8]..[1786,66256+21])
                        Pexp_ident "Printtyp.path" (typing/typedecl.ml[1786,66256+8]..[1786,66256+21])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1786,66256+22]..[1786,66256+26])
                        Pexp_ident "path" (typing/typedecl.ml[1786,66256+22]..[1786,66256+26])
                  ]
              <case>
                pattern (typing/typedecl.ml[1787,66283+4]..[1787,66283+28])
                  Ppat_construct "Not_extensible_type" (typing/typedecl.ml[1787,66283+4]..[1787,66283+23])
                  Some
                    []
                    pattern (typing/typedecl.ml[1787,66283+24]..[1787,66283+28])
                      Ppat_var "path" (typing/typedecl.ml[1787,66283+24]..[1787,66283+28])
                expression (typing/typedecl.ml[1788,66315+6]..[1791,66403+27])
                  Pexp_apply
                  expression (typing/typedecl.ml[1788,66315+6]..[1788,66315+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1788,66315+6]..[1788,66315+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1788,66315+14]..[1788,66315+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1788,66315+14]..[1788,66315+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1788,66315+18]..[1788,66315+34])
                        Pexp_constant PConst_string("@[%s@ %a@ %s@]",(typing/typedecl.ml[1788,66315+19]..[1788,66315+33]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1789,66350+8]..[1789,66350+25])
                        Pexp_constant PConst_string("Type definition",(typing/typedecl.ml[1789,66350+9]..[1789,66350+24]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1790,66376+8]..[1790,66376+21])
                        Pexp_ident "Printtyp.path" (typing/typedecl.ml[1790,66376+8]..[1790,66376+21])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1790,66376+22]..[1790,66376+26])
                        Pexp_ident "path" (typing/typedecl.ml[1790,66376+22]..[1790,66376+26])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1791,66403+8]..[1791,66403+27])
                        Pexp_constant PConst_string("is not extensible",(typing/typedecl.ml[1791,66403+9]..[1791,66403+26]),None)
                  ]
              <case>
                pattern (typing/typedecl.ml[1792,66431+4]..[1792,66431+39])
                  Ppat_construct "Extension_mismatch" (typing/typedecl.ml[1792,66431+4]..[1792,66431+22])
                  Some
                    []
                    pattern (typing/typedecl.ml[1792,66431+23]..[1792,66431+39])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1792,66431+24]..[1792,66431+28])
                          Ppat_var "path" (typing/typedecl.ml[1792,66431+24]..[1792,66431+28])
                        pattern (typing/typedecl.ml[1792,66431+30]..[1792,66431+33])
                          Ppat_var "env" (typing/typedecl.ml[1792,66431+30]..[1792,66431+33])
                        pattern (typing/typedecl.ml[1792,66431+35]..[1792,66431+38])
                          Ppat_var "err" (typing/typedecl.ml[1792,66431+35]..[1792,66431+38])
                      ]
                expression (typing/typedecl.ml[1793,66474+6]..[1798,66717+11])
                  Pexp_apply
                  expression (typing/typedecl.ml[1793,66474+6]..[1793,66474+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1793,66474+6]..[1793,66474+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1793,66474+14]..[1793,66474+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1793,66474+14]..[1793,66474+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1793,66474+18]..[1793,66474+53])
                        Pexp_constant PConst_string("@[<v>@[<hov>%s@ %s@;<1 2>%s@]%a@]",(typing/typedecl.ml[1793,66474+19]..[1793,66474+52]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1794,66528+8]..[1794,66528+24])
                        Pexp_constant PConst_string("This extension",(typing/typedecl.ml[1794,66528+9]..[1794,66528+23]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1794,66528+25]..[1794,66528+64])
                        Pexp_constant PConst_string("does not match the definition of type",(typing/typedecl.ml[1794,66528+26]..[1794,66528+63]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1795,66593+8]..[1795,66593+24])
                        Pexp_apply
                        expression (typing/typedecl.ml[1795,66593+9]..[1795,66593+18])
                          Pexp_ident "Path.name" (typing/typedecl.ml[1795,66593+9]..[1795,66593+18])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1795,66593+19]..[1795,66593+23])
                              Pexp_ident "path" (typing/typedecl.ml[1795,66593+19]..[1795,66593+23])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1796,66618+8]..[1797,66660+56])
                        Pexp_apply
                        expression (typing/typedecl.ml[1796,66618+9]..[1796,66618+41])
                          Pexp_ident "Includecore.report_type_mismatch" (typing/typedecl.ml[1796,66618+9]..[1796,66618+41])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1797,66660+11]..[1797,66660+21])
                              Pexp_constant PConst_string("the type",(typing/typedecl.ml[1797,66660+12]..[1797,66660+20]),None)
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1797,66660+22]..[1797,66660+38])
                              Pexp_constant PConst_string("this extension",(typing/typedecl.ml[1797,66660+23]..[1797,66660+37]),None)
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1797,66660+39]..[1797,66660+51])
                              Pexp_constant PConst_string("definition",(typing/typedecl.ml[1797,66660+40]..[1797,66660+50]),None)
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1797,66660+52]..[1797,66660+55])
                              Pexp_ident "env" (typing/typedecl.ml[1797,66660+52]..[1797,66660+55])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1798,66717+8]..[1798,66717+11])
                        Pexp_ident "err" (typing/typedecl.ml[1798,66717+8]..[1798,66717+11])
                  ]
              <case>
                pattern (typing/typedecl.ml[1799,66729+4]..[1799,66729+37])
                  Ppat_construct "Rebind_wrong_type" (typing/typedecl.ml[1799,66729+4]..[1799,66729+21])
                  Some
                    []
                    pattern (typing/typedecl.ml[1799,66729+22]..[1799,66729+37])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1799,66729+23]..[1799,66729+26])
                          Ppat_var "lid" (typing/typedecl.ml[1799,66729+23]..[1799,66729+26])
                        pattern (typing/typedecl.ml[1799,66729+28]..[1799,66729+31])
                          Ppat_var "env" (typing/typedecl.ml[1799,66729+28]..[1799,66729+31])
                        pattern (typing/typedecl.ml[1799,66729+33]..[1799,66729+36])
                          Ppat_var "err" (typing/typedecl.ml[1799,66729+33]..[1799,66729+36])
                      ]
                expression (typing/typedecl.ml[1800,66770+6]..[1805,66963+56])
                  Pexp_apply
                  expression (typing/typedecl.ml[1800,66770+6]..[1800,66770+39])
                    Pexp_ident "Printtyp.report_unification_error" (typing/typedecl.ml[1800,66770+6]..[1800,66770+39])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1800,66770+40]..[1800,66770+43])
                        Pexp_ident "ppf" (typing/typedecl.ml[1800,66770+40]..[1800,66770+43])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1800,66770+44]..[1800,66770+47])
                        Pexp_ident "env" (typing/typedecl.ml[1800,66770+44]..[1800,66770+47])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1800,66770+48]..[1800,66770+51])
                        Pexp_ident "err" (typing/typedecl.ml[1800,66770+48]..[1800,66770+51])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1801,66822+8]..[1803,66901+36])
                        Pexp_function
                        [
                          <case>
                            pattern (typing/typedecl.ml[1801,66822+18]..[1801,66822+21])
                              Ppat_var "ppf" (typing/typedecl.ml[1801,66822+18]..[1801,66822+21])
                            expression (typing/typedecl.ml[1802,66847+11]..[1803,66901+35])
                              Pexp_apply
                              expression (typing/typedecl.ml[1802,66847+11]..[1802,66847+18])
                                Pexp_ident "fprintf" (typing/typedecl.ml[1802,66847+11]..[1802,66847+18])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1802,66847+19]..[1802,66847+22])
                                    Pexp_ident "ppf" (typing/typedecl.ml[1802,66847+19]..[1802,66847+22])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1802,66847+23]..[1802,66847+53])
                                    Pexp_constant PConst_string("The constructor %a@ has type",(typing/typedecl.ml[1802,66847+24]..[1802,66847+52]),None)
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1803,66901+13]..[1803,66901+31])
                                    Pexp_ident "Printtyp.longident" (typing/typedecl.ml[1803,66901+13]..[1803,66901+31])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1803,66901+32]..[1803,66901+35])
                                    Pexp_ident "lid" (typing/typedecl.ml[1803,66901+32]..[1803,66901+35])
                              ]
                        ]
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1804,66938+8]..[1805,66963+56])
                        Pexp_function
                        [
                          <case>
                            pattern (typing/typedecl.ml[1804,66938+18]..[1804,66938+21])
                              Ppat_var "ppf" (typing/typedecl.ml[1804,66938+18]..[1804,66938+21])
                            expression (typing/typedecl.ml[1805,66963+11]..[1805,66963+55])
                              Pexp_apply
                              expression (typing/typedecl.ml[1805,66963+11]..[1805,66963+18])
                                Pexp_ident "fprintf" (typing/typedecl.ml[1805,66963+11]..[1805,66963+18])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1805,66963+19]..[1805,66963+22])
                                    Pexp_ident "ppf" (typing/typedecl.ml[1805,66963+19]..[1805,66963+22])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl.ml[1805,66963+23]..[1805,66963+55])
                                    Pexp_constant PConst_string("but was expected to be of type",(typing/typedecl.ml[1805,66963+24]..[1805,66963+54]),None)
                              ]
                        ]
                  ]
              <case>
                pattern (typing/typedecl.ml[1806,67020+4]..[1806,67020+32])
                  Ppat_construct "Rebind_mismatch" (typing/typedecl.ml[1806,67020+4]..[1806,67020+19])
                  Some
                    []
                    pattern (typing/typedecl.ml[1806,67020+20]..[1806,67020+32])
                      Ppat_tuple
                      [
                        pattern (typing/typedecl.ml[1806,67020+21]..[1806,67020+24])
                          Ppat_var "lid" (typing/typedecl.ml[1806,67020+21]..[1806,67020+24])
                        pattern (typing/typedecl.ml[1806,67020+26]..[1806,67020+27])
                          Ppat_var "p" (typing/typedecl.ml[1806,67020+26]..[1806,67020+27])
                        pattern (typing/typedecl.ml[1806,67020+29]..[1806,67020+31])
                          Ppat_var "p'" (typing/typedecl.ml[1806,67020+29]..[1806,67020+31])
                      ]
                expression (typing/typedecl.ml[1807,67056+6]..[1812,67244+48])
                  Pexp_apply
                  expression (typing/typedecl.ml[1807,67056+6]..[1807,67056+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1807,67056+6]..[1807,67056+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1807,67056+14]..[1807,67056+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1807,67056+14]..[1807,67056+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1808,67074+8]..[1808,67074+40])
                        Pexp_constant PConst_string("@[%s@ %a@ %s@ %s@ %s@ %s@ %s@]",(typing/typedecl.ml[1808,67074+9]..[1808,67074+39]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1809,67115+8]..[1809,67115+25])
                        Pexp_constant PConst_string("The constructor",(typing/typedecl.ml[1809,67115+9]..[1809,67115+24]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1809,67115+26]..[1809,67115+44])
                        Pexp_ident "Printtyp.longident" (typing/typedecl.ml[1809,67115+26]..[1809,67115+44])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1809,67115+45]..[1809,67115+48])
                        Pexp_ident "lid" (typing/typedecl.ml[1809,67115+45]..[1809,67115+48])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1810,67164+8]..[1810,67164+22])
                        Pexp_constant PConst_string("extends type",(typing/typedecl.ml[1810,67164+9]..[1810,67164+21]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1810,67164+23]..[1810,67164+36])
                        Pexp_apply
                        expression (typing/typedecl.ml[1810,67164+24]..[1810,67164+33])
                          Pexp_ident "Path.name" (typing/typedecl.ml[1810,67164+24]..[1810,67164+33])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1810,67164+34]..[1810,67164+35])
                              Pexp_ident "p" (typing/typedecl.ml[1810,67164+34]..[1810,67164+35])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1811,67201+8]..[1811,67201+42])
                        Pexp_constant PConst_string("whose declaration does not match",(typing/typedecl.ml[1811,67201+9]..[1811,67201+41]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1812,67244+8]..[1812,67244+33])
                        Pexp_constant PConst_string("the declaration of type",(typing/typedecl.ml[1812,67244+9]..[1812,67244+32]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1812,67244+34]..[1812,67244+48])
                        Pexp_apply
                        expression (typing/typedecl.ml[1812,67244+35]..[1812,67244+44])
                          Pexp_ident "Path.name" (typing/typedecl.ml[1812,67244+35]..[1812,67244+44])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl.ml[1812,67244+45]..[1812,67244+47])
                              Pexp_ident "p'" (typing/typedecl.ml[1812,67244+45]..[1812,67244+47])
                        ]
                  ]
              <case>
                pattern (typing/typedecl.ml[1813,67293+4]..[1813,67293+22])
                  Ppat_construct "Rebind_private" (typing/typedecl.ml[1813,67293+4]..[1813,67293+18])
                  Some
                    []
                    pattern (typing/typedecl.ml[1813,67293+19]..[1813,67293+22])
                      Ppat_var "lid" (typing/typedecl.ml[1813,67293+19]..[1813,67293+22])
                expression (typing/typedecl.ml[1814,67319+6]..[1817,67411+20])
                  Pexp_apply
                  expression (typing/typedecl.ml[1814,67319+6]..[1814,67319+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1814,67319+6]..[1814,67319+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1814,67319+14]..[1814,67319+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1814,67319+14]..[1814,67319+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1814,67319+18]..[1814,67319+34])
                        Pexp_constant PConst_string("@[%s@ %a@ %s@]",(typing/typedecl.ml[1814,67319+19]..[1814,67319+33]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1815,67354+8]..[1815,67354+25])
                        Pexp_constant PConst_string("The constructor",(typing/typedecl.ml[1815,67354+9]..[1815,67354+24]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1816,67380+8]..[1816,67380+26])
                        Pexp_ident "Printtyp.longident" (typing/typedecl.ml[1816,67380+8]..[1816,67380+26])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1816,67380+27]..[1816,67380+30])
                        Pexp_ident "lid" (typing/typedecl.ml[1816,67380+27]..[1816,67380+30])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1817,67411+8]..[1817,67411+20])
                        Pexp_constant PConst_string("is private",(typing/typedecl.ml[1817,67411+9]..[1817,67411+19]),None)
                  ]
              <case>
                pattern (typing/typedecl.ml[1818,67432+4]..[1818,67432+57])
                  Ppat_construct "Variance" (typing/typedecl.ml[1818,67432+4]..[1818,67432+12])
                  Some
                    []
                    pattern (typing/typedecl.ml[1818,67432+13]..[1818,67432+57])
                      Ppat_construct "Typedecl_variance.Bad_variance" (typing/typedecl.ml[1818,67432+14]..[1818,67432+44])
                      Some
                        []
                        pattern (typing/typedecl.ml[1818,67432+45]..[1818,67432+56])
                          Ppat_tuple
                          [
                            pattern (typing/typedecl.ml[1818,67432+46]..[1818,67432+47])
                              Ppat_var "n" (typing/typedecl.ml[1818,67432+46]..[1818,67432+47])
                            pattern (typing/typedecl.ml[1818,67432+49]..[1818,67432+51])
                              Ppat_var "v1" (typing/typedecl.ml[1818,67432+49]..[1818,67432+51])
                            pattern (typing/typedecl.ml[1818,67432+53]..[1818,67432+55])
                              Ppat_var "v2" (typing/typedecl.ml[1818,67432+53]..[1818,67432+55])
                          ]
                expression (typing/typedecl.ml[1819,67493+6]..[1849,68779+41])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typedecl.ml[1819,67493+10]..[1819,67493+18])
                        Ppat_var "variance" (typing/typedecl.ml[1819,67493+10]..[1819,67493+18])
                      expression (typing/typedecl.ml[1819,67493+19]..[1825,67734+66]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typedecl.ml[1819,67493+19]..[1819,67493+26])
                          Ppat_tuple
                          [
                            pattern (typing/typedecl.ml[1819,67493+20]..[1819,67493+21])
                              Ppat_var "p" (typing/typedecl.ml[1819,67493+20]..[1819,67493+21])
                            pattern (typing/typedecl.ml[1819,67493+22]..[1819,67493+23])
                              Ppat_var "n" (typing/typedecl.ml[1819,67493+22]..[1819,67493+23])
                            pattern (typing/typedecl.ml[1819,67493+24]..[1819,67493+25])
                              Ppat_var "i" (typing/typedecl.ml[1819,67493+24]..[1819,67493+25])
                          ]
                        expression (typing/typedecl.ml[1820,67522+8]..[1825,67734+66])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typedecl.ml[1820,67522+12]..[1820,67522+15])
                                Ppat_var "inj" (typing/typedecl.ml[1820,67522+12]..[1820,67522+15])
                              expression (typing/typedecl.ml[1820,67522+18]..[1820,67522+48])
                                Pexp_ifthenelse
                                expression (typing/typedecl.ml[1820,67522+21]..[1820,67522+22])
                                  Pexp_ident "i" (typing/typedecl.ml[1820,67522+21]..[1820,67522+22])
                                expression (typing/typedecl.ml[1820,67522+28]..[1820,67522+40])
                                  Pexp_constant PConst_string("injective ",(typing/typedecl.ml[1820,67522+29]..[1820,67522+39]),None)
                                Some
                                  expression (typing/typedecl.ml[1820,67522+46]..[1820,67522+48])
                                    Pexp_constant PConst_string("",(typing/typedecl.ml[1820,67522+47]..[1820,67522+47]),None)
                          ]
                          expression (typing/typedecl.ml[1821,67574+8]..[1825,67734+66])
                            Pexp_match
                            expression (typing/typedecl.ml[1821,67574+14]..[1821,67574+18])
                              Pexp_tuple
                              [
                                expression (typing/typedecl.ml[1821,67574+14]..[1821,67574+15])
                                  Pexp_ident "p" (typing/typedecl.ml[1821,67574+14]..[1821,67574+15])
                                expression (typing/typedecl.ml[1821,67574+17]..[1821,67574+18])
                                  Pexp_ident "n" (typing/typedecl.ml[1821,67574+17]..[1821,67574+18])
                              ]
                            [
                              <case>
                                pattern (typing/typedecl.ml[1822,67598+10]..[1822,67598+21])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typedecl.ml[1822,67598+10]..[1822,67598+14])
                                      Ppat_construct "true" (typing/typedecl.ml[1822,67598+10]..[1822,67598+14])
                                      None
                                    pattern (typing/typedecl.ml[1822,67598+17]..[1822,67598+21])
                                      Ppat_construct "true" (typing/typedecl.ml[1822,67598+17]..[1822,67598+21])
                                      None
                                  ]
                                expression (typing/typedecl.ml[1822,67598+26]..[1822,67598+43])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[1822,67598+30]..[1822,67598+31])
                                    Pexp_ident "^" (typing/typedecl.ml[1822,67598+30]..[1822,67598+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1822,67598+26]..[1822,67598+29])
                                        Pexp_ident "inj" (typing/typedecl.ml[1822,67598+26]..[1822,67598+29])
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1822,67598+32]..[1822,67598+43])
                                        Pexp_constant PConst_string("invariant",(typing/typedecl.ml[1822,67598+33]..[1822,67598+42]),None)
                                  ]
                              <case>
                                pattern (typing/typedecl.ml[1823,67642+10]..[1823,67642+22])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typedecl.ml[1823,67642+10]..[1823,67642+14])
                                      Ppat_construct "true" (typing/typedecl.ml[1823,67642+10]..[1823,67642+14])
                                      None
                                    pattern (typing/typedecl.ml[1823,67642+17]..[1823,67642+22])
                                      Ppat_construct "false" (typing/typedecl.ml[1823,67642+17]..[1823,67642+22])
                                      None
                                  ]
                                expression (typing/typedecl.ml[1823,67642+26]..[1823,67642+43])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[1823,67642+30]..[1823,67642+31])
                                    Pexp_ident "^" (typing/typedecl.ml[1823,67642+30]..[1823,67642+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1823,67642+26]..[1823,67642+29])
                                        Pexp_ident "inj" (typing/typedecl.ml[1823,67642+26]..[1823,67642+29])
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1823,67642+32]..[1823,67642+43])
                                        Pexp_constant PConst_string("covariant",(typing/typedecl.ml[1823,67642+33]..[1823,67642+42]),None)
                                  ]
                              <case>
                                pattern (typing/typedecl.ml[1824,67686+10]..[1824,67686+21])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typedecl.ml[1824,67686+10]..[1824,67686+15])
                                      Ppat_construct "false" (typing/typedecl.ml[1824,67686+10]..[1824,67686+15])
                                      None
                                    pattern (typing/typedecl.ml[1824,67686+17]..[1824,67686+21])
                                      Ppat_construct "true" (typing/typedecl.ml[1824,67686+17]..[1824,67686+21])
                                      None
                                  ]
                                expression (typing/typedecl.ml[1824,67686+26]..[1824,67686+47])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[1824,67686+30]..[1824,67686+31])
                                    Pexp_ident "^" (typing/typedecl.ml[1824,67686+30]..[1824,67686+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1824,67686+26]..[1824,67686+29])
                                        Pexp_ident "inj" (typing/typedecl.ml[1824,67686+26]..[1824,67686+29])
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1824,67686+32]..[1824,67686+47])
                                        Pexp_constant PConst_string("contravariant",(typing/typedecl.ml[1824,67686+33]..[1824,67686+46]),None)
                                  ]
                              <case>
                                pattern (typing/typedecl.ml[1825,67734+10]..[1825,67734+22])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typedecl.ml[1825,67734+10]..[1825,67734+15])
                                      Ppat_construct "false" (typing/typedecl.ml[1825,67734+10]..[1825,67734+15])
                                      None
                                    pattern (typing/typedecl.ml[1825,67734+17]..[1825,67734+22])
                                      Ppat_construct "false" (typing/typedecl.ml[1825,67734+17]..[1825,67734+22])
                                      None
                                  ]
                                expression (typing/typedecl.ml[1825,67734+26]..[1825,67734+66])
                                  Pexp_ifthenelse
                                  expression (typing/typedecl.ml[1825,67734+29]..[1825,67734+37])
                                    Pexp_apply
                                    expression (typing/typedecl.ml[1825,67734+33]..[1825,67734+34])
                                      Pexp_ident "=" (typing/typedecl.ml[1825,67734+33]..[1825,67734+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1825,67734+29]..[1825,67734+32])
                                          Pexp_ident "inj" (typing/typedecl.ml[1825,67734+29]..[1825,67734+32])
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl.ml[1825,67734+35]..[1825,67734+37])
                                          Pexp_constant PConst_string("",(typing/typedecl.ml[1825,67734+36]..[1825,67734+36]),None)
                                    ]
                                  expression (typing/typedecl.ml[1825,67734+43]..[1825,67734+57])
                                    Pexp_constant PConst_string("unrestricted",(typing/typedecl.ml[1825,67734+44]..[1825,67734+56]),None)
                                  Some
                                    expression (typing/typedecl.ml[1825,67734+63]..[1825,67734+66])
                                      Pexp_ident "inj" (typing/typedecl.ml[1825,67734+63]..[1825,67734+66])
                            ]
                  ]
                  expression (typing/typedecl.ml[1827,67810+6]..[1849,68779+41])
                    Pexp_sequence
                    expression (typing/typedecl.ml[1827,67810+6]..[1844,68611+39])
                      Pexp_match
                      expression (typing/typedecl.ml[1827,67810+13]..[1827,67810+14])
                        Pexp_ident "n" (typing/typedecl.ml[1827,67810+13]..[1827,67810+14])
                      [
                        <case>
                          pattern (typing/typedecl.ml[1828,67830+9]..[1828,67830+31])
                            Ppat_construct "Variance_not_reflected" (typing/typedecl.ml[1828,67830+9]..[1828,67830+31])
                            None
                          expression (typing/typedecl.ml[1829,67865+11]..[1831,67974+69])
                            Pexp_apply
                            expression (typing/typedecl.ml[1829,67865+11]..[1829,67865+18])
                              Pexp_ident "fprintf" (typing/typedecl.ml[1829,67865+11]..[1829,67865+18])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1829,67865+19]..[1829,67865+22])
                                  Pexp_ident "ppf" (typing/typedecl.ml[1829,67865+19]..[1829,67865+22])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1829,67865+23]..[1829,67865+37])
                                  Pexp_constant PConst_string("@[%s@ %s@ It",(typing/typedecl.ml[1829,67865+24]..[1829,67865+36]),None)
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1830,67903+13]..[1830,67903+70])
                                  Pexp_constant PConst_string("In this definition, a type variable has a variance that",(typing/typedecl.ml[1830,67903+14]..[1830,67903+69]),None)
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1831,67974+13]..[1831,67974+69])
                                  Pexp_constant PConst_string("is not reflected by its occurrence in type parameters.",(typing/typedecl.ml[1831,67974+14]..[1831,67974+68]),None)
                            ]
                        <case>
                          pattern (typing/typedecl.ml[1832,68044+9]..[1832,68044+20])
                            Ppat_construct "No_variable" (typing/typedecl.ml[1832,68044+9]..[1832,68044+20])
                            None
                          expression (typing/typedecl.ml[1833,68068+11]..[1835,68173+40])
                            Pexp_apply
                            expression (typing/typedecl.ml[1833,68068+11]..[1833,68068+18])
                              Pexp_ident "fprintf" (typing/typedecl.ml[1833,68068+11]..[1833,68068+18])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1833,68068+19]..[1833,68068+22])
                                  Pexp_ident "ppf" (typing/typedecl.ml[1833,68068+19]..[1833,68068+22])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1833,68068+23]..[1833,68068+35])
                                  Pexp_constant PConst_string("@[%s@ %s@]",(typing/typedecl.ml[1833,68068+24]..[1833,68068+34]),None)
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1834,68104+13]..[1834,68104+68])
                                  Pexp_constant PConst_string("In this definition, a type variable cannot be deduced",(typing/typedecl.ml[1834,68104+14]..[1834,68104+67]),None)
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1835,68173+13]..[1835,68173+40])
                                  Pexp_constant PConst_string("from the type parameters.",(typing/typedecl.ml[1835,68173+14]..[1835,68173+39]),None)
                            ]
                        <case>
                          pattern (typing/typedecl.ml[1836,68214+9]..[1836,68214+31])
                            Ppat_construct "Variance_not_deducible" (typing/typedecl.ml[1836,68214+9]..[1836,68214+31])
                            None
                          expression (typing/typedecl.ml[1837,68249+11]..[1839,68358+58])
                            Pexp_apply
                            expression (typing/typedecl.ml[1837,68249+11]..[1837,68249+18])
                              Pexp_ident "fprintf" (typing/typedecl.ml[1837,68249+11]..[1837,68249+18])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1837,68249+19]..[1837,68249+22])
                                  Pexp_ident "ppf" (typing/typedecl.ml[1837,68249+19]..[1837,68249+22])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1837,68249+23]..[1837,68249+37])
                                  Pexp_constant PConst_string("@[%s@ %s@ It",(typing/typedecl.ml[1837,68249+24]..[1837,68249+36]),None)
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1838,68287+13]..[1838,68287+70])
                                  Pexp_constant PConst_string("In this definition, a type variable has a variance that",(typing/typedecl.ml[1838,68287+14]..[1838,68287+69]),None)
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1839,68358+13]..[1839,68358+58])
                                  Pexp_constant PConst_string("cannot be deduced from the type parameters.",(typing/typedecl.ml[1839,68358+14]..[1839,68358+57]),None)
                            ]
                        <case>
                          pattern (typing/typedecl.ml[1840,68417+9]..[1840,68417+33])
                            Ppat_construct "Variance_not_satisfied" (typing/typedecl.ml[1840,68417+9]..[1840,68417+31])
                            Some
                              []
                              pattern (typing/typedecl.ml[1840,68417+32]..[1840,68417+33])
                                Ppat_var "n" (typing/typedecl.ml[1840,68417+32]..[1840,68417+33])
                          expression (typing/typedecl.ml[1841,68454+11]..[1844,68611+38])
                            Pexp_apply
                            expression (typing/typedecl.ml[1841,68454+11]..[1841,68454+18])
                              Pexp_ident "fprintf" (typing/typedecl.ml[1841,68454+11]..[1841,68454+18])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1841,68454+19]..[1841,68454+22])
                                  Pexp_ident "ppf" (typing/typedecl.ml[1841,68454+19]..[1841,68454+22])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1841,68454+23]..[1841,68454+58])
                                  Pexp_constant PConst_string("@[%s@ %s@ The %d%s type parameter",(typing/typedecl.ml[1841,68454+24]..[1841,68454+57]),None)
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1842,68513+13]..[1842,68513+53])
                                  Pexp_constant PConst_string("In this definition, expected parameter",(typing/typedecl.ml[1842,68513+14]..[1842,68513+52]),None)
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1843,68567+13]..[1843,68567+43])
                                  Pexp_constant PConst_string("variances are not satisfied.",(typing/typedecl.ml[1843,68567+14]..[1843,68567+42]),None)
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1844,68611+13]..[1844,68611+14])
                                  Pexp_ident "n" (typing/typedecl.ml[1844,68611+13]..[1844,68611+14])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1844,68611+15]..[1844,68611+38])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[1844,68611+16]..[1844,68611+35])
                                    Pexp_ident "Misc.ordinal_suffix" (typing/typedecl.ml[1844,68611+16]..[1844,68611+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1844,68611+36]..[1844,68611+37])
                                        Pexp_ident "n" (typing/typedecl.ml[1844,68611+36]..[1844,68611+37])
                                  ]
                            ]
                      ]
                    expression (typing/typedecl.ml[1845,68652+6]..[1849,68779+41])
                      Pexp_match
                      expression (typing/typedecl.ml[1845,68652+13]..[1845,68652+14])
                        Pexp_ident "n" (typing/typedecl.ml[1845,68652+13]..[1845,68652+14])
                      [
                        <case>
                          pattern (typing/typedecl.ml[1846,68672+9]..[1846,68672+20])
                            Ppat_construct "No_variable" (typing/typedecl.ml[1846,68672+9]..[1846,68672+20])
                            None
                          expression (typing/typedecl.ml[1846,68672+24]..[1846,68672+26])
                            Pexp_construct "()" (typing/typedecl.ml[1846,68672+24]..[1846,68672+26])
                            None
                        <case>
                          pattern (typing/typedecl.ml[1847,68699+9]..[1847,68699+10])
                            Ppat_any
                          expression (typing/typedecl.ml[1848,68713+11]..[1849,68779+40])
                            Pexp_apply
                            expression (typing/typedecl.ml[1848,68713+11]..[1848,68713+18])
                              Pexp_ident "fprintf" (typing/typedecl.ml[1848,68713+11]..[1848,68713+18])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1848,68713+19]..[1848,68713+22])
                                  Pexp_ident "ppf" (typing/typedecl.ml[1848,68713+19]..[1848,68713+22])
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1848,68713+23]..[1848,68713+65])
                                  Pexp_constant PConst_string(" was expected to be %s,@ but it is %s.@]",(typing/typedecl.ml[1848,68713+24]..[1848,68713+64]),None)
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1849,68779+13]..[1849,68779+26])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[1849,68779+14]..[1849,68779+22])
                                    Pexp_ident "variance" (typing/typedecl.ml[1849,68779+14]..[1849,68779+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1849,68779+23]..[1849,68779+25])
                                        Pexp_ident "v2" (typing/typedecl.ml[1849,68779+23]..[1849,68779+25])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/typedecl.ml[1849,68779+27]..[1849,68779+40])
                                  Pexp_apply
                                  expression (typing/typedecl.ml[1849,68779+28]..[1849,68779+36])
                                    Pexp_ident "variance" (typing/typedecl.ml[1849,68779+28]..[1849,68779+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typedecl.ml[1849,68779+37]..[1849,68779+39])
                                        Pexp_ident "v1" (typing/typedecl.ml[1849,68779+37]..[1849,68779+39])
                                  ]
                            ]
                      ]
              <case>
                pattern (typing/typedecl.ml[1850,68821+4]..[1850,68821+34])
                  Ppat_construct "Unavailable_type_constructor" (typing/typedecl.ml[1850,68821+4]..[1850,68821+32])
                  Some
                    []
                    pattern (typing/typedecl.ml[1850,68821+33]..[1850,68821+34])
                      Ppat_var "p" (typing/typedecl.ml[1850,68821+33]..[1850,68821+34])
                expression (typing/typedecl.ml[1851,68859+6]..[1851,68859+77])
                  Pexp_apply
                  expression (typing/typedecl.ml[1851,68859+6]..[1851,68859+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1851,68859+6]..[1851,68859+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1851,68859+14]..[1851,68859+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1851,68859+14]..[1851,68859+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1851,68859+18]..[1851,68859+61])
                        Pexp_constant PConst_string("The definition of type %a@ is unavailable",(typing/typedecl.ml[1851,68859+19]..[1851,68859+60]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1851,68859+62]..[1851,68859+75])
                        Pexp_ident "Printtyp.path" (typing/typedecl.ml[1851,68859+62]..[1851,68859+75])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1851,68859+76]..[1851,68859+77])
                        Pexp_ident "p" (typing/typedecl.ml[1851,68859+76]..[1851,68859+77])
                  ]
              <case>
                pattern (typing/typedecl.ml[1852,68937+4]..[1852,68937+48])
                  Ppat_construct "Variance" (typing/typedecl.ml[1852,68937+4]..[1852,68937+12])
                  Some
                    []
                    pattern (typing/typedecl.ml[1852,68937+13]..[1852,68937+48])
                      Ppat_construct "Typedecl_variance.Varying_anonymous" (typing/typedecl.ml[1852,68937+13]..[1852,68937+48])
                      None
                expression (typing/typedecl.ml[1853,68989+6]..[1855,69092+27])
                  Pexp_apply
                  expression (typing/typedecl.ml[1853,68989+6]..[1853,68989+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1853,68989+6]..[1853,68989+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1853,68989+14]..[1853,68989+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1853,68989+14]..[1853,68989+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1853,68989+18]..[1853,68989+34])
                        Pexp_constant PConst_string("@[%s@ %s@ %s@]",(typing/typedecl.ml[1853,68989+19]..[1853,68989+33]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1854,69024+8]..[1854,69024+34])
                        Pexp_constant PConst_string("In this GADT definition,",(typing/typedecl.ml[1854,69024+9]..[1854,69024+33]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1854,69024+35]..[1854,69024+67])
                        Pexp_constant PConst_string("the variance of some parameter",(typing/typedecl.ml[1854,69024+36]..[1854,69024+66]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1855,69092+8]..[1855,69092+27])
                        Pexp_constant PConst_string("cannot be checked",(typing/typedecl.ml[1855,69092+9]..[1855,69092+26]),None)
                  ]
              <case>
                pattern (typing/typedecl.ml[1856,69120+4]..[1856,69120+20])
                  Ppat_construct "Val_in_structure" (typing/typedecl.ml[1856,69120+4]..[1856,69120+20])
                  None
                expression (typing/typedecl.ml[1857,69144+6]..[1857,69144+69])
                  Pexp_apply
                  expression (typing/typedecl.ml[1857,69144+6]..[1857,69144+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1857,69144+6]..[1857,69144+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1857,69144+14]..[1857,69144+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1857,69144+14]..[1857,69144+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1857,69144+18]..[1857,69144+69])
                        Pexp_constant PConst_string("Value declarations are only allowed in signatures",(typing/typedecl.ml[1857,69144+19]..[1857,69144+68]),None)
                  ]
              <case>
                pattern (typing/typedecl.ml[1858,69214+4]..[1858,69214+35])
                  Ppat_construct "Multiple_native_repr_attributes" (typing/typedecl.ml[1858,69214+4]..[1858,69214+35])
                  None
                expression (typing/typedecl.ml[1859,69253+6]..[1859,69253+64])
                  Pexp_apply
                  expression (typing/typedecl.ml[1859,69253+6]..[1859,69253+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1859,69253+6]..[1859,69253+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1859,69253+14]..[1859,69253+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1859,69253+14]..[1859,69253+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1859,69253+18]..[1859,69253+64])
                        Pexp_constant PConst_string("Too many [@@unboxed]/[@@untagged] attributes",(typing/typedecl.ml[1859,69253+19]..[1859,69253+63]),None)
                  ]
              <case>
                pattern (typing/typedecl.ml[1860,69318+4]..[1860,69318+38])
                  Ppat_construct "Cannot_unbox_or_untag_type" (typing/typedecl.ml[1860,69318+4]..[1860,69318+30])
                  Some
                    []
                    pattern (typing/typedecl.ml[1860,69318+31]..[1860,69318+38])
                      Ppat_construct "Unboxed" (typing/typedecl.ml[1860,69318+31]..[1860,69318+38])
                      None
                expression (typing/typedecl.ml[1861,69360+6]..[1862,69419+76])
                  Pexp_apply
                  expression (typing/typedecl.ml[1861,69360+6]..[1861,69360+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1861,69360+6]..[1861,69360+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1861,69360+14]..[1861,69360+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1861,69360+14]..[1861,69360+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1861,69360+18]..[1862,69419+76])
                        Pexp_constant PConst_string("@[Don't know how to unbox this type.@ Only float, int32, int64 and nativeint can be unboxed.@]",(typing/typedecl.ml[1861,69360+19]..[1862,69419+75]),None)
                  ]
              <case>
                pattern (typing/typedecl.ml[1863,69496+4]..[1863,69496+39])
                  Ppat_construct "Cannot_unbox_or_untag_type" (typing/typedecl.ml[1863,69496+4]..[1863,69496+30])
                  Some
                    []
                    pattern (typing/typedecl.ml[1863,69496+31]..[1863,69496+39])
                      Ppat_construct "Untagged" (typing/typedecl.ml[1863,69496+31]..[1863,69496+39])
                      None
                expression (typing/typedecl.ml[1864,69539+6]..[1865,69598+47])
                  Pexp_apply
                  expression (typing/typedecl.ml[1864,69539+6]..[1864,69539+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1864,69539+6]..[1864,69539+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1864,69539+14]..[1864,69539+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1864,69539+14]..[1864,69539+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1864,69539+18]..[1865,69598+47])
                        Pexp_constant PConst_string("@[Don't know how to untag this type.@ Only int can be untagged.@]",(typing/typedecl.ml[1864,69539+19]..[1865,69598+46]),None)
                  ]
              <case>
                pattern (typing/typedecl.ml[1866,69646+4]..[1866,69646+38])
                  Ppat_construct "Deep_unbox_or_untag_attribute" (typing/typedecl.ml[1866,69646+4]..[1866,69646+33])
                  Some
                    []
                    pattern (typing/typedecl.ml[1866,69646+34]..[1866,69646+38])
                      Ppat_var "kind" (typing/typedecl.ml[1866,69646+34]..[1866,69646+38])
                expression (typing/typedecl.ml[1867,69688+6]..[1871,69873+73])
                  Pexp_apply
                  expression (typing/typedecl.ml[1867,69688+6]..[1867,69688+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1867,69688+6]..[1867,69688+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1867,69688+14]..[1867,69688+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1867,69688+14]..[1867,69688+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1868,69706+8]..[1870,69819+53])
                        Pexp_constant PConst_string("@[The attribute '%s' should be attached to@ a direct argument or result of the primitive,@ it should not occur deeply into its type.@]",(typing/typedecl.ml[1868,69706+9]..[1870,69819+52]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1871,69873+8]..[1871,69873+73])
                        Pexp_match
                        expression (typing/typedecl.ml[1871,69873+15]..[1871,69873+19])
                          Pexp_ident "kind" (typing/typedecl.ml[1871,69873+15]..[1871,69873+19])
                        [
                          <case>
                            pattern (typing/typedecl.ml[1871,69873+25]..[1871,69873+32])
                              Ppat_construct "Unboxed" (typing/typedecl.ml[1871,69873+25]..[1871,69873+32])
                              None
                            expression (typing/typedecl.ml[1871,69873+36]..[1871,69873+46])
                              Pexp_constant PConst_string("@unboxed",(typing/typedecl.ml[1871,69873+37]..[1871,69873+45]),None)
                          <case>
                            pattern (typing/typedecl.ml[1871,69873+49]..[1871,69873+57])
                              Ppat_construct "Untagged" (typing/typedecl.ml[1871,69873+49]..[1871,69873+57])
                              None
                            expression (typing/typedecl.ml[1871,69873+61]..[1871,69873+72])
                              Pexp_constant PConst_string("@untagged",(typing/typedecl.ml[1871,69873+62]..[1871,69873+71]),None)
                        ]
                  ]
              <case>
                pattern (typing/typedecl.ml[1872,69947+4]..[1872,69947+68])
                  Ppat_construct "Immediacy" (typing/typedecl.ml[1872,69947+4]..[1872,69947+13])
                  Some
                    []
                    pattern (typing/typedecl.ml[1872,69947+14]..[1872,69947+68])
                      Ppat_construct "Typedecl_immediacy.Bad_immediacy_attribute" (typing/typedecl.ml[1872,69947+15]..[1872,69947+57])
                      Some
                        []
                        pattern (typing/typedecl.ml[1872,69947+58]..[1872,69947+67])
                          Ppat_var "violation" (typing/typedecl.ml[1872,69947+58]..[1872,69947+67])
                expression (typing/typedecl.ml[1873,70019+6]..[1880,70412+71])
                  Pexp_apply
                  expression (typing/typedecl.ml[1873,70019+6]..[1873,70019+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1873,70019+6]..[1873,70019+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1873,70019+14]..[1873,70019+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1873,70019+14]..[1873,70019+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1873,70019+18]..[1873,70019+26])
                        Pexp_constant PConst_string("@[%a@]",(typing/typedecl.ml[1873,70019+19]..[1873,70019+25]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1873,70019+27]..[1873,70019+47])
                        Pexp_ident "Format.pp_print_text" (typing/typedecl.ml[1873,70019+27]..[1873,70019+47])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1874,70067+8]..[1880,70412+71])
                        Pexp_match
                        expression (typing/typedecl.ml[1874,70067+15]..[1874,70067+24])
                          Pexp_ident "violation" (typing/typedecl.ml[1874,70067+15]..[1874,70067+24])
                        [
                          <case>
                            pattern (typing/typedecl.ml[1875,70097+11]..[1875,70097+56])
                              Ppat_construct "Type_immediacy.Violation.Not_always_immediate" (typing/typedecl.ml[1875,70097+11]..[1875,70097+56])
                              None
                            expression (typing/typedecl.ml[1876,70157+13]..[1877,70223+50])
                              Pexp_constant PConst_string("Types marked with the immediate attribute must be non-pointer types like int or bool.",(typing/typedecl.ml[1876,70157+14]..[1877,70223+49]),None)
                          <case>
                            pattern (typing/typedecl.ml[1878,70274+11]..[1878,70274+66])
                              Ppat_construct "Type_immediacy.Violation.Not_always_immediate_on_64bits" (typing/typedecl.ml[1878,70274+11]..[1878,70274+66])
                              None
                            expression (typing/typedecl.ml[1879,70344+13]..[1880,70412+70])
                              Pexp_constant PConst_string("Types marked with the immediate64 attribute must be produced using the Stdlib.Sys.Immediate64.Make functor.",(typing/typedecl.ml[1879,70344+14]..[1880,70412+69]),None)
                        ]
                  ]
              <case>
                pattern (typing/typedecl.ml[1881,70484+4]..[1881,70484+29])
                  Ppat_construct "Bad_unboxed_attribute" (typing/typedecl.ml[1881,70484+4]..[1881,70484+25])
                  Some
                    []
                    pattern (typing/typedecl.ml[1881,70484+26]..[1881,70484+29])
                      Ppat_var "msg" (typing/typedecl.ml[1881,70484+26]..[1881,70484+29])
                expression (typing/typedecl.ml[1882,70517+6]..[1882,70517+68])
                  Pexp_apply
                  expression (typing/typedecl.ml[1882,70517+6]..[1882,70517+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1882,70517+6]..[1882,70517+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1882,70517+14]..[1882,70517+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1882,70517+14]..[1882,70517+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1882,70517+18]..[1882,70517+64])
                        Pexp_constant PConst_string("@[This type cannot be unboxed because@ %s.@]",(typing/typedecl.ml[1882,70517+19]..[1882,70517+63]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1882,70517+65]..[1882,70517+68])
                        Pexp_ident "msg" (typing/typedecl.ml[1882,70517+65]..[1882,70517+68])
                  ]
              <case>
                pattern (typing/typedecl.ml[1883,70586+4]..[1883,70586+64])
                  Ppat_construct "Separability" (typing/typedecl.ml[1883,70586+4]..[1883,70586+16])
                  Some
                    []
                    pattern (typing/typedecl.ml[1883,70586+17]..[1883,70586+64])
                      Ppat_construct "Typedecl_separability.Non_separable_evar" (typing/typedecl.ml[1883,70586+18]..[1883,70586+58])
                      Some
                        []
                        pattern (typing/typedecl.ml[1883,70586+59]..[1883,70586+63])
                          Ppat_var "evar" (typing/typedecl.ml[1883,70586+59]..[1883,70586+63])
                expression (typing/typedecl.ml[1884,70654+6]..[1894,71137+20])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typedecl.ml[1884,70654+10]..[1884,70654+17])
                        Ppat_var "pp_evar" (typing/typedecl.ml[1884,70654+10]..[1884,70654+17])
                      expression (typing/typedecl.ml[1884,70654+18]..[1889,70839+33]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typedecl.ml[1884,70654+18]..[1884,70654+21])
                          Ppat_var "ppf" (typing/typedecl.ml[1884,70654+18]..[1884,70654+21])
                        expression (typing/typedecl.ml[1884,70654+24]..[1889,70839+33])
                          Pexp_function
                          [
                            <case>
                              pattern (typing/typedecl.ml[1885,70687+10]..[1885,70687+14])
                                Ppat_construct "None" (typing/typedecl.ml[1885,70687+10]..[1885,70687+14])
                                None
                              expression (typing/typedecl.ml[1886,70705+12]..[1886,70705+57])
                                Pexp_apply
                                expression (typing/typedecl.ml[1886,70705+12]..[1886,70705+19])
                                  Pexp_ident "fprintf" (typing/typedecl.ml[1886,70705+12]..[1886,70705+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1886,70705+20]..[1886,70705+23])
                                      Pexp_ident "ppf" (typing/typedecl.ml[1886,70705+20]..[1886,70705+23])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1886,70705+24]..[1886,70705+57])
                                      Pexp_constant PConst_string("an unnamed existential variable",(typing/typedecl.ml[1886,70705+25]..[1886,70705+56]),None)
                                ]
                            <case>
                              pattern (typing/typedecl.ml[1887,70763+10]..[1887,70763+18])
                                Ppat_construct "Some" (typing/typedecl.ml[1887,70763+10]..[1887,70763+14])
                                Some
                                  []
                                  pattern (typing/typedecl.ml[1887,70763+15]..[1887,70763+18])
                                    Ppat_var "str" (typing/typedecl.ml[1887,70763+15]..[1887,70763+18])
                              expression (typing/typedecl.ml[1888,70785+12]..[1889,70839+33])
                                Pexp_apply
                                expression (typing/typedecl.ml[1888,70785+12]..[1888,70785+19])
                                  Pexp_ident "fprintf" (typing/typedecl.ml[1888,70785+12]..[1888,70785+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1888,70785+20]..[1888,70785+23])
                                      Pexp_ident "ppf" (typing/typedecl.ml[1888,70785+20]..[1888,70785+23])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1888,70785+24]..[1888,70785+53])
                                      Pexp_constant PConst_string("the existential variable %a",(typing/typedecl.ml[1888,70785+25]..[1888,70785+52]),None)
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1889,70839+14]..[1889,70839+29])
                                      Pexp_ident "Pprintast.tyvar" (typing/typedecl.ml[1889,70839+14]..[1889,70839+29])
                                  <arg>
                                  Nolabel
                                    expression (typing/typedecl.ml[1889,70839+30]..[1889,70839+33])
                                      Pexp_ident "str" (typing/typedecl.ml[1889,70839+30]..[1889,70839+33])
                                ]
                          ]
                  ]
                  expression (typing/typedecl.ml[1890,70876+6]..[1894,71137+20])
                    Pexp_apply
                    expression (typing/typedecl.ml[1890,70876+6]..[1890,70876+13])
                      Pexp_ident "fprintf" (typing/typedecl.ml[1890,70876+6]..[1890,70876+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1890,70876+14]..[1890,70876+17])
                          Pexp_ident "ppf" (typing/typedecl.ml[1890,70876+14]..[1890,70876+17])
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1890,70876+18]..[1893,71068+68])
                          Pexp_constant PConst_string("@[This type cannot be unboxed because@ it might contain both float and non-float values,@ depending on the instantiation of %a.@ You should annotate it with [%@%@ocaml.boxed].@]",(typing/typedecl.ml[1890,70876+19]..[1893,71068+67]),None)
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1894,71137+8]..[1894,71137+15])
                          Pexp_ident "pp_evar" (typing/typedecl.ml[1894,71137+8]..[1894,71137+15])
                      <arg>
                      Nolabel
                        expression (typing/typedecl.ml[1894,71137+16]..[1894,71137+20])
                          Pexp_ident "evar" (typing/typedecl.ml[1894,71137+16]..[1894,71137+20])
                    ]
              <case>
                pattern (typing/typedecl.ml[1895,71158+4]..[1895,71158+21])
                  Ppat_construct "Boxed_and_unboxed" (typing/typedecl.ml[1895,71158+4]..[1895,71158+21])
                  None
                expression (typing/typedecl.ml[1896,71183+6]..[1896,71183+76])
                  Pexp_apply
                  expression (typing/typedecl.ml[1896,71183+6]..[1896,71183+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1896,71183+6]..[1896,71183+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1896,71183+14]..[1896,71183+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1896,71183+14]..[1896,71183+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1896,71183+18]..[1896,71183+76])
                        Pexp_constant PConst_string("@[A type cannot be boxed and unboxed at the same time.@]",(typing/typedecl.ml[1896,71183+19]..[1896,71183+75]),None)
                  ]
              <case>
                pattern (typing/typedecl.ml[1897,71260+4]..[1897,71260+15])
                  Ppat_construct "Nonrec_gadt" (typing/typedecl.ml[1897,71260+4]..[1897,71260+15])
                  None
                expression (typing/typedecl.ml[1898,71279+6]..[1899,71297+66])
                  Pexp_apply
                  expression (typing/typedecl.ml[1898,71279+6]..[1898,71279+13])
                    Pexp_ident "fprintf" (typing/typedecl.ml[1898,71279+6]..[1898,71279+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1898,71279+14]..[1898,71279+17])
                        Pexp_ident "ppf" (typing/typedecl.ml[1898,71279+14]..[1898,71279+17])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1899,71297+8]..[1899,71297+66])
                        Pexp_constant PConst_string("@[GADT case syntax cannot be used in a 'nonrec' block.@]",(typing/typedecl.ml[1899,71297+9]..[1899,71297+65]),None)
                  ]
              <case>
                pattern (typing/typedecl.ml[1900,71364+4]..[1900,71364+38])
                  Ppat_construct "Invalid_private_row_declaration" (typing/typedecl.ml[1900,71364+4]..[1900,71364+35])
                  Some
                    []
                    pattern (typing/typedecl.ml[1900,71364+36]..[1900,71364+38])
                      Ppat_var "ty" (typing/typedecl.ml[1900,71364+36]..[1900,71364+38])
                expression (typing/typedecl.ml[1901,71406+6]..[1907,71759+51])
                  Pexp_apply
                  expression (typing/typedecl.ml[1901,71406+6]..[1901,71406+20])
                    Pexp_ident "Format.fprintf" (typing/typedecl.ml[1901,71406+6]..[1901,71406+20])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1901,71406+21]..[1901,71406+24])
                        Pexp_ident "ppf" (typing/typedecl.ml[1901,71406+21]..[1901,71406+24])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1902,71431+8]..[1906,71711+47])
                        Pexp_constant PConst_string("@[<hv>This private row type declaration is invalid.@ The type expression on the right-hand side reduces to@;<1 2>%a@ which does not have a free row type variable.@]@,@[<hv>@[Hint: If you intended to define a private type abbreviation,@ write explicitly@]@;<1 2>private %a@]",(typing/typedecl.ml[1902,71431+9]..[1906,71711+46]),None)
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1907,71759+8]..[1907,71759+26])
                        Pexp_ident "Printtyp.type_expr" (typing/typedecl.ml[1907,71759+8]..[1907,71759+26])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1907,71759+27]..[1907,71759+29])
                        Pexp_ident "ty" (typing/typedecl.ml[1907,71759+27]..[1907,71759+29])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1907,71759+30]..[1907,71759+48])
                        Pexp_ident "Printtyp.type_expr" (typing/typedecl.ml[1907,71759+30]..[1907,71759+48])
                    <arg>
                    Nolabel
                      expression (typing/typedecl.ml[1907,71759+49]..[1907,71759+51])
                        Pexp_ident "ty" (typing/typedecl.ml[1907,71759+49]..[1907,71759+51])
                  ]
            ]
    ]
  structure_item (typing/typedecl.ml[1909,71812+0]..[1916,71985+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl.ml[1909,71812+4]..[1909,71812+6])
          Ppat_construct "()" (typing/typedecl.ml[1909,71812+4]..[1909,71812+6])
          None
        expression (typing/typedecl.ml[1910,71821+2]..[1916,71985+5])
          Pexp_apply
          expression (typing/typedecl.ml[1910,71821+2]..[1910,71821+32])
            Pexp_ident "Location.register_error_of_exn" (typing/typedecl.ml[1910,71821+2]..[1910,71821+32])
          [
            <arg>
            Nolabel
              expression (typing/typedecl.ml[1911,71854+4]..[1916,71985+5])
                Pexp_function
                [
                  <case>
                    pattern (typing/typedecl.ml[1912,71868+8]..[1912,71868+24])
                      Ppat_construct "Error" (typing/typedecl.ml[1912,71868+8]..[1912,71868+13])
                      Some
                        []
                        pattern (typing/typedecl.ml[1912,71868+14]..[1912,71868+24])
                          Ppat_tuple
                          [
                            pattern (typing/typedecl.ml[1912,71868+15]..[1912,71868+18])
                              Ppat_var "loc" (typing/typedecl.ml[1912,71868+15]..[1912,71868+18])
                            pattern (typing/typedecl.ml[1912,71868+20]..[1912,71868+23])
                              Ppat_var "err" (typing/typedecl.ml[1912,71868+20]..[1912,71868+23])
                          ]
                    expression (typing/typedecl.ml[1913,71896+8]..[1913,71896+62])
                      Pexp_construct "Some" (typing/typedecl.ml[1913,71896+8]..[1913,71896+12])
                      Some
                        expression (typing/typedecl.ml[1913,71896+13]..[1913,71896+62])
                          Pexp_apply
                          expression (typing/typedecl.ml[1913,71896+14]..[1913,71896+39])
                            Pexp_ident "Location.error_of_printer" (typing/typedecl.ml[1913,71896+14]..[1913,71896+39])
                          [
                            <arg>
                            Labelled "loc"
                              expression (typing/typedecl.ml[1913,71896+41]..[1913,71896+44])
                                Pexp_ident "loc" (typing/typedecl.ml[1913,71896+41]..[1913,71896+44])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1913,71896+45]..[1913,71896+57])
                                Pexp_ident "report_error" (typing/typedecl.ml[1913,71896+45]..[1913,71896+57])
                            <arg>
                            Nolabel
                              expression (typing/typedecl.ml[1913,71896+58]..[1913,71896+61])
                                Pexp_ident "err" (typing/typedecl.ml[1913,71896+58]..[1913,71896+61])
                          ]
                  <case>
                    pattern (typing/typedecl.ml[1914,71959+8]..[1914,71959+9])
                      Ppat_any
                    expression (typing/typedecl.ml[1915,71972+8]..[1915,71972+12])
                      Pexp_construct "None" (typing/typedecl.ml[1915,71972+8]..[1915,71972+12])
                      None
                ]
          ]
    ]
]

