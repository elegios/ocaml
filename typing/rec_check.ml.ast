[
  structure_item (typing/rec_check.ml[19,1310+0]..[99,4424+2])
    Pstr_attribute "ocaml.text"
    [
      structure_item (typing/rec_check.ml[19,1310+0]..[99,4424+2])
        Pstr_eval
        expression (typing/rec_check.ml[19,1310+0]..[99,4424+2])
          Pexp_constant PConst_string(" Static checking of recursive declarations\n\nSome recursive definitions are meaningful\n{[\n  let rec factorial = function 0 -> 1 | n -> n * factorial (n - 1)\n  let rec infinite_list = 0 :: infinite_list\n]}\nbut some other are meaningless\n{[\n  let rec x = x\n  let rec x = x+1\n|}\n\nIntuitively, a recursive definition makes sense when the body of the\ndefinition can be evaluated without fully knowing what the recursive\nname is yet.\n\nIn the [factorial] example, the name [factorial] refers to a function,\nevaluating the function definition [function ...] can be done\nimmediately and will not force a recursive call to [factorial] -- this\nwill only happen later, when [factorial] is called with an argument.\n\nIn the [infinite_list] example, we can evaluate [0 :: infinite_list]\nwithout knowing the full content of [infinite_list], but with just its\naddress. This is a case of productive/guarded recursion.\n\nOn the contrary, [let rec x = x] is unguarded recursion (the meaning\nis undetermined), and [let rec x = x+1] would need the value of [x]\nwhile evaluating its definition [x+1].\n\nThis file implements a static check to decide which definitions are\nknown to be meaningful, and which may be meaningless. In the general\ncase, we handle a set of mutually-recursive definitions\n{[\nlet rec x1 = e1\nand x2 = e2\n...\nand xn = en\n]}\n\n\nOur check (see function [is_valid_recursive_expression] is defined\nusing two criteria:\n\nUsage of recursive variables: how does each of the [e1 .. en] use the\n recursive variables [x1 .. xn]?\n\nStatic or dynamic size: for which of the [ei] can we compute the\n  in-memory size of the value without evaluating [ei] (so that we can\n  pre-allocate it, and thus know its final address before evaluation).\n\nThe \"static or dynamic size\" is decided by the classify_* functions below.\n\nThe \"variable usage\" question is decided by a static analysis looking\nvery much like a type system. The idea is to assign \"access modes\" to\nvariables, where an \"access mode\" [m] is defined as either\n\n    m ::= Ignore (* the value is not used at all *)\n        | Delay (* the value is not needed at definition time *)\n        | Guard (* the value is stored under a data constructor *)\n        | Return (* the value result is directly returned *)\n        | Dereference (* full access and inspection of the value *)\n\nThe access modes of an expression [e] are represented by a \"context\"\n[G], which is simply a mapping from variables (the variables used in\n[e]) to access modes.\n\nThe core notion of the static check is a type-system-like judgment of\nthe form [G |- e : m], which can be interpreted as meaning either of:\n\n- If we are allowed to use the variables of [e] at the modes in [G]\n  (but not more), then it is safe to use [e] at the mode [m].\n\n- If we want to use [e] at the mode [m], then its variables are\n  used at the modes in [G].\n\nIn practice, for a given expression [e], our implementation takes the\ndesired mode of use [m] as *input*, and returns a context [G] as\n*output*, which is (uniquely determined as) the most permissive choice\nof modes [G] for the variables of [e] such that [G |- e : m] holds.\n",(typing/rec_check.ml[19,1310+0]..[99,4424+2]),None)
    ]
  structure_item (typing/rec_check.ml[101,4428+0]..[101,4428+13])
    Pstr_open Fresh
    module_expr (typing/rec_check.ml[101,4428+5]..[101,4428+13])
      Pmod_ident "Asttypes" (typing/rec_check.ml[101,4428+5]..[101,4428+13])
  structure_item (typing/rec_check.ml[102,4442+0]..[102,4442+14])
    Pstr_open Fresh
    module_expr (typing/rec_check.ml[102,4442+5]..[102,4442+14])
      Pmod_ident "Typedtree" (typing/rec_check.ml[102,4442+5]..[102,4442+14])
  structure_item (typing/rec_check.ml[103,4457+0]..[103,4457+10])
    Pstr_open Fresh
    module_expr (typing/rec_check.ml[103,4457+5]..[103,4457+10])
      Pmod_ident "Types" (typing/rec_check.ml[103,4457+5]..[103,4457+10])
  structure_item (typing/rec_check.ml[105,4469+0]..[105,4469+22])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (typing/rec_check.ml[105,4469+0]..[105,4469+22])
          pext_name = "Illegal_expr"
          pext_kind =
            Pext_decl
              []
              None
  structure_item (typing/rec_check.ml[107,4493+0]..[107,4493+33])
    Pstr_attribute "ocaml.text"
    [
      structure_item (typing/rec_check.ml[107,4493+0]..[107,4493+33])
        Pstr_eval
        expression (typing/rec_check.ml[107,4493+0]..[107,4493+33])
          Pexp_constant PConst_string(" {1 Static or dynamic size} ",(typing/rec_check.ml[107,4493+0]..[107,4493+33]),None)
    ]
  structure_item (typing/rec_check.ml[109,4528+0]..[109,4528+26])
    Pstr_type Rec
    [
      type_declaration "sd" (typing/rec_check.ml[109,4528+5]..[109,4528+7]) (typing/rec_check.ml[109,4528+0]..[109,4528+26])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/rec_check.ml[109,4528+10]..[109,4528+16])
                "Static" (typing/rec_check.ml[109,4528+10]..[109,4528+16])
                []
                None
              (typing/rec_check.ml[109,4528+17]..[109,4528+26])
                "Dynamic" (typing/rec_check.ml[109,4528+19]..[109,4528+26])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/rec_check.ml[111,4556+0]..[116,4759+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[111,4556+4]..[111,4556+44]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[111,4556+4]..[111,4556+10])
            Ppat_var "is_ref" (typing/rec_check.ml[111,4556+4]..[111,4556+10])
          core_type (typing/rec_check.ml[111,4556+13]..[111,4556+44]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[111,4556+13]..[111,4556+44])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[111,4556+13]..[111,4556+36])
                Ptyp_constr "Types.value_description" (typing/rec_check.ml[111,4556+13]..[111,4556+36])
                []
              core_type (typing/rec_check.ml[111,4556+40]..[111,4556+44])
                Ptyp_constr "bool" (typing/rec_check.ml[111,4556+40]..[111,4556+44])
                []
        expression (typing/rec_check.ml[111,4556+4]..[116,4759+14])
          Pexp_constraint
          expression (typing/rec_check.ml[111,4556+47]..[116,4759+14])
            Pexp_function
            [
              <case>
                pattern (typing/rec_check.ml[112,4612+4]..[114,4698+44])
                  Ppat_record Closed
                  [
                    "Types.val_kind" (typing/rec_check.ml[112,4612+6]..[112,4612+20])
                      pattern (typing/rec_check.ml[113,4635+8]..[114,4698+42])
                        Ppat_construct "Types.Val_prim" (typing/rec_check.ml[113,4635+8]..[113,4635+22])
                        Some
                          []
                          pattern (typing/rec_check.ml[113,4635+23]..[114,4698+42])
                            Ppat_record Closed
                            [
                              "Primitive.prim_name" (typing/rec_check.ml[113,4635+25]..[113,4635+44])
                                pattern (typing/rec_check.ml[113,4635+47]..[113,4635+61])
                                  Ppat_constant PConst_string("%makemutable",(typing/rec_check.ml[113,4635+48]..[113,4635+60]),None)
                              "prim_arity" (typing/rec_check.ml[114,4698+26]..[114,4698+36])
                                pattern (typing/rec_check.ml[114,4698+39]..[114,4698+40])
                                  Ppat_constant PConst_int (1,None)
                            ]
                  ]
                expression (typing/rec_check.ml[115,4746+8]..[115,4746+12])
                  Pexp_construct "true" (typing/rec_check.ml[115,4746+8]..[115,4746+12])
                  None
              <case>
                pattern (typing/rec_check.ml[116,4759+4]..[116,4759+5])
                  Ppat_any
                expression (typing/rec_check.ml[116,4759+9]..[116,4759+14])
                  Pexp_construct "false" (typing/rec_check.ml[116,4759+9]..[116,4759+14])
                  None
            ]
          core_type (typing/rec_check.ml[111,4556+13]..[111,4556+44])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[111,4556+13]..[111,4556+36])
              Ptyp_constr "Types.value_description" (typing/rec_check.ml[111,4556+13]..[111,4556+36])
              []
            core_type (typing/rec_check.ml[111,4556+40]..[111,4556+44])
              Ptyp_constr "bool" (typing/rec_check.ml[111,4556+40]..[111,4556+44])
              []
    ]
  structure_item (typing/rec_check.ml[120,4868+0]..[122,4963+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[120,4868+4]..[120,4868+61]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[120,4868+4]..[120,4868+21])
            Ppat_var "is_abstracted_arg" (typing/rec_check.ml[120,4868+4]..[120,4868+21])
          core_type (typing/rec_check.ml[120,4868+24]..[120,4868+61]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[120,4868+24]..[120,4868+61])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[120,4868+24]..[120,4868+53])
                Ptyp_tuple
                [
                  core_type (typing/rec_check.ml[120,4868+24]..[120,4868+33])
                    Ptyp_constr "arg_label" (typing/rec_check.ml[120,4868+24]..[120,4868+33])
                    []
                  core_type (typing/rec_check.ml[120,4868+36]..[120,4868+53])
                    Ptyp_constr "option" (typing/rec_check.ml[120,4868+47]..[120,4868+53])
                    [
                      core_type (typing/rec_check.ml[120,4868+36]..[120,4868+46])
                        Ptyp_constr "expression" (typing/rec_check.ml[120,4868+36]..[120,4868+46])
                        []
                    ]
                ]
              core_type (typing/rec_check.ml[120,4868+57]..[120,4868+61])
                Ptyp_constr "bool" (typing/rec_check.ml[120,4868+57]..[120,4868+61])
                []
        expression (typing/rec_check.ml[120,4868+4]..[122,4963+24])
          Pexp_constraint
          expression (typing/rec_check.ml[120,4868+64]..[122,4963+24])
            Pexp_function
            [
              <case>
                pattern (typing/rec_check.ml[121,4941+4]..[121,4941+13])
                  Ppat_tuple
                  [
                    pattern (typing/rec_check.ml[121,4941+5]..[121,4941+6])
                      Ppat_any
                    pattern (typing/rec_check.ml[121,4941+8]..[121,4941+12])
                      Ppat_construct "None" (typing/rec_check.ml[121,4941+8]..[121,4941+12])
                      None
                  ]
                expression (typing/rec_check.ml[121,4941+17]..[121,4941+21])
                  Pexp_construct "true" (typing/rec_check.ml[121,4941+17]..[121,4941+21])
                  None
              <case>
                pattern (typing/rec_check.ml[122,4963+4]..[122,4963+15])
                  Ppat_tuple
                  [
                    pattern (typing/rec_check.ml[122,4963+5]..[122,4963+6])
                      Ppat_any
                    pattern (typing/rec_check.ml[122,4963+8]..[122,4963+14])
                      Ppat_construct "Some" (typing/rec_check.ml[122,4963+8]..[122,4963+12])
                      Some
                        []
                        pattern (typing/rec_check.ml[122,4963+13]..[122,4963+14])
                          Ppat_any
                  ]
                expression (typing/rec_check.ml[122,4963+19]..[122,4963+24])
                  Pexp_construct "false" (typing/rec_check.ml[122,4963+19]..[122,4963+24])
                  None
            ]
          core_type (typing/rec_check.ml[120,4868+24]..[120,4868+61])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[120,4868+24]..[120,4868+53])
              Ptyp_tuple
              [
                core_type (typing/rec_check.ml[120,4868+24]..[120,4868+33])
                  Ptyp_constr "arg_label" (typing/rec_check.ml[120,4868+24]..[120,4868+33])
                  []
                core_type (typing/rec_check.ml[120,4868+36]..[120,4868+53])
                  Ptyp_constr "option" (typing/rec_check.ml[120,4868+47]..[120,4868+53])
                  [
                    core_type (typing/rec_check.ml[120,4868+36]..[120,4868+46])
                      Ptyp_constr "expression" (typing/rec_check.ml[120,4868+36]..[120,4868+46])
                      []
                  ]
              ]
            core_type (typing/rec_check.ml[120,4868+57]..[120,4868+61])
              Ptyp_constr "bool" (typing/rec_check.ml[120,4868+57]..[120,4868+61])
              []
    ]
  structure_item (typing/rec_check.ml[124,4989+0]..[257,9249+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[124,4989+4]..[124,4989+52]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[124,4989+4]..[124,4989+23])
            Ppat_var "classify_expression" (typing/rec_check.ml[124,4989+4]..[124,4989+23])
          core_type (typing/rec_check.ml[124,4989+26]..[124,4989+52]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[124,4989+26]..[124,4989+52])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[124,4989+26]..[124,4989+46])
                Ptyp_constr "Typedtree.expression" (typing/rec_check.ml[124,4989+26]..[124,4989+46])
                []
              core_type (typing/rec_check.ml[124,4989+50]..[124,4989+52])
                Ptyp_constr "sd" (typing/rec_check.ml[124,4989+50]..[124,4989+52])
                []
        expression (typing/rec_check.ml[124,4989+4]..[257,9249+36])
          Pexp_constraint
          expression (typing/rec_check.ml[145,5675+2]..[257,9249+36])
            Pexp_let Rec
            [
              <def>
                pattern (typing/rec_check.ml[145,5675+10]..[145,5675+29])
                  Ppat_var "classify_expression" (typing/rec_check.ml[145,5675+10]..[145,5675+29])
                expression (typing/rec_check.ml[145,5675+30]..[206,7218+15]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/rec_check.ml[145,5675+30]..[145,5675+33])
                    Ppat_var "env" (typing/rec_check.ml[145,5675+30]..[145,5675+33])
                  expression (typing/rec_check.ml[145,5675+34]..[206,7218+15]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/rec_check.ml[145,5675+34]..[145,5675+35])
                      Ppat_var "e" (typing/rec_check.ml[145,5675+34]..[145,5675+35])
                    expression (typing/rec_check.ml[145,5675+38]..[206,7218+15])
                      Pexp_match
                      expression (typing/rec_check.ml[145,5675+44]..[145,5675+54])
                        Pexp_field
                        expression (typing/rec_check.ml[145,5675+44]..[145,5675+45])
                          Pexp_ident "e" (typing/rec_check.ml[145,5675+44]..[145,5675+45])
                        "exp_desc" (typing/rec_check.ml[145,5675+46]..[145,5675+54])
                      [
                        <case>
                          pattern (typing/rec_check.ml[147,5772+6]..[147,5772+32])
                            Ppat_construct "Texp_let" (typing/rec_check.ml[147,5772+6]..[147,5772+14])
                            Some
                              []
                              pattern (typing/rec_check.ml[147,5772+15]..[147,5772+32])
                                Ppat_tuple
                                [
                                  pattern (typing/rec_check.ml[147,5772+16]..[147,5772+24])
                                    Ppat_var "rec_flag" (typing/rec_check.ml[147,5772+16]..[147,5772+24])
                                  pattern (typing/rec_check.ml[147,5772+26]..[147,5772+28])
                                    Ppat_var "vb" (typing/rec_check.ml[147,5772+26]..[147,5772+28])
                                  pattern (typing/rec_check.ml[147,5772+30]..[147,5772+31])
                                    Ppat_var "e" (typing/rec_check.ml[147,5772+30]..[147,5772+31])
                                ]
                          expression (typing/rec_check.ml[148,5808+8]..[149,5869+33])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/rec_check.ml[148,5808+12]..[148,5808+15])
                                  Ppat_var "env" (typing/rec_check.ml[148,5808+12]..[148,5808+15])
                                expression (typing/rec_check.ml[148,5808+18]..[148,5808+57])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[148,5808+18]..[148,5808+41])
                                    Pexp_ident "classify_value_bindings" (typing/rec_check.ml[148,5808+18]..[148,5808+41])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[148,5808+42]..[148,5808+50])
                                        Pexp_ident "rec_flag" (typing/rec_check.ml[148,5808+42]..[148,5808+50])
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[148,5808+51]..[148,5808+54])
                                        Pexp_ident "env" (typing/rec_check.ml[148,5808+51]..[148,5808+54])
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[148,5808+55]..[148,5808+57])
                                        Pexp_ident "vb" (typing/rec_check.ml[148,5808+55]..[148,5808+57])
                                  ]
                            ]
                            expression (typing/rec_check.ml[149,5869+8]..[149,5869+33])
                              Pexp_apply
                              expression (typing/rec_check.ml[149,5869+8]..[149,5869+27])
                                Pexp_ident "classify_expression" (typing/rec_check.ml[149,5869+8]..[149,5869+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[149,5869+28]..[149,5869+31])
                                    Pexp_ident "env" (typing/rec_check.ml[149,5869+28]..[149,5869+31])
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[149,5869+32]..[149,5869+33])
                                    Pexp_ident "e" (typing/rec_check.ml[149,5869+32]..[149,5869+33])
                              ]
                        <case>
                          pattern (typing/rec_check.ml[150,5903+6]..[150,5903+29])
                            Ppat_construct "Texp_ident" (typing/rec_check.ml[150,5903+6]..[150,5903+16])
                            Some
                              []
                              pattern (typing/rec_check.ml[150,5903+17]..[150,5903+29])
                                Ppat_tuple
                                [
                                  pattern (typing/rec_check.ml[150,5903+18]..[150,5903+22])
                                    Ppat_var "path" (typing/rec_check.ml[150,5903+18]..[150,5903+22])
                                  pattern (typing/rec_check.ml[150,5903+24]..[150,5903+25])
                                    Ppat_any
                                  pattern (typing/rec_check.ml[150,5903+27]..[150,5903+28])
                                    Ppat_any
                                ]
                          expression (typing/rec_check.ml[151,5936+8]..[151,5936+30])
                            Pexp_apply
                            expression (typing/rec_check.ml[151,5936+8]..[151,5936+21])
                              Pexp_ident "classify_path" (typing/rec_check.ml[151,5936+8]..[151,5936+21])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[151,5936+22]..[151,5936+25])
                                  Pexp_ident "env" (typing/rec_check.ml[151,5936+22]..[151,5936+25])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[151,5936+26]..[151,5936+30])
                                  Pexp_ident "path" (typing/rec_check.ml[151,5936+26]..[151,5936+30])
                            ]
                        <case>
                          pattern (typing/rec_check.ml[154,5996+6]..[157,6083+30])
                            Ppat_or
                            pattern (typing/rec_check.ml[154,5996+6]..[156,6056+26])
                              Ppat_or
                              pattern (typing/rec_check.ml[154,5996+6]..[155,6019+36])
                                Ppat_or
                                pattern (typing/rec_check.ml[154,5996+6]..[154,5996+22])
                                  Ppat_construct "Texp_open" (typing/rec_check.ml[154,5996+6]..[154,5996+15])
                                  Some
                                    []
                                    pattern (typing/rec_check.ml[154,5996+16]..[154,5996+22])
                                      Ppat_tuple
                                      [
                                        pattern (typing/rec_check.ml[154,5996+17]..[154,5996+18])
                                          Ppat_any
                                        pattern (typing/rec_check.ml[154,5996+20]..[154,5996+21])
                                          Ppat_var "e" (typing/rec_check.ml[154,5996+20]..[154,5996+21])
                                      ]
                                pattern (typing/rec_check.ml[155,6019+6]..[155,6019+36])
                                  Ppat_construct "Texp_letmodule" (typing/rec_check.ml[155,6019+6]..[155,6019+20])
                                  Some
                                    []
                                    pattern (typing/rec_check.ml[155,6019+21]..[155,6019+36])
                                      Ppat_tuple
                                      [
                                        pattern (typing/rec_check.ml[155,6019+22]..[155,6019+23])
                                          Ppat_any
                                        pattern (typing/rec_check.ml[155,6019+25]..[155,6019+26])
                                          Ppat_any
                                        pattern (typing/rec_check.ml[155,6019+28]..[155,6019+29])
                                          Ppat_any
                                        pattern (typing/rec_check.ml[155,6019+31]..[155,6019+32])
                                          Ppat_any
                                        pattern (typing/rec_check.ml[155,6019+34]..[155,6019+35])
                                          Ppat_var "e" (typing/rec_check.ml[155,6019+34]..[155,6019+35])
                                      ]
                              pattern (typing/rec_check.ml[156,6056+6]..[156,6056+26])
                                Ppat_construct "Texp_sequence" (typing/rec_check.ml[156,6056+6]..[156,6056+19])
                                Some
                                  []
                                  pattern (typing/rec_check.ml[156,6056+20]..[156,6056+26])
                                    Ppat_tuple
                                    [
                                      pattern (typing/rec_check.ml[156,6056+21]..[156,6056+22])
                                        Ppat_any
                                      pattern (typing/rec_check.ml[156,6056+24]..[156,6056+25])
                                        Ppat_var "e" (typing/rec_check.ml[156,6056+24]..[156,6056+25])
                                    ]
                            pattern (typing/rec_check.ml[157,6083+6]..[157,6083+30])
                              Ppat_construct "Texp_letexception" (typing/rec_check.ml[157,6083+6]..[157,6083+23])
                              Some
                                []
                                pattern (typing/rec_check.ml[157,6083+24]..[157,6083+30])
                                  Ppat_tuple
                                  [
                                    pattern (typing/rec_check.ml[157,6083+25]..[157,6083+26])
                                      Ppat_any
                                    pattern (typing/rec_check.ml[157,6083+28]..[157,6083+29])
                                      Ppat_var "e" (typing/rec_check.ml[157,6083+28]..[157,6083+29])
                                  ]
                          expression (typing/rec_check.ml[158,6117+8]..[158,6117+33])
                            Pexp_apply
                            expression (typing/rec_check.ml[158,6117+8]..[158,6117+27])
                              Pexp_ident "classify_expression" (typing/rec_check.ml[158,6117+8]..[158,6117+27])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[158,6117+28]..[158,6117+31])
                                  Pexp_ident "env" (typing/rec_check.ml[158,6117+28]..[158,6117+31])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[158,6117+32]..[158,6117+33])
                                  Pexp_ident "e" (typing/rec_check.ml[158,6117+32]..[158,6117+33])
                            ]
                        <case>
                          pattern (typing/rec_check.ml[160,6152+6]..[160,6152+56])
                            Ppat_construct "Texp_construct" (typing/rec_check.ml[160,6152+6]..[160,6152+20])
                            Some
                              []
                              pattern (typing/rec_check.ml[160,6152+21]..[160,6152+56])
                                Ppat_tuple
                                [
                                  pattern (typing/rec_check.ml[160,6152+22]..[160,6152+23])
                                    Ppat_any
                                  pattern (typing/rec_check.ml[160,6152+25]..[160,6152+50])
                                    Ppat_record Closed
                                    [
                                      "cstr_tag" (typing/rec_check.ml[160,6152+26]..[160,6152+34])
                                        pattern (typing/rec_check.ml[160,6152+37]..[160,6152+49])
                                          Ppat_construct "Cstr_unboxed" (typing/rec_check.ml[160,6152+37]..[160,6152+49])
                                          None
                                    ]
                                  pattern (typing/rec_check.ml[160,6152+52]..[160,6152+55])
                                    Ppat_construct "::" (typing/rec_check.ml[160,6152+53]..[160,6152+55]) ghost
                                    Some
                                      []
                                      pattern (typing/rec_check.ml[160,6152+53]..[160,6152+55]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (typing/rec_check.ml[160,6152+53]..[160,6152+54])
                                            Ppat_var "e" (typing/rec_check.ml[160,6152+53]..[160,6152+54])
                                          pattern (typing/rec_check.ml[160,6152+54]..[160,6152+55]) ghost
                                            Ppat_construct "[]" (typing/rec_check.ml[160,6152+54]..[160,6152+55]) ghost
                                            None
                                        ]
                                ]
                          expression (typing/rec_check.ml[161,6212+8]..[161,6212+33])
                            Pexp_apply
                            expression (typing/rec_check.ml[161,6212+8]..[161,6212+27])
                              Pexp_ident "classify_expression" (typing/rec_check.ml[161,6212+8]..[161,6212+27])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[161,6212+28]..[161,6212+31])
                                  Pexp_ident "env" (typing/rec_check.ml[161,6212+28]..[161,6212+31])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[161,6212+32]..[161,6212+33])
                                  Pexp_ident "e" (typing/rec_check.ml[161,6212+32]..[161,6212+33])
                            ]
                        <case>
                          pattern (typing/rec_check.ml[162,6246+6]..[162,6246+22])
                            Ppat_construct "Texp_construct" (typing/rec_check.ml[162,6246+6]..[162,6246+20])
                            Some
                              []
                              pattern (typing/rec_check.ml[162,6246+21]..[162,6246+22])
                                Ppat_any
                          expression (typing/rec_check.ml[163,6272+8]..[163,6272+14])
                            Pexp_construct "Static" (typing/rec_check.ml[163,6272+8]..[163,6272+14])
                            None
                        <case>
                          pattern (typing/rec_check.ml[165,6288+6]..[166,6343+56])
                            Ppat_construct "Texp_record" (typing/rec_check.ml[165,6288+6]..[165,6288+17])
                            Some
                              []
                              pattern (typing/rec_check.ml[165,6288+18]..[166,6343+56])
                                Ppat_record Closed
                                [
                                  "representation" (typing/rec_check.ml[165,6288+20]..[165,6288+34])
                                    pattern (typing/rec_check.ml[165,6288+37]..[165,6288+53])
                                      Ppat_construct "Record_unboxed" (typing/rec_check.ml[165,6288+37]..[165,6288+51])
                                      Some
                                        []
                                        pattern (typing/rec_check.ml[165,6288+52]..[165,6288+53])
                                          Ppat_any
                                  "fields" (typing/rec_check.ml[166,6343+20]..[166,6343+26])
                                    pattern (typing/rec_check.ml[166,6343+29]..[166,6343+54])
                                      Ppat_array
                                      [
                                        pattern (typing/rec_check.ml[166,6343+32]..[166,6343+51])
                                          Ppat_tuple
                                          [
                                            pattern (typing/rec_check.ml[166,6343+32]..[166,6343+33])
                                              Ppat_any
                                            pattern (typing/rec_check.ml[166,6343+35]..[166,6343+51])
                                              Ppat_construct "Overridden" (typing/rec_check.ml[166,6343+35]..[166,6343+45])
                                              Some
                                                []
                                                pattern (typing/rec_check.ml[166,6343+46]..[166,6343+51])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/rec_check.ml[166,6343+47]..[166,6343+48])
                                                      Ppat_any
                                                    pattern (typing/rec_check.ml[166,6343+49]..[166,6343+50])
                                                      Ppat_var "e" (typing/rec_check.ml[166,6343+49]..[166,6343+50])
                                                  ]
                                          ]
                                      ]
                                ]
                          expression (typing/rec_check.ml[167,6403+8]..[167,6403+33])
                            Pexp_apply
                            expression (typing/rec_check.ml[167,6403+8]..[167,6403+27])
                              Pexp_ident "classify_expression" (typing/rec_check.ml[167,6403+8]..[167,6403+27])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[167,6403+28]..[167,6403+31])
                                  Pexp_ident "env" (typing/rec_check.ml[167,6403+28]..[167,6403+31])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[167,6403+32]..[167,6403+33])
                                  Pexp_ident "e" (typing/rec_check.ml[167,6403+32]..[167,6403+33])
                            ]
                        <case>
                          pattern (typing/rec_check.ml[168,6437+6]..[168,6437+19])
                            Ppat_construct "Texp_record" (typing/rec_check.ml[168,6437+6]..[168,6437+17])
                            Some
                              []
                              pattern (typing/rec_check.ml[168,6437+18]..[168,6437+19])
                                Ppat_any
                          expression (typing/rec_check.ml[169,6460+8]..[169,6460+14])
                            Pexp_construct "Static" (typing/rec_check.ml[169,6460+8]..[169,6460+14])
                            None
                        <case>
                          pattern (typing/rec_check.ml[171,6476+6]..[171,6476+56])
                            Ppat_construct "Texp_apply" (typing/rec_check.ml[171,6476+6]..[171,6476+16])
                            Some
                              []
                              pattern (typing/rec_check.ml[171,6476+17]..[171,6476+56])
                                Ppat_tuple
                                [
                                  pattern (typing/rec_check.ml[171,6476+18]..[171,6476+52])
                                    Ppat_record Closed
                                    [
                                      "exp_desc" (typing/rec_check.ml[171,6476+19]..[171,6476+27])
                                        pattern (typing/rec_check.ml[171,6476+30]..[171,6476+51])
                                          Ppat_construct "Texp_ident" (typing/rec_check.ml[171,6476+30]..[171,6476+40])
                                          Some
                                            []
                                            pattern (typing/rec_check.ml[171,6476+41]..[171,6476+51])
                                              Ppat_tuple
                                              [
                                                pattern (typing/rec_check.ml[171,6476+42]..[171,6476+43])
                                                  Ppat_any
                                                pattern (typing/rec_check.ml[171,6476+45]..[171,6476+46])
                                                  Ppat_any
                                                pattern (typing/rec_check.ml[171,6476+48]..[171,6476+50])
                                                  Ppat_var "vd" (typing/rec_check.ml[171,6476+48]..[171,6476+50])
                                              ]
                                    ]
                                  pattern (typing/rec_check.ml[171,6476+54]..[171,6476+55])
                                    Ppat_any
                                ]
                          <when>
                            expression (typing/rec_check.ml[172,6533+11]..[172,6533+20])
                              Pexp_apply
                              expression (typing/rec_check.ml[172,6533+11]..[172,6533+17])
                                Pexp_ident "is_ref" (typing/rec_check.ml[172,6533+11]..[172,6533+17])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[172,6533+18]..[172,6533+20])
                                    Pexp_ident "vd" (typing/rec_check.ml[172,6533+18]..[172,6533+20])
                              ]
                          expression (typing/rec_check.ml[173,6557+8]..[173,6557+14])
                            Pexp_construct "Static" (typing/rec_check.ml[173,6557+8]..[173,6557+14])
                            None
                        <case>
                          pattern (typing/rec_check.ml[174,6572+6]..[174,6572+25])
                            Ppat_construct "Texp_apply" (typing/rec_check.ml[174,6572+6]..[174,6572+16])
                            Some
                              []
                              pattern (typing/rec_check.ml[174,6572+17]..[174,6572+25])
                                Ppat_tuple
                                [
                                  pattern (typing/rec_check.ml[174,6572+18]..[174,6572+19])
                                    Ppat_any
                                  pattern (typing/rec_check.ml[174,6572+20]..[174,6572+24])
                                    Ppat_var "args" (typing/rec_check.ml[174,6572+20]..[174,6572+24])
                                ]
                          <when>
                            expression (typing/rec_check.ml[175,6598+11]..[175,6598+45])
                              Pexp_apply
                              expression (typing/rec_check.ml[175,6598+11]..[175,6598+22])
                                Pexp_ident "List.exists" (typing/rec_check.ml[175,6598+11]..[175,6598+22])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[175,6598+23]..[175,6598+40])
                                    Pexp_ident "is_abstracted_arg" (typing/rec_check.ml[175,6598+23]..[175,6598+40])
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[175,6598+41]..[175,6598+45])
                                    Pexp_ident "args" (typing/rec_check.ml[175,6598+41]..[175,6598+45])
                              ]
                          expression (typing/rec_check.ml[176,6647+8]..[176,6647+14])
                            Pexp_construct "Static" (typing/rec_check.ml[176,6647+8]..[176,6647+14])
                            None
                        <case>
                          pattern (typing/rec_check.ml[177,6662+6]..[177,6662+18])
                            Ppat_construct "Texp_apply" (typing/rec_check.ml[177,6662+6]..[177,6662+16])
                            Some
                              []
                              pattern (typing/rec_check.ml[177,6662+17]..[177,6662+18])
                                Ppat_any
                          expression (typing/rec_check.ml[178,6684+8]..[178,6684+15])
                            Pexp_construct "Dynamic" (typing/rec_check.ml[178,6684+8]..[178,6684+15])
                            None
                        <case>
                          pattern (typing/rec_check.ml[180,6701+6]..[195,7003+34])
                            Ppat_or
                            pattern (typing/rec_check.ml[180,6701+6]..[194,6980+22])
                              Ppat_or
                              pattern (typing/rec_check.ml[180,6701+6]..[193,6962+17])
                                Ppat_or
                                pattern (typing/rec_check.ml[180,6701+6]..[192,6940+21])
                                  Ppat_or
                                  pattern (typing/rec_check.ml[180,6701+6]..[191,6920+19])
                                    Ppat_or
                                    pattern (typing/rec_check.ml[180,6701+6]..[190,6902+17])
                                      Ppat_or
                                      pattern (typing/rec_check.ml[180,6701+6]..[189,6878+23])
                                        Ppat_or
                                        pattern (typing/rec_check.ml[180,6701+6]..[188,6859+18])
                                          Ppat_or
                                          pattern (typing/rec_check.ml[180,6701+6]..[187,6837+21])
                                            Ppat_or
                                            pattern (typing/rec_check.ml[180,6701+6]..[186,6816+20])
                                              Ppat_or
                                              pattern (typing/rec_check.ml[180,6701+6]..[185,6797+18])
                                                Ppat_or
                                                pattern (typing/rec_check.ml[180,6701+6]..[184,6778+18])
                                                  Ppat_or
                                                  pattern (typing/rec_check.ml[180,6701+6]..[183,6757+20])
                                                    Ppat_or
                                                    pattern (typing/rec_check.ml[180,6701+6]..[182,6740+16])
                                                      Ppat_or
                                                      pattern (typing/rec_check.ml[180,6701+6]..[181,6718+21])
                                                        Ppat_or
                                                        pattern (typing/rec_check.ml[180,6701+6]..[180,6701+16])
                                                          Ppat_construct "Texp_for" (typing/rec_check.ml[180,6701+6]..[180,6701+14])
                                                          Some
                                                            []
                                                            pattern (typing/rec_check.ml[180,6701+15]..[180,6701+16])
                                                              Ppat_any
                                                        pattern (typing/rec_check.ml[181,6718+6]..[181,6718+21])
                                                          Ppat_construct "Texp_constant" (typing/rec_check.ml[181,6718+6]..[181,6718+19])
                                                          Some
                                                            []
                                                            pattern (typing/rec_check.ml[181,6718+20]..[181,6718+21])
                                                              Ppat_any
                                                      pattern (typing/rec_check.ml[182,6740+6]..[182,6740+16])
                                                        Ppat_construct "Texp_new" (typing/rec_check.ml[182,6740+6]..[182,6740+14])
                                                        Some
                                                          []
                                                          pattern (typing/rec_check.ml[182,6740+15]..[182,6740+16])
                                                            Ppat_any
                                                    pattern (typing/rec_check.ml[183,6757+6]..[183,6757+20])
                                                      Ppat_construct "Texp_instvar" (typing/rec_check.ml[183,6757+6]..[183,6757+18])
                                                      Some
                                                        []
                                                        pattern (typing/rec_check.ml[183,6757+19]..[183,6757+20])
                                                          Ppat_any
                                                  pattern (typing/rec_check.ml[184,6778+6]..[184,6778+18])
                                                    Ppat_construct "Texp_tuple" (typing/rec_check.ml[184,6778+6]..[184,6778+16])
                                                    Some
                                                      []
                                                      pattern (typing/rec_check.ml[184,6778+17]..[184,6778+18])
                                                        Ppat_any
                                                pattern (typing/rec_check.ml[185,6797+6]..[185,6797+18])
                                                  Ppat_construct "Texp_array" (typing/rec_check.ml[185,6797+6]..[185,6797+16])
                                                  Some
                                                    []
                                                    pattern (typing/rec_check.ml[185,6797+17]..[185,6797+18])
                                                      Ppat_any
                                              pattern (typing/rec_check.ml[186,6816+6]..[186,6816+20])
                                                Ppat_construct "Texp_variant" (typing/rec_check.ml[186,6816+6]..[186,6816+18])
                                                Some
                                                  []
                                                  pattern (typing/rec_check.ml[186,6816+19]..[186,6816+20])
                                                    Ppat_any
                                            pattern (typing/rec_check.ml[187,6837+6]..[187,6837+21])
                                              Ppat_construct "Texp_setfield" (typing/rec_check.ml[187,6837+6]..[187,6837+19])
                                              Some
                                                []
                                                pattern (typing/rec_check.ml[187,6837+20]..[187,6837+21])
                                                  Ppat_any
                                          pattern (typing/rec_check.ml[188,6859+6]..[188,6859+18])
                                            Ppat_construct "Texp_while" (typing/rec_check.ml[188,6859+6]..[188,6859+16])
                                            Some
                                              []
                                              pattern (typing/rec_check.ml[188,6859+17]..[188,6859+18])
                                                Ppat_any
                                        pattern (typing/rec_check.ml[189,6878+6]..[189,6878+23])
                                          Ppat_construct "Texp_setinstvar" (typing/rec_check.ml[189,6878+6]..[189,6878+21])
                                          Some
                                            []
                                            pattern (typing/rec_check.ml[189,6878+22]..[189,6878+23])
                                              Ppat_any
                                      pattern (typing/rec_check.ml[190,6902+6]..[190,6902+17])
                                        Ppat_construct "Texp_pack" (typing/rec_check.ml[190,6902+6]..[190,6902+15])
                                        Some
                                          []
                                          pattern (typing/rec_check.ml[190,6902+16]..[190,6902+17])
                                            Ppat_any
                                    pattern (typing/rec_check.ml[191,6920+6]..[191,6920+19])
                                      Ppat_construct "Texp_object" (typing/rec_check.ml[191,6920+6]..[191,6920+17])
                                      Some
                                        []
                                        pattern (typing/rec_check.ml[191,6920+18]..[191,6920+19])
                                          Ppat_any
                                  pattern (typing/rec_check.ml[192,6940+6]..[192,6940+21])
                                    Ppat_construct "Texp_function" (typing/rec_check.ml[192,6940+6]..[192,6940+19])
                                    Some
                                      []
                                      pattern (typing/rec_check.ml[192,6940+20]..[192,6940+21])
                                        Ppat_any
                                pattern (typing/rec_check.ml[193,6962+6]..[193,6962+17])
                                  Ppat_construct "Texp_lazy" (typing/rec_check.ml[193,6962+6]..[193,6962+15])
                                  Some
                                    []
                                    pattern (typing/rec_check.ml[193,6962+16]..[193,6962+17])
                                      Ppat_any
                              pattern (typing/rec_check.ml[194,6980+6]..[194,6980+22])
                                Ppat_construct "Texp_unreachable" (typing/rec_check.ml[194,6980+6]..[194,6980+22])
                                None
                            pattern (typing/rec_check.ml[195,7003+6]..[195,7003+34])
                              Ppat_construct "Texp_extension_constructor" (typing/rec_check.ml[195,7003+6]..[195,7003+32])
                              Some
                                []
                                pattern (typing/rec_check.ml[195,7003+33]..[195,7003+34])
                                  Ppat_any
                          expression (typing/rec_check.ml[196,7041+8]..[196,7041+14])
                            Pexp_construct "Static" (typing/rec_check.ml[196,7041+8]..[196,7041+14])
                            None
                        <case>
                          pattern (typing/rec_check.ml[198,7057+6]..[205,7196+18])
                            Ppat_or
                            pattern (typing/rec_check.ml[198,7057+6]..[204,7174+21])
                              Ppat_or
                              pattern (typing/rec_check.ml[198,7057+6]..[203,7157+16])
                                Ppat_or
                                pattern (typing/rec_check.ml[198,7057+6]..[202,7137+19])
                                  Ppat_or
                                  pattern (typing/rec_check.ml[198,7057+6]..[201,7118+18])
                                    Ppat_or
                                    pattern (typing/rec_check.ml[198,7057+6]..[200,7100+17])
                                      Ppat_or
                                      pattern (typing/rec_check.ml[198,7057+6]..[199,7076+23])
                                        Ppat_or
                                        pattern (typing/rec_check.ml[198,7057+6]..[198,7057+18])
                                          Ppat_construct "Texp_match" (typing/rec_check.ml[198,7057+6]..[198,7057+16])
                                          Some
                                            []
                                            pattern (typing/rec_check.ml[198,7057+17]..[198,7057+18])
                                              Ppat_any
                                        pattern (typing/rec_check.ml[199,7076+6]..[199,7076+23])
                                          Ppat_construct "Texp_ifthenelse" (typing/rec_check.ml[199,7076+6]..[199,7076+21])
                                          Some
                                            []
                                            pattern (typing/rec_check.ml[199,7076+22]..[199,7076+23])
                                              Ppat_any
                                      pattern (typing/rec_check.ml[200,7100+6]..[200,7100+17])
                                        Ppat_construct "Texp_send" (typing/rec_check.ml[200,7100+6]..[200,7100+15])
                                        Some
                                          []
                                          pattern (typing/rec_check.ml[200,7100+16]..[200,7100+17])
                                            Ppat_any
                                    pattern (typing/rec_check.ml[201,7118+6]..[201,7118+18])
                                      Ppat_construct "Texp_field" (typing/rec_check.ml[201,7118+6]..[201,7118+16])
                                      Some
                                        []
                                        pattern (typing/rec_check.ml[201,7118+17]..[201,7118+18])
                                          Ppat_any
                                  pattern (typing/rec_check.ml[202,7137+6]..[202,7137+19])
                                    Ppat_construct "Texp_assert" (typing/rec_check.ml[202,7137+6]..[202,7137+17])
                                    Some
                                      []
                                      pattern (typing/rec_check.ml[202,7137+18]..[202,7137+19])
                                        Ppat_any
                                pattern (typing/rec_check.ml[203,7157+6]..[203,7157+16])
                                  Ppat_construct "Texp_try" (typing/rec_check.ml[203,7157+6]..[203,7157+14])
                                  Some
                                    []
                                    pattern (typing/rec_check.ml[203,7157+15]..[203,7157+16])
                                      Ppat_any
                              pattern (typing/rec_check.ml[204,7174+6]..[204,7174+21])
                                Ppat_construct "Texp_override" (typing/rec_check.ml[204,7174+6]..[204,7174+19])
                                Some
                                  []
                                  pattern (typing/rec_check.ml[204,7174+20]..[204,7174+21])
                                    Ppat_any
                            pattern (typing/rec_check.ml[205,7196+6]..[205,7196+18])
                              Ppat_construct "Texp_letop" (typing/rec_check.ml[205,7196+6]..[205,7196+16])
                              Some
                                []
                                pattern (typing/rec_check.ml[205,7196+17]..[205,7196+18])
                                  Ppat_any
                          expression (typing/rec_check.ml[206,7218+8]..[206,7218+15])
                            Pexp_construct "Dynamic" (typing/rec_check.ml[206,7218+8]..[206,7218+15])
                            None
                      ]
              <def>
                pattern (typing/rec_check.ml[207,7234+6]..[207,7234+29])
                  Ppat_var "classify_value_bindings" (typing/rec_check.ml[207,7234+6]..[207,7234+29])
                expression (typing/rec_check.ml[207,7234+30]..[230,8046+49]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/rec_check.ml[207,7234+30]..[207,7234+38])
                    Ppat_var "rec_flag" (typing/rec_check.ml[207,7234+30]..[207,7234+38])
                  expression (typing/rec_check.ml[207,7234+39]..[230,8046+49]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/rec_check.ml[207,7234+39]..[207,7234+42])
                      Ppat_var "env" (typing/rec_check.ml[207,7234+39]..[207,7234+42])
                    expression (typing/rec_check.ml[207,7234+43]..[230,8046+49]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/rec_check.ml[207,7234+43]..[207,7234+51])
                        Ppat_var "bindings" (typing/rec_check.ml[207,7234+43]..[207,7234+51])
                      expression (typing/rec_check.ml[219,7693+4]..[230,8046+49])
                        Pexp_sequence
                        expression (typing/rec_check.ml[219,7693+4]..[219,7693+19])
                          Pexp_apply
                          expression (typing/rec_check.ml[219,7693+4]..[219,7693+10])
                            Pexp_ident "ignore" (typing/rec_check.ml[219,7693+4]..[219,7693+10])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[219,7693+11]..[219,7693+19])
                                Pexp_ident "rec_flag" (typing/rec_check.ml[219,7693+11]..[219,7693+19])
                          ]
                        expression (typing/rec_check.ml[220,7714+4]..[230,8046+49])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/rec_check.ml[220,7714+8]..[220,7714+15])
                                Ppat_var "old_env" (typing/rec_check.ml[220,7714+8]..[220,7714+15])
                              expression (typing/rec_check.ml[220,7714+18]..[220,7714+21])
                                Pexp_ident "env" (typing/rec_check.ml[220,7714+18]..[220,7714+21])
                          ]
                          expression (typing/rec_check.ml[221,7739+4]..[230,8046+49])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/rec_check.ml[221,7739+8]..[221,7739+25])
                                  Ppat_var "add_value_binding" (typing/rec_check.ml[221,7739+8]..[221,7739+25])
                                expression (typing/rec_check.ml[221,7739+26]..[228,8025+13]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/rec_check.ml[221,7739+26]..[221,7739+29])
                                    Ppat_var "env" (typing/rec_check.ml[221,7739+26]..[221,7739+29])
                                  expression (typing/rec_check.ml[221,7739+30]..[228,8025+13]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/rec_check.ml[221,7739+30]..[221,7739+32])
                                      Ppat_var "vb" (typing/rec_check.ml[221,7739+30]..[221,7739+32])
                                    expression (typing/rec_check.ml[222,7774+6]..[228,8025+13])
                                      Pexp_match
                                      expression (typing/rec_check.ml[222,7774+12]..[222,7774+30])
                                        Pexp_field
                                        expression (typing/rec_check.ml[222,7774+12]..[222,7774+21])
                                          Pexp_field
                                          expression (typing/rec_check.ml[222,7774+12]..[222,7774+14])
                                            Pexp_ident "vb" (typing/rec_check.ml[222,7774+12]..[222,7774+14])
                                          "vb_pat" (typing/rec_check.ml[222,7774+15]..[222,7774+21])
                                        "pat_desc" (typing/rec_check.ml[222,7774+22]..[222,7774+30])
                                      [
                                        <case>
                                          pattern (typing/rec_check.ml[223,7810+8]..[223,7810+27])
                                            Ppat_construct "Tpat_var" (typing/rec_check.ml[223,7810+8]..[223,7810+16])
                                            Some
                                              []
                                              pattern (typing/rec_check.ml[223,7810+17]..[223,7810+27])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/rec_check.ml[223,7810+18]..[223,7810+20])
                                                    Ppat_var "id" (typing/rec_check.ml[223,7810+18]..[223,7810+20])
                                                  pattern (typing/rec_check.ml[223,7810+22]..[223,7810+26])
                                                    Ppat_var "_loc" (typing/rec_check.ml[223,7810+22]..[223,7810+26])
                                                ]
                                          expression (typing/rec_check.ml[224,7841+10]..[225,7904+31])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/rec_check.ml[224,7841+14]..[224,7841+18])
                                                  Ppat_var "size" (typing/rec_check.ml[224,7841+14]..[224,7841+18])
                                                expression (typing/rec_check.ml[224,7841+21]..[224,7841+59])
                                                  Pexp_apply
                                                  expression (typing/rec_check.ml[224,7841+21]..[224,7841+40])
                                                    Pexp_ident "classify_expression" (typing/rec_check.ml[224,7841+21]..[224,7841+40])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[224,7841+41]..[224,7841+48])
                                                        Pexp_ident "old_env" (typing/rec_check.ml[224,7841+41]..[224,7841+48])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[224,7841+49]..[224,7841+59])
                                                        Pexp_field
                                                        expression (typing/rec_check.ml[224,7841+49]..[224,7841+51])
                                                          Pexp_ident "vb" (typing/rec_check.ml[224,7841+49]..[224,7841+51])
                                                        "vb_expr" (typing/rec_check.ml[224,7841+52]..[224,7841+59])
                                                  ]
                                            ]
                                            expression (typing/rec_check.ml[225,7904+10]..[225,7904+31])
                                              Pexp_apply
                                              expression (typing/rec_check.ml[225,7904+10]..[225,7904+19])
                                                Pexp_ident "Ident.add" (typing/rec_check.ml[225,7904+10]..[225,7904+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/rec_check.ml[225,7904+20]..[225,7904+22])
                                                    Pexp_ident "id" (typing/rec_check.ml[225,7904+20]..[225,7904+22])
                                                <arg>
                                                Nolabel
                                                  expression (typing/rec_check.ml[225,7904+23]..[225,7904+27])
                                                    Pexp_ident "size" (typing/rec_check.ml[225,7904+23]..[225,7904+27])
                                                <arg>
                                                Nolabel
                                                  expression (typing/rec_check.ml[225,7904+28]..[225,7904+31])
                                                    Pexp_ident "env" (typing/rec_check.ml[225,7904+28]..[225,7904+31])
                                              ]
                                        <case>
                                          pattern (typing/rec_check.ml[226,7936+8]..[226,7936+9])
                                            Ppat_any
                                          expression (typing/rec_check.ml[228,8025+10]..[228,8025+13])
                                            Pexp_ident "env" (typing/rec_check.ml[228,8025+10]..[228,8025+13])
                                      ]
                            ]
                            expression (typing/rec_check.ml[230,8046+4]..[230,8046+49])
                              Pexp_apply
                              expression (typing/rec_check.ml[230,8046+4]..[230,8046+18])
                                Pexp_ident "List.fold_left" (typing/rec_check.ml[230,8046+4]..[230,8046+18])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[230,8046+19]..[230,8046+36])
                                    Pexp_ident "add_value_binding" (typing/rec_check.ml[230,8046+19]..[230,8046+36])
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[230,8046+37]..[230,8046+40])
                                    Pexp_ident "env" (typing/rec_check.ml[230,8046+37]..[230,8046+40])
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[230,8046+41]..[230,8046+49])
                                    Pexp_ident "bindings" (typing/rec_check.ml[230,8046+41]..[230,8046+49])
                              ]
              <def>
                pattern (typing/rec_check.ml[231,8096+6]..[231,8096+19])
                  Ppat_var "classify_path" (typing/rec_check.ml[231,8096+6]..[231,8096+19])
                expression (typing/rec_check.ml[231,8096+20]..[256,9233+15]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/rec_check.ml[231,8096+20]..[231,8096+23])
                    Ppat_var "env" (typing/rec_check.ml[231,8096+20]..[231,8096+23])
                  expression (typing/rec_check.ml[231,8096+26]..[256,9233+15])
                    Pexp_function
                    [
                      <case>
                        pattern (typing/rec_check.ml[232,8131+6]..[232,8131+19])
                          Ppat_construct "Path.Pident" (typing/rec_check.ml[232,8131+6]..[232,8131+17])
                          Some
                            []
                            pattern (typing/rec_check.ml[232,8131+18]..[232,8131+19])
                              Ppat_var "x" (typing/rec_check.ml[232,8131+18]..[232,8131+19])
                        expression (typing/rec_check.ml[233,8154+8]..[251,9012+11])
                          Pexp_try
                          expression (typing/rec_check.ml[234,8168+14]..[234,8168+35])
                            Pexp_apply
                            expression (typing/rec_check.ml[234,8168+14]..[234,8168+29])
                              Pexp_ident "Ident.find_same" (typing/rec_check.ml[234,8168+14]..[234,8168+29])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[234,8168+30]..[234,8168+31])
                                  Pexp_ident "x" (typing/rec_check.ml[234,8168+30]..[234,8168+31])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[234,8168+32]..[234,8168+35])
                                  Pexp_ident "env" (typing/rec_check.ml[234,8168+32]..[234,8168+35])
                            ]
                          [
                            <case>
                              pattern (typing/rec_check.ml[235,8204+15]..[235,8204+24])
                                Ppat_construct "Not_found" (typing/rec_check.ml[235,8204+15]..[235,8204+24])
                                None
                              expression (typing/rec_check.ml[250,8992+12]..[250,8992+19])
                                Pexp_construct "Dynamic" (typing/rec_check.ml[250,8992+12]..[250,8992+19])
                                None
                          ]
                      <case>
                        pattern (typing/rec_check.ml[252,9024+6]..[252,9024+33])
                          Ppat_or
                          pattern (typing/rec_check.ml[252,9024+6]..[252,9024+17])
                            Ppat_construct "Path.Pdot" (typing/rec_check.ml[252,9024+6]..[252,9024+15])
                            Some
                              []
                              pattern (typing/rec_check.ml[252,9024+16]..[252,9024+17])
                                Ppat_any
                          pattern (typing/rec_check.ml[252,9024+20]..[252,9024+33])
                            Ppat_construct "Path.Papply" (typing/rec_check.ml[252,9024+20]..[252,9024+31])
                            Some
                              []
                              pattern (typing/rec_check.ml[252,9024+32]..[252,9024+33])
                                Ppat_any
                        expression (typing/rec_check.ml[256,9233+8]..[256,9233+15])
                          Pexp_construct "Dynamic" (typing/rec_check.ml[256,9233+8]..[256,9233+15])
                          None
                    ]
            ]
            expression (typing/rec_check.ml[257,9249+5]..[257,9249+36])
              Pexp_apply
              expression (typing/rec_check.ml[257,9249+5]..[257,9249+24])
                Pexp_ident "classify_expression" (typing/rec_check.ml[257,9249+5]..[257,9249+24])
              [
                <arg>
                Nolabel
                  expression (typing/rec_check.ml[257,9249+25]..[257,9249+36])
                    Pexp_ident "Ident.empty" (typing/rec_check.ml[257,9249+25]..[257,9249+36])
              ]
          core_type (typing/rec_check.ml[124,4989+26]..[124,4989+52])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[124,4989+26]..[124,4989+46])
              Ptyp_constr "Typedtree.expression" (typing/rec_check.ml[124,4989+26]..[124,4989+46])
              []
            core_type (typing/rec_check.ml[124,4989+50]..[124,4989+52])
              Ptyp_constr "sd" (typing/rec_check.ml[124,4989+50]..[124,4989+52])
              []
    ]
  structure_item (typing/rec_check.ml[260,9288+0]..[260,9288+39])
    Pstr_attribute "ocaml.text"
    [
      structure_item (typing/rec_check.ml[260,9288+0]..[260,9288+39])
        Pstr_eval
        expression (typing/rec_check.ml[260,9288+0]..[260,9288+39])
          Pexp_constant PConst_string(" {1 Usage of recursive variables} ",(typing/rec_check.ml[260,9288+0]..[260,9288+39]),None)
    ]
  structure_item (typing/rec_check.ml[262,9329+0]..[343,12603+3])
    Pstr_module
    "Mode" (typing/rec_check.ml[262,9329+7]..[262,9329+11])
      module_expr (typing/rec_check.ml[262,9329+14]..[343,12603+3])
        Pmod_structure
        [
          structure_item (typing/rec_check.ml[266,9536+2]..[300,11122+17])
            Pstr_type Rec
            [
              type_declaration "t" (typing/rec_check.ml[266,9536+7]..[266,9536+8]) (typing/rec_check.ml[266,9536+2]..[300,11122+17])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/rec_check.ml[263,9350+2]..[265,9488+47])
                      Pstr_eval
                      expression (typing/rec_check.ml[263,9350+2]..[265,9488+47])
                        Pexp_constant PConst_string(" For an expression in a program, its \"usage mode\" represents\n      static information about how the value produced by the expression\n      will be used by the context around it. ",(typing/rec_check.ml[263,9350+2]..[265,9488+47]),None)
                  ]
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (typing/rec_check.ml[267,9547+4]..[267,9547+12])
                        "Ignore" (typing/rec_check.ml[267,9547+6]..[267,9547+12])
                        attribute "ocaml.doc"
                          [
                            structure_item (typing/rec_check.ml[268,9560+4]..[270,9695+65])
                              Pstr_eval
                              expression (typing/rec_check.ml[268,9560+4]..[270,9695+65])
                                Pexp_constant PConst_string(" [Ignore] is for subexpressions that are not used at all during\n       the evaluation of the whole program. This is the mode of\n       a variable in an expression in which it does not occur. ",(typing/rec_check.ml[268,9560+4]..[270,9695+65]),None)
                          ]
                        []
                        None
                      (typing/rec_check.ml[272,9762+4]..[272,9762+11])
                        "Delay" (typing/rec_check.ml[272,9762+6]..[272,9762+11])
                        attribute "ocaml.doc"
                          [
                            structure_item (typing/rec_check.ml[273,9774+4]..[275,9934+66])
                              Pstr_eval
                              expression (typing/rec_check.ml[273,9774+4]..[275,9934+66])
                                Pexp_constant PConst_string(" A [Delay] context can be fully evaluated without evaluating its argument\n        , which will only be needed at a later point of program execution. For\n        example, [fun x -> ?] or [lazy ?] are [Delay] contexts. ",(typing/rec_check.ml[273,9774+4]..[275,9934+66]),None)
                          ]
                        []
                        None
                      (typing/rec_check.ml[277,10002+4]..[277,10002+11])
                        "Guard" (typing/rec_check.ml[277,10002+6]..[277,10002+11])
                        attribute "ocaml.doc"
                          [
                            structure_item (typing/rec_check.ml[278,10014+4]..[292,10806+6])
                              Pstr_eval
                              expression (typing/rec_check.ml[278,10014+4]..[292,10806+6])
                                Pexp_constant PConst_string(" A [Guard] context returns the value as a member of a data structure,\n        for example a variant constructor or record. The value can safely be\n        defined mutually-recursively with their context, for example in\n        [let rec li = 1 :: li].\n        When these subexpressions participate in a cyclic definition,\n        this definition is productive/guarded.\n\n        The [Guard] mode is also used when a value is not dereferenced,\n        it is returned by a sub-expression, but the result of this\n        sub-expression is discarded instead of being returned.\n        For example, the subterm [?] is in a [Guard] context\n        in [let _ = ? in e] and in [?; e].\n        When these subexpressions participate in a cyclic definition,\n        they cannot create a self-loop.\n    ",(typing/rec_check.ml[278,10014+4]..[292,10806+6]),None)
                          ]
                        []
                        None
                      (typing/rec_check.ml[294,10814+4]..[294,10814+12])
                        "Return" (typing/rec_check.ml[294,10814+6]..[294,10814+12])
                        attribute "ocaml.doc"
                          [
                            structure_item (typing/rec_check.ml[295,10827+4]..[298,11051+69])
                              Pstr_eval
                              expression (typing/rec_check.ml[295,10827+4]..[298,11051+69])
                                Pexp_constant PConst_string(" A [Return] context returns its value without further inspection.\n        This value cannot be defined mutually-recursively with its context,\n        as there is a risk of self-loop: in [let rec x = y and y = x], the\n        two definitions use a single variable in [Return] context. ",(typing/rec_check.ml[295,10827+4]..[298,11051+69]),None)
                          ]
                        []
                        None
                      (typing/rec_check.ml[300,11122+4]..[300,11122+17])
                        "Dereference" (typing/rec_check.ml[300,11122+6]..[300,11122+17])
                        attribute "ocaml.doc"
                          [
                            structure_item (typing/rec_check.ml[301,11140+4]..[303,11285+80])
                              Pstr_eval
                              expression (typing/rec_check.ml[301,11140+4]..[303,11285+80])
                                Pexp_constant PConst_string(" A [Dereference] context consumes, inspects and uses the value\n        in arbitrary ways. Such a value must be fully defined at the point\n        of usage, it cannot be defined mutually-recursively with its context. ",(typing/rec_check.ml[301,11140+4]..[303,11285+80]),None)
                          ]
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (typing/rec_check.ml[305,11367+2]..[305,11367+36])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/rec_check.ml[305,11367+6]..[305,11367+11])
                  Ppat_var "equal" (typing/rec_check.ml[305,11367+6]..[305,11367+11])
                expression (typing/rec_check.ml[305,11367+14]..[305,11367+36])
                  Pexp_constraint
                  expression (typing/rec_check.ml[305,11367+15]..[305,11367+18])
                    Pexp_ident "=" (typing/rec_check.ml[305,11367+15]..[305,11367+18])
                  core_type (typing/rec_check.ml[305,11367+21]..[305,11367+35])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/rec_check.ml[305,11367+21]..[305,11367+22])
                      Ptyp_constr "t" (typing/rec_check.ml[305,11367+21]..[305,11367+22])
                      []
                    core_type (typing/rec_check.ml[305,11367+26]..[305,11367+35])
                      Ptyp_arrow
                      Nolabel
                      core_type (typing/rec_check.ml[305,11367+26]..[305,11367+27])
                        Ptyp_constr "t" (typing/rec_check.ml[305,11367+26]..[305,11367+27])
                        []
                      core_type (typing/rec_check.ml[305,11367+31]..[305,11367+35])
                        Ptyp_constr "bool" (typing/rec_check.ml[305,11367+31]..[305,11367+35])
                        []
            ]
          structure_item (typing/rec_check.ml[312,11592+2]..[317,11684+22])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/rec_check.ml[312,11592+6]..[312,11592+10])
                  Ppat_var "rank" (typing/rec_check.ml[312,11592+6]..[312,11592+10])
                expression (typing/rec_check.ml[312,11592+13]..[317,11684+22])
                  Pexp_function
                  [
                    <case>
                      pattern (typing/rec_check.ml[313,11614+6]..[313,11614+12])
                        Ppat_construct "Ignore" (typing/rec_check.ml[313,11614+6]..[313,11614+12])
                        None
                      expression (typing/rec_check.ml[313,11614+16]..[313,11614+17])
                        Pexp_constant PConst_int (0,None)
                    <case>
                      pattern (typing/rec_check.ml[314,11632+6]..[314,11632+11])
                        Ppat_construct "Delay" (typing/rec_check.ml[314,11632+6]..[314,11632+11])
                        None
                      expression (typing/rec_check.ml[314,11632+15]..[314,11632+16])
                        Pexp_constant PConst_int (1,None)
                    <case>
                      pattern (typing/rec_check.ml[315,11649+6]..[315,11649+11])
                        Ppat_construct "Guard" (typing/rec_check.ml[315,11649+6]..[315,11649+11])
                        None
                      expression (typing/rec_check.ml[315,11649+15]..[315,11649+16])
                        Pexp_constant PConst_int (2,None)
                    <case>
                      pattern (typing/rec_check.ml[316,11666+6]..[316,11666+12])
                        Ppat_construct "Return" (typing/rec_check.ml[316,11666+6]..[316,11666+12])
                        None
                      expression (typing/rec_check.ml[316,11666+16]..[316,11666+17])
                        Pexp_constant PConst_int (3,None)
                    <case>
                      pattern (typing/rec_check.ml[317,11684+6]..[317,11684+17])
                        Ppat_construct "Dereference" (typing/rec_check.ml[317,11684+6]..[317,11684+17])
                        None
                      expression (typing/rec_check.ml[317,11684+21]..[317,11684+22])
                        Pexp_constant PConst_int (4,None)
                  ]
            ]
          structure_item (typing/rec_check.ml[324,11852+2]..[325,11870+39])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/rec_check.ml[324,11852+6]..[324,11852+10])
                  Ppat_var "join" (typing/rec_check.ml[324,11852+6]..[324,11852+10])
                expression (typing/rec_check.ml[324,11852+11]..[325,11870+39]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/rec_check.ml[324,11852+11]..[324,11852+12])
                    Ppat_var "m" (typing/rec_check.ml[324,11852+11]..[324,11852+12])
                  expression (typing/rec_check.ml[324,11852+13]..[325,11870+39]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/rec_check.ml[324,11852+13]..[324,11852+15])
                      Ppat_var "m'" (typing/rec_check.ml[324,11852+13]..[324,11852+15])
                    expression (typing/rec_check.ml[325,11870+4]..[325,11870+39])
                      Pexp_ifthenelse
                      expression (typing/rec_check.ml[325,11870+7]..[325,11870+24])
                        Pexp_apply
                        expression (typing/rec_check.ml[325,11870+14]..[325,11870+16])
                          Pexp_ident ">=" (typing/rec_check.ml[325,11870+14]..[325,11870+16])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[325,11870+7]..[325,11870+13])
                              Pexp_apply
                              expression (typing/rec_check.ml[325,11870+7]..[325,11870+11])
                                Pexp_ident "rank" (typing/rec_check.ml[325,11870+7]..[325,11870+11])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[325,11870+12]..[325,11870+13])
                                    Pexp_ident "m" (typing/rec_check.ml[325,11870+12]..[325,11870+13])
                              ]
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[325,11870+17]..[325,11870+24])
                              Pexp_apply
                              expression (typing/rec_check.ml[325,11870+17]..[325,11870+21])
                                Pexp_ident "rank" (typing/rec_check.ml[325,11870+17]..[325,11870+21])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[325,11870+22]..[325,11870+24])
                                    Pexp_ident "m'" (typing/rec_check.ml[325,11870+22]..[325,11870+24])
                              ]
                        ]
                      expression (typing/rec_check.ml[325,11870+30]..[325,11870+31])
                        Pexp_ident "m" (typing/rec_check.ml[325,11870+30]..[325,11870+31])
                      Some
                        expression (typing/rec_check.ml[325,11870+37]..[325,11870+39])
                          Pexp_ident "m'" (typing/rec_check.ml[325,11870+37]..[325,11870+39])
            ]
          structure_item (typing/rec_check.ml[335,12296+2]..[342,12547+55])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/rec_check.ml[335,12296+6]..[335,12296+13])
                  Ppat_var "compose" (typing/rec_check.ml[335,12296+6]..[335,12296+13])
                expression (typing/rec_check.ml[335,12296+14]..[342,12547+55]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/rec_check.ml[335,12296+14]..[335,12296+16])
                    Ppat_var "m'" (typing/rec_check.ml[335,12296+14]..[335,12296+16])
                  expression (typing/rec_check.ml[335,12296+17]..[342,12547+55]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/rec_check.ml[335,12296+17]..[335,12296+18])
                      Ppat_var "m" (typing/rec_check.ml[335,12296+17]..[335,12296+18])
                    expression (typing/rec_check.ml[335,12296+21]..[342,12547+55])
                      Pexp_match
                      expression (typing/rec_check.ml[335,12296+27]..[335,12296+32])
                        Pexp_tuple
                        [
                          expression (typing/rec_check.ml[335,12296+27]..[335,12296+29])
                            Pexp_ident "m'" (typing/rec_check.ml[335,12296+27]..[335,12296+29])
                          expression (typing/rec_check.ml[335,12296+31]..[335,12296+32])
                            Pexp_ident "m" (typing/rec_check.ml[335,12296+31]..[335,12296+32])
                        ]
                      [
                        <case>
                          pattern (typing/rec_check.ml[336,12334+6]..[336,12334+27])
                            Ppat_or
                            pattern (typing/rec_check.ml[336,12334+6]..[336,12334+15])
                              Ppat_tuple
                              [
                                pattern (typing/rec_check.ml[336,12334+6]..[336,12334+12])
                                  Ppat_construct "Ignore" (typing/rec_check.ml[336,12334+6]..[336,12334+12])
                                  None
                                pattern (typing/rec_check.ml[336,12334+14]..[336,12334+15])
                                  Ppat_any
                              ]
                            pattern (typing/rec_check.ml[336,12334+18]..[336,12334+27])
                              Ppat_tuple
                              [
                                pattern (typing/rec_check.ml[336,12334+18]..[336,12334+19])
                                  Ppat_any
                                pattern (typing/rec_check.ml[336,12334+21]..[336,12334+27])
                                  Ppat_construct "Ignore" (typing/rec_check.ml[336,12334+21]..[336,12334+27])
                                  None
                              ]
                          expression (typing/rec_check.ml[336,12334+31]..[336,12334+37])
                            Pexp_construct "Ignore" (typing/rec_check.ml[336,12334+31]..[336,12334+37])
                            None
                        <case>
                          pattern (typing/rec_check.ml[337,12372+6]..[337,12372+20])
                            Ppat_tuple
                            [
                              pattern (typing/rec_check.ml[337,12372+6]..[337,12372+17])
                                Ppat_construct "Dereference" (typing/rec_check.ml[337,12372+6]..[337,12372+17])
                                None
                              pattern (typing/rec_check.ml[337,12372+19]..[337,12372+20])
                                Ppat_any
                            ]
                          expression (typing/rec_check.ml[337,12372+24]..[337,12372+35])
                            Pexp_construct "Dereference" (typing/rec_check.ml[337,12372+24]..[337,12372+35])
                            None
                        <case>
                          pattern (typing/rec_check.ml[338,12408+6]..[338,12408+14])
                            Ppat_tuple
                            [
                              pattern (typing/rec_check.ml[338,12408+6]..[338,12408+11])
                                Ppat_construct "Delay" (typing/rec_check.ml[338,12408+6]..[338,12408+11])
                                None
                              pattern (typing/rec_check.ml[338,12408+13]..[338,12408+14])
                                Ppat_any
                            ]
                          expression (typing/rec_check.ml[338,12408+18]..[338,12408+23])
                            Pexp_construct "Delay" (typing/rec_check.ml[338,12408+18]..[338,12408+23])
                            None
                        <case>
                          pattern (typing/rec_check.ml[339,12432+6]..[339,12432+19])
                            Ppat_tuple
                            [
                              pattern (typing/rec_check.ml[339,12432+6]..[339,12432+11])
                                Ppat_construct "Guard" (typing/rec_check.ml[339,12432+6]..[339,12432+11])
                                None
                              pattern (typing/rec_check.ml[339,12432+13]..[339,12432+19])
                                Ppat_construct "Return" (typing/rec_check.ml[339,12432+13]..[339,12432+19])
                                None
                            ]
                          expression (typing/rec_check.ml[339,12432+23]..[339,12432+28])
                            Pexp_construct "Guard" (typing/rec_check.ml[339,12432+23]..[339,12432+28])
                            None
                        <case>
                          pattern (typing/rec_check.ml[340,12461+6]..[340,12461+49])
                            Ppat_tuple
                            [
                              pattern (typing/rec_check.ml[340,12461+6]..[340,12461+11])
                                Ppat_construct "Guard" (typing/rec_check.ml[340,12461+6]..[340,12461+11])
                                None
                              pattern (typing/rec_check.ml[340,12461+13]..[340,12461+49])
                                Ppat_alias "m" (typing/rec_check.ml[340,12461+47]..[340,12461+48])
                                pattern (typing/rec_check.ml[340,12461+14]..[340,12461+43])
                                  Ppat_or
                                  pattern (typing/rec_check.ml[340,12461+15]..[340,12461+34])
                                    Ppat_or
                                    pattern (typing/rec_check.ml[340,12461+15]..[340,12461+26])
                                      Ppat_construct "Dereference" (typing/rec_check.ml[340,12461+15]..[340,12461+26])
                                      None
                                    pattern (typing/rec_check.ml[340,12461+29]..[340,12461+34])
                                      Ppat_construct "Guard" (typing/rec_check.ml[340,12461+29]..[340,12461+34])
                                      None
                                  pattern (typing/rec_check.ml[340,12461+37]..[340,12461+42])
                                    Ppat_construct "Delay" (typing/rec_check.ml[340,12461+37]..[340,12461+42])
                                    None
                            ]
                          expression (typing/rec_check.ml[340,12461+53]..[340,12461+54])
                            Pexp_ident "m" (typing/rec_check.ml[340,12461+53]..[340,12461+54])
                        <case>
                          pattern (typing/rec_check.ml[341,12516+6]..[341,12516+20])
                            Ppat_tuple
                            [
                              pattern (typing/rec_check.ml[341,12516+6]..[341,12516+12])
                                Ppat_construct "Return" (typing/rec_check.ml[341,12516+6]..[341,12516+12])
                                None
                              pattern (typing/rec_check.ml[341,12516+14]..[341,12516+20])
                                Ppat_construct "Return" (typing/rec_check.ml[341,12516+14]..[341,12516+20])
                                None
                            ]
                          expression (typing/rec_check.ml[341,12516+24]..[341,12516+30])
                            Pexp_construct "Return" (typing/rec_check.ml[341,12516+24]..[341,12516+30])
                            None
                        <case>
                          pattern (typing/rec_check.ml[342,12547+6]..[342,12547+50])
                            Ppat_tuple
                            [
                              pattern (typing/rec_check.ml[342,12547+6]..[342,12547+12])
                                Ppat_construct "Return" (typing/rec_check.ml[342,12547+6]..[342,12547+12])
                                None
                              pattern (typing/rec_check.ml[342,12547+14]..[342,12547+50])
                                Ppat_alias "m" (typing/rec_check.ml[342,12547+48]..[342,12547+49])
                                pattern (typing/rec_check.ml[342,12547+15]..[342,12547+44])
                                  Ppat_or
                                  pattern (typing/rec_check.ml[342,12547+16]..[342,12547+35])
                                    Ppat_or
                                    pattern (typing/rec_check.ml[342,12547+16]..[342,12547+27])
                                      Ppat_construct "Dereference" (typing/rec_check.ml[342,12547+16]..[342,12547+27])
                                      None
                                    pattern (typing/rec_check.ml[342,12547+30]..[342,12547+35])
                                      Ppat_construct "Guard" (typing/rec_check.ml[342,12547+30]..[342,12547+35])
                                      None
                                  pattern (typing/rec_check.ml[342,12547+38]..[342,12547+43])
                                    Ppat_construct "Delay" (typing/rec_check.ml[342,12547+38]..[342,12547+43])
                                    None
                            ]
                          expression (typing/rec_check.ml[342,12547+54]..[342,12547+55])
                            Pexp_ident "m" (typing/rec_check.ml[342,12547+54]..[342,12547+55])
                      ]
            ]
        ]
  structure_item (typing/rec_check.ml[345,12608+0]..[345,12608+66])
    Pstr_type Rec
    [
      type_declaration "mode" (typing/rec_check.ml[345,12608+5]..[345,12608+9]) (typing/rec_check.ml[345,12608+0]..[345,12608+66])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/rec_check.ml[345,12608+21]..[345,12608+27])
                "Ignore" (typing/rec_check.ml[345,12608+21]..[345,12608+27])
                []
                None
              (typing/rec_check.ml[345,12608+28]..[345,12608+35])
                "Delay" (typing/rec_check.ml[345,12608+30]..[345,12608+35])
                []
                None
              (typing/rec_check.ml[345,12608+36]..[345,12608+43])
                "Guard" (typing/rec_check.ml[345,12608+38]..[345,12608+43])
                []
                None
              (typing/rec_check.ml[345,12608+44]..[345,12608+52])
                "Return" (typing/rec_check.ml[345,12608+46]..[345,12608+52])
                []
                None
              (typing/rec_check.ml[345,12608+53]..[345,12608+66])
                "Dereference" (typing/rec_check.ml[345,12608+55]..[345,12608+66])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/rec_check.ml[345,12608+12]..[345,12608+18])
              Ptyp_constr "Mode.t" (typing/rec_check.ml[345,12608+12]..[345,12608+18])
              []
    ]
  structure_item (typing/rec_check.ml[347,12676+0]..[427,14902+3])
    Pstr_module
    "Env" (typing/rec_check.ml[347,12676+7]..[347,12676+10])
      module_expr (typing/rec_check.ml[347,12676+11]..[427,14902+3])
        Pmod_constraint
        module_expr (typing/rec_check.ml[388,13954+6]..[427,14902+3])
          Pmod_structure
          [
            structure_item (typing/rec_check.ml[389,13967+2]..[389,13967+28])
              Pstr_module
              "M" (typing/rec_check.ml[389,13967+9]..[389,13967+10])
                module_expr (typing/rec_check.ml[389,13967+13]..[389,13967+28])
                  Pmod_apply
                  module_expr (typing/rec_check.ml[389,13967+13]..[389,13967+21])
                    Pmod_ident "Map.Make" (typing/rec_check.ml[389,13967+13]..[389,13967+21])
                  module_expr (typing/rec_check.ml[389,13967+22]..[389,13967+27])
                    Pmod_ident "Ident" (typing/rec_check.ml[389,13967+22]..[389,13967+27])
            structure_item (typing/rec_check.ml[392,14061+2]..[392,14061+21])
              Pstr_type Rec
              [
                type_declaration "t" (typing/rec_check.ml[392,14061+7]..[392,14061+8]) (typing/rec_check.ml[392,14061+2]..[392,14061+21])
                  attribute "ocaml.doc"
                    [
                      structure_item (typing/rec_check.ml[391,13997+2]..[391,13997+63])
                        Pstr_eval
                        expression (typing/rec_check.ml[391,13997+2]..[391,13997+63])
                          Pexp_constant PConst_string(" A \"t\" maps each rec-bound variable to an access status ",(typing/rec_check.ml[391,13997+2]..[391,13997+63]),None)
                    ]
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (typing/rec_check.ml[392,14061+11]..[392,14061+21])
                        Ptyp_constr "M.t" (typing/rec_check.ml[392,14061+18]..[392,14061+21])
                        [
                          core_type (typing/rec_check.ml[392,14061+11]..[392,14061+17])
                            Ptyp_constr "Mode.t" (typing/rec_check.ml[392,14061+11]..[392,14061+17])
                            []
                        ]
              ]
            structure_item (typing/rec_check.ml[394,14084+2]..[394,14084+32])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/rec_check.ml[394,14084+6]..[394,14084+11])
                    Ppat_var "equal" (typing/rec_check.ml[394,14084+6]..[394,14084+11])
                  expression (typing/rec_check.ml[394,14084+14]..[394,14084+32])
                    Pexp_apply
                    expression (typing/rec_check.ml[394,14084+14]..[394,14084+21])
                      Pexp_ident "M.equal" (typing/rec_check.ml[394,14084+14]..[394,14084+21])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[394,14084+22]..[394,14084+32])
                          Pexp_ident "Mode.equal" (typing/rec_check.ml[394,14084+22]..[394,14084+32])
                    ]
              ]
            structure_item (typing/rec_check.ml[396,14118+2]..[397,14154+46])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/rec_check.ml[396,14118+6]..[396,14118+10])
                    Ppat_var "find" (typing/rec_check.ml[396,14118+6]..[396,14118+10])
                  expression (typing/rec_check.ml[396,14118+11]..[397,14154+46]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/rec_check.ml[396,14118+11]..[396,14118+24])
                      Ppat_constraint
                      pattern (typing/rec_check.ml[396,14118+12]..[396,14118+14])
                        Ppat_var "id" (typing/rec_check.ml[396,14118+12]..[396,14118+14])
                      core_type (typing/rec_check.ml[396,14118+16]..[396,14118+23])
                        Ptyp_constr "Ident.t" (typing/rec_check.ml[396,14118+16]..[396,14118+23])
                        []
                    expression (typing/rec_check.ml[396,14118+25]..[397,14154+46]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/rec_check.ml[396,14118+25]..[396,14118+33])
                        Ppat_constraint
                        pattern (typing/rec_check.ml[396,14118+26]..[396,14118+29])
                          Ppat_var "tbl" (typing/rec_check.ml[396,14118+26]..[396,14118+29])
                        core_type (typing/rec_check.ml[396,14118+31]..[396,14118+32])
                          Ptyp_constr "t" (typing/rec_check.ml[396,14118+31]..[396,14118+32])
                          []
                      expression (typing/rec_check.ml[397,14154+4]..[397,14154+46])
                        Pexp_try
                        expression (typing/rec_check.ml[397,14154+8]..[397,14154+21])
                          Pexp_apply
                          expression (typing/rec_check.ml[397,14154+8]..[397,14154+14])
                            Pexp_ident "M.find" (typing/rec_check.ml[397,14154+8]..[397,14154+14])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[397,14154+15]..[397,14154+17])
                                Pexp_ident "id" (typing/rec_check.ml[397,14154+15]..[397,14154+17])
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[397,14154+18]..[397,14154+21])
                                Pexp_ident "tbl" (typing/rec_check.ml[397,14154+18]..[397,14154+21])
                          ]
                        [
                          <case>
                            pattern (typing/rec_check.ml[397,14154+27]..[397,14154+36])
                              Ppat_construct "Not_found" (typing/rec_check.ml[397,14154+27]..[397,14154+36])
                              None
                            expression (typing/rec_check.ml[397,14154+40]..[397,14154+46])
                              Pexp_construct "Ignore" (typing/rec_check.ml[397,14154+40]..[397,14154+46])
                              None
                        ]
              ]
            structure_item (typing/rec_check.ml[399,14202+2]..[399,14202+21])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/rec_check.ml[399,14202+6]..[399,14202+11])
                    Ppat_var "empty" (typing/rec_check.ml[399,14202+6]..[399,14202+11])
                  expression (typing/rec_check.ml[399,14202+14]..[399,14202+21])
                    Pexp_ident "M.empty" (typing/rec_check.ml[399,14202+14]..[399,14202+21])
              ]
            structure_item (typing/rec_check.ml[401,14225+2]..[406,14385+9])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/rec_check.ml[401,14225+6]..[401,14225+10])
                    Ppat_var "join" (typing/rec_check.ml[401,14225+6]..[401,14225+10])
                  expression (typing/rec_check.ml[401,14225+11]..[406,14385+9]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/rec_check.ml[401,14225+11]..[401,14225+17])
                      Ppat_constraint
                      pattern (typing/rec_check.ml[401,14225+12]..[401,14225+13])
                        Ppat_var "x" (typing/rec_check.ml[401,14225+12]..[401,14225+13])
                      core_type (typing/rec_check.ml[401,14225+15]..[401,14225+16])
                        Ptyp_constr "t" (typing/rec_check.ml[401,14225+15]..[401,14225+16])
                        []
                    expression (typing/rec_check.ml[401,14225+18]..[406,14385+9]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/rec_check.ml[401,14225+18]..[401,14225+24])
                        Ppat_constraint
                        pattern (typing/rec_check.ml[401,14225+19]..[401,14225+20])
                          Ppat_var "y" (typing/rec_check.ml[401,14225+19]..[401,14225+20])
                        core_type (typing/rec_check.ml[401,14225+22]..[401,14225+23])
                          Ptyp_constr "t" (typing/rec_check.ml[401,14225+22]..[401,14225+23])
                          []
                      expression (typing/rec_check.ml[402,14252+4]..[406,14385+9])
                        Pexp_apply
                        expression (typing/rec_check.ml[402,14252+4]..[402,14252+10])
                          Pexp_ident "M.fold" (typing/rec_check.ml[402,14252+4]..[402,14252+10])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[403,14263+6]..[405,14345+39])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/rec_check.ml[403,14263+11]..[403,14263+24])
                                Ppat_constraint
                                pattern (typing/rec_check.ml[403,14263+12]..[403,14263+14])
                                  Ppat_var "id" (typing/rec_check.ml[403,14263+12]..[403,14263+14])
                                core_type (typing/rec_check.ml[403,14263+16]..[403,14263+23])
                                  Ptyp_constr "Ident.t" (typing/rec_check.ml[403,14263+16]..[403,14263+23])
                                  []
                              expression (typing/rec_check.ml[403,14263+25]..[405,14345+38]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/rec_check.ml[403,14263+25]..[403,14263+36])
                                  Ppat_constraint
                                  pattern (typing/rec_check.ml[403,14263+26]..[403,14263+27])
                                    Ppat_var "v" (typing/rec_check.ml[403,14263+26]..[403,14263+27])
                                  core_type (typing/rec_check.ml[403,14263+29]..[403,14263+35])
                                    Ptyp_constr "Mode.t" (typing/rec_check.ml[403,14263+29]..[403,14263+35])
                                    []
                                expression (typing/rec_check.ml[403,14263+37]..[405,14345+38]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/rec_check.ml[403,14263+37]..[403,14263+45])
                                    Ppat_constraint
                                    pattern (typing/rec_check.ml[403,14263+38]..[403,14263+41])
                                      Ppat_var "tbl" (typing/rec_check.ml[403,14263+38]..[403,14263+41])
                                    core_type (typing/rec_check.ml[403,14263+43]..[403,14263+44])
                                      Ptyp_constr "t" (typing/rec_check.ml[403,14263+43]..[403,14263+44])
                                      []
                                  expression (typing/rec_check.ml[404,14312+9]..[405,14345+38])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/rec_check.ml[404,14312+13]..[404,14312+15])
                                          Ppat_var "v'" (typing/rec_check.ml[404,14312+13]..[404,14312+15])
                                        expression (typing/rec_check.ml[404,14312+18]..[404,14312+29])
                                          Pexp_apply
                                          expression (typing/rec_check.ml[404,14312+18]..[404,14312+22])
                                            Pexp_ident "find" (typing/rec_check.ml[404,14312+18]..[404,14312+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[404,14312+23]..[404,14312+25])
                                                Pexp_ident "id" (typing/rec_check.ml[404,14312+23]..[404,14312+25])
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[404,14312+26]..[404,14312+29])
                                                Pexp_ident "tbl" (typing/rec_check.ml[404,14312+26]..[404,14312+29])
                                          ]
                                    ]
                                    expression (typing/rec_check.ml[405,14345+9]..[405,14345+38])
                                      Pexp_apply
                                      expression (typing/rec_check.ml[405,14345+9]..[405,14345+14])
                                        Pexp_ident "M.add" (typing/rec_check.ml[405,14345+9]..[405,14345+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[405,14345+15]..[405,14345+17])
                                            Pexp_ident "id" (typing/rec_check.ml[405,14345+15]..[405,14345+17])
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[405,14345+18]..[405,14345+34])
                                            Pexp_apply
                                            expression (typing/rec_check.ml[405,14345+19]..[405,14345+28])
                                              Pexp_ident "Mode.join" (typing/rec_check.ml[405,14345+19]..[405,14345+28])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[405,14345+29]..[405,14345+30])
                                                  Pexp_ident "v" (typing/rec_check.ml[405,14345+29]..[405,14345+30])
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[405,14345+31]..[405,14345+33])
                                                  Pexp_ident "v'" (typing/rec_check.ml[405,14345+31]..[405,14345+33])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[405,14345+35]..[405,14345+38])
                                            Pexp_ident "tbl" (typing/rec_check.ml[405,14345+35]..[405,14345+38])
                                      ]
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[406,14385+6]..[406,14385+7])
                              Pexp_ident "x" (typing/rec_check.ml[406,14385+6]..[406,14385+7])
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[406,14385+8]..[406,14385+9])
                              Pexp_ident "y" (typing/rec_check.ml[406,14385+8]..[406,14385+9])
                        ]
              ]
            structure_item (typing/rec_check.ml[408,14396+2]..[408,14396+49])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/rec_check.ml[408,14396+6]..[408,14396+15])
                    Ppat_var "join_list" (typing/rec_check.ml[408,14396+6]..[408,14396+15])
                  expression (typing/rec_check.ml[408,14396+16]..[408,14396+49]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/rec_check.ml[408,14396+16]..[408,14396+18])
                      Ppat_var "li" (typing/rec_check.ml[408,14396+16]..[408,14396+18])
                    expression (typing/rec_check.ml[408,14396+21]..[408,14396+49])
                      Pexp_apply
                      expression (typing/rec_check.ml[408,14396+21]..[408,14396+35])
                        Pexp_ident "List.fold_left" (typing/rec_check.ml[408,14396+21]..[408,14396+35])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[408,14396+36]..[408,14396+40])
                            Pexp_ident "join" (typing/rec_check.ml[408,14396+36]..[408,14396+40])
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[408,14396+41]..[408,14396+46])
                            Pexp_ident "empty" (typing/rec_check.ml[408,14396+41]..[408,14396+46])
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[408,14396+47]..[408,14396+49])
                            Pexp_ident "li" (typing/rec_check.ml[408,14396+47]..[408,14396+49])
                      ]
              ]
            structure_item (typing/rec_check.ml[410,14447+2]..[411,14469+30])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/rec_check.ml[410,14447+6]..[410,14447+13])
                    Ppat_var "compose" (typing/rec_check.ml[410,14447+6]..[410,14447+13])
                  expression (typing/rec_check.ml[410,14447+14]..[411,14469+30]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/rec_check.ml[410,14447+14]..[410,14447+15])
                      Ppat_var "m" (typing/rec_check.ml[410,14447+14]..[410,14447+15])
                    expression (typing/rec_check.ml[410,14447+16]..[411,14469+30]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/rec_check.ml[410,14447+16]..[410,14447+19])
                        Ppat_var "env" (typing/rec_check.ml[410,14447+16]..[410,14447+19])
                      expression (typing/rec_check.ml[411,14469+4]..[411,14469+30])
                        Pexp_apply
                        expression (typing/rec_check.ml[411,14469+4]..[411,14469+9])
                          Pexp_ident "M.map" (typing/rec_check.ml[411,14469+4]..[411,14469+9])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[411,14469+10]..[411,14469+26])
                              Pexp_apply
                              expression (typing/rec_check.ml[411,14469+11]..[411,14469+23])
                                Pexp_ident "Mode.compose" (typing/rec_check.ml[411,14469+11]..[411,14469+23])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[411,14469+24]..[411,14469+25])
                                    Pexp_ident "m" (typing/rec_check.ml[411,14469+24]..[411,14469+25])
                              ]
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[411,14469+27]..[411,14469+30])
                              Pexp_ident "env" (typing/rec_check.ml[411,14469+27]..[411,14469+30])
                        ]
              ]
            structure_item (typing/rec_check.ml[413,14501+2]..[413,14501+42])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/rec_check.ml[413,14501+6]..[413,14501+12])
                    Ppat_var "single" (typing/rec_check.ml[413,14501+6]..[413,14501+12])
                  expression (typing/rec_check.ml[413,14501+13]..[413,14501+42]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/rec_check.ml[413,14501+13]..[413,14501+15])
                      Ppat_var "id" (typing/rec_check.ml[413,14501+13]..[413,14501+15])
                    expression (typing/rec_check.ml[413,14501+16]..[413,14501+42]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/rec_check.ml[413,14501+16]..[413,14501+20])
                        Ppat_var "mode" (typing/rec_check.ml[413,14501+16]..[413,14501+20])
                      expression (typing/rec_check.ml[413,14501+23]..[413,14501+42])
                        Pexp_apply
                        expression (typing/rec_check.ml[413,14501+23]..[413,14501+28])
                          Pexp_ident "M.add" (typing/rec_check.ml[413,14501+23]..[413,14501+28])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[413,14501+29]..[413,14501+31])
                              Pexp_ident "id" (typing/rec_check.ml[413,14501+29]..[413,14501+31])
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[413,14501+32]..[413,14501+36])
                              Pexp_ident "mode" (typing/rec_check.ml[413,14501+32]..[413,14501+36])
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[413,14501+37]..[413,14501+42])
                              Pexp_ident "empty" (typing/rec_check.ml[413,14501+37]..[413,14501+42])
                        ]
              ]
            structure_item (typing/rec_check.ml[415,14545+2]..[416,14570+72])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/rec_check.ml[415,14545+6]..[415,14545+15])
                    Ppat_var "unguarded" (typing/rec_check.ml[415,14545+6]..[415,14545+15])
                  expression (typing/rec_check.ml[415,14545+16]..[416,14570+72]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/rec_check.ml[415,14545+16]..[415,14545+19])
                      Ppat_var "env" (typing/rec_check.ml[415,14545+16]..[415,14545+19])
                    expression (typing/rec_check.ml[415,14545+20]..[416,14570+72]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/rec_check.ml[415,14545+20]..[415,14545+22])
                        Ppat_var "li" (typing/rec_check.ml[415,14545+20]..[415,14545+22])
                      expression (typing/rec_check.ml[416,14570+4]..[416,14570+72])
                        Pexp_apply
                        expression (typing/rec_check.ml[416,14570+4]..[416,14570+15])
                          Pexp_ident "List.filter" (typing/rec_check.ml[416,14570+4]..[416,14570+15])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[416,14570+16]..[416,14570+69])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/rec_check.ml[416,14570+21]..[416,14570+23])
                                Ppat_var "id" (typing/rec_check.ml[416,14570+21]..[416,14570+23])
                              expression (typing/rec_check.ml[416,14570+27]..[416,14570+68])
                                Pexp_apply
                                expression (typing/rec_check.ml[416,14570+51]..[416,14570+52])
                                  Pexp_ident ">" (typing/rec_check.ml[416,14570+51]..[416,14570+52])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[416,14570+27]..[416,14570+50])
                                      Pexp_apply
                                      expression (typing/rec_check.ml[416,14570+27]..[416,14570+36])
                                        Pexp_ident "Mode.rank" (typing/rec_check.ml[416,14570+27]..[416,14570+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[416,14570+37]..[416,14570+50])
                                            Pexp_apply
                                            expression (typing/rec_check.ml[416,14570+38]..[416,14570+42])
                                              Pexp_ident "find" (typing/rec_check.ml[416,14570+38]..[416,14570+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[416,14570+43]..[416,14570+45])
                                                  Pexp_ident "id" (typing/rec_check.ml[416,14570+43]..[416,14570+45])
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[416,14570+46]..[416,14570+49])
                                                  Pexp_ident "env" (typing/rec_check.ml[416,14570+46]..[416,14570+49])
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[416,14570+53]..[416,14570+68])
                                      Pexp_apply
                                      expression (typing/rec_check.ml[416,14570+53]..[416,14570+62])
                                        Pexp_ident "Mode.rank" (typing/rec_check.ml[416,14570+53]..[416,14570+62])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[416,14570+63]..[416,14570+68])
                                            Pexp_construct "Guard" (typing/rec_check.ml[416,14570+63]..[416,14570+68])
                                            None
                                      ]
                                ]
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[416,14570+70]..[416,14570+72])
                              Pexp_ident "li" (typing/rec_check.ml[416,14570+70]..[416,14570+72])
                        ]
              ]
            structure_item (typing/rec_check.ml[418,14644+2]..[419,14669+73])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/rec_check.ml[418,14644+6]..[418,14644+15])
                    Ppat_var "dependent" (typing/rec_check.ml[418,14644+6]..[418,14644+15])
                  expression (typing/rec_check.ml[418,14644+16]..[419,14669+73]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/rec_check.ml[418,14644+16]..[418,14644+19])
                      Ppat_var "env" (typing/rec_check.ml[418,14644+16]..[418,14644+19])
                    expression (typing/rec_check.ml[418,14644+20]..[419,14669+73]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/rec_check.ml[418,14644+20]..[418,14644+22])
                        Ppat_var "li" (typing/rec_check.ml[418,14644+20]..[418,14644+22])
                      expression (typing/rec_check.ml[419,14669+4]..[419,14669+73])
                        Pexp_apply
                        expression (typing/rec_check.ml[419,14669+4]..[419,14669+15])
                          Pexp_ident "List.filter" (typing/rec_check.ml[419,14669+4]..[419,14669+15])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[419,14669+16]..[419,14669+70])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/rec_check.ml[419,14669+21]..[419,14669+23])
                                Ppat_var "id" (typing/rec_check.ml[419,14669+21]..[419,14669+23])
                              expression (typing/rec_check.ml[419,14669+27]..[419,14669+69])
                                Pexp_apply
                                expression (typing/rec_check.ml[419,14669+51]..[419,14669+52])
                                  Pexp_ident ">" (typing/rec_check.ml[419,14669+51]..[419,14669+52])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[419,14669+27]..[419,14669+50])
                                      Pexp_apply
                                      expression (typing/rec_check.ml[419,14669+27]..[419,14669+36])
                                        Pexp_ident "Mode.rank" (typing/rec_check.ml[419,14669+27]..[419,14669+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[419,14669+37]..[419,14669+50])
                                            Pexp_apply
                                            expression (typing/rec_check.ml[419,14669+38]..[419,14669+42])
                                              Pexp_ident "find" (typing/rec_check.ml[419,14669+38]..[419,14669+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[419,14669+43]..[419,14669+45])
                                                  Pexp_ident "id" (typing/rec_check.ml[419,14669+43]..[419,14669+45])
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[419,14669+46]..[419,14669+49])
                                                  Pexp_ident "env" (typing/rec_check.ml[419,14669+46]..[419,14669+49])
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[419,14669+53]..[419,14669+69])
                                      Pexp_apply
                                      expression (typing/rec_check.ml[419,14669+53]..[419,14669+62])
                                        Pexp_ident "Mode.rank" (typing/rec_check.ml[419,14669+53]..[419,14669+62])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[419,14669+63]..[419,14669+69])
                                            Pexp_construct "Ignore" (typing/rec_check.ml[419,14669+63]..[419,14669+69])
                                            None
                                      ]
                                ]
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[419,14669+71]..[419,14669+73])
                              Pexp_ident "li" (typing/rec_check.ml[419,14669+71]..[419,14669+73])
                        ]
              ]
            structure_item (typing/rec_check.ml[421,14744+2]..[421,14744+23])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/rec_check.ml[421,14744+6]..[421,14744+12])
                    Ppat_var "remove" (typing/rec_check.ml[421,14744+6]..[421,14744+12])
                  expression (typing/rec_check.ml[421,14744+15]..[421,14744+23])
                    Pexp_ident "M.remove" (typing/rec_check.ml[421,14744+15]..[421,14744+23])
              ]
            structure_item (typing/rec_check.ml[423,14769+2]..[423,14769+48])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/rec_check.ml[423,14769+6]..[423,14769+10])
                    Ppat_var "take" (typing/rec_check.ml[423,14769+6]..[423,14769+10])
                  expression (typing/rec_check.ml[423,14769+11]..[423,14769+48]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/rec_check.ml[423,14769+11]..[423,14769+13])
                      Ppat_var "id" (typing/rec_check.ml[423,14769+11]..[423,14769+13])
                    expression (typing/rec_check.ml[423,14769+14]..[423,14769+48]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/rec_check.ml[423,14769+14]..[423,14769+17])
                        Ppat_var "env" (typing/rec_check.ml[423,14769+14]..[423,14769+17])
                      expression (typing/rec_check.ml[423,14769+20]..[423,14769+48])
                        Pexp_tuple
                        [
                          expression (typing/rec_check.ml[423,14769+21]..[423,14769+32])
                            Pexp_apply
                            expression (typing/rec_check.ml[423,14769+21]..[423,14769+25])
                              Pexp_ident "find" (typing/rec_check.ml[423,14769+21]..[423,14769+25])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[423,14769+26]..[423,14769+28])
                                  Pexp_ident "id" (typing/rec_check.ml[423,14769+26]..[423,14769+28])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[423,14769+29]..[423,14769+32])
                                  Pexp_ident "env" (typing/rec_check.ml[423,14769+29]..[423,14769+32])
                            ]
                          expression (typing/rec_check.ml[423,14769+34]..[423,14769+47])
                            Pexp_apply
                            expression (typing/rec_check.ml[423,14769+34]..[423,14769+40])
                              Pexp_ident "remove" (typing/rec_check.ml[423,14769+34]..[423,14769+40])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[423,14769+41]..[423,14769+43])
                                  Pexp_ident "id" (typing/rec_check.ml[423,14769+41]..[423,14769+43])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[423,14769+44]..[423,14769+47])
                                  Pexp_ident "env" (typing/rec_check.ml[423,14769+44]..[423,14769+47])
                            ]
                        ]
              ]
            structure_item (typing/rec_check.ml[425,14819+2]..[426,14845+56])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/rec_check.ml[425,14819+6]..[425,14819+17])
                    Ppat_var "remove_list" (typing/rec_check.ml[425,14819+6]..[425,14819+17])
                  expression (typing/rec_check.ml[425,14819+18]..[426,14845+56]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/rec_check.ml[425,14819+18]..[425,14819+19])
                      Ppat_var "l" (typing/rec_check.ml[425,14819+18]..[425,14819+19])
                    expression (typing/rec_check.ml[425,14819+20]..[426,14845+56]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/rec_check.ml[425,14819+20]..[425,14819+23])
                        Ppat_var "env" (typing/rec_check.ml[425,14819+20]..[425,14819+23])
                      expression (typing/rec_check.ml[426,14845+4]..[426,14845+56])
                        Pexp_apply
                        expression (typing/rec_check.ml[426,14845+4]..[426,14845+18])
                          Pexp_ident "List.fold_left" (typing/rec_check.ml[426,14845+4]..[426,14845+18])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[426,14845+19]..[426,14845+50])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/rec_check.ml[426,14845+24]..[426,14845+27])
                                Ppat_var "env" (typing/rec_check.ml[426,14845+24]..[426,14845+27])
                              expression (typing/rec_check.ml[426,14845+28]..[426,14845+49]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/rec_check.ml[426,14845+28]..[426,14845+30])
                                  Ppat_var "id" (typing/rec_check.ml[426,14845+28]..[426,14845+30])
                                expression (typing/rec_check.ml[426,14845+34]..[426,14845+49])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[426,14845+34]..[426,14845+42])
                                    Pexp_ident "M.remove" (typing/rec_check.ml[426,14845+34]..[426,14845+42])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[426,14845+43]..[426,14845+45])
                                        Pexp_ident "id" (typing/rec_check.ml[426,14845+43]..[426,14845+45])
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[426,14845+46]..[426,14845+49])
                                        Pexp_ident "env" (typing/rec_check.ml[426,14845+46]..[426,14845+49])
                                  ]
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[426,14845+51]..[426,14845+54])
                              Pexp_ident "env" (typing/rec_check.ml[426,14845+51]..[426,14845+54])
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[426,14845+55]..[426,14845+56])
                              Pexp_ident "l" (typing/rec_check.ml[426,14845+55]..[426,14845+56])
                        ]
              ]
          ]
        module_type (typing/rec_check.ml[348,12689+0]..[388,13954+3])
          Pmty_signature
          [
            signature_item (typing/rec_check.ml[349,12693+2]..[349,12693+8])
              Psig_type Rec
              [
                type_declaration "t" (typing/rec_check.ml[349,12693+7]..[349,12693+8]) (typing/rec_check.ml[349,12693+2]..[349,12693+8])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (typing/rec_check.ml[351,12703+2]..[351,12703+37])
              Psig_value
              value_description "single" (typing/rec_check.ml[351,12703+6]..[351,12703+12]) (typing/rec_check.ml[351,12703+2]..[351,12703+37])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/rec_check.ml[352,12741+2]..[353,12818+4])
                      Pstr_eval
                      expression (typing/rec_check.ml[352,12741+2]..[353,12818+4])
                        Pexp_constant PConst_string(" Create an environment with a single identifier used with a given mode.\n  ",(typing/rec_check.ml[352,12741+2]..[353,12818+4]),None)
                  ]
                core_type (typing/rec_check.ml[351,12703+15]..[351,12703+37])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/rec_check.ml[351,12703+15]..[351,12703+22])
                    Ptyp_constr "Ident.t" (typing/rec_check.ml[351,12703+15]..[351,12703+22])
                    []
                  core_type (typing/rec_check.ml[351,12703+26]..[351,12703+37])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/rec_check.ml[351,12703+26]..[351,12703+32])
                      Ptyp_constr "Mode.t" (typing/rec_check.ml[351,12703+26]..[351,12703+32])
                      []
                    core_type (typing/rec_check.ml[351,12703+36]..[351,12703+37])
                      Ptyp_constr "t" (typing/rec_check.ml[351,12703+36]..[351,12703+37])
                      []
                []
            signature_item (typing/rec_check.ml[355,12824+2]..[355,12824+15])
              Psig_value
              value_description "empty" (typing/rec_check.ml[355,12824+6]..[355,12824+11]) (typing/rec_check.ml[355,12824+2]..[355,12824+15])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/rec_check.ml[356,12840+2]..[356,12840+49])
                      Pstr_eval
                      expression (typing/rec_check.ml[356,12840+2]..[356,12840+49])
                        Pexp_constant PConst_string(" An environment with no used identifiers. ",(typing/rec_check.ml[356,12840+2]..[356,12840+49]),None)
                  ]
                core_type (typing/rec_check.ml[355,12824+14]..[355,12824+15])
                  Ptyp_constr "t" (typing/rec_check.ml[355,12824+14]..[355,12824+15])
                  []
                []
            signature_item (typing/rec_check.ml[358,12891+2]..[358,12891+35])
              Psig_value
              value_description "find" (typing/rec_check.ml[358,12891+6]..[358,12891+10]) (typing/rec_check.ml[358,12891+2]..[358,12891+35])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/rec_check.ml[359,12927+2]..[360,13004+16])
                      Pstr_eval
                      expression (typing/rec_check.ml[359,12927+2]..[360,13004+16])
                        Pexp_constant PConst_string(" Find the mode of an identifier in an environment.  The default mode is\n      Ignore. ",(typing/rec_check.ml[359,12927+2]..[360,13004+16]),None)
                  ]
                core_type (typing/rec_check.ml[358,12891+13]..[358,12891+35])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/rec_check.ml[358,12891+13]..[358,12891+20])
                    Ptyp_constr "Ident.t" (typing/rec_check.ml[358,12891+13]..[358,12891+20])
                    []
                  core_type (typing/rec_check.ml[358,12891+24]..[358,12891+35])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/rec_check.ml[358,12891+24]..[358,12891+25])
                      Ptyp_constr "t" (typing/rec_check.ml[358,12891+24]..[358,12891+25])
                      []
                    core_type (typing/rec_check.ml[358,12891+29]..[358,12891+35])
                      Ptyp_constr "Mode.t" (typing/rec_check.ml[358,12891+29]..[358,12891+35])
                      []
                []
            signature_item (typing/rec_check.ml[362,13022+2]..[362,13022+51])
              Psig_value
              value_description "unguarded" (typing/rec_check.ml[362,13022+6]..[362,13022+15]) (typing/rec_check.ml[362,13022+2]..[362,13022+51])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/rec_check.ml[363,13074+2]..[364,13153+39])
                      Pstr_eval
                      expression (typing/rec_check.ml[363,13074+2]..[364,13153+39])
                        Pexp_constant PConst_string(" unguarded e l: the list of all identifiers in l that are dereferenced or\n      returned in the environment e. ",(typing/rec_check.ml[363,13074+2]..[364,13153+39]),None)
                  ]
                core_type (typing/rec_check.ml[362,13022+18]..[362,13022+51])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/rec_check.ml[362,13022+18]..[362,13022+19])
                    Ptyp_constr "t" (typing/rec_check.ml[362,13022+18]..[362,13022+19])
                    []
                  core_type (typing/rec_check.ml[362,13022+23]..[362,13022+51])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/rec_check.ml[362,13022+23]..[362,13022+35])
                      Ptyp_constr "list" (typing/rec_check.ml[362,13022+31]..[362,13022+35])
                      [
                        core_type (typing/rec_check.ml[362,13022+23]..[362,13022+30])
                          Ptyp_constr "Ident.t" (typing/rec_check.ml[362,13022+23]..[362,13022+30])
                          []
                      ]
                    core_type (typing/rec_check.ml[362,13022+39]..[362,13022+51])
                      Ptyp_constr "list" (typing/rec_check.ml[362,13022+47]..[362,13022+51])
                      [
                        core_type (typing/rec_check.ml[362,13022+39]..[362,13022+46])
                          Ptyp_constr "Ident.t" (typing/rec_check.ml[362,13022+39]..[362,13022+46])
                          []
                      ]
                []
            signature_item (typing/rec_check.ml[366,13194+2]..[366,13194+51])
              Psig_value
              value_description "dependent" (typing/rec_check.ml[366,13194+6]..[366,13194+15]) (typing/rec_check.ml[366,13194+2]..[366,13194+51])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/rec_check.ml[367,13246+2]..[368,13319+23])
                      Pstr_eval
                      expression (typing/rec_check.ml[367,13246+2]..[368,13319+23])
                        Pexp_constant PConst_string(" dependent e l: the list of all identifiers in l that are used in e\n      (not ignored). ",(typing/rec_check.ml[367,13246+2]..[368,13319+23]),None)
                  ]
                core_type (typing/rec_check.ml[366,13194+18]..[366,13194+51])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/rec_check.ml[366,13194+18]..[366,13194+19])
                    Ptyp_constr "t" (typing/rec_check.ml[366,13194+18]..[366,13194+19])
                    []
                  core_type (typing/rec_check.ml[366,13194+23]..[366,13194+51])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/rec_check.ml[366,13194+23]..[366,13194+35])
                      Ptyp_constr "list" (typing/rec_check.ml[366,13194+31]..[366,13194+35])
                      [
                        core_type (typing/rec_check.ml[366,13194+23]..[366,13194+30])
                          Ptyp_constr "Ident.t" (typing/rec_check.ml[366,13194+23]..[366,13194+30])
                          []
                      ]
                    core_type (typing/rec_check.ml[366,13194+39]..[366,13194+51])
                      Ptyp_constr "list" (typing/rec_check.ml[366,13194+47]..[366,13194+51])
                      [
                        core_type (typing/rec_check.ml[366,13194+39]..[366,13194+46])
                          Ptyp_constr "Ident.t" (typing/rec_check.ml[366,13194+39]..[366,13194+46])
                          []
                      ]
                []
            signature_item (typing/rec_check.ml[370,13344+2]..[370,13344+24])
              Psig_value
              value_description "join" (typing/rec_check.ml[370,13344+6]..[370,13344+10]) (typing/rec_check.ml[370,13344+2]..[370,13344+24])
                core_type (typing/rec_check.ml[370,13344+13]..[370,13344+24])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/rec_check.ml[370,13344+13]..[370,13344+14])
                    Ptyp_constr "t" (typing/rec_check.ml[370,13344+13]..[370,13344+14])
                    []
                  core_type (typing/rec_check.ml[370,13344+18]..[370,13344+24])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/rec_check.ml[370,13344+18]..[370,13344+19])
                      Ptyp_constr "t" (typing/rec_check.ml[370,13344+18]..[370,13344+19])
                      []
                    core_type (typing/rec_check.ml[370,13344+23]..[370,13344+24])
                      Ptyp_constr "t" (typing/rec_check.ml[370,13344+23]..[370,13344+24])
                      []
                []
            signature_item (typing/rec_check.ml[371,13369+2]..[371,13369+29])
              Psig_value
              value_description "join_list" (typing/rec_check.ml[371,13369+6]..[371,13369+15]) (typing/rec_check.ml[371,13369+2]..[371,13369+29])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/rec_check.ml[372,13399+2]..[372,13399+69])
                      Pstr_eval
                      expression (typing/rec_check.ml[372,13399+2]..[372,13399+69])
                        Pexp_constant PConst_string(" Environments can be joined pointwise (variable per variable) ",(typing/rec_check.ml[372,13399+2]..[372,13399+69]),None)
                  ]
                core_type (typing/rec_check.ml[371,13369+18]..[371,13369+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/rec_check.ml[371,13369+18]..[371,13369+24])
                    Ptyp_constr "list" (typing/rec_check.ml[371,13369+20]..[371,13369+24])
                    [
                      core_type (typing/rec_check.ml[371,13369+18]..[371,13369+19])
                        Ptyp_constr "t" (typing/rec_check.ml[371,13369+18]..[371,13369+19])
                        []
                    ]
                  core_type (typing/rec_check.ml[371,13369+28]..[371,13369+29])
                    Ptyp_constr "t" (typing/rec_check.ml[371,13369+28]..[371,13369+29])
                    []
                []
            signature_item (typing/rec_check.ml[374,13470+2]..[374,13470+32])
              Psig_value
              value_description "compose" (typing/rec_check.ml[374,13470+6]..[374,13470+13]) (typing/rec_check.ml[374,13470+2]..[374,13470+32])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/rec_check.ml[375,13503+2]..[376,13570+46])
                      Pstr_eval
                      expression (typing/rec_check.ml[375,13503+2]..[376,13570+46])
                        Pexp_constant PConst_string(" Environment composition m[G] extends mode composition m1[m2]\n      by composing each mode in G pointwise ",(typing/rec_check.ml[375,13503+2]..[376,13570+46]),None)
                  ]
                core_type (typing/rec_check.ml[374,13470+16]..[374,13470+32])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/rec_check.ml[374,13470+16]..[374,13470+22])
                    Ptyp_constr "Mode.t" (typing/rec_check.ml[374,13470+16]..[374,13470+22])
                    []
                  core_type (typing/rec_check.ml[374,13470+26]..[374,13470+32])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/rec_check.ml[374,13470+26]..[374,13470+27])
                      Ptyp_constr "t" (typing/rec_check.ml[374,13470+26]..[374,13470+27])
                      []
                    core_type (typing/rec_check.ml[374,13470+31]..[374,13470+32])
                      Ptyp_constr "t" (typing/rec_check.ml[374,13470+31]..[374,13470+32])
                      []
                []
            signature_item (typing/rec_check.ml[378,13618+2]..[378,13618+32])
              Psig_value
              value_description "remove" (typing/rec_check.ml[378,13618+6]..[378,13618+12]) (typing/rec_check.ml[378,13618+2]..[378,13618+32])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/rec_check.ml[379,13651+2]..[379,13651+50])
                      Pstr_eval
                      expression (typing/rec_check.ml[379,13651+2]..[379,13651+50])
                        Pexp_constant PConst_string(" Remove an identifier from an environment. ",(typing/rec_check.ml[379,13651+2]..[379,13651+50]),None)
                  ]
                core_type (typing/rec_check.ml[378,13618+15]..[378,13618+32])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/rec_check.ml[378,13618+15]..[378,13618+22])
                    Ptyp_constr "Ident.t" (typing/rec_check.ml[378,13618+15]..[378,13618+22])
                    []
                  core_type (typing/rec_check.ml[378,13618+26]..[378,13618+32])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/rec_check.ml[378,13618+26]..[378,13618+27])
                      Ptyp_constr "t" (typing/rec_check.ml[378,13618+26]..[378,13618+27])
                      []
                    core_type (typing/rec_check.ml[378,13618+31]..[378,13618+32])
                      Ptyp_constr "t" (typing/rec_check.ml[378,13618+31]..[378,13618+32])
                      []
                []
            signature_item (typing/rec_check.ml[381,13703+2]..[381,13703+38])
              Psig_value
              value_description "take" (typing/rec_check.ml[381,13703+6]..[381,13703+10]) (typing/rec_check.ml[381,13703+2]..[381,13703+38])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/rec_check.ml[382,13742+2]..[382,13742+70])
                      Pstr_eval
                      expression (typing/rec_check.ml[382,13742+2]..[382,13742+70])
                        Pexp_constant PConst_string(" Remove an identifier from an environment, and return its mode ",(typing/rec_check.ml[382,13742+2]..[382,13742+70]),None)
                  ]
                core_type (typing/rec_check.ml[381,13703+12]..[381,13703+38])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/rec_check.ml[381,13703+12]..[381,13703+19])
                    Ptyp_constr "Ident.t" (typing/rec_check.ml[381,13703+12]..[381,13703+19])
                    []
                  core_type (typing/rec_check.ml[381,13703+23]..[381,13703+38])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/rec_check.ml[381,13703+23]..[381,13703+24])
                      Ptyp_constr "t" (typing/rec_check.ml[381,13703+23]..[381,13703+24])
                      []
                    core_type (typing/rec_check.ml[381,13703+28]..[381,13703+38])
                      Ptyp_tuple
                      [
                        core_type (typing/rec_check.ml[381,13703+28]..[381,13703+34])
                          Ptyp_constr "Mode.t" (typing/rec_check.ml[381,13703+28]..[381,13703+34])
                          []
                        core_type (typing/rec_check.ml[381,13703+37]..[381,13703+38])
                          Ptyp_constr "t" (typing/rec_check.ml[381,13703+37]..[381,13703+38])
                          []
                      ]
                []
            signature_item (typing/rec_check.ml[384,13814+2]..[384,13814+42])
              Psig_value
              value_description "remove_list" (typing/rec_check.ml[384,13814+6]..[384,13814+17]) (typing/rec_check.ml[384,13814+2]..[384,13814+42])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/rec_check.ml[385,13857+2]..[385,13857+66])
                      Pstr_eval
                      expression (typing/rec_check.ml[385,13857+2]..[385,13857+66])
                        Pexp_constant PConst_string(" Remove all the identifiers of a list from an environment. ",(typing/rec_check.ml[385,13857+2]..[385,13857+66]),None)
                  ]
                core_type (typing/rec_check.ml[384,13814+20]..[384,13814+42])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/rec_check.ml[384,13814+20]..[384,13814+32])
                    Ptyp_constr "list" (typing/rec_check.ml[384,13814+28]..[384,13814+32])
                    [
                      core_type (typing/rec_check.ml[384,13814+20]..[384,13814+27])
                        Ptyp_constr "Ident.t" (typing/rec_check.ml[384,13814+20]..[384,13814+27])
                        []
                    ]
                  core_type (typing/rec_check.ml[384,13814+36]..[384,13814+42])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/rec_check.ml[384,13814+36]..[384,13814+37])
                      Ptyp_constr "t" (typing/rec_check.ml[384,13814+36]..[384,13814+37])
                      []
                    core_type (typing/rec_check.ml[384,13814+41]..[384,13814+42])
                      Ptyp_constr "t" (typing/rec_check.ml[384,13814+41]..[384,13814+42])
                      []
                []
            signature_item (typing/rec_check.ml[387,13925+2]..[387,13925+28])
              Psig_value
              value_description "equal" (typing/rec_check.ml[387,13925+6]..[387,13925+11]) (typing/rec_check.ml[387,13925+2]..[387,13925+28])
                core_type (typing/rec_check.ml[387,13925+14]..[387,13925+28])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/rec_check.ml[387,13925+14]..[387,13925+15])
                    Ptyp_constr "t" (typing/rec_check.ml[387,13925+14]..[387,13925+15])
                    []
                  core_type (typing/rec_check.ml[387,13925+19]..[387,13925+28])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/rec_check.ml[387,13925+19]..[387,13925+20])
                      Ptyp_constr "t" (typing/rec_check.ml[387,13925+19]..[387,13925+20])
                      []
                    core_type (typing/rec_check.ml[387,13925+24]..[387,13925+28])
                      Ptyp_constr "bool" (typing/rec_check.ml[387,13925+24]..[387,13925+28])
                      []
                []
          ]
  structure_item (typing/rec_check.ml[429,14907+0]..[430,14932+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[429,14907+4]..[429,14907+14])
          Ppat_var "remove_pat" (typing/rec_check.ml[429,14907+4]..[429,14907+14])
        expression (typing/rec_check.ml[429,14907+15]..[430,14932+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/rec_check.ml[429,14907+15]..[429,14907+18])
            Ppat_var "pat" (typing/rec_check.ml[429,14907+15]..[429,14907+18])
          expression (typing/rec_check.ml[429,14907+19]..[430,14932+44]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[429,14907+19]..[429,14907+22])
              Ppat_var "env" (typing/rec_check.ml[429,14907+19]..[429,14907+22])
            expression (typing/rec_check.ml[430,14932+2]..[430,14932+44])
              Pexp_apply
              expression (typing/rec_check.ml[430,14932+2]..[430,14932+17])
                Pexp_ident "Env.remove_list" (typing/rec_check.ml[430,14932+2]..[430,14932+17])
              [
                <arg>
                Nolabel
                  expression (typing/rec_check.ml[430,14932+18]..[430,14932+40])
                    Pexp_apply
                    expression (typing/rec_check.ml[430,14932+19]..[430,14932+35])
                      Pexp_ident "pat_bound_idents" (typing/rec_check.ml[430,14932+19]..[430,14932+35])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[430,14932+36]..[430,14932+39])
                          Pexp_ident "pat" (typing/rec_check.ml[430,14932+36]..[430,14932+39])
                    ]
                <arg>
                Nolabel
                  expression (typing/rec_check.ml[430,14932+41]..[430,14932+44])
                    Pexp_ident "env" (typing/rec_check.ml[430,14932+41]..[430,14932+44])
              ]
    ]
  structure_item (typing/rec_check.ml[432,14978+0]..[433,15008+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[432,14978+4]..[432,14978+18])
          Ppat_var "remove_patlist" (typing/rec_check.ml[432,14978+4]..[432,14978+18])
        expression (typing/rec_check.ml[432,14978+19]..[433,15008+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/rec_check.ml[432,14978+19]..[432,14978+23])
            Ppat_var "pats" (typing/rec_check.ml[432,14978+19]..[432,14978+23])
          expression (typing/rec_check.ml[432,14978+24]..[433,15008+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[432,14978+24]..[432,14978+27])
              Ppat_var "env" (typing/rec_check.ml[432,14978+24]..[432,14978+27])
            expression (typing/rec_check.ml[433,15008+2]..[433,15008+37])
              Pexp_apply
              expression (typing/rec_check.ml[433,15008+2]..[433,15008+17])
                Pexp_ident "List.fold_right" (typing/rec_check.ml[433,15008+2]..[433,15008+17])
              [
                <arg>
                Nolabel
                  expression (typing/rec_check.ml[433,15008+18]..[433,15008+28])
                    Pexp_ident "remove_pat" (typing/rec_check.ml[433,15008+18]..[433,15008+28])
                <arg>
                Nolabel
                  expression (typing/rec_check.ml[433,15008+29]..[433,15008+33])
                    Pexp_ident "pats" (typing/rec_check.ml[433,15008+29]..[433,15008+33])
                <arg>
                Nolabel
                  expression (typing/rec_check.ml[433,15008+34]..[433,15008+37])
                    Pexp_ident "env" (typing/rec_check.ml[433,15008+34]..[433,15008+37])
              ]
    ]
  structure_item (typing/rec_check.ml[474,16418+0]..[474,16418+32])
    Pstr_type Rec
    [
      type_declaration "term_judg" (typing/rec_check.ml[474,16418+5]..[474,16418+14]) (typing/rec_check.ml[474,16418+0]..[474,16418+32])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/rec_check.ml[474,16418+17]..[474,16418+32])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[474,16418+17]..[474,16418+23])
                Ptyp_constr "Mode.t" (typing/rec_check.ml[474,16418+17]..[474,16418+23])
                []
              core_type (typing/rec_check.ml[474,16418+27]..[474,16418+32])
                Ptyp_constr "Env.t" (typing/rec_check.ml[474,16418+27]..[474,16418+32])
                []
    ]
  structure_item (typing/rec_check.ml[475,16451+0]..[475,16451+41])
    Pstr_type Rec
    [
      type_declaration "bind_judg" (typing/rec_check.ml[475,16451+5]..[475,16451+14]) (typing/rec_check.ml[475,16451+0]..[475,16451+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/rec_check.ml[475,16451+17]..[475,16451+41])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[475,16451+17]..[475,16451+23])
                Ptyp_constr "Mode.t" (typing/rec_check.ml[475,16451+17]..[475,16451+23])
                []
              core_type (typing/rec_check.ml[475,16451+27]..[475,16451+41])
                Ptyp_arrow
                Nolabel
                core_type (typing/rec_check.ml[475,16451+27]..[475,16451+32])
                  Ptyp_constr "Env.t" (typing/rec_check.ml[475,16451+27]..[475,16451+32])
                  []
                core_type (typing/rec_check.ml[475,16451+36]..[475,16451+41])
                  Ptyp_constr "Env.t" (typing/rec_check.ml[475,16451+36]..[475,16451+41])
                  []
    ]
  structure_item (typing/rec_check.ml[477,16494+0]..[480,16609+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[477,16494+4]..[477,16494+60]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[477,16494+4]..[477,16494+10])
            Ppat_var "option" (typing/rec_check.ml[477,16494+4]..[477,16494+10])
          core_type (typing/rec_check.ml[477,16494+13]..[477,16494+60]) ghost
            Ptyp_poly 'a
            core_type (typing/rec_check.ml[477,16494+17]..[477,16494+60])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[477,16494+18]..[477,16494+33])
                Ptyp_arrow
                Nolabel
                core_type (typing/rec_check.ml[477,16494+18]..[477,16494+20])
                  Ptyp_var a
                core_type (typing/rec_check.ml[477,16494+24]..[477,16494+33])
                  Ptyp_constr "term_judg" (typing/rec_check.ml[477,16494+24]..[477,16494+33])
                  []
              core_type (typing/rec_check.ml[477,16494+38]..[477,16494+60])
                Ptyp_arrow
                Nolabel
                core_type (typing/rec_check.ml[477,16494+38]..[477,16494+47])
                  Ptyp_constr "option" (typing/rec_check.ml[477,16494+41]..[477,16494+47])
                  [
                    core_type (typing/rec_check.ml[477,16494+38]..[477,16494+40])
                      Ptyp_var a
                  ]
                core_type (typing/rec_check.ml[477,16494+51]..[477,16494+60])
                  Ptyp_constr "term_judg" (typing/rec_check.ml[477,16494+51]..[477,16494+60])
                  []
        expression (typing/rec_check.ml[478,16557+2]..[480,16609+21])
          Pexp_fun
          Nolabel
          None
          pattern (typing/rec_check.ml[478,16557+6]..[478,16557+7])
            Ppat_var "f" (typing/rec_check.ml[478,16557+6]..[478,16557+7])
          expression (typing/rec_check.ml[478,16557+8]..[480,16609+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[478,16557+8]..[478,16557+9])
              Ppat_var "o" (typing/rec_check.ml[478,16557+8]..[478,16557+9])
            expression (typing/rec_check.ml[478,16557+10]..[480,16609+21]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[478,16557+10]..[478,16557+11])
                Ppat_var "m" (typing/rec_check.ml[478,16557+10]..[478,16557+11])
              expression (typing/rec_check.ml[478,16557+15]..[480,16609+21])
                Pexp_match
                expression (typing/rec_check.ml[478,16557+21]..[478,16557+22])
                  Pexp_ident "o" (typing/rec_check.ml[478,16557+21]..[478,16557+22])
                [
                  <case>
                    pattern (typing/rec_check.ml[479,16585+6]..[479,16585+10])
                      Ppat_construct "None" (typing/rec_check.ml[479,16585+6]..[479,16585+10])
                      None
                    expression (typing/rec_check.ml[479,16585+14]..[479,16585+23])
                      Pexp_ident "Env.empty" (typing/rec_check.ml[479,16585+14]..[479,16585+23])
                  <case>
                    pattern (typing/rec_check.ml[480,16609+6]..[480,16609+12])
                      Ppat_construct "Some" (typing/rec_check.ml[480,16609+6]..[480,16609+10])
                      Some
                        []
                        pattern (typing/rec_check.ml[480,16609+11]..[480,16609+12])
                          Ppat_var "v" (typing/rec_check.ml[480,16609+11]..[480,16609+12])
                    expression (typing/rec_check.ml[480,16609+16]..[480,16609+21])
                      Pexp_apply
                      expression (typing/rec_check.ml[480,16609+16]..[480,16609+17])
                        Pexp_ident "f" (typing/rec_check.ml[480,16609+16]..[480,16609+17])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[480,16609+18]..[480,16609+19])
                            Pexp_ident "v" (typing/rec_check.ml[480,16609+18]..[480,16609+19])
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[480,16609+20]..[480,16609+21])
                            Pexp_ident "m" (typing/rec_check.ml[480,16609+20]..[480,16609+21])
                      ]
                ]
    ]
  structure_item (typing/rec_check.ml[481,16631+0]..[483,16706+73])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[481,16631+4]..[481,16631+56]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[481,16631+4]..[481,16631+8])
            Ppat_var "list" (typing/rec_check.ml[481,16631+4]..[481,16631+8])
          core_type (typing/rec_check.ml[481,16631+11]..[481,16631+56]) ghost
            Ptyp_poly 'a
            core_type (typing/rec_check.ml[481,16631+15]..[481,16631+56])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[481,16631+16]..[481,16631+31])
                Ptyp_arrow
                Nolabel
                core_type (typing/rec_check.ml[481,16631+16]..[481,16631+18])
                  Ptyp_var a
                core_type (typing/rec_check.ml[481,16631+22]..[481,16631+31])
                  Ptyp_constr "term_judg" (typing/rec_check.ml[481,16631+22]..[481,16631+31])
                  []
              core_type (typing/rec_check.ml[481,16631+36]..[481,16631+56])
                Ptyp_arrow
                Nolabel
                core_type (typing/rec_check.ml[481,16631+36]..[481,16631+43])
                  Ptyp_constr "list" (typing/rec_check.ml[481,16631+39]..[481,16631+43])
                  [
                    core_type (typing/rec_check.ml[481,16631+36]..[481,16631+38])
                      Ptyp_var a
                  ]
                core_type (typing/rec_check.ml[481,16631+47]..[481,16631+56])
                  Ptyp_constr "term_judg" (typing/rec_check.ml[481,16631+47]..[481,16631+56])
                  []
        expression (typing/rec_check.ml[482,16690+2]..[483,16706+73])
          Pexp_fun
          Nolabel
          None
          pattern (typing/rec_check.ml[482,16690+6]..[482,16690+7])
            Ppat_var "f" (typing/rec_check.ml[482,16690+6]..[482,16690+7])
          expression (typing/rec_check.ml[482,16690+8]..[483,16706+73]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[482,16690+8]..[482,16690+10])
              Ppat_var "li" (typing/rec_check.ml[482,16690+8]..[482,16690+10])
            expression (typing/rec_check.ml[482,16690+11]..[483,16706+73]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[482,16690+11]..[482,16690+12])
                Ppat_var "m" (typing/rec_check.ml[482,16690+11]..[482,16690+12])
              expression (typing/rec_check.ml[483,16706+4]..[483,16706+73])
                Pexp_apply
                expression (typing/rec_check.ml[483,16706+4]..[483,16706+18])
                  Pexp_ident "List.fold_left" (typing/rec_check.ml[483,16706+4]..[483,16706+18])
                [
                  <arg>
                  Nolabel
                    expression (typing/rec_check.ml[483,16706+19]..[483,16706+60])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/rec_check.ml[483,16706+24]..[483,16706+27])
                        Ppat_var "env" (typing/rec_check.ml[483,16706+24]..[483,16706+27])
                      expression (typing/rec_check.ml[483,16706+28]..[483,16706+59]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/rec_check.ml[483,16706+28]..[483,16706+32])
                          Ppat_var "item" (typing/rec_check.ml[483,16706+28]..[483,16706+32])
                        expression (typing/rec_check.ml[483,16706+36]..[483,16706+59])
                          Pexp_apply
                          expression (typing/rec_check.ml[483,16706+36]..[483,16706+44])
                            Pexp_ident "Env.join" (typing/rec_check.ml[483,16706+36]..[483,16706+44])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[483,16706+45]..[483,16706+48])
                                Pexp_ident "env" (typing/rec_check.ml[483,16706+45]..[483,16706+48])
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[483,16706+49]..[483,16706+59])
                                Pexp_apply
                                expression (typing/rec_check.ml[483,16706+50]..[483,16706+51])
                                  Pexp_ident "f" (typing/rec_check.ml[483,16706+50]..[483,16706+51])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[483,16706+52]..[483,16706+56])
                                      Pexp_ident "item" (typing/rec_check.ml[483,16706+52]..[483,16706+56])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[483,16706+57]..[483,16706+58])
                                      Pexp_ident "m" (typing/rec_check.ml[483,16706+57]..[483,16706+58])
                                ]
                          ]
                  <arg>
                  Nolabel
                    expression (typing/rec_check.ml[483,16706+61]..[483,16706+70])
                      Pexp_ident "Env.empty" (typing/rec_check.ml[483,16706+61]..[483,16706+70])
                  <arg>
                  Nolabel
                    expression (typing/rec_check.ml[483,16706+71]..[483,16706+73])
                      Pexp_ident "li" (typing/rec_check.ml[483,16706+71]..[483,16706+73])
                ]
    ]
  structure_item (typing/rec_check.ml[484,16780+0]..[486,16857+74])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[484,16780+4]..[484,16780+58]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[484,16780+4]..[484,16780+9])
            Ppat_var "array" (typing/rec_check.ml[484,16780+4]..[484,16780+9])
          core_type (typing/rec_check.ml[484,16780+12]..[484,16780+58]) ghost
            Ptyp_poly 'a
            core_type (typing/rec_check.ml[484,16780+16]..[484,16780+58])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[484,16780+17]..[484,16780+32])
                Ptyp_arrow
                Nolabel
                core_type (typing/rec_check.ml[484,16780+17]..[484,16780+19])
                  Ptyp_var a
                core_type (typing/rec_check.ml[484,16780+23]..[484,16780+32])
                  Ptyp_constr "term_judg" (typing/rec_check.ml[484,16780+23]..[484,16780+32])
                  []
              core_type (typing/rec_check.ml[484,16780+37]..[484,16780+58])
                Ptyp_arrow
                Nolabel
                core_type (typing/rec_check.ml[484,16780+37]..[484,16780+45])
                  Ptyp_constr "array" (typing/rec_check.ml[484,16780+40]..[484,16780+45])
                  [
                    core_type (typing/rec_check.ml[484,16780+37]..[484,16780+39])
                      Ptyp_var a
                  ]
                core_type (typing/rec_check.ml[484,16780+49]..[484,16780+58])
                  Ptyp_constr "term_judg" (typing/rec_check.ml[484,16780+49]..[484,16780+58])
                  []
        expression (typing/rec_check.ml[485,16841+2]..[486,16857+74])
          Pexp_fun
          Nolabel
          None
          pattern (typing/rec_check.ml[485,16841+6]..[485,16841+7])
            Ppat_var "f" (typing/rec_check.ml[485,16841+6]..[485,16841+7])
          expression (typing/rec_check.ml[485,16841+8]..[486,16857+74]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[485,16841+8]..[485,16841+10])
              Ppat_var "ar" (typing/rec_check.ml[485,16841+8]..[485,16841+10])
            expression (typing/rec_check.ml[485,16841+11]..[486,16857+74]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[485,16841+11]..[485,16841+12])
                Ppat_var "m" (typing/rec_check.ml[485,16841+11]..[485,16841+12])
              expression (typing/rec_check.ml[486,16857+4]..[486,16857+74])
                Pexp_apply
                expression (typing/rec_check.ml[486,16857+4]..[486,16857+19])
                  Pexp_ident "Array.fold_left" (typing/rec_check.ml[486,16857+4]..[486,16857+19])
                [
                  <arg>
                  Nolabel
                    expression (typing/rec_check.ml[486,16857+20]..[486,16857+61])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/rec_check.ml[486,16857+25]..[486,16857+28])
                        Ppat_var "env" (typing/rec_check.ml[486,16857+25]..[486,16857+28])
                      expression (typing/rec_check.ml[486,16857+29]..[486,16857+60]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/rec_check.ml[486,16857+29]..[486,16857+33])
                          Ppat_var "item" (typing/rec_check.ml[486,16857+29]..[486,16857+33])
                        expression (typing/rec_check.ml[486,16857+37]..[486,16857+60])
                          Pexp_apply
                          expression (typing/rec_check.ml[486,16857+37]..[486,16857+45])
                            Pexp_ident "Env.join" (typing/rec_check.ml[486,16857+37]..[486,16857+45])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[486,16857+46]..[486,16857+49])
                                Pexp_ident "env" (typing/rec_check.ml[486,16857+46]..[486,16857+49])
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[486,16857+50]..[486,16857+60])
                                Pexp_apply
                                expression (typing/rec_check.ml[486,16857+51]..[486,16857+52])
                                  Pexp_ident "f" (typing/rec_check.ml[486,16857+51]..[486,16857+52])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[486,16857+53]..[486,16857+57])
                                      Pexp_ident "item" (typing/rec_check.ml[486,16857+53]..[486,16857+57])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[486,16857+58]..[486,16857+59])
                                      Pexp_ident "m" (typing/rec_check.ml[486,16857+58]..[486,16857+59])
                                ]
                          ]
                  <arg>
                  Nolabel
                    expression (typing/rec_check.ml[486,16857+62]..[486,16857+71])
                      Pexp_ident "Env.empty" (typing/rec_check.ml[486,16857+62]..[486,16857+71])
                  <arg>
                  Nolabel
                    expression (typing/rec_check.ml[486,16857+72]..[486,16857+74])
                      Pexp_ident "ar" (typing/rec_check.ml[486,16857+72]..[486,16857+74])
                ]
    ]
  structure_item (typing/rec_check.ml[488,16933+0]..[488,16933+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[488,16933+4]..[488,16933+33]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[488,16933+4]..[488,16933+10])
            Ppat_var "single" (typing/rec_check.ml[488,16933+4]..[488,16933+10])
          core_type (typing/rec_check.ml[488,16933+13]..[488,16933+33]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[488,16933+13]..[488,16933+33])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[488,16933+13]..[488,16933+20])
                Ptyp_constr "Ident.t" (typing/rec_check.ml[488,16933+13]..[488,16933+20])
                []
              core_type (typing/rec_check.ml[488,16933+24]..[488,16933+33])
                Ptyp_constr "term_judg" (typing/rec_check.ml[488,16933+24]..[488,16933+33])
                []
        expression (typing/rec_check.ml[488,16933+4]..[488,16933+46])
          Pexp_constraint
          expression (typing/rec_check.ml[488,16933+36]..[488,16933+46])
            Pexp_ident "Env.single" (typing/rec_check.ml[488,16933+36]..[488,16933+46])
          core_type (typing/rec_check.ml[488,16933+13]..[488,16933+33])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[488,16933+13]..[488,16933+20])
              Ptyp_constr "Ident.t" (typing/rec_check.ml[488,16933+13]..[488,16933+20])
              []
            core_type (typing/rec_check.ml[488,16933+24]..[488,16933+33])
              Ptyp_constr "term_judg" (typing/rec_check.ml[488,16933+24]..[488,16933+33])
              []
    ]
  structure_item (typing/rec_check.ml[489,16980+0]..[490,17032+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[489,16980+4]..[489,16980+49]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[489,16980+4]..[489,16980+13])
            Ppat_var "remove_id" (typing/rec_check.ml[489,16980+4]..[489,16980+13])
          core_type (typing/rec_check.ml[489,16980+16]..[489,16980+49]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[489,16980+16]..[489,16980+49])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[489,16980+16]..[489,16980+23])
                Ptyp_constr "Ident.t" (typing/rec_check.ml[489,16980+16]..[489,16980+23])
                []
              core_type (typing/rec_check.ml[489,16980+27]..[489,16980+49])
                Ptyp_arrow
                Nolabel
                core_type (typing/rec_check.ml[489,16980+27]..[489,16980+36])
                  Ptyp_constr "term_judg" (typing/rec_check.ml[489,16980+27]..[489,16980+36])
                  []
                core_type (typing/rec_check.ml[489,16980+40]..[489,16980+49])
                  Ptyp_constr "term_judg" (typing/rec_check.ml[489,16980+40]..[489,16980+49])
                  []
        expression (typing/rec_check.ml[489,16980+4]..[490,17032+35])
          Pexp_constraint
          expression (typing/rec_check.ml[490,17032+2]..[490,17032+35])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[490,17032+6]..[490,17032+8])
              Ppat_var "id" (typing/rec_check.ml[490,17032+6]..[490,17032+8])
            expression (typing/rec_check.ml[490,17032+9]..[490,17032+35]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[490,17032+9]..[490,17032+10])
                Ppat_var "f" (typing/rec_check.ml[490,17032+9]..[490,17032+10])
              expression (typing/rec_check.ml[490,17032+11]..[490,17032+35]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/rec_check.ml[490,17032+11]..[490,17032+12])
                  Ppat_var "m" (typing/rec_check.ml[490,17032+11]..[490,17032+12])
                expression (typing/rec_check.ml[490,17032+16]..[490,17032+35])
                  Pexp_apply
                  expression (typing/rec_check.ml[490,17032+16]..[490,17032+26])
                    Pexp_ident "Env.remove" (typing/rec_check.ml[490,17032+16]..[490,17032+26])
                  [
                    <arg>
                    Nolabel
                      expression (typing/rec_check.ml[490,17032+27]..[490,17032+29])
                        Pexp_ident "id" (typing/rec_check.ml[490,17032+27]..[490,17032+29])
                    <arg>
                    Nolabel
                      expression (typing/rec_check.ml[490,17032+30]..[490,17032+35])
                        Pexp_apply
                        expression (typing/rec_check.ml[490,17032+31]..[490,17032+32])
                          Pexp_ident "f" (typing/rec_check.ml[490,17032+31]..[490,17032+32])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[490,17032+33]..[490,17032+34])
                              Pexp_ident "m" (typing/rec_check.ml[490,17032+33]..[490,17032+34])
                        ]
                  ]
          core_type (typing/rec_check.ml[489,16980+16]..[489,16980+49])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[489,16980+16]..[489,16980+23])
              Ptyp_constr "Ident.t" (typing/rec_check.ml[489,16980+16]..[489,16980+23])
              []
            core_type (typing/rec_check.ml[489,16980+27]..[489,16980+49])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[489,16980+27]..[489,16980+36])
                Ptyp_constr "term_judg" (typing/rec_check.ml[489,16980+27]..[489,16980+36])
                []
              core_type (typing/rec_check.ml[489,16980+40]..[489,16980+49])
                Ptyp_constr "term_judg" (typing/rec_check.ml[489,16980+40]..[489,16980+49])
                []
    ]
  structure_item (typing/rec_check.ml[491,17068+0]..[492,17126+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[491,17068+4]..[491,17068+55]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[491,17068+4]..[491,17068+14])
            Ppat_var "remove_ids" (typing/rec_check.ml[491,17068+4]..[491,17068+14])
          core_type (typing/rec_check.ml[491,17068+17]..[491,17068+55]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[491,17068+17]..[491,17068+55])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[491,17068+17]..[491,17068+29])
                Ptyp_constr "list" (typing/rec_check.ml[491,17068+25]..[491,17068+29])
                [
                  core_type (typing/rec_check.ml[491,17068+17]..[491,17068+24])
                    Ptyp_constr "Ident.t" (typing/rec_check.ml[491,17068+17]..[491,17068+24])
                    []
                ]
              core_type (typing/rec_check.ml[491,17068+33]..[491,17068+55])
                Ptyp_arrow
                Nolabel
                core_type (typing/rec_check.ml[491,17068+33]..[491,17068+42])
                  Ptyp_constr "term_judg" (typing/rec_check.ml[491,17068+33]..[491,17068+42])
                  []
                core_type (typing/rec_check.ml[491,17068+46]..[491,17068+55])
                  Ptyp_constr "term_judg" (typing/rec_check.ml[491,17068+46]..[491,17068+55])
                  []
        expression (typing/rec_check.ml[491,17068+4]..[492,17126+42])
          Pexp_constraint
          expression (typing/rec_check.ml[492,17126+2]..[492,17126+42])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[492,17126+6]..[492,17126+9])
              Ppat_var "ids" (typing/rec_check.ml[492,17126+6]..[492,17126+9])
            expression (typing/rec_check.ml[492,17126+10]..[492,17126+42]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[492,17126+10]..[492,17126+11])
                Ppat_var "f" (typing/rec_check.ml[492,17126+10]..[492,17126+11])
              expression (typing/rec_check.ml[492,17126+12]..[492,17126+42]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/rec_check.ml[492,17126+12]..[492,17126+13])
                  Ppat_var "m" (typing/rec_check.ml[492,17126+12]..[492,17126+13])
                expression (typing/rec_check.ml[492,17126+17]..[492,17126+42])
                  Pexp_apply
                  expression (typing/rec_check.ml[492,17126+17]..[492,17126+32])
                    Pexp_ident "Env.remove_list" (typing/rec_check.ml[492,17126+17]..[492,17126+32])
                  [
                    <arg>
                    Nolabel
                      expression (typing/rec_check.ml[492,17126+33]..[492,17126+36])
                        Pexp_ident "ids" (typing/rec_check.ml[492,17126+33]..[492,17126+36])
                    <arg>
                    Nolabel
                      expression (typing/rec_check.ml[492,17126+37]..[492,17126+42])
                        Pexp_apply
                        expression (typing/rec_check.ml[492,17126+38]..[492,17126+39])
                          Pexp_ident "f" (typing/rec_check.ml[492,17126+38]..[492,17126+39])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[492,17126+40]..[492,17126+41])
                              Pexp_ident "m" (typing/rec_check.ml[492,17126+40]..[492,17126+41])
                        ]
                  ]
          core_type (typing/rec_check.ml[491,17068+17]..[491,17068+55])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[491,17068+17]..[491,17068+29])
              Ptyp_constr "list" (typing/rec_check.ml[491,17068+25]..[491,17068+29])
              [
                core_type (typing/rec_check.ml[491,17068+17]..[491,17068+24])
                  Ptyp_constr "Ident.t" (typing/rec_check.ml[491,17068+17]..[491,17068+24])
                  []
              ]
            core_type (typing/rec_check.ml[491,17068+33]..[491,17068+55])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[491,17068+33]..[491,17068+42])
                Ptyp_constr "term_judg" (typing/rec_check.ml[491,17068+33]..[491,17068+42])
                []
              core_type (typing/rec_check.ml[491,17068+46]..[491,17068+55])
                Ptyp_constr "term_judg" (typing/rec_check.ml[491,17068+46]..[491,17068+55])
                []
    ]
  structure_item (typing/rec_check.ml[494,17170+0]..[495,17211+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[494,17170+4]..[494,17170+38]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[494,17170+4]..[494,17170+8])
            Ppat_var "join" (typing/rec_check.ml[494,17170+4]..[494,17170+8])
          core_type (typing/rec_check.ml[494,17170+11]..[494,17170+38]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[494,17170+11]..[494,17170+38])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[494,17170+11]..[494,17170+25])
                Ptyp_constr "list" (typing/rec_check.ml[494,17170+21]..[494,17170+25])
                [
                  core_type (typing/rec_check.ml[494,17170+11]..[494,17170+20])
                    Ptyp_constr "term_judg" (typing/rec_check.ml[494,17170+11]..[494,17170+20])
                    []
                ]
              core_type (typing/rec_check.ml[494,17170+29]..[494,17170+38])
                Ptyp_constr "term_judg" (typing/rec_check.ml[494,17170+29]..[494,17170+38])
                []
        expression (typing/rec_check.ml[494,17170+4]..[495,17211+56])
          Pexp_constraint
          expression (typing/rec_check.ml[495,17211+2]..[495,17211+56])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[495,17211+6]..[495,17211+8])
              Ppat_var "li" (typing/rec_check.ml[495,17211+6]..[495,17211+8])
            expression (typing/rec_check.ml[495,17211+9]..[495,17211+56]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[495,17211+9]..[495,17211+10])
                Ppat_var "m" (typing/rec_check.ml[495,17211+9]..[495,17211+10])
              expression (typing/rec_check.ml[495,17211+14]..[495,17211+56])
                Pexp_apply
                expression (typing/rec_check.ml[495,17211+14]..[495,17211+27])
                  Pexp_ident "Env.join_list" (typing/rec_check.ml[495,17211+14]..[495,17211+27])
                [
                  <arg>
                  Nolabel
                    expression (typing/rec_check.ml[495,17211+28]..[495,17211+56])
                      Pexp_apply
                      expression (typing/rec_check.ml[495,17211+29]..[495,17211+37])
                        Pexp_ident "List.map" (typing/rec_check.ml[495,17211+29]..[495,17211+37])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[495,17211+38]..[495,17211+52])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/rec_check.ml[495,17211+43]..[495,17211+44])
                              Ppat_var "f" (typing/rec_check.ml[495,17211+43]..[495,17211+44])
                            expression (typing/rec_check.ml[495,17211+48]..[495,17211+51])
                              Pexp_apply
                              expression (typing/rec_check.ml[495,17211+48]..[495,17211+49])
                                Pexp_ident "f" (typing/rec_check.ml[495,17211+48]..[495,17211+49])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[495,17211+50]..[495,17211+51])
                                    Pexp_ident "m" (typing/rec_check.ml[495,17211+50]..[495,17211+51])
                              ]
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[495,17211+53]..[495,17211+55])
                            Pexp_ident "li" (typing/rec_check.ml[495,17211+53]..[495,17211+55])
                      ]
                ]
          core_type (typing/rec_check.ml[494,17170+11]..[494,17170+38])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[494,17170+11]..[494,17170+25])
              Ptyp_constr "list" (typing/rec_check.ml[494,17170+21]..[494,17170+25])
              [
                core_type (typing/rec_check.ml[494,17170+11]..[494,17170+20])
                  Ptyp_constr "term_judg" (typing/rec_check.ml[494,17170+11]..[494,17170+20])
                  []
              ]
            core_type (typing/rec_check.ml[494,17170+29]..[494,17170+38])
              Ptyp_constr "term_judg" (typing/rec_check.ml[494,17170+29]..[494,17170+38])
              []
    ]
  structure_item (typing/rec_check.ml[497,17269+0]..[497,17269+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[497,17269+4]..[497,17269+9])
          Ppat_var "empty" (typing/rec_check.ml[497,17269+4]..[497,17269+9])
        expression (typing/rec_check.ml[497,17269+12]..[497,17269+30])
          Pexp_fun
          Nolabel
          None
          pattern (typing/rec_check.ml[497,17269+16]..[497,17269+17])
            Ppat_any
          expression (typing/rec_check.ml[497,17269+21]..[497,17269+30])
            Pexp_ident "Env.empty" (typing/rec_check.ml[497,17269+21]..[497,17269+30])
    ]
  structure_item (typing/rec_check.ml[502,17508+0]..[503,17554+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[502,17508+4]..[502,17508+43]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[502,17508+4]..[502,17508+8])
            Ppat_var "<<" (typing/rec_check.ml[502,17508+4]..[502,17508+8])
          core_type (typing/rec_check.ml[502,17508+11]..[502,17508+43]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[502,17508+11]..[502,17508+43])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[502,17508+11]..[502,17508+20])
                Ptyp_constr "term_judg" (typing/rec_check.ml[502,17508+11]..[502,17508+20])
                []
              core_type (typing/rec_check.ml[502,17508+24]..[502,17508+43])
                Ptyp_arrow
                Nolabel
                core_type (typing/rec_check.ml[502,17508+24]..[502,17508+30])
                  Ptyp_constr "Mode.t" (typing/rec_check.ml[502,17508+24]..[502,17508+30])
                  []
                core_type (typing/rec_check.ml[502,17508+34]..[502,17508+43])
                  Ptyp_constr "term_judg" (typing/rec_check.ml[502,17508+34]..[502,17508+43])
                  []
        expression (typing/rec_check.ml[502,17508+4]..[503,17554+78])
          Pexp_constraint
          expression (typing/rec_check.ml[503,17554+2]..[503,17554+78])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[503,17554+6]..[503,17554+7])
              Ppat_var "f" (typing/rec_check.ml[503,17554+6]..[503,17554+7])
            expression (typing/rec_check.ml[503,17554+8]..[503,17554+78]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[503,17554+8]..[503,17554+18])
                Ppat_var "inner_mode" (typing/rec_check.ml[503,17554+8]..[503,17554+18])
              expression (typing/rec_check.ml[503,17554+22]..[503,17554+78])
                Pexp_fun
                Nolabel
                None
                pattern (typing/rec_check.ml[503,17554+26]..[503,17554+36])
                  Ppat_var "outer_mode" (typing/rec_check.ml[503,17554+26]..[503,17554+36])
                expression (typing/rec_check.ml[503,17554+40]..[503,17554+78])
                  Pexp_apply
                  expression (typing/rec_check.ml[503,17554+40]..[503,17554+41])
                    Pexp_ident "f" (typing/rec_check.ml[503,17554+40]..[503,17554+41])
                  [
                    <arg>
                    Nolabel
                      expression (typing/rec_check.ml[503,17554+42]..[503,17554+78])
                        Pexp_apply
                        expression (typing/rec_check.ml[503,17554+43]..[503,17554+55])
                          Pexp_ident "Mode.compose" (typing/rec_check.ml[503,17554+43]..[503,17554+55])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[503,17554+56]..[503,17554+66])
                              Pexp_ident "outer_mode" (typing/rec_check.ml[503,17554+56]..[503,17554+66])
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[503,17554+67]..[503,17554+77])
                              Pexp_ident "inner_mode" (typing/rec_check.ml[503,17554+67]..[503,17554+77])
                        ]
                  ]
          core_type (typing/rec_check.ml[502,17508+11]..[502,17508+43])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[502,17508+11]..[502,17508+20])
              Ptyp_constr "term_judg" (typing/rec_check.ml[502,17508+11]..[502,17508+20])
              []
            core_type (typing/rec_check.ml[502,17508+24]..[502,17508+43])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[502,17508+24]..[502,17508+30])
                Ptyp_constr "Mode.t" (typing/rec_check.ml[502,17508+24]..[502,17508+30])
                []
              core_type (typing/rec_check.ml[502,17508+34]..[502,17508+43])
                Ptyp_constr "term_judg" (typing/rec_check.ml[502,17508+34]..[502,17508+43])
                []
    ]
  structure_item (typing/rec_check.ml[509,17859+0]..[510,17908+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[509,17859+4]..[509,17859+46]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[509,17859+4]..[509,17859+8])
            Ppat_var ">>" (typing/rec_check.ml[509,17859+4]..[509,17859+8])
          core_type (typing/rec_check.ml[509,17859+11]..[509,17859+46]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[509,17859+11]..[509,17859+46])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[509,17859+11]..[509,17859+20])
                Ptyp_constr "bind_judg" (typing/rec_check.ml[509,17859+11]..[509,17859+20])
                []
              core_type (typing/rec_check.ml[509,17859+24]..[509,17859+46])
                Ptyp_arrow
                Nolabel
                core_type (typing/rec_check.ml[509,17859+24]..[509,17859+33])
                  Ptyp_constr "term_judg" (typing/rec_check.ml[509,17859+24]..[509,17859+33])
                  []
                core_type (typing/rec_check.ml[509,17859+37]..[509,17859+46])
                  Ptyp_constr "term_judg" (typing/rec_check.ml[509,17859+37]..[509,17859+46])
                  []
        expression (typing/rec_check.ml[509,17859+4]..[510,17908+49])
          Pexp_constraint
          expression (typing/rec_check.ml[510,17908+2]..[510,17908+49])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[510,17908+6]..[510,17908+12])
              Ppat_var "binder" (typing/rec_check.ml[510,17908+6]..[510,17908+12])
            expression (typing/rec_check.ml[510,17908+13]..[510,17908+49]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[510,17908+13]..[510,17908+17])
                Ppat_var "term" (typing/rec_check.ml[510,17908+13]..[510,17908+17])
              expression (typing/rec_check.ml[510,17908+18]..[510,17908+49]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/rec_check.ml[510,17908+18]..[510,17908+22])
                  Ppat_var "mode" (typing/rec_check.ml[510,17908+18]..[510,17908+22])
                expression (typing/rec_check.ml[510,17908+26]..[510,17908+49])
                  Pexp_apply
                  expression (typing/rec_check.ml[510,17908+26]..[510,17908+32])
                    Pexp_ident "binder" (typing/rec_check.ml[510,17908+26]..[510,17908+32])
                  [
                    <arg>
                    Nolabel
                      expression (typing/rec_check.ml[510,17908+33]..[510,17908+37])
                        Pexp_ident "mode" (typing/rec_check.ml[510,17908+33]..[510,17908+37])
                    <arg>
                    Nolabel
                      expression (typing/rec_check.ml[510,17908+38]..[510,17908+49])
                        Pexp_apply
                        expression (typing/rec_check.ml[510,17908+39]..[510,17908+43])
                          Pexp_ident "term" (typing/rec_check.ml[510,17908+39]..[510,17908+43])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[510,17908+44]..[510,17908+48])
                              Pexp_ident "mode" (typing/rec_check.ml[510,17908+44]..[510,17908+48])
                        ]
                  ]
          core_type (typing/rec_check.ml[509,17859+11]..[509,17859+46])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[509,17859+11]..[509,17859+20])
              Ptyp_constr "bind_judg" (typing/rec_check.ml[509,17859+11]..[509,17859+20])
              []
            core_type (typing/rec_check.ml[509,17859+24]..[509,17859+46])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[509,17859+24]..[509,17859+33])
                Ptyp_constr "term_judg" (typing/rec_check.ml[509,17859+24]..[509,17859+33])
                []
              core_type (typing/rec_check.ml[509,17859+37]..[509,17859+46])
                Ptyp_constr "term_judg" (typing/rec_check.ml[509,17859+37]..[509,17859+46])
                []
    ]
  structure_item (typing/rec_check.ml[517,18118+0]..[1202,40476+64])
    Pstr_value Rec
    [
      <def>
        pattern (typing/rec_check.ml[517,18118+8]..[517,18118+54]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[517,18118+8]..[517,18118+18])
            Ppat_var "expression" (typing/rec_check.ml[517,18118+8]..[517,18118+18])
          core_type (typing/rec_check.ml[517,18118+21]..[517,18118+54]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[517,18118+21]..[517,18118+54])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[517,18118+21]..[517,18118+41])
                Ptyp_constr "Typedtree.expression" (typing/rec_check.ml[517,18118+21]..[517,18118+41])
                []
              core_type (typing/rec_check.ml[517,18118+45]..[517,18118+54])
                Ptyp_constr "term_judg" (typing/rec_check.ml[517,18118+45]..[517,18118+54])
                []
        expression (typing/rec_check.ml[517,18118+8]..[819,27384+41])
          Pexp_constraint
          expression (typing/rec_check.ml[518,18175+2]..[819,27384+41])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[518,18175+6]..[518,18175+9])
              Ppat_var "exp" (typing/rec_check.ml[518,18175+6]..[518,18175+9])
            expression (typing/rec_check.ml[518,18175+13]..[819,27384+41])
              Pexp_match
              expression (typing/rec_check.ml[518,18175+19]..[518,18175+31])
                Pexp_field
                expression (typing/rec_check.ml[518,18175+19]..[518,18175+22])
                  Pexp_ident "exp" (typing/rec_check.ml[518,18175+19]..[518,18175+22])
                "exp_desc" (typing/rec_check.ml[518,18175+23]..[518,18175+31])
              [
                <case>
                  pattern (typing/rec_check.ml[519,18212+6]..[519,18212+28])
                    Ppat_construct "Texp_ident" (typing/rec_check.ml[519,18212+6]..[519,18212+16])
                    Some
                      []
                      pattern (typing/rec_check.ml[519,18212+17]..[519,18212+28])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[519,18212+18]..[519,18212+21])
                            Ppat_var "pth" (typing/rec_check.ml[519,18212+18]..[519,18212+21])
                          pattern (typing/rec_check.ml[519,18212+23]..[519,18212+24])
                            Ppat_any
                          pattern (typing/rec_check.ml[519,18212+26]..[519,18212+27])
                            Ppat_any
                        ]
                  expression (typing/rec_check.ml[520,18244+6]..[520,18244+14])
                    Pexp_apply
                    expression (typing/rec_check.ml[520,18244+6]..[520,18244+10])
                      Pexp_ident "path" (typing/rec_check.ml[520,18244+6]..[520,18244+10])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[520,18244+11]..[520,18244+14])
                          Pexp_ident "pth" (typing/rec_check.ml[520,18244+11]..[520,18244+14])
                    ]
                <case>
                  pattern (typing/rec_check.ml[521,18259+6]..[521,18259+41])
                    Ppat_construct "Texp_let" (typing/rec_check.ml[521,18259+6]..[521,18259+14])
                    Some
                      []
                      pattern (typing/rec_check.ml[521,18259+15]..[521,18259+41])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[521,18259+16]..[521,18259+24])
                            Ppat_var "rec_flag" (typing/rec_check.ml[521,18259+16]..[521,18259+24])
                          pattern (typing/rec_check.ml[521,18259+26]..[521,18259+34])
                            Ppat_var "bindings" (typing/rec_check.ml[521,18259+26]..[521,18259+34])
                          pattern (typing/rec_check.ml[521,18259+36]..[521,18259+40])
                            Ppat_var "body" (typing/rec_check.ml[521,18259+36]..[521,18259+40])
                        ]
                  expression (typing/rec_check.ml[528,18464+6]..[528,18464+57])
                    Pexp_apply
                    expression (typing/rec_check.ml[528,18464+39]..[528,18464+41])
                      Pexp_ident ">>" (typing/rec_check.ml[528,18464+39]..[528,18464+41])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[528,18464+6]..[528,18464+38])
                          Pexp_apply
                          expression (typing/rec_check.ml[528,18464+6]..[528,18464+20])
                            Pexp_ident "value_bindings" (typing/rec_check.ml[528,18464+6]..[528,18464+20])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[528,18464+21]..[528,18464+29])
                                Pexp_ident "rec_flag" (typing/rec_check.ml[528,18464+21]..[528,18464+29])
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[528,18464+30]..[528,18464+38])
                                Pexp_ident "bindings" (typing/rec_check.ml[528,18464+30]..[528,18464+38])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[528,18464+42]..[528,18464+57])
                          Pexp_apply
                          expression (typing/rec_check.ml[528,18464+42]..[528,18464+52])
                            Pexp_ident "expression" (typing/rec_check.ml[528,18464+42]..[528,18464+52])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[528,18464+53]..[528,18464+57])
                                Pexp_ident "body" (typing/rec_check.ml[528,18464+53]..[528,18464+57])
                          ]
                    ]
                <case>
                  pattern (typing/rec_check.ml[529,18522+6]..[529,18522+39])
                    Ppat_construct "Texp_letmodule" (typing/rec_check.ml[529,18522+6]..[529,18522+20])
                    Some
                      []
                      pattern (typing/rec_check.ml[529,18522+21]..[529,18522+39])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[529,18522+22]..[529,18522+23])
                            Ppat_var "x" (typing/rec_check.ml[529,18522+22]..[529,18522+23])
                          pattern (typing/rec_check.ml[529,18522+25]..[529,18522+26])
                            Ppat_any
                          pattern (typing/rec_check.ml[529,18522+28]..[529,18522+29])
                            Ppat_any
                          pattern (typing/rec_check.ml[529,18522+31]..[529,18522+35])
                            Ppat_var "mexp" (typing/rec_check.ml[529,18522+31]..[529,18522+35])
                          pattern (typing/rec_check.ml[529,18522+37]..[529,18522+38])
                            Ppat_var "e" (typing/rec_check.ml[529,18522+37]..[529,18522+38])
                        ]
                  expression (typing/rec_check.ml[530,18565+6]..[530,18565+46])
                    Pexp_apply
                    expression (typing/rec_check.ml[530,18565+31]..[530,18565+33])
                      Pexp_ident ">>" (typing/rec_check.ml[530,18565+31]..[530,18565+33])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[530,18565+6]..[530,18565+30])
                          Pexp_apply
                          expression (typing/rec_check.ml[530,18565+6]..[530,18565+20])
                            Pexp_ident "module_binding" (typing/rec_check.ml[530,18565+6]..[530,18565+20])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[530,18565+21]..[530,18565+30])
                                Pexp_tuple
                                [
                                  expression (typing/rec_check.ml[530,18565+22]..[530,18565+23])
                                    Pexp_ident "x" (typing/rec_check.ml[530,18565+22]..[530,18565+23])
                                  expression (typing/rec_check.ml[530,18565+25]..[530,18565+29])
                                    Pexp_ident "mexp" (typing/rec_check.ml[530,18565+25]..[530,18565+29])
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[530,18565+34]..[530,18565+46])
                          Pexp_apply
                          expression (typing/rec_check.ml[530,18565+34]..[530,18565+44])
                            Pexp_ident "expression" (typing/rec_check.ml[530,18565+34]..[530,18565+44])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[530,18565+45]..[530,18565+46])
                                Pexp_ident "e" (typing/rec_check.ml[530,18565+45]..[530,18565+46])
                          ]
                    ]
                <case>
                  pattern (typing/rec_check.ml[531,18612+6]..[531,18612+30])
                    Ppat_construct "Texp_match" (typing/rec_check.ml[531,18612+6]..[531,18612+16])
                    Some
                      []
                      pattern (typing/rec_check.ml[531,18612+17]..[531,18612+30])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[531,18612+18]..[531,18612+19])
                            Ppat_var "e" (typing/rec_check.ml[531,18612+18]..[531,18612+19])
                          pattern (typing/rec_check.ml[531,18612+21]..[531,18612+26])
                            Ppat_var "cases" (typing/rec_check.ml[531,18612+21]..[531,18612+26])
                          pattern (typing/rec_check.ml[531,18612+28]..[531,18612+29])
                            Ppat_any
                        ]
                  expression (typing/rec_check.ml[538,18841+6]..[542,19038+42])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/rec_check.ml[538,18841+11]..[538,18841+15])
                      Ppat_var "mode" (typing/rec_check.ml[538,18841+11]..[538,18841+15])
                    expression (typing/rec_check.ml[539,18860+8]..[542,19038+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/rec_check.ml[539,18860+12]..[539,18860+31])
                            Ppat_tuple
                            [
                              pattern (typing/rec_check.ml[539,18860+12]..[539,18860+20])
                                Ppat_var "pat_envs" (typing/rec_check.ml[539,18860+12]..[539,18860+20])
                              pattern (typing/rec_check.ml[539,18860+22]..[539,18860+31])
                                Ppat_var "pat_modes" (typing/rec_check.ml[539,18860+22]..[539,18860+31])
                            ]
                          expression (typing/rec_check.ml[540,18894+10]..[540,18894+60])
                            Pexp_apply
                            expression (typing/rec_check.ml[540,18894+10]..[540,18894+20])
                              Pexp_ident "List.split" (typing/rec_check.ml[540,18894+10]..[540,18894+20])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[540,18894+21]..[540,18894+60])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[540,18894+22]..[540,18894+30])
                                    Pexp_ident "List.map" (typing/rec_check.ml[540,18894+22]..[540,18894+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[540,18894+31]..[540,18894+53])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/rec_check.ml[540,18894+36]..[540,18894+37])
                                          Ppat_var "c" (typing/rec_check.ml[540,18894+36]..[540,18894+37])
                                        expression (typing/rec_check.ml[540,18894+41]..[540,18894+52])
                                          Pexp_apply
                                          expression (typing/rec_check.ml[540,18894+41]..[540,18894+45])
                                            Pexp_ident "case" (typing/rec_check.ml[540,18894+41]..[540,18894+45])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[540,18894+46]..[540,18894+47])
                                                Pexp_ident "c" (typing/rec_check.ml[540,18894+46]..[540,18894+47])
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[540,18894+48]..[540,18894+52])
                                                Pexp_ident "mode" (typing/rec_check.ml[540,18894+48]..[540,18894+52])
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[540,18894+54]..[540,18894+59])
                                        Pexp_ident "cases" (typing/rec_check.ml[540,18894+54]..[540,18894+59])
                                  ]
                            ]
                      ]
                      expression (typing/rec_check.ml[541,18958+8]..[542,19038+41])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/rec_check.ml[541,18958+12]..[541,18958+17])
                              Ppat_var "env_e" (typing/rec_check.ml[541,18958+12]..[541,18958+17])
                            expression (typing/rec_check.ml[541,18958+20]..[541,18958+76])
                              Pexp_apply
                              expression (typing/rec_check.ml[541,18958+20]..[541,18958+30])
                                Pexp_ident "expression" (typing/rec_check.ml[541,18958+20]..[541,18958+30])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[541,18958+31]..[541,18958+32])
                                    Pexp_ident "e" (typing/rec_check.ml[541,18958+31]..[541,18958+32])
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[541,18958+33]..[541,18958+76])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[541,18958+34]..[541,18958+48])
                                      Pexp_ident "List.fold_left" (typing/rec_check.ml[541,18958+34]..[541,18958+48])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[541,18958+49]..[541,18958+58])
                                          Pexp_ident "Mode.join" (typing/rec_check.ml[541,18958+49]..[541,18958+58])
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[541,18958+59]..[541,18958+65])
                                          Pexp_construct "Ignore" (typing/rec_check.ml[541,18958+59]..[541,18958+65])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[541,18958+66]..[541,18958+75])
                                          Pexp_ident "pat_modes" (typing/rec_check.ml[541,18958+66]..[541,18958+75])
                                    ]
                              ]
                        ]
                        expression (typing/rec_check.ml[542,19038+8]..[542,19038+41])
                          Pexp_apply
                          expression (typing/rec_check.ml[542,19038+8]..[542,19038+21])
                            Pexp_ident "Env.join_list" (typing/rec_check.ml[542,19038+8]..[542,19038+21])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[542,19038+22]..[542,19038+41])
                                Pexp_construct "::" (typing/rec_check.ml[542,19038+29]..[542,19038+31])
                                Some
                                  expression (typing/rec_check.ml[542,19038+23]..[542,19038+40]) ghost
                                    Pexp_tuple
                                    [
                                      expression (typing/rec_check.ml[542,19038+23]..[542,19038+28])
                                        Pexp_ident "env_e" (typing/rec_check.ml[542,19038+23]..[542,19038+28])
                                      expression (typing/rec_check.ml[542,19038+32]..[542,19038+40])
                                        Pexp_ident "pat_envs" (typing/rec_check.ml[542,19038+32]..[542,19038+40])
                                    ]
                          ]
                <case>
                  pattern (typing/rec_check.ml[543,19081+6]..[543,19081+41])
                    Ppat_construct "Texp_for" (typing/rec_check.ml[543,19081+6]..[543,19081+14])
                    Some
                      []
                      pattern (typing/rec_check.ml[543,19081+15]..[543,19081+41])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[543,19081+16]..[543,19081+17])
                            Ppat_any
                          pattern (typing/rec_check.ml[543,19081+19]..[543,19081+20])
                            Ppat_any
                          pattern (typing/rec_check.ml[543,19081+22]..[543,19081+25])
                            Ppat_var "low" (typing/rec_check.ml[543,19081+22]..[543,19081+25])
                          pattern (typing/rec_check.ml[543,19081+27]..[543,19081+31])
                            Ppat_var "high" (typing/rec_check.ml[543,19081+27]..[543,19081+31])
                          pattern (typing/rec_check.ml[543,19081+33]..[543,19081+34])
                            Ppat_any
                          pattern (typing/rec_check.ml[543,19081+36]..[543,19081+40])
                            Ppat_var "body" (typing/rec_check.ml[543,19081+36]..[543,19081+40])
                        ]
                  expression (typing/rec_check.ml[551,19314+6]..[555,19440+7])
                    Pexp_apply
                    expression (typing/rec_check.ml[551,19314+6]..[551,19314+10])
                      Pexp_ident "join" (typing/rec_check.ml[551,19314+6]..[551,19314+10])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[551,19314+11]..[555,19440+7])
                          Pexp_construct "::" (typing/rec_check.ml[552,19327+8]..[555,19440+7]) ghost
                          Some
                            expression (typing/rec_check.ml[552,19327+8]..[555,19440+7]) ghost
                              Pexp_tuple
                              [
                                expression (typing/rec_check.ml[552,19327+8]..[552,19327+37])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[552,19327+23]..[552,19327+25])
                                    Pexp_ident "<<" (typing/rec_check.ml[552,19327+23]..[552,19327+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[552,19327+8]..[552,19327+22])
                                        Pexp_apply
                                        expression (typing/rec_check.ml[552,19327+8]..[552,19327+18])
                                          Pexp_ident "expression" (typing/rec_check.ml[552,19327+8]..[552,19327+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/rec_check.ml[552,19327+19]..[552,19327+22])
                                              Pexp_ident "low" (typing/rec_check.ml[552,19327+19]..[552,19327+22])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[552,19327+26]..[552,19327+37])
                                        Pexp_construct "Dereference" (typing/rec_check.ml[552,19327+26]..[552,19327+37])
                                        None
                                  ]
                                expression (typing/rec_check.ml[553,19366+8]..[555,19440+7]) ghost
                                  Pexp_construct "::" (typing/rec_check.ml[553,19366+8]..[555,19440+7]) ghost
                                  Some
                                    expression (typing/rec_check.ml[553,19366+8]..[555,19440+7]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/rec_check.ml[553,19366+8]..[553,19366+38])
                                          Pexp_apply
                                          expression (typing/rec_check.ml[553,19366+24]..[553,19366+26])
                                            Pexp_ident "<<" (typing/rec_check.ml[553,19366+24]..[553,19366+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[553,19366+8]..[553,19366+23])
                                                Pexp_apply
                                                expression (typing/rec_check.ml[553,19366+8]..[553,19366+18])
                                                  Pexp_ident "expression" (typing/rec_check.ml[553,19366+8]..[553,19366+18])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/rec_check.ml[553,19366+19]..[553,19366+23])
                                                      Pexp_ident "high" (typing/rec_check.ml[553,19366+19]..[553,19366+23])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[553,19366+27]..[553,19366+38])
                                                Pexp_construct "Dereference" (typing/rec_check.ml[553,19366+27]..[553,19366+38])
                                                None
                                          ]
                                        expression (typing/rec_check.ml[554,19406+8]..[555,19440+7]) ghost
                                          Pexp_construct "::" (typing/rec_check.ml[554,19406+8]..[555,19440+7]) ghost
                                          Some
                                            expression (typing/rec_check.ml[554,19406+8]..[555,19440+7]) ghost
                                              Pexp_tuple
                                              [
                                                expression (typing/rec_check.ml[554,19406+8]..[554,19406+32])
                                                  Pexp_apply
                                                  expression (typing/rec_check.ml[554,19406+24]..[554,19406+26])
                                                    Pexp_ident "<<" (typing/rec_check.ml[554,19406+24]..[554,19406+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[554,19406+8]..[554,19406+23])
                                                        Pexp_apply
                                                        expression (typing/rec_check.ml[554,19406+8]..[554,19406+18])
                                                          Pexp_ident "expression" (typing/rec_check.ml[554,19406+8]..[554,19406+18])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/rec_check.ml[554,19406+19]..[554,19406+23])
                                                              Pexp_ident "body" (typing/rec_check.ml[554,19406+19]..[554,19406+23])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[554,19406+27]..[554,19406+32])
                                                        Pexp_construct "Guard" (typing/rec_check.ml[554,19406+27]..[554,19406+32])
                                                        None
                                                  ]
                                                expression (typing/rec_check.ml[555,19440+6]..[555,19440+7]) ghost
                                                  Pexp_construct "[]" (typing/rec_check.ml[555,19440+6]..[555,19440+7]) ghost
                                                  None
                                              ]
                                      ]
                              ]
                    ]
                <case>
                  pattern (typing/rec_check.ml[556,19448+6]..[556,19448+21])
                    Ppat_construct "Texp_constant" (typing/rec_check.ml[556,19448+6]..[556,19448+19])
                    Some
                      []
                      pattern (typing/rec_check.ml[556,19448+20]..[556,19448+21])
                        Ppat_any
                  expression (typing/rec_check.ml[557,19473+6]..[557,19473+11])
                    Pexp_ident "empty" (typing/rec_check.ml[557,19473+6]..[557,19473+11])
                <case>
                  pattern (typing/rec_check.ml[558,19485+6]..[558,19485+26])
                    Ppat_construct "Texp_new" (typing/rec_check.ml[558,19485+6]..[558,19485+14])
                    Some
                      []
                      pattern (typing/rec_check.ml[558,19485+15]..[558,19485+26])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[558,19485+16]..[558,19485+19])
                            Ppat_var "pth" (typing/rec_check.ml[558,19485+16]..[558,19485+19])
                          pattern (typing/rec_check.ml[558,19485+21]..[558,19485+22])
                            Ppat_any
                          pattern (typing/rec_check.ml[558,19485+24]..[558,19485+25])
                            Ppat_any
                        ]
                  expression (typing/rec_check.ml[564,19618+6]..[564,19618+29])
                    Pexp_apply
                    expression (typing/rec_check.ml[564,19618+15]..[564,19618+17])
                      Pexp_ident "<<" (typing/rec_check.ml[564,19618+15]..[564,19618+17])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[564,19618+6]..[564,19618+14])
                          Pexp_apply
                          expression (typing/rec_check.ml[564,19618+6]..[564,19618+10])
                            Pexp_ident "path" (typing/rec_check.ml[564,19618+6]..[564,19618+10])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[564,19618+11]..[564,19618+14])
                                Pexp_ident "pth" (typing/rec_check.ml[564,19618+11]..[564,19618+14])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[564,19618+18]..[564,19618+29])
                          Pexp_construct "Dereference" (typing/rec_check.ml[564,19618+18]..[564,19618+29])
                          None
                    ]
                <case>
                  pattern (typing/rec_check.ml[565,19648+6]..[565,19648+46])
                    Ppat_construct "Texp_instvar" (typing/rec_check.ml[565,19648+6]..[565,19648+18])
                    Some
                      []
                      pattern (typing/rec_check.ml[565,19648+19]..[565,19648+46])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[565,19648+20]..[565,19648+29])
                            Ppat_var "self_path" (typing/rec_check.ml[565,19648+20]..[565,19648+29])
                          pattern (typing/rec_check.ml[565,19648+31]..[565,19648+34])
                            Ppat_var "pth" (typing/rec_check.ml[565,19648+31]..[565,19648+34])
                          pattern (typing/rec_check.ml[565,19648+36]..[565,19648+45])
                            Ppat_var "_inst_var" (typing/rec_check.ml[565,19648+36]..[565,19648+45])
                        ]
                  expression (typing/rec_check.ml[566,19698+8]..[566,19698+54])
                    Pexp_apply
                    expression (typing/rec_check.ml[566,19698+8]..[566,19698+12])
                      Pexp_ident "join" (typing/rec_check.ml[566,19698+8]..[566,19698+12])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[566,19698+13]..[566,19698+54])
                          Pexp_construct "::" (typing/rec_check.ml[566,19698+14]..[566,19698+54]) ghost
                          Some
                            expression (typing/rec_check.ml[566,19698+14]..[566,19698+54]) ghost
                              Pexp_tuple
                              [
                                expression (typing/rec_check.ml[566,19698+14]..[566,19698+43])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[566,19698+29]..[566,19698+31])
                                    Pexp_ident "<<" (typing/rec_check.ml[566,19698+29]..[566,19698+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[566,19698+14]..[566,19698+28])
                                        Pexp_apply
                                        expression (typing/rec_check.ml[566,19698+14]..[566,19698+18])
                                          Pexp_ident "path" (typing/rec_check.ml[566,19698+14]..[566,19698+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/rec_check.ml[566,19698+19]..[566,19698+28])
                                              Pexp_ident "self_path" (typing/rec_check.ml[566,19698+19]..[566,19698+28])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[566,19698+32]..[566,19698+43])
                                        Pexp_construct "Dereference" (typing/rec_check.ml[566,19698+32]..[566,19698+43])
                                        None
                                  ]
                                expression (typing/rec_check.ml[566,19698+45]..[566,19698+54]) ghost
                                  Pexp_construct "::" (typing/rec_check.ml[566,19698+45]..[566,19698+54]) ghost
                                  Some
                                    expression (typing/rec_check.ml[566,19698+45]..[566,19698+54]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/rec_check.ml[566,19698+45]..[566,19698+53])
                                          Pexp_apply
                                          expression (typing/rec_check.ml[566,19698+45]..[566,19698+49])
                                            Pexp_ident "path" (typing/rec_check.ml[566,19698+45]..[566,19698+49])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[566,19698+50]..[566,19698+53])
                                                Pexp_ident "pth" (typing/rec_check.ml[566,19698+50]..[566,19698+53])
                                          ]
                                        expression (typing/rec_check.ml[566,19698+53]..[566,19698+54]) ghost
                                          Pexp_construct "[]" (typing/rec_check.ml[566,19698+53]..[566,19698+54]) ghost
                                          None
                                      ]
                              ]
                    ]
                <case>
                  pattern (typing/rec_check.ml[567,19753+6]..[567,19753+68])
                    Ppat_construct "Texp_apply" (typing/rec_check.ml[567,19753+6]..[567,19753+16])
                    Some
                      []
                      pattern (typing/rec_check.ml[567,19753+17]..[567,19753+68])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[567,19753+18]..[567,19753+52])
                            Ppat_record Closed
                            [
                              "exp_desc" (typing/rec_check.ml[567,19753+19]..[567,19753+27])
                                pattern (typing/rec_check.ml[567,19753+30]..[567,19753+51])
                                  Ppat_construct "Texp_ident" (typing/rec_check.ml[567,19753+30]..[567,19753+40])
                                  Some
                                    []
                                    pattern (typing/rec_check.ml[567,19753+41]..[567,19753+51])
                                      Ppat_tuple
                                      [
                                        pattern (typing/rec_check.ml[567,19753+42]..[567,19753+43])
                                          Ppat_any
                                        pattern (typing/rec_check.ml[567,19753+45]..[567,19753+46])
                                          Ppat_any
                                        pattern (typing/rec_check.ml[567,19753+48]..[567,19753+50])
                                          Ppat_var "vd" (typing/rec_check.ml[567,19753+48]..[567,19753+50])
                                      ]
                            ]
                          pattern (typing/rec_check.ml[567,19753+54]..[567,19753+67])
                            Ppat_construct "::" (typing/rec_check.ml[567,19753+55]..[567,19753+67]) ghost
                            Some
                              []
                              pattern (typing/rec_check.ml[567,19753+55]..[567,19753+67]) ghost
                                Ppat_tuple
                                [
                                  pattern (typing/rec_check.ml[567,19753+55]..[567,19753+66])
                                    Ppat_tuple
                                    [
                                      pattern (typing/rec_check.ml[567,19753+55]..[567,19753+56])
                                        Ppat_any
                                      pattern (typing/rec_check.ml[567,19753+58]..[567,19753+66])
                                        Ppat_construct "Some" (typing/rec_check.ml[567,19753+58]..[567,19753+62])
                                        Some
                                          []
                                          pattern (typing/rec_check.ml[567,19753+63]..[567,19753+66])
                                            Ppat_var "arg" (typing/rec_check.ml[567,19753+63]..[567,19753+66])
                                    ]
                                  pattern (typing/rec_check.ml[567,19753+66]..[567,19753+67]) ghost
                                    Ppat_construct "[]" (typing/rec_check.ml[567,19753+66]..[567,19753+67]) ghost
                                    None
                                ]
                        ]
                  <when>
                    expression (typing/rec_check.ml[568,19822+11]..[568,19822+20])
                      Pexp_apply
                      expression (typing/rec_check.ml[568,19822+11]..[568,19822+17])
                        Pexp_ident "is_ref" (typing/rec_check.ml[568,19822+11]..[568,19822+17])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[568,19822+18]..[568,19822+20])
                            Pexp_ident "vd" (typing/rec_check.ml[568,19822+18]..[568,19822+20])
                      ]
                  expression (typing/rec_check.ml[574,19938+6]..[574,19938+29])
                    Pexp_apply
                    expression (typing/rec_check.ml[574,19938+21]..[574,19938+23])
                      Pexp_ident "<<" (typing/rec_check.ml[574,19938+21]..[574,19938+23])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[574,19938+6]..[574,19938+20])
                          Pexp_apply
                          expression (typing/rec_check.ml[574,19938+6]..[574,19938+16])
                            Pexp_ident "expression" (typing/rec_check.ml[574,19938+6]..[574,19938+16])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[574,19938+17]..[574,19938+20])
                                Pexp_ident "arg" (typing/rec_check.ml[574,19938+17]..[574,19938+20])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[574,19938+24]..[574,19938+29])
                          Pexp_construct "Guard" (typing/rec_check.ml[574,19938+24]..[574,19938+29])
                          None
                    ]
                <case>
                  pattern (typing/rec_check.ml[575,19968+6]..[575,19968+26])
                    Ppat_construct "Texp_apply" (typing/rec_check.ml[575,19968+6]..[575,19968+16])
                    Some
                      []
                      pattern (typing/rec_check.ml[575,19968+17]..[575,19968+26])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[575,19968+18]..[575,19968+19])
                            Ppat_var "e" (typing/rec_check.ml[575,19968+18]..[575,19968+19])
                          pattern (typing/rec_check.ml[575,19968+21]..[575,19968+25])
                            Ppat_var "args" (typing/rec_check.ml[575,19968+21]..[575,19968+25])
                        ]
                  expression (typing/rec_check.ml[576,19999+8]..[584,20365+54])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/rec_check.ml[576,19999+12]..[576,19999+15])
                          Ppat_var "arg" (typing/rec_check.ml[576,19999+12]..[576,19999+15])
                        expression (typing/rec_check.ml[576,19999+16]..[576,19999+46]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/rec_check.ml[576,19999+16]..[576,19999+23])
                            Ppat_tuple
                            [
                              pattern (typing/rec_check.ml[576,19999+17]..[576,19999+18])
                                Ppat_any
                              pattern (typing/rec_check.ml[576,19999+20]..[576,19999+22])
                                Ppat_var "eo" (typing/rec_check.ml[576,19999+20]..[576,19999+22])
                            ]
                          expression (typing/rec_check.ml[576,19999+26]..[576,19999+46])
                            Pexp_apply
                            expression (typing/rec_check.ml[576,19999+26]..[576,19999+32])
                              Pexp_ident "option" (typing/rec_check.ml[576,19999+26]..[576,19999+32])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[576,19999+33]..[576,19999+43])
                                  Pexp_ident "expression" (typing/rec_check.ml[576,19999+33]..[576,19999+43])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[576,19999+44]..[576,19999+46])
                                  Pexp_ident "eo" (typing/rec_check.ml[576,19999+44]..[576,19999+46])
                            ]
                    ]
                    expression (typing/rec_check.ml[577,20049+8]..[584,20365+54])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/rec_check.ml[577,20049+12]..[577,20049+20])
                            Ppat_var "app_mode" (typing/rec_check.ml[577,20049+12]..[577,20049+20])
                          expression (typing/rec_check.ml[577,20049+23]..[582,20327+26])
                            Pexp_ifthenelse
                            expression (typing/rec_check.ml[577,20049+26]..[577,20049+60])
                              Pexp_apply
                              expression (typing/rec_check.ml[577,20049+26]..[577,20049+37])
                                Pexp_ident "List.exists" (typing/rec_check.ml[577,20049+26]..[577,20049+37])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[577,20049+38]..[577,20049+55])
                                    Pexp_ident "is_abstracted_arg" (typing/rec_check.ml[577,20049+38]..[577,20049+55])
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[577,20049+56]..[577,20049+60])
                                    Pexp_ident "args" (typing/rec_check.ml[577,20049+56]..[577,20049+60])
                              ]
                            expression (typing/rec_check.ml[581,20309+12]..[581,20309+17])
                              Pexp_construct "Guard" (typing/rec_check.ml[581,20309+12]..[581,20309+17])
                              None
                            Some
                              expression (typing/rec_check.ml[582,20327+15]..[582,20327+26])
                                Pexp_construct "Dereference" (typing/rec_check.ml[582,20327+15]..[582,20327+26])
                                None
                      ]
                      expression (typing/rec_check.ml[584,20365+8]..[584,20365+54])
                        Pexp_apply
                        expression (typing/rec_check.ml[584,20365+43]..[584,20365+45])
                          Pexp_ident "<<" (typing/rec_check.ml[584,20365+43]..[584,20365+45])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[584,20365+8]..[584,20365+42])
                              Pexp_apply
                              expression (typing/rec_check.ml[584,20365+8]..[584,20365+12])
                                Pexp_ident "join" (typing/rec_check.ml[584,20365+8]..[584,20365+12])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[584,20365+13]..[584,20365+42])
                                    Pexp_construct "::" (typing/rec_check.ml[584,20365+14]..[584,20365+42]) ghost
                                    Some
                                      expression (typing/rec_check.ml[584,20365+14]..[584,20365+42]) ghost
                                        Pexp_tuple
                                        [
                                          expression (typing/rec_check.ml[584,20365+14]..[584,20365+26])
                                            Pexp_apply
                                            expression (typing/rec_check.ml[584,20365+14]..[584,20365+24])
                                              Pexp_ident "expression" (typing/rec_check.ml[584,20365+14]..[584,20365+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[584,20365+25]..[584,20365+26])
                                                  Pexp_ident "e" (typing/rec_check.ml[584,20365+25]..[584,20365+26])
                                            ]
                                          expression (typing/rec_check.ml[584,20365+28]..[584,20365+42]) ghost
                                            Pexp_construct "::" (typing/rec_check.ml[584,20365+28]..[584,20365+42]) ghost
                                            Some
                                              expression (typing/rec_check.ml[584,20365+28]..[584,20365+42]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (typing/rec_check.ml[584,20365+28]..[584,20365+41])
                                                    Pexp_apply
                                                    expression (typing/rec_check.ml[584,20365+28]..[584,20365+32])
                                                      Pexp_ident "list" (typing/rec_check.ml[584,20365+28]..[584,20365+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/rec_check.ml[584,20365+33]..[584,20365+36])
                                                          Pexp_ident "arg" (typing/rec_check.ml[584,20365+33]..[584,20365+36])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/rec_check.ml[584,20365+37]..[584,20365+41])
                                                          Pexp_ident "args" (typing/rec_check.ml[584,20365+37]..[584,20365+41])
                                                    ]
                                                  expression (typing/rec_check.ml[584,20365+41]..[584,20365+42]) ghost
                                                    Pexp_construct "[]" (typing/rec_check.ml[584,20365+41]..[584,20365+42]) ghost
                                                    None
                                                ]
                                        ]
                              ]
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[584,20365+46]..[584,20365+54])
                              Pexp_ident "app_mode" (typing/rec_check.ml[584,20365+46]..[584,20365+54])
                        ]
                <case>
                  pattern (typing/rec_check.ml[585,20420+6]..[585,20420+22])
                    Ppat_construct "Texp_tuple" (typing/rec_check.ml[585,20420+6]..[585,20420+16])
                    Some
                      []
                      pattern (typing/rec_check.ml[585,20420+17]..[585,20420+22])
                        Ppat_var "exprs" (typing/rec_check.ml[585,20420+17]..[585,20420+22])
                  expression (typing/rec_check.ml[586,20446+6]..[586,20446+36])
                    Pexp_apply
                    expression (typing/rec_check.ml[586,20446+28]..[586,20446+30])
                      Pexp_ident "<<" (typing/rec_check.ml[586,20446+28]..[586,20446+30])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[586,20446+6]..[586,20446+27])
                          Pexp_apply
                          expression (typing/rec_check.ml[586,20446+6]..[586,20446+10])
                            Pexp_ident "list" (typing/rec_check.ml[586,20446+6]..[586,20446+10])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[586,20446+11]..[586,20446+21])
                                Pexp_ident "expression" (typing/rec_check.ml[586,20446+11]..[586,20446+21])
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[586,20446+22]..[586,20446+27])
                                Pexp_ident "exprs" (typing/rec_check.ml[586,20446+22]..[586,20446+27])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[586,20446+31]..[586,20446+36])
                          Pexp_construct "Guard" (typing/rec_check.ml[586,20446+31]..[586,20446+36])
                          None
                    ]
                <case>
                  pattern (typing/rec_check.ml[587,20483+6]..[587,20483+22])
                    Ppat_construct "Texp_array" (typing/rec_check.ml[587,20483+6]..[587,20483+16])
                    Some
                      []
                      pattern (typing/rec_check.ml[587,20483+17]..[587,20483+22])
                        Ppat_var "exprs" (typing/rec_check.ml[587,20483+17]..[587,20483+22])
                  expression (typing/rec_check.ml[588,20509+6]..[600,21034+41])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/rec_check.ml[588,20509+10]..[588,20509+20])
                          Ppat_var "array_mode" (typing/rec_check.ml[588,20509+10]..[588,20509+20])
                        expression (typing/rec_check.ml[588,20509+23]..[598,21007+17])
                          Pexp_match
                          expression (typing/rec_check.ml[588,20509+29]..[588,20509+51])
                            Pexp_apply
                            expression (typing/rec_check.ml[588,20509+29]..[588,20509+47])
                              Pexp_ident "Typeopt.array_kind" (typing/rec_check.ml[588,20509+29]..[588,20509+47])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[588,20509+48]..[588,20509+51])
                                  Pexp_ident "exp" (typing/rec_check.ml[588,20509+48]..[588,20509+51])
                            ]
                          [
                            <case>
                              pattern (typing/rec_check.ml[589,20566+10]..[589,20566+28])
                                Ppat_construct "Lambda.Pfloatarray" (typing/rec_check.ml[589,20566+10]..[589,20566+28])
                                None
                              expression (typing/rec_check.ml[591,20657+12]..[591,20657+23])
                                Pexp_construct "Dereference" (typing/rec_check.ml[591,20657+12]..[591,20657+23])
                                None
                            <case>
                              pattern (typing/rec_check.ml[592,20681+10]..[592,20681+26])
                                Ppat_construct "Lambda.Pgenarray" (typing/rec_check.ml[592,20681+10]..[592,20681+26])
                                None
                              expression (typing/rec_check.ml[595,20865+12]..[595,20865+23])
                                Pexp_construct "Dereference" (typing/rec_check.ml[595,20865+12]..[595,20865+23])
                                None
                            <case>
                              pattern (typing/rec_check.ml[596,20889+10]..[596,20889+46])
                                Ppat_or
                                pattern (typing/rec_check.ml[596,20889+10]..[596,20889+27])
                                  Ppat_construct "Lambda.Paddrarray" (typing/rec_check.ml[596,20889+10]..[596,20889+27])
                                  None
                                pattern (typing/rec_check.ml[596,20889+30]..[596,20889+46])
                                  Ppat_construct "Lambda.Pintarray" (typing/rec_check.ml[596,20889+30]..[596,20889+46])
                                  None
                              expression (typing/rec_check.ml[598,21007+12]..[598,21007+17])
                                Pexp_construct "Guard" (typing/rec_check.ml[598,21007+12]..[598,21007+17])
                                None
                          ]
                    ]
                    expression (typing/rec_check.ml[600,21034+6]..[600,21034+41])
                      Pexp_apply
                      expression (typing/rec_check.ml[600,21034+28]..[600,21034+30])
                        Pexp_ident "<<" (typing/rec_check.ml[600,21034+28]..[600,21034+30])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[600,21034+6]..[600,21034+27])
                            Pexp_apply
                            expression (typing/rec_check.ml[600,21034+6]..[600,21034+10])
                              Pexp_ident "list" (typing/rec_check.ml[600,21034+6]..[600,21034+10])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[600,21034+11]..[600,21034+21])
                                  Pexp_ident "expression" (typing/rec_check.ml[600,21034+11]..[600,21034+21])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[600,21034+22]..[600,21034+27])
                                  Pexp_ident "exprs" (typing/rec_check.ml[600,21034+22]..[600,21034+27])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[600,21034+31]..[600,21034+41])
                            Pexp_ident "array_mode" (typing/rec_check.ml[600,21034+31]..[600,21034+41])
                      ]
                <case>
                  pattern (typing/rec_check.ml[601,21076+6]..[601,21076+37])
                    Ppat_construct "Texp_construct" (typing/rec_check.ml[601,21076+6]..[601,21076+20])
                    Some
                      []
                      pattern (typing/rec_check.ml[601,21076+21]..[601,21076+37])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[601,21076+22]..[601,21076+23])
                            Ppat_any
                          pattern (typing/rec_check.ml[601,21076+25]..[601,21076+29])
                            Ppat_var "desc" (typing/rec_check.ml[601,21076+25]..[601,21076+29])
                          pattern (typing/rec_check.ml[601,21076+31]..[601,21076+36])
                            Ppat_var "exprs" (typing/rec_check.ml[601,21076+31]..[601,21076+36])
                        ]
                  expression (typing/rec_check.ml[602,21117+6]..[617,21530+7])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/rec_check.ml[602,21117+10]..[602,21117+28])
                          Ppat_var "access_constructor" (typing/rec_check.ml[602,21117+10]..[602,21117+28])
                        expression (typing/rec_check.ml[603,21148+8]..[606,21252+20])
                          Pexp_match
                          expression (typing/rec_check.ml[603,21148+14]..[603,21148+27])
                            Pexp_field
                            expression (typing/rec_check.ml[603,21148+14]..[603,21148+18])
                              Pexp_ident "desc" (typing/rec_check.ml[603,21148+14]..[603,21148+18])
                            "cstr_tag" (typing/rec_check.ml[603,21148+19]..[603,21148+27])
                          [
                            <case>
                              pattern (typing/rec_check.ml[604,21181+10]..[604,21181+33])
                                Ppat_construct "Cstr_extension" (typing/rec_check.ml[604,21181+10]..[604,21181+24])
                                Some
                                  []
                                  pattern (typing/rec_check.ml[604,21181+25]..[604,21181+33])
                                    Ppat_tuple
                                    [
                                      pattern (typing/rec_check.ml[604,21181+26]..[604,21181+29])
                                        Ppat_var "pth" (typing/rec_check.ml[604,21181+26]..[604,21181+29])
                                      pattern (typing/rec_check.ml[604,21181+31]..[604,21181+32])
                                        Ppat_any
                                    ]
                              expression (typing/rec_check.ml[605,21218+10]..[605,21218+33])
                                Pexp_apply
                                expression (typing/rec_check.ml[605,21218+19]..[605,21218+21])
                                  Pexp_ident "<<" (typing/rec_check.ml[605,21218+19]..[605,21218+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[605,21218+10]..[605,21218+18])
                                      Pexp_apply
                                      expression (typing/rec_check.ml[605,21218+10]..[605,21218+14])
                                        Pexp_ident "path" (typing/rec_check.ml[605,21218+10]..[605,21218+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[605,21218+15]..[605,21218+18])
                                            Pexp_ident "pth" (typing/rec_check.ml[605,21218+15]..[605,21218+18])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[605,21218+22]..[605,21218+33])
                                      Pexp_construct "Dereference" (typing/rec_check.ml[605,21218+22]..[605,21218+33])
                                      None
                                ]
                            <case>
                              pattern (typing/rec_check.ml[606,21252+10]..[606,21252+11])
                                Ppat_any
                              expression (typing/rec_check.ml[606,21252+15]..[606,21252+20])
                                Pexp_ident "empty" (typing/rec_check.ml[606,21252+15]..[606,21252+20])
                          ]
                    ]
                    expression (typing/rec_check.ml[608,21282+6]..[617,21530+7])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/rec_check.ml[608,21282+10]..[608,21282+12])
                            Ppat_var "m'" (typing/rec_check.ml[608,21282+10]..[608,21282+12])
                          expression (typing/rec_check.ml[608,21282+15]..[612,21428+15])
                            Pexp_match
                            expression (typing/rec_check.ml[608,21282+21]..[608,21282+34])
                              Pexp_field
                              expression (typing/rec_check.ml[608,21282+21]..[608,21282+25])
                                Pexp_ident "desc" (typing/rec_check.ml[608,21282+21]..[608,21282+25])
                              "cstr_tag" (typing/rec_check.ml[608,21282+26]..[608,21282+34])
                            [
                              <case>
                                pattern (typing/rec_check.ml[609,21322+10]..[609,21322+22])
                                  Ppat_construct "Cstr_unboxed" (typing/rec_check.ml[609,21322+10]..[609,21322+22])
                                  None
                                expression (typing/rec_check.ml[610,21348+10]..[610,21348+16])
                                  Pexp_construct "Return" (typing/rec_check.ml[610,21348+10]..[610,21348+16])
                                  None
                              <case>
                                pattern (typing/rec_check.ml[611,21365+10]..[611,21365+59])
                                  Ppat_or
                                  pattern (typing/rec_check.ml[611,21365+10]..[611,21365+40])
                                    Ppat_or
                                    pattern (typing/rec_check.ml[611,21365+10]..[611,21365+25])
                                      Ppat_construct "Cstr_constant" (typing/rec_check.ml[611,21365+10]..[611,21365+23])
                                      Some
                                        []
                                        pattern (typing/rec_check.ml[611,21365+24]..[611,21365+25])
                                          Ppat_any
                                    pattern (typing/rec_check.ml[611,21365+28]..[611,21365+40])
                                      Ppat_construct "Cstr_block" (typing/rec_check.ml[611,21365+28]..[611,21365+38])
                                      Some
                                        []
                                        pattern (typing/rec_check.ml[611,21365+39]..[611,21365+40])
                                          Ppat_any
                                  pattern (typing/rec_check.ml[611,21365+43]..[611,21365+59])
                                    Ppat_construct "Cstr_extension" (typing/rec_check.ml[611,21365+43]..[611,21365+57])
                                    Some
                                      []
                                      pattern (typing/rec_check.ml[611,21365+58]..[611,21365+59])
                                        Ppat_any
                                expression (typing/rec_check.ml[612,21428+10]..[612,21428+15])
                                  Pexp_construct "Guard" (typing/rec_check.ml[612,21428+10]..[612,21428+15])
                                  None
                            ]
                      ]
                      expression (typing/rec_check.ml[614,21453+6]..[617,21530+7])
                        Pexp_apply
                        expression (typing/rec_check.ml[614,21453+6]..[614,21453+10])
                          Pexp_ident "join" (typing/rec_check.ml[614,21453+6]..[614,21453+10])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[614,21453+11]..[617,21530+7])
                              Pexp_construct "::" (typing/rec_check.ml[615,21466+8]..[617,21530+7]) ghost
                              Some
                                expression (typing/rec_check.ml[615,21466+8]..[617,21530+7]) ghost
                                  Pexp_tuple
                                  [
                                    expression (typing/rec_check.ml[615,21466+8]..[615,21466+26])
                                      Pexp_ident "access_constructor" (typing/rec_check.ml[615,21466+8]..[615,21466+26])
                                    expression (typing/rec_check.ml[616,21494+8]..[617,21530+7]) ghost
                                      Pexp_construct "::" (typing/rec_check.ml[616,21494+8]..[617,21530+7]) ghost
                                      Some
                                        expression (typing/rec_check.ml[616,21494+8]..[617,21530+7]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/rec_check.ml[616,21494+8]..[616,21494+35])
                                              Pexp_apply
                                              expression (typing/rec_check.ml[616,21494+30]..[616,21494+32])
                                                Pexp_ident "<<" (typing/rec_check.ml[616,21494+30]..[616,21494+32])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/rec_check.ml[616,21494+8]..[616,21494+29])
                                                    Pexp_apply
                                                    expression (typing/rec_check.ml[616,21494+8]..[616,21494+12])
                                                      Pexp_ident "list" (typing/rec_check.ml[616,21494+8]..[616,21494+12])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/rec_check.ml[616,21494+13]..[616,21494+23])
                                                          Pexp_ident "expression" (typing/rec_check.ml[616,21494+13]..[616,21494+23])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/rec_check.ml[616,21494+24]..[616,21494+29])
                                                          Pexp_ident "exprs" (typing/rec_check.ml[616,21494+24]..[616,21494+29])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/rec_check.ml[616,21494+33]..[616,21494+35])
                                                    Pexp_ident "m'" (typing/rec_check.ml[616,21494+33]..[616,21494+35])
                                              ]
                                            expression (typing/rec_check.ml[617,21530+6]..[617,21530+7]) ghost
                                              Pexp_construct "[]" (typing/rec_check.ml[617,21530+6]..[617,21530+7]) ghost
                                              None
                                          ]
                                  ]
                        ]
                <case>
                  pattern (typing/rec_check.ml[618,21538+6]..[618,21538+26])
                    Ppat_construct "Texp_variant" (typing/rec_check.ml[618,21538+6]..[618,21538+18])
                    Some
                      []
                      pattern (typing/rec_check.ml[618,21538+19]..[618,21538+26])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[618,21538+20]..[618,21538+21])
                            Ppat_any
                          pattern (typing/rec_check.ml[618,21538+23]..[618,21538+25])
                            Ppat_var "eo" (typing/rec_check.ml[618,21538+23]..[618,21538+25])
                        ]
                  expression (typing/rec_check.ml[624,21693+6]..[624,21693+35])
                    Pexp_apply
                    expression (typing/rec_check.ml[624,21693+27]..[624,21693+29])
                      Pexp_ident "<<" (typing/rec_check.ml[624,21693+27]..[624,21693+29])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[624,21693+6]..[624,21693+26])
                          Pexp_apply
                          expression (typing/rec_check.ml[624,21693+6]..[624,21693+12])
                            Pexp_ident "option" (typing/rec_check.ml[624,21693+6]..[624,21693+12])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[624,21693+13]..[624,21693+23])
                                Pexp_ident "expression" (typing/rec_check.ml[624,21693+13]..[624,21693+23])
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[624,21693+24]..[624,21693+26])
                                Pexp_ident "eo" (typing/rec_check.ml[624,21693+24]..[624,21693+26])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[624,21693+30]..[624,21693+35])
                          Pexp_construct "Guard" (typing/rec_check.ml[624,21693+30]..[624,21693+35])
                          None
                    ]
                <case>
                  pattern (typing/rec_check.ml[625,21729+6]..[626,21788+42])
                    Ppat_construct "Texp_record" (typing/rec_check.ml[625,21729+6]..[625,21729+17])
                    Some
                      []
                      pattern (typing/rec_check.ml[625,21729+18]..[626,21788+42])
                        Ppat_record Closed
                        [
                          "fields" (typing/rec_check.ml[625,21729+20]..[625,21729+26])
                            pattern (typing/rec_check.ml[625,21729+29]..[625,21729+31])
                              Ppat_var "es" (typing/rec_check.ml[625,21729+29]..[625,21729+31])
                          "extended_expression" (typing/rec_check.ml[625,21729+33]..[625,21729+52])
                            pattern (typing/rec_check.ml[625,21729+55]..[625,21729+57])
                              Ppat_var "eo" (typing/rec_check.ml[625,21729+55]..[625,21729+57])
                          "representation" (typing/rec_check.ml[626,21788+20]..[626,21788+34])
                            pattern (typing/rec_check.ml[626,21788+37]..[626,21788+40])
                              Ppat_var "rep" (typing/rec_check.ml[626,21788+37]..[626,21788+40])
                        ]
                  expression (typing/rec_check.ml[627,21834+8]..[640,22297+9])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/rec_check.ml[627,21834+12]..[627,21834+22])
                          Ppat_var "field_mode" (typing/rec_check.ml[627,21834+12]..[627,21834+22])
                        expression (typing/rec_check.ml[627,21834+25]..[631,21999+39])
                          Pexp_match
                          expression (typing/rec_check.ml[627,21834+31]..[627,21834+34])
                            Pexp_ident "rep" (typing/rec_check.ml[627,21834+31]..[627,21834+34])
                          [
                            <case>
                              pattern (typing/rec_check.ml[628,21874+12]..[628,21874+24])
                                Ppat_construct "Record_float" (typing/rec_check.ml[628,21874+12]..[628,21874+24])
                                None
                              expression (typing/rec_check.ml[628,21874+28]..[628,21874+39])
                                Pexp_construct "Dereference" (typing/rec_check.ml[628,21874+28]..[628,21874+39])
                                None
                            <case>
                              pattern (typing/rec_check.ml[629,21914+12]..[629,21914+28])
                                Ppat_construct "Record_unboxed" (typing/rec_check.ml[629,21914+12]..[629,21914+26])
                                Some
                                  []
                                  pattern (typing/rec_check.ml[629,21914+27]..[629,21914+28])
                                    Ppat_any
                              expression (typing/rec_check.ml[629,21914+32]..[629,21914+38])
                                Pexp_construct "Return" (typing/rec_check.ml[629,21914+32]..[629,21914+38])
                                None
                            <case>
                              pattern (typing/rec_check.ml[630,21953+12]..[631,21999+30])
                                Ppat_or
                                pattern (typing/rec_check.ml[630,21953+12]..[630,21953+45])
                                  Ppat_or
                                  pattern (typing/rec_check.ml[630,21953+12]..[630,21953+26])
                                    Ppat_construct "Record_regular" (typing/rec_check.ml[630,21953+12]..[630,21953+26])
                                    None
                                  pattern (typing/rec_check.ml[630,21953+29]..[630,21953+45])
                                    Ppat_construct "Record_inlined" (typing/rec_check.ml[630,21953+29]..[630,21953+43])
                                    Some
                                      []
                                      pattern (typing/rec_check.ml[630,21953+44]..[630,21953+45])
                                        Ppat_any
                                pattern (typing/rec_check.ml[631,21999+12]..[631,21999+30])
                                  Ppat_construct "Record_extension" (typing/rec_check.ml[631,21999+12]..[631,21999+28])
                                  Some
                                    []
                                    pattern (typing/rec_check.ml[631,21999+29]..[631,21999+30])
                                      Ppat_any
                              expression (typing/rec_check.ml[631,21999+34]..[631,21999+39])
                                Pexp_construct "Guard" (typing/rec_check.ml[631,21999+34]..[631,21999+39])
                                None
                          ]
                    ]
                    expression (typing/rec_check.ml[633,22050+8]..[640,22297+9])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/rec_check.ml[633,22050+12]..[633,22050+17])
                            Ppat_var "field" (typing/rec_check.ml[633,22050+12]..[633,22050+17])
                          expression (typing/rec_check.ml[633,22050+18]..[635,22139+45]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/rec_check.ml[633,22050+18]..[633,22050+37])
                              Ppat_tuple
                              [
                                pattern (typing/rec_check.ml[633,22050+19]..[633,22050+25])
                                  Ppat_var "_label" (typing/rec_check.ml[633,22050+19]..[633,22050+25])
                                pattern (typing/rec_check.ml[633,22050+27]..[633,22050+36])
                                  Ppat_var "field_def" (typing/rec_check.ml[633,22050+27]..[633,22050+36])
                              ]
                            expression (typing/rec_check.ml[633,22050+40]..[635,22139+45])
                              Pexp_match
                              expression (typing/rec_check.ml[633,22050+46]..[633,22050+55])
                                Pexp_ident "field_def" (typing/rec_check.ml[633,22050+46]..[633,22050+55])
                              [
                                <case>
                                  pattern (typing/rec_check.ml[634,22111+12]..[634,22111+18])
                                    Ppat_construct "Kept" (typing/rec_check.ml[634,22111+12]..[634,22111+16])
                                    Some
                                      []
                                      pattern (typing/rec_check.ml[634,22111+17]..[634,22111+18])
                                        Ppat_any
                                  expression (typing/rec_check.ml[634,22111+22]..[634,22111+27])
                                    Pexp_ident "empty" (typing/rec_check.ml[634,22111+22]..[634,22111+27])
                                <case>
                                  pattern (typing/rec_check.ml[635,22139+12]..[635,22139+29])
                                    Ppat_construct "Overridden" (typing/rec_check.ml[635,22139+12]..[635,22139+22])
                                    Some
                                      []
                                      pattern (typing/rec_check.ml[635,22139+23]..[635,22139+29])
                                        Ppat_tuple
                                        [
                                          pattern (typing/rec_check.ml[635,22139+24]..[635,22139+25])
                                            Ppat_any
                                          pattern (typing/rec_check.ml[635,22139+27]..[635,22139+28])
                                            Ppat_var "e" (typing/rec_check.ml[635,22139+27]..[635,22139+28])
                                        ]
                                  expression (typing/rec_check.ml[635,22139+33]..[635,22139+45])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[635,22139+33]..[635,22139+43])
                                      Pexp_ident "expression" (typing/rec_check.ml[635,22139+33]..[635,22139+43])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[635,22139+44]..[635,22139+45])
                                          Pexp_ident "e" (typing/rec_check.ml[635,22139+44]..[635,22139+45])
                                    ]
                              ]
                      ]
                      expression (typing/rec_check.ml[637,22196+8]..[640,22297+9])
                        Pexp_apply
                        expression (typing/rec_check.ml[637,22196+8]..[637,22196+12])
                          Pexp_ident "join" (typing/rec_check.ml[637,22196+8]..[637,22196+12])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[637,22196+13]..[640,22297+9])
                              Pexp_construct "::" (typing/rec_check.ml[638,22211+10]..[640,22297+9]) ghost
                              Some
                                expression (typing/rec_check.ml[638,22211+10]..[640,22297+9]) ghost
                                  Pexp_tuple
                                  [
                                    expression (typing/rec_check.ml[638,22211+10]..[638,22211+38])
                                      Pexp_apply
                                      expression (typing/rec_check.ml[638,22211+25]..[638,22211+27])
                                        Pexp_ident "<<" (typing/rec_check.ml[638,22211+25]..[638,22211+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[638,22211+10]..[638,22211+24])
                                            Pexp_apply
                                            expression (typing/rec_check.ml[638,22211+10]..[638,22211+15])
                                              Pexp_ident "array" (typing/rec_check.ml[638,22211+10]..[638,22211+15])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[638,22211+16]..[638,22211+21])
                                                  Pexp_ident "field" (typing/rec_check.ml[638,22211+16]..[638,22211+21])
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[638,22211+22]..[638,22211+24])
                                                  Pexp_ident "es" (typing/rec_check.ml[638,22211+22]..[638,22211+24])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[638,22211+28]..[638,22211+38])
                                            Pexp_ident "field_mode" (typing/rec_check.ml[638,22211+28]..[638,22211+38])
                                      ]
                                    expression (typing/rec_check.ml[639,22251+10]..[640,22297+9]) ghost
                                      Pexp_construct "::" (typing/rec_check.ml[639,22251+10]..[640,22297+9]) ghost
                                      Some
                                        expression (typing/rec_check.ml[639,22251+10]..[640,22297+9]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/rec_check.ml[639,22251+10]..[639,22251+45])
                                              Pexp_apply
                                              expression (typing/rec_check.ml[639,22251+31]..[639,22251+33])
                                                Pexp_ident "<<" (typing/rec_check.ml[639,22251+31]..[639,22251+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/rec_check.ml[639,22251+10]..[639,22251+30])
                                                    Pexp_apply
                                                    expression (typing/rec_check.ml[639,22251+10]..[639,22251+16])
                                                      Pexp_ident "option" (typing/rec_check.ml[639,22251+10]..[639,22251+16])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/rec_check.ml[639,22251+17]..[639,22251+27])
                                                          Pexp_ident "expression" (typing/rec_check.ml[639,22251+17]..[639,22251+27])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/rec_check.ml[639,22251+28]..[639,22251+30])
                                                          Pexp_ident "eo" (typing/rec_check.ml[639,22251+28]..[639,22251+30])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/rec_check.ml[639,22251+34]..[639,22251+45])
                                                    Pexp_construct "Dereference" (typing/rec_check.ml[639,22251+34]..[639,22251+45])
                                                    None
                                              ]
                                            expression (typing/rec_check.ml[640,22297+8]..[640,22297+9]) ghost
                                              Pexp_construct "[]" (typing/rec_check.ml[640,22297+8]..[640,22297+9]) ghost
                                              None
                                          ]
                                  ]
                        ]
                <case>
                  pattern (typing/rec_check.ml[641,22307+6]..[641,22307+41])
                    Ppat_construct "Texp_ifthenelse" (typing/rec_check.ml[641,22307+6]..[641,22307+21])
                    Some
                      []
                      pattern (typing/rec_check.ml[641,22307+22]..[641,22307+41])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[641,22307+23]..[641,22307+27])
                            Ppat_var "cond" (typing/rec_check.ml[641,22307+23]..[641,22307+27])
                          pattern (typing/rec_check.ml[641,22307+29]..[641,22307+33])
                            Ppat_var "ifso" (typing/rec_check.ml[641,22307+29]..[641,22307+33])
                          pattern (typing/rec_check.ml[641,22307+35]..[641,22307+40])
                            Ppat_var "ifnot" (typing/rec_check.ml[641,22307+35]..[641,22307+40])
                        ]
                  expression (typing/rec_check.ml[652,22614+6]..[656,22725+7])
                    Pexp_apply
                    expression (typing/rec_check.ml[652,22614+6]..[652,22614+10])
                      Pexp_ident "join" (typing/rec_check.ml[652,22614+6]..[652,22614+10])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[652,22614+11]..[656,22725+7])
                          Pexp_construct "::" (typing/rec_check.ml[653,22627+8]..[656,22725+7]) ghost
                          Some
                            expression (typing/rec_check.ml[653,22627+8]..[656,22725+7]) ghost
                              Pexp_tuple
                              [
                                expression (typing/rec_check.ml[653,22627+8]..[653,22627+38])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[653,22627+24]..[653,22627+26])
                                    Pexp_ident "<<" (typing/rec_check.ml[653,22627+24]..[653,22627+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[653,22627+8]..[653,22627+23])
                                        Pexp_apply
                                        expression (typing/rec_check.ml[653,22627+8]..[653,22627+18])
                                          Pexp_ident "expression" (typing/rec_check.ml[653,22627+8]..[653,22627+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/rec_check.ml[653,22627+19]..[653,22627+23])
                                              Pexp_ident "cond" (typing/rec_check.ml[653,22627+19]..[653,22627+23])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[653,22627+27]..[653,22627+38])
                                        Pexp_construct "Dereference" (typing/rec_check.ml[653,22627+27]..[653,22627+38])
                                        None
                                  ]
                                expression (typing/rec_check.ml[654,22667+8]..[656,22725+7]) ghost
                                  Pexp_construct "::" (typing/rec_check.ml[654,22667+8]..[656,22725+7]) ghost
                                  Some
                                    expression (typing/rec_check.ml[654,22667+8]..[656,22725+7]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/rec_check.ml[654,22667+8]..[654,22667+23])
                                          Pexp_apply
                                          expression (typing/rec_check.ml[654,22667+8]..[654,22667+18])
                                            Pexp_ident "expression" (typing/rec_check.ml[654,22667+8]..[654,22667+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[654,22667+19]..[654,22667+23])
                                                Pexp_ident "ifso" (typing/rec_check.ml[654,22667+19]..[654,22667+23])
                                          ]
                                        expression (typing/rec_check.ml[655,22692+8]..[656,22725+7]) ghost
                                          Pexp_construct "::" (typing/rec_check.ml[655,22692+8]..[656,22725+7]) ghost
                                          Some
                                            expression (typing/rec_check.ml[655,22692+8]..[656,22725+7]) ghost
                                              Pexp_tuple
                                              [
                                                expression (typing/rec_check.ml[655,22692+8]..[655,22692+31])
                                                  Pexp_apply
                                                  expression (typing/rec_check.ml[655,22692+8]..[655,22692+14])
                                                    Pexp_ident "option" (typing/rec_check.ml[655,22692+8]..[655,22692+14])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[655,22692+15]..[655,22692+25])
                                                        Pexp_ident "expression" (typing/rec_check.ml[655,22692+15]..[655,22692+25])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[655,22692+26]..[655,22692+31])
                                                        Pexp_ident "ifnot" (typing/rec_check.ml[655,22692+26]..[655,22692+31])
                                                  ]
                                                expression (typing/rec_check.ml[656,22725+6]..[656,22725+7]) ghost
                                                  Pexp_construct "[]" (typing/rec_check.ml[656,22725+6]..[656,22725+7]) ghost
                                                  None
                                              ]
                                      ]
                              ]
                    ]
                <case>
                  pattern (typing/rec_check.ml[657,22733+6]..[657,22733+34])
                    Ppat_construct "Texp_setfield" (typing/rec_check.ml[657,22733+6]..[657,22733+19])
                    Some
                      []
                      pattern (typing/rec_check.ml[657,22733+20]..[657,22733+34])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[657,22733+21]..[657,22733+23])
                            Ppat_var "e1" (typing/rec_check.ml[657,22733+21]..[657,22733+23])
                          pattern (typing/rec_check.ml[657,22733+25]..[657,22733+26])
                            Ppat_any
                          pattern (typing/rec_check.ml[657,22733+28]..[657,22733+29])
                            Ppat_any
                          pattern (typing/rec_check.ml[657,22733+31]..[657,22733+33])
                            Ppat_var "e2" (typing/rec_check.ml[657,22733+31]..[657,22733+33])
                        ]
                  expression (typing/rec_check.ml[668,23091+6]..[671,23180+7])
                    Pexp_apply
                    expression (typing/rec_check.ml[668,23091+6]..[668,23091+10])
                      Pexp_ident "join" (typing/rec_check.ml[668,23091+6]..[668,23091+10])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[668,23091+11]..[671,23180+7])
                          Pexp_construct "::" (typing/rec_check.ml[669,23104+8]..[671,23180+7]) ghost
                          Some
                            expression (typing/rec_check.ml[669,23104+8]..[671,23180+7]) ghost
                              Pexp_tuple
                              [
                                expression (typing/rec_check.ml[669,23104+8]..[669,23104+36])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[669,23104+22]..[669,23104+24])
                                    Pexp_ident "<<" (typing/rec_check.ml[669,23104+22]..[669,23104+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[669,23104+8]..[669,23104+21])
                                        Pexp_apply
                                        expression (typing/rec_check.ml[669,23104+8]..[669,23104+18])
                                          Pexp_ident "expression" (typing/rec_check.ml[669,23104+8]..[669,23104+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/rec_check.ml[669,23104+19]..[669,23104+21])
                                              Pexp_ident "e1" (typing/rec_check.ml[669,23104+19]..[669,23104+21])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[669,23104+25]..[669,23104+36])
                                        Pexp_construct "Dereference" (typing/rec_check.ml[669,23104+25]..[669,23104+36])
                                        None
                                  ]
                                expression (typing/rec_check.ml[670,23142+8]..[671,23180+7]) ghost
                                  Pexp_construct "::" (typing/rec_check.ml[670,23142+8]..[671,23180+7]) ghost
                                  Some
                                    expression (typing/rec_check.ml[670,23142+8]..[671,23180+7]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/rec_check.ml[670,23142+8]..[670,23142+36])
                                          Pexp_apply
                                          expression (typing/rec_check.ml[670,23142+22]..[670,23142+24])
                                            Pexp_ident "<<" (typing/rec_check.ml[670,23142+22]..[670,23142+24])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[670,23142+8]..[670,23142+21])
                                                Pexp_apply
                                                expression (typing/rec_check.ml[670,23142+8]..[670,23142+18])
                                                  Pexp_ident "expression" (typing/rec_check.ml[670,23142+8]..[670,23142+18])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/rec_check.ml[670,23142+19]..[670,23142+21])
                                                      Pexp_ident "e2" (typing/rec_check.ml[670,23142+19]..[670,23142+21])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[670,23142+25]..[670,23142+36])
                                                Pexp_construct "Dereference" (typing/rec_check.ml[670,23142+25]..[670,23142+36])
                                                None
                                          ]
                                        expression (typing/rec_check.ml[671,23180+6]..[671,23180+7]) ghost
                                          Pexp_construct "[]" (typing/rec_check.ml[671,23180+6]..[671,23180+7]) ghost
                                          None
                                      ]
                              ]
                    ]
                <case>
                  pattern (typing/rec_check.ml[672,23188+6]..[672,23188+28])
                    Ppat_construct "Texp_sequence" (typing/rec_check.ml[672,23188+6]..[672,23188+19])
                    Some
                      []
                      pattern (typing/rec_check.ml[672,23188+20]..[672,23188+28])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[672,23188+21]..[672,23188+23])
                            Ppat_var "e1" (typing/rec_check.ml[672,23188+21]..[672,23188+23])
                          pattern (typing/rec_check.ml[672,23188+25]..[672,23188+27])
                            Ppat_var "e2" (typing/rec_check.ml[672,23188+25]..[672,23188+27])
                        ]
                  expression (typing/rec_check.ml[681,23416+6]..[684,23484+7])
                    Pexp_apply
                    expression (typing/rec_check.ml[681,23416+6]..[681,23416+10])
                      Pexp_ident "join" (typing/rec_check.ml[681,23416+6]..[681,23416+10])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[681,23416+11]..[684,23484+7])
                          Pexp_construct "::" (typing/rec_check.ml[682,23429+8]..[684,23484+7]) ghost
                          Some
                            expression (typing/rec_check.ml[682,23429+8]..[684,23484+7]) ghost
                              Pexp_tuple
                              [
                                expression (typing/rec_check.ml[682,23429+8]..[682,23429+30])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[682,23429+22]..[682,23429+24])
                                    Pexp_ident "<<" (typing/rec_check.ml[682,23429+22]..[682,23429+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[682,23429+8]..[682,23429+21])
                                        Pexp_apply
                                        expression (typing/rec_check.ml[682,23429+8]..[682,23429+18])
                                          Pexp_ident "expression" (typing/rec_check.ml[682,23429+8]..[682,23429+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/rec_check.ml[682,23429+19]..[682,23429+21])
                                              Pexp_ident "e1" (typing/rec_check.ml[682,23429+19]..[682,23429+21])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[682,23429+25]..[682,23429+30])
                                        Pexp_construct "Guard" (typing/rec_check.ml[682,23429+25]..[682,23429+30])
                                        None
                                  ]
                                expression (typing/rec_check.ml[683,23461+8]..[684,23484+7]) ghost
                                  Pexp_construct "::" (typing/rec_check.ml[683,23461+8]..[684,23484+7]) ghost
                                  Some
                                    expression (typing/rec_check.ml[683,23461+8]..[684,23484+7]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/rec_check.ml[683,23461+8]..[683,23461+21])
                                          Pexp_apply
                                          expression (typing/rec_check.ml[683,23461+8]..[683,23461+18])
                                            Pexp_ident "expression" (typing/rec_check.ml[683,23461+8]..[683,23461+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[683,23461+19]..[683,23461+21])
                                                Pexp_ident "e2" (typing/rec_check.ml[683,23461+19]..[683,23461+21])
                                          ]
                                        expression (typing/rec_check.ml[684,23484+6]..[684,23484+7]) ghost
                                          Pexp_construct "[]" (typing/rec_check.ml[684,23484+6]..[684,23484+7]) ghost
                                          None
                                      ]
                              ]
                    ]
                <case>
                  pattern (typing/rec_check.ml[685,23492+6]..[685,23492+29])
                    Ppat_construct "Texp_while" (typing/rec_check.ml[685,23492+6]..[685,23492+16])
                    Some
                      []
                      pattern (typing/rec_check.ml[685,23492+17]..[685,23492+29])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[685,23492+18]..[685,23492+22])
                            Ppat_var "cond" (typing/rec_check.ml[685,23492+18]..[685,23492+22])
                          pattern (typing/rec_check.ml[685,23492+24]..[685,23492+28])
                            Ppat_var "body" (typing/rec_check.ml[685,23492+24]..[685,23492+28])
                        ]
                  expression (typing/rec_check.ml[692,23695+6]..[695,23782+7])
                    Pexp_apply
                    expression (typing/rec_check.ml[692,23695+6]..[692,23695+10])
                      Pexp_ident "join" (typing/rec_check.ml[692,23695+6]..[692,23695+10])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[692,23695+11]..[695,23782+7])
                          Pexp_construct "::" (typing/rec_check.ml[693,23708+8]..[695,23782+7]) ghost
                          Some
                            expression (typing/rec_check.ml[693,23708+8]..[695,23782+7]) ghost
                              Pexp_tuple
                              [
                                expression (typing/rec_check.ml[693,23708+8]..[693,23708+38])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[693,23708+24]..[693,23708+26])
                                    Pexp_ident "<<" (typing/rec_check.ml[693,23708+24]..[693,23708+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[693,23708+8]..[693,23708+23])
                                        Pexp_apply
                                        expression (typing/rec_check.ml[693,23708+8]..[693,23708+18])
                                          Pexp_ident "expression" (typing/rec_check.ml[693,23708+8]..[693,23708+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/rec_check.ml[693,23708+19]..[693,23708+23])
                                              Pexp_ident "cond" (typing/rec_check.ml[693,23708+19]..[693,23708+23])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[693,23708+27]..[693,23708+38])
                                        Pexp_construct "Dereference" (typing/rec_check.ml[693,23708+27]..[693,23708+38])
                                        None
                                  ]
                                expression (typing/rec_check.ml[694,23748+8]..[695,23782+7]) ghost
                                  Pexp_construct "::" (typing/rec_check.ml[694,23748+8]..[695,23782+7]) ghost
                                  Some
                                    expression (typing/rec_check.ml[694,23748+8]..[695,23782+7]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/rec_check.ml[694,23748+8]..[694,23748+32])
                                          Pexp_apply
                                          expression (typing/rec_check.ml[694,23748+24]..[694,23748+26])
                                            Pexp_ident "<<" (typing/rec_check.ml[694,23748+24]..[694,23748+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[694,23748+8]..[694,23748+23])
                                                Pexp_apply
                                                expression (typing/rec_check.ml[694,23748+8]..[694,23748+18])
                                                  Pexp_ident "expression" (typing/rec_check.ml[694,23748+8]..[694,23748+18])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/rec_check.ml[694,23748+19]..[694,23748+23])
                                                      Pexp_ident "body" (typing/rec_check.ml[694,23748+19]..[694,23748+23])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[694,23748+27]..[694,23748+32])
                                                Pexp_construct "Guard" (typing/rec_check.ml[694,23748+27]..[694,23748+32])
                                                None
                                          ]
                                        expression (typing/rec_check.ml[695,23782+6]..[695,23782+7]) ghost
                                          Pexp_construct "[]" (typing/rec_check.ml[695,23782+6]..[695,23782+7]) ghost
                                          None
                                      ]
                              ]
                    ]
                <case>
                  pattern (typing/rec_check.ml[696,23790+6]..[696,23790+23])
                    Ppat_construct "Texp_send" (typing/rec_check.ml[696,23790+6]..[696,23790+15])
                    Some
                      []
                      pattern (typing/rec_check.ml[696,23790+16]..[696,23790+23])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[696,23790+17]..[696,23790+19])
                            Ppat_var "e1" (typing/rec_check.ml[696,23790+17]..[696,23790+19])
                          pattern (typing/rec_check.ml[696,23790+21]..[696,23790+22])
                            Ppat_any
                        ]
                  expression (typing/rec_check.ml[702,23942+6]..[704,23992+7])
                    Pexp_apply
                    expression (typing/rec_check.ml[702,23942+6]..[702,23942+10])
                      Pexp_ident "join" (typing/rec_check.ml[702,23942+6]..[702,23942+10])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[702,23942+11]..[704,23992+7])
                          Pexp_construct "::" (typing/rec_check.ml[703,23955+8]..[704,23992+7]) ghost
                          Some
                            expression (typing/rec_check.ml[703,23955+8]..[704,23992+7]) ghost
                              Pexp_tuple
                              [
                                expression (typing/rec_check.ml[703,23955+8]..[703,23955+36])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[703,23955+22]..[703,23955+24])
                                    Pexp_ident "<<" (typing/rec_check.ml[703,23955+22]..[703,23955+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[703,23955+8]..[703,23955+21])
                                        Pexp_apply
                                        expression (typing/rec_check.ml[703,23955+8]..[703,23955+18])
                                          Pexp_ident "expression" (typing/rec_check.ml[703,23955+8]..[703,23955+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/rec_check.ml[703,23955+19]..[703,23955+21])
                                              Pexp_ident "e1" (typing/rec_check.ml[703,23955+19]..[703,23955+21])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[703,23955+25]..[703,23955+36])
                                        Pexp_construct "Dereference" (typing/rec_check.ml[703,23955+25]..[703,23955+36])
                                        None
                                  ]
                                expression (typing/rec_check.ml[704,23992+6]..[704,23992+7]) ghost
                                  Pexp_construct "[]" (typing/rec_check.ml[704,23992+6]..[704,23992+7]) ghost
                                  None
                              ]
                    ]
                <case>
                  pattern (typing/rec_check.ml[705,24000+6]..[705,24000+26])
                    Ppat_construct "Texp_field" (typing/rec_check.ml[705,24000+6]..[705,24000+16])
                    Some
                      []
                      pattern (typing/rec_check.ml[705,24000+17]..[705,24000+26])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[705,24000+18]..[705,24000+19])
                            Ppat_var "e" (typing/rec_check.ml[705,24000+18]..[705,24000+19])
                          pattern (typing/rec_check.ml[705,24000+21]..[705,24000+22])
                            Ppat_any
                          pattern (typing/rec_check.ml[705,24000+24]..[705,24000+25])
                            Ppat_any
                        ]
                  expression (typing/rec_check.ml[711,24131+6]..[711,24131+33])
                    Pexp_apply
                    expression (typing/rec_check.ml[711,24131+19]..[711,24131+21])
                      Pexp_ident "<<" (typing/rec_check.ml[711,24131+19]..[711,24131+21])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[711,24131+6]..[711,24131+18])
                          Pexp_apply
                          expression (typing/rec_check.ml[711,24131+6]..[711,24131+16])
                            Pexp_ident "expression" (typing/rec_check.ml[711,24131+6]..[711,24131+16])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[711,24131+17]..[711,24131+18])
                                Pexp_ident "e" (typing/rec_check.ml[711,24131+17]..[711,24131+18])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[711,24131+22]..[711,24131+33])
                          Pexp_construct "Dereference" (typing/rec_check.ml[711,24131+22]..[711,24131+33])
                          None
                    ]
                <case>
                  pattern (typing/rec_check.ml[712,24165+6]..[712,24165+33])
                    Ppat_construct "Texp_setinstvar" (typing/rec_check.ml[712,24165+6]..[712,24165+21])
                    Some
                      []
                      pattern (typing/rec_check.ml[712,24165+22]..[712,24165+33])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[712,24165+23]..[712,24165+26])
                            Ppat_var "pth" (typing/rec_check.ml[712,24165+23]..[712,24165+26])
                          pattern (typing/rec_check.ml[712,24165+27]..[712,24165+28])
                            Ppat_any
                          pattern (typing/rec_check.ml[712,24165+29]..[712,24165+30])
                            Ppat_any
                          pattern (typing/rec_check.ml[712,24165+31]..[712,24165+32])
                            Ppat_var "e" (typing/rec_check.ml[712,24165+31]..[712,24165+32])
                        ]
                  expression (typing/rec_check.ml[718,24305+6]..[721,24388+7])
                    Pexp_apply
                    expression (typing/rec_check.ml[718,24305+6]..[718,24305+10])
                      Pexp_ident "join" (typing/rec_check.ml[718,24305+6]..[718,24305+10])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[718,24305+11]..[721,24388+7])
                          Pexp_construct "::" (typing/rec_check.ml[719,24318+8]..[721,24388+7]) ghost
                          Some
                            expression (typing/rec_check.ml[719,24318+8]..[721,24388+7]) ghost
                              Pexp_tuple
                              [
                                expression (typing/rec_check.ml[719,24318+8]..[719,24318+31])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[719,24318+17]..[719,24318+19])
                                    Pexp_ident "<<" (typing/rec_check.ml[719,24318+17]..[719,24318+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[719,24318+8]..[719,24318+16])
                                        Pexp_apply
                                        expression (typing/rec_check.ml[719,24318+8]..[719,24318+12])
                                          Pexp_ident "path" (typing/rec_check.ml[719,24318+8]..[719,24318+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/rec_check.ml[719,24318+13]..[719,24318+16])
                                              Pexp_ident "pth" (typing/rec_check.ml[719,24318+13]..[719,24318+16])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[719,24318+20]..[719,24318+31])
                                        Pexp_construct "Dereference" (typing/rec_check.ml[719,24318+20]..[719,24318+31])
                                        None
                                  ]
                                expression (typing/rec_check.ml[720,24351+8]..[721,24388+7]) ghost
                                  Pexp_construct "::" (typing/rec_check.ml[720,24351+8]..[721,24388+7]) ghost
                                  Some
                                    expression (typing/rec_check.ml[720,24351+8]..[721,24388+7]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/rec_check.ml[720,24351+8]..[720,24351+35])
                                          Pexp_apply
                                          expression (typing/rec_check.ml[720,24351+21]..[720,24351+23])
                                            Pexp_ident "<<" (typing/rec_check.ml[720,24351+21]..[720,24351+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[720,24351+8]..[720,24351+20])
                                                Pexp_apply
                                                expression (typing/rec_check.ml[720,24351+8]..[720,24351+18])
                                                  Pexp_ident "expression" (typing/rec_check.ml[720,24351+8]..[720,24351+18])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/rec_check.ml[720,24351+19]..[720,24351+20])
                                                      Pexp_ident "e" (typing/rec_check.ml[720,24351+19]..[720,24351+20])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[720,24351+24]..[720,24351+35])
                                                Pexp_construct "Dereference" (typing/rec_check.ml[720,24351+24]..[720,24351+35])
                                                None
                                          ]
                                        expression (typing/rec_check.ml[721,24388+6]..[721,24388+7]) ghost
                                          Pexp_construct "[]" (typing/rec_check.ml[721,24388+6]..[721,24388+7]) ghost
                                          None
                                      ]
                              ]
                    ]
                <case>
                  pattern (typing/rec_check.ml[722,24396+6]..[722,24396+37])
                    Ppat_construct "Texp_letexception" (typing/rec_check.ml[722,24396+6]..[722,24396+23])
                    Some
                      []
                      pattern (typing/rec_check.ml[722,24396+24]..[722,24396+37])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[722,24396+25]..[722,24396+33])
                            Ppat_record Closed
                            [
                              "ext_id" (typing/rec_check.ml[722,24396+26]..[722,24396+32]) ghost
                                pattern (typing/rec_check.ml[722,24396+26]..[722,24396+32])
                                  Ppat_var "ext_id" (typing/rec_check.ml[722,24396+26]..[722,24396+32])
                            ]
                          pattern (typing/rec_check.ml[722,24396+35]..[722,24396+36])
                            Ppat_var "e" (typing/rec_check.ml[722,24396+35]..[722,24396+36])
                        ]
                  expression (typing/rec_check.ml[727,24541+6]..[727,24541+37])
                    Pexp_apply
                    expression (typing/rec_check.ml[727,24541+6]..[727,24541+15])
                      Pexp_ident "remove_id" (typing/rec_check.ml[727,24541+6]..[727,24541+15])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[727,24541+16]..[727,24541+22])
                          Pexp_ident "ext_id" (typing/rec_check.ml[727,24541+16]..[727,24541+22])
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[727,24541+23]..[727,24541+37])
                          Pexp_apply
                          expression (typing/rec_check.ml[727,24541+24]..[727,24541+34])
                            Pexp_ident "expression" (typing/rec_check.ml[727,24541+24]..[727,24541+34])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[727,24541+35]..[727,24541+36])
                                Pexp_ident "e" (typing/rec_check.ml[727,24541+35]..[727,24541+36])
                          ]
                    ]
                <case>
                  pattern (typing/rec_check.ml[728,24579+6]..[728,24579+19])
                    Ppat_construct "Texp_assert" (typing/rec_check.ml[728,24579+6]..[728,24579+17])
                    Some
                      []
                      pattern (typing/rec_check.ml[728,24579+18]..[728,24579+19])
                        Ppat_var "e" (typing/rec_check.ml[728,24579+18]..[728,24579+19])
                  expression (typing/rec_check.ml[736,24781+6]..[736,24781+33])
                    Pexp_apply
                    expression (typing/rec_check.ml[736,24781+19]..[736,24781+21])
                      Pexp_ident "<<" (typing/rec_check.ml[736,24781+19]..[736,24781+21])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[736,24781+6]..[736,24781+18])
                          Pexp_apply
                          expression (typing/rec_check.ml[736,24781+6]..[736,24781+16])
                            Pexp_ident "expression" (typing/rec_check.ml[736,24781+6]..[736,24781+16])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[736,24781+17]..[736,24781+18])
                                Pexp_ident "e" (typing/rec_check.ml[736,24781+17]..[736,24781+18])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[736,24781+22]..[736,24781+33])
                          Pexp_construct "Dereference" (typing/rec_check.ml[736,24781+22]..[736,24781+33])
                          None
                    ]
                <case>
                  pattern (typing/rec_check.ml[737,24815+6]..[737,24815+20])
                    Ppat_construct "Texp_pack" (typing/rec_check.ml[737,24815+6]..[737,24815+15])
                    Some
                      []
                      pattern (typing/rec_check.ml[737,24815+16]..[737,24815+20])
                        Ppat_var "mexp" (typing/rec_check.ml[737,24815+16]..[737,24815+20])
                  expression (typing/rec_check.ml[743,24925+6]..[743,24925+17])
                    Pexp_apply
                    expression (typing/rec_check.ml[743,24925+6]..[743,24925+12])
                      Pexp_ident "modexp" (typing/rec_check.ml[743,24925+6]..[743,24925+12])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[743,24925+13]..[743,24925+17])
                          Pexp_ident "mexp" (typing/rec_check.ml[743,24925+13]..[743,24925+17])
                    ]
                <case>
                  pattern (typing/rec_check.ml[744,24943+6]..[744,24943+31])
                    Ppat_construct "Texp_object" (typing/rec_check.ml[744,24943+6]..[744,24943+17])
                    Some
                      []
                      pattern (typing/rec_check.ml[744,24943+18]..[744,24943+31])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[744,24943+19]..[744,24943+27])
                            Ppat_var "clsstrct" (typing/rec_check.ml[744,24943+19]..[744,24943+27])
                          pattern (typing/rec_check.ml[744,24943+29]..[744,24943+30])
                            Ppat_any
                        ]
                  expression (typing/rec_check.ml[745,24978+6]..[745,24978+30])
                    Pexp_apply
                    expression (typing/rec_check.ml[745,24978+6]..[745,24978+21])
                      Pexp_ident "class_structure" (typing/rec_check.ml[745,24978+6]..[745,24978+21])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[745,24978+22]..[745,24978+30])
                          Pexp_ident "clsstrct" (typing/rec_check.ml[745,24978+22]..[745,24978+30])
                    ]
                <case>
                  pattern (typing/rec_check.ml[746,25009+6]..[746,25009+25])
                    Ppat_construct "Texp_try" (typing/rec_check.ml[746,25009+6]..[746,25009+14])
                    Some
                      []
                      pattern (typing/rec_check.ml[746,25009+15]..[746,25009+25])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[746,25009+16]..[746,25009+17])
                            Ppat_var "e" (typing/rec_check.ml[746,25009+16]..[746,25009+17])
                          pattern (typing/rec_check.ml[746,25009+19]..[746,25009+24])
                            Ppat_var "cases" (typing/rec_check.ml[746,25009+19]..[746,25009+24])
                        ]
                  expression (typing/rec_check.ml[756,25351+6]..[760,25458+7])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/rec_check.ml[756,25351+10]..[756,25351+18])
                          Ppat_var "case_env" (typing/rec_check.ml[756,25351+10]..[756,25351+18])
                        expression (typing/rec_check.ml[756,25351+19]..[756,25351+39]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/rec_check.ml[756,25351+19]..[756,25351+20])
                            Ppat_var "c" (typing/rec_check.ml[756,25351+19]..[756,25351+20])
                          expression (typing/rec_check.ml[756,25351+21]..[756,25351+39]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/rec_check.ml[756,25351+21]..[756,25351+22])
                              Ppat_var "m" (typing/rec_check.ml[756,25351+21]..[756,25351+22])
                            expression (typing/rec_check.ml[756,25351+25]..[756,25351+39])
                              Pexp_apply
                              expression (typing/rec_check.ml[756,25351+25]..[756,25351+28])
                                Pexp_ident "fst" (typing/rec_check.ml[756,25351+25]..[756,25351+28])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[756,25351+29]..[756,25351+39])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[756,25351+30]..[756,25351+34])
                                      Pexp_ident "case" (typing/rec_check.ml[756,25351+30]..[756,25351+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[756,25351+35]..[756,25351+36])
                                          Pexp_ident "c" (typing/rec_check.ml[756,25351+35]..[756,25351+36])
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[756,25351+37]..[756,25351+38])
                                          Pexp_ident "m" (typing/rec_check.ml[756,25351+37]..[756,25351+38])
                                    ]
                              ]
                    ]
                    expression (typing/rec_check.ml[757,25394+6]..[760,25458+7])
                      Pexp_apply
                      expression (typing/rec_check.ml[757,25394+6]..[757,25394+10])
                        Pexp_ident "join" (typing/rec_check.ml[757,25394+6]..[757,25394+10])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[757,25394+11]..[760,25458+7])
                            Pexp_construct "::" (typing/rec_check.ml[758,25407+8]..[760,25458+7]) ghost
                            Some
                              expression (typing/rec_check.ml[758,25407+8]..[760,25458+7]) ghost
                                Pexp_tuple
                                [
                                  expression (typing/rec_check.ml[758,25407+8]..[758,25407+20])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[758,25407+8]..[758,25407+18])
                                      Pexp_ident "expression" (typing/rec_check.ml[758,25407+8]..[758,25407+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[758,25407+19]..[758,25407+20])
                                          Pexp_ident "e" (typing/rec_check.ml[758,25407+19]..[758,25407+20])
                                    ]
                                  expression (typing/rec_check.ml[759,25429+8]..[760,25458+7]) ghost
                                    Pexp_construct "::" (typing/rec_check.ml[759,25429+8]..[760,25458+7]) ghost
                                    Some
                                      expression (typing/rec_check.ml[759,25429+8]..[760,25458+7]) ghost
                                        Pexp_tuple
                                        [
                                          expression (typing/rec_check.ml[759,25429+8]..[759,25429+27])
                                            Pexp_apply
                                            expression (typing/rec_check.ml[759,25429+8]..[759,25429+12])
                                              Pexp_ident "list" (typing/rec_check.ml[759,25429+8]..[759,25429+12])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[759,25429+13]..[759,25429+21])
                                                  Pexp_ident "case_env" (typing/rec_check.ml[759,25429+13]..[759,25429+21])
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[759,25429+22]..[759,25429+27])
                                                  Pexp_ident "cases" (typing/rec_check.ml[759,25429+22]..[759,25429+27])
                                            ]
                                          expression (typing/rec_check.ml[760,25458+6]..[760,25458+7]) ghost
                                            Pexp_construct "[]" (typing/rec_check.ml[760,25458+6]..[760,25458+7]) ghost
                                            None
                                        ]
                                ]
                      ]
                <case>
                  pattern (typing/rec_check.ml[761,25466+6]..[761,25466+33])
                    Ppat_construct "Texp_override" (typing/rec_check.ml[761,25466+6]..[761,25466+19])
                    Some
                      []
                      pattern (typing/rec_check.ml[761,25466+20]..[761,25466+33])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[761,25466+21]..[761,25466+24])
                            Ppat_var "pth" (typing/rec_check.ml[761,25466+21]..[761,25466+24])
                          pattern (typing/rec_check.ml[761,25466+26]..[761,25466+32])
                            Ppat_var "fields" (typing/rec_check.ml[761,25466+26]..[761,25466+32])
                        ]
                  expression (typing/rec_check.ml[772,25994+6]..[776,26130+7])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/rec_check.ml[772,25994+10]..[772,25994+15])
                          Ppat_var "field" (typing/rec_check.ml[772,25994+10]..[772,25994+15])
                        expression (typing/rec_check.ml[772,25994+16]..[772,25994+44]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/rec_check.ml[772,25994+16]..[772,25994+27])
                            Ppat_tuple
                            [
                              pattern (typing/rec_check.ml[772,25994+17]..[772,25994+18])
                                Ppat_any
                              pattern (typing/rec_check.ml[772,25994+20]..[772,25994+21])
                                Ppat_any
                              pattern (typing/rec_check.ml[772,25994+23]..[772,25994+26])
                                Ppat_var "arg" (typing/rec_check.ml[772,25994+23]..[772,25994+26])
                            ]
                          expression (typing/rec_check.ml[772,25994+30]..[772,25994+44])
                            Pexp_apply
                            expression (typing/rec_check.ml[772,25994+30]..[772,25994+40])
                              Pexp_ident "expression" (typing/rec_check.ml[772,25994+30]..[772,25994+40])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[772,25994+41]..[772,25994+44])
                                  Pexp_ident "arg" (typing/rec_check.ml[772,25994+41]..[772,25994+44])
                            ]
                    ]
                    expression (typing/rec_check.ml[773,26042+6]..[776,26130+7])
                      Pexp_apply
                      expression (typing/rec_check.ml[773,26042+6]..[773,26042+10])
                        Pexp_ident "join" (typing/rec_check.ml[773,26042+6]..[773,26042+10])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[773,26042+11]..[776,26130+7])
                            Pexp_construct "::" (typing/rec_check.ml[774,26055+8]..[776,26130+7]) ghost
                            Some
                              expression (typing/rec_check.ml[774,26055+8]..[776,26130+7]) ghost
                                Pexp_tuple
                                [
                                  expression (typing/rec_check.ml[774,26055+8]..[774,26055+31])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[774,26055+17]..[774,26055+19])
                                      Pexp_ident "<<" (typing/rec_check.ml[774,26055+17]..[774,26055+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[774,26055+8]..[774,26055+16])
                                          Pexp_apply
                                          expression (typing/rec_check.ml[774,26055+8]..[774,26055+12])
                                            Pexp_ident "path" (typing/rec_check.ml[774,26055+8]..[774,26055+12])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[774,26055+13]..[774,26055+16])
                                                Pexp_ident "pth" (typing/rec_check.ml[774,26055+13]..[774,26055+16])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[774,26055+20]..[774,26055+31])
                                          Pexp_construct "Dereference" (typing/rec_check.ml[774,26055+20]..[774,26055+31])
                                          None
                                    ]
                                  expression (typing/rec_check.ml[775,26088+8]..[776,26130+7]) ghost
                                    Pexp_construct "::" (typing/rec_check.ml[775,26088+8]..[776,26130+7]) ghost
                                    Some
                                      expression (typing/rec_check.ml[775,26088+8]..[776,26130+7]) ghost
                                        Pexp_tuple
                                        [
                                          expression (typing/rec_check.ml[775,26088+8]..[775,26088+40])
                                            Pexp_apply
                                            expression (typing/rec_check.ml[775,26088+26]..[775,26088+28])
                                              Pexp_ident "<<" (typing/rec_check.ml[775,26088+26]..[775,26088+28])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[775,26088+8]..[775,26088+25])
                                                  Pexp_apply
                                                  expression (typing/rec_check.ml[775,26088+8]..[775,26088+12])
                                                    Pexp_ident "list" (typing/rec_check.ml[775,26088+8]..[775,26088+12])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[775,26088+13]..[775,26088+18])
                                                        Pexp_ident "field" (typing/rec_check.ml[775,26088+13]..[775,26088+18])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[775,26088+19]..[775,26088+25])
                                                        Pexp_ident "fields" (typing/rec_check.ml[775,26088+19]..[775,26088+25])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[775,26088+29]..[775,26088+40])
                                                  Pexp_construct "Dereference" (typing/rec_check.ml[775,26088+29]..[775,26088+40])
                                                  None
                                            ]
                                          expression (typing/rec_check.ml[776,26130+6]..[776,26130+7]) ghost
                                            Pexp_construct "[]" (typing/rec_check.ml[776,26130+6]..[776,26130+7]) ghost
                                            None
                                        ]
                                ]
                      ]
                <case>
                  pattern (typing/rec_check.ml[777,26138+6]..[777,26138+29])
                    Ppat_construct "Texp_function" (typing/rec_check.ml[777,26138+6]..[777,26138+19])
                    Some
                      []
                      pattern (typing/rec_check.ml[777,26138+20]..[777,26138+29])
                        Ppat_record Closed
                        [
                          "cases" (typing/rec_check.ml[777,26138+22]..[777,26138+27]) ghost
                            pattern (typing/rec_check.ml[777,26138+22]..[777,26138+27])
                              Ppat_var "cases" (typing/rec_check.ml[777,26138+22]..[777,26138+27])
                        ]
                  expression (typing/rec_check.ml[787,26489+6]..[788,26532+34])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/rec_check.ml[787,26489+10]..[787,26489+18])
                          Ppat_var "case_env" (typing/rec_check.ml[787,26489+10]..[787,26489+18])
                        expression (typing/rec_check.ml[787,26489+19]..[787,26489+39]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/rec_check.ml[787,26489+19]..[787,26489+20])
                            Ppat_var "c" (typing/rec_check.ml[787,26489+19]..[787,26489+20])
                          expression (typing/rec_check.ml[787,26489+21]..[787,26489+39]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/rec_check.ml[787,26489+21]..[787,26489+22])
                              Ppat_var "m" (typing/rec_check.ml[787,26489+21]..[787,26489+22])
                            expression (typing/rec_check.ml[787,26489+25]..[787,26489+39])
                              Pexp_apply
                              expression (typing/rec_check.ml[787,26489+25]..[787,26489+28])
                                Pexp_ident "fst" (typing/rec_check.ml[787,26489+25]..[787,26489+28])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[787,26489+29]..[787,26489+39])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[787,26489+30]..[787,26489+34])
                                      Pexp_ident "case" (typing/rec_check.ml[787,26489+30]..[787,26489+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[787,26489+35]..[787,26489+36])
                                          Pexp_ident "c" (typing/rec_check.ml[787,26489+35]..[787,26489+36])
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[787,26489+37]..[787,26489+38])
                                          Pexp_ident "m" (typing/rec_check.ml[787,26489+37]..[787,26489+38])
                                    ]
                              ]
                    ]
                    expression (typing/rec_check.ml[788,26532+6]..[788,26532+34])
                      Pexp_apply
                      expression (typing/rec_check.ml[788,26532+26]..[788,26532+28])
                        Pexp_ident "<<" (typing/rec_check.ml[788,26532+26]..[788,26532+28])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[788,26532+6]..[788,26532+25])
                            Pexp_apply
                            expression (typing/rec_check.ml[788,26532+6]..[788,26532+10])
                              Pexp_ident "list" (typing/rec_check.ml[788,26532+6]..[788,26532+10])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[788,26532+11]..[788,26532+19])
                                  Pexp_ident "case_env" (typing/rec_check.ml[788,26532+11]..[788,26532+19])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[788,26532+20]..[788,26532+25])
                                  Pexp_ident "cases" (typing/rec_check.ml[788,26532+20]..[788,26532+25])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[788,26532+29]..[788,26532+34])
                            Pexp_construct "Delay" (typing/rec_check.ml[788,26532+29]..[788,26532+34])
                            None
                      ]
                <case>
                  pattern (typing/rec_check.ml[789,26567+6]..[789,26567+17])
                    Ppat_construct "Texp_lazy" (typing/rec_check.ml[789,26567+6]..[789,26567+15])
                    Some
                      []
                      pattern (typing/rec_check.ml[789,26567+16]..[789,26567+17])
                        Ppat_var "e" (typing/rec_check.ml[789,26567+16]..[789,26567+17])
                  expression (typing/rec_check.ml[795,26724+6]..[803,26952+31])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/rec_check.ml[795,26724+10]..[795,26724+19])
                          Ppat_var "lazy_mode" (typing/rec_check.ml[795,26724+10]..[795,26724+19])
                        expression (typing/rec_check.ml[795,26724+22]..[801,26927+15])
                          Pexp_match
                          expression (typing/rec_check.ml[795,26724+28]..[795,26724+60])
                            Pexp_apply
                            expression (typing/rec_check.ml[795,26724+28]..[795,26724+58])
                              Pexp_ident "Typeopt.classify_lazy_argument" (typing/rec_check.ml[795,26724+28]..[795,26724+58])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[795,26724+59]..[795,26724+60])
                                  Pexp_ident "e" (typing/rec_check.ml[795,26724+59]..[795,26724+60])
                            ]
                          [
                            <case>
                              pattern (typing/rec_check.ml[796,26790+10]..[798,26846+40])
                                Ppat_or
                                pattern (typing/rec_check.ml[796,26790+10]..[797,26822+23])
                                  Ppat_or
                                  pattern (typing/rec_check.ml[796,26790+10]..[796,26790+31])
                                    Ppat_variant "Constant_or_function"
                                    None
                                  pattern (typing/rec_check.ml[797,26822+10]..[797,26822+23])
                                    Ppat_variant "Identifier"
                                    Some
                                      pattern (typing/rec_check.ml[797,26822+22]..[797,26822+23])
                                        Ppat_any
                                pattern (typing/rec_check.ml[798,26846+10]..[798,26846+40])
                                  Ppat_variant "Float_that_cannot_be_shortcut"
                                  None
                              expression (typing/rec_check.ml[799,26890+10]..[799,26890+16])
                                Pexp_construct "Return" (typing/rec_check.ml[799,26890+10]..[799,26890+16])
                                None
                            <case>
                              pattern (typing/rec_check.ml[800,26907+10]..[800,26907+16])
                                Ppat_variant "Other"
                                None
                              expression (typing/rec_check.ml[801,26927+10]..[801,26927+15])
                                Pexp_construct "Delay" (typing/rec_check.ml[801,26927+10]..[801,26927+15])
                                None
                          ]
                    ]
                    expression (typing/rec_check.ml[803,26952+6]..[803,26952+31])
                      Pexp_apply
                      expression (typing/rec_check.ml[803,26952+19]..[803,26952+21])
                        Pexp_ident "<<" (typing/rec_check.ml[803,26952+19]..[803,26952+21])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[803,26952+6]..[803,26952+18])
                            Pexp_apply
                            expression (typing/rec_check.ml[803,26952+6]..[803,26952+16])
                              Pexp_ident "expression" (typing/rec_check.ml[803,26952+6]..[803,26952+16])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[803,26952+17]..[803,26952+18])
                                  Pexp_ident "e" (typing/rec_check.ml[803,26952+17]..[803,26952+18])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[803,26952+22]..[803,26952+31])
                            Pexp_ident "lazy_mode" (typing/rec_check.ml[803,26952+22]..[803,26952+31])
                      ]
                <case>
                  pattern (typing/rec_check.ml[804,26984+6]..[804,26984+37])
                    Ppat_construct "Texp_letop" (typing/rec_check.ml[804,26984+6]..[804,26984+16])
                    Some
                      []
                      pattern (typing/rec_check.ml[804,26984+16]..[804,26984+37])
                        Ppat_record Open
                        [
                          "let_" (typing/rec_check.ml[804,26984+17]..[804,26984+21]) ghost
                            pattern (typing/rec_check.ml[804,26984+17]..[804,26984+21])
                              Ppat_var "let_" (typing/rec_check.ml[804,26984+17]..[804,26984+21])
                          "ands" (typing/rec_check.ml[804,26984+23]..[804,26984+27]) ghost
                            pattern (typing/rec_check.ml[804,26984+23]..[804,26984+27])
                              Ppat_var "ands" (typing/rec_check.ml[804,26984+23]..[804,26984+27])
                          "body" (typing/rec_check.ml[804,26984+29]..[804,26984+33]) ghost
                            pattern (typing/rec_check.ml[804,26984+29]..[804,26984+33])
                              Ppat_var "body" (typing/rec_check.ml[804,26984+29]..[804,26984+33])
                        ]
                  expression (typing/rec_check.ml[805,27025+8]..[809,27175+9])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/rec_check.ml[805,27025+12]..[805,27025+20])
                          Ppat_var "case_env" (typing/rec_check.ml[805,27025+12]..[805,27025+20])
                        expression (typing/rec_check.ml[805,27025+21]..[805,27025+41]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/rec_check.ml[805,27025+21]..[805,27025+22])
                            Ppat_var "c" (typing/rec_check.ml[805,27025+21]..[805,27025+22])
                          expression (typing/rec_check.ml[805,27025+23]..[805,27025+41]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/rec_check.ml[805,27025+23]..[805,27025+24])
                              Ppat_var "m" (typing/rec_check.ml[805,27025+23]..[805,27025+24])
                            expression (typing/rec_check.ml[805,27025+27]..[805,27025+41])
                              Pexp_apply
                              expression (typing/rec_check.ml[805,27025+27]..[805,27025+30])
                                Pexp_ident "fst" (typing/rec_check.ml[805,27025+27]..[805,27025+30])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[805,27025+31]..[805,27025+41])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[805,27025+32]..[805,27025+36])
                                      Pexp_ident "case" (typing/rec_check.ml[805,27025+32]..[805,27025+36])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[805,27025+37]..[805,27025+38])
                                          Pexp_ident "c" (typing/rec_check.ml[805,27025+37]..[805,27025+38])
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[805,27025+39]..[805,27025+40])
                                          Pexp_ident "m" (typing/rec_check.ml[805,27025+39]..[805,27025+40])
                                    ]
                              ]
                    ]
                    expression (typing/rec_check.ml[806,27070+8]..[809,27175+9])
                      Pexp_apply
                      expression (typing/rec_check.ml[806,27070+8]..[806,27070+12])
                        Pexp_ident "join" (typing/rec_check.ml[806,27070+8]..[806,27070+12])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[806,27070+13]..[809,27175+9])
                            Pexp_construct "::" (typing/rec_check.ml[807,27085+10]..[809,27175+9]) ghost
                            Some
                              expression (typing/rec_check.ml[807,27085+10]..[809,27175+9]) ghost
                                Pexp_tuple
                                [
                                  expression (typing/rec_check.ml[807,27085+10]..[807,27085+55])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[807,27085+41]..[807,27085+43])
                                      Pexp_ident "<<" (typing/rec_check.ml[807,27085+41]..[807,27085+43])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[807,27085+10]..[807,27085+40])
                                          Pexp_apply
                                          expression (typing/rec_check.ml[807,27085+10]..[807,27085+14])
                                            Pexp_ident "list" (typing/rec_check.ml[807,27085+10]..[807,27085+14])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[807,27085+15]..[807,27085+25])
                                                Pexp_ident "binding_op" (typing/rec_check.ml[807,27085+15]..[807,27085+25])
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[807,27085+26]..[807,27085+40])
                                                Pexp_construct "::" (typing/rec_check.ml[807,27085+32]..[807,27085+34])
                                                Some
                                                  expression (typing/rec_check.ml[807,27085+27]..[807,27085+39]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/rec_check.ml[807,27085+27]..[807,27085+31])
                                                        Pexp_ident "let_" (typing/rec_check.ml[807,27085+27]..[807,27085+31])
                                                      expression (typing/rec_check.ml[807,27085+35]..[807,27085+39])
                                                        Pexp_ident "ands" (typing/rec_check.ml[807,27085+35]..[807,27085+39])
                                                    ]
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[807,27085+44]..[807,27085+55])
                                          Pexp_construct "Dereference" (typing/rec_check.ml[807,27085+44]..[807,27085+55])
                                          None
                                    ]
                                  expression (typing/rec_check.ml[808,27142+10]..[809,27175+9]) ghost
                                    Pexp_construct "::" (typing/rec_check.ml[808,27142+10]..[809,27175+9]) ghost
                                    Some
                                      expression (typing/rec_check.ml[808,27142+10]..[809,27175+9]) ghost
                                        Pexp_tuple
                                        [
                                          expression (typing/rec_check.ml[808,27142+10]..[808,27142+32])
                                            Pexp_apply
                                            expression (typing/rec_check.ml[808,27142+24]..[808,27142+26])
                                              Pexp_ident "<<" (typing/rec_check.ml[808,27142+24]..[808,27142+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[808,27142+10]..[808,27142+23])
                                                  Pexp_apply
                                                  expression (typing/rec_check.ml[808,27142+10]..[808,27142+18])
                                                    Pexp_ident "case_env" (typing/rec_check.ml[808,27142+10]..[808,27142+18])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[808,27142+19]..[808,27142+23])
                                                        Pexp_ident "body" (typing/rec_check.ml[808,27142+19]..[808,27142+23])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[808,27142+27]..[808,27142+32])
                                                  Pexp_construct "Delay" (typing/rec_check.ml[808,27142+27]..[808,27142+32])
                                                  None
                                            ]
                                          expression (typing/rec_check.ml[809,27175+8]..[809,27175+9]) ghost
                                            Pexp_construct "[]" (typing/rec_check.ml[809,27175+8]..[809,27175+9]) ghost
                                            None
                                        ]
                                ]
                      ]
                <case>
                  pattern (typing/rec_check.ml[810,27185+6]..[810,27185+22])
                    Ppat_construct "Texp_unreachable" (typing/rec_check.ml[810,27185+6]..[810,27185+22])
                    None
                  expression (typing/rec_check.ml[815,27267+6]..[815,27267+11])
                    Pexp_ident "empty" (typing/rec_check.ml[815,27267+6]..[815,27267+11])
                <case>
                  pattern (typing/rec_check.ml[816,27279+6]..[816,27279+44])
                    Ppat_construct "Texp_extension_constructor" (typing/rec_check.ml[816,27279+6]..[816,27279+32])
                    Some
                      []
                      pattern (typing/rec_check.ml[816,27279+33]..[816,27279+44])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[816,27279+34]..[816,27279+38])
                            Ppat_var "_lid" (typing/rec_check.ml[816,27279+34]..[816,27279+38])
                          pattern (typing/rec_check.ml[816,27279+40]..[816,27279+43])
                            Ppat_var "pth" (typing/rec_check.ml[816,27279+40]..[816,27279+43])
                        ]
                  expression (typing/rec_check.ml[817,27327+6]..[817,27327+29])
                    Pexp_apply
                    expression (typing/rec_check.ml[817,27327+15]..[817,27327+17])
                      Pexp_ident "<<" (typing/rec_check.ml[817,27327+15]..[817,27327+17])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[817,27327+6]..[817,27327+14])
                          Pexp_apply
                          expression (typing/rec_check.ml[817,27327+6]..[817,27327+10])
                            Pexp_ident "path" (typing/rec_check.ml[817,27327+6]..[817,27327+10])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[817,27327+11]..[817,27327+14])
                                Pexp_ident "pth" (typing/rec_check.ml[817,27327+11]..[817,27327+14])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[817,27327+18]..[817,27327+29])
                          Pexp_construct "Dereference" (typing/rec_check.ml[817,27327+18]..[817,27327+29])
                          None
                    ]
                <case>
                  pattern (typing/rec_check.ml[818,27357+6]..[818,27357+23])
                    Ppat_construct "Texp_open" (typing/rec_check.ml[818,27357+6]..[818,27357+15])
                    Some
                      []
                      pattern (typing/rec_check.ml[818,27357+16]..[818,27357+23])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[818,27357+17]..[818,27357+19])
                            Ppat_var "od" (typing/rec_check.ml[818,27357+17]..[818,27357+19])
                          pattern (typing/rec_check.ml[818,27357+21]..[818,27357+22])
                            Ppat_var "e" (typing/rec_check.ml[818,27357+21]..[818,27357+22])
                        ]
                  expression (typing/rec_check.ml[819,27384+6]..[819,27384+41])
                    Pexp_apply
                    expression (typing/rec_check.ml[819,27384+26]..[819,27384+28])
                      Pexp_ident ">>" (typing/rec_check.ml[819,27384+26]..[819,27384+28])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[819,27384+6]..[819,27384+25])
                          Pexp_apply
                          expression (typing/rec_check.ml[819,27384+6]..[819,27384+22])
                            Pexp_ident "open_declaration" (typing/rec_check.ml[819,27384+6]..[819,27384+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[819,27384+23]..[819,27384+25])
                                Pexp_ident "od" (typing/rec_check.ml[819,27384+23]..[819,27384+25])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[819,27384+29]..[819,27384+41])
                          Pexp_apply
                          expression (typing/rec_check.ml[819,27384+29]..[819,27384+39])
                            Pexp_ident "expression" (typing/rec_check.ml[819,27384+29]..[819,27384+39])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[819,27384+40]..[819,27384+41])
                                Pexp_ident "e" (typing/rec_check.ml[819,27384+40]..[819,27384+41])
                          ]
                    ]
              ]
          core_type (typing/rec_check.ml[517,18118+21]..[517,18118+54])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[517,18118+21]..[517,18118+41])
              Ptyp_constr "Typedtree.expression" (typing/rec_check.ml[517,18118+21]..[517,18118+41])
              []
            core_type (typing/rec_check.ml[517,18118+45]..[517,18118+54])
              Ptyp_constr "term_judg" (typing/rec_check.ml[517,18118+45]..[517,18118+54])
              []
      <def>
        pattern (typing/rec_check.ml[821,27427+4]..[821,27427+50]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[821,27427+4]..[821,27427+14])
            Ppat_var "binding_op" (typing/rec_check.ml[821,27427+4]..[821,27427+14])
          core_type (typing/rec_check.ml[821,27427+17]..[821,27427+50]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[821,27427+17]..[821,27427+50])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[821,27427+17]..[821,27427+37])
                Ptyp_constr "Typedtree.binding_op" (typing/rec_check.ml[821,27427+17]..[821,27427+37])
                []
              core_type (typing/rec_check.ml[821,27427+41]..[821,27427+50])
                Ptyp_constr "term_judg" (typing/rec_check.ml[821,27427+41]..[821,27427+50])
                []
        expression (typing/rec_check.ml[821,27427+4]..[823,27493+55])
          Pexp_constraint
          expression (typing/rec_check.ml[822,27480+2]..[823,27493+55])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[822,27480+6]..[822,27480+9])
              Ppat_var "bop" (typing/rec_check.ml[822,27480+6]..[822,27480+9])
            expression (typing/rec_check.ml[823,27493+4]..[823,27493+55])
              Pexp_apply
              expression (typing/rec_check.ml[823,27493+4]..[823,27493+8])
                Pexp_ident "join" (typing/rec_check.ml[823,27493+4]..[823,27493+8])
              [
                <arg>
                Nolabel
                  expression (typing/rec_check.ml[823,27493+9]..[823,27493+55])
                    Pexp_construct "::" (typing/rec_check.ml[823,27493+10]..[823,27493+55]) ghost
                    Some
                      expression (typing/rec_check.ml[823,27493+10]..[823,27493+55]) ghost
                        Pexp_tuple
                        [
                          expression (typing/rec_check.ml[823,27493+10]..[823,27493+30])
                            Pexp_apply
                            expression (typing/rec_check.ml[823,27493+10]..[823,27493+14])
                              Pexp_ident "path" (typing/rec_check.ml[823,27493+10]..[823,27493+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[823,27493+15]..[823,27493+30])
                                  Pexp_field
                                  expression (typing/rec_check.ml[823,27493+15]..[823,27493+18])
                                    Pexp_ident "bop" (typing/rec_check.ml[823,27493+15]..[823,27493+18])
                                  "bop_op_path" (typing/rec_check.ml[823,27493+19]..[823,27493+30])
                            ]
                          expression (typing/rec_check.ml[823,27493+32]..[823,27493+55]) ghost
                            Pexp_construct "::" (typing/rec_check.ml[823,27493+32]..[823,27493+55]) ghost
                            Some
                              expression (typing/rec_check.ml[823,27493+32]..[823,27493+55]) ghost
                                Pexp_tuple
                                [
                                  expression (typing/rec_check.ml[823,27493+32]..[823,27493+54])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[823,27493+32]..[823,27493+42])
                                      Pexp_ident "expression" (typing/rec_check.ml[823,27493+32]..[823,27493+42])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[823,27493+43]..[823,27493+54])
                                          Pexp_field
                                          expression (typing/rec_check.ml[823,27493+43]..[823,27493+46])
                                            Pexp_ident "bop" (typing/rec_check.ml[823,27493+43]..[823,27493+46])
                                          "bop_exp" (typing/rec_check.ml[823,27493+47]..[823,27493+54])
                                    ]
                                  expression (typing/rec_check.ml[823,27493+54]..[823,27493+55]) ghost
                                    Pexp_construct "[]" (typing/rec_check.ml[823,27493+54]..[823,27493+55]) ghost
                                    None
                                ]
                        ]
              ]
          core_type (typing/rec_check.ml[821,27427+17]..[821,27427+50])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[821,27427+17]..[821,27427+37])
              Ptyp_constr "Typedtree.binding_op" (typing/rec_check.ml[821,27427+17]..[821,27427+37])
              []
            core_type (typing/rec_check.ml[821,27427+41]..[821,27427+50])
              Ptyp_constr "term_judg" (typing/rec_check.ml[821,27427+41]..[821,27427+50])
              []
      <def>
        pattern (typing/rec_check.ml[825,27550+4]..[825,27550+60]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[825,27550+4]..[825,27550+19])
            Ppat_var "class_structure" (typing/rec_check.ml[825,27550+4]..[825,27550+19])
          core_type (typing/rec_check.ml[825,27550+22]..[825,27550+60]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[825,27550+22]..[825,27550+60])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[825,27550+22]..[825,27550+47])
                Ptyp_constr "Typedtree.class_structure" (typing/rec_check.ml[825,27550+22]..[825,27550+47])
                []
              core_type (typing/rec_check.ml[825,27550+51]..[825,27550+60])
                Ptyp_constr "term_judg" (typing/rec_check.ml[825,27550+51]..[825,27550+60])
                []
        expression (typing/rec_check.ml[825,27550+4]..[826,27613+43])
          Pexp_constraint
          expression (typing/rec_check.ml[826,27613+2]..[826,27613+43])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[826,27613+6]..[826,27613+8])
              Ppat_var "cs" (typing/rec_check.ml[826,27613+6]..[826,27613+8])
            expression (typing/rec_check.ml[826,27613+12]..[826,27613+43])
              Pexp_apply
              expression (typing/rec_check.ml[826,27613+12]..[826,27613+16])
                Pexp_ident "list" (typing/rec_check.ml[826,27613+12]..[826,27613+16])
              [
                <arg>
                Nolabel
                  expression (typing/rec_check.ml[826,27613+17]..[826,27613+28])
                    Pexp_ident "class_field" (typing/rec_check.ml[826,27613+17]..[826,27613+28])
                <arg>
                Nolabel
                  expression (typing/rec_check.ml[826,27613+29]..[826,27613+43])
                    Pexp_field
                    expression (typing/rec_check.ml[826,27613+29]..[826,27613+31])
                      Pexp_ident "cs" (typing/rec_check.ml[826,27613+29]..[826,27613+31])
                    "cstr_fields" (typing/rec_check.ml[826,27613+32]..[826,27613+43])
              ]
          core_type (typing/rec_check.ml[825,27550+22]..[825,27550+60])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[825,27550+22]..[825,27550+47])
              Ptyp_constr "Typedtree.class_structure" (typing/rec_check.ml[825,27550+22]..[825,27550+47])
              []
            core_type (typing/rec_check.ml[825,27550+51]..[825,27550+60])
              Ptyp_constr "term_judg" (typing/rec_check.ml[825,27550+51]..[825,27550+60])
              []
      <def>
        pattern (typing/rec_check.ml[828,27658+4]..[828,27658+52]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[828,27658+4]..[828,27658+15])
            Ppat_var "class_field" (typing/rec_check.ml[828,27658+4]..[828,27658+15])
          core_type (typing/rec_check.ml[828,27658+18]..[828,27658+52]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[828,27658+18]..[828,27658+52])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[828,27658+18]..[828,27658+39])
                Ptyp_constr "Typedtree.class_field" (typing/rec_check.ml[828,27658+18]..[828,27658+39])
                []
              core_type (typing/rec_check.ml[828,27658+43]..[828,27658+52])
                Ptyp_constr "term_judg" (typing/rec_check.ml[828,27658+43]..[828,27658+52])
                []
        expression (typing/rec_check.ml[828,27658+4]..[841,28093+11])
          Pexp_constraint
          expression (typing/rec_check.ml[829,27713+2]..[841,28093+11])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[829,27713+6]..[829,27713+8])
              Ppat_var "cf" (typing/rec_check.ml[829,27713+6]..[829,27713+8])
            expression (typing/rec_check.ml[829,27713+12]..[841,28093+11])
              Pexp_match
              expression (typing/rec_check.ml[829,27713+18]..[829,27713+28])
                Pexp_field
                expression (typing/rec_check.ml[829,27713+18]..[829,27713+20])
                  Pexp_ident "cf" (typing/rec_check.ml[829,27713+18]..[829,27713+20])
                "cf_desc" (typing/rec_check.ml[829,27713+21]..[829,27713+28])
              [
                <case>
                  pattern (typing/rec_check.ml[830,27747+6]..[830,27747+56])
                    Ppat_construct "Tcf_inherit" (typing/rec_check.ml[830,27747+6]..[830,27747+17])
                    Some
                      []
                      pattern (typing/rec_check.ml[830,27747+18]..[830,27747+56])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[830,27747+19]..[830,27747+20])
                            Ppat_any
                          pattern (typing/rec_check.ml[830,27747+22]..[830,27747+24])
                            Ppat_var "ce" (typing/rec_check.ml[830,27747+22]..[830,27747+24])
                          pattern (typing/rec_check.ml[830,27747+26]..[830,27747+32])
                            Ppat_var "_super" (typing/rec_check.ml[830,27747+26]..[830,27747+32])
                          pattern (typing/rec_check.ml[830,27747+34]..[830,27747+43])
                            Ppat_var "_inh_vars" (typing/rec_check.ml[830,27747+34]..[830,27747+43])
                          pattern (typing/rec_check.ml[830,27747+45]..[830,27747+55])
                            Ppat_var "_inh_meths" (typing/rec_check.ml[830,27747+45]..[830,27747+55])
                        ]
                  expression (typing/rec_check.ml[831,27807+6]..[831,27807+34])
                    Pexp_apply
                    expression (typing/rec_check.ml[831,27807+20]..[831,27807+22])
                      Pexp_ident "<<" (typing/rec_check.ml[831,27807+20]..[831,27807+22])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[831,27807+6]..[831,27807+19])
                          Pexp_apply
                          expression (typing/rec_check.ml[831,27807+6]..[831,27807+16])
                            Pexp_ident "class_expr" (typing/rec_check.ml[831,27807+6]..[831,27807+16])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[831,27807+17]..[831,27807+19])
                                Pexp_ident "ce" (typing/rec_check.ml[831,27807+17]..[831,27807+19])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[831,27807+23]..[831,27807+34])
                          Pexp_construct "Dereference" (typing/rec_check.ml[831,27807+23]..[831,27807+34])
                          None
                    ]
                <case>
                  pattern (typing/rec_check.ml[832,27842+6]..[832,27842+37])
                    Ppat_construct "Tcf_val" (typing/rec_check.ml[832,27842+6]..[832,27842+13])
                    Some
                      []
                      pattern (typing/rec_check.ml[832,27842+14]..[832,27842+37])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[832,27842+15]..[832,27842+19])
                            Ppat_var "_lab" (typing/rec_check.ml[832,27842+15]..[832,27842+19])
                          pattern (typing/rec_check.ml[832,27842+21]..[832,27842+25])
                            Ppat_var "_mut" (typing/rec_check.ml[832,27842+21]..[832,27842+25])
                          pattern (typing/rec_check.ml[832,27842+27]..[832,27842+28])
                            Ppat_any
                          pattern (typing/rec_check.ml[832,27842+30]..[832,27842+33])
                            Ppat_var "cfk" (typing/rec_check.ml[832,27842+30]..[832,27842+33])
                          pattern (typing/rec_check.ml[832,27842+35]..[832,27842+36])
                            Ppat_any
                        ]
                  expression (typing/rec_check.ml[833,27883+6]..[833,27883+26])
                    Pexp_apply
                    expression (typing/rec_check.ml[833,27883+6]..[833,27883+22])
                      Pexp_ident "class_field_kind" (typing/rec_check.ml[833,27883+6]..[833,27883+22])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[833,27883+23]..[833,27883+26])
                          Pexp_ident "cfk" (typing/rec_check.ml[833,27883+23]..[833,27883+26])
                    ]
                <case>
                  pattern (typing/rec_check.ml[834,27910+6]..[834,27910+28])
                    Ppat_construct "Tcf_method" (typing/rec_check.ml[834,27910+6]..[834,27910+16])
                    Some
                      []
                      pattern (typing/rec_check.ml[834,27910+17]..[834,27910+28])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[834,27910+18]..[834,27910+19])
                            Ppat_any
                          pattern (typing/rec_check.ml[834,27910+21]..[834,27910+22])
                            Ppat_any
                          pattern (typing/rec_check.ml[834,27910+24]..[834,27910+27])
                            Ppat_var "cfk" (typing/rec_check.ml[834,27910+24]..[834,27910+27])
                        ]
                  expression (typing/rec_check.ml[835,27942+6]..[835,27942+26])
                    Pexp_apply
                    expression (typing/rec_check.ml[835,27942+6]..[835,27942+22])
                      Pexp_ident "class_field_kind" (typing/rec_check.ml[835,27942+6]..[835,27942+22])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[835,27942+23]..[835,27942+26])
                          Pexp_ident "cfk" (typing/rec_check.ml[835,27942+23]..[835,27942+26])
                    ]
                <case>
                  pattern (typing/rec_check.ml[836,27969+6]..[836,27969+22])
                    Ppat_construct "Tcf_constraint" (typing/rec_check.ml[836,27969+6]..[836,27969+20])
                    Some
                      []
                      pattern (typing/rec_check.ml[836,27969+21]..[836,27969+22])
                        Ppat_any
                  expression (typing/rec_check.ml[837,27995+6]..[837,27995+11])
                    Pexp_ident "empty" (typing/rec_check.ml[837,27995+6]..[837,27995+11])
                <case>
                  pattern (typing/rec_check.ml[838,28007+6]..[838,28007+23])
                    Ppat_construct "Tcf_initializer" (typing/rec_check.ml[838,28007+6]..[838,28007+21])
                    Some
                      []
                      pattern (typing/rec_check.ml[838,28007+22]..[838,28007+23])
                        Ppat_var "e" (typing/rec_check.ml[838,28007+22]..[838,28007+23])
                  expression (typing/rec_check.ml[839,28034+6]..[839,28034+33])
                    Pexp_apply
                    expression (typing/rec_check.ml[839,28034+19]..[839,28034+21])
                      Pexp_ident "<<" (typing/rec_check.ml[839,28034+19]..[839,28034+21])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[839,28034+6]..[839,28034+18])
                          Pexp_apply
                          expression (typing/rec_check.ml[839,28034+6]..[839,28034+16])
                            Pexp_ident "expression" (typing/rec_check.ml[839,28034+6]..[839,28034+16])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[839,28034+17]..[839,28034+18])
                                Pexp_ident "e" (typing/rec_check.ml[839,28034+17]..[839,28034+18])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[839,28034+22]..[839,28034+33])
                          Pexp_construct "Dereference" (typing/rec_check.ml[839,28034+22]..[839,28034+33])
                          None
                    ]
                <case>
                  pattern (typing/rec_check.ml[840,28068+6]..[840,28068+21])
                    Ppat_construct "Tcf_attribute" (typing/rec_check.ml[840,28068+6]..[840,28068+19])
                    Some
                      []
                      pattern (typing/rec_check.ml[840,28068+20]..[840,28068+21])
                        Ppat_any
                  expression (typing/rec_check.ml[841,28093+6]..[841,28093+11])
                    Pexp_ident "empty" (typing/rec_check.ml[841,28093+6]..[841,28093+11])
              ]
          core_type (typing/rec_check.ml[828,27658+18]..[828,27658+52])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[828,27658+18]..[828,27658+39])
              Ptyp_constr "Typedtree.class_field" (typing/rec_check.ml[828,27658+18]..[828,27658+39])
              []
            core_type (typing/rec_check.ml[828,27658+43]..[828,27658+52])
              Ptyp_constr "term_judg" (typing/rec_check.ml[828,27658+43]..[828,27658+52])
              []
      <def>
        pattern (typing/rec_check.ml[843,28106+4]..[843,28106+62]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[843,28106+4]..[843,28106+20])
            Ppat_var "class_field_kind" (typing/rec_check.ml[843,28106+4]..[843,28106+20])
          core_type (typing/rec_check.ml[843,28106+23]..[843,28106+62]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[843,28106+23]..[843,28106+62])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[843,28106+23]..[843,28106+49])
                Ptyp_constr "Typedtree.class_field_kind" (typing/rec_check.ml[843,28106+23]..[843,28106+49])
                []
              core_type (typing/rec_check.ml[843,28106+53]..[843,28106+62])
                Ptyp_constr "term_judg" (typing/rec_check.ml[843,28106+53]..[843,28106+62])
                []
        expression (typing/rec_check.ml[843,28106+4]..[848,28265+33])
          Pexp_constraint
          expression (typing/rec_check.ml[844,28171+2]..[848,28265+33])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[844,28171+6]..[844,28171+9])
              Ppat_var "cfk" (typing/rec_check.ml[844,28171+6]..[844,28171+9])
            expression (typing/rec_check.ml[844,28171+13]..[848,28265+33])
              Pexp_match
              expression (typing/rec_check.ml[844,28171+19]..[844,28171+22])
                Pexp_ident "cfk" (typing/rec_check.ml[844,28171+19]..[844,28171+22])
              [
                <case>
                  pattern (typing/rec_check.ml[845,28199+6]..[845,28199+20])
                    Ppat_construct "Tcfk_virtual" (typing/rec_check.ml[845,28199+6]..[845,28199+18])
                    Some
                      []
                      pattern (typing/rec_check.ml[845,28199+19]..[845,28199+20])
                        Ppat_any
                  expression (typing/rec_check.ml[846,28223+6]..[846,28223+11])
                    Pexp_ident "empty" (typing/rec_check.ml[846,28223+6]..[846,28223+11])
                <case>
                  pattern (typing/rec_check.ml[847,28235+6]..[847,28235+26])
                    Ppat_construct "Tcfk_concrete" (typing/rec_check.ml[847,28235+6]..[847,28235+19])
                    Some
                      []
                      pattern (typing/rec_check.ml[847,28235+20]..[847,28235+26])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[847,28235+21]..[847,28235+22])
                            Ppat_any
                          pattern (typing/rec_check.ml[847,28235+24]..[847,28235+25])
                            Ppat_var "e" (typing/rec_check.ml[847,28235+24]..[847,28235+25])
                        ]
                  expression (typing/rec_check.ml[848,28265+6]..[848,28265+33])
                    Pexp_apply
                    expression (typing/rec_check.ml[848,28265+19]..[848,28265+21])
                      Pexp_ident "<<" (typing/rec_check.ml[848,28265+19]..[848,28265+21])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[848,28265+6]..[848,28265+18])
                          Pexp_apply
                          expression (typing/rec_check.ml[848,28265+6]..[848,28265+16])
                            Pexp_ident "expression" (typing/rec_check.ml[848,28265+6]..[848,28265+16])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[848,28265+17]..[848,28265+18])
                                Pexp_ident "e" (typing/rec_check.ml[848,28265+17]..[848,28265+18])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[848,28265+22]..[848,28265+33])
                          Pexp_construct "Dereference" (typing/rec_check.ml[848,28265+22]..[848,28265+33])
                          None
                    ]
              ]
          core_type (typing/rec_check.ml[843,28106+23]..[843,28106+62])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[843,28106+23]..[843,28106+49])
              Ptyp_constr "Typedtree.class_field_kind" (typing/rec_check.ml[843,28106+23]..[843,28106+49])
              []
            core_type (typing/rec_check.ml[843,28106+53]..[843,28106+62])
              Ptyp_constr "term_judg" (typing/rec_check.ml[843,28106+53]..[843,28106+62])
              []
      <def>
        pattern (typing/rec_check.ml[850,28300+4]..[850,28300+47]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[850,28300+4]..[850,28300+10])
            Ppat_var "modexp" (typing/rec_check.ml[850,28300+4]..[850,28300+10])
          core_type (typing/rec_check.ml[850,28300+13]..[850,28300+47]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[850,28300+13]..[850,28300+47])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[850,28300+13]..[850,28300+34])
                Ptyp_constr "Typedtree.module_expr" (typing/rec_check.ml[850,28300+13]..[850,28300+34])
                []
              core_type (typing/rec_check.ml[850,28300+38]..[850,28300+47])
                Ptyp_constr "term_judg" (typing/rec_check.ml[850,28300+38]..[850,28300+47])
                []
        expression (typing/rec_check.ml[850,28300+4]..[884,29538+18])
          Pexp_constraint
          expression (typing/rec_check.ml[851,28350+2]..[884,29538+18])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[851,28350+6]..[851,28350+10])
              Ppat_var "mexp" (typing/rec_check.ml[851,28350+6]..[851,28350+10])
            expression (typing/rec_check.ml[851,28350+14]..[884,29538+18])
              Pexp_match
              expression (typing/rec_check.ml[851,28350+20]..[851,28350+33])
                Pexp_field
                expression (typing/rec_check.ml[851,28350+20]..[851,28350+24])
                  Pexp_ident "mexp" (typing/rec_check.ml[851,28350+20]..[851,28350+24])
                "mod_desc" (typing/rec_check.ml[851,28350+25]..[851,28350+33])
              [
                <case>
                  pattern (typing/rec_check.ml[852,28389+6]..[852,28389+25])
                    Ppat_construct "Tmod_ident" (typing/rec_check.ml[852,28389+6]..[852,28389+16])
                    Some
                      []
                      pattern (typing/rec_check.ml[852,28389+17]..[852,28389+25])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[852,28389+18]..[852,28389+21])
                            Ppat_var "pth" (typing/rec_check.ml[852,28389+18]..[852,28389+21])
                          pattern (typing/rec_check.ml[852,28389+23]..[852,28389+24])
                            Ppat_any
                        ]
                  expression (typing/rec_check.ml[853,28418+6]..[853,28418+14])
                    Pexp_apply
                    expression (typing/rec_check.ml[853,28418+6]..[853,28418+10])
                      Pexp_ident "path" (typing/rec_check.ml[853,28418+6]..[853,28418+10])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[853,28418+11]..[853,28418+14])
                          Pexp_ident "pth" (typing/rec_check.ml[853,28418+11]..[853,28418+14])
                    ]
                <case>
                  pattern (typing/rec_check.ml[854,28433+6]..[854,28433+22])
                    Ppat_construct "Tmod_structure" (typing/rec_check.ml[854,28433+6]..[854,28433+20])
                    Some
                      []
                      pattern (typing/rec_check.ml[854,28433+21]..[854,28433+22])
                        Ppat_var "s" (typing/rec_check.ml[854,28433+21]..[854,28433+22])
                  expression (typing/rec_check.ml[855,28459+6]..[855,28459+17])
                    Pexp_apply
                    expression (typing/rec_check.ml[855,28459+6]..[855,28459+15])
                      Pexp_ident "structure" (typing/rec_check.ml[855,28459+6]..[855,28459+15])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[855,28459+16]..[855,28459+17])
                          Pexp_ident "s" (typing/rec_check.ml[855,28459+16]..[855,28459+17])
                    ]
                <case>
                  pattern (typing/rec_check.ml[856,28477+6]..[856,28477+25])
                    Ppat_construct "Tmod_functor" (typing/rec_check.ml[856,28477+6]..[856,28477+18])
                    Some
                      []
                      pattern (typing/rec_check.ml[856,28477+19]..[856,28477+25])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[856,28477+20]..[856,28477+21])
                            Ppat_any
                          pattern (typing/rec_check.ml[856,28477+23]..[856,28477+24])
                            Ppat_var "e" (typing/rec_check.ml[856,28477+23]..[856,28477+24])
                        ]
                  expression (typing/rec_check.ml[857,28506+6]..[857,28506+23])
                    Pexp_apply
                    expression (typing/rec_check.ml[857,28506+15]..[857,28506+17])
                      Pexp_ident "<<" (typing/rec_check.ml[857,28506+15]..[857,28506+17])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[857,28506+6]..[857,28506+14])
                          Pexp_apply
                          expression (typing/rec_check.ml[857,28506+6]..[857,28506+12])
                            Pexp_ident "modexp" (typing/rec_check.ml[857,28506+6]..[857,28506+12])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[857,28506+13]..[857,28506+14])
                                Pexp_ident "e" (typing/rec_check.ml[857,28506+13]..[857,28506+14])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[857,28506+18]..[857,28506+23])
                          Pexp_construct "Delay" (typing/rec_check.ml[857,28506+18]..[857,28506+23])
                          None
                    ]
                <case>
                  pattern (typing/rec_check.ml[858,28530+6]..[858,28530+26])
                    Ppat_construct "Tmod_apply" (typing/rec_check.ml[858,28530+6]..[858,28530+16])
                    Some
                      []
                      pattern (typing/rec_check.ml[858,28530+17]..[858,28530+26])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[858,28530+18]..[858,28530+19])
                            Ppat_var "f" (typing/rec_check.ml[858,28530+18]..[858,28530+19])
                          pattern (typing/rec_check.ml[858,28530+21]..[858,28530+22])
                            Ppat_var "p" (typing/rec_check.ml[858,28530+21]..[858,28530+22])
                          pattern (typing/rec_check.ml[858,28530+24]..[858,28530+25])
                            Ppat_any
                        ]
                  expression (typing/rec_check.ml[859,28560+6]..[862,28639+7])
                    Pexp_apply
                    expression (typing/rec_check.ml[859,28560+6]..[859,28560+10])
                      Pexp_ident "join" (typing/rec_check.ml[859,28560+6]..[859,28560+10])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[859,28560+11]..[862,28639+7])
                          Pexp_construct "::" (typing/rec_check.ml[860,28573+8]..[862,28639+7]) ghost
                          Some
                            expression (typing/rec_check.ml[860,28573+8]..[862,28639+7]) ghost
                              Pexp_tuple
                              [
                                expression (typing/rec_check.ml[860,28573+8]..[860,28573+31])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[860,28573+17]..[860,28573+19])
                                    Pexp_ident "<<" (typing/rec_check.ml[860,28573+17]..[860,28573+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[860,28573+8]..[860,28573+16])
                                        Pexp_apply
                                        expression (typing/rec_check.ml[860,28573+8]..[860,28573+14])
                                          Pexp_ident "modexp" (typing/rec_check.ml[860,28573+8]..[860,28573+14])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/rec_check.ml[860,28573+15]..[860,28573+16])
                                              Pexp_ident "f" (typing/rec_check.ml[860,28573+15]..[860,28573+16])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[860,28573+20]..[860,28573+31])
                                        Pexp_construct "Dereference" (typing/rec_check.ml[860,28573+20]..[860,28573+31])
                                        None
                                  ]
                                expression (typing/rec_check.ml[861,28606+8]..[862,28639+7]) ghost
                                  Pexp_construct "::" (typing/rec_check.ml[861,28606+8]..[862,28639+7]) ghost
                                  Some
                                    expression (typing/rec_check.ml[861,28606+8]..[862,28639+7]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/rec_check.ml[861,28606+8]..[861,28606+31])
                                          Pexp_apply
                                          expression (typing/rec_check.ml[861,28606+17]..[861,28606+19])
                                            Pexp_ident "<<" (typing/rec_check.ml[861,28606+17]..[861,28606+19])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[861,28606+8]..[861,28606+16])
                                                Pexp_apply
                                                expression (typing/rec_check.ml[861,28606+8]..[861,28606+14])
                                                  Pexp_ident "modexp" (typing/rec_check.ml[861,28606+8]..[861,28606+14])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/rec_check.ml[861,28606+15]..[861,28606+16])
                                                      Pexp_ident "p" (typing/rec_check.ml[861,28606+15]..[861,28606+16])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[861,28606+20]..[861,28606+31])
                                                Pexp_construct "Dereference" (typing/rec_check.ml[861,28606+20]..[861,28606+31])
                                                None
                                          ]
                                        expression (typing/rec_check.ml[862,28639+6]..[862,28639+7]) ghost
                                          Pexp_construct "[]" (typing/rec_check.ml[862,28639+6]..[862,28639+7]) ghost
                                          None
                                      ]
                              ]
                    ]
                <case>
                  pattern (typing/rec_check.ml[863,28647+6]..[863,28647+39])
                    Ppat_construct "Tmod_constraint" (typing/rec_check.ml[863,28647+6]..[863,28647+21])
                    Some
                      []
                      pattern (typing/rec_check.ml[863,28647+22]..[863,28647+39])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[863,28647+23]..[863,28647+27])
                            Ppat_var "mexp" (typing/rec_check.ml[863,28647+23]..[863,28647+27])
                          pattern (typing/rec_check.ml[863,28647+29]..[863,28647+30])
                            Ppat_any
                          pattern (typing/rec_check.ml[863,28647+32]..[863,28647+33])
                            Ppat_any
                          pattern (typing/rec_check.ml[863,28647+35]..[863,28647+38])
                            Ppat_var "coe" (typing/rec_check.ml[863,28647+35]..[863,28647+38])
                        ]
                  expression (typing/rec_check.ml[864,28690+6]..[882,29463+46])
                    Pexp_let Rec
                    [
                      <def>
                        pattern (typing/rec_check.ml[864,28690+14]..[864,28690+22])
                          Ppat_var "coercion" (typing/rec_check.ml[864,28690+14]..[864,28690+22])
                        expression (typing/rec_check.ml[864,28690+23]..[880,29406+47]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/rec_check.ml[864,28690+23]..[864,28690+26])
                            Ppat_var "coe" (typing/rec_check.ml[864,28690+23]..[864,28690+26])
                          expression (typing/rec_check.ml[864,28690+27]..[880,29406+47]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/rec_check.ml[864,28690+27]..[864,28690+28])
                              Ppat_var "k" (typing/rec_check.ml[864,28690+27]..[864,28690+28])
                            expression (typing/rec_check.ml[864,28690+31]..[880,29406+47])
                              Pexp_match
                              expression (typing/rec_check.ml[864,28690+37]..[864,28690+40])
                                Pexp_ident "coe" (typing/rec_check.ml[864,28690+37]..[864,28690+40])
                              [
                                <case>
                                  pattern (typing/rec_check.ml[865,28736+10]..[865,28736+22])
                                    Ppat_construct "Tcoerce_none" (typing/rec_check.ml[865,28736+10]..[865,28736+22])
                                    None
                                  expression (typing/rec_check.ml[866,28762+10]..[866,28762+18])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[866,28762+10]..[866,28762+11])
                                      Pexp_ident "k" (typing/rec_check.ml[866,28762+10]..[866,28762+11])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[866,28762+12]..[866,28762+18])
                                          Pexp_construct "Return" (typing/rec_check.ml[866,28762+12]..[866,28762+18])
                                          None
                                    ]
                                <case>
                                  pattern (typing/rec_check.ml[867,28781+10]..[868,28811+27])
                                    Ppat_or
                                    pattern (typing/rec_check.ml[867,28781+10]..[867,28781+29])
                                      Ppat_construct "Tcoerce_structure" (typing/rec_check.ml[867,28781+10]..[867,28781+27])
                                      Some
                                        []
                                        pattern (typing/rec_check.ml[867,28781+28]..[867,28781+29])
                                          Ppat_any
                                    pattern (typing/rec_check.ml[868,28811+10]..[868,28811+27])
                                      Ppat_construct "Tcoerce_functor" (typing/rec_check.ml[868,28811+10]..[868,28811+25])
                                      Some
                                        []
                                        pattern (typing/rec_check.ml[868,28811+26]..[868,28811+27])
                                          Ppat_any
                                  expression (typing/rec_check.ml[872,29040+11]..[872,29040+24])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[872,29040+11]..[872,29040+12])
                                      Pexp_ident "k" (typing/rec_check.ml[872,29040+11]..[872,29040+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[872,29040+13]..[872,29040+24])
                                          Pexp_construct "Dereference" (typing/rec_check.ml[872,29040+13]..[872,29040+24])
                                          None
                                    ]
                                <case>
                                  pattern (typing/rec_check.ml[873,29065+10]..[873,29065+29])
                                    Ppat_construct "Tcoerce_primitive" (typing/rec_check.ml[873,29065+10]..[873,29065+27])
                                    Some
                                      []
                                      pattern (typing/rec_check.ml[873,29065+28]..[873,29065+29])
                                        Ppat_any
                                  expression (typing/rec_check.ml[876,29210+10]..[876,29210+18])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[876,29210+10]..[876,29210+11])
                                      Pexp_ident "k" (typing/rec_check.ml[876,29210+10]..[876,29210+11])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[876,29210+12]..[876,29210+18])
                                          Pexp_construct "Ignore" (typing/rec_check.ml[876,29210+12]..[876,29210+18])
                                          None
                                    ]
                                <case>
                                  pattern (typing/rec_check.ml[877,29229+10]..[877,29229+37])
                                    Ppat_construct "Tcoerce_alias" (typing/rec_check.ml[877,29229+10]..[877,29229+23])
                                    Some
                                      []
                                      pattern (typing/rec_check.ml[877,29229+24]..[877,29229+37])
                                        Ppat_tuple
                                        [
                                          pattern (typing/rec_check.ml[877,29229+25]..[877,29229+26])
                                            Ppat_any
                                          pattern (typing/rec_check.ml[877,29229+28]..[877,29229+31])
                                            Ppat_var "pth" (typing/rec_check.ml[877,29229+28]..[877,29229+31])
                                          pattern (typing/rec_check.ml[877,29229+33]..[877,29229+36])
                                            Ppat_var "coe" (typing/rec_check.ml[877,29229+33]..[877,29229+36])
                                        ]
                                  expression (typing/rec_check.ml[880,29406+10]..[880,29406+47])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[880,29406+10]..[880,29406+18])
                                      Pexp_ident "coercion" (typing/rec_check.ml[880,29406+10]..[880,29406+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[880,29406+19]..[880,29406+22])
                                          Pexp_ident "coe" (typing/rec_check.ml[880,29406+19]..[880,29406+22])
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[880,29406+23]..[880,29406+47])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/rec_check.ml[880,29406+28]..[880,29406+29])
                                            Ppat_var "m" (typing/rec_check.ml[880,29406+28]..[880,29406+29])
                                          expression (typing/rec_check.ml[880,29406+33]..[880,29406+46])
                                            Pexp_apply
                                            expression (typing/rec_check.ml[880,29406+42]..[880,29406+44])
                                              Pexp_ident "<<" (typing/rec_check.ml[880,29406+42]..[880,29406+44])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[880,29406+33]..[880,29406+41])
                                                  Pexp_apply
                                                  expression (typing/rec_check.ml[880,29406+33]..[880,29406+37])
                                                    Pexp_ident "path" (typing/rec_check.ml[880,29406+33]..[880,29406+37])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[880,29406+38]..[880,29406+41])
                                                        Pexp_ident "pth" (typing/rec_check.ml[880,29406+38]..[880,29406+41])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[880,29406+45]..[880,29406+46])
                                                  Pexp_ident "m" (typing/rec_check.ml[880,29406+45]..[880,29406+46])
                                            ]
                                    ]
                              ]
                    ]
                    expression (typing/rec_check.ml[882,29463+6]..[882,29463+46])
                      Pexp_apply
                      expression (typing/rec_check.ml[882,29463+6]..[882,29463+14])
                        Pexp_ident "coercion" (typing/rec_check.ml[882,29463+6]..[882,29463+14])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[882,29463+15]..[882,29463+18])
                            Pexp_ident "coe" (typing/rec_check.ml[882,29463+15]..[882,29463+18])
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[882,29463+19]..[882,29463+46])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/rec_check.ml[882,29463+24]..[882,29463+25])
                              Ppat_var "m" (typing/rec_check.ml[882,29463+24]..[882,29463+25])
                            expression (typing/rec_check.ml[882,29463+29]..[882,29463+45])
                              Pexp_apply
                              expression (typing/rec_check.ml[882,29463+41]..[882,29463+43])
                                Pexp_ident "<<" (typing/rec_check.ml[882,29463+41]..[882,29463+43])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[882,29463+29]..[882,29463+40])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[882,29463+29]..[882,29463+35])
                                      Pexp_ident "modexp" (typing/rec_check.ml[882,29463+29]..[882,29463+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[882,29463+36]..[882,29463+40])
                                          Pexp_ident "mexp" (typing/rec_check.ml[882,29463+36]..[882,29463+40])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[882,29463+44]..[882,29463+45])
                                    Pexp_ident "m" (typing/rec_check.ml[882,29463+44]..[882,29463+45])
                              ]
                      ]
                <case>
                  pattern (typing/rec_check.ml[883,29510+6]..[883,29510+24])
                    Ppat_construct "Tmod_unpack" (typing/rec_check.ml[883,29510+6]..[883,29510+17])
                    Some
                      []
                      pattern (typing/rec_check.ml[883,29510+18]..[883,29510+24])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[883,29510+19]..[883,29510+20])
                            Ppat_var "e" (typing/rec_check.ml[883,29510+19]..[883,29510+20])
                          pattern (typing/rec_check.ml[883,29510+22]..[883,29510+23])
                            Ppat_any
                        ]
                  expression (typing/rec_check.ml[884,29538+6]..[884,29538+18])
                    Pexp_apply
                    expression (typing/rec_check.ml[884,29538+6]..[884,29538+16])
                      Pexp_ident "expression" (typing/rec_check.ml[884,29538+6]..[884,29538+16])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[884,29538+17]..[884,29538+18])
                          Pexp_ident "e" (typing/rec_check.ml[884,29538+17]..[884,29538+18])
                    ]
              ]
          core_type (typing/rec_check.ml[850,28300+13]..[850,28300+47])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[850,28300+13]..[850,28300+34])
              Ptyp_constr "Typedtree.module_expr" (typing/rec_check.ml[850,28300+13]..[850,28300+34])
              []
            core_type (typing/rec_check.ml[850,28300+38]..[850,28300+47])
              Ptyp_constr "term_judg" (typing/rec_check.ml[850,28300+38]..[850,28300+47])
              []
      <def>
        pattern (typing/rec_check.ml[888,29578+4]..[888,29578+30]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[888,29578+4]..[888,29578+8])
            Ppat_var "path" (typing/rec_check.ml[888,29578+4]..[888,29578+8])
          core_type (typing/rec_check.ml[888,29578+11]..[888,29578+30]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[888,29578+11]..[888,29578+30])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[888,29578+11]..[888,29578+17])
                Ptyp_constr "Path.t" (typing/rec_check.ml[888,29578+11]..[888,29578+17])
                []
              core_type (typing/rec_check.ml[888,29578+21]..[888,29578+30])
                Ptyp_constr "term_judg" (typing/rec_check.ml[888,29578+21]..[888,29578+30])
                []
        expression (typing/rec_check.ml[888,29578+4]..[911,30095+9])
          Pexp_constraint
          expression (typing/rec_check.ml[902,29862+2]..[911,30095+9])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[902,29862+6]..[902,29862+9])
              Ppat_var "pth" (typing/rec_check.ml[902,29862+6]..[902,29862+9])
            expression (typing/rec_check.ml[902,29862+13]..[911,30095+9])
              Pexp_match
              expression (typing/rec_check.ml[902,29862+19]..[902,29862+22])
                Pexp_ident "pth" (typing/rec_check.ml[902,29862+19]..[902,29862+22])
              [
                <case>
                  pattern (typing/rec_check.ml[903,29890+6]..[903,29890+19])
                    Ppat_construct "Path.Pident" (typing/rec_check.ml[903,29890+6]..[903,29890+17])
                    Some
                      []
                      pattern (typing/rec_check.ml[903,29890+18]..[903,29890+19])
                        Ppat_var "x" (typing/rec_check.ml[903,29890+18]..[903,29890+19])
                  expression (typing/rec_check.ml[904,29913+8]..[904,29913+16])
                    Pexp_apply
                    expression (typing/rec_check.ml[904,29913+8]..[904,29913+14])
                      Pexp_ident "single" (typing/rec_check.ml[904,29913+8]..[904,29913+14])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[904,29913+15]..[904,29913+16])
                          Pexp_ident "x" (typing/rec_check.ml[904,29913+15]..[904,29913+16])
                    ]
                <case>
                  pattern (typing/rec_check.ml[905,29930+6]..[905,29930+22])
                    Ppat_construct "Path.Pdot" (typing/rec_check.ml[905,29930+6]..[905,29930+15])
                    Some
                      []
                      pattern (typing/rec_check.ml[905,29930+16]..[905,29930+22])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[905,29930+17]..[905,29930+18])
                            Ppat_var "t" (typing/rec_check.ml[905,29930+17]..[905,29930+18])
                          pattern (typing/rec_check.ml[905,29930+20]..[905,29930+21])
                            Ppat_any
                        ]
                  expression (typing/rec_check.ml[906,29956+8]..[906,29956+29])
                    Pexp_apply
                    expression (typing/rec_check.ml[906,29956+15]..[906,29956+17])
                      Pexp_ident "<<" (typing/rec_check.ml[906,29956+15]..[906,29956+17])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[906,29956+8]..[906,29956+14])
                          Pexp_apply
                          expression (typing/rec_check.ml[906,29956+8]..[906,29956+12])
                            Pexp_ident "path" (typing/rec_check.ml[906,29956+8]..[906,29956+12])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[906,29956+13]..[906,29956+14])
                                Pexp_ident "t" (typing/rec_check.ml[906,29956+13]..[906,29956+14])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[906,29956+18]..[906,29956+29])
                          Pexp_construct "Dereference" (typing/rec_check.ml[906,29956+18]..[906,29956+29])
                          None
                    ]
                <case>
                  pattern (typing/rec_check.ml[907,29986+6]..[907,29986+24])
                    Ppat_construct "Path.Papply" (typing/rec_check.ml[907,29986+6]..[907,29986+17])
                    Some
                      []
                      pattern (typing/rec_check.ml[907,29986+18]..[907,29986+24])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[907,29986+19]..[907,29986+20])
                            Ppat_var "f" (typing/rec_check.ml[907,29986+19]..[907,29986+20])
                          pattern (typing/rec_check.ml[907,29986+22]..[907,29986+23])
                            Ppat_var "p" (typing/rec_check.ml[907,29986+22]..[907,29986+23])
                        ]
                  expression (typing/rec_check.ml[908,30014+8]..[911,30095+9])
                    Pexp_apply
                    expression (typing/rec_check.ml[908,30014+8]..[908,30014+12])
                      Pexp_ident "join" (typing/rec_check.ml[908,30014+8]..[908,30014+12])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[908,30014+13]..[911,30095+9])
                          Pexp_construct "::" (typing/rec_check.ml[909,30029+10]..[911,30095+9]) ghost
                          Some
                            expression (typing/rec_check.ml[909,30029+10]..[911,30095+9]) ghost
                              Pexp_tuple
                              [
                                expression (typing/rec_check.ml[909,30029+10]..[909,30029+31])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[909,30029+17]..[909,30029+19])
                                    Pexp_ident "<<" (typing/rec_check.ml[909,30029+17]..[909,30029+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[909,30029+10]..[909,30029+16])
                                        Pexp_apply
                                        expression (typing/rec_check.ml[909,30029+10]..[909,30029+14])
                                          Pexp_ident "path" (typing/rec_check.ml[909,30029+10]..[909,30029+14])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/rec_check.ml[909,30029+15]..[909,30029+16])
                                              Pexp_ident "f" (typing/rec_check.ml[909,30029+15]..[909,30029+16])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[909,30029+20]..[909,30029+31])
                                        Pexp_construct "Dereference" (typing/rec_check.ml[909,30029+20]..[909,30029+31])
                                        None
                                  ]
                                expression (typing/rec_check.ml[910,30062+10]..[911,30095+9]) ghost
                                  Pexp_construct "::" (typing/rec_check.ml[910,30062+10]..[911,30095+9]) ghost
                                  Some
                                    expression (typing/rec_check.ml[910,30062+10]..[911,30095+9]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/rec_check.ml[910,30062+10]..[910,30062+31])
                                          Pexp_apply
                                          expression (typing/rec_check.ml[910,30062+17]..[910,30062+19])
                                            Pexp_ident "<<" (typing/rec_check.ml[910,30062+17]..[910,30062+19])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[910,30062+10]..[910,30062+16])
                                                Pexp_apply
                                                expression (typing/rec_check.ml[910,30062+10]..[910,30062+14])
                                                  Pexp_ident "path" (typing/rec_check.ml[910,30062+10]..[910,30062+14])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/rec_check.ml[910,30062+15]..[910,30062+16])
                                                      Pexp_ident "p" (typing/rec_check.ml[910,30062+15]..[910,30062+16])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[910,30062+20]..[910,30062+31])
                                                Pexp_construct "Dereference" (typing/rec_check.ml[910,30062+20]..[910,30062+31])
                                                None
                                          ]
                                        expression (typing/rec_check.ml[911,30095+8]..[911,30095+9]) ghost
                                          Pexp_construct "[]" (typing/rec_check.ml[911,30095+8]..[911,30095+9]) ghost
                                          None
                                      ]
                              ]
                    ]
              ]
          core_type (typing/rec_check.ml[888,29578+11]..[888,29578+30])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[888,29578+11]..[888,29578+17])
              Ptyp_constr "Path.t" (typing/rec_check.ml[888,29578+11]..[888,29578+17])
              []
            core_type (typing/rec_check.ml[888,29578+21]..[888,29578+30])
              Ptyp_constr "term_judg" (typing/rec_check.ml[888,29578+21]..[888,29578+30])
              []
      <def>
        pattern (typing/rec_check.ml[914,30136+4]..[914,30136+48]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[914,30136+4]..[914,30136+13])
            Ppat_var "structure" (typing/rec_check.ml[914,30136+4]..[914,30136+13])
          core_type (typing/rec_check.ml[914,30136+16]..[914,30136+48]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[914,30136+16]..[914,30136+48])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[914,30136+16]..[914,30136+35])
                Ptyp_constr "Typedtree.structure" (typing/rec_check.ml[914,30136+16]..[914,30136+35])
                []
              core_type (typing/rec_check.ml[914,30136+39]..[914,30136+48])
                Ptyp_constr "term_judg" (typing/rec_check.ml[914,30136+39]..[914,30136+48])
                []
        expression (typing/rec_check.ml[914,30136+4]..[925,30509+27])
          Pexp_constraint
          expression (typing/rec_check.ml[923,30436+2]..[925,30509+27])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[923,30436+6]..[923,30436+7])
              Ppat_var "s" (typing/rec_check.ml[923,30436+6]..[923,30436+7])
            expression (typing/rec_check.ml[923,30436+8]..[925,30509+27]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[923,30436+8]..[923,30436+9])
                Ppat_var "m" (typing/rec_check.ml[923,30436+8]..[923,30436+9])
              expression (typing/rec_check.ml[924,30449+4]..[925,30509+27])
                Pexp_apply
                expression (typing/rec_check.ml[924,30449+4]..[924,30449+19])
                  Pexp_ident "List.fold_right" (typing/rec_check.ml[924,30449+4]..[924,30449+19])
                [
                  <arg>
                  Nolabel
                    expression (typing/rec_check.ml[924,30449+20]..[924,30449+59])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/rec_check.ml[924,30449+25]..[924,30449+27])
                        Ppat_var "it" (typing/rec_check.ml[924,30449+25]..[924,30449+27])
                      expression (typing/rec_check.ml[924,30449+28]..[924,30449+58]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/rec_check.ml[924,30449+28]..[924,30449+31])
                          Ppat_var "env" (typing/rec_check.ml[924,30449+28]..[924,30449+31])
                        expression (typing/rec_check.ml[924,30449+35]..[924,30449+58])
                          Pexp_apply
                          expression (typing/rec_check.ml[924,30449+35]..[924,30449+49])
                            Pexp_ident "structure_item" (typing/rec_check.ml[924,30449+35]..[924,30449+49])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[924,30449+50]..[924,30449+52])
                                Pexp_ident "it" (typing/rec_check.ml[924,30449+50]..[924,30449+52])
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[924,30449+53]..[924,30449+54])
                                Pexp_ident "m" (typing/rec_check.ml[924,30449+53]..[924,30449+54])
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[924,30449+55]..[924,30449+58])
                                Pexp_ident "env" (typing/rec_check.ml[924,30449+55]..[924,30449+58])
                          ]
                  <arg>
                  Nolabel
                    expression (typing/rec_check.ml[925,30509+6]..[925,30509+17])
                      Pexp_field
                      expression (typing/rec_check.ml[925,30509+6]..[925,30509+7])
                        Pexp_ident "s" (typing/rec_check.ml[925,30509+6]..[925,30509+7])
                      "str_items" (typing/rec_check.ml[925,30509+8]..[925,30509+17])
                  <arg>
                  Nolabel
                    expression (typing/rec_check.ml[925,30509+18]..[925,30509+27])
                      Pexp_ident "Env.empty" (typing/rec_check.ml[925,30509+18]..[925,30509+27])
                ]
          core_type (typing/rec_check.ml[914,30136+16]..[914,30136+48])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[914,30136+16]..[914,30136+35])
              Ptyp_constr "Typedtree.structure" (typing/rec_check.ml[914,30136+16]..[914,30136+35])
              []
            core_type (typing/rec_check.ml[914,30136+39]..[914,30136+48])
              Ptyp_constr "term_judg" (typing/rec_check.ml[914,30136+39]..[914,30136+48])
              []
      <def>
        pattern (typing/rec_check.ml[929,30621+4]..[929,30621+58]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[929,30621+4]..[929,30621+18])
            Ppat_var "structure_item" (typing/rec_check.ml[929,30621+4]..[929,30621+18])
          core_type (typing/rec_check.ml[929,30621+21]..[929,30621+58]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[929,30621+21]..[929,30621+58])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[929,30621+21]..[929,30621+45])
                Ptyp_constr "Typedtree.structure_item" (typing/rec_check.ml[929,30621+21]..[929,30621+45])
                []
              core_type (typing/rec_check.ml[929,30621+49]..[929,30621+58])
                Ptyp_constr "bind_judg" (typing/rec_check.ml[929,30621+49]..[929,30621+58])
                []
        expression (typing/rec_check.ml[929,30621+4]..[983,32492+65])
          Pexp_constraint
          expression (typing/rec_check.ml[930,30682+2]..[983,32492+65])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[930,30682+6]..[930,30682+7])
              Ppat_var "s" (typing/rec_check.ml[930,30682+6]..[930,30682+7])
            expression (typing/rec_check.ml[930,30682+8]..[983,32492+65]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[930,30682+8]..[930,30682+9])
                Ppat_var "m" (typing/rec_check.ml[930,30682+8]..[930,30682+9])
              expression (typing/rec_check.ml[930,30682+10]..[983,32492+65]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/rec_check.ml[930,30682+10]..[930,30682+13])
                  Ppat_var "env" (typing/rec_check.ml[930,30682+10]..[930,30682+13])
                expression (typing/rec_check.ml[930,30682+17]..[983,32492+65])
                  Pexp_match
                  expression (typing/rec_check.ml[930,30682+23]..[930,30682+33])
                    Pexp_field
                    expression (typing/rec_check.ml[930,30682+23]..[930,30682+24])
                      Pexp_ident "s" (typing/rec_check.ml[930,30682+23]..[930,30682+24])
                    "str_desc" (typing/rec_check.ml[930,30682+25]..[930,30682+33])
                  [
                    <case>
                      pattern (typing/rec_check.ml[931,30721+6]..[931,30721+22])
                        Ppat_construct "Tstr_eval" (typing/rec_check.ml[931,30721+6]..[931,30721+15])
                        Some
                          []
                          pattern (typing/rec_check.ml[931,30721+16]..[931,30721+22])
                            Ppat_tuple
                            [
                              pattern (typing/rec_check.ml[931,30721+17]..[931,30721+18])
                                Ppat_var "e" (typing/rec_check.ml[931,30721+17]..[931,30721+18])
                              pattern (typing/rec_check.ml[931,30721+20]..[931,30721+21])
                                Ppat_any
                            ]
                      expression (typing/rec_check.ml[940,30968+6]..[941,31012+29])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/rec_check.ml[940,30968+10]..[940,30968+16])
                              Ppat_var "judg_e" (typing/rec_check.ml[940,30968+10]..[940,30968+16])
                            expression (typing/rec_check.ml[940,30968+19]..[940,30968+40])
                              Pexp_apply
                              expression (typing/rec_check.ml[940,30968+32]..[940,30968+34])
                                Pexp_ident "<<" (typing/rec_check.ml[940,30968+32]..[940,30968+34])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[940,30968+19]..[940,30968+31])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[940,30968+19]..[940,30968+29])
                                      Pexp_ident "expression" (typing/rec_check.ml[940,30968+19]..[940,30968+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[940,30968+30]..[940,30968+31])
                                          Pexp_ident "e" (typing/rec_check.ml[940,30968+30]..[940,30968+31])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[940,30968+35]..[940,30968+40])
                                    Pexp_construct "Guard" (typing/rec_check.ml[940,30968+35]..[940,30968+40])
                                    None
                              ]
                        ]
                        expression (typing/rec_check.ml[941,31012+6]..[941,31012+29])
                          Pexp_apply
                          expression (typing/rec_check.ml[941,31012+6]..[941,31012+14])
                            Pexp_ident "Env.join" (typing/rec_check.ml[941,31012+6]..[941,31012+14])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[941,31012+15]..[941,31012+25])
                                Pexp_apply
                                expression (typing/rec_check.ml[941,31012+16]..[941,31012+22])
                                  Pexp_ident "judg_e" (typing/rec_check.ml[941,31012+16]..[941,31012+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[941,31012+23]..[941,31012+24])
                                      Pexp_ident "m" (typing/rec_check.ml[941,31012+23]..[941,31012+24])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[941,31012+26]..[941,31012+29])
                                Pexp_ident "env" (typing/rec_check.ml[941,31012+26]..[941,31012+29])
                          ]
                    <case>
                      pattern (typing/rec_check.ml[942,31042+6]..[942,31042+37])
                        Ppat_construct "Tstr_value" (typing/rec_check.ml[942,31042+6]..[942,31042+16])
                        Some
                          []
                          pattern (typing/rec_check.ml[942,31042+17]..[942,31042+37])
                            Ppat_tuple
                            [
                              pattern (typing/rec_check.ml[942,31042+18]..[942,31042+26])
                                Ppat_var "rec_flag" (typing/rec_check.ml[942,31042+18]..[942,31042+26])
                              pattern (typing/rec_check.ml[942,31042+28]..[942,31042+36])
                                Ppat_var "bindings" (typing/rec_check.ml[942,31042+28]..[942,31042+36])
                            ]
                      expression (typing/rec_check.ml[943,31083+6]..[943,31083+44])
                        Pexp_apply
                        expression (typing/rec_check.ml[943,31083+6]..[943,31083+20])
                          Pexp_ident "value_bindings" (typing/rec_check.ml[943,31083+6]..[943,31083+20])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[943,31083+21]..[943,31083+29])
                              Pexp_ident "rec_flag" (typing/rec_check.ml[943,31083+21]..[943,31083+29])
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[943,31083+30]..[943,31083+38])
                              Pexp_ident "bindings" (typing/rec_check.ml[943,31083+30]..[943,31083+38])
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[943,31083+39]..[943,31083+40])
                              Pexp_ident "m" (typing/rec_check.ml[943,31083+39]..[943,31083+40])
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[943,31083+41]..[943,31083+44])
                              Pexp_ident "env" (typing/rec_check.ml[943,31083+41]..[943,31083+44])
                        ]
                    <case>
                      pattern (typing/rec_check.ml[944,31128+6]..[944,31128+34])
                        Ppat_construct "Tstr_module" (typing/rec_check.ml[944,31128+6]..[944,31128+17])
                        Some
                          []
                          pattern (typing/rec_check.ml[944,31128+18]..[944,31128+34])
                            Ppat_record Closed
                            [
                              "mb_id" (typing/rec_check.ml[944,31128+19]..[944,31128+24]) ghost
                                pattern (typing/rec_check.ml[944,31128+19]..[944,31128+24])
                                  Ppat_var "mb_id" (typing/rec_check.ml[944,31128+19]..[944,31128+24])
                              "mb_expr" (typing/rec_check.ml[944,31128+26]..[944,31128+33]) ghost
                                pattern (typing/rec_check.ml[944,31128+26]..[944,31128+33])
                                  Ppat_var "mb_expr" (typing/rec_check.ml[944,31128+26]..[944,31128+33])
                            ]
                      expression (typing/rec_check.ml[945,31166+6]..[945,31166+43])
                        Pexp_apply
                        expression (typing/rec_check.ml[945,31166+6]..[945,31166+20])
                          Pexp_ident "module_binding" (typing/rec_check.ml[945,31166+6]..[945,31166+20])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[945,31166+21]..[945,31166+37])
                              Pexp_tuple
                              [
                                expression (typing/rec_check.ml[945,31166+22]..[945,31166+27])
                                  Pexp_ident "mb_id" (typing/rec_check.ml[945,31166+22]..[945,31166+27])
                                expression (typing/rec_check.ml[945,31166+29]..[945,31166+36])
                                  Pexp_ident "mb_expr" (typing/rec_check.ml[945,31166+29]..[945,31166+36])
                              ]
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[945,31166+38]..[945,31166+39])
                              Pexp_ident "m" (typing/rec_check.ml[945,31166+38]..[945,31166+39])
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[945,31166+40]..[945,31166+43])
                              Pexp_ident "env" (typing/rec_check.ml[945,31166+40]..[945,31166+43])
                        ]
                    <case>
                      pattern (typing/rec_check.ml[946,31210+6]..[946,31210+24])
                        Ppat_construct "Tstr_recmodule" (typing/rec_check.ml[946,31210+6]..[946,31210+20])
                        Some
                          []
                          pattern (typing/rec_check.ml[946,31210+21]..[946,31210+24])
                            Ppat_var "mbs" (typing/rec_check.ml[946,31210+21]..[946,31210+24])
                      expression (typing/rec_check.ml[947,31238+6]..[948,31318+46])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/rec_check.ml[947,31238+10]..[947,31238+18])
                              Ppat_var "bindings" (typing/rec_check.ml[947,31238+10]..[947,31238+18])
                            expression (typing/rec_check.ml[947,31238+21]..[947,31238+76])
                              Pexp_apply
                              expression (typing/rec_check.ml[947,31238+21]..[947,31238+29])
                                Pexp_ident "List.map" (typing/rec_check.ml[947,31238+21]..[947,31238+29])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[947,31238+30]..[947,31238+72])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/rec_check.ml[947,31238+35]..[947,31238+51])
                                      Ppat_record Closed
                                      [
                                        "mb_id" (typing/rec_check.ml[947,31238+36]..[947,31238+41]) ghost
                                          pattern (typing/rec_check.ml[947,31238+36]..[947,31238+41])
                                            Ppat_var "mb_id" (typing/rec_check.ml[947,31238+36]..[947,31238+41])
                                        "mb_expr" (typing/rec_check.ml[947,31238+43]..[947,31238+50]) ghost
                                          pattern (typing/rec_check.ml[947,31238+43]..[947,31238+50])
                                            Ppat_var "mb_expr" (typing/rec_check.ml[947,31238+43]..[947,31238+50])
                                      ]
                                    expression (typing/rec_check.ml[947,31238+55]..[947,31238+71])
                                      Pexp_tuple
                                      [
                                        expression (typing/rec_check.ml[947,31238+56]..[947,31238+61])
                                          Pexp_ident "mb_id" (typing/rec_check.ml[947,31238+56]..[947,31238+61])
                                        expression (typing/rec_check.ml[947,31238+63]..[947,31238+70])
                                          Pexp_ident "mb_expr" (typing/rec_check.ml[947,31238+63]..[947,31238+70])
                                      ]
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[947,31238+73]..[947,31238+76])
                                    Pexp_ident "mbs" (typing/rec_check.ml[947,31238+73]..[947,31238+76])
                              ]
                        ]
                        expression (typing/rec_check.ml[948,31318+6]..[948,31318+46])
                          Pexp_apply
                          expression (typing/rec_check.ml[948,31318+6]..[948,31318+31])
                            Pexp_ident "recursive_module_bindings" (typing/rec_check.ml[948,31318+6]..[948,31318+31])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[948,31318+32]..[948,31318+40])
                                Pexp_ident "bindings" (typing/rec_check.ml[948,31318+32]..[948,31318+40])
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[948,31318+41]..[948,31318+42])
                                Pexp_ident "m" (typing/rec_check.ml[948,31318+41]..[948,31318+42])
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[948,31318+43]..[948,31318+46])
                                Pexp_ident "env" (typing/rec_check.ml[948,31318+43]..[948,31318+46])
                          ]
                    <case>
                      pattern (typing/rec_check.ml[949,31365+6]..[949,31365+22])
                        Ppat_construct "Tstr_primitive" (typing/rec_check.ml[949,31365+6]..[949,31365+20])
                        Some
                          []
                          pattern (typing/rec_check.ml[949,31365+21]..[949,31365+22])
                            Ppat_any
                      expression (typing/rec_check.ml[950,31391+6]..[950,31391+9])
                        Pexp_ident "env" (typing/rec_check.ml[950,31391+6]..[950,31391+9])
                    <case>
                      pattern (typing/rec_check.ml[951,31401+6]..[951,31401+17])
                        Ppat_construct "Tstr_type" (typing/rec_check.ml[951,31401+6]..[951,31401+15])
                        Some
                          []
                          pattern (typing/rec_check.ml[951,31401+16]..[951,31401+17])
                            Ppat_any
                      expression (typing/rec_check.ml[956,31496+6]..[956,31496+9])
                        Pexp_ident "env" (typing/rec_check.ml[956,31496+6]..[956,31496+9])
                    <case>
                      pattern (typing/rec_check.ml[957,31506+6]..[957,31506+48])
                        Ppat_construct "Tstr_typext" (typing/rec_check.ml[957,31506+6]..[957,31506+17])
                        Some
                          []
                          pattern (typing/rec_check.ml[957,31506+18]..[957,31506+48])
                            Ppat_record Open
                            [
                              "tyext_constructors" (typing/rec_check.ml[957,31506+19]..[957,31506+37])
                                pattern (typing/rec_check.ml[957,31506+40]..[957,31506+44])
                                  Ppat_var "exts" (typing/rec_check.ml[957,31506+40]..[957,31506+44])
                            ]
                      expression (typing/rec_check.ml[958,31558+6]..[961,31683+37])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/rec_check.ml[958,31558+10]..[958,31558+17])
                              Ppat_var "ext_ids" (typing/rec_check.ml[958,31558+10]..[958,31558+17])
                            expression (typing/rec_check.ml[958,31558+20]..[958,31558+62])
                              Pexp_apply
                              expression (typing/rec_check.ml[958,31558+20]..[958,31558+28])
                                Pexp_ident "List.map" (typing/rec_check.ml[958,31558+20]..[958,31558+28])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[958,31558+29]..[958,31558+57])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/rec_check.ml[958,31558+34]..[958,31558+50])
                                      Ppat_record Open
                                      [
                                        "ext_id" (typing/rec_check.ml[958,31558+35]..[958,31558+41])
                                          pattern (typing/rec_check.ml[958,31558+44]..[958,31558+46])
                                            Ppat_var "id" (typing/rec_check.ml[958,31558+44]..[958,31558+46])
                                      ]
                                    expression (typing/rec_check.ml[958,31558+54]..[958,31558+56])
                                      Pexp_ident "id" (typing/rec_check.ml[958,31558+54]..[958,31558+56])
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[958,31558+58]..[958,31558+62])
                                    Pexp_ident "exts" (typing/rec_check.ml[958,31558+58]..[958,31558+62])
                              ]
                        ]
                        expression (typing/rec_check.ml[959,31624+6]..[961,31683+37])
                          Pexp_apply
                          expression (typing/rec_check.ml[959,31624+6]..[959,31624+14])
                            Pexp_ident "Env.join" (typing/rec_check.ml[959,31624+6]..[959,31624+14])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[960,31639+8]..[960,31639+43])
                                Pexp_apply
                                expression (typing/rec_check.ml[960,31639+9]..[960,31639+13])
                                  Pexp_ident "list" (typing/rec_check.ml[960,31639+9]..[960,31639+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[960,31639+14]..[960,31639+35])
                                      Pexp_ident "extension_constructor" (typing/rec_check.ml[960,31639+14]..[960,31639+35])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[960,31639+36]..[960,31639+40])
                                      Pexp_ident "exts" (typing/rec_check.ml[960,31639+36]..[960,31639+40])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[960,31639+41]..[960,31639+42])
                                      Pexp_ident "m" (typing/rec_check.ml[960,31639+41]..[960,31639+42])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[961,31683+8]..[961,31683+37])
                                Pexp_apply
                                expression (typing/rec_check.ml[961,31683+9]..[961,31683+24])
                                  Pexp_ident "Env.remove_list" (typing/rec_check.ml[961,31683+9]..[961,31683+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[961,31683+25]..[961,31683+32])
                                      Pexp_ident "ext_ids" (typing/rec_check.ml[961,31683+25]..[961,31683+32])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[961,31683+33]..[961,31683+36])
                                      Pexp_ident "env" (typing/rec_check.ml[961,31683+33]..[961,31683+36])
                                ]
                          ]
                    <case>
                      pattern (typing/rec_check.ml[962,31721+6]..[962,31721+49])
                        Ppat_construct "Tstr_exception" (typing/rec_check.ml[962,31721+6]..[962,31721+20])
                        Some
                          []
                          pattern (typing/rec_check.ml[962,31721+21]..[962,31721+49])
                            Ppat_record Open
                            [
                              "tyexn_constructor" (typing/rec_check.ml[962,31721+22]..[962,31721+39])
                                pattern (typing/rec_check.ml[962,31721+42]..[962,31721+45])
                                  Ppat_var "ext" (typing/rec_check.ml[962,31721+42]..[962,31721+45])
                            ]
                      expression (typing/rec_check.ml[963,31774+6]..[965,31827+35])
                        Pexp_apply
                        expression (typing/rec_check.ml[963,31774+6]..[963,31774+14])
                          Pexp_ident "Env.join" (typing/rec_check.ml[963,31774+6]..[963,31774+14])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[964,31789+8]..[964,31789+37])
                              Pexp_apply
                              expression (typing/rec_check.ml[964,31789+9]..[964,31789+30])
                                Pexp_ident "extension_constructor" (typing/rec_check.ml[964,31789+9]..[964,31789+30])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[964,31789+31]..[964,31789+34])
                                    Pexp_ident "ext" (typing/rec_check.ml[964,31789+31]..[964,31789+34])
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[964,31789+35]..[964,31789+36])
                                    Pexp_ident "m" (typing/rec_check.ml[964,31789+35]..[964,31789+36])
                              ]
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[965,31827+8]..[965,31827+35])
                              Pexp_apply
                              expression (typing/rec_check.ml[965,31827+9]..[965,31827+19])
                                Pexp_ident "Env.remove" (typing/rec_check.ml[965,31827+9]..[965,31827+19])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[965,31827+20]..[965,31827+30])
                                    Pexp_field
                                    expression (typing/rec_check.ml[965,31827+20]..[965,31827+23])
                                      Pexp_ident "ext" (typing/rec_check.ml[965,31827+20]..[965,31827+23])
                                    "ext_id" (typing/rec_check.ml[965,31827+24]..[965,31827+30])
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[965,31827+31]..[965,31827+34])
                                    Pexp_ident "env" (typing/rec_check.ml[965,31827+31]..[965,31827+34])
                              ]
                        ]
                    <case>
                      pattern (typing/rec_check.ml[966,31863+6]..[968,31908+22])
                        Ppat_or
                        pattern (typing/rec_check.ml[966,31863+6]..[967,31884+23])
                          Ppat_or
                          pattern (typing/rec_check.ml[966,31863+6]..[966,31863+20])
                            Ppat_construct "Tstr_modtype" (typing/rec_check.ml[966,31863+6]..[966,31863+18])
                            Some
                              []
                              pattern (typing/rec_check.ml[966,31863+19]..[966,31863+20])
                                Ppat_any
                          pattern (typing/rec_check.ml[967,31884+6]..[967,31884+23])
                            Ppat_construct "Tstr_class_type" (typing/rec_check.ml[967,31884+6]..[967,31884+21])
                            Some
                              []
                              pattern (typing/rec_check.ml[967,31884+22]..[967,31884+23])
                                Ppat_any
                        pattern (typing/rec_check.ml[968,31908+6]..[968,31908+22])
                          Ppat_construct "Tstr_attribute" (typing/rec_check.ml[968,31908+6]..[968,31908+20])
                          Some
                            []
                            pattern (typing/rec_check.ml[968,31908+21]..[968,31908+22])
                              Ppat_any
                      expression (typing/rec_check.ml[969,31934+6]..[969,31934+9])
                        Pexp_ident "env" (typing/rec_check.ml[969,31934+6]..[969,31934+9])
                    <case>
                      pattern (typing/rec_check.ml[970,31944+6]..[970,31944+18])
                        Ppat_construct "Tstr_open" (typing/rec_check.ml[970,31944+6]..[970,31944+15])
                        Some
                          []
                          pattern (typing/rec_check.ml[970,31944+16]..[970,31944+18])
                            Ppat_var "od" (typing/rec_check.ml[970,31944+16]..[970,31944+18])
                      expression (typing/rec_check.ml[971,31966+6]..[971,31966+31])
                        Pexp_apply
                        expression (typing/rec_check.ml[971,31966+6]..[971,31966+22])
                          Pexp_ident "open_declaration" (typing/rec_check.ml[971,31966+6]..[971,31966+22])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[971,31966+23]..[971,31966+25])
                              Pexp_ident "od" (typing/rec_check.ml[971,31966+23]..[971,31966+25])
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[971,31966+26]..[971,31966+27])
                              Pexp_ident "m" (typing/rec_check.ml[971,31966+26]..[971,31966+27])
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[971,31966+28]..[971,31966+31])
                              Pexp_ident "env" (typing/rec_check.ml[971,31966+28]..[971,31966+31])
                        ]
                    <case>
                      pattern (typing/rec_check.ml[972,31998+6]..[972,31998+24])
                        Ppat_construct "Tstr_class" (typing/rec_check.ml[972,31998+6]..[972,31998+16])
                        Some
                          []
                          pattern (typing/rec_check.ml[972,31998+17]..[972,31998+24])
                            Ppat_var "classes" (typing/rec_check.ml[972,31998+17]..[972,31998+24])
                      expression (typing/rec_check.ml[973,32026+8]..[980,32323+41])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/rec_check.ml[973,32026+12]..[973,32026+21])
                              Ppat_var "class_ids" (typing/rec_check.ml[973,32026+12]..[973,32026+21])
                            expression (typing/rec_check.ml[974,32050+10]..[975,32108+35])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/rec_check.ml[974,32050+14]..[974,32050+22])
                                    Ppat_var "class_id" (typing/rec_check.ml[974,32050+14]..[974,32050+22])
                                  expression (typing/rec_check.ml[974,32050+23]..[974,32050+54]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/rec_check.ml[974,32050+23]..[974,32050+49])
                                      Ppat_tuple
                                      [
                                        pattern (typing/rec_check.ml[974,32050+24]..[974,32050+45])
                                          Ppat_record Open
                                          [
                                            "ci_id_class" (typing/rec_check.ml[974,32050+25]..[974,32050+36])
                                              pattern (typing/rec_check.ml[974,32050+39]..[974,32050+41])
                                                Ppat_var "id" (typing/rec_check.ml[974,32050+39]..[974,32050+41])
                                          ]
                                        pattern (typing/rec_check.ml[974,32050+47]..[974,32050+48])
                                          Ppat_any
                                      ]
                                    expression (typing/rec_check.ml[974,32050+52]..[974,32050+54])
                                      Pexp_ident "id" (typing/rec_check.ml[974,32050+52]..[974,32050+54])
                              ]
                              expression (typing/rec_check.ml[975,32108+10]..[975,32108+35])
                                Pexp_apply
                                expression (typing/rec_check.ml[975,32108+10]..[975,32108+18])
                                  Pexp_ident "List.map" (typing/rec_check.ml[975,32108+10]..[975,32108+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[975,32108+19]..[975,32108+27])
                                      Pexp_ident "class_id" (typing/rec_check.ml[975,32108+19]..[975,32108+27])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[975,32108+28]..[975,32108+35])
                                      Pexp_ident "classes" (typing/rec_check.ml[975,32108+28]..[975,32108+35])
                                ]
                        ]
                        expression (typing/rec_check.ml[976,32147+8]..[980,32323+41])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/rec_check.ml[976,32147+12]..[976,32147+29])
                                Ppat_var "class_declaration" (typing/rec_check.ml[976,32147+12]..[976,32147+29])
                              expression (typing/rec_check.ml[976,32147+30]..[977,32199+58]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/rec_check.ml[976,32147+30]..[976,32147+47])
                                  Ppat_tuple
                                  [
                                    pattern (typing/rec_check.ml[976,32147+31]..[976,32147+43])
                                      Ppat_record Open
                                      [
                                        "ci_expr" (typing/rec_check.ml[976,32147+32]..[976,32147+39]) ghost
                                          pattern (typing/rec_check.ml[976,32147+32]..[976,32147+39])
                                            Ppat_var "ci_expr" (typing/rec_check.ml[976,32147+32]..[976,32147+39])
                                      ]
                                    pattern (typing/rec_check.ml[976,32147+45]..[976,32147+46])
                                      Ppat_any
                                  ]
                                expression (typing/rec_check.ml[976,32147+48]..[977,32199+58]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/rec_check.ml[976,32147+48]..[976,32147+49])
                                    Ppat_var "m" (typing/rec_check.ml[976,32147+48]..[976,32147+49])
                                  expression (typing/rec_check.ml[977,32199+10]..[977,32199+58])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[977,32199+10]..[977,32199+25])
                                      Pexp_ident "Env.remove_list" (typing/rec_check.ml[977,32199+10]..[977,32199+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[977,32199+26]..[977,32199+35])
                                          Pexp_ident "class_ids" (typing/rec_check.ml[977,32199+26]..[977,32199+35])
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[977,32199+36]..[977,32199+58])
                                          Pexp_apply
                                          expression (typing/rec_check.ml[977,32199+37]..[977,32199+47])
                                            Pexp_ident "class_expr" (typing/rec_check.ml[977,32199+37]..[977,32199+47])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[977,32199+48]..[977,32199+55])
                                                Pexp_ident "ci_expr" (typing/rec_check.ml[977,32199+48]..[977,32199+55])
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[977,32199+56]..[977,32199+57])
                                                Pexp_ident "m" (typing/rec_check.ml[977,32199+56]..[977,32199+57])
                                          ]
                                    ]
                          ]
                          expression (typing/rec_check.ml[978,32261+8]..[980,32323+41])
                            Pexp_apply
                            expression (typing/rec_check.ml[978,32261+8]..[978,32261+16])
                              Pexp_ident "Env.join" (typing/rec_check.ml[978,32261+8]..[978,32261+16])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[979,32278+10]..[979,32278+44])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[979,32278+11]..[979,32278+15])
                                    Pexp_ident "list" (typing/rec_check.ml[979,32278+11]..[979,32278+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[979,32278+16]..[979,32278+33])
                                        Pexp_ident "class_declaration" (typing/rec_check.ml[979,32278+16]..[979,32278+33])
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[979,32278+34]..[979,32278+41])
                                        Pexp_ident "classes" (typing/rec_check.ml[979,32278+34]..[979,32278+41])
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[979,32278+42]..[979,32278+43])
                                        Pexp_ident "m" (typing/rec_check.ml[979,32278+42]..[979,32278+43])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[980,32323+10]..[980,32323+41])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[980,32323+11]..[980,32323+26])
                                    Pexp_ident "Env.remove_list" (typing/rec_check.ml[980,32323+11]..[980,32323+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[980,32323+27]..[980,32323+36])
                                        Pexp_ident "class_ids" (typing/rec_check.ml[980,32323+27]..[980,32323+36])
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[980,32323+37]..[980,32323+40])
                                        Pexp_ident "env" (typing/rec_check.ml[980,32323+37]..[980,32323+40])
                                  ]
                            ]
                    <case>
                      pattern (typing/rec_check.ml[981,32365+6]..[981,32365+58])
                        Ppat_construct "Tstr_include" (typing/rec_check.ml[981,32365+6]..[981,32365+18])
                        Some
                          []
                          pattern (typing/rec_check.ml[981,32365+19]..[981,32365+58])
                            Ppat_record Open
                            [
                              "incl_mod" (typing/rec_check.ml[981,32365+21]..[981,32365+29])
                                pattern (typing/rec_check.ml[981,32365+32]..[981,32365+36])
                                  Ppat_var "mexp" (typing/rec_check.ml[981,32365+32]..[981,32365+36])
                              "incl_type" (typing/rec_check.ml[981,32365+38]..[981,32365+47])
                                pattern (typing/rec_check.ml[981,32365+50]..[981,32365+53])
                                  Ppat_var "mty" (typing/rec_check.ml[981,32365+50]..[981,32365+53])
                            ]
                      expression (typing/rec_check.ml[982,32427+6]..[983,32492+65])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/rec_check.ml[982,32427+10]..[982,32427+22])
                              Ppat_var "included_ids" (typing/rec_check.ml[982,32427+10]..[982,32427+22])
                            expression (typing/rec_check.ml[982,32427+25]..[982,32427+61])
                              Pexp_apply
                              expression (typing/rec_check.ml[982,32427+25]..[982,32427+33])
                                Pexp_ident "List.map" (typing/rec_check.ml[982,32427+25]..[982,32427+33])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[982,32427+34]..[982,32427+57])
                                    Pexp_ident "Types.signature_item_id" (typing/rec_check.ml[982,32427+34]..[982,32427+57])
                                <arg>
                                Nolabel
                                  expression (typing/rec_check.ml[982,32427+58]..[982,32427+61])
                                    Pexp_ident "mty" (typing/rec_check.ml[982,32427+58]..[982,32427+61])
                              ]
                        ]
                        expression (typing/rec_check.ml[983,32492+6]..[983,32492+65])
                          Pexp_apply
                          expression (typing/rec_check.ml[983,32492+6]..[983,32492+14])
                            Pexp_ident "Env.join" (typing/rec_check.ml[983,32492+6]..[983,32492+14])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[983,32492+15]..[983,32492+30])
                                Pexp_apply
                                expression (typing/rec_check.ml[983,32492+16]..[983,32492+22])
                                  Pexp_ident "modexp" (typing/rec_check.ml[983,32492+16]..[983,32492+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[983,32492+23]..[983,32492+27])
                                      Pexp_ident "mexp" (typing/rec_check.ml[983,32492+23]..[983,32492+27])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[983,32492+28]..[983,32492+29])
                                      Pexp_ident "m" (typing/rec_check.ml[983,32492+28]..[983,32492+29])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[983,32492+31]..[983,32492+65])
                                Pexp_apply
                                expression (typing/rec_check.ml[983,32492+32]..[983,32492+47])
                                  Pexp_ident "Env.remove_list" (typing/rec_check.ml[983,32492+32]..[983,32492+47])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[983,32492+48]..[983,32492+60])
                                      Pexp_ident "included_ids" (typing/rec_check.ml[983,32492+48]..[983,32492+60])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[983,32492+61]..[983,32492+64])
                                      Pexp_ident "env" (typing/rec_check.ml[983,32492+61]..[983,32492+64])
                                ]
                          ]
                  ]
          core_type (typing/rec_check.ml[929,30621+21]..[929,30621+58])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[929,30621+21]..[929,30621+45])
              Ptyp_constr "Typedtree.structure_item" (typing/rec_check.ml[929,30621+21]..[929,30621+45])
              []
            core_type (typing/rec_check.ml[929,30621+49]..[929,30621+58])
              Ptyp_constr "bind_judg" (typing/rec_check.ml[929,30621+49]..[929,30621+58])
              []
      <def>
        pattern (typing/rec_check.ml[986,32592+4]..[986,32592+74]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[986,32592+4]..[986,32592+18])
            Ppat_var "module_binding" (typing/rec_check.ml[986,32592+4]..[986,32592+18])
          core_type (typing/rec_check.ml[986,32592+21]..[986,32592+74]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[986,32592+21]..[986,32592+74])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[986,32592+22]..[986,32592+60])
                Ptyp_tuple
                [
                  core_type (typing/rec_check.ml[986,32592+22]..[986,32592+36])
                    Ptyp_constr "option" (typing/rec_check.ml[986,32592+30]..[986,32592+36])
                    [
                      core_type (typing/rec_check.ml[986,32592+22]..[986,32592+29])
                        Ptyp_constr "Ident.t" (typing/rec_check.ml[986,32592+22]..[986,32592+29])
                        []
                    ]
                  core_type (typing/rec_check.ml[986,32592+39]..[986,32592+60])
                    Ptyp_constr "Typedtree.module_expr" (typing/rec_check.ml[986,32592+39]..[986,32592+60])
                    []
                ]
              core_type (typing/rec_check.ml[986,32592+65]..[986,32592+74])
                Ptyp_constr "bind_judg" (typing/rec_check.ml[986,32592+65]..[986,32592+74])
                []
        expression (typing/rec_check.ml[986,32592+4]..[1001,33083+29])
          Pexp_constraint
          expression (typing/rec_check.ml[987,32669+2]..[1001,33083+29])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[987,32669+6]..[987,32669+16])
              Ppat_tuple
              [
                pattern (typing/rec_check.ml[987,32669+7]..[987,32669+9])
                  Ppat_var "id" (typing/rec_check.ml[987,32669+7]..[987,32669+9])
                pattern (typing/rec_check.ml[987,32669+11]..[987,32669+15])
                  Ppat_var "mexp" (typing/rec_check.ml[987,32669+11]..[987,32669+15])
              ]
            expression (typing/rec_check.ml[987,32669+17]..[1001,33083+29]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[987,32669+17]..[987,32669+18])
                Ppat_var "m" (typing/rec_check.ml[987,32669+17]..[987,32669+18])
              expression (typing/rec_check.ml[987,32669+19]..[1001,33083+29]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/rec_check.ml[987,32669+19]..[987,32669+22])
                  Ppat_var "env" (typing/rec_check.ml[987,32669+19]..[987,32669+22])
                expression (typing/rec_check.ml[993,32836+6]..[1001,33083+29])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/rec_check.ml[993,32836+10]..[993,32836+21])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[993,32836+10]..[993,32836+16])
                            Ppat_var "judg_E" (typing/rec_check.ml[993,32836+10]..[993,32836+16])
                          pattern (typing/rec_check.ml[993,32836+18]..[993,32836+21])
                            Ppat_var "env" (typing/rec_check.ml[993,32836+18]..[993,32836+21])
                        ]
                      expression (typing/rec_check.ml[994,32860+8]..[999,33052+21])
                        Pexp_match
                        expression (typing/rec_check.ml[994,32860+14]..[994,32860+16])
                          Pexp_ident "id" (typing/rec_check.ml[994,32860+14]..[994,32860+16])
                        [
                          <case>
                            pattern (typing/rec_check.ml[995,32882+10]..[995,32882+14])
                              Ppat_construct "None" (typing/rec_check.ml[995,32882+10]..[995,32882+14])
                              None
                            expression (typing/rec_check.ml[995,32882+18]..[995,32882+43])
                              Pexp_tuple
                              [
                                expression (typing/rec_check.ml[995,32882+18]..[995,32882+38])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[995,32882+30]..[995,32882+32])
                                    Pexp_ident "<<" (typing/rec_check.ml[995,32882+30]..[995,32882+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[995,32882+18]..[995,32882+29])
                                        Pexp_apply
                                        expression (typing/rec_check.ml[995,32882+18]..[995,32882+24])
                                          Pexp_ident "modexp" (typing/rec_check.ml[995,32882+18]..[995,32882+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/rec_check.ml[995,32882+25]..[995,32882+29])
                                              Pexp_ident "mexp" (typing/rec_check.ml[995,32882+25]..[995,32882+29])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[995,32882+33]..[995,32882+38])
                                        Pexp_construct "Guard" (typing/rec_check.ml[995,32882+33]..[995,32882+38])
                                        None
                                  ]
                                expression (typing/rec_check.ml[995,32882+40]..[995,32882+43])
                                  Pexp_ident "env" (typing/rec_check.ml[995,32882+40]..[995,32882+43])
                              ]
                          <case>
                            pattern (typing/rec_check.ml[996,32926+10]..[996,32926+17])
                              Ppat_construct "Some" (typing/rec_check.ml[996,32926+10]..[996,32926+14])
                              Some
                                []
                                pattern (typing/rec_check.ml[996,32926+15]..[996,32926+17])
                                  Ppat_var "id" (typing/rec_check.ml[996,32926+15]..[996,32926+17])
                            expression (typing/rec_check.ml[997,32947+10]..[999,33052+21])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/rec_check.ml[997,32947+14]..[997,32947+21])
                                    Ppat_tuple
                                    [
                                      pattern (typing/rec_check.ml[997,32947+14]..[997,32947+16])
                                        Ppat_var "mM" (typing/rec_check.ml[997,32947+14]..[997,32947+16])
                                      pattern (typing/rec_check.ml[997,32947+18]..[997,32947+21])
                                        Ppat_var "env" (typing/rec_check.ml[997,32947+18]..[997,32947+21])
                                    ]
                                  expression (typing/rec_check.ml[997,32947+24]..[997,32947+39])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[997,32947+24]..[997,32947+32])
                                      Pexp_ident "Env.take" (typing/rec_check.ml[997,32947+24]..[997,32947+32])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[997,32947+33]..[997,32947+35])
                                          Pexp_ident "id" (typing/rec_check.ml[997,32947+33]..[997,32947+35])
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[997,32947+36]..[997,32947+39])
                                          Pexp_ident "env" (typing/rec_check.ml[997,32947+36]..[997,32947+39])
                                    ]
                              ]
                              expression (typing/rec_check.ml[998,32990+10]..[999,33052+21])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/rec_check.ml[998,32990+14]..[998,32990+20])
                                      Ppat_var "judg_E" (typing/rec_check.ml[998,32990+14]..[998,32990+20])
                                    expression (typing/rec_check.ml[998,32990+23]..[998,32990+58])
                                      Pexp_apply
                                      expression (typing/rec_check.ml[998,32990+35]..[998,32990+37])
                                        Pexp_ident "<<" (typing/rec_check.ml[998,32990+35]..[998,32990+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[998,32990+23]..[998,32990+34])
                                            Pexp_apply
                                            expression (typing/rec_check.ml[998,32990+23]..[998,32990+29])
                                              Pexp_ident "modexp" (typing/rec_check.ml[998,32990+23]..[998,32990+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[998,32990+30]..[998,32990+34])
                                                  Pexp_ident "mexp" (typing/rec_check.ml[998,32990+30]..[998,32990+34])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[998,32990+38]..[998,32990+58])
                                            Pexp_apply
                                            expression (typing/rec_check.ml[998,32990+39]..[998,32990+48])
                                              Pexp_ident "Mode.join" (typing/rec_check.ml[998,32990+39]..[998,32990+48])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[998,32990+49]..[998,32990+51])
                                                  Pexp_ident "mM" (typing/rec_check.ml[998,32990+49]..[998,32990+51])
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[998,32990+52]..[998,32990+57])
                                                  Pexp_construct "Guard" (typing/rec_check.ml[998,32990+52]..[998,32990+57])
                                                  None
                                            ]
                                      ]
                                ]
                                expression (typing/rec_check.ml[999,33052+10]..[999,33052+21])
                                  Pexp_tuple
                                  [
                                    expression (typing/rec_check.ml[999,33052+10]..[999,33052+16])
                                      Pexp_ident "judg_E" (typing/rec_check.ml[999,33052+10]..[999,33052+16])
                                    expression (typing/rec_check.ml[999,33052+18]..[999,33052+21])
                                      Pexp_ident "env" (typing/rec_check.ml[999,33052+18]..[999,33052+21])
                                  ]
                        ]
                  ]
                  expression (typing/rec_check.ml[1001,33083+6]..[1001,33083+29])
                    Pexp_apply
                    expression (typing/rec_check.ml[1001,33083+6]..[1001,33083+14])
                      Pexp_ident "Env.join" (typing/rec_check.ml[1001,33083+6]..[1001,33083+14])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[1001,33083+15]..[1001,33083+25])
                          Pexp_apply
                          expression (typing/rec_check.ml[1001,33083+16]..[1001,33083+22])
                            Pexp_ident "judg_E" (typing/rec_check.ml[1001,33083+16]..[1001,33083+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[1001,33083+23]..[1001,33083+24])
                                Pexp_ident "m" (typing/rec_check.ml[1001,33083+23]..[1001,33083+24])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[1001,33083+26]..[1001,33083+29])
                          Pexp_ident "env" (typing/rec_check.ml[1001,33083+26]..[1001,33083+29])
                    ]
          core_type (typing/rec_check.ml[986,32592+21]..[986,32592+74])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[986,32592+22]..[986,32592+60])
              Ptyp_tuple
              [
                core_type (typing/rec_check.ml[986,32592+22]..[986,32592+36])
                  Ptyp_constr "option" (typing/rec_check.ml[986,32592+30]..[986,32592+36])
                  [
                    core_type (typing/rec_check.ml[986,32592+22]..[986,32592+29])
                      Ptyp_constr "Ident.t" (typing/rec_check.ml[986,32592+22]..[986,32592+29])
                      []
                  ]
                core_type (typing/rec_check.ml[986,32592+39]..[986,32592+60])
                  Ptyp_constr "Typedtree.module_expr" (typing/rec_check.ml[986,32592+39]..[986,32592+60])
                  []
              ]
            core_type (typing/rec_check.ml[986,32592+65]..[986,32592+74])
              Ptyp_constr "bind_judg" (typing/rec_check.ml[986,32592+65]..[986,32592+74])
              []
      <def>
        pattern (typing/rec_check.ml[1003,33114+4]..[1003,33114+62]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[1003,33114+4]..[1003,33114+20])
            Ppat_var "open_declaration" (typing/rec_check.ml[1003,33114+4]..[1003,33114+20])
          core_type (typing/rec_check.ml[1003,33114+23]..[1003,33114+62]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[1003,33114+23]..[1003,33114+62])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[1003,33114+23]..[1003,33114+49])
                Ptyp_constr "Typedtree.open_declaration" (typing/rec_check.ml[1003,33114+23]..[1003,33114+49])
                []
              core_type (typing/rec_check.ml[1003,33114+53]..[1003,33114+62])
                Ptyp_constr "bind_judg" (typing/rec_check.ml[1003,33114+53]..[1003,33114+62])
                []
        expression (typing/rec_check.ml[1003,33114+4]..[1007,33336+57])
          Pexp_constraint
          expression (typing/rec_check.ml[1004,33179+2]..[1007,33336+57])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[1004,33179+6]..[1004,33179+52])
              Ppat_record Open
              [
                "open_expr" (typing/rec_check.ml[1004,33179+8]..[1004,33179+17])
                  pattern (typing/rec_check.ml[1004,33179+20]..[1004,33179+24])
                    Ppat_var "mexp" (typing/rec_check.ml[1004,33179+20]..[1004,33179+24])
                "open_bound_items" (typing/rec_check.ml[1004,33179+26]..[1004,33179+42])
                  pattern (typing/rec_check.ml[1004,33179+45]..[1004,33179+47])
                    Ppat_var "sg" (typing/rec_check.ml[1004,33179+45]..[1004,33179+47])
              ]
            expression (typing/rec_check.ml[1004,33179+53]..[1007,33336+57]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[1004,33179+53]..[1004,33179+54])
                Ppat_var "m" (typing/rec_check.ml[1004,33179+53]..[1004,33179+54])
              expression (typing/rec_check.ml[1004,33179+55]..[1007,33336+57]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/rec_check.ml[1004,33179+55]..[1004,33179+58])
                  Ppat_var "env" (typing/rec_check.ml[1004,33179+55]..[1004,33179+58])
                expression (typing/rec_check.ml[1005,33241+6]..[1007,33336+57])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/rec_check.ml[1005,33241+10]..[1005,33241+16])
                        Ppat_var "judg_E" (typing/rec_check.ml[1005,33241+10]..[1005,33241+16])
                      expression (typing/rec_check.ml[1005,33241+19]..[1005,33241+30])
                        Pexp_apply
                        expression (typing/rec_check.ml[1005,33241+19]..[1005,33241+25])
                          Pexp_ident "modexp" (typing/rec_check.ml[1005,33241+19]..[1005,33241+25])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[1005,33241+26]..[1005,33241+30])
                              Pexp_ident "mexp" (typing/rec_check.ml[1005,33241+26]..[1005,33241+30])
                        ]
                  ]
                  expression (typing/rec_check.ml[1006,33275+6]..[1007,33336+57])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/rec_check.ml[1006,33275+10]..[1006,33275+19])
                          Ppat_var "bound_ids" (typing/rec_check.ml[1006,33275+10]..[1006,33275+19])
                        expression (typing/rec_check.ml[1006,33275+22]..[1006,33275+57])
                          Pexp_apply
                          expression (typing/rec_check.ml[1006,33275+22]..[1006,33275+30])
                            Pexp_ident "List.map" (typing/rec_check.ml[1006,33275+22]..[1006,33275+30])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[1006,33275+31]..[1006,33275+54])
                                Pexp_ident "Types.signature_item_id" (typing/rec_check.ml[1006,33275+31]..[1006,33275+54])
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[1006,33275+55]..[1006,33275+57])
                                Pexp_ident "sg" (typing/rec_check.ml[1006,33275+55]..[1006,33275+57])
                          ]
                    ]
                    expression (typing/rec_check.ml[1007,33336+6]..[1007,33336+57])
                      Pexp_apply
                      expression (typing/rec_check.ml[1007,33336+6]..[1007,33336+14])
                        Pexp_ident "Env.join" (typing/rec_check.ml[1007,33336+6]..[1007,33336+14])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1007,33336+15]..[1007,33336+25])
                            Pexp_apply
                            expression (typing/rec_check.ml[1007,33336+16]..[1007,33336+22])
                              Pexp_ident "judg_E" (typing/rec_check.ml[1007,33336+16]..[1007,33336+22])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1007,33336+23]..[1007,33336+24])
                                  Pexp_ident "m" (typing/rec_check.ml[1007,33336+23]..[1007,33336+24])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1007,33336+26]..[1007,33336+57])
                            Pexp_apply
                            expression (typing/rec_check.ml[1007,33336+27]..[1007,33336+42])
                              Pexp_ident "Env.remove_list" (typing/rec_check.ml[1007,33336+27]..[1007,33336+42])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1007,33336+43]..[1007,33336+52])
                                  Pexp_ident "bound_ids" (typing/rec_check.ml[1007,33336+43]..[1007,33336+52])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1007,33336+53]..[1007,33336+56])
                                  Pexp_ident "env" (typing/rec_check.ml[1007,33336+53]..[1007,33336+56])
                            ]
                      ]
          core_type (typing/rec_check.ml[1003,33114+23]..[1003,33114+62])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[1003,33114+23]..[1003,33114+49])
              Ptyp_constr "Typedtree.open_declaration" (typing/rec_check.ml[1003,33114+23]..[1003,33114+49])
              []
            core_type (typing/rec_check.ml[1003,33114+53]..[1003,33114+62])
              Ptyp_constr "bind_judg" (typing/rec_check.ml[1003,33114+53]..[1003,33114+62])
              []
      <def>
        pattern (typing/rec_check.ml[1009,33395+4]..[1010,33425+62]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[1009,33395+4]..[1009,33395+29])
            Ppat_var "recursive_module_bindings" (typing/rec_check.ml[1009,33395+4]..[1009,33395+29])
          core_type (typing/rec_check.ml[1010,33425+4]..[1010,33425+62]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[1010,33425+4]..[1010,33425+62])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[1010,33425+4]..[1010,33425+49])
                Ptyp_constr "list" (typing/rec_check.ml[1010,33425+45]..[1010,33425+49])
                [
                  core_type (typing/rec_check.ml[1010,33425+5]..[1010,33425+43])
                    Ptyp_tuple
                    [
                      core_type (typing/rec_check.ml[1010,33425+5]..[1010,33425+19])
                        Ptyp_constr "option" (typing/rec_check.ml[1010,33425+13]..[1010,33425+19])
                        [
                          core_type (typing/rec_check.ml[1010,33425+5]..[1010,33425+12])
                            Ptyp_constr "Ident.t" (typing/rec_check.ml[1010,33425+5]..[1010,33425+12])
                            []
                        ]
                      core_type (typing/rec_check.ml[1010,33425+22]..[1010,33425+43])
                        Ptyp_constr "Typedtree.module_expr" (typing/rec_check.ml[1010,33425+22]..[1010,33425+43])
                        []
                    ]
                ]
              core_type (typing/rec_check.ml[1010,33425+53]..[1010,33425+62])
                Ptyp_constr "bind_judg" (typing/rec_check.ml[1010,33425+53]..[1010,33425+62])
                []
        expression (typing/rec_check.ml[1009,33395+4]..[1023,33839+67])
          Pexp_constraint
          expression (typing/rec_check.ml[1011,33490+2]..[1023,33839+67])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[1011,33490+6]..[1011,33490+16])
              Ppat_var "m_bindings" (typing/rec_check.ml[1011,33490+6]..[1011,33490+16])
            expression (typing/rec_check.ml[1011,33490+17]..[1023,33839+67]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[1011,33490+17]..[1011,33490+18])
                Ppat_var "m" (typing/rec_check.ml[1011,33490+17]..[1011,33490+18])
              expression (typing/rec_check.ml[1011,33490+19]..[1023,33839+67]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/rec_check.ml[1011,33490+19]..[1011,33490+22])
                  Ppat_var "env" (typing/rec_check.ml[1011,33490+19]..[1011,33490+22])
                expression (typing/rec_check.ml[1012,33516+4]..[1023,33839+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/rec_check.ml[1012,33516+8]..[1012,33516+12])
                        Ppat_var "mids" (typing/rec_check.ml[1012,33516+8]..[1012,33516+12])
                      expression (typing/rec_check.ml[1012,33516+15]..[1012,33516+45])
                        Pexp_apply
                        expression (typing/rec_check.ml[1012,33516+15]..[1012,33516+30])
                          Pexp_ident "List.filter_map" (typing/rec_check.ml[1012,33516+15]..[1012,33516+30])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[1012,33516+31]..[1012,33516+34])
                              Pexp_ident "fst" (typing/rec_check.ml[1012,33516+31]..[1012,33516+34])
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[1012,33516+35]..[1012,33516+45])
                              Pexp_ident "m_bindings" (typing/rec_check.ml[1012,33516+35]..[1012,33516+45])
                        ]
                  ]
                  expression (typing/rec_check.ml[1013,33565+4]..[1023,33839+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/rec_check.ml[1013,33565+8]..[1013,33565+15])
                          Ppat_var "binding" (typing/rec_check.ml[1013,33565+8]..[1013,33565+15])
                        expression (typing/rec_check.ml[1013,33565+16]..[1021,33794+37]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/rec_check.ml[1013,33565+16]..[1013,33565+27])
                            Ppat_tuple
                            [
                              pattern (typing/rec_check.ml[1013,33565+17]..[1013,33565+20])
                                Ppat_var "mid" (typing/rec_check.ml[1013,33565+17]..[1013,33565+20])
                              pattern (typing/rec_check.ml[1013,33565+22]..[1013,33565+26])
                                Ppat_var "mexp" (typing/rec_check.ml[1013,33565+22]..[1013,33565+26])
                            ]
                          expression (typing/rec_check.ml[1013,33565+28]..[1021,33794+37]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/rec_check.ml[1013,33565+28]..[1013,33565+29])
                              Ppat_var "m" (typing/rec_check.ml[1013,33565+28]..[1013,33565+29])
                            expression (typing/rec_check.ml[1014,33597+6]..[1021,33794+37])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/rec_check.ml[1014,33597+10]..[1014,33597+16])
                                    Ppat_var "judg_E" (typing/rec_check.ml[1014,33597+10]..[1014,33597+16])
                                  expression (typing/rec_check.ml[1015,33616+8]..[1019,33739+45])
                                    Pexp_match
                                    expression (typing/rec_check.ml[1015,33616+14]..[1015,33616+17])
                                      Pexp_ident "mid" (typing/rec_check.ml[1015,33616+14]..[1015,33616+17])
                                    [
                                      <case>
                                        pattern (typing/rec_check.ml[1016,33639+10]..[1016,33639+14])
                                          Ppat_construct "None" (typing/rec_check.ml[1016,33639+10]..[1016,33639+14])
                                          None
                                        expression (typing/rec_check.ml[1016,33639+18]..[1016,33639+38])
                                          Pexp_apply
                                          expression (typing/rec_check.ml[1016,33639+30]..[1016,33639+32])
                                            Pexp_ident "<<" (typing/rec_check.ml[1016,33639+30]..[1016,33639+32])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[1016,33639+18]..[1016,33639+29])
                                                Pexp_apply
                                                expression (typing/rec_check.ml[1016,33639+18]..[1016,33639+24])
                                                  Pexp_ident "modexp" (typing/rec_check.ml[1016,33639+18]..[1016,33639+24])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/rec_check.ml[1016,33639+25]..[1016,33639+29])
                                                      Pexp_ident "mexp" (typing/rec_check.ml[1016,33639+25]..[1016,33639+29])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[1016,33639+33]..[1016,33639+38])
                                                Pexp_construct "Guard" (typing/rec_check.ml[1016,33639+33]..[1016,33639+38])
                                                None
                                          ]
                                      <case>
                                        pattern (typing/rec_check.ml[1017,33678+10]..[1017,33678+18])
                                          Ppat_construct "Some" (typing/rec_check.ml[1017,33678+10]..[1017,33678+14])
                                          Some
                                            []
                                            pattern (typing/rec_check.ml[1017,33678+15]..[1017,33678+18])
                                              Ppat_var "mid" (typing/rec_check.ml[1017,33678+15]..[1017,33678+18])
                                        expression (typing/rec_check.ml[1018,33700+10]..[1019,33739+45])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/rec_check.ml[1018,33700+14]..[1018,33700+16])
                                                Ppat_var "mM" (typing/rec_check.ml[1018,33700+14]..[1018,33700+16])
                                              expression (typing/rec_check.ml[1018,33700+19]..[1018,33700+35])
                                                Pexp_apply
                                                expression (typing/rec_check.ml[1018,33700+19]..[1018,33700+27])
                                                  Pexp_ident "Env.find" (typing/rec_check.ml[1018,33700+19]..[1018,33700+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/rec_check.ml[1018,33700+28]..[1018,33700+31])
                                                      Pexp_ident "mid" (typing/rec_check.ml[1018,33700+28]..[1018,33700+31])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/rec_check.ml[1018,33700+32]..[1018,33700+35])
                                                      Pexp_ident "env" (typing/rec_check.ml[1018,33700+32]..[1018,33700+35])
                                                ]
                                          ]
                                          expression (typing/rec_check.ml[1019,33739+10]..[1019,33739+45])
                                            Pexp_apply
                                            expression (typing/rec_check.ml[1019,33739+22]..[1019,33739+24])
                                              Pexp_ident "<<" (typing/rec_check.ml[1019,33739+22]..[1019,33739+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[1019,33739+10]..[1019,33739+21])
                                                  Pexp_apply
                                                  expression (typing/rec_check.ml[1019,33739+10]..[1019,33739+16])
                                                    Pexp_ident "modexp" (typing/rec_check.ml[1019,33739+10]..[1019,33739+16])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[1019,33739+17]..[1019,33739+21])
                                                        Pexp_ident "mexp" (typing/rec_check.ml[1019,33739+17]..[1019,33739+21])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[1019,33739+25]..[1019,33739+45])
                                                  Pexp_apply
                                                  expression (typing/rec_check.ml[1019,33739+26]..[1019,33739+35])
                                                    Pexp_ident "Mode.join" (typing/rec_check.ml[1019,33739+26]..[1019,33739+35])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[1019,33739+36]..[1019,33739+38])
                                                        Pexp_ident "mM" (typing/rec_check.ml[1019,33739+36]..[1019,33739+38])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[1019,33739+39]..[1019,33739+44])
                                                        Pexp_construct "Guard" (typing/rec_check.ml[1019,33739+39]..[1019,33739+44])
                                                        None
                                                  ]
                                            ]
                                    ]
                              ]
                              expression (typing/rec_check.ml[1021,33794+6]..[1021,33794+37])
                                Pexp_apply
                                expression (typing/rec_check.ml[1021,33794+6]..[1021,33794+21])
                                  Pexp_ident "Env.remove_list" (typing/rec_check.ml[1021,33794+6]..[1021,33794+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1021,33794+22]..[1021,33794+26])
                                      Pexp_ident "mids" (typing/rec_check.ml[1021,33794+22]..[1021,33794+26])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1021,33794+27]..[1021,33794+37])
                                      Pexp_apply
                                      expression (typing/rec_check.ml[1021,33794+28]..[1021,33794+34])
                                        Pexp_ident "judg_E" (typing/rec_check.ml[1021,33794+28]..[1021,33794+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[1021,33794+35]..[1021,33794+36])
                                            Pexp_ident "m" (typing/rec_check.ml[1021,33794+35]..[1021,33794+36])
                                      ]
                                ]
                    ]
                    expression (typing/rec_check.ml[1023,33839+4]..[1023,33839+67])
                      Pexp_apply
                      expression (typing/rec_check.ml[1023,33839+4]..[1023,33839+12])
                        Pexp_ident "Env.join" (typing/rec_check.ml[1023,33839+4]..[1023,33839+12])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1023,33839+13]..[1023,33839+40])
                            Pexp_apply
                            expression (typing/rec_check.ml[1023,33839+14]..[1023,33839+18])
                              Pexp_ident "list" (typing/rec_check.ml[1023,33839+14]..[1023,33839+18])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1023,33839+19]..[1023,33839+26])
                                  Pexp_ident "binding" (typing/rec_check.ml[1023,33839+19]..[1023,33839+26])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1023,33839+27]..[1023,33839+37])
                                  Pexp_ident "m_bindings" (typing/rec_check.ml[1023,33839+27]..[1023,33839+37])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1023,33839+38]..[1023,33839+39])
                                  Pexp_ident "m" (typing/rec_check.ml[1023,33839+38]..[1023,33839+39])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1023,33839+41]..[1023,33839+67])
                            Pexp_apply
                            expression (typing/rec_check.ml[1023,33839+42]..[1023,33839+57])
                              Pexp_ident "Env.remove_list" (typing/rec_check.ml[1023,33839+42]..[1023,33839+57])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1023,33839+58]..[1023,33839+62])
                                  Pexp_ident "mids" (typing/rec_check.ml[1023,33839+58]..[1023,33839+62])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1023,33839+63]..[1023,33839+66])
                                  Pexp_ident "env" (typing/rec_check.ml[1023,33839+63]..[1023,33839+66])
                            ]
                      ]
          core_type (typing/rec_check.ml[1010,33425+4]..[1010,33425+62])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[1010,33425+4]..[1010,33425+49])
              Ptyp_constr "list" (typing/rec_check.ml[1010,33425+45]..[1010,33425+49])
              [
                core_type (typing/rec_check.ml[1010,33425+5]..[1010,33425+43])
                  Ptyp_tuple
                  [
                    core_type (typing/rec_check.ml[1010,33425+5]..[1010,33425+19])
                      Ptyp_constr "option" (typing/rec_check.ml[1010,33425+13]..[1010,33425+19])
                      [
                        core_type (typing/rec_check.ml[1010,33425+5]..[1010,33425+12])
                          Ptyp_constr "Ident.t" (typing/rec_check.ml[1010,33425+5]..[1010,33425+12])
                          []
                      ]
                    core_type (typing/rec_check.ml[1010,33425+22]..[1010,33425+43])
                      Ptyp_constr "Typedtree.module_expr" (typing/rec_check.ml[1010,33425+22]..[1010,33425+43])
                      []
                  ]
              ]
            core_type (typing/rec_check.ml[1010,33425+53]..[1010,33425+62])
              Ptyp_constr "bind_judg" (typing/rec_check.ml[1010,33425+53]..[1010,33425+62])
              []
      <def>
        pattern (typing/rec_check.ml[1025,33908+4]..[1025,33908+50]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[1025,33908+4]..[1025,33908+14])
            Ppat_var "class_expr" (typing/rec_check.ml[1025,33908+4]..[1025,33908+14])
          core_type (typing/rec_check.ml[1025,33908+17]..[1025,33908+50]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[1025,33908+17]..[1025,33908+50])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[1025,33908+17]..[1025,33908+37])
                Ptyp_constr "Typedtree.class_expr" (typing/rec_check.ml[1025,33908+17]..[1025,33908+37])
                []
              core_type (typing/rec_check.ml[1025,33908+41]..[1025,33908+50])
                Ptyp_constr "term_judg" (typing/rec_check.ml[1025,33908+41]..[1025,33908+50])
                []
        expression (typing/rec_check.ml[1025,33908+4]..[1045,34615+21])
          Pexp_constraint
          expression (typing/rec_check.ml[1026,33961+2]..[1045,34615+21])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[1026,33961+6]..[1026,33961+8])
              Ppat_var "ce" (typing/rec_check.ml[1026,33961+6]..[1026,33961+8])
            expression (typing/rec_check.ml[1026,33961+12]..[1045,34615+21])
              Pexp_match
              expression (typing/rec_check.ml[1026,33961+18]..[1026,33961+28])
                Pexp_field
                expression (typing/rec_check.ml[1026,33961+18]..[1026,33961+20])
                  Pexp_ident "ce" (typing/rec_check.ml[1026,33961+18]..[1026,33961+20])
                "cl_desc" (typing/rec_check.ml[1026,33961+21]..[1026,33961+28])
              [
                <case>
                  pattern (typing/rec_check.ml[1027,33995+6]..[1027,33995+27])
                    Ppat_construct "Tcl_ident" (typing/rec_check.ml[1027,33995+6]..[1027,33995+15])
                    Some
                      []
                      pattern (typing/rec_check.ml[1027,33995+16]..[1027,33995+27])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[1027,33995+17]..[1027,33995+20])
                            Ppat_var "pth" (typing/rec_check.ml[1027,33995+17]..[1027,33995+20])
                          pattern (typing/rec_check.ml[1027,33995+22]..[1027,33995+23])
                            Ppat_any
                          pattern (typing/rec_check.ml[1027,33995+25]..[1027,33995+26])
                            Ppat_any
                        ]
                  expression (typing/rec_check.ml[1028,34026+8]..[1028,34026+31])
                    Pexp_apply
                    expression (typing/rec_check.ml[1028,34026+17]..[1028,34026+19])
                      Pexp_ident "<<" (typing/rec_check.ml[1028,34026+17]..[1028,34026+19])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[1028,34026+8]..[1028,34026+16])
                          Pexp_apply
                          expression (typing/rec_check.ml[1028,34026+8]..[1028,34026+12])
                            Pexp_ident "path" (typing/rec_check.ml[1028,34026+8]..[1028,34026+12])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[1028,34026+13]..[1028,34026+16])
                                Pexp_ident "pth" (typing/rec_check.ml[1028,34026+13]..[1028,34026+16])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[1028,34026+20]..[1028,34026+31])
                          Pexp_construct "Dereference" (typing/rec_check.ml[1028,34026+20]..[1028,34026+31])
                          None
                    ]
                <case>
                  pattern (typing/rec_check.ml[1029,34058+6]..[1029,34058+22])
                    Ppat_construct "Tcl_structure" (typing/rec_check.ml[1029,34058+6]..[1029,34058+19])
                    Some
                      []
                      pattern (typing/rec_check.ml[1029,34058+20]..[1029,34058+22])
                        Ppat_var "cs" (typing/rec_check.ml[1029,34058+20]..[1029,34058+22])
                  expression (typing/rec_check.ml[1030,34084+8]..[1030,34084+26])
                    Pexp_apply
                    expression (typing/rec_check.ml[1030,34084+8]..[1030,34084+23])
                      Pexp_ident "class_structure" (typing/rec_check.ml[1030,34084+8]..[1030,34084+23])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[1030,34084+24]..[1030,34084+26])
                          Pexp_ident "cs" (typing/rec_check.ml[1030,34084+24]..[1030,34084+26])
                    ]
                <case>
                  pattern (typing/rec_check.ml[1031,34111+6]..[1031,34111+33])
                    Ppat_construct "Tcl_fun" (typing/rec_check.ml[1031,34111+6]..[1031,34111+13])
                    Some
                      []
                      pattern (typing/rec_check.ml[1031,34111+14]..[1031,34111+33])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[1031,34111+15]..[1031,34111+16])
                            Ppat_any
                          pattern (typing/rec_check.ml[1031,34111+18]..[1031,34111+19])
                            Ppat_any
                          pattern (typing/rec_check.ml[1031,34111+21]..[1031,34111+25])
                            Ppat_var "args" (typing/rec_check.ml[1031,34111+21]..[1031,34111+25])
                          pattern (typing/rec_check.ml[1031,34111+27]..[1031,34111+29])
                            Ppat_var "ce" (typing/rec_check.ml[1031,34111+27]..[1031,34111+29])
                          pattern (typing/rec_check.ml[1031,34111+31]..[1031,34111+32])
                            Ppat_any
                        ]
                  expression (typing/rec_check.ml[1032,34148+8]..[1033,34187+47])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/rec_check.ml[1032,34148+12]..[1032,34148+15])
                          Ppat_var "ids" (typing/rec_check.ml[1032,34148+12]..[1032,34148+15])
                        expression (typing/rec_check.ml[1032,34148+18]..[1032,34148+35])
                          Pexp_apply
                          expression (typing/rec_check.ml[1032,34148+18]..[1032,34148+26])
                            Pexp_ident "List.map" (typing/rec_check.ml[1032,34148+18]..[1032,34148+26])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[1032,34148+27]..[1032,34148+30])
                                Pexp_ident "fst" (typing/rec_check.ml[1032,34148+27]..[1032,34148+30])
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[1032,34148+31]..[1032,34148+35])
                                Pexp_ident "args" (typing/rec_check.ml[1032,34148+31]..[1032,34148+35])
                          ]
                    ]
                    expression (typing/rec_check.ml[1033,34187+8]..[1033,34187+47])
                      Pexp_apply
                      expression (typing/rec_check.ml[1033,34187+8]..[1033,34187+18])
                        Pexp_ident "remove_ids" (typing/rec_check.ml[1033,34187+8]..[1033,34187+18])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1033,34187+19]..[1033,34187+22])
                            Pexp_ident "ids" (typing/rec_check.ml[1033,34187+19]..[1033,34187+22])
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1033,34187+23]..[1033,34187+47])
                            Pexp_apply
                            expression (typing/rec_check.ml[1033,34187+38]..[1033,34187+40])
                              Pexp_ident "<<" (typing/rec_check.ml[1033,34187+38]..[1033,34187+40])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1033,34187+24]..[1033,34187+37])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[1033,34187+24]..[1033,34187+34])
                                    Pexp_ident "class_expr" (typing/rec_check.ml[1033,34187+24]..[1033,34187+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[1033,34187+35]..[1033,34187+37])
                                        Pexp_ident "ce" (typing/rec_check.ml[1033,34187+35]..[1033,34187+37])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1033,34187+41]..[1033,34187+46])
                                  Pexp_construct "Delay" (typing/rec_check.ml[1033,34187+41]..[1033,34187+46])
                                  None
                            ]
                      ]
                <case>
                  pattern (typing/rec_check.ml[1034,34235+6]..[1034,34235+26])
                    Ppat_construct "Tcl_apply" (typing/rec_check.ml[1034,34235+6]..[1034,34235+15])
                    Some
                      []
                      pattern (typing/rec_check.ml[1034,34235+16]..[1034,34235+26])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[1034,34235+17]..[1034,34235+19])
                            Ppat_var "ce" (typing/rec_check.ml[1034,34235+17]..[1034,34235+19])
                          pattern (typing/rec_check.ml[1034,34235+21]..[1034,34235+25])
                            Ppat_var "args" (typing/rec_check.ml[1034,34235+21]..[1034,34235+25])
                        ]
                  expression (typing/rec_check.ml[1035,34265+8]..[1039,34415+9])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/rec_check.ml[1035,34265+12]..[1035,34265+15])
                          Ppat_var "arg" (typing/rec_check.ml[1035,34265+12]..[1035,34265+15])
                        expression (typing/rec_check.ml[1035,34265+16]..[1035,34265+51]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/rec_check.ml[1035,34265+16]..[1035,34265+28])
                            Ppat_tuple
                            [
                              pattern (typing/rec_check.ml[1035,34265+17]..[1035,34265+23])
                                Ppat_var "_label" (typing/rec_check.ml[1035,34265+17]..[1035,34265+23])
                              pattern (typing/rec_check.ml[1035,34265+25]..[1035,34265+27])
                                Ppat_var "eo" (typing/rec_check.ml[1035,34265+25]..[1035,34265+27])
                            ]
                          expression (typing/rec_check.ml[1035,34265+31]..[1035,34265+51])
                            Pexp_apply
                            expression (typing/rec_check.ml[1035,34265+31]..[1035,34265+37])
                              Pexp_ident "option" (typing/rec_check.ml[1035,34265+31]..[1035,34265+37])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1035,34265+38]..[1035,34265+48])
                                  Pexp_ident "expression" (typing/rec_check.ml[1035,34265+38]..[1035,34265+48])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1035,34265+49]..[1035,34265+51])
                                  Pexp_ident "eo" (typing/rec_check.ml[1035,34265+49]..[1035,34265+51])
                            ]
                    ]
                    expression (typing/rec_check.ml[1036,34320+8]..[1039,34415+9])
                      Pexp_apply
                      expression (typing/rec_check.ml[1036,34320+8]..[1036,34320+12])
                        Pexp_ident "join" (typing/rec_check.ml[1036,34320+8]..[1036,34320+12])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1036,34320+13]..[1039,34415+9])
                            Pexp_construct "::" (typing/rec_check.ml[1037,34335+10]..[1039,34415+9]) ghost
                            Some
                              expression (typing/rec_check.ml[1037,34335+10]..[1039,34415+9]) ghost
                                Pexp_tuple
                                [
                                  expression (typing/rec_check.ml[1037,34335+10]..[1037,34335+38])
                                    Pexp_apply
                                    expression (typing/rec_check.ml[1037,34335+24]..[1037,34335+26])
                                      Pexp_ident "<<" (typing/rec_check.ml[1037,34335+24]..[1037,34335+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[1037,34335+10]..[1037,34335+23])
                                          Pexp_apply
                                          expression (typing/rec_check.ml[1037,34335+10]..[1037,34335+20])
                                            Pexp_ident "class_expr" (typing/rec_check.ml[1037,34335+10]..[1037,34335+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/rec_check.ml[1037,34335+21]..[1037,34335+23])
                                                Pexp_ident "ce" (typing/rec_check.ml[1037,34335+21]..[1037,34335+23])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/rec_check.ml[1037,34335+27]..[1037,34335+38])
                                          Pexp_construct "Dereference" (typing/rec_check.ml[1037,34335+27]..[1037,34335+38])
                                          None
                                    ]
                                  expression (typing/rec_check.ml[1038,34375+10]..[1039,34415+9]) ghost
                                    Pexp_construct "::" (typing/rec_check.ml[1038,34375+10]..[1039,34415+9]) ghost
                                    Some
                                      expression (typing/rec_check.ml[1038,34375+10]..[1039,34415+9]) ghost
                                        Pexp_tuple
                                        [
                                          expression (typing/rec_check.ml[1038,34375+10]..[1038,34375+38])
                                            Pexp_apply
                                            expression (typing/rec_check.ml[1038,34375+24]..[1038,34375+26])
                                              Pexp_ident "<<" (typing/rec_check.ml[1038,34375+24]..[1038,34375+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[1038,34375+10]..[1038,34375+23])
                                                  Pexp_apply
                                                  expression (typing/rec_check.ml[1038,34375+10]..[1038,34375+14])
                                                    Pexp_ident "list" (typing/rec_check.ml[1038,34375+10]..[1038,34375+14])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[1038,34375+15]..[1038,34375+18])
                                                        Pexp_ident "arg" (typing/rec_check.ml[1038,34375+15]..[1038,34375+18])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[1038,34375+19]..[1038,34375+23])
                                                        Pexp_ident "args" (typing/rec_check.ml[1038,34375+19]..[1038,34375+23])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[1038,34375+27]..[1038,34375+38])
                                                  Pexp_construct "Dereference" (typing/rec_check.ml[1038,34375+27]..[1038,34375+38])
                                                  None
                                            ]
                                          expression (typing/rec_check.ml[1039,34415+8]..[1039,34415+9]) ghost
                                            Pexp_construct "[]" (typing/rec_check.ml[1039,34415+8]..[1039,34415+9]) ghost
                                            None
                                        ]
                                ]
                      ]
                <case>
                  pattern (typing/rec_check.ml[1040,34425+6]..[1040,34425+41])
                    Ppat_construct "Tcl_let" (typing/rec_check.ml[1040,34425+6]..[1040,34425+13])
                    Some
                      []
                      pattern (typing/rec_check.ml[1040,34425+14]..[1040,34425+41])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[1040,34425+15]..[1040,34425+23])
                            Ppat_var "rec_flag" (typing/rec_check.ml[1040,34425+15]..[1040,34425+23])
                          pattern (typing/rec_check.ml[1040,34425+25]..[1040,34425+33])
                            Ppat_var "bindings" (typing/rec_check.ml[1040,34425+25]..[1040,34425+33])
                          pattern (typing/rec_check.ml[1040,34425+35]..[1040,34425+36])
                            Ppat_any
                          pattern (typing/rec_check.ml[1040,34425+38]..[1040,34425+40])
                            Ppat_var "ce" (typing/rec_check.ml[1040,34425+38]..[1040,34425+40])
                        ]
                  expression (typing/rec_check.ml[1041,34470+6]..[1041,34470+55])
                    Pexp_apply
                    expression (typing/rec_check.ml[1041,34470+39]..[1041,34470+41])
                      Pexp_ident ">>" (typing/rec_check.ml[1041,34470+39]..[1041,34470+41])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[1041,34470+6]..[1041,34470+38])
                          Pexp_apply
                          expression (typing/rec_check.ml[1041,34470+6]..[1041,34470+20])
                            Pexp_ident "value_bindings" (typing/rec_check.ml[1041,34470+6]..[1041,34470+20])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[1041,34470+21]..[1041,34470+29])
                                Pexp_ident "rec_flag" (typing/rec_check.ml[1041,34470+21]..[1041,34470+29])
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[1041,34470+30]..[1041,34470+38])
                                Pexp_ident "bindings" (typing/rec_check.ml[1041,34470+30]..[1041,34470+38])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[1041,34470+42]..[1041,34470+55])
                          Pexp_apply
                          expression (typing/rec_check.ml[1041,34470+42]..[1041,34470+52])
                            Pexp_ident "class_expr" (typing/rec_check.ml[1041,34470+42]..[1041,34470+52])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[1041,34470+53]..[1041,34470+55])
                                Pexp_ident "ce" (typing/rec_check.ml[1041,34470+53]..[1041,34470+55])
                          ]
                    ]
                <case>
                  pattern (typing/rec_check.ml[1042,34526+6]..[1042,34526+37])
                    Ppat_construct "Tcl_constraint" (typing/rec_check.ml[1042,34526+6]..[1042,34526+20])
                    Some
                      []
                      pattern (typing/rec_check.ml[1042,34526+21]..[1042,34526+37])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[1042,34526+22]..[1042,34526+24])
                            Ppat_var "ce" (typing/rec_check.ml[1042,34526+22]..[1042,34526+24])
                          pattern (typing/rec_check.ml[1042,34526+26]..[1042,34526+27])
                            Ppat_any
                          pattern (typing/rec_check.ml[1042,34526+29]..[1042,34526+30])
                            Ppat_any
                          pattern (typing/rec_check.ml[1042,34526+32]..[1042,34526+33])
                            Ppat_any
                          pattern (typing/rec_check.ml[1042,34526+35]..[1042,34526+36])
                            Ppat_any
                        ]
                  expression (typing/rec_check.ml[1043,34567+8]..[1043,34567+21])
                    Pexp_apply
                    expression (typing/rec_check.ml[1043,34567+8]..[1043,34567+18])
                      Pexp_ident "class_expr" (typing/rec_check.ml[1043,34567+8]..[1043,34567+18])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[1043,34567+19]..[1043,34567+21])
                          Pexp_ident "ce" (typing/rec_check.ml[1043,34567+19]..[1043,34567+21])
                    ]
                <case>
                  pattern (typing/rec_check.ml[1044,34589+6]..[1044,34589+22])
                    Ppat_construct "Tcl_open" (typing/rec_check.ml[1044,34589+6]..[1044,34589+14])
                    Some
                      []
                      pattern (typing/rec_check.ml[1044,34589+15]..[1044,34589+22])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[1044,34589+16]..[1044,34589+17])
                            Ppat_any
                          pattern (typing/rec_check.ml[1044,34589+19]..[1044,34589+21])
                            Ppat_var "ce" (typing/rec_check.ml[1044,34589+19]..[1044,34589+21])
                        ]
                  expression (typing/rec_check.ml[1045,34615+8]..[1045,34615+21])
                    Pexp_apply
                    expression (typing/rec_check.ml[1045,34615+8]..[1045,34615+18])
                      Pexp_ident "class_expr" (typing/rec_check.ml[1045,34615+8]..[1045,34615+18])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[1045,34615+19]..[1045,34615+21])
                          Pexp_ident "ce" (typing/rec_check.ml[1045,34615+19]..[1045,34615+21])
                    ]
              ]
          core_type (typing/rec_check.ml[1025,33908+17]..[1025,33908+50])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[1025,33908+17]..[1025,33908+37])
              Ptyp_constr "Typedtree.class_expr" (typing/rec_check.ml[1025,33908+17]..[1025,33908+37])
              []
            core_type (typing/rec_check.ml[1025,33908+41]..[1025,33908+50])
              Ptyp_constr "term_judg" (typing/rec_check.ml[1025,33908+41]..[1025,33908+50])
              []
      <def>
        pattern (typing/rec_check.ml[1047,34638+4]..[1047,34638+72]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[1047,34638+4]..[1047,34638+25])
            Ppat_var "extension_constructor" (typing/rec_check.ml[1047,34638+4]..[1047,34638+25])
          core_type (typing/rec_check.ml[1047,34638+28]..[1047,34638+72]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[1047,34638+28]..[1047,34638+72])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[1047,34638+28]..[1047,34638+59])
                Ptyp_constr "Typedtree.extension_constructor" (typing/rec_check.ml[1047,34638+28]..[1047,34638+59])
                []
              core_type (typing/rec_check.ml[1047,34638+63]..[1047,34638+72])
                Ptyp_constr "term_judg" (typing/rec_check.ml[1047,34638+63]..[1047,34638+72])
                []
        expression (typing/rec_check.ml[1047,34638+4]..[1052,34814+14])
          Pexp_constraint
          expression (typing/rec_check.ml[1048,34713+2]..[1052,34814+14])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[1048,34713+6]..[1048,34713+8])
              Ppat_var "ec" (typing/rec_check.ml[1048,34713+6]..[1048,34713+8])
            expression (typing/rec_check.ml[1048,34713+12]..[1052,34814+14])
              Pexp_match
              expression (typing/rec_check.ml[1048,34713+18]..[1048,34713+29])
                Pexp_field
                expression (typing/rec_check.ml[1048,34713+18]..[1048,34713+20])
                  Pexp_ident "ec" (typing/rec_check.ml[1048,34713+18]..[1048,34713+20])
                "ext_kind" (typing/rec_check.ml[1048,34713+21]..[1048,34713+29])
              [
                <case>
                  pattern (typing/rec_check.ml[1049,34748+6]..[1049,34748+17])
                    Ppat_construct "Text_decl" (typing/rec_check.ml[1049,34748+6]..[1049,34748+15])
                    Some
                      []
                      pattern (typing/rec_check.ml[1049,34748+16]..[1049,34748+17])
                        Ppat_any
                  expression (typing/rec_check.ml[1050,34769+6]..[1050,34769+11])
                    Pexp_ident "empty" (typing/rec_check.ml[1050,34769+6]..[1050,34769+11])
                <case>
                  pattern (typing/rec_check.ml[1051,34781+6]..[1051,34781+29])
                    Ppat_construct "Text_rebind" (typing/rec_check.ml[1051,34781+6]..[1051,34781+17])
                    Some
                      []
                      pattern (typing/rec_check.ml[1051,34781+18]..[1051,34781+29])
                        Ppat_tuple
                        [
                          pattern (typing/rec_check.ml[1051,34781+19]..[1051,34781+22])
                            Ppat_var "pth" (typing/rec_check.ml[1051,34781+19]..[1051,34781+22])
                          pattern (typing/rec_check.ml[1051,34781+24]..[1051,34781+28])
                            Ppat_var "_lid" (typing/rec_check.ml[1051,34781+24]..[1051,34781+28])
                        ]
                  expression (typing/rec_check.ml[1052,34814+6]..[1052,34814+14])
                    Pexp_apply
                    expression (typing/rec_check.ml[1052,34814+6]..[1052,34814+10])
                      Pexp_ident "path" (typing/rec_check.ml[1052,34814+6]..[1052,34814+10])
                    [
                      <arg>
                      Nolabel
                        expression (typing/rec_check.ml[1052,34814+11]..[1052,34814+14])
                          Pexp_ident "pth" (typing/rec_check.ml[1052,34814+11]..[1052,34814+14])
                    ]
              ]
          core_type (typing/rec_check.ml[1047,34638+28]..[1047,34638+72])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[1047,34638+28]..[1047,34638+59])
              Ptyp_constr "Typedtree.extension_constructor" (typing/rec_check.ml[1047,34638+28]..[1047,34638+59])
              []
            core_type (typing/rec_check.ml[1047,34638+63]..[1047,34638+72])
              Ptyp_constr "term_judg" (typing/rec_check.ml[1047,34638+63]..[1047,34638+72])
              []
      <def>
        pattern (typing/rec_check.ml[1055,34874+4]..[1055,34874+74]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[1055,34874+4]..[1055,34874+18])
            Ppat_var "value_bindings" (typing/rec_check.ml[1055,34874+4]..[1055,34874+18])
          core_type (typing/rec_check.ml[1055,34874+21]..[1055,34874+74]) ghost
            Ptyp_poly
            core_type (typing/rec_check.ml[1055,34874+21]..[1055,34874+74])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[1055,34874+21]..[1055,34874+29])
                Ptyp_constr "rec_flag" (typing/rec_check.ml[1055,34874+21]..[1055,34874+29])
                []
              core_type (typing/rec_check.ml[1055,34874+33]..[1055,34874+74])
                Ptyp_arrow
                Nolabel
                core_type (typing/rec_check.ml[1055,34874+33]..[1055,34874+61])
                  Ptyp_constr "list" (typing/rec_check.ml[1055,34874+57]..[1055,34874+61])
                  [
                    core_type (typing/rec_check.ml[1055,34874+33]..[1055,34874+56])
                      Ptyp_constr "Typedtree.value_binding" (typing/rec_check.ml[1055,34874+33]..[1055,34874+56])
                      []
                  ]
                core_type (typing/rec_check.ml[1055,34874+65]..[1055,34874+74])
                  Ptyp_constr "bind_judg" (typing/rec_check.ml[1055,34874+65]..[1055,34874+74])
                  []
        expression (typing/rec_check.ml[1055,34874+4]..[1138,38581+38])
          Pexp_constraint
          expression (typing/rec_check.ml[1056,34951+2]..[1138,38581+38])
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[1056,34951+6]..[1056,34951+14])
              Ppat_var "rec_flag" (typing/rec_check.ml[1056,34951+6]..[1056,34951+14])
            expression (typing/rec_check.ml[1056,34951+15]..[1138,38581+38]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[1056,34951+15]..[1056,34951+23])
                Ppat_var "bindings" (typing/rec_check.ml[1056,34951+15]..[1056,34951+23])
              expression (typing/rec_check.ml[1056,34951+24]..[1138,38581+38]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/rec_check.ml[1056,34951+24]..[1056,34951+28])
                  Ppat_var "mode" (typing/rec_check.ml[1056,34951+24]..[1056,34951+28])
                expression (typing/rec_check.ml[1056,34951+29]..[1138,38581+38]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/rec_check.ml[1056,34951+29]..[1056,34951+38])
                    Ppat_var "bound_env" (typing/rec_check.ml[1056,34951+29]..[1056,34951+38])
                  expression (typing/rec_check.ml[1057,34993+4]..[1138,38581+38])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/rec_check.ml[1057,34993+8]..[1057,34993+22])
                          Ppat_var "all_bound_pats" (typing/rec_check.ml[1057,34993+8]..[1057,34993+22])
                        expression (typing/rec_check.ml[1057,34993+25]..[1057,34993+64])
                          Pexp_apply
                          expression (typing/rec_check.ml[1057,34993+25]..[1057,34993+33])
                            Pexp_ident "List.map" (typing/rec_check.ml[1057,34993+25]..[1057,34993+33])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[1057,34993+34]..[1057,34993+55])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/rec_check.ml[1057,34993+39]..[1057,34993+41])
                                  Ppat_var "vb" (typing/rec_check.ml[1057,34993+39]..[1057,34993+41])
                                expression (typing/rec_check.ml[1057,34993+45]..[1057,34993+54])
                                  Pexp_field
                                  expression (typing/rec_check.ml[1057,34993+45]..[1057,34993+47])
                                    Pexp_ident "vb" (typing/rec_check.ml[1057,34993+45]..[1057,34993+47])
                                  "vb_pat" (typing/rec_check.ml[1057,34993+48]..[1057,34993+54])
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[1057,34993+56]..[1057,34993+64])
                                Pexp_ident "bindings" (typing/rec_check.ml[1057,34993+56]..[1057,34993+64])
                          ]
                    ]
                    expression (typing/rec_check.ml[1058,35061+4]..[1138,38581+38])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/rec_check.ml[1058,35061+8]..[1058,35061+17])
                            Ppat_var "outer_env" (typing/rec_check.ml[1058,35061+8]..[1058,35061+17])
                          expression (typing/rec_check.ml[1058,35061+20]..[1058,35061+59])
                            Pexp_apply
                            expression (typing/rec_check.ml[1058,35061+20]..[1058,35061+34])
                              Pexp_ident "remove_patlist" (typing/rec_check.ml[1058,35061+20]..[1058,35061+34])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1058,35061+35]..[1058,35061+49])
                                  Pexp_ident "all_bound_pats" (typing/rec_check.ml[1058,35061+35]..[1058,35061+49])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1058,35061+50]..[1058,35061+59])
                                  Pexp_ident "bound_env" (typing/rec_check.ml[1058,35061+50]..[1058,35061+59])
                            ]
                      ]
                      expression (typing/rec_check.ml[1059,35124+4]..[1138,38581+38])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/rec_check.ml[1059,35124+8]..[1059,35124+20])
                              Ppat_var "bindings_env" (typing/rec_check.ml[1059,35124+8]..[1059,35124+20])
                            expression (typing/rec_check.ml[1060,35147+6]..[1137,38550+30])
                              Pexp_match
                              expression (typing/rec_check.ml[1060,35147+12]..[1060,35147+20])
                                Pexp_ident "rec_flag" (typing/rec_check.ml[1060,35147+12]..[1060,35147+20])
                              [
                                <case>
                                  pattern (typing/rec_check.ml[1061,35173+8]..[1061,35173+20])
                                    Ppat_construct "Nonrecursive" (typing/rec_check.ml[1061,35173+8]..[1061,35173+20])
                                    None
                                  expression (typing/rec_check.ml[1067,35418+10]..[1070,35592+40])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/rec_check.ml[1067,35418+14]..[1067,35418+25])
                                          Ppat_var "binding_env" (typing/rec_check.ml[1067,35418+14]..[1067,35418+25])
                                        expression (typing/rec_check.ml[1067,35418+26]..[1069,35535+53]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/rec_check.ml[1067,35418+26]..[1067,35418+46])
                                            Ppat_record Open
                                            [
                                              "vb_pat" (typing/rec_check.ml[1067,35418+27]..[1067,35418+33]) ghost
                                                pattern (typing/rec_check.ml[1067,35418+27]..[1067,35418+33])
                                                  Ppat_var "vb_pat" (typing/rec_check.ml[1067,35418+27]..[1067,35418+33])
                                              "vb_expr" (typing/rec_check.ml[1067,35418+35]..[1067,35418+42]) ghost
                                                pattern (typing/rec_check.ml[1067,35418+35]..[1067,35418+42])
                                                  Ppat_var "vb_expr" (typing/rec_check.ml[1067,35418+35]..[1067,35418+42])
                                            ]
                                          expression (typing/rec_check.ml[1067,35418+47]..[1069,35535+53]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/rec_check.ml[1067,35418+47]..[1067,35418+48])
                                              Ppat_var "m" (typing/rec_check.ml[1067,35418+47]..[1067,35418+48])
                                            expression (typing/rec_check.ml[1068,35469+12]..[1069,35535+53])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/rec_check.ml[1068,35469+16]..[1068,35469+18])
                                                    Ppat_var "m'" (typing/rec_check.ml[1068,35469+16]..[1068,35469+18])
                                                  expression (typing/rec_check.ml[1068,35469+21]..[1068,35469+62])
                                                    Pexp_apply
                                                    expression (typing/rec_check.ml[1068,35469+21]..[1068,35469+33])
                                                      Pexp_ident "Mode.compose" (typing/rec_check.ml[1068,35469+21]..[1068,35469+33])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/rec_check.ml[1068,35469+34]..[1068,35469+35])
                                                          Pexp_ident "m" (typing/rec_check.ml[1068,35469+34]..[1068,35469+35])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/rec_check.ml[1068,35469+36]..[1068,35469+62])
                                                          Pexp_apply
                                                          expression (typing/rec_check.ml[1068,35469+37]..[1068,35469+44])
                                                            Pexp_ident "pattern" (typing/rec_check.ml[1068,35469+37]..[1068,35469+44])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/rec_check.ml[1068,35469+45]..[1068,35469+51])
                                                                Pexp_ident "vb_pat" (typing/rec_check.ml[1068,35469+45]..[1068,35469+51])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/rec_check.ml[1068,35469+52]..[1068,35469+61])
                                                                Pexp_ident "bound_env" (typing/rec_check.ml[1068,35469+52]..[1068,35469+61])
                                                          ]
                                                    ]
                                              ]
                                              expression (typing/rec_check.ml[1069,35535+12]..[1069,35535+53])
                                                Pexp_apply
                                                expression (typing/rec_check.ml[1069,35535+12]..[1069,35535+22])
                                                  Pexp_ident "remove_pat" (typing/rec_check.ml[1069,35535+12]..[1069,35535+22])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/rec_check.ml[1069,35535+23]..[1069,35535+29])
                                                      Pexp_ident "vb_pat" (typing/rec_check.ml[1069,35535+23]..[1069,35535+29])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/rec_check.ml[1069,35535+30]..[1069,35535+53])
                                                      Pexp_apply
                                                      expression (typing/rec_check.ml[1069,35535+31]..[1069,35535+41])
                                                        Pexp_ident "expression" (typing/rec_check.ml[1069,35535+31]..[1069,35535+41])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/rec_check.ml[1069,35535+42]..[1069,35535+49])
                                                            Pexp_ident "vb_expr" (typing/rec_check.ml[1069,35535+42]..[1069,35535+49])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/rec_check.ml[1069,35535+50]..[1069,35535+52])
                                                            Pexp_ident "m'" (typing/rec_check.ml[1069,35535+50]..[1069,35535+52])
                                                      ]
                                                ]
                                    ]
                                    expression (typing/rec_check.ml[1070,35592+10]..[1070,35592+40])
                                      Pexp_apply
                                      expression (typing/rec_check.ml[1070,35592+10]..[1070,35592+14])
                                        Pexp_ident "list" (typing/rec_check.ml[1070,35592+10]..[1070,35592+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[1070,35592+15]..[1070,35592+26])
                                            Pexp_ident "binding_env" (typing/rec_check.ml[1070,35592+15]..[1070,35592+26])
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[1070,35592+27]..[1070,35592+35])
                                            Pexp_ident "bindings" (typing/rec_check.ml[1070,35592+27]..[1070,35592+35])
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[1070,35592+36]..[1070,35592+40])
                                            Pexp_ident "mode" (typing/rec_check.ml[1070,35592+36]..[1070,35592+40])
                                      ]
                                <case>
                                  pattern (typing/rec_check.ml[1071,35633+8]..[1071,35633+17])
                                    Ppat_construct "Recursive" (typing/rec_check.ml[1071,35633+8]..[1071,35633+17])
                                    None
                                  expression (typing/rec_check.ml[1112,37404+10]..[1137,38550+30])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/rec_check.ml[1112,37404+14]..[1112,37404+25])
                                          Ppat_var "binding_env" (typing/rec_check.ml[1112,37404+14]..[1112,37404+25])
                                        expression (typing/rec_check.ml[1112,37404+26]..[1123,37944+33]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/rec_check.ml[1112,37404+26]..[1112,37404+58])
                                            Ppat_record Open
                                            [
                                              "vb_pat" (typing/rec_check.ml[1112,37404+27]..[1112,37404+33])
                                                pattern (typing/rec_check.ml[1112,37404+36]..[1112,37404+39])
                                                  Ppat_var "x_i" (typing/rec_check.ml[1112,37404+36]..[1112,37404+39])
                                              "vb_expr" (typing/rec_check.ml[1112,37404+41]..[1112,37404+48])
                                                pattern (typing/rec_check.ml[1112,37404+51]..[1112,37404+54])
                                                  Ppat_var "e_i" (typing/rec_check.ml[1112,37404+51]..[1112,37404+54])
                                            ]
                                          expression (typing/rec_check.ml[1113,37465+12]..[1123,37944+33])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/rec_check.ml[1113,37465+16]..[1113,37465+23])
                                                  Ppat_var "mbody_i" (typing/rec_check.ml[1113,37465+16]..[1113,37465+23])
                                                expression (typing/rec_check.ml[1113,37465+26]..[1113,37465+47])
                                                  Pexp_apply
                                                  expression (typing/rec_check.ml[1113,37465+26]..[1113,37465+33])
                                                    Pexp_ident "pattern" (typing/rec_check.ml[1113,37465+26]..[1113,37465+33])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[1113,37465+34]..[1113,37465+37])
                                                        Pexp_ident "x_i" (typing/rec_check.ml[1113,37465+34]..[1113,37465+37])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[1113,37465+38]..[1113,37465+47])
                                                        Pexp_ident "bound_env" (typing/rec_check.ml[1113,37465+38]..[1113,37465+47])
                                                  ]
                                            ]
                                            expression (typing/rec_check.ml[1115,37555+12]..[1123,37944+33])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/rec_check.ml[1115,37555+16]..[1115,37555+25])
                                                    Ppat_var "rhs_env_i" (typing/rec_check.ml[1115,37555+16]..[1115,37555+25])
                                                  expression (typing/rec_check.ml[1115,37555+28]..[1115,37555+70])
                                                    Pexp_apply
                                                    expression (typing/rec_check.ml[1115,37555+28]..[1115,37555+38])
                                                      Pexp_ident "expression" (typing/rec_check.ml[1115,37555+28]..[1115,37555+38])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/rec_check.ml[1115,37555+39]..[1115,37555+42])
                                                          Pexp_ident "e_i" (typing/rec_check.ml[1115,37555+39]..[1115,37555+42])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/rec_check.ml[1115,37555+43]..[1115,37555+70])
                                                          Pexp_apply
                                                          expression (typing/rec_check.ml[1115,37555+44]..[1115,37555+56])
                                                            Pexp_ident "Mode.compose" (typing/rec_check.ml[1115,37555+44]..[1115,37555+56])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/rec_check.ml[1115,37555+57]..[1115,37555+61])
                                                                Pexp_ident "mode" (typing/rec_check.ml[1115,37555+57]..[1115,37555+61])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/rec_check.ml[1115,37555+62]..[1115,37555+69])
                                                                Pexp_ident "mbody_i" (typing/rec_check.ml[1115,37555+62]..[1115,37555+69])
                                                          ]
                                                    ]
                                              ]
                                              expression (typing/rec_check.ml[1117,37675+12]..[1123,37944+33])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/rec_check.ml[1117,37675+16]..[1117,37675+28])
                                                      Ppat_var "mutual_modes" (typing/rec_check.ml[1117,37675+16]..[1117,37675+28])
                                                    expression (typing/rec_check.ml[1118,37706+14]..[1119,37777+39])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/rec_check.ml[1118,37706+18]..[1118,37706+25])
                                                            Ppat_var "mdef_ij" (typing/rec_check.ml[1118,37706+18]..[1118,37706+25])
                                                          expression (typing/rec_check.ml[1118,37706+26]..[1118,37706+67]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/rec_check.ml[1118,37706+26]..[1118,37706+43])
                                                              Ppat_record Open
                                                              [
                                                                "vb_pat" (typing/rec_check.ml[1118,37706+27]..[1118,37706+33])
                                                                  pattern (typing/rec_check.ml[1118,37706+36]..[1118,37706+39])
                                                                    Ppat_var "x_j" (typing/rec_check.ml[1118,37706+36]..[1118,37706+39])
                                                              ]
                                                            expression (typing/rec_check.ml[1118,37706+46]..[1118,37706+67])
                                                              Pexp_apply
                                                              expression (typing/rec_check.ml[1118,37706+46]..[1118,37706+53])
                                                                Pexp_ident "pattern" (typing/rec_check.ml[1118,37706+46]..[1118,37706+53])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/rec_check.ml[1118,37706+54]..[1118,37706+57])
                                                                    Pexp_ident "x_j" (typing/rec_check.ml[1118,37706+54]..[1118,37706+57])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/rec_check.ml[1118,37706+58]..[1118,37706+67])
                                                                    Pexp_ident "rhs_env_i" (typing/rec_check.ml[1118,37706+58]..[1118,37706+67])
                                                              ]
                                                      ]
                                                      expression (typing/rec_check.ml[1119,37777+14]..[1119,37777+39])
                                                        Pexp_apply
                                                        expression (typing/rec_check.ml[1119,37777+14]..[1119,37777+22])
                                                          Pexp_ident "List.map" (typing/rec_check.ml[1119,37777+14]..[1119,37777+22])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/rec_check.ml[1119,37777+23]..[1119,37777+30])
                                                              Pexp_ident "mdef_ij" (typing/rec_check.ml[1119,37777+23]..[1119,37777+30])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/rec_check.ml[1119,37777+31]..[1119,37777+39])
                                                              Pexp_ident "bindings" (typing/rec_check.ml[1119,37777+31]..[1119,37777+39])
                                                        ]
                                                ]
                                                expression (typing/rec_check.ml[1121,37841+12]..[1123,37944+33])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/rec_check.ml[1121,37841+16]..[1121,37841+21])
                                                        Ppat_var "env_i" (typing/rec_check.ml[1121,37841+16]..[1121,37841+21])
                                                      expression (typing/rec_check.ml[1121,37841+24]..[1121,37841+63])
                                                        Pexp_apply
                                                        expression (typing/rec_check.ml[1121,37841+24]..[1121,37841+38])
                                                          Pexp_ident "remove_patlist" (typing/rec_check.ml[1121,37841+24]..[1121,37841+38])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/rec_check.ml[1121,37841+39]..[1121,37841+53])
                                                              Pexp_ident "all_bound_pats" (typing/rec_check.ml[1121,37841+39]..[1121,37841+53])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/rec_check.ml[1121,37841+54]..[1121,37841+63])
                                                              Pexp_ident "rhs_env_i" (typing/rec_check.ml[1121,37841+54]..[1121,37841+63])
                                                        ]
                                                  ]
                                                  expression (typing/rec_check.ml[1123,37944+12]..[1123,37944+33])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/rec_check.ml[1123,37944+13]..[1123,37944+18])
                                                        Pexp_ident "env_i" (typing/rec_check.ml[1123,37944+13]..[1123,37944+18])
                                                      expression (typing/rec_check.ml[1123,37944+20]..[1123,37944+32])
                                                        Pexp_ident "mutual_modes" (typing/rec_check.ml[1123,37944+20]..[1123,37944+32])
                                                    ]
                                    ]
                                    expression (typing/rec_check.ml[1124,37981+10]..[1137,38550+30])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/rec_check.ml[1124,37981+14]..[1124,37981+23])
                                            Ppat_tuple
                                            [
                                              pattern (typing/rec_check.ml[1124,37981+14]..[1124,37981+17])
                                                Ppat_var "env" (typing/rec_check.ml[1124,37981+14]..[1124,37981+17])
                                              pattern (typing/rec_check.ml[1124,37981+19]..[1124,37981+23])
                                                Ppat_var "mdef" (typing/rec_check.ml[1124,37981+19]..[1124,37981+23])
                                            ]
                                          expression (typing/rec_check.ml[1125,38007+12]..[1125,38007+54])
                                            Pexp_apply
                                            expression (typing/rec_check.ml[1125,38007+12]..[1125,38007+22])
                                              Pexp_ident "List.split" (typing/rec_check.ml[1125,38007+12]..[1125,38007+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[1125,38007+23]..[1125,38007+54])
                                                  Pexp_apply
                                                  expression (typing/rec_check.ml[1125,38007+24]..[1125,38007+32])
                                                    Pexp_ident "List.map" (typing/rec_check.ml[1125,38007+24]..[1125,38007+32])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[1125,38007+33]..[1125,38007+44])
                                                        Pexp_ident "binding_env" (typing/rec_check.ml[1125,38007+33]..[1125,38007+44])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/rec_check.ml[1125,38007+45]..[1125,38007+53])
                                                        Pexp_ident "bindings" (typing/rec_check.ml[1125,38007+45]..[1125,38007+53])
                                                  ]
                                            ]
                                      ]
                                      expression (typing/rec_check.ml[1126,38065+10]..[1137,38550+30])
                                        Pexp_let Rec
                                        [
                                          <def>
                                            pattern (typing/rec_check.ml[1126,38065+18]..[1126,38065+36])
                                              Ppat_var "transitive_closure" (typing/rec_check.ml[1126,38065+18]..[1126,38065+36])
                                            expression (typing/rec_check.ml[1126,38065+37]..[1134,38447+40]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (typing/rec_check.ml[1126,38065+37]..[1126,38065+40])
                                                Ppat_var "env" (typing/rec_check.ml[1126,38065+37]..[1126,38065+40])
                                              expression (typing/rec_check.ml[1127,38108+12]..[1134,38447+40])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/rec_check.ml[1127,38108+16]..[1127,38108+31])
                                                      Ppat_var "transitive_deps" (typing/rec_check.ml[1127,38108+16]..[1127,38108+31])
                                                    expression (typing/rec_check.ml[1127,38108+32]..[1130,38246+66]) ghost
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (typing/rec_check.ml[1127,38108+32]..[1127,38108+37])
                                                        Ppat_var "env_i" (typing/rec_check.ml[1127,38108+32]..[1127,38108+37])
                                                      expression (typing/rec_check.ml[1127,38108+38]..[1130,38246+66]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (typing/rec_check.ml[1127,38108+38]..[1127,38108+44])
                                                          Ppat_var "mdef_i" (typing/rec_check.ml[1127,38108+38]..[1127,38108+44])
                                                        expression (typing/rec_check.ml[1129,38217+14]..[1130,38246+66])
                                                          Pexp_apply
                                                          expression (typing/rec_check.ml[1129,38217+14]..[1129,38217+22])
                                                            Pexp_ident "Env.join" (typing/rec_check.ml[1129,38217+14]..[1129,38217+22])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/rec_check.ml[1129,38217+23]..[1129,38217+28])
                                                                Pexp_ident "env_i" (typing/rec_check.ml[1129,38217+23]..[1129,38217+28])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/rec_check.ml[1130,38246+16]..[1130,38246+66])
                                                                Pexp_apply
                                                                expression (typing/rec_check.ml[1130,38246+17]..[1130,38246+30])
                                                                  Pexp_ident "Env.join_list" (typing/rec_check.ml[1130,38246+17]..[1130,38246+30])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/rec_check.ml[1130,38246+31]..[1130,38246+65])
                                                                      Pexp_apply
                                                                      expression (typing/rec_check.ml[1130,38246+32]..[1130,38246+41])
Pexp_ident "List.map2" (typing/rec_check.ml[1130,38246+32]..[1130,38246+41])
                                                                      [
<arg>
Nolabel
  expression (typing/rec_check.ml[1130,38246+42]..[1130,38246+53])
    Pexp_ident "Env.compose" (typing/rec_check.ml[1130,38246+42]..[1130,38246+53])
<arg>
Nolabel
  expression (typing/rec_check.ml[1130,38246+54]..[1130,38246+60])
    Pexp_ident "mdef_i" (typing/rec_check.ml[1130,38246+54]..[1130,38246+60])
<arg>
Nolabel
  expression (typing/rec_check.ml[1130,38246+61]..[1130,38246+64])
    Pexp_ident "env" (typing/rec_check.ml[1130,38246+61]..[1130,38246+64])
                                                                      ]
                                                                ]
                                                          ]
                                                ]
                                                expression (typing/rec_check.ml[1131,38316+12]..[1134,38447+40])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/rec_check.ml[1131,38316+16]..[1131,38316+20])
                                                        Ppat_var "env'" (typing/rec_check.ml[1131,38316+16]..[1131,38316+20])
                                                      expression (typing/rec_check.ml[1131,38316+23]..[1131,38316+57])
                                                        Pexp_apply
                                                        expression (typing/rec_check.ml[1131,38316+23]..[1131,38316+32])
                                                          Pexp_ident "List.map2" (typing/rec_check.ml[1131,38316+23]..[1131,38316+32])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/rec_check.ml[1131,38316+33]..[1131,38316+48])
                                                              Pexp_ident "transitive_deps" (typing/rec_check.ml[1131,38316+33]..[1131,38316+48])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/rec_check.ml[1131,38316+49]..[1131,38316+52])
                                                              Pexp_ident "env" (typing/rec_check.ml[1131,38316+49]..[1131,38316+52])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/rec_check.ml[1131,38316+53]..[1131,38316+57])
                                                              Pexp_ident "mdef" (typing/rec_check.ml[1131,38316+53]..[1131,38316+57])
                                                        ]
                                                  ]
                                                  expression (typing/rec_check.ml[1132,38377+12]..[1134,38447+40])
                                                    Pexp_ifthenelse
                                                    expression (typing/rec_check.ml[1132,38377+15]..[1132,38377+47])
                                                      Pexp_apply
                                                      expression (typing/rec_check.ml[1132,38377+15]..[1132,38377+28])
                                                        Pexp_ident "List.for_all2" (typing/rec_check.ml[1132,38377+15]..[1132,38377+28])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/rec_check.ml[1132,38377+29]..[1132,38377+38])
                                                            Pexp_ident "Env.equal" (typing/rec_check.ml[1132,38377+29]..[1132,38377+38])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/rec_check.ml[1132,38377+39]..[1132,38377+42])
                                                            Pexp_ident "env" (typing/rec_check.ml[1132,38377+39]..[1132,38377+42])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/rec_check.ml[1132,38377+43]..[1132,38377+47])
                                                            Pexp_ident "env'" (typing/rec_check.ml[1132,38377+43]..[1132,38377+47])
                                                      ]
                                                    expression (typing/rec_check.ml[1133,38425+17]..[1133,38425+21])
                                                      Pexp_ident "env'" (typing/rec_check.ml[1133,38425+17]..[1133,38425+21])
                                                    Some
                                                      expression (typing/rec_check.ml[1134,38447+17]..[1134,38447+40])
                                                        Pexp_apply
                                                        expression (typing/rec_check.ml[1134,38447+17]..[1134,38447+35])
                                                          Pexp_ident "transitive_closure" (typing/rec_check.ml[1134,38447+17]..[1134,38447+35])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/rec_check.ml[1134,38447+36]..[1134,38447+40])
                                                              Pexp_ident "env'" (typing/rec_check.ml[1134,38447+36]..[1134,38447+40])
                                                        ]
                                        ]
                                        expression (typing/rec_check.ml[1136,38501+10]..[1137,38550+30])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/rec_check.ml[1136,38501+14]..[1136,38501+20])
                                                Ppat_var "env'_i" (typing/rec_check.ml[1136,38501+14]..[1136,38501+20])
                                              expression (typing/rec_check.ml[1136,38501+23]..[1136,38501+45])
                                                Pexp_apply
                                                expression (typing/rec_check.ml[1136,38501+23]..[1136,38501+41])
                                                  Pexp_ident "transitive_closure" (typing/rec_check.ml[1136,38501+23]..[1136,38501+41])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/rec_check.ml[1136,38501+42]..[1136,38501+45])
                                                      Pexp_ident "env" (typing/rec_check.ml[1136,38501+42]..[1136,38501+45])
                                                ]
                                          ]
                                          expression (typing/rec_check.ml[1137,38550+10]..[1137,38550+30])
                                            Pexp_apply
                                            expression (typing/rec_check.ml[1137,38550+10]..[1137,38550+23])
                                              Pexp_ident "Env.join_list" (typing/rec_check.ml[1137,38550+10]..[1137,38550+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/rec_check.ml[1137,38550+24]..[1137,38550+30])
                                                  Pexp_ident "env'_i" (typing/rec_check.ml[1137,38550+24]..[1137,38550+30])
                                            ]
                              ]
                        ]
                        expression (typing/rec_check.ml[1138,38581+7]..[1138,38581+38])
                          Pexp_apply
                          expression (typing/rec_check.ml[1138,38581+7]..[1138,38581+15])
                            Pexp_ident "Env.join" (typing/rec_check.ml[1138,38581+7]..[1138,38581+15])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[1138,38581+16]..[1138,38581+28])
                                Pexp_ident "bindings_env" (typing/rec_check.ml[1138,38581+16]..[1138,38581+28])
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[1138,38581+29]..[1138,38581+38])
                                Pexp_ident "outer_env" (typing/rec_check.ml[1138,38581+29]..[1138,38581+38])
                          ]
          core_type (typing/rec_check.ml[1055,34874+21]..[1055,34874+74])
            Ptyp_arrow
            Nolabel
            core_type (typing/rec_check.ml[1055,34874+21]..[1055,34874+29])
              Ptyp_constr "rec_flag" (typing/rec_check.ml[1055,34874+21]..[1055,34874+29])
              []
            core_type (typing/rec_check.ml[1055,34874+33]..[1055,34874+74])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[1055,34874+33]..[1055,34874+61])
                Ptyp_constr "list" (typing/rec_check.ml[1055,34874+57]..[1055,34874+61])
                [
                  core_type (typing/rec_check.ml[1055,34874+33]..[1055,34874+56])
                    Ptyp_constr "Typedtree.value_binding" (typing/rec_check.ml[1055,34874+33]..[1055,34874+56])
                    []
                ]
              core_type (typing/rec_check.ml[1055,34874+65]..[1055,34874+74])
                Ptyp_constr "bind_judg" (typing/rec_check.ml[1055,34874+65]..[1055,34874+74])
                []
      <def>
        pattern (typing/rec_check.ml[1146,38777+4]..[1147,38786+52]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[1146,38777+4]..[1146,38777+8])
            Ppat_var "case" (typing/rec_check.ml[1146,38777+4]..[1146,38777+8])
          core_type (typing/rec_check.ml[1147,38786+6]..[1147,38786+52]) ghost
            Ptyp_poly 'k
            core_type (typing/rec_check.ml[1147,38786+11]..[1147,38786+52])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[1147,38786+11]..[1147,38786+28])
                Ptyp_constr "Typedtree.case" (typing/rec_check.ml[1147,38786+14]..[1147,38786+28])
                [
                  core_type (typing/rec_check.ml[1147,38786+11]..[1147,38786+13])
                    Ptyp_var k
                ]
              core_type (typing/rec_check.ml[1147,38786+32]..[1147,38786+52])
                Ptyp_arrow
                Nolabel
                core_type (typing/rec_check.ml[1147,38786+32]..[1147,38786+36])
                  Ptyp_constr "mode" (typing/rec_check.ml[1147,38786+32]..[1147,38786+36])
                  []
                core_type (typing/rec_check.ml[1147,38786+40]..[1147,38786+52])
                  Ptyp_tuple
                  [
                    core_type (typing/rec_check.ml[1147,38786+40]..[1147,38786+45])
                      Ptyp_constr "Env.t" (typing/rec_check.ml[1147,38786+40]..[1147,38786+45])
                      []
                    core_type (typing/rec_check.ml[1147,38786+48]..[1147,38786+52])
                      Ptyp_constr "mode" (typing/rec_check.ml[1147,38786+48]..[1147,38786+52])
                      []
                  ]
        expression (typing/rec_check.ml[1148,38839+4]..[1161,39225+66])
          Pexp_fun
          Nolabel
          None
          pattern (typing/rec_check.ml[1148,38839+8]..[1148,38839+43])
            Ppat_record Closed
            [
              "Typedtree.c_lhs" (typing/rec_check.ml[1148,38839+10]..[1148,38839+25]) ghost
                pattern (typing/rec_check.ml[1148,38839+10]..[1148,38839+25])
                  Ppat_var "c_lhs" (typing/rec_check.ml[1148,38839+10]..[1148,38839+25])
              "c_guard" (typing/rec_check.ml[1148,38839+27]..[1148,38839+34]) ghost
                pattern (typing/rec_check.ml[1148,38839+27]..[1148,38839+34])
                  Ppat_var "c_guard" (typing/rec_check.ml[1148,38839+27]..[1148,38839+34])
              "c_rhs" (typing/rec_check.ml[1148,38839+36]..[1148,38839+41]) ghost
                pattern (typing/rec_check.ml[1148,38839+36]..[1148,38839+41])
                  Ppat_var "c_rhs" (typing/rec_check.ml[1148,38839+36]..[1148,38839+41])
            ]
          expression (typing/rec_check.ml[1155,39075+4]..[1161,39225+66])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/rec_check.ml[1155,39075+8]..[1155,39075+12])
                  Ppat_var "judg" (typing/rec_check.ml[1155,39075+8]..[1155,39075+12])
                expression (typing/rec_check.ml[1155,39075+15]..[1158,39173+7])
                  Pexp_apply
                  expression (typing/rec_check.ml[1155,39075+15]..[1155,39075+19])
                    Pexp_ident "join" (typing/rec_check.ml[1155,39075+15]..[1155,39075+19])
                  [
                    <arg>
                    Nolabel
                      expression (typing/rec_check.ml[1155,39075+20]..[1158,39173+7])
                        Pexp_construct "::" (typing/rec_check.ml[1156,39097+8]..[1158,39173+7]) ghost
                        Some
                          expression (typing/rec_check.ml[1156,39097+8]..[1158,39173+7]) ghost
                            Pexp_tuple
                            [
                              expression (typing/rec_check.ml[1156,39097+8]..[1156,39097+48])
                                Pexp_apply
                                expression (typing/rec_check.ml[1156,39097+34]..[1156,39097+36])
                                  Pexp_ident "<<" (typing/rec_check.ml[1156,39097+34]..[1156,39097+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1156,39097+8]..[1156,39097+33])
                                      Pexp_apply
                                      expression (typing/rec_check.ml[1156,39097+8]..[1156,39097+14])
                                        Pexp_ident "option" (typing/rec_check.ml[1156,39097+8]..[1156,39097+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[1156,39097+15]..[1156,39097+25])
                                            Pexp_ident "expression" (typing/rec_check.ml[1156,39097+15]..[1156,39097+25])
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[1156,39097+26]..[1156,39097+33])
                                            Pexp_ident "c_guard" (typing/rec_check.ml[1156,39097+26]..[1156,39097+33])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1156,39097+37]..[1156,39097+48])
                                      Pexp_construct "Dereference" (typing/rec_check.ml[1156,39097+37]..[1156,39097+48])
                                      None
                                ]
                              expression (typing/rec_check.ml[1157,39147+8]..[1158,39173+7]) ghost
                                Pexp_construct "::" (typing/rec_check.ml[1157,39147+8]..[1158,39173+7]) ghost
                                Some
                                  expression (typing/rec_check.ml[1157,39147+8]..[1158,39173+7]) ghost
                                    Pexp_tuple
                                    [
                                      expression (typing/rec_check.ml[1157,39147+8]..[1157,39147+24])
                                        Pexp_apply
                                        expression (typing/rec_check.ml[1157,39147+8]..[1157,39147+18])
                                          Pexp_ident "expression" (typing/rec_check.ml[1157,39147+8]..[1157,39147+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/rec_check.ml[1157,39147+19]..[1157,39147+24])
                                              Pexp_ident "c_rhs" (typing/rec_check.ml[1157,39147+19]..[1157,39147+24])
                                        ]
                                      expression (typing/rec_check.ml[1158,39173+6]..[1158,39173+7]) ghost
                                        Pexp_construct "[]" (typing/rec_check.ml[1158,39173+6]..[1158,39173+7]) ghost
                                        None
                                    ]
                            ]
                  ]
            ]
            expression (typing/rec_check.ml[1159,39184+4]..[1161,39225+66])
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[1159,39184+9]..[1159,39184+10])
                Ppat_var "m" (typing/rec_check.ml[1159,39184+9]..[1159,39184+10])
              expression (typing/rec_check.ml[1160,39198+7]..[1161,39225+65])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/rec_check.ml[1160,39198+11]..[1160,39198+14])
                      Ppat_var "env" (typing/rec_check.ml[1160,39198+11]..[1160,39198+14])
                    expression (typing/rec_check.ml[1160,39198+17]..[1160,39198+23])
                      Pexp_apply
                      expression (typing/rec_check.ml[1160,39198+17]..[1160,39198+21])
                        Pexp_ident "judg" (typing/rec_check.ml[1160,39198+17]..[1160,39198+21])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1160,39198+22]..[1160,39198+23])
                            Pexp_ident "m" (typing/rec_check.ml[1160,39198+22]..[1160,39198+23])
                      ]
                ]
                expression (typing/rec_check.ml[1161,39225+7]..[1161,39225+65])
                  Pexp_tuple
                  [
                    expression (typing/rec_check.ml[1161,39225+7]..[1161,39225+29])
                      Pexp_apply
                      expression (typing/rec_check.ml[1161,39225+8]..[1161,39225+18])
                        Pexp_ident "remove_pat" (typing/rec_check.ml[1161,39225+8]..[1161,39225+18])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1161,39225+19]..[1161,39225+24])
                            Pexp_ident "c_lhs" (typing/rec_check.ml[1161,39225+19]..[1161,39225+24])
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1161,39225+25]..[1161,39225+28])
                            Pexp_ident "env" (typing/rec_check.ml[1161,39225+25]..[1161,39225+28])
                      ]
                    expression (typing/rec_check.ml[1161,39225+31]..[1161,39225+65])
                      Pexp_apply
                      expression (typing/rec_check.ml[1161,39225+31]..[1161,39225+43])
                        Pexp_ident "Mode.compose" (typing/rec_check.ml[1161,39225+31]..[1161,39225+43])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1161,39225+44]..[1161,39225+45])
                            Pexp_ident "m" (typing/rec_check.ml[1161,39225+44]..[1161,39225+45])
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1161,39225+46]..[1161,39225+65])
                            Pexp_apply
                            expression (typing/rec_check.ml[1161,39225+47]..[1161,39225+54])
                              Pexp_ident "pattern" (typing/rec_check.ml[1161,39225+47]..[1161,39225+54])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1161,39225+55]..[1161,39225+60])
                                  Pexp_ident "c_lhs" (typing/rec_check.ml[1161,39225+55]..[1161,39225+60])
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1161,39225+61]..[1161,39225+64])
                                  Pexp_ident "env" (typing/rec_check.ml[1161,39225+61]..[1161,39225+64])
                            ]
                      ]
                  ]
      <def>
        pattern (typing/rec_check.ml[1168,39399+4]..[1168,39399+57]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[1168,39399+4]..[1168,39399+11])
            Ppat_var "pattern" (typing/rec_check.ml[1168,39399+4]..[1168,39399+11])
          core_type (typing/rec_check.ml[1168,39399+4]..[1185,39904+23]) ghost
            Ptyp_poly 'k
            core_type (typing/rec_check.ml[1168,39399+23]..[1168,39399+57])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[1168,39399+23]..[1168,39399+40])
                Ptyp_constr "general_pattern" (typing/rec_check.ml[1168,39399+25]..[1168,39399+40])
                [
                  core_type (typing/rec_check.ml[1168,39399+23]..[1168,39399+24])
                    Ptyp_var k
                ]
              core_type (typing/rec_check.ml[1168,39399+44]..[1168,39399+57])
                Ptyp_arrow
                Nolabel
                core_type (typing/rec_check.ml[1168,39399+44]..[1168,39399+49])
                  Ptyp_constr "Env.t" (typing/rec_check.ml[1168,39399+44]..[1168,39399+49])
                  []
                core_type (typing/rec_check.ml[1168,39399+53]..[1168,39399+57])
                  Ptyp_constr "mode" (typing/rec_check.ml[1168,39399+53]..[1168,39399+57])
                  []
        expression (typing/rec_check.ml[1168,39399+4]..[1185,39904+23])
          Pexp_newtype "k"
          expression (typing/rec_check.ml[1168,39399+4]..[1185,39904+23])
            Pexp_constraint
            expression (typing/rec_check.ml[1168,39399+60]..[1185,39904+23])
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[1168,39399+64]..[1168,39399+67])
                Ppat_var "pat" (typing/rec_check.ml[1168,39399+64]..[1168,39399+67])
              expression (typing/rec_check.ml[1168,39399+68]..[1185,39904+23]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/rec_check.ml[1168,39399+68]..[1168,39399+71])
                  Ppat_var "env" (typing/rec_check.ml[1168,39399+68]..[1168,39399+71])
                expression (typing/rec_check.ml[1176,39670+2]..[1185,39904+23])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/rec_check.ml[1176,39670+6]..[1176,39670+11])
                        Ppat_var "m_pat" (typing/rec_check.ml[1176,39670+6]..[1176,39670+11])
                      expression (typing/rec_check.ml[1176,39670+14]..[1178,39747+24])
                        Pexp_ifthenelse
                        expression (typing/rec_check.ml[1176,39670+17]..[1176,39670+45])
                          Pexp_apply
                          expression (typing/rec_check.ml[1176,39670+17]..[1176,39670+41])
                            Pexp_ident "is_destructuring_pattern" (typing/rec_check.ml[1176,39670+17]..[1176,39670+41])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[1176,39670+42]..[1176,39670+45])
                                Pexp_ident "pat" (typing/rec_check.ml[1176,39670+42]..[1176,39670+45])
                          ]
                        expression (typing/rec_check.ml[1177,39716+19]..[1177,39716+30])
                          Pexp_construct "Dereference" (typing/rec_check.ml[1177,39716+19]..[1177,39716+30])
                          None
                        Some
                          expression (typing/rec_check.ml[1178,39747+19]..[1178,39747+24])
                            Pexp_construct "Guard" (typing/rec_check.ml[1178,39747+19]..[1178,39747+24])
                            None
                  ]
                  expression (typing/rec_check.ml[1180,39777+2]..[1185,39904+23])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/rec_check.ml[1180,39777+6]..[1180,39777+11])
                          Ppat_var "m_env" (typing/rec_check.ml[1180,39777+6]..[1180,39777+11])
                        expression (typing/rec_check.ml[1181,39791+4]..[1183,39860+38])
                          Pexp_apply
                          expression (typing/rec_check.ml[1183,39860+4]..[1183,39860+6])
                            Pexp_ident "|>" (typing/rec_check.ml[1183,39860+4]..[1183,39860+6])
                          [
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[1181,39791+4]..[1182,39816+43])
                                Pexp_apply
                                expression (typing/rec_check.ml[1182,39816+4]..[1182,39816+6])
                                  Pexp_ident "|>" (typing/rec_check.ml[1182,39816+4]..[1182,39816+6])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1181,39791+4]..[1181,39791+24])
                                      Pexp_apply
                                      expression (typing/rec_check.ml[1181,39791+4]..[1181,39791+20])
                                        Pexp_ident "pat_bound_idents" (typing/rec_check.ml[1181,39791+4]..[1181,39791+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[1181,39791+21]..[1181,39791+24])
                                            Pexp_ident "pat" (typing/rec_check.ml[1181,39791+21]..[1181,39791+24])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1182,39816+7]..[1182,39816+43])
                                      Pexp_apply
                                      expression (typing/rec_check.ml[1182,39816+7]..[1182,39816+15])
                                        Pexp_ident "List.map" (typing/rec_check.ml[1182,39816+7]..[1182,39816+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[1182,39816+16]..[1182,39816+43])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/rec_check.ml[1182,39816+21]..[1182,39816+23])
                                              Ppat_var "id" (typing/rec_check.ml[1182,39816+21]..[1182,39816+23])
                                            expression (typing/rec_check.ml[1182,39816+27]..[1182,39816+42])
                                              Pexp_apply
                                              expression (typing/rec_check.ml[1182,39816+27]..[1182,39816+35])
                                                Pexp_ident "Env.find" (typing/rec_check.ml[1182,39816+27]..[1182,39816+35])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/rec_check.ml[1182,39816+36]..[1182,39816+38])
                                                    Pexp_ident "id" (typing/rec_check.ml[1182,39816+36]..[1182,39816+38])
                                                <arg>
                                                Nolabel
                                                  expression (typing/rec_check.ml[1182,39816+39]..[1182,39816+42])
                                                    Pexp_ident "env" (typing/rec_check.ml[1182,39816+39]..[1182,39816+42])
                                              ]
                                      ]
                                ]
                            <arg>
                            Nolabel
                              expression (typing/rec_check.ml[1183,39860+7]..[1183,39860+38])
                                Pexp_apply
                                expression (typing/rec_check.ml[1183,39860+7]..[1183,39860+21])
                                  Pexp_ident "List.fold_left" (typing/rec_check.ml[1183,39860+7]..[1183,39860+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1183,39860+22]..[1183,39860+31])
                                      Pexp_ident "Mode.join" (typing/rec_check.ml[1183,39860+22]..[1183,39860+31])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1183,39860+32]..[1183,39860+38])
                                      Pexp_construct "Ignore" (typing/rec_check.ml[1183,39860+32]..[1183,39860+38])
                                      None
                                ]
                          ]
                    ]
                    expression (typing/rec_check.ml[1185,39904+2]..[1185,39904+23])
                      Pexp_apply
                      expression (typing/rec_check.ml[1185,39904+2]..[1185,39904+11])
                        Pexp_ident "Mode.join" (typing/rec_check.ml[1185,39904+2]..[1185,39904+11])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1185,39904+12]..[1185,39904+17])
                            Pexp_ident "m_pat" (typing/rec_check.ml[1185,39904+12]..[1185,39904+17])
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1185,39904+18]..[1185,39904+23])
                            Pexp_ident "m_env" (typing/rec_check.ml[1185,39904+18]..[1185,39904+23])
                      ]
            core_type (typing/rec_check.ml[1168,39399+23]..[1168,39399+57])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[1168,39399+23]..[1168,39399+40])
                Ptyp_constr "general_pattern" (typing/rec_check.ml[1168,39399+25]..[1168,39399+40])
                [
                  core_type (typing/rec_check.ml[1168,39399+23]..[1168,39399+24])
                    Ptyp_constr "k" (typing/rec_check.ml[1168,39399+23]..[1168,39399+24])
                    []
                ]
              core_type (typing/rec_check.ml[1168,39399+44]..[1168,39399+57])
                Ptyp_arrow
                Nolabel
                core_type (typing/rec_check.ml[1168,39399+44]..[1168,39399+49])
                  Ptyp_constr "Env.t" (typing/rec_check.ml[1168,39399+44]..[1168,39399+49])
                  []
                core_type (typing/rec_check.ml[1168,39399+53]..[1168,39399+57])
                  Ptyp_constr "mode" (typing/rec_check.ml[1168,39399+53]..[1168,39399+57])
                  []
      <def>
        pattern (typing/rec_check.ml[1187,39929+4]..[1187,39929+65]) ghost
          Ppat_constraint
          pattern (typing/rec_check.ml[1187,39929+4]..[1187,39929+28])
            Ppat_var "is_destructuring_pattern" (typing/rec_check.ml[1187,39929+4]..[1187,39929+28])
          core_type (typing/rec_check.ml[1187,39929+4]..[1202,40476+64]) ghost
            Ptyp_poly 'k
            core_type (typing/rec_check.ml[1187,39929+40]..[1187,39929+65])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[1187,39929+40]..[1187,39929+57])
                Ptyp_constr "general_pattern" (typing/rec_check.ml[1187,39929+42]..[1187,39929+57])
                [
                  core_type (typing/rec_check.ml[1187,39929+40]..[1187,39929+41])
                    Ptyp_var k
                ]
              core_type (typing/rec_check.ml[1187,39929+61]..[1187,39929+65])
                Ptyp_constr "bool" (typing/rec_check.ml[1187,39929+61]..[1187,39929+65])
                []
        expression (typing/rec_check.ml[1187,39929+4]..[1202,40476+64])
          Pexp_newtype "k"
          expression (typing/rec_check.ml[1187,39929+4]..[1202,40476+64])
            Pexp_constraint
            expression (typing/rec_check.ml[1188,39997+2]..[1202,40476+64])
              Pexp_fun
              Nolabel
              None
              pattern (typing/rec_check.ml[1188,39997+6]..[1188,39997+9])
                Ppat_var "pat" (typing/rec_check.ml[1188,39997+6]..[1188,39997+9])
              expression (typing/rec_check.ml[1188,39997+13]..[1202,40476+64])
                Pexp_match
                expression (typing/rec_check.ml[1188,39997+19]..[1188,39997+31])
                  Pexp_field
                  expression (typing/rec_check.ml[1188,39997+19]..[1188,39997+22])
                    Pexp_ident "pat" (typing/rec_check.ml[1188,39997+19]..[1188,39997+22])
                  "pat_desc" (typing/rec_check.ml[1188,39997+23]..[1188,39997+31])
                [
                  <case>
                    pattern (typing/rec_check.ml[1189,40034+6]..[1189,40034+14])
                      Ppat_construct "Tpat_any" (typing/rec_check.ml[1189,40034+6]..[1189,40034+14])
                      None
                    expression (typing/rec_check.ml[1189,40034+18]..[1189,40034+23])
                      Pexp_construct "false" (typing/rec_check.ml[1189,40034+18]..[1189,40034+23])
                      None
                  <case>
                    pattern (typing/rec_check.ml[1190,40058+6]..[1190,40058+21])
                      Ppat_construct "Tpat_var" (typing/rec_check.ml[1190,40058+6]..[1190,40058+14])
                      Some
                        []
                        pattern (typing/rec_check.ml[1190,40058+15]..[1190,40058+21])
                          Ppat_tuple
                          [
                            pattern (typing/rec_check.ml[1190,40058+16]..[1190,40058+17])
                              Ppat_any
                            pattern (typing/rec_check.ml[1190,40058+19]..[1190,40058+20])
                              Ppat_any
                          ]
                    expression (typing/rec_check.ml[1190,40058+25]..[1190,40058+30])
                      Pexp_construct "false" (typing/rec_check.ml[1190,40058+25]..[1190,40058+30])
                      None
                  <case>
                    pattern (typing/rec_check.ml[1191,40089+6]..[1191,40089+28])
                      Ppat_construct "Tpat_alias" (typing/rec_check.ml[1191,40089+6]..[1191,40089+16])
                      Some
                        []
                        pattern (typing/rec_check.ml[1191,40089+17]..[1191,40089+28])
                          Ppat_tuple
                          [
                            pattern (typing/rec_check.ml[1191,40089+18]..[1191,40089+21])
                              Ppat_var "pat" (typing/rec_check.ml[1191,40089+18]..[1191,40089+21])
                            pattern (typing/rec_check.ml[1191,40089+23]..[1191,40089+24])
                              Ppat_any
                            pattern (typing/rec_check.ml[1191,40089+26]..[1191,40089+27])
                              Ppat_any
                          ]
                    expression (typing/rec_check.ml[1191,40089+32]..[1191,40089+60])
                      Pexp_apply
                      expression (typing/rec_check.ml[1191,40089+32]..[1191,40089+56])
                        Pexp_ident "is_destructuring_pattern" (typing/rec_check.ml[1191,40089+32]..[1191,40089+56])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1191,40089+57]..[1191,40089+60])
                            Pexp_ident "pat" (typing/rec_check.ml[1191,40089+57]..[1191,40089+60])
                      ]
                  <case>
                    pattern (typing/rec_check.ml[1192,40150+6]..[1192,40150+21])
                      Ppat_construct "Tpat_constant" (typing/rec_check.ml[1192,40150+6]..[1192,40150+19])
                      Some
                        []
                        pattern (typing/rec_check.ml[1192,40150+20]..[1192,40150+21])
                          Ppat_any
                    expression (typing/rec_check.ml[1192,40150+25]..[1192,40150+29])
                      Pexp_construct "true" (typing/rec_check.ml[1192,40150+25]..[1192,40150+29])
                      None
                  <case>
                    pattern (typing/rec_check.ml[1193,40180+6]..[1193,40180+18])
                      Ppat_construct "Tpat_tuple" (typing/rec_check.ml[1193,40180+6]..[1193,40180+16])
                      Some
                        []
                        pattern (typing/rec_check.ml[1193,40180+17]..[1193,40180+18])
                          Ppat_any
                    expression (typing/rec_check.ml[1193,40180+22]..[1193,40180+26])
                      Pexp_construct "true" (typing/rec_check.ml[1193,40180+22]..[1193,40180+26])
                      None
                  <case>
                    pattern (typing/rec_check.ml[1194,40207+6]..[1194,40207+22])
                      Ppat_construct "Tpat_construct" (typing/rec_check.ml[1194,40207+6]..[1194,40207+20])
                      Some
                        []
                        pattern (typing/rec_check.ml[1194,40207+21]..[1194,40207+22])
                          Ppat_any
                    expression (typing/rec_check.ml[1194,40207+26]..[1194,40207+30])
                      Pexp_construct "true" (typing/rec_check.ml[1194,40207+26]..[1194,40207+30])
                      None
                  <case>
                    pattern (typing/rec_check.ml[1195,40238+6]..[1195,40238+20])
                      Ppat_construct "Tpat_variant" (typing/rec_check.ml[1195,40238+6]..[1195,40238+18])
                      Some
                        []
                        pattern (typing/rec_check.ml[1195,40238+19]..[1195,40238+20])
                          Ppat_any
                    expression (typing/rec_check.ml[1195,40238+24]..[1195,40238+28])
                      Pexp_construct "true" (typing/rec_check.ml[1195,40238+24]..[1195,40238+28])
                      None
                  <case>
                    pattern (typing/rec_check.ml[1196,40267+6]..[1196,40267+24])
                      Ppat_construct "Tpat_record" (typing/rec_check.ml[1196,40267+6]..[1196,40267+17])
                      Some
                        []
                        pattern (typing/rec_check.ml[1196,40267+18]..[1196,40267+24])
                          Ppat_tuple
                          [
                            pattern (typing/rec_check.ml[1196,40267+19]..[1196,40267+20])
                              Ppat_any
                            pattern (typing/rec_check.ml[1196,40267+22]..[1196,40267+23])
                              Ppat_any
                          ]
                    expression (typing/rec_check.ml[1196,40267+28]..[1196,40267+32])
                      Pexp_construct "true" (typing/rec_check.ml[1196,40267+28]..[1196,40267+32])
                      None
                  <case>
                    pattern (typing/rec_check.ml[1197,40300+6]..[1197,40300+18])
                      Ppat_construct "Tpat_array" (typing/rec_check.ml[1197,40300+6]..[1197,40300+16])
                      Some
                        []
                        pattern (typing/rec_check.ml[1197,40300+17]..[1197,40300+18])
                          Ppat_any
                    expression (typing/rec_check.ml[1197,40300+22]..[1197,40300+26])
                      Pexp_construct "true" (typing/rec_check.ml[1197,40300+22]..[1197,40300+26])
                      None
                  <case>
                    pattern (typing/rec_check.ml[1198,40327+6]..[1198,40327+17])
                      Ppat_construct "Tpat_lazy" (typing/rec_check.ml[1198,40327+6]..[1198,40327+15])
                      Some
                        []
                        pattern (typing/rec_check.ml[1198,40327+16]..[1198,40327+17])
                          Ppat_any
                    expression (typing/rec_check.ml[1198,40327+21]..[1198,40327+25])
                      Pexp_construct "true" (typing/rec_check.ml[1198,40327+21]..[1198,40327+25])
                      None
                  <case>
                    pattern (typing/rec_check.ml[1199,40353+6]..[1199,40353+20])
                      Ppat_construct "Tpat_value" (typing/rec_check.ml[1199,40353+6]..[1199,40353+16])
                      Some
                        []
                        pattern (typing/rec_check.ml[1199,40353+17]..[1199,40353+20])
                          Ppat_var "pat" (typing/rec_check.ml[1199,40353+17]..[1199,40353+20])
                    expression (typing/rec_check.ml[1199,40353+24]..[1199,40353+65])
                      Pexp_apply
                      expression (typing/rec_check.ml[1199,40353+24]..[1199,40353+48])
                        Pexp_ident "is_destructuring_pattern" (typing/rec_check.ml[1199,40353+24]..[1199,40353+48])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1199,40353+49]..[1199,40353+65])
                            Pexp_coerce
                            expression (typing/rec_check.ml[1199,40353+50]..[1199,40353+53])
                              Pexp_ident "pat" (typing/rec_check.ml[1199,40353+50]..[1199,40353+53])
                            None
                            core_type (typing/rec_check.ml[1199,40353+57]..[1199,40353+64])
                              Ptyp_constr "pattern" (typing/rec_check.ml[1199,40353+57]..[1199,40353+64])
                              []
                      ]
                  <case>
                    pattern (typing/rec_check.ml[1200,40419+6]..[1200,40419+22])
                      Ppat_construct "Tpat_exception" (typing/rec_check.ml[1200,40419+6]..[1200,40419+20])
                      Some
                        []
                        pattern (typing/rec_check.ml[1200,40419+21]..[1200,40419+22])
                          Ppat_any
                    expression (typing/rec_check.ml[1200,40419+26]..[1200,40419+31])
                      Pexp_construct "false" (typing/rec_check.ml[1200,40419+26]..[1200,40419+31])
                      None
                  <case>
                    pattern (typing/rec_check.ml[1201,40451+6]..[1201,40451+21])
                      Ppat_construct "Tpat_or" (typing/rec_check.ml[1201,40451+6]..[1201,40451+13])
                      Some
                        []
                        pattern (typing/rec_check.ml[1201,40451+14]..[1201,40451+21])
                          Ppat_tuple
                          [
                            pattern (typing/rec_check.ml[1201,40451+15]..[1201,40451+16])
                              Ppat_var "l" (typing/rec_check.ml[1201,40451+15]..[1201,40451+16])
                            pattern (typing/rec_check.ml[1201,40451+17]..[1201,40451+18])
                              Ppat_var "r" (typing/rec_check.ml[1201,40451+17]..[1201,40451+18])
                            pattern (typing/rec_check.ml[1201,40451+19]..[1201,40451+20])
                              Ppat_any
                          ]
                    expression (typing/rec_check.ml[1202,40476+8]..[1202,40476+64])
                      Pexp_apply
                      expression (typing/rec_check.ml[1202,40476+35]..[1202,40476+37])
                        Pexp_ident "||" (typing/rec_check.ml[1202,40476+35]..[1202,40476+37])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1202,40476+8]..[1202,40476+34])
                            Pexp_apply
                            expression (typing/rec_check.ml[1202,40476+8]..[1202,40476+32])
                              Pexp_ident "is_destructuring_pattern" (typing/rec_check.ml[1202,40476+8]..[1202,40476+32])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1202,40476+33]..[1202,40476+34])
                                  Pexp_ident "l" (typing/rec_check.ml[1202,40476+33]..[1202,40476+34])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1202,40476+38]..[1202,40476+64])
                            Pexp_apply
                            expression (typing/rec_check.ml[1202,40476+38]..[1202,40476+62])
                              Pexp_ident "is_destructuring_pattern" (typing/rec_check.ml[1202,40476+38]..[1202,40476+62])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1202,40476+63]..[1202,40476+64])
                                  Pexp_ident "r" (typing/rec_check.ml[1202,40476+63]..[1202,40476+64])
                            ]
                      ]
                ]
            core_type (typing/rec_check.ml[1187,39929+40]..[1187,39929+65])
              Ptyp_arrow
              Nolabel
              core_type (typing/rec_check.ml[1187,39929+40]..[1187,39929+57])
                Ptyp_constr "general_pattern" (typing/rec_check.ml[1187,39929+42]..[1187,39929+57])
                [
                  core_type (typing/rec_check.ml[1187,39929+40]..[1187,39929+41])
                    Ptyp_constr "k" (typing/rec_check.ml[1187,39929+40]..[1187,39929+41])
                    []
                ]
              core_type (typing/rec_check.ml[1187,39929+61]..[1187,39929+65])
                Ptyp_constr "bool" (typing/rec_check.ml[1187,39929+61]..[1187,39929+65])
                []
    ]
  structure_item (typing/rec_check.ml[1204,40542+0]..[1218,41024+68])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[1204,40542+4]..[1204,40542+33])
          Ppat_var "is_valid_recursive_expression" (typing/rec_check.ml[1204,40542+4]..[1204,40542+33])
        expression (typing/rec_check.ml[1204,40542+34]..[1218,41024+68]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/rec_check.ml[1204,40542+34]..[1204,40542+40])
            Ppat_var "idlist" (typing/rec_check.ml[1204,40542+34]..[1204,40542+40])
          expression (typing/rec_check.ml[1204,40542+41]..[1218,41024+68]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[1204,40542+41]..[1204,40542+45])
              Ppat_var "expr" (typing/rec_check.ml[1204,40542+41]..[1204,40542+45])
            expression (typing/rec_check.ml[1205,40590+2]..[1218,41024+68])
              Pexp_match
              expression (typing/rec_check.ml[1205,40590+8]..[1205,40590+21])
                Pexp_field
                expression (typing/rec_check.ml[1205,40590+8]..[1205,40590+12])
                  Pexp_ident "expr" (typing/rec_check.ml[1205,40590+8]..[1205,40590+12])
                "exp_desc" (typing/rec_check.ml[1205,40590+13]..[1205,40590+21])
              [
                <case>
                  pattern (typing/rec_check.ml[1206,40617+4]..[1206,40617+19])
                    Ppat_construct "Texp_function" (typing/rec_check.ml[1206,40617+4]..[1206,40617+17])
                    Some
                      []
                      pattern (typing/rec_check.ml[1206,40617+18]..[1206,40617+19])
                        Ppat_any
                  expression (typing/rec_check.ml[1208,40716+5]..[1208,40716+9])
                    Pexp_construct "true" (typing/rec_check.ml[1208,40716+5]..[1208,40716+9])
                    None
                <case>
                  pattern (typing/rec_check.ml[1209,40726+4]..[1209,40726+5])
                    Ppat_any
                  expression (typing/rec_check.ml[1210,40735+5]..[1218,41024+68])
                    Pexp_match
                    expression (typing/rec_check.ml[1210,40735+11]..[1210,40735+35])
                      Pexp_apply
                      expression (typing/rec_check.ml[1210,40735+11]..[1210,40735+30])
                        Pexp_ident "classify_expression" (typing/rec_check.ml[1210,40735+11]..[1210,40735+30])
                      [
                        <arg>
                        Nolabel
                          expression (typing/rec_check.ml[1210,40735+31]..[1210,40735+35])
                            Pexp_ident "expr" (typing/rec_check.ml[1210,40735+31]..[1210,40735+35])
                      ]
                    [
                      <case>
                        pattern (typing/rec_check.ml[1211,40776+7]..[1211,40776+13])
                          Ppat_construct "Static" (typing/rec_check.ml[1211,40776+7]..[1211,40776+13])
                          None
                        expression (typing/rec_check.ml[1213,40837+8]..[1214,40880+36])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/rec_check.ml[1213,40837+12]..[1213,40837+14])
                                Ppat_var "ty" (typing/rec_check.ml[1213,40837+12]..[1213,40837+14])
                              expression (typing/rec_check.ml[1213,40837+17]..[1213,40837+39])
                                Pexp_apply
                                expression (typing/rec_check.ml[1213,40837+17]..[1213,40837+27])
                                  Pexp_ident "expression" (typing/rec_check.ml[1213,40837+17]..[1213,40837+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1213,40837+28]..[1213,40837+32])
                                      Pexp_ident "expr" (typing/rec_check.ml[1213,40837+28]..[1213,40837+32])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1213,40837+33]..[1213,40837+39])
                                      Pexp_construct "Return" (typing/rec_check.ml[1213,40837+33]..[1213,40837+39])
                                      None
                                ]
                          ]
                          expression (typing/rec_check.ml[1214,40880+8]..[1214,40880+36])
                            Pexp_apply
                            expression (typing/rec_check.ml[1214,40880+32]..[1214,40880+33])
                              Pexp_ident "=" (typing/rec_check.ml[1214,40880+32]..[1214,40880+33])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1214,40880+8]..[1214,40880+31])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[1214,40880+8]..[1214,40880+21])
                                    Pexp_ident "Env.unguarded" (typing/rec_check.ml[1214,40880+8]..[1214,40880+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[1214,40880+22]..[1214,40880+24])
                                        Pexp_ident "ty" (typing/rec_check.ml[1214,40880+22]..[1214,40880+24])
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[1214,40880+25]..[1214,40880+31])
                                        Pexp_ident "idlist" (typing/rec_check.ml[1214,40880+25]..[1214,40880+31])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1214,40880+34]..[1214,40880+36])
                                  Pexp_construct "[]" (typing/rec_check.ml[1214,40880+34]..[1214,40880+36])
                                  None
                            ]
                      <case>
                        pattern (typing/rec_check.ml[1215,40917+7]..[1215,40917+14])
                          Ppat_construct "Dynamic" (typing/rec_check.ml[1215,40917+7]..[1215,40917+14])
                          None
                        expression (typing/rec_check.ml[1217,40981+8]..[1218,41024+68])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/rec_check.ml[1217,40981+12]..[1217,40981+14])
                                Ppat_var "ty" (typing/rec_check.ml[1217,40981+12]..[1217,40981+14])
                              expression (typing/rec_check.ml[1217,40981+17]..[1217,40981+39])
                                Pexp_apply
                                expression (typing/rec_check.ml[1217,40981+17]..[1217,40981+27])
                                  Pexp_ident "expression" (typing/rec_check.ml[1217,40981+17]..[1217,40981+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1217,40981+28]..[1217,40981+32])
                                      Pexp_ident "expr" (typing/rec_check.ml[1217,40981+28]..[1217,40981+32])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1217,40981+33]..[1217,40981+39])
                                      Pexp_construct "Return" (typing/rec_check.ml[1217,40981+33]..[1217,40981+39])
                                      None
                                ]
                          ]
                          expression (typing/rec_check.ml[1218,41024+8]..[1218,41024+68])
                            Pexp_apply
                            expression (typing/rec_check.ml[1218,41024+37]..[1218,41024+39])
                              Pexp_ident "&&" (typing/rec_check.ml[1218,41024+37]..[1218,41024+39])
                            [
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1218,41024+8]..[1218,41024+36])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[1218,41024+32]..[1218,41024+33])
                                    Pexp_ident "=" (typing/rec_check.ml[1218,41024+32]..[1218,41024+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[1218,41024+8]..[1218,41024+31])
                                        Pexp_apply
                                        expression (typing/rec_check.ml[1218,41024+8]..[1218,41024+21])
                                          Pexp_ident "Env.unguarded" (typing/rec_check.ml[1218,41024+8]..[1218,41024+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/rec_check.ml[1218,41024+22]..[1218,41024+24])
                                              Pexp_ident "ty" (typing/rec_check.ml[1218,41024+22]..[1218,41024+24])
                                          <arg>
                                          Nolabel
                                            expression (typing/rec_check.ml[1218,41024+25]..[1218,41024+31])
                                              Pexp_ident "idlist" (typing/rec_check.ml[1218,41024+25]..[1218,41024+31])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[1218,41024+34]..[1218,41024+36])
                                        Pexp_construct "[]" (typing/rec_check.ml[1218,41024+34]..[1218,41024+36])
                                        None
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/rec_check.ml[1218,41024+40]..[1218,41024+68])
                                  Pexp_apply
                                  expression (typing/rec_check.ml[1218,41024+64]..[1218,41024+65])
                                    Pexp_ident "=" (typing/rec_check.ml[1218,41024+64]..[1218,41024+65])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[1218,41024+40]..[1218,41024+63])
                                        Pexp_apply
                                        expression (typing/rec_check.ml[1218,41024+40]..[1218,41024+53])
                                          Pexp_ident "Env.dependent" (typing/rec_check.ml[1218,41024+40]..[1218,41024+53])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/rec_check.ml[1218,41024+54]..[1218,41024+56])
                                              Pexp_ident "ty" (typing/rec_check.ml[1218,41024+54]..[1218,41024+56])
                                          <arg>
                                          Nolabel
                                            expression (typing/rec_check.ml[1218,41024+57]..[1218,41024+63])
                                              Pexp_ident "idlist" (typing/rec_check.ml[1218,41024+57]..[1218,41024+63])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/rec_check.ml[1218,41024+66]..[1218,41024+68])
                                        Pexp_construct "[]" (typing/rec_check.ml[1218,41024+66]..[1218,41024+68])
                                        None
                                  ]
                            ]
                    ]
              ]
    ]
  structure_item (typing/rec_check.ml[1230,41569+0]..[1260,42454+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/rec_check.ml[1230,41569+4]..[1230,41569+23])
          Ppat_var "is_valid_class_expr" (typing/rec_check.ml[1230,41569+4]..[1230,41569+23])
        expression (typing/rec_check.ml[1230,41569+24]..[1260,42454+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/rec_check.ml[1230,41569+24]..[1230,41569+30])
            Ppat_var "idlist" (typing/rec_check.ml[1230,41569+24]..[1230,41569+30])
          expression (typing/rec_check.ml[1230,41569+31]..[1260,42454+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/rec_check.ml[1230,41569+31]..[1230,41569+33])
              Ppat_var "ce" (typing/rec_check.ml[1230,41569+31]..[1230,41569+33])
            expression (typing/rec_check.ml[1231,41605+2]..[1260,42454+19])
              Pexp_let Rec
              [
                <def>
                  pattern (typing/rec_check.ml[1231,41605+10]..[1231,41605+60]) ghost
                    Ppat_constraint
                    pattern (typing/rec_check.ml[1231,41605+10]..[1231,41605+20])
                      Ppat_var "class_expr" (typing/rec_check.ml[1231,41605+10]..[1231,41605+20])
                    core_type (typing/rec_check.ml[1231,41605+23]..[1231,41605+60]) ghost
                      Ptyp_poly
                      core_type (typing/rec_check.ml[1231,41605+23]..[1231,41605+60])
                        Ptyp_arrow
                        Nolabel
                        core_type (typing/rec_check.ml[1231,41605+23]..[1231,41605+27])
                          Ptyp_constr "mode" (typing/rec_check.ml[1231,41605+23]..[1231,41605+27])
                          []
                        core_type (typing/rec_check.ml[1231,41605+31]..[1231,41605+60])
                          Ptyp_arrow
                          Nolabel
                          core_type (typing/rec_check.ml[1231,41605+31]..[1231,41605+51])
                            Ptyp_constr "Typedtree.class_expr" (typing/rec_check.ml[1231,41605+31]..[1231,41605+51])
                            []
                          core_type (typing/rec_check.ml[1231,41605+55]..[1231,41605+60])
                            Ptyp_constr "Env.t" (typing/rec_check.ml[1231,41605+55]..[1231,41605+60])
                            []
                  expression (typing/rec_check.ml[1231,41605+10]..[1256,42350+26])
                    Pexp_constraint
                    expression (typing/rec_check.ml[1232,41668+4]..[1256,42350+26])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/rec_check.ml[1232,41668+8]..[1232,41668+12])
                        Ppat_var "mode" (typing/rec_check.ml[1232,41668+8]..[1232,41668+12])
                      expression (typing/rec_check.ml[1232,41668+13]..[1256,42350+26]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/rec_check.ml[1232,41668+13]..[1232,41668+15])
                          Ppat_var "ce" (typing/rec_check.ml[1232,41668+13]..[1232,41668+15])
                        expression (typing/rec_check.ml[1232,41668+19]..[1256,42350+26])
                          Pexp_match
                          expression (typing/rec_check.ml[1232,41668+25]..[1232,41668+35])
                            Pexp_field
                            expression (typing/rec_check.ml[1232,41668+25]..[1232,41668+27])
                              Pexp_ident "ce" (typing/rec_check.ml[1232,41668+25]..[1232,41668+27])
                            "cl_desc" (typing/rec_check.ml[1232,41668+28]..[1232,41668+35])
                          [
                            <case>
                              pattern (typing/rec_check.ml[1233,41709+8]..[1233,41709+27])
                                Ppat_construct "Tcl_ident" (typing/rec_check.ml[1233,41709+8]..[1233,41709+17])
                                Some
                                  []
                                  pattern (typing/rec_check.ml[1233,41709+18]..[1233,41709+27])
                                    Ppat_tuple
                                    [
                                      pattern (typing/rec_check.ml[1233,41709+19]..[1233,41709+20])
                                        Ppat_any
                                      pattern (typing/rec_check.ml[1233,41709+22]..[1233,41709+23])
                                        Ppat_any
                                      pattern (typing/rec_check.ml[1233,41709+25]..[1233,41709+26])
                                        Ppat_any
                                    ]
                              expression (typing/rec_check.ml[1238,41804+8]..[1238,41804+17])
                                Pexp_ident "Env.empty" (typing/rec_check.ml[1238,41804+8]..[1238,41804+17])
                            <case>
                              pattern (typing/rec_check.ml[1239,41822+8]..[1239,41822+23])
                                Ppat_construct "Tcl_structure" (typing/rec_check.ml[1239,41822+8]..[1239,41822+21])
                                Some
                                  []
                                  pattern (typing/rec_check.ml[1239,41822+22]..[1239,41822+23])
                                    Ppat_any
                              expression (typing/rec_check.ml[1244,41939+8]..[1244,41939+17])
                                Pexp_ident "Env.empty" (typing/rec_check.ml[1244,41939+8]..[1244,41939+17])
                            <case>
                              pattern (typing/rec_check.ml[1245,41957+8]..[1245,41957+31])
                                Ppat_construct "Tcl_fun" (typing/rec_check.ml[1245,41957+8]..[1245,41957+15])
                                Some
                                  []
                                  pattern (typing/rec_check.ml[1245,41957+16]..[1245,41957+31])
                                    Ppat_tuple
                                    [
                                      pattern (typing/rec_check.ml[1245,41957+17]..[1245,41957+18])
                                        Ppat_any
                                      pattern (typing/rec_check.ml[1245,41957+20]..[1245,41957+21])
                                        Ppat_any
                                      pattern (typing/rec_check.ml[1245,41957+23]..[1245,41957+24])
                                        Ppat_any
                                      pattern (typing/rec_check.ml[1245,41957+26]..[1245,41957+27])
                                        Ppat_any
                                      pattern (typing/rec_check.ml[1245,41957+29]..[1245,41957+30])
                                        Ppat_any
                                    ]
                              expression (typing/rec_check.ml[1245,41957+35]..[1245,41957+44])
                                Pexp_ident "Env.empty" (typing/rec_check.ml[1245,41957+35]..[1245,41957+44])
                            <case>
                              pattern (typing/rec_check.ml[1250,42100+8]..[1250,42100+24])
                                Ppat_construct "Tcl_apply" (typing/rec_check.ml[1250,42100+8]..[1250,42100+17])
                                Some
                                  []
                                  pattern (typing/rec_check.ml[1250,42100+18]..[1250,42100+24])
                                    Ppat_tuple
                                    [
                                      pattern (typing/rec_check.ml[1250,42100+19]..[1250,42100+20])
                                        Ppat_any
                                      pattern (typing/rec_check.ml[1250,42100+22]..[1250,42100+23])
                                        Ppat_any
                                    ]
                              expression (typing/rec_check.ml[1250,42100+28]..[1250,42100+37])
                                Pexp_ident "Env.empty" (typing/rec_check.ml[1250,42100+28]..[1250,42100+37])
                            <case>
                              pattern (typing/rec_check.ml[1251,42138+8]..[1251,42138+43])
                                Ppat_construct "Tcl_let" (typing/rec_check.ml[1251,42138+8]..[1251,42138+15])
                                Some
                                  []
                                  pattern (typing/rec_check.ml[1251,42138+16]..[1251,42138+43])
                                    Ppat_tuple
                                    [
                                      pattern (typing/rec_check.ml[1251,42138+17]..[1251,42138+25])
                                        Ppat_var "rec_flag" (typing/rec_check.ml[1251,42138+17]..[1251,42138+25])
                                      pattern (typing/rec_check.ml[1251,42138+27]..[1251,42138+35])
                                        Ppat_var "bindings" (typing/rec_check.ml[1251,42138+27]..[1251,42138+35])
                                      pattern (typing/rec_check.ml[1251,42138+37]..[1251,42138+38])
                                        Ppat_any
                                      pattern (typing/rec_check.ml[1251,42138+40]..[1251,42138+42])
                                        Ppat_var "ce" (typing/rec_check.ml[1251,42138+40]..[1251,42138+42])
                                    ]
                              expression (typing/rec_check.ml[1252,42185+8]..[1252,42185+66])
                                Pexp_apply
                                expression (typing/rec_check.ml[1252,42185+8]..[1252,42185+22])
                                  Pexp_ident "value_bindings" (typing/rec_check.ml[1252,42185+8]..[1252,42185+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1252,42185+23]..[1252,42185+31])
                                      Pexp_ident "rec_flag" (typing/rec_check.ml[1252,42185+23]..[1252,42185+31])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1252,42185+32]..[1252,42185+40])
                                      Pexp_ident "bindings" (typing/rec_check.ml[1252,42185+32]..[1252,42185+40])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1252,42185+41]..[1252,42185+45])
                                      Pexp_ident "mode" (typing/rec_check.ml[1252,42185+41]..[1252,42185+45])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1252,42185+46]..[1252,42185+66])
                                      Pexp_apply
                                      expression (typing/rec_check.ml[1252,42185+47]..[1252,42185+57])
                                        Pexp_ident "class_expr" (typing/rec_check.ml[1252,42185+47]..[1252,42185+57])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[1252,42185+58]..[1252,42185+62])
                                            Pexp_ident "mode" (typing/rec_check.ml[1252,42185+58]..[1252,42185+62])
                                        <arg>
                                        Nolabel
                                          expression (typing/rec_check.ml[1252,42185+63]..[1252,42185+65])
                                            Pexp_ident "ce" (typing/rec_check.ml[1252,42185+63]..[1252,42185+65])
                                      ]
                                ]
                            <case>
                              pattern (typing/rec_check.ml[1253,42252+8]..[1253,42252+39])
                                Ppat_construct "Tcl_constraint" (typing/rec_check.ml[1253,42252+8]..[1253,42252+22])
                                Some
                                  []
                                  pattern (typing/rec_check.ml[1253,42252+23]..[1253,42252+39])
                                    Ppat_tuple
                                    [
                                      pattern (typing/rec_check.ml[1253,42252+24]..[1253,42252+26])
                                        Ppat_var "ce" (typing/rec_check.ml[1253,42252+24]..[1253,42252+26])
                                      pattern (typing/rec_check.ml[1253,42252+28]..[1253,42252+29])
                                        Ppat_any
                                      pattern (typing/rec_check.ml[1253,42252+31]..[1253,42252+32])
                                        Ppat_any
                                      pattern (typing/rec_check.ml[1253,42252+34]..[1253,42252+35])
                                        Ppat_any
                                      pattern (typing/rec_check.ml[1253,42252+37]..[1253,42252+38])
                                        Ppat_any
                                    ]
                              expression (typing/rec_check.ml[1254,42295+8]..[1254,42295+26])
                                Pexp_apply
                                expression (typing/rec_check.ml[1254,42295+8]..[1254,42295+18])
                                  Pexp_ident "class_expr" (typing/rec_check.ml[1254,42295+8]..[1254,42295+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1254,42295+19]..[1254,42295+23])
                                      Pexp_ident "mode" (typing/rec_check.ml[1254,42295+19]..[1254,42295+23])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1254,42295+24]..[1254,42295+26])
                                      Pexp_ident "ce" (typing/rec_check.ml[1254,42295+24]..[1254,42295+26])
                                ]
                            <case>
                              pattern (typing/rec_check.ml[1255,42322+8]..[1255,42322+24])
                                Ppat_construct "Tcl_open" (typing/rec_check.ml[1255,42322+8]..[1255,42322+16])
                                Some
                                  []
                                  pattern (typing/rec_check.ml[1255,42322+17]..[1255,42322+24])
                                    Ppat_tuple
                                    [
                                      pattern (typing/rec_check.ml[1255,42322+18]..[1255,42322+19])
                                        Ppat_any
                                      pattern (typing/rec_check.ml[1255,42322+21]..[1255,42322+23])
                                        Ppat_var "ce" (typing/rec_check.ml[1255,42322+21]..[1255,42322+23])
                                    ]
                              expression (typing/rec_check.ml[1256,42350+8]..[1256,42350+26])
                                Pexp_apply
                                expression (typing/rec_check.ml[1256,42350+8]..[1256,42350+18])
                                  Pexp_ident "class_expr" (typing/rec_check.ml[1256,42350+8]..[1256,42350+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1256,42350+19]..[1256,42350+23])
                                      Pexp_ident "mode" (typing/rec_check.ml[1256,42350+19]..[1256,42350+23])
                                  <arg>
                                  Nolabel
                                    expression (typing/rec_check.ml[1256,42350+24]..[1256,42350+26])
                                      Pexp_ident "ce" (typing/rec_check.ml[1256,42350+24]..[1256,42350+26])
                                ]
                          ]
                    core_type (typing/rec_check.ml[1231,41605+23]..[1231,41605+60])
                      Ptyp_arrow
                      Nolabel
                      core_type (typing/rec_check.ml[1231,41605+23]..[1231,41605+27])
                        Ptyp_constr "mode" (typing/rec_check.ml[1231,41605+23]..[1231,41605+27])
                        []
                      core_type (typing/rec_check.ml[1231,41605+31]..[1231,41605+60])
                        Ptyp_arrow
                        Nolabel
                        core_type (typing/rec_check.ml[1231,41605+31]..[1231,41605+51])
                          Ptyp_constr "Typedtree.class_expr" (typing/rec_check.ml[1231,41605+31]..[1231,41605+51])
                          []
                        core_type (typing/rec_check.ml[1231,41605+55]..[1231,41605+60])
                          Ptyp_constr "Env.t" (typing/rec_check.ml[1231,41605+55]..[1231,41605+60])
                          []
              ]
              expression (typing/rec_check.ml[1258,42382+2]..[1260,42454+19])
                Pexp_match
                expression (typing/rec_check.ml[1258,42382+8]..[1258,42382+51])
                  Pexp_apply
                  expression (typing/rec_check.ml[1258,42382+8]..[1258,42382+21])
                    Pexp_ident "Env.unguarded" (typing/rec_check.ml[1258,42382+8]..[1258,42382+21])
                  [
                    <arg>
                    Nolabel
                      expression (typing/rec_check.ml[1258,42382+22]..[1258,42382+44])
                        Pexp_apply
                        expression (typing/rec_check.ml[1258,42382+23]..[1258,42382+33])
                          Pexp_ident "class_expr" (typing/rec_check.ml[1258,42382+23]..[1258,42382+33])
                        [
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[1258,42382+34]..[1258,42382+40])
                              Pexp_construct "Return" (typing/rec_check.ml[1258,42382+34]..[1258,42382+40])
                              None
                          <arg>
                          Nolabel
                            expression (typing/rec_check.ml[1258,42382+41]..[1258,42382+43])
                              Pexp_ident "ce" (typing/rec_check.ml[1258,42382+41]..[1258,42382+43])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/rec_check.ml[1258,42382+45]..[1258,42382+51])
                        Pexp_ident "idlist" (typing/rec_check.ml[1258,42382+45]..[1258,42382+51])
                  ]
                [
                  <case>
                    pattern (typing/rec_check.ml[1259,42439+4]..[1259,42439+6])
                      Ppat_construct "[]" (typing/rec_check.ml[1259,42439+4]..[1259,42439+6])
                      None
                    expression (typing/rec_check.ml[1259,42439+10]..[1259,42439+14])
                      Pexp_construct "true" (typing/rec_check.ml[1259,42439+10]..[1259,42439+14])
                      None
                  <case>
                    pattern (typing/rec_check.ml[1260,42454+4]..[1260,42454+10])
                      Ppat_construct "::" (typing/rec_check.ml[1260,42454+6]..[1260,42454+8])
                      Some
                        []
                        pattern (typing/rec_check.ml[1260,42454+4]..[1260,42454+10]) ghost
                          Ppat_tuple
                          [
                            pattern (typing/rec_check.ml[1260,42454+4]..[1260,42454+5])
                              Ppat_any
                            pattern (typing/rec_check.ml[1260,42454+9]..[1260,42454+10])
                              Ppat_any
                          ]
                    expression (typing/rec_check.ml[1260,42454+14]..[1260,42454+19])
                      Pexp_construct "false" (typing/rec_check.ml[1260,42454+14]..[1260,42454+19])
                      None
                ]
    ]
]

