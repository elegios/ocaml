[
  structure_item (stdlib/lazy.ml[50,2292+0]..[50,2292+33])
    Pstr_type Rec
    [
      type_declaration "t" (stdlib/lazy.ml[50,2292+8]..[50,2292+9]) (stdlib/lazy.ml[50,2292+0]..[50,2292+33])
        ptype_params =
          [
            core_type (stdlib/lazy.ml[50,2292+5]..[50,2292+7])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/lazy.ml[50,2292+12]..[50,2292+33])
              Ptyp_constr "CamlinternalLazy.t" (stdlib/lazy.ml[50,2292+15]..[50,2292+33])
              [
                core_type (stdlib/lazy.ml[50,2292+12]..[50,2292+14])
                  Ptyp_var a
              ]
    ]
  structure_item (stdlib/lazy.ml[52,2327+0]..[52,2327+48])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/lazy.ml[52,2327+0]..[52,2327+48])
          pext_name = "Undefined"
          pext_kind =
            Pext_rebind
              "CamlinternalLazy.Undefined" (stdlib/lazy.ml[52,2327+22]..[52,2327+48])
  structure_item (stdlib/lazy.ml[54,2377+0]..[54,2377+66])
    Pstr_primitive
    value_description "make_forward" (stdlib/lazy.ml[54,2377+9]..[54,2377+21]) (stdlib/lazy.ml[54,2377+0]..[54,2377+66])
      core_type (stdlib/lazy.ml[54,2377+24]..[54,2377+39])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/lazy.ml[54,2377+24]..[54,2377+26])
          Ptyp_var a
        core_type (stdlib/lazy.ml[54,2377+30]..[54,2377+39])
          Ptyp_constr "lazy_t" (stdlib/lazy.ml[54,2377+33]..[54,2377+39])
          [
            core_type (stdlib/lazy.ml[54,2377+30]..[54,2377+32])
              Ptyp_var a
          ]
      [
        "caml_lazy_make_forward"
      ]
  structure_item (stdlib/lazy.ml[56,2445+0]..[56,2445+43])
    Pstr_primitive
    value_description "force" (stdlib/lazy.ml[56,2445+9]..[56,2445+14]) (stdlib/lazy.ml[56,2445+0]..[56,2445+43])
      core_type (stdlib/lazy.ml[56,2445+17]..[56,2445+27])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/lazy.ml[56,2445+17]..[56,2445+21])
          Ptyp_constr "t" (stdlib/lazy.ml[56,2445+20]..[56,2445+21])
          [
            core_type (stdlib/lazy.ml[56,2445+17]..[56,2445+19])
              Ptyp_var a
          ]
        core_type (stdlib/lazy.ml[56,2445+25]..[56,2445+27])
          Ptyp_var a
      [
        "%lazy_force"
      ]
  structure_item (stdlib/lazy.ml[59,2491+0]..[59,2491+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/lazy.ml[59,2491+4]..[59,2491+13])
          Ppat_var "force_val" (stdlib/lazy.ml[59,2491+4]..[59,2491+13])
        expression (stdlib/lazy.ml[59,2491+16]..[59,2491+42])
          Pexp_ident "CamlinternalLazy.force_val" (stdlib/lazy.ml[59,2491+16]..[59,2491+42])
    ]
  structure_item (stdlib/lazy.ml[61,2535+0]..[64,2645+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/lazy.ml[61,2535+4]..[61,2535+12])
          Ppat_var "from_fun" (stdlib/lazy.ml[61,2535+4]..[61,2535+12])
        expression (stdlib/lazy.ml[61,2535+13]..[64,2645+22]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/lazy.ml[61,2535+13]..[61,2535+31])
            Ppat_constraint
            pattern (stdlib/lazy.ml[61,2535+14]..[61,2535+15])
              Ppat_var "f" (stdlib/lazy.ml[61,2535+14]..[61,2535+15])
            core_type (stdlib/lazy.ml[61,2535+18]..[61,2535+30])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/lazy.ml[61,2535+18]..[61,2535+22])
                Ptyp_constr "unit" (stdlib/lazy.ml[61,2535+18]..[61,2535+22])
                []
              core_type (stdlib/lazy.ml[61,2535+26]..[61,2535+30])
                Ptyp_var arg
          expression (stdlib/lazy.ml[62,2569+2]..[64,2645+22])
            Pexp_let Nonrec
            [
              <def>
                pattern (stdlib/lazy.ml[62,2569+6]..[62,2569+7])
                  Ppat_var "x" (stdlib/lazy.ml[62,2569+6]..[62,2569+7])
                expression (stdlib/lazy.ml[62,2569+10]..[62,2569+38])
                  Pexp_apply
                  expression (stdlib/lazy.ml[62,2569+10]..[62,2569+23])
                    Pexp_ident "Obj.new_block" (stdlib/lazy.ml[62,2569+10]..[62,2569+23])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/lazy.ml[62,2569+24]..[62,2569+36])
                        Pexp_ident "Obj.lazy_tag" (stdlib/lazy.ml[62,2569+24]..[62,2569+36])
                    <arg>
                    Nolabel
                      expression (stdlib/lazy.ml[62,2569+37]..[62,2569+38])
                        Pexp_constant PConst_int (1,None)
                  ]
            ]
            expression (stdlib/lazy.ml[63,2611+2]..[64,2645+22])
              Pexp_sequence
              expression (stdlib/lazy.ml[63,2611+2]..[63,2611+32])
                Pexp_apply
                expression (stdlib/lazy.ml[63,2611+2]..[63,2611+15])
                  Pexp_ident "Obj.set_field" (stdlib/lazy.ml[63,2611+2]..[63,2611+15])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/lazy.ml[63,2611+16]..[63,2611+17])
                      Pexp_ident "x" (stdlib/lazy.ml[63,2611+16]..[63,2611+17])
                  <arg>
                  Nolabel
                    expression (stdlib/lazy.ml[63,2611+18]..[63,2611+19])
                      Pexp_constant PConst_int (0,None)
                  <arg>
                  Nolabel
                    expression (stdlib/lazy.ml[63,2611+20]..[63,2611+32])
                      Pexp_apply
                      expression (stdlib/lazy.ml[63,2611+21]..[63,2611+29])
                        Pexp_ident "Obj.repr" (stdlib/lazy.ml[63,2611+21]..[63,2611+29])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/lazy.ml[63,2611+30]..[63,2611+31])
                            Pexp_ident "f" (stdlib/lazy.ml[63,2611+30]..[63,2611+31])
                      ]
                ]
              expression (stdlib/lazy.ml[64,2645+2]..[64,2645+22])
                Pexp_constraint
                expression (stdlib/lazy.ml[64,2645+3]..[64,2645+12])
                  Pexp_apply
                  expression (stdlib/lazy.ml[64,2645+3]..[64,2645+10])
                    Pexp_ident "Obj.obj" (stdlib/lazy.ml[64,2645+3]..[64,2645+10])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/lazy.ml[64,2645+11]..[64,2645+12])
                        Pexp_ident "x" (stdlib/lazy.ml[64,2645+11]..[64,2645+12])
                  ]
                core_type (stdlib/lazy.ml[64,2645+15]..[64,2645+21])
                  Ptyp_constr "t" (stdlib/lazy.ml[64,2645+20]..[64,2645+21])
                  [
                    core_type (stdlib/lazy.ml[64,2645+15]..[64,2645+19])
                      Ptyp_var arg
                  ]
    ]
  structure_item (stdlib/lazy.ml[66,2669+0]..[72,2870+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/lazy.ml[66,2669+4]..[66,2669+12])
          Ppat_var "from_val" (stdlib/lazy.ml[66,2669+4]..[66,2669+12])
        expression (stdlib/lazy.ml[66,2669+13]..[72,2870+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/lazy.ml[66,2669+13]..[66,2669+23])
            Ppat_constraint
            pattern (stdlib/lazy.ml[66,2669+14]..[66,2669+15])
              Ppat_var "v" (stdlib/lazy.ml[66,2669+14]..[66,2669+15])
            core_type (stdlib/lazy.ml[66,2669+18]..[66,2669+22])
              Ptyp_var arg
          expression (stdlib/lazy.ml[67,2695+2]..[72,2870+5])
            Pexp_let Nonrec
            [
              <def>
                pattern (stdlib/lazy.ml[67,2695+6]..[67,2695+7])
                  Ppat_var "t" (stdlib/lazy.ml[67,2695+6]..[67,2695+7])
                expression (stdlib/lazy.ml[67,2695+10]..[67,2695+30])
                  Pexp_apply
                  expression (stdlib/lazy.ml[67,2695+10]..[67,2695+17])
                    Pexp_ident "Obj.tag" (stdlib/lazy.ml[67,2695+10]..[67,2695+17])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/lazy.ml[67,2695+18]..[67,2695+30])
                        Pexp_apply
                        expression (stdlib/lazy.ml[67,2695+19]..[67,2695+27])
                          Pexp_ident "Obj.repr" (stdlib/lazy.ml[67,2695+19]..[67,2695+27])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/lazy.ml[67,2695+28]..[67,2695+29])
                              Pexp_ident "v" (stdlib/lazy.ml[67,2695+28]..[67,2695+29])
                        ]
                  ]
            ]
            expression (stdlib/lazy.ml[68,2729+2]..[72,2870+5])
              Pexp_ifthenelse
              expression (stdlib/lazy.ml[68,2729+5]..[68,2729+66])
                Pexp_apply
                expression (stdlib/lazy.ml[68,2729+25]..[68,2729+27])
                  Pexp_ident "||" (stdlib/lazy.ml[68,2729+25]..[68,2729+27])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/lazy.ml[68,2729+5]..[68,2729+24])
                      Pexp_apply
                      expression (stdlib/lazy.ml[68,2729+7]..[68,2729+8])
                        Pexp_ident "=" (stdlib/lazy.ml[68,2729+7]..[68,2729+8])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/lazy.ml[68,2729+5]..[68,2729+6])
                            Pexp_ident "t" (stdlib/lazy.ml[68,2729+5]..[68,2729+6])
                        <arg>
                        Nolabel
                          expression (stdlib/lazy.ml[68,2729+9]..[68,2729+24])
                            Pexp_ident "Obj.forward_tag" (stdlib/lazy.ml[68,2729+9]..[68,2729+24])
                      ]
                  <arg>
                  Nolabel
                    expression (stdlib/lazy.ml[68,2729+28]..[68,2729+66])
                      Pexp_apply
                      expression (stdlib/lazy.ml[68,2729+45]..[68,2729+47])
                        Pexp_ident "||" (stdlib/lazy.ml[68,2729+45]..[68,2729+47])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/lazy.ml[68,2729+28]..[68,2729+44])
                            Pexp_apply
                            expression (stdlib/lazy.ml[68,2729+30]..[68,2729+31])
                              Pexp_ident "=" (stdlib/lazy.ml[68,2729+30]..[68,2729+31])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/lazy.ml[68,2729+28]..[68,2729+29])
                                  Pexp_ident "t" (stdlib/lazy.ml[68,2729+28]..[68,2729+29])
                              <arg>
                              Nolabel
                                expression (stdlib/lazy.ml[68,2729+32]..[68,2729+44])
                                  Pexp_ident "Obj.lazy_tag" (stdlib/lazy.ml[68,2729+32]..[68,2729+44])
                            ]
                        <arg>
                        Nolabel
                          expression (stdlib/lazy.ml[68,2729+48]..[68,2729+66])
                            Pexp_apply
                            expression (stdlib/lazy.ml[68,2729+50]..[68,2729+51])
                              Pexp_ident "=" (stdlib/lazy.ml[68,2729+50]..[68,2729+51])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/lazy.ml[68,2729+48]..[68,2729+49])
                                  Pexp_ident "t" (stdlib/lazy.ml[68,2729+48]..[68,2729+49])
                              <arg>
                              Nolabel
                                expression (stdlib/lazy.ml[68,2729+52]..[68,2729+66])
                                  Pexp_ident "Obj.double_tag" (stdlib/lazy.ml[68,2729+52]..[68,2729+66])
                            ]
                      ]
                ]
              expression (stdlib/lazy.ml[68,2729+72]..[70,2826+5])
                Pexp_apply
                expression (stdlib/lazy.ml[69,2807+4]..[69,2807+16])
                  Pexp_ident "make_forward" (stdlib/lazy.ml[69,2807+4]..[69,2807+16])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/lazy.ml[69,2807+17]..[69,2807+18])
                      Pexp_ident "v" (stdlib/lazy.ml[69,2807+17]..[69,2807+18])
                ]
              Some
                expression (stdlib/lazy.ml[70,2826+11]..[72,2870+5])
                  Pexp_constraint
                  expression (stdlib/lazy.ml[71,2843+5]..[71,2843+16])
                    Pexp_apply
                    expression (stdlib/lazy.ml[71,2843+5]..[71,2843+14])
                      Pexp_ident "Obj.magic" (stdlib/lazy.ml[71,2843+5]..[71,2843+14])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/lazy.ml[71,2843+15]..[71,2843+16])
                          Pexp_ident "v" (stdlib/lazy.ml[71,2843+15]..[71,2843+16])
                    ]
                  core_type (stdlib/lazy.ml[71,2843+19]..[71,2843+25])
                    Ptyp_constr "t" (stdlib/lazy.ml[71,2843+24]..[71,2843+25])
                    [
                      core_type (stdlib/lazy.ml[71,2843+19]..[71,2843+23])
                        Ptyp_var arg
                    ]
    ]
  structure_item (stdlib/lazy.ml[75,2878+0]..[75,2878+62])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/lazy.ml[75,2878+4]..[75,2878+10])
          Ppat_var "is_val" (stdlib/lazy.ml[75,2878+4]..[75,2878+10])
        expression (stdlib/lazy.ml[75,2878+11]..[75,2878+62]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/lazy.ml[75,2878+11]..[75,2878+23])
            Ppat_constraint
            pattern (stdlib/lazy.ml[75,2878+12]..[75,2878+13])
              Ppat_var "l" (stdlib/lazy.ml[75,2878+12]..[75,2878+13])
            core_type (stdlib/lazy.ml[75,2878+16]..[75,2878+22])
              Ptyp_constr "t" (stdlib/lazy.ml[75,2878+21]..[75,2878+22])
              [
                core_type (stdlib/lazy.ml[75,2878+16]..[75,2878+20])
                  Ptyp_var arg
              ]
          expression (stdlib/lazy.ml[75,2878+26]..[75,2878+62])
            Pexp_apply
            expression (stdlib/lazy.ml[75,2878+47]..[75,2878+49])
              Pexp_ident "<>" (stdlib/lazy.ml[75,2878+47]..[75,2878+49])
            [
              <arg>
              Nolabel
                expression (stdlib/lazy.ml[75,2878+26]..[75,2878+46])
                  Pexp_apply
                  expression (stdlib/lazy.ml[75,2878+26]..[75,2878+33])
                    Pexp_ident "Obj.tag" (stdlib/lazy.ml[75,2878+26]..[75,2878+33])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/lazy.ml[75,2878+34]..[75,2878+46])
                        Pexp_apply
                        expression (stdlib/lazy.ml[75,2878+35]..[75,2878+43])
                          Pexp_ident "Obj.repr" (stdlib/lazy.ml[75,2878+35]..[75,2878+43])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/lazy.ml[75,2878+44]..[75,2878+45])
                              Pexp_ident "l" (stdlib/lazy.ml[75,2878+44]..[75,2878+45])
                        ]
                  ]
              <arg>
              Nolabel
                expression (stdlib/lazy.ml[75,2878+50]..[75,2878+62])
                  Pexp_ident "Obj.lazy_tag" (stdlib/lazy.ml[75,2878+50]..[75,2878+62])
            ]
    ]
  structure_item (stdlib/lazy.ml[77,2942+0]..[77,2942+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/lazy.ml[77,2942+4]..[77,2942+17])
          Ppat_var "lazy_from_fun" (stdlib/lazy.ml[77,2942+4]..[77,2942+17])
        expression (stdlib/lazy.ml[77,2942+20]..[77,2942+28])
          Pexp_ident "from_fun" (stdlib/lazy.ml[77,2942+20]..[77,2942+28])
    ]
  structure_item (stdlib/lazy.ml[79,2972+0]..[79,2972+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/lazy.ml[79,2972+4]..[79,2972+17])
          Ppat_var "lazy_from_val" (stdlib/lazy.ml[79,2972+4]..[79,2972+17])
        expression (stdlib/lazy.ml[79,2972+20]..[79,2972+28])
          Pexp_ident "from_val" (stdlib/lazy.ml[79,2972+20]..[79,2972+28])
    ]
  structure_item (stdlib/lazy.ml[81,3002+0]..[81,3002+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/lazy.ml[81,3002+4]..[81,3002+15])
          Ppat_var "lazy_is_val" (stdlib/lazy.ml[81,3002+4]..[81,3002+15])
        expression (stdlib/lazy.ml[81,3002+18]..[81,3002+24])
          Pexp_ident "is_val" (stdlib/lazy.ml[81,3002+18]..[81,3002+24])
    ]
  structure_item (stdlib/lazy.ml[84,3029+0]..[85,3043+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/lazy.ml[84,3029+4]..[84,3029+7])
          Ppat_var "map" (stdlib/lazy.ml[84,3029+4]..[84,3029+7])
        expression (stdlib/lazy.ml[84,3029+8]..[85,3043+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/lazy.ml[84,3029+8]..[84,3029+9])
            Ppat_var "f" (stdlib/lazy.ml[84,3029+8]..[84,3029+9])
          expression (stdlib/lazy.ml[84,3029+10]..[85,3043+20]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/lazy.ml[84,3029+10]..[84,3029+11])
              Ppat_var "x" (stdlib/lazy.ml[84,3029+10]..[84,3029+11])
            expression (stdlib/lazy.ml[85,3043+2]..[85,3043+20])
              Pexp_lazy
              expression (stdlib/lazy.ml[85,3043+7]..[85,3043+20])
                Pexp_apply
                expression (stdlib/lazy.ml[85,3043+8]..[85,3043+9])
                  Pexp_ident "f" (stdlib/lazy.ml[85,3043+8]..[85,3043+9])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/lazy.ml[85,3043+10]..[85,3043+19])
                      Pexp_apply
                      expression (stdlib/lazy.ml[85,3043+11]..[85,3043+16])
                        Pexp_ident "force" (stdlib/lazy.ml[85,3043+11]..[85,3043+16])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/lazy.ml[85,3043+17]..[85,3043+18])
                            Pexp_ident "x" (stdlib/lazy.ml[85,3043+17]..[85,3043+18])
                      ]
                ]
    ]
  structure_item (stdlib/lazy.ml[87,3065+0]..[90,3132+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/lazy.ml[87,3065+4]..[87,3065+11])
          Ppat_var "map_val" (stdlib/lazy.ml[87,3065+4]..[87,3065+11])
        expression (stdlib/lazy.ml[87,3065+12]..[90,3132+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/lazy.ml[87,3065+12]..[87,3065+13])
            Ppat_var "f" (stdlib/lazy.ml[87,3065+12]..[87,3065+13])
          expression (stdlib/lazy.ml[87,3065+14]..[90,3132+25]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/lazy.ml[87,3065+14]..[87,3065+15])
              Ppat_var "x" (stdlib/lazy.ml[87,3065+14]..[87,3065+15])
            expression (stdlib/lazy.ml[88,3083+2]..[90,3132+25])
              Pexp_ifthenelse
              expression (stdlib/lazy.ml[88,3083+5]..[88,3083+13])
                Pexp_apply
                expression (stdlib/lazy.ml[88,3083+5]..[88,3083+11])
                  Pexp_ident "is_val" (stdlib/lazy.ml[88,3083+5]..[88,3083+11])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/lazy.ml[88,3083+12]..[88,3083+13])
                      Pexp_ident "x" (stdlib/lazy.ml[88,3083+12]..[88,3083+13])
                ]
              expression (stdlib/lazy.ml[89,3097+7]..[89,3097+34])
                Pexp_apply
                expression (stdlib/lazy.ml[89,3097+7]..[89,3097+20])
                  Pexp_ident "lazy_from_val" (stdlib/lazy.ml[89,3097+7]..[89,3097+20])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/lazy.ml[89,3097+21]..[89,3097+34])
                      Pexp_apply
                      expression (stdlib/lazy.ml[89,3097+22]..[89,3097+23])
                        Pexp_ident "f" (stdlib/lazy.ml[89,3097+22]..[89,3097+23])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/lazy.ml[89,3097+24]..[89,3097+33])
                            Pexp_apply
                            expression (stdlib/lazy.ml[89,3097+25]..[89,3097+30])
                              Pexp_ident "force" (stdlib/lazy.ml[89,3097+25]..[89,3097+30])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/lazy.ml[89,3097+31]..[89,3097+32])
                                  Pexp_ident "x" (stdlib/lazy.ml[89,3097+31]..[89,3097+32])
                            ]
                      ]
                ]
              Some
                expression (stdlib/lazy.ml[90,3132+7]..[90,3132+25])
                  Pexp_lazy
                  expression (stdlib/lazy.ml[90,3132+12]..[90,3132+25])
                    Pexp_apply
                    expression (stdlib/lazy.ml[90,3132+13]..[90,3132+14])
                      Pexp_ident "f" (stdlib/lazy.ml[90,3132+13]..[90,3132+14])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/lazy.ml[90,3132+15]..[90,3132+24])
                          Pexp_apply
                          expression (stdlib/lazy.ml[90,3132+16]..[90,3132+21])
                            Pexp_ident "force" (stdlib/lazy.ml[90,3132+16]..[90,3132+21])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/lazy.ml[90,3132+22]..[90,3132+23])
                                Pexp_ident "x" (stdlib/lazy.ml[90,3132+22]..[90,3132+23])
                          ]
                    ]
    ]
]

