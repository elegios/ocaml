[
  signature_item (stdlib/templates/set.template.mli[19,1217+0]..[48,2164+2])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/templates/set.template.mli[19,1217+0]..[48,2164+2])
        Pstr_eval
        expression (stdlib/templates/set.template.mli[19,1217+0]..[48,2164+2])
          Pexp_constant PConst_string(" Sets over ordered types.\n\n   This module implements the set data structure, given a total ordering\n   function over the set elements. All operations over sets\n   are purely applicative (no side-effects).\n   The implementation uses balanced binary trees, and is therefore\n   reasonably efficient: insertion and membership take time\n   logarithmic in the size of the set, for instance.\n\n   The {!Make} functor constructs implementations for any type, given a\n   [compare] function.\n   For instance:\n   {[\n     module IntPairs =\n       struct\n         type t = int * int\n         let compare (x0,y0) (x1,y1) =\n           match Stdlib.compare x0 x1 with\n               0 -> Stdlib.compare y0 y1\n             | c -> c\n       end\n\n     module PairsSet = Set.Make(IntPairs)\n\n     let m = PairsSet.(empty |> add (2,3) |> add (5,7) |> add (11,13))\n   ]}\n\n   This creates a new module [PairsSet], with a new type [PairsSet.t]\n   of sets of [int * int].\n",(stdlib/templates/set.template.mli[19,1217+0]..[48,2164+2]),None)
    ]
  signature_item (stdlib/templates/set.template.mli[50,2168+0]..[63,2743+5])
    Psig_modtype "OrderedType" (stdlib/templates/set.template.mli[50,2168+12]..[50,2168+23])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/templates/set.template.mli[64,2749+0]..[64,2749+46])
            Pstr_eval
            expression (stdlib/templates/set.template.mli[64,2749+0]..[64,2749+46])
              Pexp_constant PConst_string(" Input signature of the functor {!Make}. ",(stdlib/templates/set.template.mli[64,2749+0]..[64,2749+46]),None)
        ]
      module_type (stdlib/templates/set.template.mli[51,2194+2]..[63,2743+5])
        Pmty_signature
        [
          signature_item (stdlib/templates/set.template.mli[52,2200+4]..[52,2200+10])
            Psig_type Rec
            [
              type_declaration "t" (stdlib/templates/set.template.mli[52,2200+9]..[52,2200+10]) (stdlib/templates/set.template.mli[52,2200+4]..[52,2200+10])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/templates/set.template.mli[53,2211+6]..[53,2211+42])
                      Pstr_eval
                      expression (stdlib/templates/set.template.mli[53,2211+6]..[53,2211+42])
                        Pexp_constant PConst_string(" The type of the set elements. ",(stdlib/templates/set.template.mli[53,2211+6]..[53,2211+42]),None)
                  ]
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (stdlib/templates/set.template.mli[55,2255+4]..[55,2255+31])
            Psig_value
            value_description "compare" (stdlib/templates/set.template.mli[55,2255+8]..[55,2255+15]) (stdlib/templates/set.template.mli[55,2255+4]..[55,2255+31])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[56,2287+6]..[62,2691+51])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[56,2287+6]..[62,2691+51])
                      Pexp_constant PConst_string(" A total ordering function over the set elements.\n          This is a two-argument function [f] such that\n          [f e1 e2] is zero if the elements [e1] and [e2] are equal,\n          [f e1 e2] is strictly negative if [e1] is smaller than [e2],\n          and [f e1 e2] is strictly positive if [e1] is greater than [e2].\n          Example: a suitable ordering function is the generic structural\n          comparison function {!Stdlib.compare}. ",(stdlib/templates/set.template.mli[56,2287+6]..[62,2691+51]),None)
                ]
              core_type (stdlib/templates/set.template.mli[55,2255+18]..[55,2255+31])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[55,2255+18]..[55,2255+19])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[55,2255+18]..[55,2255+19])
                  []
                core_type (stdlib/templates/set.template.mli[55,2255+23]..[55,2255+31])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[55,2255+23]..[55,2255+24])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[55,2255+23]..[55,2255+24])
                    []
                  core_type (stdlib/templates/set.template.mli[55,2255+28]..[55,2255+31])
                    Ptyp_constr "int" (stdlib/templates/set.template.mli[55,2255+28]..[55,2255+31])
                    []
              []
        ]
  signature_item (stdlib/templates/set.template.mli[66,2797+0]..[308,11583+5])
    Psig_modtype "S" (stdlib/templates/set.template.mli[66,2797+12]..[66,2797+13])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/templates/set.template.mli[309,11589+0]..[309,11589+47])
            Pstr_eval
            expression (stdlib/templates/set.template.mli[309,11589+0]..[309,11589+47])
              Pexp_constant PConst_string(" Output signature of the functor {!Make}. ",(stdlib/templates/set.template.mli[309,11589+0]..[309,11589+47]),None)
        ]
      module_type (stdlib/templates/set.template.mli[67,2813+2]..[308,11583+5])
        Pmty_signature
        [
          signature_item (stdlib/templates/set.template.mli[68,2819+4]..[68,2819+12])
            Psig_type Rec
            [
              type_declaration "elt" (stdlib/templates/set.template.mli[68,2819+9]..[68,2819+12]) (stdlib/templates/set.template.mli[68,2819+4]..[68,2819+12])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/templates/set.template.mli[69,2832+4]..[69,2832+40])
                      Pstr_eval
                      expression (stdlib/templates/set.template.mli[69,2832+4]..[69,2832+40])
                        Pexp_constant PConst_string(" The type of the set elements. ",(stdlib/templates/set.template.mli[69,2832+4]..[69,2832+40]),None)
                  ]
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (stdlib/templates/set.template.mli[71,2874+4]..[71,2874+10])
            Psig_type Rec
            [
              type_declaration "t" (stdlib/templates/set.template.mli[71,2874+9]..[71,2874+10]) (stdlib/templates/set.template.mli[71,2874+4]..[71,2874+10])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/templates/set.template.mli[72,2885+4]..[72,2885+28])
                      Pstr_eval
                      expression (stdlib/templates/set.template.mli[72,2885+4]..[72,2885+28])
                        Pexp_constant PConst_string(" The type of sets. ",(stdlib/templates/set.template.mli[72,2885+4]..[72,2885+28]),None)
                  ]
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (stdlib/templates/set.template.mli[74,2915+4]..[74,2915+16])
            Psig_value
            value_description "empty" (stdlib/templates/set.template.mli[74,2915+8]..[74,2915+13]) (stdlib/templates/set.template.mli[74,2915+4]..[74,2915+16])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[75,2932+4]..[75,2932+25])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[75,2932+4]..[75,2932+25])
                      Pexp_constant PConst_string(" The empty set. ",(stdlib/templates/set.template.mli[75,2932+4]..[75,2932+25]),None)
                ]
              core_type (stdlib/templates/set.template.mli[74,2915+15]..[74,2915+16])
                Ptyp_constr "t" (stdlib/templates/set.template.mli[74,2915+15]..[74,2915+16])
                []
              []
          signature_item (stdlib/templates/set.template.mli[77,2959+4]..[77,2959+27])
            Psig_value
            value_description "is_empty" (stdlib/templates/set.template.mli[77,2959+8]..[77,2959+16]) (stdlib/templates/set.template.mli[77,2959+4]..[77,2959+27])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[78,2987+4]..[78,2987+46])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[78,2987+4]..[78,2987+46])
                      Pexp_constant PConst_string(" Test whether a set is empty or not. ",(stdlib/templates/set.template.mli[78,2987+4]..[78,2987+46]),None)
                ]
              core_type (stdlib/templates/set.template.mli[77,2959+18]..[77,2959+27])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[77,2959+18]..[77,2959+19])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[77,2959+18]..[77,2959+19])
                  []
                core_type (stdlib/templates/set.template.mli[77,2959+23]..[77,2959+27])
                  Ptyp_constr "bool" (stdlib/templates/set.template.mli[77,2959+23]..[77,2959+27])
                  []
              []
          signature_item (stdlib/templates/set.template.mli[80,3035+4]..[80,3035+29])
            Psig_value
            value_description "mem" (stdlib/templates/set.template.mli[80,3035+8]..[80,3035+11]) (stdlib/templates/set.template.mli[80,3035+4]..[80,3035+29])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[81,3065+4]..[81,3065+62])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[81,3065+4]..[81,3065+62])
                      Pexp_constant PConst_string(" [mem x s] tests whether [x] belongs to the set [s]. ",(stdlib/templates/set.template.mli[81,3065+4]..[81,3065+62]),None)
                ]
              core_type (stdlib/templates/set.template.mli[80,3035+13]..[80,3035+29])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[80,3035+13]..[80,3035+16])
                  Ptyp_constr "elt" (stdlib/templates/set.template.mli[80,3035+13]..[80,3035+16])
                  []
                core_type (stdlib/templates/set.template.mli[80,3035+20]..[80,3035+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[80,3035+20]..[80,3035+21])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[80,3035+20]..[80,3035+21])
                    []
                  core_type (stdlib/templates/set.template.mli[80,3035+25]..[80,3035+29])
                    Ptyp_constr "bool" (stdlib/templates/set.template.mli[80,3035+25]..[80,3035+29])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[83,3129+4]..[83,3129+26])
            Psig_value
            value_description "add" (stdlib/templates/set.template.mli[83,3129+8]..[83,3129+11]) (stdlib/templates/set.template.mli[83,3129+4]..[83,3129+26])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[84,3156+4]..[87,3359+57])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[84,3156+4]..[87,3359+57])
                      Pexp_constant PConst_string(" [add x s] returns a set containing all elements of [s],\n       plus [x]. If [x] was already in [s], [s] is returned unchanged\n       (the result of the function is then physically equal to [s]).\n       @before 4.03 Physical equality was not ensured. ",(stdlib/templates/set.template.mli[84,3156+4]..[87,3359+57]),None)
                ]
              core_type (stdlib/templates/set.template.mli[83,3129+13]..[83,3129+26])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[83,3129+13]..[83,3129+16])
                  Ptyp_constr "elt" (stdlib/templates/set.template.mli[83,3129+13]..[83,3129+16])
                  []
                core_type (stdlib/templates/set.template.mli[83,3129+20]..[83,3129+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[83,3129+20]..[83,3129+21])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[83,3129+20]..[83,3129+21])
                    []
                  core_type (stdlib/templates/set.template.mli[83,3129+25]..[83,3129+26])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[83,3129+25]..[83,3129+26])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[89,3418+4]..[89,3418+27])
            Psig_value
            value_description "singleton" (stdlib/templates/set.template.mli[89,3418+8]..[89,3418+17]) (stdlib/templates/set.template.mli[89,3418+4]..[89,3418+27])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[90,3446+4]..[90,3446+73])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[90,3446+4]..[90,3446+73])
                      Pexp_constant PConst_string(" [singleton x] returns the one-element set containing only [x]. ",(stdlib/templates/set.template.mli[90,3446+4]..[90,3446+73]),None)
                ]
              core_type (stdlib/templates/set.template.mli[89,3418+19]..[89,3418+27])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[89,3418+19]..[89,3418+22])
                  Ptyp_constr "elt" (stdlib/templates/set.template.mli[89,3418+19]..[89,3418+22])
                  []
                core_type (stdlib/templates/set.template.mli[89,3418+26]..[89,3418+27])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[89,3418+26]..[89,3418+27])
                  []
              []
          signature_item (stdlib/templates/set.template.mli[92,3521+4]..[92,3521+29])
            Psig_value
            value_description "remove" (stdlib/templates/set.template.mli[92,3521+8]..[92,3521+14]) (stdlib/templates/set.template.mli[92,3521+4]..[92,3521+29])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[93,3551+4]..[96,3755+57])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[93,3551+4]..[96,3755+57])
                      Pexp_constant PConst_string(" [remove x s] returns a set containing all elements of [s],\n       except [x]. If [x] was not in [s], [s] is returned unchanged\n       (the result of the function is then physically equal to [s]).\n       @before 4.03 Physical equality was not ensured. ",(stdlib/templates/set.template.mli[93,3551+4]..[96,3755+57]),None)
                ]
              core_type (stdlib/templates/set.template.mli[92,3521+16]..[92,3521+29])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[92,3521+16]..[92,3521+19])
                  Ptyp_constr "elt" (stdlib/templates/set.template.mli[92,3521+16]..[92,3521+19])
                  []
                core_type (stdlib/templates/set.template.mli[92,3521+23]..[92,3521+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[92,3521+23]..[92,3521+24])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[92,3521+23]..[92,3521+24])
                    []
                  core_type (stdlib/templates/set.template.mli[92,3521+28]..[92,3521+29])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[92,3521+28]..[92,3521+29])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[98,3814+4]..[98,3814+26])
            Psig_value
            value_description "union" (stdlib/templates/set.template.mli[98,3814+8]..[98,3814+13]) (stdlib/templates/set.template.mli[98,3814+4]..[98,3814+26])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[99,3841+4]..[99,3841+21])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[99,3841+4]..[99,3841+21])
                      Pexp_constant PConst_string(" Set union. ",(stdlib/templates/set.template.mli[99,3841+4]..[99,3841+21]),None)
                ]
              core_type (stdlib/templates/set.template.mli[98,3814+15]..[98,3814+26])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[98,3814+15]..[98,3814+16])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[98,3814+15]..[98,3814+16])
                  []
                core_type (stdlib/templates/set.template.mli[98,3814+20]..[98,3814+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[98,3814+20]..[98,3814+21])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[98,3814+20]..[98,3814+21])
                    []
                  core_type (stdlib/templates/set.template.mli[98,3814+25]..[98,3814+26])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[98,3814+25]..[98,3814+26])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[101,3864+4]..[101,3864+26])
            Psig_value
            value_description "inter" (stdlib/templates/set.template.mli[101,3864+8]..[101,3864+13]) (stdlib/templates/set.template.mli[101,3864+4]..[101,3864+26])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[102,3891+4]..[102,3891+28])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[102,3891+4]..[102,3891+28])
                      Pexp_constant PConst_string(" Set intersection. ",(stdlib/templates/set.template.mli[102,3891+4]..[102,3891+28]),None)
                ]
              core_type (stdlib/templates/set.template.mli[101,3864+15]..[101,3864+26])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[101,3864+15]..[101,3864+16])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[101,3864+15]..[101,3864+16])
                  []
                core_type (stdlib/templates/set.template.mli[101,3864+20]..[101,3864+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[101,3864+20]..[101,3864+21])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[101,3864+20]..[101,3864+21])
                    []
                  core_type (stdlib/templates/set.template.mli[101,3864+25]..[101,3864+26])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[101,3864+25]..[101,3864+26])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[104,3921+4]..[104,3921+32])
            Psig_value
            value_description "disjoint" (stdlib/templates/set.template.mli[104,3921+8]..[104,3921+16]) (stdlib/templates/set.template.mli[104,3921+4]..[104,3921+32])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[105,3954+4]..[106,3993+24])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[105,3954+4]..[106,3993+24])
                      Pexp_constant PConst_string(" Test if two sets are disjoint.\n        @since 4.08.0 ",(stdlib/templates/set.template.mli[105,3954+4]..[106,3993+24]),None)
                ]
              core_type (stdlib/templates/set.template.mli[104,3921+18]..[104,3921+32])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[104,3921+18]..[104,3921+19])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[104,3921+18]..[104,3921+19])
                  []
                core_type (stdlib/templates/set.template.mli[104,3921+23]..[104,3921+32])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[104,3921+23]..[104,3921+24])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[104,3921+23]..[104,3921+24])
                    []
                  core_type (stdlib/templates/set.template.mli[104,3921+28]..[104,3921+32])
                    Ptyp_constr "bool" (stdlib/templates/set.template.mli[104,3921+28]..[104,3921+32])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[108,4019+4]..[108,4019+25])
            Psig_value
            value_description "diff" (stdlib/templates/set.template.mli[108,4019+8]..[108,4019+12]) (stdlib/templates/set.template.mli[108,4019+4]..[108,4019+25])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[109,4045+4]..[110,4112+31])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[109,4045+4]..[110,4112+31])
                      Pexp_constant PConst_string(" Set difference: [diff s1 s2] contains the elements of [s1]\n       that are not in [s2]. ",(stdlib/templates/set.template.mli[109,4045+4]..[110,4112+31]),None)
                ]
              core_type (stdlib/templates/set.template.mli[108,4019+14]..[108,4019+25])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[108,4019+14]..[108,4019+15])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[108,4019+14]..[108,4019+15])
                  []
                core_type (stdlib/templates/set.template.mli[108,4019+19]..[108,4019+25])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[108,4019+19]..[108,4019+20])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[108,4019+19]..[108,4019+20])
                    []
                  core_type (stdlib/templates/set.template.mli[108,4019+24]..[108,4019+25])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[108,4019+24]..[108,4019+25])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[112,4145+4]..[112,4145+30])
            Psig_value
            value_description "compare" (stdlib/templates/set.template.mli[112,4145+8]..[112,4145+15]) (stdlib/templates/set.template.mli[112,4145+4]..[112,4145+30])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[113,4176+4]..[114,4250+33])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[113,4176+4]..[114,4250+33])
                      Pexp_constant PConst_string(" Total ordering between sets. Can be used as the ordering function\n       for doing sets of sets. ",(stdlib/templates/set.template.mli[113,4176+4]..[114,4250+33]),None)
                ]
              core_type (stdlib/templates/set.template.mli[112,4145+17]..[112,4145+30])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[112,4145+17]..[112,4145+18])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[112,4145+17]..[112,4145+18])
                  []
                core_type (stdlib/templates/set.template.mli[112,4145+22]..[112,4145+30])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[112,4145+22]..[112,4145+23])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[112,4145+22]..[112,4145+23])
                    []
                  core_type (stdlib/templates/set.template.mli[112,4145+27]..[112,4145+30])
                    Ptyp_constr "int" (stdlib/templates/set.template.mli[112,4145+27]..[112,4145+30])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[116,4285+4]..[116,4285+29])
            Psig_value
            value_description "equal" (stdlib/templates/set.template.mli[116,4285+8]..[116,4285+13]) (stdlib/templates/set.template.mli[116,4285+4]..[116,4285+29])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[117,4315+4]..[118,4378+49])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[117,4315+4]..[118,4378+49])
                      Pexp_constant PConst_string(" [equal s1 s2] tests whether the sets [s1] and [s2] are\n       equal, that is, contain equal elements. ",(stdlib/templates/set.template.mli[117,4315+4]..[118,4378+49]),None)
                ]
              core_type (stdlib/templates/set.template.mli[116,4285+15]..[116,4285+29])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[116,4285+15]..[116,4285+16])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[116,4285+15]..[116,4285+16])
                  []
                core_type (stdlib/templates/set.template.mli[116,4285+20]..[116,4285+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[116,4285+20]..[116,4285+21])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[116,4285+20]..[116,4285+21])
                    []
                  core_type (stdlib/templates/set.template.mli[116,4285+25]..[116,4285+29])
                    Ptyp_constr "bool" (stdlib/templates/set.template.mli[116,4285+25]..[116,4285+29])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[120,4429+4]..[120,4429+30])
            Psig_value
            value_description "subset" (stdlib/templates/set.template.mli[120,4429+8]..[120,4429+14]) (stdlib/templates/set.template.mli[120,4429+4]..[120,4429+30])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[121,4460+4]..[122,4525+23])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[121,4460+4]..[122,4525+23])
                      Pexp_constant PConst_string(" [subset s1 s2] tests whether the set [s1] is a subset of\n       the set [s2]. ",(stdlib/templates/set.template.mli[121,4460+4]..[122,4525+23]),None)
                ]
              core_type (stdlib/templates/set.template.mli[120,4429+16]..[120,4429+30])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[120,4429+16]..[120,4429+17])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[120,4429+16]..[120,4429+17])
                  []
                core_type (stdlib/templates/set.template.mli[120,4429+21]..[120,4429+30])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[120,4429+21]..[120,4429+22])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[120,4429+21]..[120,4429+22])
                    []
                  core_type (stdlib/templates/set.template.mli[120,4429+26]..[120,4429+30])
                    Ptyp_constr "bool" (stdlib/templates/set.template.mli[120,4429+26]..[120,4429+30])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[124,4550+4]..[124,4550+42])
            Psig_value
            value_description "iter" (stdlib/templates/set.template.mli[124,4550+8]..[124,4550+12]) (stdlib/templates/set.template.mli[124,4550+4]..[124,4550+42])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[125,4593+4]..[127,4725+69])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[125,4593+4]..[127,4725+69])
                      Pexp_constant PConst_string(" [iter ~f s] applies [f] in turn to all elements of [s].\n       The elements of [s] are presented to [f] in increasing order\n       with respect to the ordering over the type of the elements. ",(stdlib/templates/set.template.mli[125,4593+4]..[127,4725+69]),None)
                ]
              core_type (stdlib/templates/set.template.mli[124,4550+14]..[124,4550+42])
                Ptyp_arrow
                Labelled "f"
                core_type (stdlib/templates/set.template.mli[124,4550+17]..[124,4550+28])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[124,4550+17]..[124,4550+20])
                    Ptyp_constr "elt" (stdlib/templates/set.template.mli[124,4550+17]..[124,4550+20])
                    []
                  core_type (stdlib/templates/set.template.mli[124,4550+24]..[124,4550+28])
                    Ptyp_constr "unit" (stdlib/templates/set.template.mli[124,4550+24]..[124,4550+28])
                    []
                core_type (stdlib/templates/set.template.mli[124,4550+33]..[124,4550+42])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[124,4550+33]..[124,4550+34])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[124,4550+33]..[124,4550+34])
                    []
                  core_type (stdlib/templates/set.template.mli[124,4550+38]..[124,4550+42])
                    Ptyp_constr "unit" (stdlib/templates/set.template.mli[124,4550+38]..[124,4550+42])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[129,4796+4]..[129,4796+37])
            Psig_value
            value_description "map" (stdlib/templates/set.template.mli[129,4796+8]..[129,4796+11]) (stdlib/templates/set.template.mli[129,4796+4]..[129,4796+37])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[130,4834+4]..[139,5282+23])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[130,4834+4]..[139,5282+23])
                      Pexp_constant PConst_string(" [map ~f s] is the set whose elements are [f a0],[f a1]... [f\n        aN], where [a0],[a1]...[aN] are the elements of [s].\n\n       The elements are passed to [f] in increasing order\n       with respect to the ordering over the type of the elements.\n\n       If no element of [s] is changed by [f], [s] is returned\n       unchanged. (If each output of [f] is physically equal to its\n       input, the returned set is physically equal to [s].)\n       @since 4.04.0 ",(stdlib/templates/set.template.mli[130,4834+4]..[139,5282+23]),None)
                ]
              core_type (stdlib/templates/set.template.mli[129,4796+13]..[129,4796+37])
                Ptyp_arrow
                Labelled "f"
                core_type (stdlib/templates/set.template.mli[129,4796+16]..[129,4796+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[129,4796+16]..[129,4796+19])
                    Ptyp_constr "elt" (stdlib/templates/set.template.mli[129,4796+16]..[129,4796+19])
                    []
                  core_type (stdlib/templates/set.template.mli[129,4796+23]..[129,4796+26])
                    Ptyp_constr "elt" (stdlib/templates/set.template.mli[129,4796+23]..[129,4796+26])
                    []
                core_type (stdlib/templates/set.template.mli[129,4796+31]..[129,4796+37])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[129,4796+31]..[129,4796+32])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[129,4796+31]..[129,4796+32])
                    []
                  core_type (stdlib/templates/set.template.mli[129,4796+36]..[129,4796+37])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[129,4796+36]..[129,4796+37])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[141,5307+4]..[141,5307+55])
            Psig_value
            value_description "fold" (stdlib/templates/set.template.mli[141,5307+8]..[141,5307+12]) (stdlib/templates/set.template.mli[141,5307+4]..[141,5307+55])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[142,5363+4]..[143,5433+73])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[142,5363+4]..[143,5433+73])
                      Pexp_constant PConst_string(" [fold ~f s init] computes [(f xN ... (f x2 (f x1 init))...)],\n       where [x1 ... xN] are the elements of [s], in increasing order. ",(stdlib/templates/set.template.mli[142,5363+4]..[143,5433+73]),None)
                ]
              core_type (stdlib/templates/set.template.mli[141,5307+14]..[141,5307+55])
                Ptyp_arrow
                Labelled "f"
                core_type (stdlib/templates/set.template.mli[141,5307+17]..[141,5307+32])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[141,5307+17]..[141,5307+20])
                    Ptyp_constr "elt" (stdlib/templates/set.template.mli[141,5307+17]..[141,5307+20])
                    []
                  core_type (stdlib/templates/set.template.mli[141,5307+24]..[141,5307+32])
                    Ptyp_arrow
                    Nolabel
                    core_type (stdlib/templates/set.template.mli[141,5307+24]..[141,5307+26])
                      Ptyp_var a
                    core_type (stdlib/templates/set.template.mli[141,5307+30]..[141,5307+32])
                      Ptyp_var a
                core_type (stdlib/templates/set.template.mli[141,5307+37]..[141,5307+55])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[141,5307+37]..[141,5307+38])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[141,5307+37]..[141,5307+38])
                    []
                  core_type (stdlib/templates/set.template.mli[141,5307+42]..[141,5307+55])
                    Ptyp_arrow
                    Labelled "init"
                    core_type (stdlib/templates/set.template.mli[141,5307+47]..[141,5307+49])
                      Ptyp_var a
                    core_type (stdlib/templates/set.template.mli[141,5307+53]..[141,5307+55])
                      Ptyp_var a
              []
          signature_item (stdlib/templates/set.template.mli[145,5508+4]..[145,5508+45])
            Psig_value
            value_description "for_all" (stdlib/templates/set.template.mli[145,5508+8]..[145,5508+15]) (stdlib/templates/set.template.mli[145,5508+4]..[145,5508+45])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[146,5554+4]..[147,5611+36])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[146,5554+4]..[147,5611+36])
                      Pexp_constant PConst_string(" [for_all ~f s] checks if all elements of the set\n       satisfy the predicate [f]. ",(stdlib/templates/set.template.mli[146,5554+4]..[147,5611+36]),None)
                ]
              core_type (stdlib/templates/set.template.mli[145,5508+17]..[145,5508+45])
                Ptyp_arrow
                Labelled "f"
                core_type (stdlib/templates/set.template.mli[145,5508+20]..[145,5508+31])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[145,5508+20]..[145,5508+23])
                    Ptyp_constr "elt" (stdlib/templates/set.template.mli[145,5508+20]..[145,5508+23])
                    []
                  core_type (stdlib/templates/set.template.mli[145,5508+27]..[145,5508+31])
                    Ptyp_constr "bool" (stdlib/templates/set.template.mli[145,5508+27]..[145,5508+31])
                    []
                core_type (stdlib/templates/set.template.mli[145,5508+36]..[145,5508+45])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[145,5508+36]..[145,5508+37])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[145,5508+36]..[145,5508+37])
                    []
                  core_type (stdlib/templates/set.template.mli[145,5508+41]..[145,5508+45])
                    Ptyp_constr "bool" (stdlib/templates/set.template.mli[145,5508+41]..[145,5508+45])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[149,5649+4]..[149,5649+44])
            Psig_value
            value_description "exists" (stdlib/templates/set.template.mli[149,5649+8]..[149,5649+14]) (stdlib/templates/set.template.mli[149,5649+4]..[149,5649+44])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[150,5694+4]..[151,5750+46])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[150,5694+4]..[151,5750+46])
                      Pexp_constant PConst_string(" [exists ~f s] checks if at least one element of\n       the set satisfies the predicate [f]. ",(stdlib/templates/set.template.mli[150,5694+4]..[151,5750+46]),None)
                ]
              core_type (stdlib/templates/set.template.mli[149,5649+16]..[149,5649+44])
                Ptyp_arrow
                Labelled "f"
                core_type (stdlib/templates/set.template.mli[149,5649+19]..[149,5649+30])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[149,5649+19]..[149,5649+22])
                    Ptyp_constr "elt" (stdlib/templates/set.template.mli[149,5649+19]..[149,5649+22])
                    []
                  core_type (stdlib/templates/set.template.mli[149,5649+26]..[149,5649+30])
                    Ptyp_constr "bool" (stdlib/templates/set.template.mli[149,5649+26]..[149,5649+30])
                    []
                core_type (stdlib/templates/set.template.mli[149,5649+35]..[149,5649+44])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[149,5649+35]..[149,5649+36])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[149,5649+35]..[149,5649+36])
                    []
                  core_type (stdlib/templates/set.template.mli[149,5649+40]..[149,5649+44])
                    Ptyp_constr "bool" (stdlib/templates/set.template.mli[149,5649+40]..[149,5649+44])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[153,5798+4]..[153,5798+41])
            Psig_value
            value_description "filter" (stdlib/templates/set.template.mli[153,5798+8]..[153,5798+14]) (stdlib/templates/set.template.mli[153,5798+4]..[153,5798+41])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[154,5840+4]..[158,6077+56])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[154,5840+4]..[158,6077+56])
                      Pexp_constant PConst_string(" [filter ~f s] returns the set of all elements in [s]\n       that satisfy predicate [f]. If [f] satisfies every element in [s],\n       [s] is returned unchanged (the result of the function is then\n       physically equal to [s]).\n       @before 4.03 Physical equality was not ensured.",(stdlib/templates/set.template.mli[154,5840+4]..[158,6077+56]),None)
                ]
              core_type (stdlib/templates/set.template.mli[153,5798+16]..[153,5798+41])
                Ptyp_arrow
                Labelled "f"
                core_type (stdlib/templates/set.template.mli[153,5798+19]..[153,5798+30])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[153,5798+19]..[153,5798+22])
                    Ptyp_constr "elt" (stdlib/templates/set.template.mli[153,5798+19]..[153,5798+22])
                    []
                  core_type (stdlib/templates/set.template.mli[153,5798+26]..[153,5798+30])
                    Ptyp_constr "bool" (stdlib/templates/set.template.mli[153,5798+26]..[153,5798+30])
                    []
                core_type (stdlib/templates/set.template.mli[153,5798+35]..[153,5798+41])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[153,5798+35]..[153,5798+36])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[153,5798+35]..[153,5798+36])
                    []
                  core_type (stdlib/templates/set.template.mli[153,5798+40]..[153,5798+41])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[153,5798+40]..[153,5798+41])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[160,6135+4]..[160,6135+51])
            Psig_value
            value_description "filter_map" (stdlib/templates/set.template.mli[160,6135+8]..[160,6135+18]) (stdlib/templates/set.template.mli[160,6135+4]..[160,6135+51])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[161,6187+4]..[174,6693+7])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[161,6187+4]..[174,6693+7])
                      Pexp_constant PConst_string(" [filter_map ~f s] returns the set of all [v] such that\n        [f x = Some v] for some element [x] of [s].\n\n       For example,\n       {[filter_map (fun n -> if n mod 2 = 0 then Some (n / 2) else None) s]}\n       is the set of halves of the even elements of [s].\n\n       If no element of [s] is changed or dropped by [f] (if\n       [f x = Some x] for each element [x]), then\n       [s] is returned unchanged: the result of the function\n       is then physically equal to [s].\n\n       @since 4.11.0\n     ",(stdlib/templates/set.template.mli[161,6187+4]..[174,6693+7]),None)
                ]
              core_type (stdlib/templates/set.template.mli[160,6135+20]..[160,6135+51])
                Ptyp_arrow
                Labelled "f"
                core_type (stdlib/templates/set.template.mli[160,6135+23]..[160,6135+40])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[160,6135+23]..[160,6135+26])
                    Ptyp_constr "elt" (stdlib/templates/set.template.mli[160,6135+23]..[160,6135+26])
                    []
                  core_type (stdlib/templates/set.template.mli[160,6135+30]..[160,6135+40])
                    Ptyp_constr "option" (stdlib/templates/set.template.mli[160,6135+34]..[160,6135+40])
                    [
                      core_type (stdlib/templates/set.template.mli[160,6135+30]..[160,6135+33])
                        Ptyp_constr "elt" (stdlib/templates/set.template.mli[160,6135+30]..[160,6135+33])
                        []
                    ]
                core_type (stdlib/templates/set.template.mli[160,6135+45]..[160,6135+51])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[160,6135+45]..[160,6135+46])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[160,6135+45]..[160,6135+46])
                    []
                  core_type (stdlib/templates/set.template.mli[160,6135+50]..[160,6135+51])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[160,6135+50]..[160,6135+51])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[176,6702+4]..[176,6702+48])
            Psig_value
            value_description "partition" (stdlib/templates/set.template.mli[176,6702+8]..[176,6702+17]) (stdlib/templates/set.template.mli[176,6702+4]..[176,6702+48])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[177,6751+4]..[180,6949+38])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[177,6751+4]..[180,6949+38])
                      Pexp_constant PConst_string(" [partition ~f s] returns a pair of sets [(s1, s2)], where\n       [s1] is the set of all the elements of [s] that satisfy the\n       predicate [f], and [s2] is the set of all the elements of\n       [s] that do not satisfy [f]. ",(stdlib/templates/set.template.mli[177,6751+4]..[180,6949+38]),None)
                ]
              core_type (stdlib/templates/set.template.mli[176,6702+19]..[176,6702+48])
                Ptyp_arrow
                Labelled "f"
                core_type (stdlib/templates/set.template.mli[176,6702+22]..[176,6702+33])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[176,6702+22]..[176,6702+25])
                    Ptyp_constr "elt" (stdlib/templates/set.template.mli[176,6702+22]..[176,6702+25])
                    []
                  core_type (stdlib/templates/set.template.mli[176,6702+29]..[176,6702+33])
                    Ptyp_constr "bool" (stdlib/templates/set.template.mli[176,6702+29]..[176,6702+33])
                    []
                core_type (stdlib/templates/set.template.mli[176,6702+38]..[176,6702+48])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[176,6702+38]..[176,6702+39])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[176,6702+38]..[176,6702+39])
                    []
                  core_type (stdlib/templates/set.template.mli[176,6702+43]..[176,6702+48])
                    Ptyp_tuple
                    [
                      core_type (stdlib/templates/set.template.mli[176,6702+43]..[176,6702+44])
                        Ptyp_constr "t" (stdlib/templates/set.template.mli[176,6702+43]..[176,6702+44])
                        []
                      core_type (stdlib/templates/set.template.mli[176,6702+47]..[176,6702+48])
                        Ptyp_constr "t" (stdlib/templates/set.template.mli[176,6702+47]..[176,6702+48])
                        []
                    ]
              []
          signature_item (stdlib/templates/set.template.mli[182,6989+4]..[182,6989+26])
            Psig_value
            value_description "cardinal" (stdlib/templates/set.template.mli[182,6989+8]..[182,6989+16]) (stdlib/templates/set.template.mli[182,6989+4]..[182,6989+26])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[183,7016+4]..[183,7016+50])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[183,7016+4]..[183,7016+50])
                      Pexp_constant PConst_string(" Return the number of elements of a set. ",(stdlib/templates/set.template.mli[183,7016+4]..[183,7016+50]),None)
                ]
              core_type (stdlib/templates/set.template.mli[182,6989+18]..[182,6989+26])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[182,6989+18]..[182,6989+19])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[182,6989+18]..[182,6989+19])
                  []
                core_type (stdlib/templates/set.template.mli[182,6989+23]..[182,6989+26])
                  Ptyp_constr "int" (stdlib/templates/set.template.mli[182,6989+23]..[182,6989+26])
                  []
              []
          signature_item (stdlib/templates/set.template.mli[185,7068+4]..[185,7068+31])
            Psig_value
            value_description "elements" (stdlib/templates/set.template.mli[185,7068+8]..[185,7068+16]) (stdlib/templates/set.template.mli[185,7068+4]..[185,7068+31])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[186,7100+4]..[189,7292+27])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[186,7100+4]..[189,7292+27])
                      Pexp_constant PConst_string(" Return the list of all elements of the given set.\n       The returned list is sorted in increasing order with respect\n       to the ordering [Ord.compare], where [Ord] is the argument\n       given to {!Make}. ",(stdlib/templates/set.template.mli[186,7100+4]..[189,7292+27]),None)
                ]
              core_type (stdlib/templates/set.template.mli[185,7068+18]..[185,7068+31])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[185,7068+18]..[185,7068+19])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[185,7068+18]..[185,7068+19])
                  []
                core_type (stdlib/templates/set.template.mli[185,7068+23]..[185,7068+31])
                  Ptyp_constr "list" (stdlib/templates/set.template.mli[185,7068+27]..[185,7068+31])
                  [
                    core_type (stdlib/templates/set.template.mli[185,7068+23]..[185,7068+26])
                      Ptyp_constr "elt" (stdlib/templates/set.template.mli[185,7068+23]..[185,7068+26])
                      []
                  ]
              []
          signature_item (stdlib/templates/set.template.mli[191,7321+4]..[191,7321+25])
            Psig_value
            value_description "min_elt" (stdlib/templates/set.template.mli[191,7321+8]..[191,7321+15]) (stdlib/templates/set.template.mli[191,7321+4]..[191,7321+25])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[192,7347+4]..[194,7462+42])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[192,7347+4]..[194,7462+42])
                      Pexp_constant PConst_string(" Return the smallest element of the given set\n       (with respect to the [Ord.compare] ordering), or raise\n       [Not_found] if the set is empty. ",(stdlib/templates/set.template.mli[192,7347+4]..[194,7462+42]),None)
                ]
              core_type (stdlib/templates/set.template.mli[191,7321+17]..[191,7321+25])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[191,7321+17]..[191,7321+18])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[191,7321+17]..[191,7321+18])
                  []
                core_type (stdlib/templates/set.template.mli[191,7321+22]..[191,7321+25])
                  Ptyp_constr "elt" (stdlib/templates/set.template.mli[191,7321+22]..[191,7321+25])
                  []
              []
          signature_item (stdlib/templates/set.template.mli[196,7506+4]..[196,7506+36])
            Psig_value
            value_description "min_elt_opt" (stdlib/templates/set.template.mli[196,7506+8]..[196,7506+19]) (stdlib/templates/set.template.mli[196,7506+4]..[196,7506+36])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[197,7543+4]..[201,7707+6])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[197,7543+4]..[201,7707+6])
                      Pexp_constant PConst_string(" Return the smallest element of the given set\n       (with respect to the [Ord.compare] ordering), or [None]\n       if the set is empty.\n        @since 4.05\n    ",(stdlib/templates/set.template.mli[197,7543+4]..[201,7707+6]),None)
                ]
              core_type (stdlib/templates/set.template.mli[196,7506+21]..[196,7506+36])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[196,7506+21]..[196,7506+22])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[196,7506+21]..[196,7506+22])
                  []
                core_type (stdlib/templates/set.template.mli[196,7506+26]..[196,7506+36])
                  Ptyp_constr "option" (stdlib/templates/set.template.mli[196,7506+30]..[196,7506+36])
                  [
                    core_type (stdlib/templates/set.template.mli[196,7506+26]..[196,7506+29])
                      Ptyp_constr "elt" (stdlib/templates/set.template.mli[196,7506+26]..[196,7506+29])
                      []
                  ]
              []
          signature_item (stdlib/templates/set.template.mli[203,7715+4]..[203,7715+25])
            Psig_value
            value_description "max_elt" (stdlib/templates/set.template.mli[203,7715+8]..[203,7715+15]) (stdlib/templates/set.template.mli[203,7715+4]..[203,7715+25])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[204,7741+4]..[205,7810+20])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[204,7741+4]..[205,7810+20])
                      Pexp_constant PConst_string(" Same as {!S.min_elt}, but returns the largest element of the\n       given set. ",(stdlib/templates/set.template.mli[204,7741+4]..[205,7810+20]),None)
                ]
              core_type (stdlib/templates/set.template.mli[203,7715+17]..[203,7715+25])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[203,7715+17]..[203,7715+18])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[203,7715+17]..[203,7715+18])
                  []
                core_type (stdlib/templates/set.template.mli[203,7715+22]..[203,7715+25])
                  Ptyp_constr "elt" (stdlib/templates/set.template.mli[203,7715+22]..[203,7715+25])
                  []
              []
          signature_item (stdlib/templates/set.template.mli[207,7832+4]..[207,7832+36])
            Psig_value
            value_description "max_elt_opt" (stdlib/templates/set.template.mli[207,7832+8]..[207,7832+19]) (stdlib/templates/set.template.mli[207,7832+4]..[207,7832+36])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[208,7869+4]..[211,7981+6])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[208,7869+4]..[211,7981+6])
                      Pexp_constant PConst_string(" Same as {!S.min_elt_opt}, but returns the largest element of the\n        given set.\n        @since 4.05\n    ",(stdlib/templates/set.template.mli[208,7869+4]..[211,7981+6]),None)
                ]
              core_type (stdlib/templates/set.template.mli[207,7832+21]..[207,7832+36])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[207,7832+21]..[207,7832+22])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[207,7832+21]..[207,7832+22])
                  []
                core_type (stdlib/templates/set.template.mli[207,7832+26]..[207,7832+36])
                  Ptyp_constr "option" (stdlib/templates/set.template.mli[207,7832+30]..[207,7832+36])
                  [
                    core_type (stdlib/templates/set.template.mli[207,7832+26]..[207,7832+29])
                      Ptyp_constr "elt" (stdlib/templates/set.template.mli[207,7832+26]..[207,7832+29])
                      []
                  ]
              []
          signature_item (stdlib/templates/set.template.mli[213,7989+4]..[213,7989+24])
            Psig_value
            value_description "choose" (stdlib/templates/set.template.mli[213,7989+8]..[213,7989+14]) (stdlib/templates/set.template.mli[213,7989+4]..[213,7989+24])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[214,8014+4]..[216,8148+59])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[214,8014+4]..[216,8148+59])
                      Pexp_constant PConst_string(" Return one element of the given set, or raise [Not_found] if\n       the set is empty. Which element is chosen is unspecified,\n       but equal elements will be chosen for equal sets. ",(stdlib/templates/set.template.mli[214,8014+4]..[216,8148+59]),None)
                ]
              core_type (stdlib/templates/set.template.mli[213,7989+16]..[213,7989+24])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[213,7989+16]..[213,7989+17])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[213,7989+16]..[213,7989+17])
                  []
                core_type (stdlib/templates/set.template.mli[213,7989+21]..[213,7989+24])
                  Ptyp_constr "elt" (stdlib/templates/set.template.mli[213,7989+21]..[213,7989+24])
                  []
              []
          signature_item (stdlib/templates/set.template.mli[218,8209+4]..[218,8209+35])
            Psig_value
            value_description "choose_opt" (stdlib/templates/set.template.mli[218,8209+8]..[218,8209+18]) (stdlib/templates/set.template.mli[218,8209+4]..[218,8209+35])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[219,8245+4]..[223,8447+6])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[219,8245+4]..[223,8447+6])
                      Pexp_constant PConst_string(" Return one element of the given set, or [None] if\n        the set is empty. Which element is chosen is unspecified,\n        but equal elements will be chosen for equal sets.\n        @since 4.05\n    ",(stdlib/templates/set.template.mli[219,8245+4]..[223,8447+6]),None)
                ]
              core_type (stdlib/templates/set.template.mli[218,8209+20]..[218,8209+35])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[218,8209+20]..[218,8209+21])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[218,8209+20]..[218,8209+21])
                  []
                core_type (stdlib/templates/set.template.mli[218,8209+25]..[218,8209+35])
                  Ptyp_constr "option" (stdlib/templates/set.template.mli[218,8209+29]..[218,8209+35])
                  [
                    core_type (stdlib/templates/set.template.mli[218,8209+25]..[218,8209+28])
                      Ptyp_constr "elt" (stdlib/templates/set.template.mli[218,8209+25]..[218,8209+28])
                      []
                  ]
              []
          signature_item (stdlib/templates/set.template.mli[225,8455+4]..[225,8455+39])
            Psig_value
            value_description "split" (stdlib/templates/set.template.mli[225,8455+8]..[225,8455+13]) (stdlib/templates/set.template.mli[225,8455+4]..[225,8455+39])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[226,8495+4]..[232,8806+63])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[226,8495+4]..[232,8806+63])
                      Pexp_constant PConst_string(" [split x s] returns a triple [(l, present, r)], where\n          [l] is the set of elements of [s] that are\n          strictly less than [x];\n          [r] is the set of elements of [s] that are\n          strictly greater than [x];\n          [present] is [false] if [s] contains no element equal to [x],\n          or [true] if [s] contains an element equal to [x]. ",(stdlib/templates/set.template.mli[226,8495+4]..[232,8806+63]),None)
                ]
              core_type (stdlib/templates/set.template.mli[225,8455+15]..[225,8455+39])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[225,8455+15]..[225,8455+18])
                  Ptyp_constr "elt" (stdlib/templates/set.template.mli[225,8455+15]..[225,8455+18])
                  []
                core_type (stdlib/templates/set.template.mli[225,8455+22]..[225,8455+39])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[225,8455+22]..[225,8455+23])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[225,8455+22]..[225,8455+23])
                    []
                  core_type (stdlib/templates/set.template.mli[225,8455+27]..[225,8455+39])
                    Ptyp_tuple
                    [
                      core_type (stdlib/templates/set.template.mli[225,8455+27]..[225,8455+28])
                        Ptyp_constr "t" (stdlib/templates/set.template.mli[225,8455+27]..[225,8455+28])
                        []
                      core_type (stdlib/templates/set.template.mli[225,8455+31]..[225,8455+35])
                        Ptyp_constr "bool" (stdlib/templates/set.template.mli[225,8455+31]..[225,8455+35])
                        []
                      core_type (stdlib/templates/set.template.mli[225,8455+38]..[225,8455+39])
                        Ptyp_constr "t" (stdlib/templates/set.template.mli[225,8455+38]..[225,8455+39])
                        []
                    ]
              []
          signature_item (stdlib/templates/set.template.mli[234,8871+4]..[234,8871+29])
            Psig_value
            value_description "find" (stdlib/templates/set.template.mli[234,8871+8]..[234,8871+12]) (stdlib/templates/set.template.mli[234,8871+4]..[234,8871+29])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[235,8901+4]..[238,9054+24])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[235,8901+4]..[238,9054+24])
                      Pexp_constant PConst_string(" [find x s] returns the element of [s] equal to [x] (according\n        to [Ord.compare]), or raise [Not_found] if no such element\n        exists.\n        @since 4.01.0 ",(stdlib/templates/set.template.mli[235,8901+4]..[238,9054+24]),None)
                ]
              core_type (stdlib/templates/set.template.mli[234,8871+14]..[234,8871+29])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[234,8871+14]..[234,8871+17])
                  Ptyp_constr "elt" (stdlib/templates/set.template.mli[234,8871+14]..[234,8871+17])
                  []
                core_type (stdlib/templates/set.template.mli[234,8871+21]..[234,8871+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[234,8871+21]..[234,8871+22])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[234,8871+21]..[234,8871+22])
                    []
                  core_type (stdlib/templates/set.template.mli[234,8871+26]..[234,8871+29])
                    Ptyp_constr "elt" (stdlib/templates/set.template.mli[234,8871+26]..[234,8871+29])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[240,9080+4]..[240,9080+40])
            Psig_value
            value_description "find_opt" (stdlib/templates/set.template.mli[240,9080+8]..[240,9080+16]) (stdlib/templates/set.template.mli[240,9080+4]..[240,9080+40])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[241,9121+4]..[244,9267+22])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[241,9121+4]..[244,9267+22])
                      Pexp_constant PConst_string(" [find_opt x s] returns the element of [s] equal to [x] (according\n        to [Ord.compare]), or [None] if no such element\n        exists.\n        @since 4.05 ",(stdlib/templates/set.template.mli[241,9121+4]..[244,9267+22]),None)
                ]
              core_type (stdlib/templates/set.template.mli[240,9080+18]..[240,9080+40])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[240,9080+18]..[240,9080+21])
                  Ptyp_constr "elt" (stdlib/templates/set.template.mli[240,9080+18]..[240,9080+21])
                  []
                core_type (stdlib/templates/set.template.mli[240,9080+25]..[240,9080+40])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[240,9080+25]..[240,9080+26])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[240,9080+25]..[240,9080+26])
                    []
                  core_type (stdlib/templates/set.template.mli[240,9080+30]..[240,9080+40])
                    Ptyp_constr "option" (stdlib/templates/set.template.mli[240,9080+34]..[240,9080+40])
                    [
                      core_type (stdlib/templates/set.template.mli[240,9080+30]..[240,9080+33])
                        Ptyp_constr "elt" (stdlib/templates/set.template.mli[240,9080+30]..[240,9080+33])
                        []
                    ]
              []
          signature_item (stdlib/templates/set.template.mli[246,9291+4]..[246,9291+47])
            Psig_value
            value_description "find_first" (stdlib/templates/set.template.mli[246,9291+8]..[246,9291+18]) (stdlib/templates/set.template.mli[246,9291+4]..[246,9291+47])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[247,9339+4]..[257,9803+9])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[247,9339+4]..[257,9803+9])
                      Pexp_constant PConst_string(" [find_first ~f s], where [f] is a monotonically increasing function,\n       returns the lowest element [e] of [s] such that [f e],\n       or raises [Not_found] if no such element exists.\n\n       For example, [find_first (fun e -> Ord.compare e x >= 0) s] will return\n       the first element [e] of [s] where [Ord.compare e x >= 0] (intuitively:\n       [e >= x]), or raise [Not_found] if [x] is greater than any element of\n       [s].\n\n        @since 4.05\n       ",(stdlib/templates/set.template.mli[247,9339+4]..[257,9803+9]),None)
                ]
              core_type (stdlib/templates/set.template.mli[246,9291+20]..[246,9291+47])
                Ptyp_arrow
                Labelled "f"
                core_type (stdlib/templates/set.template.mli[246,9291+23]..[246,9291+34])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[246,9291+23]..[246,9291+26])
                    Ptyp_constr "elt" (stdlib/templates/set.template.mli[246,9291+23]..[246,9291+26])
                    []
                  core_type (stdlib/templates/set.template.mli[246,9291+30]..[246,9291+34])
                    Ptyp_constr "bool" (stdlib/templates/set.template.mli[246,9291+30]..[246,9291+34])
                    []
                core_type (stdlib/templates/set.template.mli[246,9291+39]..[246,9291+47])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[246,9291+39]..[246,9291+40])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[246,9291+39]..[246,9291+40])
                    []
                  core_type (stdlib/templates/set.template.mli[246,9291+44]..[246,9291+47])
                    Ptyp_constr "elt" (stdlib/templates/set.template.mli[246,9291+44]..[246,9291+47])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[259,9814+4]..[259,9814+58])
            Psig_value
            value_description "find_first_opt" (stdlib/templates/set.template.mli[259,9814+8]..[259,9814+22]) (stdlib/templates/set.template.mli[259,9814+4]..[259,9814+58])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[260,9873+4]..[264,10101+9])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[260,9873+4]..[264,10101+9])
                      Pexp_constant PConst_string(" [find_first_opt ~f s], where [f] is a monotonically increasing\n       function, returns an option containing the lowest element [e] of [s]\n       such that [f e], or [None] if no such element exists.\n        @since 4.05\n       ",(stdlib/templates/set.template.mli[260,9873+4]..[264,10101+9]),None)
                ]
              core_type (stdlib/templates/set.template.mli[259,9814+24]..[259,9814+58])
                Ptyp_arrow
                Labelled "f"
                core_type (stdlib/templates/set.template.mli[259,9814+27]..[259,9814+38])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[259,9814+27]..[259,9814+30])
                    Ptyp_constr "elt" (stdlib/templates/set.template.mli[259,9814+27]..[259,9814+30])
                    []
                  core_type (stdlib/templates/set.template.mli[259,9814+34]..[259,9814+38])
                    Ptyp_constr "bool" (stdlib/templates/set.template.mli[259,9814+34]..[259,9814+38])
                    []
                core_type (stdlib/templates/set.template.mli[259,9814+43]..[259,9814+58])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[259,9814+43]..[259,9814+44])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[259,9814+43]..[259,9814+44])
                    []
                  core_type (stdlib/templates/set.template.mli[259,9814+48]..[259,9814+58])
                    Ptyp_constr "option" (stdlib/templates/set.template.mli[259,9814+52]..[259,9814+58])
                    [
                      core_type (stdlib/templates/set.template.mli[259,9814+48]..[259,9814+51])
                        Ptyp_constr "elt" (stdlib/templates/set.template.mli[259,9814+48]..[259,9814+51])
                        []
                    ]
              []
          signature_item (stdlib/templates/set.template.mli[266,10112+4]..[266,10112+46])
            Psig_value
            value_description "find_last" (stdlib/templates/set.template.mli[266,10112+8]..[266,10112+17]) (stdlib/templates/set.template.mli[266,10112+4]..[266,10112+46])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[267,10159+4]..[271,10374+9])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[267,10159+4]..[271,10374+9])
                      Pexp_constant PConst_string(" [find_last ~f s], where [f] is a monotonically decreasing function,\n       returns the highest element [e] of [s] such that [f e],\n       or raises [Not_found] if no such element exists.\n        @since 4.05\n       ",(stdlib/templates/set.template.mli[267,10159+4]..[271,10374+9]),None)
                ]
              core_type (stdlib/templates/set.template.mli[266,10112+19]..[266,10112+46])
                Ptyp_arrow
                Labelled "f"
                core_type (stdlib/templates/set.template.mli[266,10112+22]..[266,10112+33])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[266,10112+22]..[266,10112+25])
                    Ptyp_constr "elt" (stdlib/templates/set.template.mli[266,10112+22]..[266,10112+25])
                    []
                  core_type (stdlib/templates/set.template.mli[266,10112+29]..[266,10112+33])
                    Ptyp_constr "bool" (stdlib/templates/set.template.mli[266,10112+29]..[266,10112+33])
                    []
                core_type (stdlib/templates/set.template.mli[266,10112+38]..[266,10112+46])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[266,10112+38]..[266,10112+39])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[266,10112+38]..[266,10112+39])
                    []
                  core_type (stdlib/templates/set.template.mli[266,10112+43]..[266,10112+46])
                    Ptyp_constr "elt" (stdlib/templates/set.template.mli[266,10112+43]..[266,10112+46])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[273,10385+4]..[273,10385+57])
            Psig_value
            value_description "find_last_opt" (stdlib/templates/set.template.mli[273,10385+8]..[273,10385+21]) (stdlib/templates/set.template.mli[273,10385+4]..[273,10385+57])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[274,10443+4]..[278,10671+9])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[274,10443+4]..[278,10671+9])
                      Pexp_constant PConst_string(" [find_last_opt ~f s], where [f] is a monotonically decreasing\n       function, returns an option containing the highest element [e] of [s]\n       such that [f e], or [None] if no such element exists.\n        @since 4.05\n       ",(stdlib/templates/set.template.mli[274,10443+4]..[278,10671+9]),None)
                ]
              core_type (stdlib/templates/set.template.mli[273,10385+23]..[273,10385+57])
                Ptyp_arrow
                Labelled "f"
                core_type (stdlib/templates/set.template.mli[273,10385+26]..[273,10385+37])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[273,10385+26]..[273,10385+29])
                    Ptyp_constr "elt" (stdlib/templates/set.template.mli[273,10385+26]..[273,10385+29])
                    []
                  core_type (stdlib/templates/set.template.mli[273,10385+33]..[273,10385+37])
                    Ptyp_constr "bool" (stdlib/templates/set.template.mli[273,10385+33]..[273,10385+37])
                    []
                core_type (stdlib/templates/set.template.mli[273,10385+42]..[273,10385+57])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[273,10385+42]..[273,10385+43])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[273,10385+42]..[273,10385+43])
                    []
                  core_type (stdlib/templates/set.template.mli[273,10385+47]..[273,10385+57])
                    Ptyp_constr "option" (stdlib/templates/set.template.mli[273,10385+51]..[273,10385+57])
                    [
                      core_type (stdlib/templates/set.template.mli[273,10385+47]..[273,10385+50])
                        Ptyp_constr "elt" (stdlib/templates/set.template.mli[273,10385+47]..[273,10385+50])
                        []
                    ]
              []
          signature_item (stdlib/templates/set.template.mli[280,10682+4]..[280,10682+30])
            Psig_value
            value_description "of_list" (stdlib/templates/set.template.mli[280,10682+8]..[280,10682+15]) (stdlib/templates/set.template.mli[280,10682+4]..[280,10682+30])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[281,10713+4]..[284,10909+24])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[281,10713+4]..[284,10909+24])
                      Pexp_constant PConst_string(" [of_list l] creates a set from a list of elements.\n        This is usually more efficient than folding [add] over the list,\n        except perhaps for lists with many duplicated elements.\n        @since 4.02.0 ",(stdlib/templates/set.template.mli[281,10713+4]..[284,10909+24]),None)
                ]
              core_type (stdlib/templates/set.template.mli[280,10682+17]..[280,10682+30])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[280,10682+17]..[280,10682+25])
                  Ptyp_constr "list" (stdlib/templates/set.template.mli[280,10682+21]..[280,10682+25])
                  [
                    core_type (stdlib/templates/set.template.mli[280,10682+17]..[280,10682+20])
                      Ptyp_constr "elt" (stdlib/templates/set.template.mli[280,10682+17]..[280,10682+20])
                      []
                  ]
                core_type (stdlib/templates/set.template.mli[280,10682+29]..[280,10682+30])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[280,10682+29]..[280,10682+30])
                  []
              []
          signature_item (stdlib/templates/set.template.mli[286,10935+4]..[286,10935+24])
            Psig_attribute "ocaml.text"
            [
              structure_item (stdlib/templates/set.template.mli[286,10935+4]..[286,10935+24])
                Pstr_eval
                expression (stdlib/templates/set.template.mli[286,10935+4]..[286,10935+24])
                  Pexp_constant PConst_string(" {1 Iterators} ",(stdlib/templates/set.template.mli[286,10935+4]..[286,10935+24]),None)
            ]
          signature_item (stdlib/templates/set.template.mli[288,10961+4]..[288,10961+43])
            Psig_value
            value_description "to_seq_from" (stdlib/templates/set.template.mli[288,10961+8]..[288,10961+19]) (stdlib/templates/set.template.mli[288,10961+4]..[288,10961+43])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[289,11005+4]..[291,11122+22])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[289,11005+4]..[291,11122+22])
                      Pexp_constant PConst_string(" [to_seq_from x s] iterates on a subset of the elements of [s]\n        in ascending order, from [x] or above.\n        @since 4.07 ",(stdlib/templates/set.template.mli[289,11005+4]..[291,11122+22]),None)
                ]
              core_type (stdlib/templates/set.template.mli[288,10961+22]..[288,10961+43])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[288,10961+22]..[288,10961+25])
                  Ptyp_constr "elt" (stdlib/templates/set.template.mli[288,10961+22]..[288,10961+25])
                  []
                core_type (stdlib/templates/set.template.mli[288,10961+29]..[288,10961+43])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[288,10961+29]..[288,10961+30])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[288,10961+29]..[288,10961+30])
                    []
                  core_type (stdlib/templates/set.template.mli[288,10961+34]..[288,10961+43])
                    Ptyp_constr "Seq.t" (stdlib/templates/set.template.mli[288,10961+38]..[288,10961+43])
                    [
                      core_type (stdlib/templates/set.template.mli[288,10961+34]..[288,10961+37])
                        Ptyp_constr "elt" (stdlib/templates/set.template.mli[288,10961+34]..[288,10961+37])
                        []
                    ]
              []
          signature_item (stdlib/templates/set.template.mli[293,11146+4]..[293,11146+31])
            Psig_value
            value_description "to_seq" (stdlib/templates/set.template.mli[293,11146+8]..[293,11146+14]) (stdlib/templates/set.template.mli[293,11146+4]..[293,11146+31])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[294,11178+4]..[295,11231+22])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[294,11178+4]..[295,11231+22])
                      Pexp_constant PConst_string(" Iterate on the whole set, in ascending order\n        @since 4.07 ",(stdlib/templates/set.template.mli[294,11178+4]..[295,11231+22]),None)
                ]
              core_type (stdlib/templates/set.template.mli[293,11146+17]..[293,11146+31])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[293,11146+17]..[293,11146+18])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[293,11146+17]..[293,11146+18])
                  []
                core_type (stdlib/templates/set.template.mli[293,11146+22]..[293,11146+31])
                  Ptyp_constr "Seq.t" (stdlib/templates/set.template.mli[293,11146+26]..[293,11146+31])
                  [
                    core_type (stdlib/templates/set.template.mli[293,11146+22]..[293,11146+25])
                      Ptyp_constr "elt" (stdlib/templates/set.template.mli[293,11146+22]..[293,11146+25])
                      []
                  ]
              []
          signature_item (stdlib/templates/set.template.mli[297,11255+4]..[297,11255+35])
            Psig_value
            value_description "to_rev_seq" (stdlib/templates/set.template.mli[297,11255+8]..[297,11255+18]) (stdlib/templates/set.template.mli[297,11255+4]..[297,11255+35])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[298,11291+4]..[299,11345+22])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[298,11291+4]..[299,11345+22])
                      Pexp_constant PConst_string(" Iterate on the whole set, in descending order\n        @since 4.12 ",(stdlib/templates/set.template.mli[298,11291+4]..[299,11345+22]),None)
                ]
              core_type (stdlib/templates/set.template.mli[297,11255+21]..[297,11255+35])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[297,11255+21]..[297,11255+22])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[297,11255+21]..[297,11255+22])
                  []
                core_type (stdlib/templates/set.template.mli[297,11255+26]..[297,11255+35])
                  Ptyp_constr "Seq.t" (stdlib/templates/set.template.mli[297,11255+30]..[297,11255+35])
                  [
                    core_type (stdlib/templates/set.template.mli[297,11255+26]..[297,11255+29])
                      Ptyp_constr "elt" (stdlib/templates/set.template.mli[297,11255+26]..[297,11255+29])
                      []
                  ]
              []
          signature_item (stdlib/templates/set.template.mli[301,11369+4]..[301,11369+37])
            Psig_value
            value_description "add_seq" (stdlib/templates/set.template.mli[301,11369+8]..[301,11369+15]) (stdlib/templates/set.template.mli[301,11369+4]..[301,11369+37])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[302,11407+4]..[303,11460+22])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[302,11407+4]..[303,11460+22])
                      Pexp_constant PConst_string(" Add the given elements to the set, in order.\n        @since 4.07 ",(stdlib/templates/set.template.mli[302,11407+4]..[303,11460+22]),None)
                ]
              core_type (stdlib/templates/set.template.mli[301,11369+18]..[301,11369+37])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[301,11369+18]..[301,11369+27])
                  Ptyp_constr "Seq.t" (stdlib/templates/set.template.mli[301,11369+22]..[301,11369+27])
                  [
                    core_type (stdlib/templates/set.template.mli[301,11369+18]..[301,11369+21])
                      Ptyp_constr "elt" (stdlib/templates/set.template.mli[301,11369+18]..[301,11369+21])
                      []
                  ]
                core_type (stdlib/templates/set.template.mli[301,11369+31]..[301,11369+37])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/templates/set.template.mli[301,11369+31]..[301,11369+32])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[301,11369+31]..[301,11369+32])
                    []
                  core_type (stdlib/templates/set.template.mli[301,11369+36]..[301,11369+37])
                    Ptyp_constr "t" (stdlib/templates/set.template.mli[301,11369+36]..[301,11369+37])
                    []
              []
          signature_item (stdlib/templates/set.template.mli[305,11484+4]..[305,11484+31])
            Psig_value
            value_description "of_seq" (stdlib/templates/set.template.mli[305,11484+8]..[305,11484+14]) (stdlib/templates/set.template.mli[305,11484+4]..[305,11484+31])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/templates/set.template.mli[306,11516+4]..[307,11560+22])
                    Pstr_eval
                    expression (stdlib/templates/set.template.mli[306,11516+4]..[307,11560+22])
                      Pexp_constant PConst_string(" Build a set from the given bindings\n        @since 4.07 ",(stdlib/templates/set.template.mli[306,11516+4]..[307,11560+22]),None)
                ]
              core_type (stdlib/templates/set.template.mli[305,11484+17]..[305,11484+31])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/templates/set.template.mli[305,11484+17]..[305,11484+26])
                  Ptyp_constr "Seq.t" (stdlib/templates/set.template.mli[305,11484+21]..[305,11484+26])
                  [
                    core_type (stdlib/templates/set.template.mli[305,11484+17]..[305,11484+20])
                      Ptyp_constr "elt" (stdlib/templates/set.template.mli[305,11484+17]..[305,11484+20])
                      []
                  ]
                core_type (stdlib/templates/set.template.mli[305,11484+30]..[305,11484+31])
                  Ptyp_constr "t" (stdlib/templates/set.template.mli[305,11484+30]..[305,11484+31])
                  []
              []
        ]
  signature_item (stdlib/templates/set.template.mli[311,11638+0]..[311,11638+57])
    Psig_module "Make" (stdlib/templates/set.template.mli[311,11638+7]..[311,11638+11])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/templates/set.template.mli[312,11696+0]..[313,11756+35])
            Pstr_eval
            expression (stdlib/templates/set.template.mli[312,11696+0]..[313,11756+35])
              Pexp_constant PConst_string(" Functor building an implementation of the set structure\n   given a totally ordered type. ",(stdlib/templates/set.template.mli[312,11696+0]..[313,11756+35]),None)
        ]
    module_type (stdlib/templates/set.template.mli[311,11638+12]..[311,11638+57])
      Pmty_functor "Ord" (stdlib/templates/set.template.mli[311,11638+13]..[311,11638+16])
      module_type (stdlib/templates/set.template.mli[311,11638+19]..[311,11638+30])
        Pmty_ident "OrderedType" (stdlib/templates/set.template.mli[311,11638+19]..[311,11638+30])
      module_type (stdlib/templates/set.template.mli[311,11638+34]..[311,11638+57])
        Pmty_with
        module_type (stdlib/templates/set.template.mli[311,11638+34]..[311,11638+35])
          Pmty_ident "S" (stdlib/templates/set.template.mli[311,11638+34]..[311,11638+35])
        [
          Pwith_type "elt" (stdlib/templates/set.template.mli[311,11638+46]..[311,11638+49])
            type_declaration "elt" (stdlib/templates/set.template.mli[311,11638+46]..[311,11638+49]) (stdlib/templates/set.template.mli[311,11638+41]..[311,11638+57])
              ptype_params =
                []
              ptype_cstrs =
                []
              ptype_kind =
                Ptype_abstract
              ptype_private = Public
              ptype_manifest =
                Some
                  core_type (stdlib/templates/set.template.mli[311,11638+52]..[311,11638+57])
                    Ptyp_constr "Ord.t" (stdlib/templates/set.template.mli[311,11638+52]..[311,11638+57])
                    []
        ]
]

