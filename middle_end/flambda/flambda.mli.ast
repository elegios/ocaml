[
  signature_item (middle_end/flambda/flambda.mli[17,1156+0]..[17,1156+39])
    Psig_attribute "ocaml.warning"
    [
      structure_item (middle_end/flambda/flambda.mli[17,1156+18]..[17,1156+38])
        Pstr_eval
        expression (middle_end/flambda/flambda.mli[17,1156+18]..[17,1156+38])
          Pexp_constant PConst_string("+a-4-9-30-40-41-42",(middle_end/flambda/flambda.mli[17,1156+19]..[17,1156+37]),None)
    ]
  signature_item (middle_end/flambda/flambda.mli[19,1197+0]..[19,1197+75])
    Psig_attribute "ocaml.text"
    [
      structure_item (middle_end/flambda/flambda.mli[19,1197+0]..[19,1197+75])
        Pstr_eval
        expression (middle_end/flambda/flambda.mli[19,1197+0]..[19,1197+75])
          Pexp_constant PConst_string(" Intermediate language used for tree-based analysis and optimization. ",(middle_end/flambda/flambda.mli[19,1197+0]..[19,1197+75]),None)
    ]
  signature_item (middle_end/flambda/flambda.mli[22,1352+0]..[24,1382+26])
    Psig_type Rec
    [
      type_declaration "call_kind" (middle_end/flambda/flambda.mli[22,1352+5]..[22,1352+14]) (middle_end/flambda/flambda.mli[22,1352+0]..[24,1382+26])
        attribute "ocaml.doc"
          [
            structure_item (middle_end/flambda/flambda.mli[21,1274+0]..[21,1274+77])
              Pstr_eval
              expression (middle_end/flambda/flambda.mli[21,1274+0]..[21,1274+77])
                Pexp_constant PConst_string(" Whether the callee in a function application is known at compile time. ",(middle_end/flambda/flambda.mli[21,1274+0]..[21,1274+77]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (middle_end/flambda/flambda.mli[23,1369+2]..[23,1369+12])
                "Indirect" (middle_end/flambda/flambda.mli[23,1369+4]..[23,1369+12])
                []
                None
              (middle_end/flambda/flambda.mli[24,1382+2]..[24,1382+26])
                "Direct" (middle_end/flambda/flambda.mli[24,1382+4]..[24,1382+10])
                [
                  core_type (middle_end/flambda/flambda.mli[24,1382+14]..[24,1382+26])
                    Ptyp_constr "Closure_id.t" (middle_end/flambda/flambda.mli[24,1382+14]..[24,1382+26])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (middle_end/flambda/flambda.mli[28,1558+0]..[30,1586+16])
    Psig_type Rec
    [
      type_declaration "const" (middle_end/flambda/flambda.mli[28,1558+5]..[28,1558+10]) (middle_end/flambda/flambda.mli[28,1558+0]..[30,1586+16])
        attribute "ocaml.doc"
          [
            structure_item (middle_end/flambda/flambda.mli[26,1410+0]..[27,1486+71])
              Pstr_eval
              expression (middle_end/flambda/flambda.mli[26,1410+0]..[27,1486+71])
                Pexp_constant PConst_string(" Simple constants.  (\"Structured constants\" are rewritten to invocations\n    of [Pmakeblock] so that they easily take part in optimizations.) ",(middle_end/flambda/flambda.mli[26,1410+0]..[27,1486+71]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (middle_end/flambda/flambda.mli[29,1571+2]..[29,1571+14])
                "Int" (middle_end/flambda/flambda.mli[29,1571+4]..[29,1571+7])
                [
                  core_type (middle_end/flambda/flambda.mli[29,1571+11]..[29,1571+14])
                    Ptyp_constr "int" (middle_end/flambda/flambda.mli[29,1571+11]..[29,1571+14])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[30,1586+2]..[30,1586+16])
                "Char" (middle_end/flambda/flambda.mli[30,1586+4]..[30,1586+8])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[31,1603+2]..[31,1603+63])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[31,1603+2]..[31,1603+63])
                        Pexp_constant PConst_string(" [Char] is kept separate from [Int] to improve printing ",(middle_end/flambda/flambda.mli[31,1603+2]..[31,1603+63]),None)
                  ]
                [
                  core_type (middle_end/flambda/flambda.mli[30,1586+12]..[30,1586+16])
                    Ptyp_constr "char" (middle_end/flambda/flambda.mli[30,1586+12]..[30,1586+16])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (middle_end/flambda/flambda.mli[34,1729+0]..[47,2190+1])
    Psig_type Rec
    [
      type_declaration "apply" (middle_end/flambda/flambda.mli[34,1729+5]..[34,1729+10]) (middle_end/flambda/flambda.mli[34,1729+0]..[47,2190+1])
        attribute "ocaml.doc"
          [
            structure_item (middle_end/flambda/flambda.mli[33,1668+0]..[33,1668+60])
              Pstr_eval
              expression (middle_end/flambda/flambda.mli[33,1668+0]..[33,1668+60])
                Pexp_constant PConst_string(" The application of a function to a list of arguments. ",(middle_end/flambda/flambda.mli[33,1668+0]..[33,1668+60]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (middle_end/flambda/flambda.mli[37,1832+2]..[37,1832+20])
                Immutable
                "func" (middle_end/flambda/flambda.mli[37,1832+2]..[37,1832+6])                core_type (middle_end/flambda/flambda.mli[37,1832+9]..[37,1832+19])
                  Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[37,1832+9]..[37,1832+19])
                  []
              (middle_end/flambda/flambda.mli[38,1853+2]..[38,1853+25])
                Immutable
                "args" (middle_end/flambda/flambda.mli[38,1853+2]..[38,1853+6])                core_type (middle_end/flambda/flambda.mli[38,1853+9]..[38,1853+24])
                  Ptyp_constr "list" (middle_end/flambda/flambda.mli[38,1853+20]..[38,1853+24])
                  [
                    core_type (middle_end/flambda/flambda.mli[38,1853+9]..[38,1853+19])
                      Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[38,1853+9]..[38,1853+19])
                      []
                  ]
              (middle_end/flambda/flambda.mli[39,1879+2]..[39,1879+19])
                Immutable
                "kind" (middle_end/flambda/flambda.mli[39,1879+2]..[39,1879+6])                core_type (middle_end/flambda/flambda.mli[39,1879+9]..[39,1879+18])
                  Ptyp_constr "call_kind" (middle_end/flambda/flambda.mli[39,1879+9]..[39,1879+18])
                  []
              (middle_end/flambda/flambda.mli[40,1899+2]..[40,1899+20])
                Immutable
                "dbg" (middle_end/flambda/flambda.mli[40,1899+2]..[40,1899+5])                core_type (middle_end/flambda/flambda.mli[40,1899+8]..[40,1899+19])
                  Ptyp_constr "Debuginfo.t" (middle_end/flambda/flambda.mli[40,1899+8]..[40,1899+19])
                  []
              (middle_end/flambda/flambda.mli[41,1920+2]..[41,1920+35])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[42,1956+2]..[43,2028+20])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[42,1956+2]..[43,2028+20])
                        Pexp_constant PConst_string(" Instructions from the source code as to whether the callee should\n      be inlined. ",(middle_end/flambda/flambda.mli[42,1956+2]..[43,2028+20]),None)
                  ]
                Immutable
                "inline" (middle_end/flambda/flambda.mli[41,1920+2]..[41,1920+8])                core_type (middle_end/flambda/flambda.mli[41,1920+11]..[41,1920+34])
                  Ptyp_constr "Lambda.inline_attribute" (middle_end/flambda/flambda.mli[41,1920+11]..[41,1920+34])
                  []
              (middle_end/flambda/flambda.mli[44,2049+2]..[44,2049+43])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[45,2093+2]..[46,2165+24])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[45,2093+2]..[46,2165+24])
                        Pexp_constant PConst_string(" Instructions from the source code as to whether the callee should\n      be specialised. ",(middle_end/flambda/flambda.mli[45,2093+2]..[46,2165+24]),None)
                  ]
                Immutable
                "specialise" (middle_end/flambda/flambda.mli[44,2049+2]..[44,2049+12])                core_type (middle_end/flambda/flambda.mli[44,2049+15]..[44,2049+42])
                  Ptyp_constr "Lambda.specialise_attribute" (middle_end/flambda/flambda.mli[44,2049+15]..[44,2049+42])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (middle_end/flambda/flambda.mli[51,2307+0]..[54,2388+1])
    Psig_type Rec
    [
      type_declaration "assign" (middle_end/flambda/flambda.mli[51,2307+5]..[51,2307+11]) (middle_end/flambda/flambda.mli[51,2307+0]..[54,2388+1])
        attribute "ocaml.doc"
          [
            structure_item (middle_end/flambda/flambda.mli[49,2193+0]..[50,2268+38])
              Pstr_eval
              expression (middle_end/flambda/flambda.mli[49,2193+0]..[50,2268+38])
                Pexp_constant PConst_string(" The update of a mutable variable.  Mutable variables are distinct from\n    immutable variables in Flambda. ",(middle_end/flambda/flambda.mli[49,2193+0]..[50,2268+38]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (middle_end/flambda/flambda.mli[52,2323+2]..[52,2323+38])
                Immutable
                "being_assigned" (middle_end/flambda/flambda.mli[52,2323+2]..[52,2323+16])                core_type (middle_end/flambda/flambda.mli[52,2323+19]..[52,2323+37])
                  Ptyp_constr "Mutable_variable.t" (middle_end/flambda/flambda.mli[52,2323+19]..[52,2323+37])
                  []
              (middle_end/flambda/flambda.mli[53,2362+2]..[53,2362+25])
                Immutable
                "new_value" (middle_end/flambda/flambda.mli[53,2362+2]..[53,2362+11])                core_type (middle_end/flambda/flambda.mli[53,2362+14]..[53,2362+24])
                  Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[53,2362+14]..[53,2362+24])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (middle_end/flambda/flambda.mli[57,2426+0]..[63,2555+1])
    Psig_type Rec
    [
      type_declaration "send" (middle_end/flambda/flambda.mli[57,2426+5]..[57,2426+9]) (middle_end/flambda/flambda.mli[57,2426+0]..[63,2555+1])
        attribute "ocaml.doc"
          [
            structure_item (middle_end/flambda/flambda.mli[56,2391+0]..[56,2391+34])
              Pstr_eval
              expression (middle_end/flambda/flambda.mli[56,2391+0]..[56,2391+34])
                Pexp_constant PConst_string(" The invocation of a method. ",(middle_end/flambda/flambda.mli[56,2391+0]..[56,2391+34]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (middle_end/flambda/flambda.mli[58,2440+2]..[58,2440+26])
                Immutable
                "kind" (middle_end/flambda/flambda.mli[58,2440+2]..[58,2440+6])                core_type (middle_end/flambda/flambda.mli[58,2440+9]..[58,2440+25])
                  Ptyp_constr "Lambda.meth_kind" (middle_end/flambda/flambda.mli[58,2440+9]..[58,2440+25])
                  []
              (middle_end/flambda/flambda.mli[59,2467+2]..[59,2467+20])
                Immutable
                "meth" (middle_end/flambda/flambda.mli[59,2467+2]..[59,2467+6])                core_type (middle_end/flambda/flambda.mli[59,2467+9]..[59,2467+19])
                  Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[59,2467+9]..[59,2467+19])
                  []
              (middle_end/flambda/flambda.mli[60,2488+2]..[60,2488+19])
                Immutable
                "obj" (middle_end/flambda/flambda.mli[60,2488+2]..[60,2488+5])                core_type (middle_end/flambda/flambda.mli[60,2488+8]..[60,2488+18])
                  Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[60,2488+8]..[60,2488+18])
                  []
              (middle_end/flambda/flambda.mli[61,2508+2]..[61,2508+25])
                Immutable
                "args" (middle_end/flambda/flambda.mli[61,2508+2]..[61,2508+6])                core_type (middle_end/flambda/flambda.mli[61,2508+9]..[61,2508+24])
                  Ptyp_constr "list" (middle_end/flambda/flambda.mli[61,2508+20]..[61,2508+24])
                  [
                    core_type (middle_end/flambda/flambda.mli[61,2508+9]..[61,2508+19])
                      Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[61,2508+9]..[61,2508+19])
                      []
                  ]
              (middle_end/flambda/flambda.mli[62,2534+2]..[62,2534+20])
                Immutable
                "dbg" (middle_end/flambda/flambda.mli[62,2534+2]..[62,2534+5])                core_type (middle_end/flambda/flambda.mli[62,2534+8]..[62,2534+19])
                  Ptyp_constr "Debuginfo.t" (middle_end/flambda/flambda.mli[62,2534+8]..[62,2534+19])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (middle_end/flambda/flambda.mli[66,2613+0]..[66,2613+49])
    Psig_type Rec
    [
      type_declaration "project_closure" (middle_end/flambda/flambda.mli[66,2613+5]..[66,2613+20]) (middle_end/flambda/flambda.mli[66,2613+0]..[66,2613+49])
        attribute "ocaml.doc"
          [
            structure_item (middle_end/flambda/flambda.mli[65,2558+0]..[65,2558+54])
              Pstr_eval
              expression (middle_end/flambda/flambda.mli[65,2558+0]..[65,2558+54])
                Pexp_constant PConst_string(" For details on these types, see projection.mli. ",(middle_end/flambda/flambda.mli[65,2558+0]..[65,2558+54]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (middle_end/flambda/flambda.mli[66,2613+23]..[66,2613+49])
              Ptyp_constr "Projection.project_closure" (middle_end/flambda/flambda.mli[66,2613+23]..[66,2613+49])
              []
    ]
  signature_item (middle_end/flambda/flambda.mli[67,2663+0]..[67,2663+73])
    Psig_type Rec
    [
      type_declaration "move_within_set_of_closures" (middle_end/flambda/flambda.mli[67,2663+5]..[67,2663+32]) (middle_end/flambda/flambda.mli[67,2663+0]..[67,2663+73])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (middle_end/flambda/flambda.mli[67,2663+35]..[67,2663+73])
              Ptyp_constr "Projection.move_within_set_of_closures" (middle_end/flambda/flambda.mli[67,2663+35]..[67,2663+73])
              []
    ]
  signature_item (middle_end/flambda/flambda.mli[68,2737+0]..[68,2737+41])
    Psig_type Rec
    [
      type_declaration "project_var" (middle_end/flambda/flambda.mli[68,2737+5]..[68,2737+16]) (middle_end/flambda/flambda.mli[68,2737+0]..[68,2737+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (middle_end/flambda/flambda.mli[68,2737+19]..[68,2737+41])
              Ptyp_constr "Projection.project_var" (middle_end/flambda/flambda.mli[68,2737+19]..[68,2737+41])
              []
    ]
  signature_item (middle_end/flambda/flambda.mli[74,3008+0]..[84,3526+1])
    Psig_type Rec
    [
      type_declaration "specialised_to" (middle_end/flambda/flambda.mli[74,3008+5]..[74,3008+19]) (middle_end/flambda/flambda.mli[74,3008+0]..[84,3526+1])
        attribute "ocaml.doc"
          [
            structure_item (middle_end/flambda/flambda.mli[70,2780+0]..[70,2780+53])
              Pstr_eval
              expression (middle_end/flambda/flambda.mli[70,2780+0]..[70,2780+53])
                Pexp_constant PConst_string(" See [free_vars] and [specialised_args], below. ",(middle_end/flambda/flambda.mli[70,2780+0]..[70,2780+53]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (middle_end/flambda/flambda.mli[75,3032+2]..[75,3032+19])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[76,3052+2]..[76,3052+30])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[76,3052+2]..[76,3052+30])
                        Pexp_constant PConst_string(" The \"outer variable\". ",(middle_end/flambda/flambda.mli[76,3052+2]..[76,3052+30]),None)
                  ]
                Immutable
                "var" (middle_end/flambda/flambda.mli[75,3032+2]..[75,3032+5])                core_type (middle_end/flambda/flambda.mli[75,3032+8]..[75,3032+18])
                  Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[75,3032+8]..[75,3032+18])
                  []
              (middle_end/flambda/flambda.mli[77,3083+2]..[77,3083+35])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[78,3119+2]..[83,3467+58])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[78,3119+2]..[83,3467+58])
                        Pexp_constant PConst_string(" The [projecting_from] value (see projection.mli) of any [projection]\n      must be another free variable or specialised argument (depending on\n      whether this record type is involved in [free_vars] or\n      [specialised_args] respectively) in the same set of closures.\n      As such, this field describes a relation of projections between\n      either the [free_vars] or the [specialised_args]. ",(middle_end/flambda/flambda.mli[78,3119+2]..[83,3467+58]),None)
                  ]
                Immutable
                "projection" (middle_end/flambda/flambda.mli[77,3083+2]..[77,3083+12])                core_type (middle_end/flambda/flambda.mli[77,3083+15]..[77,3083+34])
                  Ptyp_constr "option" (middle_end/flambda/flambda.mli[77,3083+28]..[77,3083+34])
                  [
                    core_type (middle_end/flambda/flambda.mli[77,3083+15]..[77,3083+27])
                      Ptyp_constr "Projection.t" (middle_end/flambda/flambda.mli[77,3083+15]..[77,3083+27])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (middle_end/flambda/flambda.mli[92,3896+0]..[368,17398+18])
    Psig_type Rec
    [
      type_declaration "t" (middle_end/flambda/flambda.mli[92,3896+5]..[92,3896+6]) (middle_end/flambda/flambda.mli[92,3896+0]..[110,4556+22])
        attribute "ocaml.doc"
          [
            structure_item (middle_end/flambda/flambda.mli[86,3529+0]..[91,3853+42])
              Pstr_eval
              expression (middle_end/flambda/flambda.mli[86,3529+0]..[91,3853+42])
                Pexp_constant PConst_string(" Flambda terms are partitioned in a pseudo-ANF manner; many terms are\n    required to be [let]-bound.  This in particular ensures there is always\n    a variable name for an expression that may be lifted out (for example\n    if it is found to be constant).\n    Note: All bound variables in Flambda terms must be distinct.\n    [Flambda_invariants] verifies this. ",(middle_end/flambda/flambda.mli[86,3529+0]..[91,3853+42]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (middle_end/flambda/flambda.mli[93,3905+2]..[93,3905+21])
                "Var" (middle_end/flambda/flambda.mli[93,3905+4]..[93,3905+7])
                [
                  core_type (middle_end/flambda/flambda.mli[93,3905+11]..[93,3905+21])
                    Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[93,3905+11]..[93,3905+21])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[94,3927+2]..[94,3927+19])
                "Let" (middle_end/flambda/flambda.mli[94,3927+4]..[94,3927+7])
                [
                  core_type (middle_end/flambda/flambda.mli[94,3927+11]..[94,3927+19])
                    Ptyp_constr "let_expr" (middle_end/flambda/flambda.mli[94,3927+11]..[94,3927+19])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[95,3947+2]..[95,3947+30])
                "Let_mutable" (middle_end/flambda/flambda.mli[95,3947+4]..[95,3947+15])
                [
                  core_type (middle_end/flambda/flambda.mli[95,3947+19]..[95,3947+30])
                    Ptyp_constr "let_mutable" (middle_end/flambda/flambda.mli[95,3947+19]..[95,3947+30])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[96,3978+2]..[96,3978+44])
                "Let_rec" (middle_end/flambda/flambda.mli[96,3978+4]..[96,3978+11])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[97,4023+2]..[97,4023+64])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[97,4023+2]..[97,4023+64])
                        Pexp_constant PConst_string(" CR-someday lwhite: give Let_rec the same fields as Let. ",(middle_end/flambda/flambda.mli[97,4023+2]..[97,4023+64]),None)
                  ]
                [
                  core_type (middle_end/flambda/flambda.mli[96,3978+15]..[96,3978+40])
                    Ptyp_constr "list" (middle_end/flambda/flambda.mli[96,3978+36]..[96,3978+40])
                    [
                      core_type (middle_end/flambda/flambda.mli[96,3978+16]..[96,3978+34])
                        Ptyp_tuple
                        [
                          core_type (middle_end/flambda/flambda.mli[96,3978+16]..[96,3978+26])
                            Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[96,3978+16]..[96,3978+26])
                            []
                          core_type (middle_end/flambda/flambda.mli[96,3978+29]..[96,3978+34])
                            Ptyp_constr "named" (middle_end/flambda/flambda.mli[96,3978+29]..[96,3978+34])
                            []
                        ]
                    ]
                  core_type (middle_end/flambda/flambda.mli[96,3978+43]..[96,3978+44])
                    Ptyp_constr "t" (middle_end/flambda/flambda.mli[96,3978+43]..[96,3978+44])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[98,4088+2]..[98,4088+18])
                "Apply" (middle_end/flambda/flambda.mli[98,4088+4]..[98,4088+9])
                [
                  core_type (middle_end/flambda/flambda.mli[98,4088+13]..[98,4088+18])
                    Ptyp_constr "apply" (middle_end/flambda/flambda.mli[98,4088+13]..[98,4088+18])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[99,4107+2]..[99,4107+16])
                "Send" (middle_end/flambda/flambda.mli[99,4107+4]..[99,4107+8])
                [
                  core_type (middle_end/flambda/flambda.mli[99,4107+12]..[99,4107+16])
                    Ptyp_constr "send" (middle_end/flambda/flambda.mli[99,4107+12]..[99,4107+16])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[100,4124+2]..[100,4124+20])
                "Assign" (middle_end/flambda/flambda.mli[100,4124+4]..[100,4124+10])
                [
                  core_type (middle_end/flambda/flambda.mli[100,4124+14]..[100,4124+20])
                    Ptyp_constr "assign" (middle_end/flambda/flambda.mli[100,4124+14]..[100,4124+20])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[101,4145+2]..[101,4145+38])
                "If_then_else" (middle_end/flambda/flambda.mli[101,4145+4]..[101,4145+16])
                [
                  core_type (middle_end/flambda/flambda.mli[101,4145+20]..[101,4145+30])
                    Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[101,4145+20]..[101,4145+30])
                    []
                  core_type (middle_end/flambda/flambda.mli[101,4145+33]..[101,4145+34])
                    Ptyp_constr "t" (middle_end/flambda/flambda.mli[101,4145+33]..[101,4145+34])
                    []
                  core_type (middle_end/flambda/flambda.mli[101,4145+37]..[101,4145+38])
                    Ptyp_constr "t" (middle_end/flambda/flambda.mli[101,4145+37]..[101,4145+38])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[102,4184+2]..[102,4184+33])
                "Switch" (middle_end/flambda/flambda.mli[102,4184+4]..[102,4184+10])
                [
                  core_type (middle_end/flambda/flambda.mli[102,4184+14]..[102,4184+24])
                    Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[102,4184+14]..[102,4184+24])
                    []
                  core_type (middle_end/flambda/flambda.mli[102,4184+27]..[102,4184+33])
                    Ptyp_constr "switch" (middle_end/flambda/flambda.mli[102,4184+27]..[102,4184+33])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[103,4218+2]..[103,4218+62])
                "String_switch" (middle_end/flambda/flambda.mli[103,4218+4]..[103,4218+17])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[104,4281+2]..[104,4281+78])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[104,4281+2]..[104,4281+78])
                        Pexp_constant PConst_string(" Restrictions on [Lambda.Lstringswitch] also apply to [String_switch]. ",(middle_end/flambda/flambda.mli[104,4281+2]..[104,4281+78]),None)
                  ]
                [
                  core_type (middle_end/flambda/flambda.mli[103,4218+21]..[103,4218+31])
                    Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[103,4218+21]..[103,4218+31])
                    []
                  core_type (middle_end/flambda/flambda.mli[103,4218+34]..[103,4218+51])
                    Ptyp_constr "list" (middle_end/flambda/flambda.mli[103,4218+47]..[103,4218+51])
                    [
                      core_type (middle_end/flambda/flambda.mli[103,4218+35]..[103,4218+45])
                        Ptyp_tuple
                        [
                          core_type (middle_end/flambda/flambda.mli[103,4218+35]..[103,4218+41])
                            Ptyp_constr "string" (middle_end/flambda/flambda.mli[103,4218+35]..[103,4218+41])
                            []
                          core_type (middle_end/flambda/flambda.mli[103,4218+44]..[103,4218+45])
                            Ptyp_constr "t" (middle_end/flambda/flambda.mli[103,4218+44]..[103,4218+45])
                            []
                        ]
                    ]
                  core_type (middle_end/flambda/flambda.mli[103,4218+54]..[103,4218+62])
                    Ptyp_constr "option" (middle_end/flambda/flambda.mli[103,4218+56]..[103,4218+62])
                    [
                      core_type (middle_end/flambda/flambda.mli[103,4218+54]..[103,4218+55])
                        Ptyp_constr "t" (middle_end/flambda/flambda.mli[103,4218+54]..[103,4218+55])
                        []
                    ]
                ]
                None
              (middle_end/flambda/flambda.mli[105,4360+2]..[105,4360+56])
                "Static_raise" (middle_end/flambda/flambda.mli[105,4360+4]..[105,4360+16])
                [
                  core_type (middle_end/flambda/flambda.mli[105,4360+20]..[105,4360+38])
                    Ptyp_constr "Static_exception.t" (middle_end/flambda/flambda.mli[105,4360+20]..[105,4360+38])
                    []
                  core_type (middle_end/flambda/flambda.mli[105,4360+41]..[105,4360+56])
                    Ptyp_constr "list" (middle_end/flambda/flambda.mli[105,4360+52]..[105,4360+56])
                    [
                      core_type (middle_end/flambda/flambda.mli[105,4360+41]..[105,4360+51])
                        Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[105,4360+41]..[105,4360+51])
                        []
                    ]
                ]
                None
              (middle_end/flambda/flambda.mli[106,4417+2]..[106,4417+64])
                "Static_catch" (middle_end/flambda/flambda.mli[106,4417+4]..[106,4417+16])
                [
                  core_type (middle_end/flambda/flambda.mli[106,4417+20]..[106,4417+38])
                    Ptyp_constr "Static_exception.t" (middle_end/flambda/flambda.mli[106,4417+20]..[106,4417+38])
                    []
                  core_type (middle_end/flambda/flambda.mli[106,4417+41]..[106,4417+56])
                    Ptyp_constr "list" (middle_end/flambda/flambda.mli[106,4417+52]..[106,4417+56])
                    [
                      core_type (middle_end/flambda/flambda.mli[106,4417+41]..[106,4417+51])
                        Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[106,4417+41]..[106,4417+51])
                        []
                    ]
                  core_type (middle_end/flambda/flambda.mli[106,4417+59]..[106,4417+60])
                    Ptyp_constr "t" (middle_end/flambda/flambda.mli[106,4417+59]..[106,4417+60])
                    []
                  core_type (middle_end/flambda/flambda.mli[106,4417+63]..[106,4417+64])
                    Ptyp_constr "t" (middle_end/flambda/flambda.mli[106,4417+63]..[106,4417+64])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[107,4482+2]..[107,4482+34])
                "Try_with" (middle_end/flambda/flambda.mli[107,4482+4]..[107,4482+12])
                [
                  core_type (middle_end/flambda/flambda.mli[107,4482+16]..[107,4482+17])
                    Ptyp_constr "t" (middle_end/flambda/flambda.mli[107,4482+16]..[107,4482+17])
                    []
                  core_type (middle_end/flambda/flambda.mli[107,4482+20]..[107,4482+30])
                    Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[107,4482+20]..[107,4482+30])
                    []
                  core_type (middle_end/flambda/flambda.mli[107,4482+33]..[107,4482+34])
                    Ptyp_constr "t" (middle_end/flambda/flambda.mli[107,4482+33]..[107,4482+34])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[108,4517+2]..[108,4517+18])
                "While" (middle_end/flambda/flambda.mli[108,4517+4]..[108,4517+9])
                [
                  core_type (middle_end/flambda/flambda.mli[108,4517+13]..[108,4517+14])
                    Ptyp_constr "t" (middle_end/flambda/flambda.mli[108,4517+13]..[108,4517+14])
                    []
                  core_type (middle_end/flambda/flambda.mli[108,4517+17]..[108,4517+18])
                    Ptyp_constr "t" (middle_end/flambda/flambda.mli[108,4517+17]..[108,4517+18])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[109,4536+2]..[109,4536+19])
                "For" (middle_end/flambda/flambda.mli[109,4536+4]..[109,4536+7])
                [
                  core_type (middle_end/flambda/flambda.mli[109,4536+11]..[109,4536+19])
                    Ptyp_constr "for_loop" (middle_end/flambda/flambda.mli[109,4536+11]..[109,4536+19])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[110,4556+2]..[110,4556+22])
                "Proved_unreachable" (middle_end/flambda/flambda.mli[110,4556+4]..[110,4556+22])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "named" (middle_end/flambda/flambda.mli[113,4656+4]..[113,4656+9]) (middle_end/flambda/flambda.mli[113,4656+0]..[151,7051+13])
        attribute "ocaml.doc"
          [
            structure_item (middle_end/flambda/flambda.mli[112,4580+0]..[112,4580+75])
              Pstr_eval
              expression (middle_end/flambda/flambda.mli[112,4580+0]..[112,4580+75])
                Pexp_constant PConst_string(" Values of type [named] will always be [let]-bound to a [Variable.t]. ",(middle_end/flambda/flambda.mli[112,4580+0]..[112,4580+75]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (middle_end/flambda/flambda.mli[114,4668+2]..[114,4668+22])
                "Symbol" (middle_end/flambda/flambda.mli[114,4668+4]..[114,4668+10])
                [
                  core_type (middle_end/flambda/flambda.mli[114,4668+14]..[114,4668+22])
                    Ptyp_constr "Symbol.t" (middle_end/flambda/flambda.mli[114,4668+14]..[114,4668+22])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[115,4691+2]..[115,4691+18])
                "Const" (middle_end/flambda/flambda.mli[115,4691+4]..[115,4691+9])
                [
                  core_type (middle_end/flambda/flambda.mli[115,4691+13]..[115,4691+18])
                    Ptyp_constr "const" (middle_end/flambda/flambda.mli[115,4691+13]..[115,4691+18])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[116,4710+2]..[116,4710+40])
                "Allocated_const" (middle_end/flambda/flambda.mli[116,4710+4]..[116,4710+19])
                [
                  core_type (middle_end/flambda/flambda.mli[116,4710+23]..[116,4710+40])
                    Ptyp_constr "Allocated_const.t" (middle_end/flambda/flambda.mli[116,4710+23]..[116,4710+40])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[117,4751+2]..[117,4751+38])
                "Read_mutable" (middle_end/flambda/flambda.mli[117,4751+4]..[117,4751+16])
                [
                  core_type (middle_end/flambda/flambda.mli[117,4751+20]..[117,4751+38])
                    Ptyp_constr "Mutable_variable.t" (middle_end/flambda/flambda.mli[117,4751+20]..[117,4751+38])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[118,4790+2]..[118,4790+39])
                "Read_symbol_field" (middle_end/flambda/flambda.mli[118,4790+4]..[118,4790+21])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[119,4830+2]..[145,6737+68])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[119,4830+2]..[145,6737+68])
                        Pexp_constant PConst_string(" During the lifting of [let] bindings to [program] constructions after\n      closure conversion, we generate symbols and their corresponding\n      definitions (which may or may not be constant), together with field\n      accesses to such symbols.  We would like it to be the case that such\n      field accesses are simplified to the relevant component of the\n      symbol concerned.  (The rationale is to generate efficient code and\n      share constants as expected: see e.g. tests/asmcomp/staticalloc.ml.)\n      The components of the symbol would be identified by other symbols.\n      This sort of access pattern is feasible because the top-level structure\n      of symbols is statically allocated and fixed at compile time.\n      It may seem that [Prim (Pfield, ...)] expressions could be used to\n      perform the field accesses.  However for simplicity, to avoid having to\n      keep track of properties of individual fields of blocks,\n      [Inconstant_idents] never deems a [Prim (Pfield, ...)] expression to be\n      constant.  This would in general prevent field accesses to symbols from\n      being simplified in the way we would like, since [Lift_constants] would\n      not assign new symbols (i.e. the things we would like to simplify to)\n      to the various projections from the symbols in question.\n      To circumvent this problem we use [Read_symbol_field] when generating\n      projections from the top level of symbols.  Owing to the properties of\n      symbols described above, such expressions may be eligible for declaration\n      as constant by [Inconstant_idents] (and thus themselves lifted to another\n      symbol), without any further complication.\n      [Read_symbol_field] may only be used when the definition of the symbol\n      is in scope in the [program].  For external unresolved symbols, [Pfield]\n      may still be used; it will be changed to [Read_symbol_field] by\n      [Inline_and_simplify] when (and if) the symbol is imported. ",(middle_end/flambda/flambda.mli[119,4830+2]..[145,6737+68]),None)
                  ]
                [
                  core_type (middle_end/flambda/flambda.mli[118,4790+25]..[118,4790+33])
                    Ptyp_constr "Symbol.t" (middle_end/flambda/flambda.mli[118,4790+25]..[118,4790+33])
                    []
                  core_type (middle_end/flambda/flambda.mli[118,4790+36]..[118,4790+39])
                    Ptyp_constr "int" (middle_end/flambda/flambda.mli[118,4790+36]..[118,4790+39])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[146,6806+2]..[146,6806+38])
                "Set_of_closures" (middle_end/flambda/flambda.mli[146,6806+4]..[146,6806+19])
                [
                  core_type (middle_end/flambda/flambda.mli[146,6806+23]..[146,6806+38])
                    Ptyp_constr "set_of_closures" (middle_end/flambda/flambda.mli[146,6806+23]..[146,6806+38])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[147,6845+2]..[147,6845+38])
                "Project_closure" (middle_end/flambda/flambda.mli[147,6845+4]..[147,6845+19])
                [
                  core_type (middle_end/flambda/flambda.mli[147,6845+23]..[147,6845+38])
                    Ptyp_constr "project_closure" (middle_end/flambda/flambda.mli[147,6845+23]..[147,6845+38])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[148,6884+2]..[148,6884+62])
                "Move_within_set_of_closures" (middle_end/flambda/flambda.mli[148,6884+4]..[148,6884+31])
                [
                  core_type (middle_end/flambda/flambda.mli[148,6884+35]..[148,6884+62])
                    Ptyp_constr "move_within_set_of_closures" (middle_end/flambda/flambda.mli[148,6884+35]..[148,6884+62])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[149,6947+2]..[149,6947+30])
                "Project_var" (middle_end/flambda/flambda.mli[149,6947+4]..[149,6947+15])
                [
                  core_type (middle_end/flambda/flambda.mli[149,6947+19]..[149,6947+30])
                    Ptyp_constr "project_var" (middle_end/flambda/flambda.mli[149,6947+19]..[149,6947+30])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[150,6978+2]..[150,6978+72])
                "Prim" (middle_end/flambda/flambda.mli[150,6978+4]..[150,6978+8])
                [
                  core_type (middle_end/flambda/flambda.mli[150,6978+12]..[150,6978+40])
                    Ptyp_constr "Clambda_primitives.primitive" (middle_end/flambda/flambda.mli[150,6978+12]..[150,6978+40])
                    []
                  core_type (middle_end/flambda/flambda.mli[150,6978+43]..[150,6978+58])
                    Ptyp_constr "list" (middle_end/flambda/flambda.mli[150,6978+54]..[150,6978+58])
                    [
                      core_type (middle_end/flambda/flambda.mli[150,6978+43]..[150,6978+53])
                        Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[150,6978+43]..[150,6978+53])
                        []
                    ]
                  core_type (middle_end/flambda/flambda.mli[150,6978+61]..[150,6978+72])
                    Ptyp_constr "Debuginfo.t" (middle_end/flambda/flambda.mli[150,6978+61]..[150,6978+72])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[151,7051+2]..[151,7051+13])
                "Expr" (middle_end/flambda/flambda.mli[151,7051+4]..[151,7051+8])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[151,7051+15]..[151,7051+39])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[151,7051+15]..[151,7051+39])
                        Pexp_constant PConst_string(" ANF escape hatch. ",(middle_end/flambda/flambda.mli[151,7051+15]..[151,7051+39]),None)
                  ]
                [
                  core_type (middle_end/flambda/flambda.mli[151,7051+12]..[151,7051+13])
                    Ptyp_constr "t" (middle_end/flambda/flambda.mli[151,7051+12]..[151,7051+13])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "let_expr" (middle_end/flambda/flambda.mli[165,7770+4]..[165,7770+12]) (middle_end/flambda/flambda.mli[165,7770+0]..[176,8254+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (middle_end/flambda/flambda.mli[166,7795+2]..[166,7795+19])
                Immutable
                "var" (middle_end/flambda/flambda.mli[166,7795+2]..[166,7795+5])                core_type (middle_end/flambda/flambda.mli[166,7795+8]..[166,7795+18])
                  Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[166,7795+8]..[166,7795+18])
                  []
              (middle_end/flambda/flambda.mli[167,7815+2]..[167,7815+24])
                Immutable
                "defining_expr" (middle_end/flambda/flambda.mli[167,7815+2]..[167,7815+15])                core_type (middle_end/flambda/flambda.mli[167,7815+18]..[167,7815+23])
                  Ptyp_constr "named" (middle_end/flambda/flambda.mli[167,7815+18]..[167,7815+23])
                  []
              (middle_end/flambda/flambda.mli[168,7840+2]..[168,7840+11])
                Immutable
                "body" (middle_end/flambda/flambda.mli[168,7840+2]..[168,7840+6])                core_type (middle_end/flambda/flambda.mli[168,7840+9]..[168,7840+10])
                  Ptyp_constr "t" (middle_end/flambda/flambda.mli[168,7840+9]..[168,7840+10])
                  []
              (middle_end/flambda/flambda.mli[171,7982+2]..[171,7982+46])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[172,8029+2]..[172,8029+79])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[172,8029+2]..[172,8029+79])
                        Pexp_constant PConst_string(" A cache of the free variables in the defining expression of the [let]. ",(middle_end/flambda/flambda.mli[172,8029+2]..[172,8029+79]),None)
                  ]
                Immutable
                "free_vars_of_defining_expr" (middle_end/flambda/flambda.mli[171,7982+2]..[171,7982+28])                core_type (middle_end/flambda/flambda.mli[171,7982+31]..[171,7982+45])
                  Ptyp_constr "Variable.Set.t" (middle_end/flambda/flambda.mli[171,7982+31]..[171,7982+45])
                  []
              (middle_end/flambda/flambda.mli[173,8109+2]..[173,8109+37])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[174,8147+2]..[175,8221+32])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[174,8147+2]..[175,8221+32])
                        Pexp_constant PConst_string(" A cache of the free variables of the body of the [let].  This is an\n      important optimization. ",(middle_end/flambda/flambda.mli[174,8147+2]..[175,8221+32]),None)
                  ]
                Immutable
                "free_vars_of_body" (middle_end/flambda/flambda.mli[173,8109+2]..[173,8109+19])                core_type (middle_end/flambda/flambda.mli[173,8109+22]..[173,8109+36])
                  Ptyp_constr "Variable.Set.t" (middle_end/flambda/flambda.mli[173,8109+22]..[173,8109+36])
                  []
            ]
        ptype_private = Private
        ptype_manifest =
          None
      type_declaration "let_mutable" (middle_end/flambda/flambda.mli[178,8257+4]..[178,8257+15]) (middle_end/flambda/flambda.mli[178,8257+0]..[183,8384+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (middle_end/flambda/flambda.mli[179,8277+2]..[179,8277+27])
                Immutable
                "var" (middle_end/flambda/flambda.mli[179,8277+2]..[179,8277+5])                core_type (middle_end/flambda/flambda.mli[179,8277+8]..[179,8277+26])
                  Ptyp_constr "Mutable_variable.t" (middle_end/flambda/flambda.mli[179,8277+8]..[179,8277+26])
                  []
              (middle_end/flambda/flambda.mli[180,8305+2]..[180,8305+29])
                Immutable
                "initial_value" (middle_end/flambda/flambda.mli[180,8305+2]..[180,8305+15])                core_type (middle_end/flambda/flambda.mli[180,8305+18]..[180,8305+28])
                  Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[180,8305+18]..[180,8305+28])
                  []
              (middle_end/flambda/flambda.mli[181,8335+2]..[181,8335+36])
                Immutable
                "contents_kind" (middle_end/flambda/flambda.mli[181,8335+2]..[181,8335+15])                core_type (middle_end/flambda/flambda.mli[181,8335+18]..[181,8335+35])
                  Ptyp_constr "Lambda.value_kind" (middle_end/flambda/flambda.mli[181,8335+18]..[181,8335+35])
                  []
              (middle_end/flambda/flambda.mli[182,8372+2]..[182,8372+11])
                Immutable
                "body" (middle_end/flambda/flambda.mli[182,8372+2]..[182,8372+6])                core_type (middle_end/flambda/flambda.mli[182,8372+9]..[182,8372+10])
                  Ptyp_constr "t" (middle_end/flambda/flambda.mli[182,8372+9]..[182,8372+10])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "set_of_closures" (middle_end/flambda/flambda.mli[202,9417+4]..[202,9417+19]) (middle_end/flambda/flambda.mli[202,9417+0]..[281,13543+1])
        attribute "ocaml.doc"
          [
            structure_item (middle_end/flambda/flambda.mli[185,8387+0]..[201,9414+2])
              Pstr_eval
              expression (middle_end/flambda/flambda.mli[185,8387+0]..[201,9414+2])
                Pexp_constant PConst_string(" The representation of a set of function declarations (possibly mutually\n    recursive).  Such a set encapsulates the declarations themselves,\n    information about their defining environment, and information used\n    specifically for optimization.\n    Before a function can be applied it must be \"projected\" from a set of\n    closures to yield a \"closure\".  This is done using [Project_closure]\n    (see above).  Given a closure, not only can it be applied, but information\n    about its defining environment can be retrieved (using [Project_var],\n    see above).\n    At runtime, a [set_of_closures] corresponds to an OCaml value with tag\n    [Closure_tag] (possibly with inline [Infix_tag](s)).  As an optimization,\n    an operation ([Move_within_set_of_closures]) is provided (see above)\n    which enables one closure within a set to be located given another\n    closure in the same set.  This avoids keeping a pointer to the whole set\n    of closures alive when compiling, for example, mutually-recursive\n    functions.\n",(middle_end/flambda/flambda.mli[185,8387+0]..[201,9414+2]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (middle_end/flambda/flambda.mli[203,9449+2]..[203,9449+41])
                Immutable
                "function_decls" (middle_end/flambda/flambda.mli[203,9449+2]..[203,9449+16])                core_type (middle_end/flambda/flambda.mli[203,9449+19]..[203,9449+40])
                  Ptyp_constr "function_declarations" (middle_end/flambda/flambda.mli[203,9449+19]..[203,9449+40])
                  []
              (middle_end/flambda/flambda.mli[215,10081+2]..[215,10081+44])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[216,10126+2]..[219,10353+22])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[216,10126+2]..[219,10353+22])
                        Pexp_constant PConst_string(" Mapping from all variables free in the body of the [function_decls] to\n      variables in scope at the definition point of the [set_of_closures].\n      The domain of this map is sometimes known as the \"variables bound by\n      the closure\". ",(middle_end/flambda/flambda.mli[216,10126+2]..[219,10353+22]),None)
                  ]
                Immutable
                "free_vars" (middle_end/flambda/flambda.mli[215,10081+2]..[215,10081+11])                core_type (middle_end/flambda/flambda.mli[215,10081+14]..[215,10081+43])
                  Ptyp_constr "Variable.Map.t" (middle_end/flambda/flambda.mli[215,10081+29]..[215,10081+43])
                  [
                    core_type (middle_end/flambda/flambda.mli[215,10081+14]..[215,10081+28])
                      Ptyp_constr "specialised_to" (middle_end/flambda/flambda.mli[215,10081+14]..[215,10081+28])
                      []
                  ]
              (middle_end/flambda/flambda.mli[220,10376+2]..[220,10376+51])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[221,10428+2]..[273,13088+4])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[221,10428+2]..[273,13088+4])
                        Pexp_constant PConst_string(" Parameters whose corresponding arguments are known to always alias a\n      particular value.  These are the only parameters that may, during\n      [Inline_and_simplify], have non-unknown approximations.\n\n      An argument may only be specialised to a variable in the scope of the\n      corresponding set of closures declaration.  Usually, that variable\n      itself also appears in the position of the specialised argument at\n      all call sites of the function.  However it may also be the case (for\n      example in code generated as a result of [Augment_specialised_args])\n      that the various call sites of such a function have differing\n      variables in the position of the specialised argument.  This is\n      permissible *so long as it is certain they all alias the same value*.\n      Great care must be taken in transformations that result in this\n      situation since there are no invariant checks for correctness.\n\n      As an example, supposing all call sites of f are represented here:\n        [let x = ... in\n         let f a b c = ... in\n         let y = ... in\n         f x y 1;\n         f x y 1]\n      the specialised arguments of f can (but does not necessarily) contain\n      the association [a] -> [x], but cannot contain [b] -> [y] because [f]\n      is not in the scope of [y]. If f were the recursive function\n      [let rec f a b c = f a 1 2 in], [a] -> [x] would still be a valid\n      specialised argument because all recursive calls maintain the invariant.\n\n      This information is used for optimization purposes, if such a binding is\n      known, it is possible to specialise the body of the function according\n      to its parameter. This is usually introduced when specialising a\n      recursive function, for instance.\n        [let rec map f = function\n           | [] -> []\n           | h :: t -> f h :: map f t\n         let map_succ l =\n           let succ x = x + 1 in\n           map succ l]\n      [map] can be duplicated in [map_succ] to be specialised for the argument\n      [f]. This will result in\n        [let map_succ l =\n           let succ x = x + 1 in\n           let rec map f = function\n             | [] -> []\n             | h :: t -> f h :: map f t in\n           map succ l]\n      with map having [f] -> [succ] in its [specialised_args] field.\n\n      Specialised argument information for arguments that are used must\n      never be erased.  This ensures that specialised arguments whose\n      approximations describe closures maintain those approximations, which\n      is essential to transport the closure freshening information to the\n      point of use (e.g. a [Project_var] from such an argument).\n  ",(middle_end/flambda/flambda.mli[221,10428+2]..[273,13088+4]),None)
                  ]
                Immutable
                "specialised_args" (middle_end/flambda/flambda.mli[220,10376+2]..[220,10376+18])                core_type (middle_end/flambda/flambda.mli[220,10376+21]..[220,10376+50])
                  Ptyp_constr "Variable.Map.t" (middle_end/flambda/flambda.mli[220,10376+36]..[220,10376+50])
                  [
                    core_type (middle_end/flambda/flambda.mli[220,10376+21]..[220,10376+35])
                      Ptyp_constr "specialised_to" (middle_end/flambda/flambda.mli[220,10376+21]..[220,10376+35])
                      []
                  ]
              (middle_end/flambda/flambda.mli[274,13093+2]..[274,13093+53])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[275,13147+2]..[280,13477+65])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[275,13147+2]..[280,13477+65])
                        Pexp_constant PConst_string(" If [direct_call_surrogates] maps [fun_var1] to [fun_var2] then direct\n      calls to [fun_var1] should be redirected to [fun_var2].  This is used\n      to reduce the overhead of transformations that introduce wrapper\n      functions (which will be inlined at direct call sites, but will\n      penalise indirect call sites).\n      [direct_call_surrogates] may not be transitively closed. ",(middle_end/flambda/flambda.mli[275,13147+2]..[280,13477+65]),None)
                  ]
                Immutable
                "direct_call_surrogates" (middle_end/flambda/flambda.mli[274,13093+2]..[274,13093+24])                core_type (middle_end/flambda/flambda.mli[274,13093+27]..[274,13093+52])
                  Ptyp_constr "Variable.Map.t" (middle_end/flambda/flambda.mli[274,13093+38]..[274,13093+52])
                  [
                    core_type (middle_end/flambda/flambda.mli[274,13093+27]..[274,13093+37])
                      Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[274,13093+27]..[274,13093+37])
                      []
                  ]
            ]
        ptype_private = Private
        ptype_manifest =
          None
      type_declaration "function_declarations" (middle_end/flambda/flambda.mli[283,13546+4]..[283,13546+25]) (middle_end/flambda/flambda.mli[283,13546+0]..[299,14395+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (middle_end/flambda/flambda.mli[284,13584+2]..[284,13584+24])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[285,13609+2]..[286,13675+24])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[285,13609+2]..[286,13675+24])
                        Pexp_constant PConst_string(" Indicates whether this [function_declarations] was compiled\n      with -Oclassic. ",(middle_end/flambda/flambda.mli[285,13609+2]..[286,13675+24]),None)
                  ]
                Immutable
                "is_classic_mode" (middle_end/flambda/flambda.mli[284,13584+2]..[284,13584+17])                core_type (middle_end/flambda/flambda.mli[284,13584+19]..[284,13584+23])
                  Ptyp_constr "bool" (middle_end/flambda/flambda.mli[284,13584+19]..[284,13584+23])
                  []
              (middle_end/flambda/flambda.mli[287,13700+2]..[287,13700+44])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[288,13745+2]..[290,13885+22])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[288,13745+2]..[290,13885+22])
                        Pexp_constant PConst_string(" An identifier (unique across all Flambda trees currently in memory)\n      of the set of closures associated with this set of function\n      declarations. ",(middle_end/flambda/flambda.mli[288,13745+2]..[290,13885+22]),None)
                  ]
                Immutable
                "set_of_closures_id" (middle_end/flambda/flambda.mli[287,13700+2]..[287,13700+20])                core_type (middle_end/flambda/flambda.mli[287,13700+23]..[287,13700+43])
                  Ptyp_constr "Set_of_closures_id.t" (middle_end/flambda/flambda.mli[287,13700+23]..[287,13700+43])
                  []
              (middle_end/flambda/flambda.mli[291,13908+2]..[291,13908+52])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[292,13961+2]..[295,14174+27])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[292,13961+2]..[295,14174+27])
                        Pexp_constant PConst_string(" An identifier of the original set of closures on which this set of\n      function declarations is based.  Used to prevent different\n      specialisations of the same functions from being inlined/specialised\n      within each other. ",(middle_end/flambda/flambda.mli[292,13961+2]..[295,14174+27]),None)
                  ]
                Immutable
                "set_of_closures_origin" (middle_end/flambda/flambda.mli[291,13908+2]..[291,13908+24])                core_type (middle_end/flambda/flambda.mli[291,13908+27]..[291,13908+51])
                  Ptyp_constr "Set_of_closures_origin.t" (middle_end/flambda/flambda.mli[291,13908+27]..[291,13908+51])
                  []
              (middle_end/flambda/flambda.mli[296,14202+2]..[296,14202+45])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[297,14248+2]..[298,14320+74])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[297,14248+2]..[298,14320+74])
                        Pexp_constant PConst_string(" The function(s) defined by the set of function declarations.  The\n      keys of this map are often referred to in the code as \"fun_var\"s. ",(middle_end/flambda/flambda.mli[297,14248+2]..[298,14320+74]),None)
                  ]
                Immutable
                "funs" (middle_end/flambda/flambda.mli[296,14202+2]..[296,14202+6])                core_type (middle_end/flambda/flambda.mli[296,14202+9]..[296,14202+44])
                  Ptyp_constr "Variable.Map.t" (middle_end/flambda/flambda.mli[296,14202+30]..[296,14202+44])
                  [
                    core_type (middle_end/flambda/flambda.mli[296,14202+9]..[296,14202+29])
                      Ptyp_constr "function_declaration" (middle_end/flambda/flambda.mli[296,14202+9]..[296,14202+29])
                      []
                  ]
            ]
        ptype_private = Private
        ptype_manifest =
          None
      type_declaration "function_declaration" (middle_end/flambda/flambda.mli[301,14398+4]..[301,14398+24]) (middle_end/flambda/flambda.mli[301,14398+0]..[328,15753+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (middle_end/flambda/flambda.mli[302,14435+2]..[302,14435+35])
                Immutable
                "closure_origin" (middle_end/flambda/flambda.mli[302,14435+2]..[302,14435+16])                core_type (middle_end/flambda/flambda.mli[302,14435+18]..[302,14435+34])
                  Ptyp_constr "Closure_origin.t" (middle_end/flambda/flambda.mli[302,14435+18]..[302,14435+34])
                  []
              (middle_end/flambda/flambda.mli[303,14471+2]..[303,14471+28])
                Immutable
                "params" (middle_end/flambda/flambda.mli[303,14471+2]..[303,14471+8])                core_type (middle_end/flambda/flambda.mli[303,14471+11]..[303,14471+27])
                  Ptyp_constr "list" (middle_end/flambda/flambda.mli[303,14471+23]..[303,14471+27])
                  [
                    core_type (middle_end/flambda/flambda.mli[303,14471+11]..[303,14471+22])
                      Ptyp_constr "Parameter.t" (middle_end/flambda/flambda.mli[303,14471+11]..[303,14471+22])
                      []
                  ]
              (middle_end/flambda/flambda.mli[304,14500+2]..[304,14500+11])
                Immutable
                "body" (middle_end/flambda/flambda.mli[304,14500+2]..[304,14500+6])                core_type (middle_end/flambda/flambda.mli[304,14500+9]..[304,14500+10])
                  Ptyp_constr "t" (middle_end/flambda/flambda.mli[304,14500+9]..[304,14500+10])
                  []
              (middle_end/flambda/flambda.mli[307,14604+2]..[307,14604+34])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[308,14639+2]..[310,14787+76])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[308,14639+2]..[310,14787+76])
                        Pexp_constant PConst_string(" All variables free in the *body* of the function.  For example, a\n      variable that is bound as one of the function's parameters will still\n      be included in this set.  This field is present as an optimization. ",(middle_end/flambda/flambda.mli[308,14639+2]..[310,14787+76]),None)
                  ]
                Immutable
                "free_variables" (middle_end/flambda/flambda.mli[307,14604+2]..[307,14604+16])                core_type (middle_end/flambda/flambda.mli[307,14604+19]..[307,14604+33])
                  Ptyp_constr "Variable.Set.t" (middle_end/flambda/flambda.mli[307,14604+19]..[307,14604+33])
                  []
              (middle_end/flambda/flambda.mli[311,14864+2]..[311,14864+30])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[312,14895+2]..[314,15046+40])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[312,14895+2]..[314,15046+40])
                        Pexp_constant PConst_string(" All symbols that occur in the function's body.  (Symbols can never be\n      bound in a function's body; the only thing that binds symbols is the\n      [program] constructions below.) ",(middle_end/flambda/flambda.mli[312,14895+2]..[314,15046+40]),None)
                  ]
                Immutable
                "free_symbols" (middle_end/flambda/flambda.mli[311,14864+2]..[311,14864+14])                core_type (middle_end/flambda/flambda.mli[311,14864+17]..[311,14864+29])
                  Ptyp_constr "Symbol.Set.t" (middle_end/flambda/flambda.mli[311,14864+17]..[311,14864+29])
                  []
              (middle_end/flambda/flambda.mli[315,15087+2]..[315,15087+14])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[316,15102+2]..[319,15335+64])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[316,15102+2]..[319,15335+64])
                        Pexp_constant PConst_string(" A stub function is a generated function used to prepare arguments or\n      return values to allow indirect calls to functions with a special calling\n      convention.  For instance indirect calls to tuplified functions must go\n      through a stub.  Stubs will be unconditionally inlined. ",(middle_end/flambda/flambda.mli[316,15102+2]..[319,15335+64]),None)
                  ]
                Immutable
                "stub" (middle_end/flambda/flambda.mli[315,15087+2]..[315,15087+6])                core_type (middle_end/flambda/flambda.mli[315,15087+9]..[315,15087+13])
                  Ptyp_constr "bool" (middle_end/flambda/flambda.mli[315,15087+9]..[315,15087+13])
                  []
              (middle_end/flambda/flambda.mli[320,15400+2]..[320,15400+20])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[321,15421+2]..[321,15421+49])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[321,15421+2]..[321,15421+49])
                        Pexp_constant PConst_string(" Debug info for the function declaration. ",(middle_end/flambda/flambda.mli[321,15421+2]..[321,15421+49]),None)
                  ]
                Immutable
                "dbg" (middle_end/flambda/flambda.mli[320,15400+2]..[320,15400+5])                core_type (middle_end/flambda/flambda.mli[320,15400+8]..[320,15400+19])
                  Ptyp_constr "Debuginfo.t" (middle_end/flambda/flambda.mli[320,15400+8]..[320,15400+19])
                  []
              (middle_end/flambda/flambda.mli[322,15471+2]..[322,15471+35])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[323,15507+2]..[323,15507+52])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[323,15507+2]..[323,15507+52])
                        Pexp_constant PConst_string(" Inlining requirements from the source code. ",(middle_end/flambda/flambda.mli[323,15507+2]..[323,15507+52]),None)
                  ]
                Immutable
                "inline" (middle_end/flambda/flambda.mli[322,15471+2]..[322,15471+8])                core_type (middle_end/flambda/flambda.mli[322,15471+11]..[322,15471+34])
                  Ptyp_constr "Lambda.inline_attribute" (middle_end/flambda/flambda.mli[322,15471+11]..[322,15471+34])
                  []
              (middle_end/flambda/flambda.mli[324,15560+2]..[324,15560+43])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[325,15604+2]..[325,15604+56])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[325,15604+2]..[325,15604+56])
                        Pexp_constant PConst_string(" Specialising requirements from the source code. ",(middle_end/flambda/flambda.mli[325,15604+2]..[325,15604+56]),None)
                  ]
                Immutable
                "specialise" (middle_end/flambda/flambda.mli[324,15560+2]..[324,15560+12])                core_type (middle_end/flambda/flambda.mli[324,15560+15]..[324,15560+42])
                  Ptyp_constr "Lambda.specialise_attribute" (middle_end/flambda/flambda.mli[324,15560+15]..[324,15560+42])
                  []
              (middle_end/flambda/flambda.mli[326,15661+2]..[326,15661+22])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[327,15684+2]..[327,15684+68])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[327,15684+2]..[327,15684+68])
                        Pexp_constant PConst_string(" Whether the function is known definitively to be a functor. ",(middle_end/flambda/flambda.mli[327,15684+2]..[327,15684+68]),None)
                  ]
                Immutable
                "is_a_functor" (middle_end/flambda/flambda.mli[326,15661+2]..[326,15661+14])                core_type (middle_end/flambda/flambda.mli[326,15661+17]..[326,15661+21])
                  Ptyp_constr "bool" (middle_end/flambda/flambda.mli[326,15661+17]..[326,15661+21])
                  []
            ]
        ptype_private = Private
        ptype_manifest =
          None
      type_declaration "switch" (middle_end/flambda/flambda.mli[331,15807+4]..[331,15807+10]) (middle_end/flambda/flambda.mli[331,15807+0]..[337,16103+1])
        attribute "ocaml.doc"
          [
            structure_item (middle_end/flambda/flambda.mli[330,15756+0]..[330,15756+50])
              Pstr_eval
              expression (middle_end/flambda/flambda.mli[330,15756+0]..[330,15756+50])
                Pexp_constant PConst_string(" Equivalent to the similar type in [Lambda]. ",(middle_end/flambda/flambda.mli[330,15756+0]..[330,15756+50]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (middle_end/flambda/flambda.mli[332,15822+2]..[332,15822+32])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[332,15822+33]..[332,15822+53])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[332,15822+33]..[332,15822+53])
                        Pexp_constant PConst_string(" Integer cases ",(middle_end/flambda/flambda.mli[332,15822+33]..[332,15822+53]),None)
                  ]
                Immutable
                "numconsts" (middle_end/flambda/flambda.mli[332,15822+2]..[332,15822+11])                core_type (middle_end/flambda/flambda.mli[332,15822+14]..[332,15822+31])
                  Ptyp_constr "Numbers.Int.Set.t" (middle_end/flambda/flambda.mli[332,15822+14]..[332,15822+31])
                  []
              (middle_end/flambda/flambda.mli[333,15876+2]..[333,15876+26])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[333,15876+27]..[333,15876+47])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[333,15876+27]..[333,15876+47])
                        Pexp_constant PConst_string(" Integer cases ",(middle_end/flambda/flambda.mli[333,15876+27]..[333,15876+47]),None)
                  ]
                Immutable
                "consts" (middle_end/flambda/flambda.mli[333,15876+2]..[333,15876+8])                core_type (middle_end/flambda/flambda.mli[333,15876+11]..[333,15876+25])
                  Ptyp_constr "list" (middle_end/flambda/flambda.mli[333,15876+21]..[333,15876+25])
                  [
                    core_type (middle_end/flambda/flambda.mli[333,15876+12]..[333,15876+19])
                      Ptyp_tuple
                      [
                        core_type (middle_end/flambda/flambda.mli[333,15876+12]..[333,15876+15])
                          Ptyp_constr "int" (middle_end/flambda/flambda.mli[333,15876+12]..[333,15876+15])
                          []
                        core_type (middle_end/flambda/flambda.mli[333,15876+18]..[333,15876+19])
                          Ptyp_constr "t" (middle_end/flambda/flambda.mli[333,15876+18]..[333,15876+19])
                          []
                      ]
                  ]
              (middle_end/flambda/flambda.mli[334,15924+2]..[334,15924+32])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[334,15924+33]..[334,15924+65])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[334,15924+33]..[334,15924+65])
                        Pexp_constant PConst_string(" Number of tag block cases ",(middle_end/flambda/flambda.mli[334,15924+33]..[334,15924+65]),None)
                  ]
                Immutable
                "numblocks" (middle_end/flambda/flambda.mli[334,15924+2]..[334,15924+11])                core_type (middle_end/flambda/flambda.mli[334,15924+14]..[334,15924+31])
                  Ptyp_constr "Numbers.Int.Set.t" (middle_end/flambda/flambda.mli[334,15924+14]..[334,15924+31])
                  []
              (middle_end/flambda/flambda.mli[335,15990+2]..[335,15990+26])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[335,15990+27]..[335,15990+49])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[335,15990+27]..[335,15990+49])
                        Pexp_constant PConst_string(" Tag block cases ",(middle_end/flambda/flambda.mli[335,15990+27]..[335,15990+49]),None)
                  ]
                Immutable
                "blocks" (middle_end/flambda/flambda.mli[335,15990+2]..[335,15990+8])                core_type (middle_end/flambda/flambda.mli[335,15990+11]..[335,15990+25])
                  Ptyp_constr "list" (middle_end/flambda/flambda.mli[335,15990+21]..[335,15990+25])
                  [
                    core_type (middle_end/flambda/flambda.mli[335,15990+12]..[335,15990+19])
                      Ptyp_tuple
                      [
                        core_type (middle_end/flambda/flambda.mli[335,15990+12]..[335,15990+15])
                          Ptyp_constr "int" (middle_end/flambda/flambda.mli[335,15990+12]..[335,15990+15])
                          []
                        core_type (middle_end/flambda/flambda.mli[335,15990+18]..[335,15990+19])
                          Ptyp_constr "t" (middle_end/flambda/flambda.mli[335,15990+18]..[335,15990+19])
                          []
                      ]
                  ]
              (middle_end/flambda/flambda.mli[336,16040+2]..[336,16040+24])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[336,16040+25]..[336,16040+62])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[336,16040+25]..[336,16040+62])
                        Pexp_constant PConst_string(" Action to take if none matched ",(middle_end/flambda/flambda.mli[336,16040+25]..[336,16040+62]),None)
                  ]
                Immutable
                "failaction" (middle_end/flambda/flambda.mli[336,16040+2]..[336,16040+12])                core_type (middle_end/flambda/flambda.mli[336,16040+15]..[336,16040+23])
                  Ptyp_constr "option" (middle_end/flambda/flambda.mli[336,16040+17]..[336,16040+23])
                  [
                    core_type (middle_end/flambda/flambda.mli[336,16040+15]..[336,16040+16])
                      Ptyp_constr "t" (middle_end/flambda/flambda.mli[336,16040+15]..[336,16040+16])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "for_loop" (middle_end/flambda/flambda.mli[340,16157+4]..[340,16157+12]) (middle_end/flambda/flambda.mli[340,16157+0]..[346,16302+1])
        attribute "ocaml.doc"
          [
            structure_item (middle_end/flambda/flambda.mli[339,16106+0]..[339,16106+50])
              Pstr_eval
              expression (middle_end/flambda/flambda.mli[339,16106+0]..[339,16106+50])
                Pexp_constant PConst_string(" Equivalent to the similar type in [Lambda]. ",(middle_end/flambda/flambda.mli[339,16106+0]..[339,16106+50]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (middle_end/flambda/flambda.mli[341,16174+2]..[341,16174+25])
                Immutable
                "bound_var" (middle_end/flambda/flambda.mli[341,16174+2]..[341,16174+11])                core_type (middle_end/flambda/flambda.mli[341,16174+14]..[341,16174+24])
                  Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[341,16174+14]..[341,16174+24])
                  []
              (middle_end/flambda/flambda.mli[342,16200+2]..[342,16200+26])
                Immutable
                "from_value" (middle_end/flambda/flambda.mli[342,16200+2]..[342,16200+12])                core_type (middle_end/flambda/flambda.mli[342,16200+15]..[342,16200+25])
                  Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[342,16200+15]..[342,16200+25])
                  []
              (middle_end/flambda/flambda.mli[343,16227+2]..[343,16227+24])
                Immutable
                "to_value" (middle_end/flambda/flambda.mli[343,16227+2]..[343,16227+10])                core_type (middle_end/flambda/flambda.mli[343,16227+13]..[343,16227+23])
                  Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[343,16227+13]..[343,16227+23])
                  []
              (middle_end/flambda/flambda.mli[344,16252+2]..[344,16252+38])
                Immutable
                "direction" (middle_end/flambda/flambda.mli[344,16252+2]..[344,16252+11])                core_type (middle_end/flambda/flambda.mli[344,16252+14]..[344,16252+37])
                  Ptyp_constr "Asttypes.direction_flag" (middle_end/flambda/flambda.mli[344,16252+14]..[344,16252+37])
                  []
              (middle_end/flambda/flambda.mli[345,16291+2]..[345,16291+10])
                Immutable
                "body" (middle_end/flambda/flambda.mli[345,16291+2]..[345,16291+6])                core_type (middle_end/flambda/flambda.mli[345,16291+9]..[345,16291+10])
                  Ptyp_constr "t" (middle_end/flambda/flambda.mli[345,16291+9]..[345,16291+10])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "constant_defining_value" (middle_end/flambda/flambda.mli[352,16608+4]..[352,16608+27]) (middle_end/flambda/flambda.mli[352,16608+0]..[362,17154+46])
        attribute "ocaml.doc"
          [
            structure_item (middle_end/flambda/flambda.mli[348,16305+0]..[351,16537+70])
              Pstr_eval
              expression (middle_end/flambda/flambda.mli[348,16305+0]..[351,16537+70])
                Pexp_constant PConst_string(" Like a subset of [Flambda.named], except that instead of [Variable.t]s we\n    have [Symbol.t]s, and everything is a constant (i.e. with a fixed value\n    known at compile time).  Values of this type describe constants that will\n    be directly assigned to symbols in the object file (see below). ",(middle_end/flambda/flambda.mli[348,16305+0]..[351,16537+70]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (middle_end/flambda/flambda.mli[353,16638+2]..[353,16638+40])
                "Allocated_const" (middle_end/flambda/flambda.mli[353,16638+4]..[353,16638+19])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[354,16679+4]..[355,16757+54])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[354,16679+4]..[355,16757+54])
                        Pexp_constant PConst_string(" A single constant.  These are never \"simple constants\" (type [const])\n        but instead more complicated constructions. ",(middle_end/flambda/flambda.mli[354,16679+4]..[355,16757+54]),None)
                  ]
                [
                  core_type (middle_end/flambda/flambda.mli[353,16638+23]..[353,16638+40])
                    Ptyp_constr "Allocated_const.t" (middle_end/flambda/flambda.mli[353,16638+23]..[353,16638+40])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[356,16812+2]..[356,16812+61])
                "Block" (middle_end/flambda/flambda.mli[356,16812+4]..[356,16812+9])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[357,16874+4]..[358,16947+56])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[357,16874+4]..[358,16947+56])
                        Pexp_constant PConst_string(" A pre-allocated block full of constants (either simple constants\n        or references to other constants, see below). ",(middle_end/flambda/flambda.mli[357,16874+4]..[358,16947+56]),None)
                  ]
                [
                  core_type (middle_end/flambda/flambda.mli[356,16812+13]..[356,16812+18])
                    Ptyp_constr "Tag.t" (middle_end/flambda/flambda.mli[356,16812+13]..[356,16812+18])
                    []
                  core_type (middle_end/flambda/flambda.mli[356,16812+21]..[356,16812+61])
                    Ptyp_constr "list" (middle_end/flambda/flambda.mli[356,16812+57]..[356,16812+61])
                    [
                      core_type (middle_end/flambda/flambda.mli[356,16812+21]..[356,16812+56])
                        Ptyp_constr "constant_defining_value_block_field" (middle_end/flambda/flambda.mli[356,16812+21]..[356,16812+56])
                        []
                    ]
                ]
                None
              (middle_end/flambda/flambda.mli[359,17004+2]..[359,17004+38])
                "Set_of_closures" (middle_end/flambda/flambda.mli[359,17004+4]..[359,17004+19])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[360,17043+4]..[361,17115+38])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[360,17043+4]..[361,17115+38])
                        Pexp_constant PConst_string(" A closed (and thus constant) set of closures.  (That is to say,\n        [free_vars] must be empty.) ",(middle_end/flambda/flambda.mli[360,17043+4]..[361,17115+38]),None)
                  ]
                [
                  core_type (middle_end/flambda/flambda.mli[359,17004+23]..[359,17004+38])
                    Ptyp_constr "set_of_closures" (middle_end/flambda/flambda.mli[359,17004+23]..[359,17004+38])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[362,17154+2]..[362,17154+46])
                "Project_closure" (middle_end/flambda/flambda.mli[362,17154+4]..[362,17154+19])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[363,17201+4]..[364,17267+64])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[363,17201+4]..[364,17267+64])
                        Pexp_constant PConst_string(" Selection of one closure from a constant set of closures.\n        Analogous to the equivalent operation on expressions. ",(middle_end/flambda/flambda.mli[363,17201+4]..[364,17267+64]),None)
                  ]
                [
                  core_type (middle_end/flambda/flambda.mli[362,17154+23]..[362,17154+31])
                    Ptyp_constr "Symbol.t" (middle_end/flambda/flambda.mli[362,17154+23]..[362,17154+31])
                    []
                  core_type (middle_end/flambda/flambda.mli[362,17154+34]..[362,17154+46])
                    Ptyp_constr "Closure_id.t" (middle_end/flambda/flambda.mli[362,17154+34]..[362,17154+46])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "constant_defining_value_block_field" (middle_end/flambda/flambda.mli[366,17333+4]..[366,17333+39]) (middle_end/flambda/flambda.mli[366,17333+0]..[368,17398+18])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (middle_end/flambda/flambda.mli[367,17375+2]..[367,17375+22])
                "Symbol" (middle_end/flambda/flambda.mli[367,17375+4]..[367,17375+10])
                [
                  core_type (middle_end/flambda/flambda.mli[367,17375+14]..[367,17375+22])
                    Ptyp_constr "Symbol.t" (middle_end/flambda/flambda.mli[367,17375+14]..[367,17375+22])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[368,17398+2]..[368,17398+18])
                "Const" (middle_end/flambda/flambda.mli[368,17398+4]..[368,17398+9])
                [
                  core_type (middle_end/flambda/flambda.mli[368,17398+13]..[368,17398+18])
                    Ptyp_constr "const" (middle_end/flambda/flambda.mli[368,17398+13]..[368,17398+18])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (middle_end/flambda/flambda.mli[370,17418+0]..[371,17451+54])
    Psig_module "Constant_defining_value" (middle_end/flambda/flambda.mli[370,17418+7]..[370,17418+30])
    module_type (middle_end/flambda/flambda.mli[371,17451+2]..[371,17451+54])
      Pmty_with
      module_type (middle_end/flambda/flambda.mli[371,17451+2]..[371,17451+16])
        Pmty_ident "Identifiable.S" (middle_end/flambda/flambda.mli[371,17451+2]..[371,17451+16])
      [
        Pwith_type "t" (middle_end/flambda/flambda.mli[371,17451+27]..[371,17451+28])
          type_declaration "t" (middle_end/flambda/flambda.mli[371,17451+27]..[371,17451+28]) (middle_end/flambda/flambda.mli[371,17451+22]..[371,17451+54])
            ptype_params =
              []
            ptype_cstrs =
              []
            ptype_kind =
              Ptype_abstract
            ptype_private = Public
            ptype_manifest =
              Some
                core_type (middle_end/flambda/flambda.mli[371,17451+31]..[371,17451+54])
                  Ptyp_constr "constant_defining_value" (middle_end/flambda/flambda.mli[371,17451+31]..[371,17451+54])
                  []
      ]
  signature_item (middle_end/flambda/flambda.mli[373,17507+0]..[373,17507+13])
    Psig_type Rec
    [
      type_declaration "expr" (middle_end/flambda/flambda.mli[373,17507+5]..[373,17507+9]) (middle_end/flambda/flambda.mli[373,17507+0]..[373,17507+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (middle_end/flambda/flambda.mli[373,17507+12]..[373,17507+13])
              Ptyp_constr "t" (middle_end/flambda/flambda.mli[373,17507+12]..[373,17507+13])
              []
    ]
  signature_item (middle_end/flambda/flambda.mli[379,17791+0]..[410,19367+19])
    Psig_type Rec
    [
      type_declaration "program_body" (middle_end/flambda/flambda.mli[379,17791+5]..[379,17791+17]) (middle_end/flambda/flambda.mli[379,17791+0]..[410,19367+19])
        attribute "ocaml.doc"
          [
            structure_item (middle_end/flambda/flambda.mli[375,17522+0]..[378,17747+43])
              Pstr_eval
              expression (middle_end/flambda/flambda.mli[375,17522+0]..[378,17747+43])
                Pexp_constant PConst_string(" A \"program\" is the contents of one compilation unit.  It describes the\n    various values that are assigned to symbols (and in some cases fields of\n    such symbols) in the object file.  As such, it is closely related to\n    the compilation of toplevel modules. ",(middle_end/flambda/flambda.mli[375,17522+0]..[378,17747+43]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (middle_end/flambda/flambda.mli[380,17811+2]..[380,17811+67])
                "Let_symbol" (middle_end/flambda/flambda.mli[380,17811+4]..[380,17811+14])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[381,17879+2]..[381,17879+66])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[381,17879+2]..[381,17879+66])
                        Pexp_constant PConst_string(" Define the given symbol to have the given constant value. ",(middle_end/flambda/flambda.mli[381,17879+2]..[381,17879+66]),None)
                  ]
                [
                  core_type (middle_end/flambda/flambda.mli[380,17811+18]..[380,17811+26])
                    Ptyp_constr "Symbol.t" (middle_end/flambda/flambda.mli[380,17811+18]..[380,17811+26])
                    []
                  core_type (middle_end/flambda/flambda.mli[380,17811+29]..[380,17811+52])
                    Ptyp_constr "constant_defining_value" (middle_end/flambda/flambda.mli[380,17811+29]..[380,17811+52])
                    []
                  core_type (middle_end/flambda/flambda.mli[380,17811+55]..[380,17811+67])
                    Ptyp_constr "program_body" (middle_end/flambda/flambda.mli[380,17811+55]..[380,17811+67])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[382,17946+2]..[382,17946+78])
                "Let_rec_symbol" (middle_end/flambda/flambda.mli[382,17946+4]..[382,17946+18])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[383,18025+2]..[400,18783+71])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[383,18025+2]..[400,18783+71])
                        Pexp_constant PConst_string(" As for [Let_symbol], but recursive.  This is needed to treat examples\n      like this, where a constant set of closures is lifted to toplevel:\n\n        let rec f x = f x\n\n      After lifting this produces (in pseudo-Flambda):\n\n        Let_rec_symbol set_of_closures_symbol =\n          (Set_of_closures { f x ->\n            let applied_function = Symbol f_closure in\n            Apply (applied_function, x) })\n        and f_closure = Project_closure (set_of_closures_symbol, f)\n\n      Use of [Let_rec_symbol], by virtue of the special handling in\n      [Inline_and_simplify.define_let_rec_symbol_approx], enables the\n      approximation of the set of closures to be present in order to\n      correctly simplify the [Project_closure] construction.  (See\n      [Inline_and_simplify.simplify_project_closure] for that part.) ",(middle_end/flambda/flambda.mli[383,18025+2]..[400,18783+71]),None)
                  ]
                [
                  core_type (middle_end/flambda/flambda.mli[382,17946+22]..[382,17946+63])
                    Ptyp_constr "list" (middle_end/flambda/flambda.mli[382,17946+59]..[382,17946+63])
                    [
                      core_type (middle_end/flambda/flambda.mli[382,17946+23]..[382,17946+57])
                        Ptyp_tuple
                        [
                          core_type (middle_end/flambda/flambda.mli[382,17946+23]..[382,17946+31])
                            Ptyp_constr "Symbol.t" (middle_end/flambda/flambda.mli[382,17946+23]..[382,17946+31])
                            []
                          core_type (middle_end/flambda/flambda.mli[382,17946+34]..[382,17946+57])
                            Ptyp_constr "constant_defining_value" (middle_end/flambda/flambda.mli[382,17946+34]..[382,17946+57])
                            []
                        ]
                    ]
                  core_type (middle_end/flambda/flambda.mli[382,17946+66]..[382,17946+78])
                    Ptyp_constr "program_body" (middle_end/flambda/flambda.mli[382,17946+66]..[382,17946+78])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[401,18855+2]..[401,18855+65])
                "Initialize_symbol" (middle_end/flambda/flambda.mli[401,18855+4]..[401,18855+21])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[402,18921+2]..[405,19144+15])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[402,18921+2]..[405,19144+15])
                        Pexp_constant PConst_string(" Define the given symbol as a constant block of the given size and\n      tag; but with a possibly non-constant initializer.  The initializer\n      will be executed at most once (from the entry point of the compilation\n      unit). ",(middle_end/flambda/flambda.mli[402,18921+2]..[405,19144+15]),None)
                  ]
                [
                  core_type (middle_end/flambda/flambda.mli[401,18855+25]..[401,18855+33])
                    Ptyp_constr "Symbol.t" (middle_end/flambda/flambda.mli[401,18855+25]..[401,18855+33])
                    []
                  core_type (middle_end/flambda/flambda.mli[401,18855+36]..[401,18855+41])
                    Ptyp_constr "Tag.t" (middle_end/flambda/flambda.mli[401,18855+36]..[401,18855+41])
                    []
                  core_type (middle_end/flambda/flambda.mli[401,18855+44]..[401,18855+50])
                    Ptyp_constr "list" (middle_end/flambda/flambda.mli[401,18855+46]..[401,18855+50])
                    [
                      core_type (middle_end/flambda/flambda.mli[401,18855+44]..[401,18855+45])
                        Ptyp_constr "t" (middle_end/flambda/flambda.mli[401,18855+44]..[401,18855+45])
                        []
                    ]
                  core_type (middle_end/flambda/flambda.mli[401,18855+53]..[401,18855+65])
                    Ptyp_constr "program_body" (middle_end/flambda/flambda.mli[401,18855+53]..[401,18855+65])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[406,19160+2]..[406,19160+30])
                "Effect" (middle_end/flambda/flambda.mli[406,19160+4]..[406,19160+10])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[407,19191+2]..[409,19336+30])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[407,19191+2]..[409,19336+30])
                        Pexp_constant PConst_string(" Cause the given expression, which may have a side effect, to be\n      executed.  The resulting value is discarded.  [Effect] constructions\n      are never re-ordered. ",(middle_end/flambda/flambda.mli[407,19191+2]..[409,19336+30]),None)
                  ]
                [
                  core_type (middle_end/flambda/flambda.mli[406,19160+14]..[406,19160+15])
                    Ptyp_constr "t" (middle_end/flambda/flambda.mli[406,19160+14]..[406,19160+15])
                    []
                  core_type (middle_end/flambda/flambda.mli[406,19160+18]..[406,19160+30])
                    Ptyp_constr "program_body" (middle_end/flambda/flambda.mli[406,19160+18]..[406,19160+30])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[410,19367+2]..[410,19367+19])
                "End" (middle_end/flambda/flambda.mli[410,19367+4]..[410,19367+7])
                attribute "ocaml.doc"
                  [
                    structure_item (middle_end/flambda/flambda.mli[411,19387+2]..[412,19458+20])
                      Pstr_eval
                      expression (middle_end/flambda/flambda.mli[411,19387+2]..[412,19458+20])
                        Pexp_constant PConst_string(" [End] accepts the root symbol: the only symbol that can never be\n      eliminated. ",(middle_end/flambda/flambda.mli[411,19387+2]..[412,19458+20]),None)
                  ]
                [
                  core_type (middle_end/flambda/flambda.mli[410,19367+11]..[410,19367+19])
                    Ptyp_constr "Symbol.t" (middle_end/flambda/flambda.mli[410,19367+11]..[410,19367+19])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (middle_end/flambda/flambda.mli[414,19480+0]..[417,19563+1])
    Psig_type Rec
    [
      type_declaration "program" (middle_end/flambda/flambda.mli[414,19480+5]..[414,19480+12]) (middle_end/flambda/flambda.mli[414,19480+0]..[417,19563+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (middle_end/flambda/flambda.mli[415,19497+2]..[415,19497+34])
                Immutable
                "imported_symbols" (middle_end/flambda/flambda.mli[415,19497+2]..[415,19497+18])                core_type (middle_end/flambda/flambda.mli[415,19497+21]..[415,19497+33])
                  Ptyp_constr "Symbol.Set.t" (middle_end/flambda/flambda.mli[415,19497+21]..[415,19497+33])
                  []
              (middle_end/flambda/flambda.mli[416,19532+2]..[416,19532+30])
                Immutable
                "program_body" (middle_end/flambda/flambda.mli[416,19532+2]..[416,19532+14])                core_type (middle_end/flambda/flambda.mli[416,19532+17]..[416,19532+29])
                  Ptyp_constr "program_body" (middle_end/flambda/flambda.mli[416,19532+17]..[416,19532+29])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (middle_end/flambda/flambda.mli[424,19808+0]..[429,19940+19])
    Psig_value
    value_description "free_variables" (middle_end/flambda/flambda.mli[424,19808+4]..[424,19808+18]) (middle_end/flambda/flambda.mli[424,19808+0]..[429,19940+19])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[419,19566+0]..[423,19805+2])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[419,19566+0]..[423,19805+2])
              Pexp_constant PConst_string(" Compute the free variables of a term.  (This is O(1) for [Let]s).\n    If [ignore_uses_as_callee], all free variables inside [Apply] expressions\n    are ignored.  Likewise [ignore_uses_in_project_var] for [Project_var]\n    expressions.\n",(middle_end/flambda/flambda.mli[419,19566+0]..[423,19805+2]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[425,19827+5]..[429,19940+19])
        Ptyp_arrow
        Optional "ignore_uses_as_callee"
        core_type (middle_end/flambda/flambda.mli[425,19827+28]..[425,19827+32])
          Ptyp_constr "unit" (middle_end/flambda/flambda.mli[425,19827+28]..[425,19827+32])
          []
        core_type (middle_end/flambda/flambda.mli[426,19860+5]..[429,19940+19])
          Ptyp_arrow
          Optional "ignore_uses_as_argument"
          core_type (middle_end/flambda/flambda.mli[426,19860+30]..[426,19860+34])
            Ptyp_constr "unit" (middle_end/flambda/flambda.mli[426,19860+30]..[426,19860+34])
            []
          core_type (middle_end/flambda/flambda.mli[427,19895+5]..[429,19940+19])
            Ptyp_arrow
            Optional "ignore_uses_in_project_var"
            core_type (middle_end/flambda/flambda.mli[427,19895+33]..[427,19895+37])
              Ptyp_constr "unit" (middle_end/flambda/flambda.mli[427,19895+33]..[427,19895+37])
              []
            core_type (middle_end/flambda/flambda.mli[428,19933+5]..[429,19940+19])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[428,19933+5]..[428,19933+6])
                Ptyp_constr "t" (middle_end/flambda/flambda.mli[428,19933+5]..[428,19933+6])
                []
              core_type (middle_end/flambda/flambda.mli[429,19940+5]..[429,19940+19])
                Ptyp_constr "Variable.Set.t" (middle_end/flambda/flambda.mli[429,19940+5]..[429,19940+19])
                []
      []
  signature_item (middle_end/flambda/flambda.mli[432,20018+0]..[435,20092+19])
    Psig_value
    value_description "free_variables_named" (middle_end/flambda/flambda.mli[432,20018+4]..[432,20018+24]) (middle_end/flambda/flambda.mli[432,20018+0]..[435,20092+19])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[431,19961+0]..[431,19961+56])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[431,19961+0]..[431,19961+56])
              Pexp_constant PConst_string(" Compute the free variables of a named expression. ",(middle_end/flambda/flambda.mli[431,19961+0]..[431,19961+56]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[433,20043+5]..[435,20092+19])
        Ptyp_arrow
        Optional "ignore_uses_in_project_var"
        core_type (middle_end/flambda/flambda.mli[433,20043+33]..[433,20043+37])
          Ptyp_constr "unit" (middle_end/flambda/flambda.mli[433,20043+33]..[433,20043+37])
          []
        core_type (middle_end/flambda/flambda.mli[434,20081+5]..[435,20092+19])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[434,20081+5]..[434,20081+10])
            Ptyp_constr "named" (middle_end/flambda/flambda.mli[434,20081+5]..[434,20081+10])
            []
          core_type (middle_end/flambda/flambda.mli[435,20092+5]..[435,20092+19])
            Ptyp_constr "Variable.Set.t" (middle_end/flambda/flambda.mli[435,20092+5]..[435,20092+19])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[438,20176+0]..[443,20308+19])
    Psig_value
    value_description "used_variables" (middle_end/flambda/flambda.mli[438,20176+4]..[438,20176+18]) (middle_end/flambda/flambda.mli[438,20176+0]..[443,20308+19])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[437,20113+0]..[437,20113+62])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[437,20113+0]..[437,20113+62])
              Pexp_constant PConst_string(" Compute _all_ variables occurring inside an expression. ",(middle_end/flambda/flambda.mli[437,20113+0]..[437,20113+62]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[439,20195+5]..[443,20308+19])
        Ptyp_arrow
        Optional "ignore_uses_as_callee"
        core_type (middle_end/flambda/flambda.mli[439,20195+28]..[439,20195+32])
          Ptyp_constr "unit" (middle_end/flambda/flambda.mli[439,20195+28]..[439,20195+32])
          []
        core_type (middle_end/flambda/flambda.mli[440,20228+5]..[443,20308+19])
          Ptyp_arrow
          Optional "ignore_uses_as_argument"
          core_type (middle_end/flambda/flambda.mli[440,20228+30]..[440,20228+34])
            Ptyp_constr "unit" (middle_end/flambda/flambda.mli[440,20228+30]..[440,20228+34])
            []
          core_type (middle_end/flambda/flambda.mli[441,20263+5]..[443,20308+19])
            Ptyp_arrow
            Optional "ignore_uses_in_project_var"
            core_type (middle_end/flambda/flambda.mli[441,20263+33]..[441,20263+37])
              Ptyp_constr "unit" (middle_end/flambda/flambda.mli[441,20263+33]..[441,20263+37])
              []
            core_type (middle_end/flambda/flambda.mli[442,20301+5]..[443,20308+19])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[442,20301+5]..[442,20301+6])
                Ptyp_constr "t" (middle_end/flambda/flambda.mli[442,20301+5]..[442,20301+6])
                []
              core_type (middle_end/flambda/flambda.mli[443,20308+5]..[443,20308+19])
                Ptyp_constr "Variable.Set.t" (middle_end/flambda/flambda.mli[443,20308+5]..[443,20308+19])
                []
      []
  signature_item (middle_end/flambda/flambda.mli[446,20397+0]..[449,20471+19])
    Psig_value
    value_description "used_variables_named" (middle_end/flambda/flambda.mli[446,20397+4]..[446,20397+24]) (middle_end/flambda/flambda.mli[446,20397+0]..[449,20471+19])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[445,20329+0]..[445,20329+67])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[445,20329+0]..[445,20329+67])
              Pexp_constant PConst_string(" Compute _all_ variables occurring inside a named expression. ",(middle_end/flambda/flambda.mli[445,20329+0]..[445,20329+67]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[447,20422+5]..[449,20471+19])
        Ptyp_arrow
        Optional "ignore_uses_in_project_var"
        core_type (middle_end/flambda/flambda.mli[447,20422+33]..[447,20422+37])
          Ptyp_constr "unit" (middle_end/flambda/flambda.mli[447,20422+33]..[447,20422+37])
          []
        core_type (middle_end/flambda/flambda.mli[448,20460+5]..[449,20471+19])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[448,20460+5]..[448,20460+10])
            Ptyp_constr "named" (middle_end/flambda/flambda.mli[448,20460+5]..[448,20460+10])
            []
          core_type (middle_end/flambda/flambda.mli[449,20471+5]..[449,20471+19])
            Ptyp_constr "Variable.Set.t" (middle_end/flambda/flambda.mli[449,20471+5]..[449,20471+19])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[451,20492+0]..[451,20492+39])
    Psig_value
    value_description "free_symbols" (middle_end/flambda/flambda.mli[451,20492+4]..[451,20492+16]) (middle_end/flambda/flambda.mli[451,20492+0]..[451,20492+39])
      core_type (middle_end/flambda/flambda.mli[451,20492+19]..[451,20492+39])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[451,20492+19]..[451,20492+23])
          Ptyp_constr "expr" (middle_end/flambda/flambda.mli[451,20492+19]..[451,20492+23])
          []
        core_type (middle_end/flambda/flambda.mli[451,20492+27]..[451,20492+39])
          Ptyp_constr "Symbol.Set.t" (middle_end/flambda/flambda.mli[451,20492+27]..[451,20492+39])
          []
      []
  signature_item (middle_end/flambda/flambda.mli[453,20533+0]..[453,20533+46])
    Psig_value
    value_description "free_symbols_named" (middle_end/flambda/flambda.mli[453,20533+4]..[453,20533+22]) (middle_end/flambda/flambda.mli[453,20533+0]..[453,20533+46])
      core_type (middle_end/flambda/flambda.mli[453,20533+25]..[453,20533+46])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[453,20533+25]..[453,20533+30])
          Ptyp_constr "named" (middle_end/flambda/flambda.mli[453,20533+25]..[453,20533+30])
          []
        core_type (middle_end/flambda/flambda.mli[453,20533+34]..[453,20533+46])
          Ptyp_constr "Symbol.Set.t" (middle_end/flambda/flambda.mli[453,20533+34]..[453,20533+46])
          []
      []
  signature_item (middle_end/flambda/flambda.mli[455,20581+0]..[455,20581+50])
    Psig_value
    value_description "free_symbols_program" (middle_end/flambda/flambda.mli[455,20581+4]..[455,20581+24]) (middle_end/flambda/flambda.mli[455,20581+0]..[455,20581+50])
      core_type (middle_end/flambda/flambda.mli[455,20581+27]..[455,20581+50])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[455,20581+27]..[455,20581+34])
          Ptyp_constr "program" (middle_end/flambda/flambda.mli[455,20581+27]..[455,20581+34])
          []
        core_type (middle_end/flambda/flambda.mli[455,20581+38]..[455,20581+50])
          Ptyp_constr "Symbol.Set.t" (middle_end/flambda/flambda.mli[455,20581+38]..[455,20581+50])
          []
      []
  signature_item (middle_end/flambda/flambda.mli[461,20920+0]..[470,21294+11])
    Psig_value
    value_description "fold_lets_option" (middle_end/flambda/flambda.mli[461,20920+4]..[461,20920+20]) (middle_end/flambda/flambda.mli[461,20920+0]..[470,21294+11])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[457,20633+0]..[460,20856+63])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[457,20633+0]..[460,20856+63])
              Pexp_constant PConst_string(" Used to avoid exceeding the stack limit when handling expressions with\n    multiple consecutive nested [Let]-expressions.  This saves rewriting large\n    simplification functions in CPS.  This function provides for the\n    rewriting or elimination of expressions during the fold. ",(middle_end/flambda/flambda.mli[457,20633+0]..[460,20856+63]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[462,20941+5]..[470,21294+11])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[462,20941+5]..[462,20941+6])
          Ptyp_constr "t" (middle_end/flambda/flambda.mli[462,20941+5]..[462,20941+6])
          []
        core_type (middle_end/flambda/flambda.mli[463,20948+5]..[470,21294+11])
          Ptyp_arrow
          Labelled "init"
          core_type (middle_end/flambda/flambda.mli[463,20948+10]..[463,20948+12])
            Ptyp_var a
          core_type (middle_end/flambda/flambda.mli[464,20961+5]..[470,21294+11])
            Ptyp_arrow
            Labelled "for_defining_expr"
            core_type (middle_end/flambda/flambda.mli[464,20961+24]..[464,20961+76])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[464,20961+24]..[464,20961+26])
                Ptyp_var a
              core_type (middle_end/flambda/flambda.mli[464,20961+30]..[464,20961+76])
                Ptyp_arrow
                Nolabel
                core_type (middle_end/flambda/flambda.mli[464,20961+30]..[464,20961+40])
                  Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[464,20961+30]..[464,20961+40])
                  []
                core_type (middle_end/flambda/flambda.mli[464,20961+44]..[464,20961+76])
                  Ptyp_arrow
                  Nolabel
                  core_type (middle_end/flambda/flambda.mli[464,20961+44]..[464,20961+49])
                    Ptyp_constr "named" (middle_end/flambda/flambda.mli[464,20961+44]..[464,20961+49])
                    []
                  core_type (middle_end/flambda/flambda.mli[464,20961+53]..[464,20961+76])
                    Ptyp_tuple
                    [
                      core_type (middle_end/flambda/flambda.mli[464,20961+53]..[464,20961+55])
                        Ptyp_var a
                      core_type (middle_end/flambda/flambda.mli[464,20961+58]..[464,20961+68])
                        Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[464,20961+58]..[464,20961+68])
                        []
                      core_type (middle_end/flambda/flambda.mli[464,20961+71]..[464,20961+76])
                        Ptyp_constr "named" (middle_end/flambda/flambda.mli[464,20961+71]..[464,20961+76])
                        []
                    ]
            core_type (middle_end/flambda/flambda.mli[465,21039+5]..[470,21294+11])
              Ptyp_arrow
              Labelled "for_last_body"
              core_type (middle_end/flambda/flambda.mli[465,21039+20]..[465,21039+37])
                Ptyp_arrow
                Nolabel
                core_type (middle_end/flambda/flambda.mli[465,21039+20]..[465,21039+22])
                  Ptyp_var a
                core_type (middle_end/flambda/flambda.mli[465,21039+26]..[465,21039+37])
                  Ptyp_arrow
                  Nolabel
                  core_type (middle_end/flambda/flambda.mli[465,21039+26]..[465,21039+27])
                    Ptyp_constr "t" (middle_end/flambda/flambda.mli[465,21039+26]..[465,21039+27])
                    []
                  core_type (middle_end/flambda/flambda.mli[465,21039+31]..[465,21039+37])
                    Ptyp_tuple
                    [
                      core_type (middle_end/flambda/flambda.mli[465,21039+31]..[465,21039+32])
                        Ptyp_constr "t" (middle_end/flambda/flambda.mli[465,21039+31]..[465,21039+32])
                        []
                      core_type (middle_end/flambda/flambda.mli[465,21039+35]..[465,21039+37])
                        Ptyp_var b
                    ]
              core_type (middle_end/flambda/flambda.mli[468,21161+5]..[470,21294+11])
                Ptyp_arrow
                Labelled "filter_defining_expr"
                core_type (middle_end/flambda/flambda.mli[468,21161+27]..[469,21235+57])
                  Ptyp_arrow
                  Nolabel
                  core_type (middle_end/flambda/flambda.mli[468,21161+27]..[468,21161+29])
                    Ptyp_var b
                  core_type (middle_end/flambda/flambda.mli[468,21161+33]..[469,21235+57])
                    Ptyp_arrow
                    Nolabel
                    core_type (middle_end/flambda/flambda.mli[468,21161+33]..[468,21161+43])
                      Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[468,21161+33]..[468,21161+43])
                      []
                    core_type (middle_end/flambda/flambda.mli[468,21161+47]..[469,21235+57])
                      Ptyp_arrow
                      Nolabel
                      core_type (middle_end/flambda/flambda.mli[468,21161+47]..[468,21161+52])
                        Ptyp_constr "named" (middle_end/flambda/flambda.mli[468,21161+47]..[468,21161+52])
                        []
                      core_type (middle_end/flambda/flambda.mli[468,21161+56]..[469,21235+57])
                        Ptyp_arrow
                        Nolabel
                        core_type (middle_end/flambda/flambda.mli[468,21161+56]..[468,21161+70])
                          Ptyp_constr "Variable.Set.t" (middle_end/flambda/flambda.mli[468,21161+56]..[468,21161+70])
                          []
                        core_type (middle_end/flambda/flambda.mli[469,21235+27]..[469,21235+57])
                          Ptyp_tuple
                          [
                            core_type (middle_end/flambda/flambda.mli[469,21235+27]..[469,21235+29])
                              Ptyp_var b
                            core_type (middle_end/flambda/flambda.mli[469,21235+32]..[469,21235+42])
                              Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[469,21235+32]..[469,21235+42])
                              []
                            core_type (middle_end/flambda/flambda.mli[469,21235+45]..[469,21235+57])
                              Ptyp_constr "option" (middle_end/flambda/flambda.mli[469,21235+51]..[469,21235+57])
                              [
                                core_type (middle_end/flambda/flambda.mli[469,21235+45]..[469,21235+50])
                                  Ptyp_constr "named" (middle_end/flambda/flambda.mli[469,21235+45]..[469,21235+50])
                                  []
                              ]
                          ]
                core_type (middle_end/flambda/flambda.mli[470,21294+5]..[470,21294+11])
                  Ptyp_tuple
                  [
                    core_type (middle_end/flambda/flambda.mli[470,21294+5]..[470,21294+6])
                      Ptyp_constr "t" (middle_end/flambda/flambda.mli[470,21294+5]..[470,21294+6])
                      []
                    core_type (middle_end/flambda/flambda.mli[470,21294+9]..[470,21294+11])
                      Ptyp_var b
                  ]
      []
  signature_item (middle_end/flambda/flambda.mli[473,21355+0]..[478,21485+6])
    Psig_value
    value_description "map_lets" (middle_end/flambda/flambda.mli[473,21355+4]..[473,21355+12]) (middle_end/flambda/flambda.mli[473,21355+0]..[478,21485+6])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[472,21307+0]..[472,21307+47])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[472,21307+0]..[472,21307+47])
              Pexp_constant PConst_string(" Like [fold_lets_option], but just a map. ",(middle_end/flambda/flambda.mli[472,21307+0]..[472,21307+47]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[474,21368+5]..[478,21485+6])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[474,21368+5]..[474,21368+6])
          Ptyp_constr "t" (middle_end/flambda/flambda.mli[474,21368+5]..[474,21368+6])
          []
        core_type (middle_end/flambda/flambda.mli[475,21375+5]..[478,21485+6])
          Ptyp_arrow
          Labelled "for_defining_expr"
          core_type (middle_end/flambda/flambda.mli[475,21375+24]..[475,21375+52])
            Ptyp_arrow
            Nolabel
            core_type (middle_end/flambda/flambda.mli[475,21375+24]..[475,21375+34])
              Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[475,21375+24]..[475,21375+34])
              []
            core_type (middle_end/flambda/flambda.mli[475,21375+38]..[475,21375+52])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[475,21375+38]..[475,21375+43])
                Ptyp_constr "named" (middle_end/flambda/flambda.mli[475,21375+38]..[475,21375+43])
                []
              core_type (middle_end/flambda/flambda.mli[475,21375+47]..[475,21375+52])
                Ptyp_constr "named" (middle_end/flambda/flambda.mli[475,21375+47]..[475,21375+52])
                []
          core_type (middle_end/flambda/flambda.mli[476,21429+5]..[478,21485+6])
            Ptyp_arrow
            Labelled "for_last_body"
            core_type (middle_end/flambda/flambda.mli[476,21429+20]..[476,21429+26])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[476,21429+20]..[476,21429+21])
                Ptyp_constr "t" (middle_end/flambda/flambda.mli[476,21429+20]..[476,21429+21])
                []
              core_type (middle_end/flambda/flambda.mli[476,21429+25]..[476,21429+26])
                Ptyp_constr "t" (middle_end/flambda/flambda.mli[476,21429+25]..[476,21429+26])
                []
            core_type (middle_end/flambda/flambda.mli[477,21457+5]..[478,21485+6])
              Ptyp_arrow
              Labelled "after_rebuild"
              core_type (middle_end/flambda/flambda.mli[477,21457+20]..[477,21457+26])
                Ptyp_arrow
                Nolabel
                core_type (middle_end/flambda/flambda.mli[477,21457+20]..[477,21457+21])
                  Ptyp_constr "t" (middle_end/flambda/flambda.mli[477,21457+20]..[477,21457+21])
                  []
                core_type (middle_end/flambda/flambda.mli[477,21457+25]..[477,21457+26])
                  Ptyp_constr "t" (middle_end/flambda/flambda.mli[477,21457+25]..[477,21457+26])
                  []
              core_type (middle_end/flambda/flambda.mli[478,21485+5]..[478,21485+6])
                Ptyp_constr "t" (middle_end/flambda/flambda.mli[478,21485+5]..[478,21485+6])
                []
      []
  signature_item (middle_end/flambda/flambda.mli[481,21539+0]..[486,21674+9])
    Psig_value
    value_description "iter_lets" (middle_end/flambda/flambda.mli[481,21539+4]..[481,21539+13]) (middle_end/flambda/flambda.mli[481,21539+0]..[486,21674+9])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[480,21493+0]..[480,21493+45])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[480,21493+0]..[480,21493+45])
              Pexp_constant PConst_string(" Like [map_lets], but just an iterator. ",(middle_end/flambda/flambda.mli[480,21493+0]..[480,21493+45]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[482,21553+5]..[486,21674+9])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[482,21553+5]..[482,21553+6])
          Ptyp_constr "t" (middle_end/flambda/flambda.mli[482,21553+5]..[482,21553+6])
          []
        core_type (middle_end/flambda/flambda.mli[483,21560+5]..[486,21674+9])
          Ptyp_arrow
          Labelled "for_defining_expr"
          core_type (middle_end/flambda/flambda.mli[483,21560+24]..[483,21560+51])
            Ptyp_arrow
            Nolabel
            core_type (middle_end/flambda/flambda.mli[483,21560+24]..[483,21560+34])
              Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[483,21560+24]..[483,21560+34])
              []
            core_type (middle_end/flambda/flambda.mli[483,21560+38]..[483,21560+51])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[483,21560+38]..[483,21560+43])
                Ptyp_constr "named" (middle_end/flambda/flambda.mli[483,21560+38]..[483,21560+43])
                []
              core_type (middle_end/flambda/flambda.mli[483,21560+47]..[483,21560+51])
                Ptyp_constr "unit" (middle_end/flambda/flambda.mli[483,21560+47]..[483,21560+51])
                []
          core_type (middle_end/flambda/flambda.mli[484,21613+5]..[486,21674+9])
            Ptyp_arrow
            Labelled "for_last_body"
            core_type (middle_end/flambda/flambda.mli[484,21613+20]..[484,21613+29])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[484,21613+20]..[484,21613+21])
                Ptyp_constr "t" (middle_end/flambda/flambda.mli[484,21613+20]..[484,21613+21])
                []
              core_type (middle_end/flambda/flambda.mli[484,21613+25]..[484,21613+29])
                Ptyp_constr "unit" (middle_end/flambda/flambda.mli[484,21613+25]..[484,21613+29])
                []
            core_type (middle_end/flambda/flambda.mli[485,21644+5]..[486,21674+9])
              Ptyp_arrow
              Labelled "for_each_let"
              core_type (middle_end/flambda/flambda.mli[485,21644+19]..[485,21644+28])
                Ptyp_arrow
                Nolabel
                core_type (middle_end/flambda/flambda.mli[485,21644+19]..[485,21644+20])
                  Ptyp_constr "t" (middle_end/flambda/flambda.mli[485,21644+19]..[485,21644+20])
                  []
                core_type (middle_end/flambda/flambda.mli[485,21644+24]..[485,21644+28])
                  Ptyp_constr "unit" (middle_end/flambda/flambda.mli[485,21644+24]..[485,21644+28])
                  []
              core_type (middle_end/flambda/flambda.mli[486,21674+5]..[486,21674+9])
                Ptyp_constr "unit" (middle_end/flambda/flambda.mli[486,21674+5]..[486,21674+9])
                []
      []
  signature_item (middle_end/flambda/flambda.mli[490,21801+0]..[490,21801+46])
    Psig_value
    value_description "create_let" (middle_end/flambda/flambda.mli[490,21801+4]..[490,21801+14]) (middle_end/flambda/flambda.mli[490,21801+0]..[490,21801+46])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[488,21685+0]..[489,21759+41])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[488,21685+0]..[489,21759+41])
              Pexp_constant PConst_string(" Creates a [Let] expression.  (This computes the free variables of the\n    defining expression and the body.) ",(middle_end/flambda/flambda.mli[488,21685+0]..[489,21759+41]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[490,21801+17]..[490,21801+46])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[490,21801+17]..[490,21801+27])
          Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[490,21801+17]..[490,21801+27])
          []
        core_type (middle_end/flambda/flambda.mli[490,21801+31]..[490,21801+46])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[490,21801+31]..[490,21801+36])
            Ptyp_constr "named" (middle_end/flambda/flambda.mli[490,21801+31]..[490,21801+36])
            []
          core_type (middle_end/flambda/flambda.mli[490,21801+40]..[490,21801+46])
            Ptyp_arrow
            Nolabel
            core_type (middle_end/flambda/flambda.mli[490,21801+40]..[490,21801+41])
              Ptyp_constr "t" (middle_end/flambda/flambda.mli[490,21801+40]..[490,21801+41])
              []
            core_type (middle_end/flambda/flambda.mli[490,21801+45]..[490,21801+46])
              Ptyp_constr "t" (middle_end/flambda/flambda.mli[490,21801+45]..[490,21801+46])
              []
      []
  signature_item (middle_end/flambda/flambda.mli[494,21974+0]..[494,21974+66])
    Psig_value
    value_description "map_defining_expr_of_let" (middle_end/flambda/flambda.mli[494,21974+4]..[494,21974+28]) (middle_end/flambda/flambda.mli[494,21974+0]..[494,21974+66])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[492,21849+0]..[493,21926+47])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[492,21849+0]..[493,21926+47])
              Pexp_constant PConst_string(" Apply the specified function [f] to the defining expression of the given\n    [Let]-expression, returning a new [Let]. ",(middle_end/flambda/flambda.mli[492,21849+0]..[493,21926+47]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[494,21974+31]..[494,21974+66])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[494,21974+31]..[494,21974+39])
          Ptyp_constr "let_expr" (middle_end/flambda/flambda.mli[494,21974+31]..[494,21974+39])
          []
        core_type (middle_end/flambda/flambda.mli[494,21974+43]..[494,21974+66])
          Ptyp_arrow
          Labelled "f"
          core_type (middle_end/flambda/flambda.mli[494,21974+46]..[494,21974+60])
            Ptyp_arrow
            Nolabel
            core_type (middle_end/flambda/flambda.mli[494,21974+46]..[494,21974+51])
              Ptyp_constr "named" (middle_end/flambda/flambda.mli[494,21974+46]..[494,21974+51])
              []
            core_type (middle_end/flambda/flambda.mli[494,21974+55]..[494,21974+60])
              Ptyp_constr "named" (middle_end/flambda/flambda.mli[494,21974+55]..[494,21974+60])
              []
          core_type (middle_end/flambda/flambda.mli[494,21974+65]..[494,21974+66])
            Ptyp_constr "t" (middle_end/flambda/flambda.mli[494,21974+65]..[494,21974+66])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[498,22166+0]..[544,23254+3])
    Psig_module "With_free_variables" (middle_end/flambda/flambda.mli[498,22166+7]..[498,22166+26])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[496,22042+0]..[497,22117+48])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[496,22042+0]..[497,22117+48])
              Pexp_constant PConst_string(" A module for the manipulation of terms where the recomputation of free\n    variable sets is to be kept to a minimum. ",(middle_end/flambda/flambda.mli[496,22042+0]..[497,22117+48]),None)
        ]
    module_type (middle_end/flambda/flambda.mli[498,22166+29]..[544,23254+3])
      Pmty_signature
      [
        signature_item (middle_end/flambda/flambda.mli[499,22199+2]..[499,22199+11])
          Psig_type Rec
          [
            type_declaration "t" (middle_end/flambda/flambda.mli[499,22199+10]..[499,22199+11]) (middle_end/flambda/flambda.mli[499,22199+2]..[499,22199+11])
              ptype_params =
                [
                  core_type (middle_end/flambda/flambda.mli[499,22199+7]..[499,22199+9])
                    Ptyp_var a
                ]
              ptype_cstrs =
                []
              ptype_kind =
                Ptype_abstract
              ptype_private = Public
              ptype_manifest =
                None
          ]
        signature_item (middle_end/flambda/flambda.mli[502,22232+2]..[502,22232+51])
          Psig_value
          value_description "of_defining_expr_of_let" (middle_end/flambda/flambda.mli[502,22232+6]..[502,22232+29]) (middle_end/flambda/flambda.mli[502,22232+2]..[502,22232+51])
            attribute "ocaml.doc"
              [
                structure_item (middle_end/flambda/flambda.mli[501,22212+2]..[501,22212+19])
                  Pstr_eval
                  expression (middle_end/flambda/flambda.mli[501,22212+2]..[501,22212+19])
                    Pexp_constant PConst_string(" O(1) time. ",(middle_end/flambda/flambda.mli[501,22212+2]..[501,22212+19]),None)
              ]
            core_type (middle_end/flambda/flambda.mli[502,22232+32]..[502,22232+51])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[502,22232+32]..[502,22232+40])
                Ptyp_constr "let_expr" (middle_end/flambda/flambda.mli[502,22232+32]..[502,22232+40])
                []
              core_type (middle_end/flambda/flambda.mli[502,22232+44]..[502,22232+51])
                Ptyp_constr "t" (middle_end/flambda/flambda.mli[502,22232+50]..[502,22232+51])
                [
                  core_type (middle_end/flambda/flambda.mli[502,22232+44]..[502,22232+49])
                    Ptyp_constr "named" (middle_end/flambda/flambda.mli[502,22232+44]..[502,22232+49])
                    []
                ]
            []
        signature_item (middle_end/flambda/flambda.mli[505,22305+2]..[505,22305+41])
          Psig_value
          value_description "of_body_of_let" (middle_end/flambda/flambda.mli[505,22305+6]..[505,22305+20]) (middle_end/flambda/flambda.mli[505,22305+2]..[505,22305+41])
            attribute "ocaml.doc"
              [
                structure_item (middle_end/flambda/flambda.mli[504,22285+2]..[504,22285+19])
                  Pstr_eval
                  expression (middle_end/flambda/flambda.mli[504,22285+2]..[504,22285+19])
                    Pexp_constant PConst_string(" O(1) time. ",(middle_end/flambda/flambda.mli[504,22285+2]..[504,22285+19]),None)
              ]
            core_type (middle_end/flambda/flambda.mli[505,22305+23]..[505,22305+41])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[505,22305+23]..[505,22305+31])
                Ptyp_constr "let_expr" (middle_end/flambda/flambda.mli[505,22305+23]..[505,22305+31])
                []
              core_type (middle_end/flambda/flambda.mli[505,22305+35]..[505,22305+41])
                Ptyp_constr "t" (middle_end/flambda/flambda.mli[505,22305+40]..[505,22305+41])
                [
                  core_type (middle_end/flambda/flambda.mli[505,22305+35]..[505,22305+39])
                    Ptyp_constr "expr" (middle_end/flambda/flambda.mli[505,22305+35]..[505,22305+39])
                    []
                ]
            []
        signature_item (middle_end/flambda/flambda.mli[510,22530+2]..[510,22530+30])
          Psig_value
          value_description "of_expr" (middle_end/flambda/flambda.mli[510,22530+6]..[510,22530+13]) (middle_end/flambda/flambda.mli[510,22530+2]..[510,22530+30])
            attribute "ocaml.doc"
              [
                structure_item (middle_end/flambda/flambda.mli[507,22348+2]..[509,22501+28])
                  Pstr_eval
                  expression (middle_end/flambda/flambda.mli[507,22348+2]..[509,22501+28])
                    Pexp_constant PConst_string(" Takes the time required to calculate the free variables of the given\n      term (proportional to the size of the term, except that the calculation\n      for [Let] is O(1)). ",(middle_end/flambda/flambda.mli[507,22348+2]..[509,22501+28]),None)
              ]
            core_type (middle_end/flambda/flambda.mli[510,22530+16]..[510,22530+30])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[510,22530+16]..[510,22530+20])
                Ptyp_constr "expr" (middle_end/flambda/flambda.mli[510,22530+16]..[510,22530+20])
                []
              core_type (middle_end/flambda/flambda.mli[510,22530+24]..[510,22530+30])
                Ptyp_constr "t" (middle_end/flambda/flambda.mli[510,22530+29]..[510,22530+30])
                [
                  core_type (middle_end/flambda/flambda.mli[510,22530+24]..[510,22530+28])
                    Ptyp_constr "expr" (middle_end/flambda/flambda.mli[510,22530+24]..[510,22530+28])
                    []
                ]
            []
        signature_item (middle_end/flambda/flambda.mli[512,22562+2]..[512,22562+33])
          Psig_value
          value_description "of_named" (middle_end/flambda/flambda.mli[512,22562+6]..[512,22562+14]) (middle_end/flambda/flambda.mli[512,22562+2]..[512,22562+33])
            core_type (middle_end/flambda/flambda.mli[512,22562+17]..[512,22562+33])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[512,22562+17]..[512,22562+22])
                Ptyp_constr "named" (middle_end/flambda/flambda.mli[512,22562+17]..[512,22562+22])
                []
              core_type (middle_end/flambda/flambda.mli[512,22562+26]..[512,22562+33])
                Ptyp_constr "t" (middle_end/flambda/flambda.mli[512,22562+32]..[512,22562+33])
                [
                  core_type (middle_end/flambda/flambda.mli[512,22562+26]..[512,22562+31])
                    Ptyp_constr "named" (middle_end/flambda/flambda.mli[512,22562+26]..[512,22562+31])
                    []
                ]
            []
        signature_item (middle_end/flambda/flambda.mli[516,22689+2]..[520,22773+11])
          Psig_value
          value_description "create_let_reusing_defining_expr" (middle_end/flambda/flambda.mli[516,22689+6]..[516,22689+38]) (middle_end/flambda/flambda.mli[516,22689+2]..[520,22773+11])
            attribute "ocaml.doc"
              [
                structure_item (middle_end/flambda/flambda.mli[514,22597+2]..[515,22672+16])
                  Pstr_eval
                  expression (middle_end/flambda/flambda.mli[514,22597+2]..[515,22672+16])
                    Pexp_constant PConst_string(" Takes the time required to calculate the free variables of the given\n      [expr]. ",(middle_end/flambda/flambda.mli[514,22597+2]..[515,22672+16]),None)
              ]
            core_type (middle_end/flambda/flambda.mli[517,22728+7]..[520,22773+11])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[517,22728+7]..[517,22728+17])
                Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[517,22728+7]..[517,22728+17])
                []
              core_type (middle_end/flambda/flambda.mli[518,22746+7]..[520,22773+11])
                Ptyp_arrow
                Nolabel
                core_type (middle_end/flambda/flambda.mli[518,22746+7]..[518,22746+14])
                  Ptyp_constr "t" (middle_end/flambda/flambda.mli[518,22746+13]..[518,22746+14])
                  [
                    core_type (middle_end/flambda/flambda.mli[518,22746+7]..[518,22746+12])
                      Ptyp_constr "named" (middle_end/flambda/flambda.mli[518,22746+7]..[518,22746+12])
                      []
                  ]
                core_type (middle_end/flambda/flambda.mli[519,22761+7]..[520,22773+11])
                  Ptyp_arrow
                  Nolabel
                  core_type (middle_end/flambda/flambda.mli[519,22761+7]..[519,22761+11])
                    Ptyp_constr "expr" (middle_end/flambda/flambda.mli[519,22761+7]..[519,22761+11])
                    []
                  core_type (middle_end/flambda/flambda.mli[520,22773+7]..[520,22773+11])
                    Ptyp_constr "expr" (middle_end/flambda/flambda.mli[520,22773+7]..[520,22773+11])
                    []
            []
        signature_item (middle_end/flambda/flambda.mli[524,22879+2]..[528,22954+11])
          Psig_value
          value_description "create_let_reusing_body" (middle_end/flambda/flambda.mli[524,22879+6]..[524,22879+29]) (middle_end/flambda/flambda.mli[524,22879+2]..[528,22954+11])
            attribute "ocaml.doc"
              [
                structure_item (middle_end/flambda/flambda.mli[522,22786+2]..[523,22861+17])
                  Pstr_eval
                  expression (middle_end/flambda/flambda.mli[522,22786+2]..[523,22861+17])
                    Pexp_constant PConst_string(" Takes the time required to calculate the free variables of the given\n      [named]. ",(middle_end/flambda/flambda.mli[522,22786+2]..[523,22861+17]),None)
              ]
            core_type (middle_end/flambda/flambda.mli[525,22909+7]..[528,22954+11])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[525,22909+7]..[525,22909+17])
                Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[525,22909+7]..[525,22909+17])
                []
              core_type (middle_end/flambda/flambda.mli[526,22927+7]..[528,22954+11])
                Ptyp_arrow
                Nolabel
                core_type (middle_end/flambda/flambda.mli[526,22927+7]..[526,22927+12])
                  Ptyp_constr "named" (middle_end/flambda/flambda.mli[526,22927+7]..[526,22927+12])
                  []
                core_type (middle_end/flambda/flambda.mli[527,22940+7]..[528,22954+11])
                  Ptyp_arrow
                  Nolabel
                  core_type (middle_end/flambda/flambda.mli[527,22940+7]..[527,22940+13])
                    Ptyp_constr "t" (middle_end/flambda/flambda.mli[527,22940+12]..[527,22940+13])
                    [
                      core_type (middle_end/flambda/flambda.mli[527,22940+7]..[527,22940+11])
                        Ptyp_constr "expr" (middle_end/flambda/flambda.mli[527,22940+7]..[527,22940+11])
                        []
                    ]
                  core_type (middle_end/flambda/flambda.mli[528,22954+7]..[528,22954+11])
                    Ptyp_constr "expr" (middle_end/flambda/flambda.mli[528,22954+7]..[528,22954+11])
                    []
            []
        signature_item (middle_end/flambda/flambda.mli[531,22987+2]..[535,23064+11])
          Psig_value
          value_description "create_let_reusing_both" (middle_end/flambda/flambda.mli[531,22987+6]..[531,22987+29]) (middle_end/flambda/flambda.mli[531,22987+2]..[535,23064+11])
            attribute "ocaml.doc"
              [
                structure_item (middle_end/flambda/flambda.mli[530,22967+2]..[530,22967+19])
                  Pstr_eval
                  expression (middle_end/flambda/flambda.mli[530,22967+2]..[530,22967+19])
                    Pexp_constant PConst_string(" O(1) time. ",(middle_end/flambda/flambda.mli[530,22967+2]..[530,22967+19]),None)
              ]
            core_type (middle_end/flambda/flambda.mli[532,23017+7]..[535,23064+11])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[532,23017+7]..[532,23017+17])
                Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[532,23017+7]..[532,23017+17])
                []
              core_type (middle_end/flambda/flambda.mli[533,23035+7]..[535,23064+11])
                Ptyp_arrow
                Nolabel
                core_type (middle_end/flambda/flambda.mli[533,23035+7]..[533,23035+14])
                  Ptyp_constr "t" (middle_end/flambda/flambda.mli[533,23035+13]..[533,23035+14])
                  [
                    core_type (middle_end/flambda/flambda.mli[533,23035+7]..[533,23035+12])
                      Ptyp_constr "named" (middle_end/flambda/flambda.mli[533,23035+7]..[533,23035+12])
                      []
                  ]
                core_type (middle_end/flambda/flambda.mli[534,23050+7]..[535,23064+11])
                  Ptyp_arrow
                  Nolabel
                  core_type (middle_end/flambda/flambda.mli[534,23050+7]..[534,23050+13])
                    Ptyp_constr "t" (middle_end/flambda/flambda.mli[534,23050+12]..[534,23050+13])
                    [
                      core_type (middle_end/flambda/flambda.mli[534,23050+7]..[534,23050+11])
                        Ptyp_constr "expr" (middle_end/flambda/flambda.mli[534,23050+7]..[534,23050+11])
                        []
                    ]
                  core_type (middle_end/flambda/flambda.mli[535,23064+7]..[535,23064+11])
                    Ptyp_constr "expr" (middle_end/flambda/flambda.mli[535,23064+7]..[535,23064+11])
                    []
            []
        signature_item (middle_end/flambda/flambda.mli[538,23128+2]..[538,23128+30])
          Psig_value
          value_description "expr" (middle_end/flambda/flambda.mli[538,23128+6]..[538,23128+10]) (middle_end/flambda/flambda.mli[538,23128+2]..[538,23128+30])
            attribute "ocaml.doc"
              [
                structure_item (middle_end/flambda/flambda.mli[537,23077+2]..[537,23077+50])
                  Pstr_eval
                  expression (middle_end/flambda/flambda.mli[537,23077+2]..[537,23077+50])
                    Pexp_constant PConst_string(" The equivalent of the [Expr] constructor. ",(middle_end/flambda/flambda.mli[537,23077+2]..[537,23077+50]),None)
              ]
            core_type (middle_end/flambda/flambda.mli[538,23128+13]..[538,23128+30])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[538,23128+13]..[538,23128+19])
                Ptyp_constr "t" (middle_end/flambda/flambda.mli[538,23128+18]..[538,23128+19])
                [
                  core_type (middle_end/flambda/flambda.mli[538,23128+13]..[538,23128+17])
                    Ptyp_constr "expr" (middle_end/flambda/flambda.mli[538,23128+13]..[538,23128+17])
                    []
                ]
              core_type (middle_end/flambda/flambda.mli[538,23128+23]..[538,23128+30])
                Ptyp_constr "t" (middle_end/flambda/flambda.mli[538,23128+29]..[538,23128+30])
                [
                  core_type (middle_end/flambda/flambda.mli[538,23128+23]..[538,23128+28])
                    Ptyp_constr "named" (middle_end/flambda/flambda.mli[538,23128+23]..[538,23128+28])
                    []
                ]
            []
        signature_item (middle_end/flambda/flambda.mli[540,23160+2]..[540,23160+27])
          Psig_value
          value_description "contents" (middle_end/flambda/flambda.mli[540,23160+6]..[540,23160+14]) (middle_end/flambda/flambda.mli[540,23160+2]..[540,23160+27])
            core_type (middle_end/flambda/flambda.mli[540,23160+17]..[540,23160+27])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[540,23160+17]..[540,23160+21])
                Ptyp_constr "t" (middle_end/flambda/flambda.mli[540,23160+20]..[540,23160+21])
                [
                  core_type (middle_end/flambda/flambda.mli[540,23160+17]..[540,23160+19])
                    Ptyp_var a
                ]
              core_type (middle_end/flambda/flambda.mli[540,23160+25]..[540,23160+27])
                Ptyp_var a
            []
        signature_item (middle_end/flambda/flambda.mli[543,23209+2]..[543,23209+44])
          Psig_value
          value_description "free_variables" (middle_end/flambda/flambda.mli[543,23209+6]..[543,23209+20]) (middle_end/flambda/flambda.mli[543,23209+2]..[543,23209+44])
            attribute "ocaml.doc"
              [
                structure_item (middle_end/flambda/flambda.mli[542,23189+2]..[542,23189+19])
                  Pstr_eval
                  expression (middle_end/flambda/flambda.mli[542,23189+2]..[542,23189+19])
                    Pexp_constant PConst_string(" O(1) time. ",(middle_end/flambda/flambda.mli[542,23189+2]..[542,23189+19]),None)
              ]
            core_type (middle_end/flambda/flambda.mli[543,23209+23]..[543,23209+44])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[543,23209+23]..[543,23209+26])
                Ptyp_constr "t" (middle_end/flambda/flambda.mli[543,23209+25]..[543,23209+26])
                [
                  core_type (middle_end/flambda/flambda.mli[543,23209+23]..[543,23209+24])
                    Ptyp_any
                ]
              core_type (middle_end/flambda/flambda.mli[543,23209+30]..[543,23209+44])
                Ptyp_constr "Variable.Set.t" (middle_end/flambda/flambda.mli[543,23209+30]..[543,23209+44])
                []
            []
      ]
  signature_item (middle_end/flambda/flambda.mli[548,23384+0]..[557,23633+25])
    Psig_value
    value_description "create_function_declaration" (middle_end/flambda/flambda.mli[548,23384+4]..[548,23384+31]) (middle_end/flambda/flambda.mli[548,23384+0]..[557,23633+25])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[546,23259+0]..[547,23334+49])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[546,23259+0]..[547,23334+49])
              Pexp_constant PConst_string(" Create a function declaration.  This calculates the free variables and\n    symbols occurring in the specified [body]. ",(middle_end/flambda/flambda.mli[546,23259+0]..[547,23334+49]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[549,23416+5]..[557,23633+25])
        Ptyp_arrow
        Labelled "params"
        core_type (middle_end/flambda/flambda.mli[549,23416+12]..[549,23416+28])
          Ptyp_constr "list" (middle_end/flambda/flambda.mli[549,23416+24]..[549,23416+28])
          [
            core_type (middle_end/flambda/flambda.mli[549,23416+12]..[549,23416+23])
              Ptyp_constr "Parameter.t" (middle_end/flambda/flambda.mli[549,23416+12]..[549,23416+23])
              []
          ]
        core_type (middle_end/flambda/flambda.mli[550,23445+5]..[557,23633+25])
          Ptyp_arrow
          Labelled "body"
          core_type (middle_end/flambda/flambda.mli[550,23445+10]..[550,23445+11])
            Ptyp_constr "t" (middle_end/flambda/flambda.mli[550,23445+10]..[550,23445+11])
            []
          core_type (middle_end/flambda/flambda.mli[551,23457+5]..[557,23633+25])
            Ptyp_arrow
            Labelled "stub"
            core_type (middle_end/flambda/flambda.mli[551,23457+10]..[551,23457+14])
              Ptyp_constr "bool" (middle_end/flambda/flambda.mli[551,23457+10]..[551,23457+14])
              []
            core_type (middle_end/flambda/flambda.mli[552,23472+5]..[557,23633+25])
              Ptyp_arrow
              Labelled "dbg"
              core_type (middle_end/flambda/flambda.mli[552,23472+9]..[552,23472+20])
                Ptyp_constr "Debuginfo.t" (middle_end/flambda/flambda.mli[552,23472+9]..[552,23472+20])
                []
              core_type (middle_end/flambda/flambda.mli[553,23493+5]..[557,23633+25])
                Ptyp_arrow
                Labelled "inline"
                core_type (middle_end/flambda/flambda.mli[553,23493+12]..[553,23493+35])
                  Ptyp_constr "Lambda.inline_attribute" (middle_end/flambda/flambda.mli[553,23493+12]..[553,23493+35])
                  []
                core_type (middle_end/flambda/flambda.mli[554,23529+5]..[557,23633+25])
                  Ptyp_arrow
                  Labelled "specialise"
                  core_type (middle_end/flambda/flambda.mli[554,23529+16]..[554,23529+43])
                    Ptyp_constr "Lambda.specialise_attribute" (middle_end/flambda/flambda.mli[554,23529+16]..[554,23529+43])
                    []
                  core_type (middle_end/flambda/flambda.mli[555,23573+5]..[557,23633+25])
                    Ptyp_arrow
                    Labelled "is_a_functor"
                    core_type (middle_end/flambda/flambda.mli[555,23573+18]..[555,23573+22])
                      Ptyp_constr "bool" (middle_end/flambda/flambda.mli[555,23573+18]..[555,23573+22])
                      []
                    core_type (middle_end/flambda/flambda.mli[556,23596+5]..[557,23633+25])
                      Ptyp_arrow
                      Labelled "closure_origin"
                      core_type (middle_end/flambda/flambda.mli[556,23596+20]..[556,23596+36])
                        Ptyp_constr "Closure_origin.t" (middle_end/flambda/flambda.mli[556,23596+20]..[556,23596+36])
                        []
                      core_type (middle_end/flambda/flambda.mli[557,23633+5]..[557,23633+25])
                        Ptyp_constr "function_declaration" (middle_end/flambda/flambda.mli[557,23633+5]..[557,23633+25])
                        []
      []
  signature_item (middle_end/flambda/flambda.mli[560,23735+0]..[564,23833+25])
    Psig_value
    value_description "update_function_declaration" (middle_end/flambda/flambda.mli[560,23735+4]..[560,23735+31]) (middle_end/flambda/flambda.mli[560,23735+0]..[564,23833+25])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[559,23660+0]..[559,23660+74])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[559,23660+0]..[559,23660+74])
              Pexp_constant PConst_string(" Create a function declaration based on another function declaration ",(middle_end/flambda/flambda.mli[559,23660+0]..[559,23660+74]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[561,23767+4]..[564,23833+25])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[561,23767+4]..[561,23767+24])
          Ptyp_constr "function_declaration" (middle_end/flambda/flambda.mli[561,23767+4]..[561,23767+24])
          []
        core_type (middle_end/flambda/flambda.mli[562,23792+5]..[564,23833+25])
          Ptyp_arrow
          Labelled "params"
          core_type (middle_end/flambda/flambda.mli[562,23792+12]..[562,23792+28])
            Ptyp_constr "list" (middle_end/flambda/flambda.mli[562,23792+24]..[562,23792+28])
            [
              core_type (middle_end/flambda/flambda.mli[562,23792+12]..[562,23792+23])
                Ptyp_constr "Parameter.t" (middle_end/flambda/flambda.mli[562,23792+12]..[562,23792+23])
                []
            ]
          core_type (middle_end/flambda/flambda.mli[563,23821+5]..[564,23833+25])
            Ptyp_arrow
            Labelled "body"
            core_type (middle_end/flambda/flambda.mli[563,23821+10]..[563,23821+11])
              Ptyp_constr "t" (middle_end/flambda/flambda.mli[563,23821+10]..[563,23821+11])
              []
            core_type (middle_end/flambda/flambda.mli[564,23833+5]..[564,23833+25])
              Ptyp_constr "function_declaration" (middle_end/flambda/flambda.mli[564,23833+5]..[564,23833+25])
              []
      []
  signature_item (middle_end/flambda/flambda.mli[567,23940+0]..[570,24045+26])
    Psig_value
    value_description "create_function_declarations" (middle_end/flambda/flambda.mli[567,23940+4]..[567,23940+32]) (middle_end/flambda/flambda.mli[567,23940+0]..[570,24045+26])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[566,23860+0]..[566,23860+79])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[566,23860+0]..[566,23860+79])
              Pexp_constant PConst_string(" Create a set of function declarations given the individual declarations. ",(middle_end/flambda/flambda.mli[566,23860+0]..[566,23860+79]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[568,23973+5]..[570,24045+26])
        Ptyp_arrow
        Labelled "is_classic_mode"
        core_type (middle_end/flambda/flambda.mli[568,23973+21]..[568,23973+25])
          Ptyp_constr "bool" (middle_end/flambda/flambda.mli[568,23973+21]..[568,23973+25])
          []
        core_type (middle_end/flambda/flambda.mli[569,23999+5]..[570,24045+26])
          Ptyp_arrow
          Labelled "funs"
          core_type (middle_end/flambda/flambda.mli[569,23999+10]..[569,23999+45])
            Ptyp_constr "Variable.Map.t" (middle_end/flambda/flambda.mli[569,23999+31]..[569,23999+45])
            [
              core_type (middle_end/flambda/flambda.mli[569,23999+10]..[569,23999+30])
                Ptyp_constr "function_declaration" (middle_end/flambda/flambda.mli[569,23999+10]..[569,23999+30])
                []
            ]
          core_type (middle_end/flambda/flambda.mli[570,24045+5]..[570,24045+26])
            Ptyp_constr "function_declarations" (middle_end/flambda/flambda.mli[570,24045+5]..[570,24045+26])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[574,24159+0]..[578,24329+26])
    Psig_value
    value_description "create_function_declarations_with_origin" (middle_end/flambda/flambda.mli[574,24159+4]..[574,24159+44]) (middle_end/flambda/flambda.mli[574,24159+0]..[578,24329+26])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[572,24073+0]..[573,24144+14])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[572,24073+0]..[573,24144+14])
              Pexp_constant PConst_string(" Create a set of function declarations with a given set of closures\n    origin. ",(middle_end/flambda/flambda.mli[572,24073+0]..[573,24144+14]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[575,24204+5]..[578,24329+26])
        Ptyp_arrow
        Labelled "is_classic_mode"
        core_type (middle_end/flambda/flambda.mli[575,24204+21]..[575,24204+25])
          Ptyp_constr "bool" (middle_end/flambda/flambda.mli[575,24204+21]..[575,24204+25])
          []
        core_type (middle_end/flambda/flambda.mli[576,24230+5]..[578,24329+26])
          Ptyp_arrow
          Labelled "funs"
          core_type (middle_end/flambda/flambda.mli[576,24230+10]..[576,24230+45])
            Ptyp_constr "Variable.Map.t" (middle_end/flambda/flambda.mli[576,24230+31]..[576,24230+45])
            [
              core_type (middle_end/flambda/flambda.mli[576,24230+10]..[576,24230+30])
                Ptyp_constr "function_declaration" (middle_end/flambda/flambda.mli[576,24230+10]..[576,24230+30])
                []
            ]
          core_type (middle_end/flambda/flambda.mli[577,24276+5]..[578,24329+26])
            Ptyp_arrow
            Labelled "set_of_closures_origin"
            core_type (middle_end/flambda/flambda.mli[577,24276+28]..[577,24276+52])
              Ptyp_constr "Set_of_closures_origin.t" (middle_end/flambda/flambda.mli[577,24276+28]..[577,24276+52])
              []
            core_type (middle_end/flambda/flambda.mli[578,24329+5]..[578,24329+26])
              Ptyp_constr "function_declarations" (middle_end/flambda/flambda.mli[578,24329+5]..[578,24329+26])
              []
      []
  signature_item (middle_end/flambda/flambda.mli[581,24412+0]..[584,24493+25])
    Psig_value
    value_description "update_body_of_function_declaration" (middle_end/flambda/flambda.mli[581,24412+4]..[581,24412+39]) (middle_end/flambda/flambda.mli[581,24412+0]..[584,24493+25])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[580,24357+0]..[580,24357+54])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[580,24357+0]..[580,24357+54])
              Pexp_constant PConst_string(" Change only the code of a function declaration. ",(middle_end/flambda/flambda.mli[580,24357+0]..[580,24357+54]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[582,24452+5]..[584,24493+25])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[582,24452+5]..[582,24452+25])
          Ptyp_constr "function_declaration" (middle_end/flambda/flambda.mli[582,24452+5]..[582,24452+25])
          []
        core_type (middle_end/flambda/flambda.mli[583,24478+5]..[584,24493+25])
          Ptyp_arrow
          Labelled "body"
          core_type (middle_end/flambda/flambda.mli[583,24478+10]..[583,24478+14])
            Ptyp_constr "expr" (middle_end/flambda/flambda.mli[583,24478+10]..[583,24478+14])
            []
          core_type (middle_end/flambda/flambda.mli[584,24493+5]..[584,24493+25])
            Ptyp_constr "function_declaration" (middle_end/flambda/flambda.mli[584,24493+5]..[584,24493+25])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[588,24662+0]..[592,24775+25])
    Psig_value
    value_description "update_function_decl's_params_and_body" (middle_end/flambda/flambda.mli[588,24662+4]..[588,24662+42]) (middle_end/flambda/flambda.mli[588,24662+0]..[592,24775+25])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[586,24520+0]..[586,24520+69])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[586,24520+0]..[586,24520+69])
              Pexp_constant PConst_string(" Change only the code and parameters of a function declaration. ",(middle_end/flambda/flambda.mli[586,24520+0]..[586,24520+69]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[589,24705+5]..[592,24775+25])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[589,24705+5]..[589,24705+25])
          Ptyp_constr "function_declaration" (middle_end/flambda/flambda.mli[589,24705+5]..[589,24705+25])
          []
        core_type (middle_end/flambda/flambda.mli[590,24731+5]..[592,24775+25])
          Ptyp_arrow
          Labelled "params"
          core_type (middle_end/flambda/flambda.mli[590,24731+12]..[590,24731+28])
            Ptyp_constr "list" (middle_end/flambda/flambda.mli[590,24731+24]..[590,24731+28])
            [
              core_type (middle_end/flambda/flambda.mli[590,24731+12]..[590,24731+23])
                Ptyp_constr "Parameter.t" (middle_end/flambda/flambda.mli[590,24731+12]..[590,24731+23])
                []
            ]
          core_type (middle_end/flambda/flambda.mli[591,24760+5]..[592,24775+25])
            Ptyp_arrow
            Labelled "body"
            core_type (middle_end/flambda/flambda.mli[591,24760+10]..[591,24760+14])
              Ptyp_constr "expr" (middle_end/flambda/flambda.mli[591,24760+10]..[591,24760+14])
              []
            core_type (middle_end/flambda/flambda.mli[592,24775+5]..[592,24775+25])
              Ptyp_constr "function_declaration" (middle_end/flambda/flambda.mli[592,24775+5]..[592,24775+25])
              []
      []
  signature_item (middle_end/flambda/flambda.mli[596,24898+0]..[599,25004+26])
    Psig_value
    value_description "update_function_declarations" (middle_end/flambda/flambda.mli[596,24898+4]..[596,24898+32]) (middle_end/flambda/flambda.mli[596,24898+0]..[599,25004+26])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[594,24802+0]..[595,24877+20])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[594,24802+0]..[595,24877+20])
              Pexp_constant PConst_string(" Create a set of function declarations based on another set of function\n    declarations. ",(middle_end/flambda/flambda.mli[594,24802+0]..[595,24877+20]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[597,24931+5]..[599,25004+26])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[597,24931+5]..[597,24931+26])
          Ptyp_constr "function_declarations" (middle_end/flambda/flambda.mli[597,24931+5]..[597,24931+26])
          []
        core_type (middle_end/flambda/flambda.mli[598,24958+5]..[599,25004+26])
          Ptyp_arrow
          Labelled "funs"
          core_type (middle_end/flambda/flambda.mli[598,24958+10]..[598,24958+45])
            Ptyp_constr "Variable.Map.t" (middle_end/flambda/flambda.mli[598,24958+31]..[598,24958+45])
            [
              core_type (middle_end/flambda/flambda.mli[598,24958+10]..[598,24958+30])
                Ptyp_constr "function_declaration" (middle_end/flambda/flambda.mli[598,24958+10]..[598,24958+30])
                []
            ]
          core_type (middle_end/flambda/flambda.mli[599,25004+5]..[599,25004+26])
            Ptyp_constr "function_declarations" (middle_end/flambda/flambda.mli[599,25004+5]..[599,25004+26])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[601,25032+0]..[605,25212+26])
    Psig_value
    value_description "create_function_declarations_with_closures_origin" (middle_end/flambda/flambda.mli[601,25032+4]..[601,25032+53]) (middle_end/flambda/flambda.mli[601,25032+0]..[605,25212+26])
      core_type (middle_end/flambda/flambda.mli[602,25086+5]..[605,25212+26])
        Ptyp_arrow
        Labelled "is_classic_mode"
        core_type (middle_end/flambda/flambda.mli[602,25086+22]..[602,25086+26])
          Ptyp_constr "bool" (middle_end/flambda/flambda.mli[602,25086+22]..[602,25086+26])
          []
        core_type (middle_end/flambda/flambda.mli[603,25113+5]..[605,25212+26])
          Ptyp_arrow
          Labelled "funs"
          core_type (middle_end/flambda/flambda.mli[603,25113+10]..[603,25113+45])
            Ptyp_constr "Variable.Map.t" (middle_end/flambda/flambda.mli[603,25113+31]..[603,25113+45])
            [
              core_type (middle_end/flambda/flambda.mli[603,25113+10]..[603,25113+30])
                Ptyp_constr "function_declaration" (middle_end/flambda/flambda.mli[603,25113+10]..[603,25113+30])
                []
            ]
          core_type (middle_end/flambda/flambda.mli[604,25159+5]..[605,25212+26])
            Ptyp_arrow
            Labelled "set_of_closures_origin"
            core_type (middle_end/flambda/flambda.mli[604,25159+28]..[604,25159+52])
              Ptyp_constr "Set_of_closures_origin.t" (middle_end/flambda/flambda.mli[604,25159+28]..[604,25159+52])
              []
            core_type (middle_end/flambda/flambda.mli[605,25212+5]..[605,25212+26])
              Ptyp_constr "function_declarations" (middle_end/flambda/flambda.mli[605,25212+5]..[605,25212+26])
              []
      []
  signature_item (middle_end/flambda/flambda.mli[607,25240+0]..[611,25421+26])
    Psig_value
    value_description "import_function_declarations_for_pack" (middle_end/flambda/flambda.mli[607,25240+4]..[607,25240+41]) (middle_end/flambda/flambda.mli[607,25240+0]..[611,25421+26])
      core_type (middle_end/flambda/flambda.mli[608,25282+5]..[611,25421+26])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[608,25282+5]..[608,25282+26])
          Ptyp_constr "function_declarations" (middle_end/flambda/flambda.mli[608,25282+5]..[608,25282+26])
          []
        core_type (middle_end/flambda/flambda.mli[609,25309+5]..[611,25421+26])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[609,25309+6]..[609,25309+50])
            Ptyp_arrow
            Nolabel
            core_type (middle_end/flambda/flambda.mli[609,25309+6]..[609,25309+26])
              Ptyp_constr "Set_of_closures_id.t" (middle_end/flambda/flambda.mli[609,25309+6]..[609,25309+26])
              []
            core_type (middle_end/flambda/flambda.mli[609,25309+30]..[609,25309+50])
              Ptyp_constr "Set_of_closures_id.t" (middle_end/flambda/flambda.mli[609,25309+30]..[609,25309+50])
              []
          core_type (middle_end/flambda/flambda.mli[610,25361+5]..[611,25421+26])
            Ptyp_arrow
            Nolabel
            core_type (middle_end/flambda/flambda.mli[610,25361+6]..[610,25361+58])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[610,25361+6]..[610,25361+30])
                Ptyp_constr "Set_of_closures_origin.t" (middle_end/flambda/flambda.mli[610,25361+6]..[610,25361+30])
                []
              core_type (middle_end/flambda/flambda.mli[610,25361+34]..[610,25361+58])
                Ptyp_constr "Set_of_closures_origin.t" (middle_end/flambda/flambda.mli[610,25361+34]..[610,25361+58])
                []
            core_type (middle_end/flambda/flambda.mli[611,25421+5]..[611,25421+26])
              Ptyp_constr "function_declarations" (middle_end/flambda/flambda.mli[611,25421+5]..[611,25421+26])
              []
      []
  signature_item (middle_end/flambda/flambda.mli[615,25569+0]..[620,25789+20])
    Psig_value
    value_description "create_set_of_closures" (middle_end/flambda/flambda.mli[615,25569+4]..[615,25569+26]) (middle_end/flambda/flambda.mli[615,25569+0]..[620,25789+20])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[613,25449+0]..[614,25523+45])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[613,25449+0]..[614,25523+45])
              Pexp_constant PConst_string(" Create a set of closures.  Checks are made to ensure that [free_vars]\n    and [specialised_args] are reasonable. ",(middle_end/flambda/flambda.mli[613,25449+0]..[614,25523+45]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[616,25596+5]..[620,25789+20])
        Ptyp_arrow
        Labelled "function_decls"
        core_type (middle_end/flambda/flambda.mli[616,25596+20]..[616,25596+41])
          Ptyp_constr "function_declarations" (middle_end/flambda/flambda.mli[616,25596+20]..[616,25596+41])
          []
        core_type (middle_end/flambda/flambda.mli[617,25638+5]..[620,25789+20])
          Ptyp_arrow
          Labelled "free_vars"
          core_type (middle_end/flambda/flambda.mli[617,25638+15]..[617,25638+44])
            Ptyp_constr "Variable.Map.t" (middle_end/flambda/flambda.mli[617,25638+30]..[617,25638+44])
            [
              core_type (middle_end/flambda/flambda.mli[617,25638+15]..[617,25638+29])
                Ptyp_constr "specialised_to" (middle_end/flambda/flambda.mli[617,25638+15]..[617,25638+29])
                []
            ]
          core_type (middle_end/flambda/flambda.mli[618,25683+5]..[620,25789+20])
            Ptyp_arrow
            Labelled "specialised_args"
            core_type (middle_end/flambda/flambda.mli[618,25683+22]..[618,25683+51])
              Ptyp_constr "Variable.Map.t" (middle_end/flambda/flambda.mli[618,25683+37]..[618,25683+51])
              [
                core_type (middle_end/flambda/flambda.mli[618,25683+22]..[618,25683+36])
                  Ptyp_constr "specialised_to" (middle_end/flambda/flambda.mli[618,25683+22]..[618,25683+36])
                  []
              ]
            core_type (middle_end/flambda/flambda.mli[619,25735+5]..[620,25789+20])
              Ptyp_arrow
              Labelled "direct_call_surrogates"
              core_type (middle_end/flambda/flambda.mli[619,25735+28]..[619,25735+53])
                Ptyp_constr "Variable.Map.t" (middle_end/flambda/flambda.mli[619,25735+39]..[619,25735+53])
                [
                  core_type (middle_end/flambda/flambda.mli[619,25735+28]..[619,25735+38])
                    Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[619,25735+28]..[619,25735+38])
                    []
                ]
              core_type (middle_end/flambda/flambda.mli[620,25789+5]..[620,25789+20])
                Ptyp_constr "set_of_closures" (middle_end/flambda/flambda.mli[620,25789+5]..[620,25789+20])
                []
      []
  signature_item (middle_end/flambda/flambda.mli[624,25912+0]..[624,25912+56])
    Psig_value
    value_description "used_params" (middle_end/flambda/flambda.mli[624,25912+4]..[624,25912+15]) (middle_end/flambda/flambda.mli[624,25912+0]..[624,25912+56])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[622,25811+0]..[623,25883+28])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[622,25811+0]..[623,25883+28])
              Pexp_constant PConst_string(" Given a function declaration, find which of its parameters (if any)\n    are used in the body. ",(middle_end/flambda/flambda.mli[622,25811+0]..[623,25883+28]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[624,25912+18]..[624,25912+56])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[624,25912+18]..[624,25912+38])
          Ptyp_constr "function_declaration" (middle_end/flambda/flambda.mli[624,25912+18]..[624,25912+38])
          []
        core_type (middle_end/flambda/flambda.mli[624,25912+42]..[624,25912+56])
          Ptyp_constr "Variable.Set.t" (middle_end/flambda/flambda.mli[624,25912+42]..[624,25912+56])
          []
      []
  signature_item (middle_end/flambda/flambda.mli[626,25970+0]..[628,26006+21])
    Psig_type Rec
    [
      type_declaration "maybe_named" (middle_end/flambda/flambda.mli[626,25970+5]..[626,25970+16]) (middle_end/flambda/flambda.mli[626,25970+0]..[628,26006+21])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (middle_end/flambda/flambda.mli[627,25989+2]..[627,25989+16])
                "Is_expr" (middle_end/flambda/flambda.mli[627,25989+4]..[627,25989+11])
                [
                  core_type (middle_end/flambda/flambda.mli[627,25989+15]..[627,25989+16])
                    Ptyp_constr "t" (middle_end/flambda/flambda.mli[627,25989+15]..[627,25989+16])
                    []
                ]
                None
              (middle_end/flambda/flambda.mli[628,26006+2]..[628,26006+21])
                "Is_named" (middle_end/flambda/flambda.mli[628,26006+4]..[628,26006+12])
                [
                  core_type (middle_end/flambda/flambda.mli[628,26006+16]..[628,26006+21])
                    Ptyp_constr "named" (middle_end/flambda/flambda.mli[628,26006+16]..[628,26006+21])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (middle_end/flambda/flambda.mli[632,26172+0]..[637,26263+9])
    Psig_value
    value_description "iter_general" (middle_end/flambda/flambda.mli[632,26172+4]..[632,26172+16]) (middle_end/flambda/flambda.mli[632,26172+0]..[637,26263+9])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/flambda.mli[630,26029+0]..[631,26104+67])
            Pstr_eval
            expression (middle_end/flambda/flambda.mli[630,26029+0]..[631,26104+67])
              Pexp_constant PConst_string(" This function is designed for the internal use of [Flambda_iterators].\n    See that module for iterators to be used over Flambda terms. ",(middle_end/flambda/flambda.mli[630,26029+0]..[631,26104+67]),None)
        ]
      core_type (middle_end/flambda/flambda.mli[633,26189+5]..[637,26263+9])
        Ptyp_arrow
        Labelled "toplevel"
        core_type (middle_end/flambda/flambda.mli[633,26189+14]..[633,26189+18])
          Ptyp_constr "bool" (middle_end/flambda/flambda.mli[633,26189+14]..[633,26189+18])
          []
        core_type (middle_end/flambda/flambda.mli[634,26208+5]..[637,26263+9])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[634,26208+6]..[634,26208+15])
            Ptyp_arrow
            Nolabel
            core_type (middle_end/flambda/flambda.mli[634,26208+6]..[634,26208+7])
              Ptyp_constr "t" (middle_end/flambda/flambda.mli[634,26208+6]..[634,26208+7])
              []
            core_type (middle_end/flambda/flambda.mli[634,26208+11]..[634,26208+15])
              Ptyp_constr "unit" (middle_end/flambda/flambda.mli[634,26208+11]..[634,26208+15])
              []
          core_type (middle_end/flambda/flambda.mli[635,26225+5]..[637,26263+9])
            Ptyp_arrow
            Nolabel
            core_type (middle_end/flambda/flambda.mli[635,26225+6]..[635,26225+19])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[635,26225+6]..[635,26225+11])
                Ptyp_constr "named" (middle_end/flambda/flambda.mli[635,26225+6]..[635,26225+11])
                []
              core_type (middle_end/flambda/flambda.mli[635,26225+15]..[635,26225+19])
                Ptyp_constr "unit" (middle_end/flambda/flambda.mli[635,26225+15]..[635,26225+19])
                []
            core_type (middle_end/flambda/flambda.mli[636,26246+5]..[637,26263+9])
              Ptyp_arrow
              Nolabel
              core_type (middle_end/flambda/flambda.mli[636,26246+5]..[636,26246+16])
                Ptyp_constr "maybe_named" (middle_end/flambda/flambda.mli[636,26246+5]..[636,26246+16])
                []
              core_type (middle_end/flambda/flambda.mli[637,26263+5]..[637,26263+9])
                Ptyp_constr "unit" (middle_end/flambda/flambda.mli[637,26263+5]..[637,26263+9])
                []
      []
  signature_item (middle_end/flambda/flambda.mli[639,26274+0]..[639,26274+41])
    Psig_value
    value_description "print" (middle_end/flambda/flambda.mli[639,26274+4]..[639,26274+9]) (middle_end/flambda/flambda.mli[639,26274+0]..[639,26274+41])
      core_type (middle_end/flambda/flambda.mli[639,26274+12]..[639,26274+41])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[639,26274+12]..[639,26274+28])
          Ptyp_constr "Format.formatter" (middle_end/flambda/flambda.mli[639,26274+12]..[639,26274+28])
          []
        core_type (middle_end/flambda/flambda.mli[639,26274+32]..[639,26274+41])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[639,26274+32]..[639,26274+33])
            Ptyp_constr "t" (middle_end/flambda/flambda.mli[639,26274+32]..[639,26274+33])
            []
          core_type (middle_end/flambda/flambda.mli[639,26274+37]..[639,26274+41])
            Ptyp_constr "unit" (middle_end/flambda/flambda.mli[639,26274+37]..[639,26274+41])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[641,26317+0]..[641,26317+51])
    Psig_value
    value_description "print_named" (middle_end/flambda/flambda.mli[641,26317+4]..[641,26317+15]) (middle_end/flambda/flambda.mli[641,26317+0]..[641,26317+51])
      core_type (middle_end/flambda/flambda.mli[641,26317+18]..[641,26317+51])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[641,26317+18]..[641,26317+34])
          Ptyp_constr "Format.formatter" (middle_end/flambda/flambda.mli[641,26317+18]..[641,26317+34])
          []
        core_type (middle_end/flambda/flambda.mli[641,26317+38]..[641,26317+51])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[641,26317+38]..[641,26317+43])
            Ptyp_constr "named" (middle_end/flambda/flambda.mli[641,26317+38]..[641,26317+43])
            []
          core_type (middle_end/flambda/flambda.mli[641,26317+47]..[641,26317+51])
            Ptyp_constr "unit" (middle_end/flambda/flambda.mli[641,26317+47]..[641,26317+51])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[643,26370+0]..[643,26370+55])
    Psig_value
    value_description "print_program" (middle_end/flambda/flambda.mli[643,26370+4]..[643,26370+17]) (middle_end/flambda/flambda.mli[643,26370+0]..[643,26370+55])
      core_type (middle_end/flambda/flambda.mli[643,26370+20]..[643,26370+55])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[643,26370+20]..[643,26370+36])
          Ptyp_constr "Format.formatter" (middle_end/flambda/flambda.mli[643,26370+20]..[643,26370+36])
          []
        core_type (middle_end/flambda/flambda.mli[643,26370+40]..[643,26370+55])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[643,26370+40]..[643,26370+47])
            Ptyp_constr "program" (middle_end/flambda/flambda.mli[643,26370+40]..[643,26370+47])
            []
          core_type (middle_end/flambda/flambda.mli[643,26370+51]..[643,26370+55])
            Ptyp_constr "unit" (middle_end/flambda/flambda.mli[643,26370+51]..[643,26370+55])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[645,26427+0]..[645,26427+51])
    Psig_value
    value_description "print_const" (middle_end/flambda/flambda.mli[645,26427+4]..[645,26427+15]) (middle_end/flambda/flambda.mli[645,26427+0]..[645,26427+51])
      core_type (middle_end/flambda/flambda.mli[645,26427+18]..[645,26427+51])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[645,26427+18]..[645,26427+34])
          Ptyp_constr "Format.formatter" (middle_end/flambda/flambda.mli[645,26427+18]..[645,26427+34])
          []
        core_type (middle_end/flambda/flambda.mli[645,26427+38]..[645,26427+51])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[645,26427+38]..[645,26427+43])
            Ptyp_constr "const" (middle_end/flambda/flambda.mli[645,26427+38]..[645,26427+43])
            []
          core_type (middle_end/flambda/flambda.mli[645,26427+47]..[645,26427+51])
            Ptyp_constr "unit" (middle_end/flambda/flambda.mli[645,26427+47]..[645,26427+51])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[647,26480+0]..[650,26565+9])
    Psig_value
    value_description "print_constant_defining_value" (middle_end/flambda/flambda.mli[647,26480+4]..[647,26480+33]) (middle_end/flambda/flambda.mli[647,26480+0]..[650,26565+9])
      core_type (middle_end/flambda/flambda.mli[648,26514+5]..[650,26565+9])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[648,26514+5]..[648,26514+21])
          Ptyp_constr "Format.formatter" (middle_end/flambda/flambda.mli[648,26514+5]..[648,26514+21])
          []
        core_type (middle_end/flambda/flambda.mli[649,26536+5]..[650,26565+9])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[649,26536+5]..[649,26536+28])
            Ptyp_constr "constant_defining_value" (middle_end/flambda/flambda.mli[649,26536+5]..[649,26536+28])
            []
          core_type (middle_end/flambda/flambda.mli[650,26565+5]..[650,26565+9])
            Ptyp_constr "unit" (middle_end/flambda/flambda.mli[650,26565+5]..[650,26565+9])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[652,26576+0]..[655,26668+9])
    Psig_value
    value_description "print_function_declaration" (middle_end/flambda/flambda.mli[652,26576+4]..[652,26576+30]) (middle_end/flambda/flambda.mli[652,26576+0]..[655,26668+9])
      core_type (middle_end/flambda/flambda.mli[653,26607+5]..[655,26668+9])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[653,26607+5]..[653,26607+21])
          Ptyp_constr "Format.formatter" (middle_end/flambda/flambda.mli[653,26607+5]..[653,26607+21])
          []
        core_type (middle_end/flambda/flambda.mli[654,26629+5]..[655,26668+9])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[654,26629+5]..[654,26629+38])
            Ptyp_tuple
            [
              core_type (middle_end/flambda/flambda.mli[654,26629+5]..[654,26629+15])
                Ptyp_constr "Variable.t" (middle_end/flambda/flambda.mli[654,26629+5]..[654,26629+15])
                []
              core_type (middle_end/flambda/flambda.mli[654,26629+18]..[654,26629+38])
                Ptyp_constr "function_declaration" (middle_end/flambda/flambda.mli[654,26629+18]..[654,26629+38])
                []
            ]
          core_type (middle_end/flambda/flambda.mli[655,26668+5]..[655,26668+9])
            Ptyp_constr "unit" (middle_end/flambda/flambda.mli[655,26668+5]..[655,26668+9])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[657,26679+0]..[660,26760+9])
    Psig_value
    value_description "print_function_declarations" (middle_end/flambda/flambda.mli[657,26679+4]..[657,26679+31]) (middle_end/flambda/flambda.mli[657,26679+0]..[660,26760+9])
      core_type (middle_end/flambda/flambda.mli[658,26711+5]..[660,26760+9])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[658,26711+5]..[658,26711+21])
          Ptyp_constr "Format.formatter" (middle_end/flambda/flambda.mli[658,26711+5]..[658,26711+21])
          []
        core_type (middle_end/flambda/flambda.mli[659,26733+5]..[660,26760+9])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[659,26733+5]..[659,26733+26])
            Ptyp_constr "function_declarations" (middle_end/flambda/flambda.mli[659,26733+5]..[659,26733+26])
            []
          core_type (middle_end/flambda/flambda.mli[660,26760+5]..[660,26760+9])
            Ptyp_constr "unit" (middle_end/flambda/flambda.mli[660,26760+5]..[660,26760+9])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[662,26771+0]..[665,26840+9])
    Psig_value
    value_description "print_project_closure" (middle_end/flambda/flambda.mli[662,26771+4]..[662,26771+25]) (middle_end/flambda/flambda.mli[662,26771+0]..[665,26840+9])
      core_type (middle_end/flambda/flambda.mli[663,26797+5]..[665,26840+9])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[663,26797+5]..[663,26797+21])
          Ptyp_constr "Format.formatter" (middle_end/flambda/flambda.mli[663,26797+5]..[663,26797+21])
          []
        core_type (middle_end/flambda/flambda.mli[664,26819+5]..[665,26840+9])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[664,26819+5]..[664,26819+20])
            Ptyp_constr "project_closure" (middle_end/flambda/flambda.mli[664,26819+5]..[664,26819+20])
            []
          core_type (middle_end/flambda/flambda.mli[665,26840+5]..[665,26840+9])
            Ptyp_constr "unit" (middle_end/flambda/flambda.mli[665,26840+5]..[665,26840+9])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[667,26851+0]..[670,26944+9])
    Psig_value
    value_description "print_move_within_set_of_closures" (middle_end/flambda/flambda.mli[667,26851+4]..[667,26851+37]) (middle_end/flambda/flambda.mli[667,26851+0]..[670,26944+9])
      core_type (middle_end/flambda/flambda.mli[668,26889+5]..[670,26944+9])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[668,26889+5]..[668,26889+21])
          Ptyp_constr "Format.formatter" (middle_end/flambda/flambda.mli[668,26889+5]..[668,26889+21])
          []
        core_type (middle_end/flambda/flambda.mli[669,26911+5]..[670,26944+9])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[669,26911+5]..[669,26911+32])
            Ptyp_constr "move_within_set_of_closures" (middle_end/flambda/flambda.mli[669,26911+5]..[669,26911+32])
            []
          core_type (middle_end/flambda/flambda.mli[670,26944+5]..[670,26944+9])
            Ptyp_constr "unit" (middle_end/flambda/flambda.mli[670,26944+5]..[670,26944+9])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[672,26955+0]..[675,27016+9])
    Psig_value
    value_description "print_project_var" (middle_end/flambda/flambda.mli[672,26955+4]..[672,26955+21]) (middle_end/flambda/flambda.mli[672,26955+0]..[675,27016+9])
      core_type (middle_end/flambda/flambda.mli[673,26977+5]..[675,27016+9])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[673,26977+5]..[673,26977+21])
          Ptyp_constr "Format.formatter" (middle_end/flambda/flambda.mli[673,26977+5]..[673,26977+21])
          []
        core_type (middle_end/flambda/flambda.mli[674,26999+5]..[675,27016+9])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[674,26999+5]..[674,26999+16])
            Ptyp_constr "project_var" (middle_end/flambda/flambda.mli[674,26999+5]..[674,26999+16])
            []
          core_type (middle_end/flambda/flambda.mli[675,27016+5]..[675,27016+9])
            Ptyp_constr "unit" (middle_end/flambda/flambda.mli[675,27016+5]..[675,27016+9])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[677,27027+0]..[680,27096+9])
    Psig_value
    value_description "print_set_of_closures" (middle_end/flambda/flambda.mli[677,27027+4]..[677,27027+25]) (middle_end/flambda/flambda.mli[677,27027+0]..[680,27096+9])
      core_type (middle_end/flambda/flambda.mli[678,27053+5]..[680,27096+9])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[678,27053+5]..[678,27053+21])
          Ptyp_constr "Format.formatter" (middle_end/flambda/flambda.mli[678,27053+5]..[678,27053+21])
          []
        core_type (middle_end/flambda/flambda.mli[679,27075+5]..[680,27096+9])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[679,27075+5]..[679,27075+20])
            Ptyp_constr "set_of_closures" (middle_end/flambda/flambda.mli[679,27075+5]..[679,27075+20])
            []
          core_type (middle_end/flambda/flambda.mli[680,27096+5]..[680,27096+9])
            Ptyp_constr "unit" (middle_end/flambda/flambda.mli[680,27096+5]..[680,27096+9])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[682,27107+0]..[685,27174+9])
    Psig_value
    value_description "print_specialised_to" (middle_end/flambda/flambda.mli[682,27107+4]..[682,27107+24]) (middle_end/flambda/flambda.mli[682,27107+0]..[685,27174+9])
      core_type (middle_end/flambda/flambda.mli[683,27132+5]..[685,27174+9])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[683,27132+5]..[683,27132+21])
          Ptyp_constr "Format.formatter" (middle_end/flambda/flambda.mli[683,27132+5]..[683,27132+21])
          []
        core_type (middle_end/flambda/flambda.mli[684,27154+5]..[685,27174+9])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[684,27154+5]..[684,27154+19])
            Ptyp_constr "specialised_to" (middle_end/flambda/flambda.mli[684,27154+5]..[684,27154+19])
            []
          core_type (middle_end/flambda/flambda.mli[685,27174+5]..[685,27174+9])
            Ptyp_constr "unit" (middle_end/flambda/flambda.mli[685,27174+5]..[685,27174+9])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[687,27185+0]..[690,27235+9])
    Psig_value
    value_description "equal_call_kind" (middle_end/flambda/flambda.mli[687,27185+4]..[687,27185+19]) (middle_end/flambda/flambda.mli[687,27185+0]..[690,27235+9])
      core_type (middle_end/flambda/flambda.mli[688,27205+5]..[690,27235+9])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[688,27205+5]..[688,27205+14])
          Ptyp_constr "call_kind" (middle_end/flambda/flambda.mli[688,27205+5]..[688,27205+14])
          []
        core_type (middle_end/flambda/flambda.mli[689,27220+5]..[690,27235+9])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[689,27220+5]..[689,27220+14])
            Ptyp_constr "call_kind" (middle_end/flambda/flambda.mli[689,27220+5]..[689,27220+14])
            []
          core_type (middle_end/flambda/flambda.mli[690,27235+5]..[690,27235+9])
            Ptyp_constr "bool" (middle_end/flambda/flambda.mli[690,27235+5]..[690,27235+9])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[692,27246+0]..[695,27311+9])
    Psig_value
    value_description "equal_specialised_to" (middle_end/flambda/flambda.mli[692,27246+4]..[692,27246+24]) (middle_end/flambda/flambda.mli[692,27246+0]..[695,27311+9])
      core_type (middle_end/flambda/flambda.mli[693,27271+5]..[695,27311+9])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[693,27271+5]..[693,27271+19])
          Ptyp_constr "specialised_to" (middle_end/flambda/flambda.mli[693,27271+5]..[693,27271+19])
          []
        core_type (middle_end/flambda/flambda.mli[694,27291+5]..[695,27311+9])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[694,27291+5]..[694,27291+19])
            Ptyp_constr "specialised_to" (middle_end/flambda/flambda.mli[694,27291+5]..[694,27291+19])
            []
          core_type (middle_end/flambda/flambda.mli[695,27311+5]..[695,27311+9])
            Ptyp_constr "bool" (middle_end/flambda/flambda.mli[695,27311+5]..[695,27311+9])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[697,27322+0]..[700,27362+8])
    Psig_value
    value_description "compare_const" (middle_end/flambda/flambda.mli[697,27322+4]..[697,27322+17]) (middle_end/flambda/flambda.mli[697,27322+0]..[700,27362+8])
      core_type (middle_end/flambda/flambda.mli[698,27340+5]..[700,27362+8])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[698,27340+5]..[698,27340+10])
          Ptyp_constr "const" (middle_end/flambda/flambda.mli[698,27340+5]..[698,27340+10])
          []
        core_type (middle_end/flambda/flambda.mli[699,27351+5]..[700,27362+8])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[699,27351+5]..[699,27351+10])
            Ptyp_constr "const" (middle_end/flambda/flambda.mli[699,27351+5]..[699,27351+10])
            []
          core_type (middle_end/flambda/flambda.mli[700,27362+5]..[700,27362+8])
            Ptyp_constr "int" (middle_end/flambda/flambda.mli[700,27362+5]..[700,27362+8])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[702,27372+0]..[702,27372+59])
    Psig_value
    value_description "compare_project_var" (middle_end/flambda/flambda.mli[702,27372+4]..[702,27372+23]) (middle_end/flambda/flambda.mli[702,27372+0]..[702,27372+59])
      core_type (middle_end/flambda/flambda.mli[702,27372+26]..[702,27372+59])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[702,27372+26]..[702,27372+37])
          Ptyp_constr "project_var" (middle_end/flambda/flambda.mli[702,27372+26]..[702,27372+37])
          []
        core_type (middle_end/flambda/flambda.mli[702,27372+41]..[702,27372+59])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[702,27372+41]..[702,27372+52])
            Ptyp_constr "project_var" (middle_end/flambda/flambda.mli[702,27372+41]..[702,27372+52])
            []
          core_type (middle_end/flambda/flambda.mli[702,27372+56]..[702,27372+59])
            Ptyp_constr "int" (middle_end/flambda/flambda.mli[702,27372+56]..[702,27372+59])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[704,27433+0]..[707,27539+8])
    Psig_value
    value_description "compare_move_within_set_of_closures" (middle_end/flambda/flambda.mli[704,27433+4]..[704,27433+39]) (middle_end/flambda/flambda.mli[704,27433+0]..[707,27539+8])
      core_type (middle_end/flambda/flambda.mli[705,27473+5]..[707,27539+8])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[705,27473+5]..[705,27473+32])
          Ptyp_constr "move_within_set_of_closures" (middle_end/flambda/flambda.mli[705,27473+5]..[705,27473+32])
          []
        core_type (middle_end/flambda/flambda.mli[706,27506+5]..[707,27539+8])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[706,27506+5]..[706,27506+32])
            Ptyp_constr "move_within_set_of_closures" (middle_end/flambda/flambda.mli[706,27506+5]..[706,27506+32])
            []
          core_type (middle_end/flambda/flambda.mli[707,27539+5]..[707,27539+8])
            Ptyp_constr "int" (middle_end/flambda/flambda.mli[707,27539+5]..[707,27539+8])
            []
      []
  signature_item (middle_end/flambda/flambda.mli[709,27549+0]..[709,27549+71])
    Psig_value
    value_description "compare_project_closure" (middle_end/flambda/flambda.mli[709,27549+4]..[709,27549+27]) (middle_end/flambda/flambda.mli[709,27549+0]..[709,27549+71])
      core_type (middle_end/flambda/flambda.mli[709,27549+30]..[709,27549+71])
        Ptyp_arrow
        Nolabel
        core_type (middle_end/flambda/flambda.mli[709,27549+30]..[709,27549+45])
          Ptyp_constr "project_closure" (middle_end/flambda/flambda.mli[709,27549+30]..[709,27549+45])
          []
        core_type (middle_end/flambda/flambda.mli[709,27549+49]..[709,27549+71])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/flambda.mli[709,27549+49]..[709,27549+64])
            Ptyp_constr "project_closure" (middle_end/flambda/flambda.mli[709,27549+49]..[709,27549+64])
            []
          core_type (middle_end/flambda/flambda.mli[709,27549+68]..[709,27549+71])
            Ptyp_constr "int" (middle_end/flambda/flambda.mli[709,27549+68]..[709,27549+71])
            []
      []
]

