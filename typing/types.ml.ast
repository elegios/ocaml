[
  structure_item (typing/types.ml[18,1127+0]..[18,1127+13])
    Pstr_open Fresh
    module_expr (typing/types.ml[18,1127+5]..[18,1127+13])
      Pmod_ident "Asttypes" (typing/types.ml[18,1127+5]..[18,1127+13])
  structure_item (typing/types.ml[22,1188+0]..[75,2709+27])
    Pstr_type Rec
    [
      type_declaration "transient_expr" (typing/types.ml[22,1188+5]..[22,1188+19]) (typing/types.ml[22,1188+0]..[26,1287+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.ml[23,1210+4]..[23,1210+28])
                Mutable
                "desc" (typing/types.ml[23,1210+12]..[23,1210+16])                core_type (typing/types.ml[23,1210+18]..[23,1210+27])
                  Ptyp_constr "type_desc" (typing/types.ml[23,1210+18]..[23,1210+27])
                  []
              (typing/types.ml[24,1239+4]..[24,1239+23])
                Mutable
                "level" (typing/types.ml[24,1239+12]..[24,1239+17])                core_type (typing/types.ml[24,1239+19]..[24,1239+22])
                  Ptyp_constr "int" (typing/types.ml[24,1239+19]..[24,1239+22])
                  []
              (typing/types.ml[25,1263+4]..[25,1263+23])
                Mutable
                "scope" (typing/types.ml[25,1263+12]..[25,1263+17])                core_type (typing/types.ml[25,1263+19]..[25,1263+22])
                  Ptyp_constr "int" (typing/types.ml[25,1263+19]..[25,1263+22])
                  []
              (typing/types.ml[26,1287+4]..[26,1287+11])
                Immutable
                "id" (typing/types.ml[26,1287+4]..[26,1287+6])                core_type (typing/types.ml[26,1287+8]..[26,1287+11])
                  Ptyp_constr "int" (typing/types.ml[26,1287+8]..[26,1287+11])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "type_expr" (typing/types.ml[28,1302+4]..[28,1302+13]) (typing/types.ml[28,1302+0]..[28,1302+30])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/types.ml[28,1302+16]..[28,1302+30])
              Ptyp_constr "transient_expr" (typing/types.ml[28,1302+16]..[28,1302+30])
              []
      type_declaration "type_desc" (typing/types.ml[30,1334+4]..[30,1334+13]) (typing/types.ml[30,1334+0]..[43,1814+55])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[31,1350+4]..[31,1350+25])
                "Tvar" (typing/types.ml[31,1350+4]..[31,1350+8])
                [
                  core_type (typing/types.ml[31,1350+12]..[31,1350+25])
                    Ptyp_constr "option" (typing/types.ml[31,1350+19]..[31,1350+25])
                    [
                      core_type (typing/types.ml[31,1350+12]..[31,1350+18])
                        Ptyp_constr "string" (typing/types.ml[31,1350+12]..[31,1350+18])
                        []
                    ]
                ]
                None
              (typing/types.ml[32,1376+2]..[32,1376+60])
                "Tarrow" (typing/types.ml[32,1376+4]..[32,1376+10])
                [
                  core_type (typing/types.ml[32,1376+14]..[32,1376+23])
                    Ptyp_constr "arg_label" (typing/types.ml[32,1376+14]..[32,1376+23])
                    []
                  core_type (typing/types.ml[32,1376+26]..[32,1376+35])
                    Ptyp_constr "type_expr" (typing/types.ml[32,1376+26]..[32,1376+35])
                    []
                  core_type (typing/types.ml[32,1376+38]..[32,1376+47])
                    Ptyp_constr "type_expr" (typing/types.ml[32,1376+38]..[32,1376+47])
                    []
                  core_type (typing/types.ml[32,1376+50]..[32,1376+60])
                    Ptyp_constr "commutable" (typing/types.ml[32,1376+50]..[32,1376+60])
                    []
                ]
                None
              (typing/types.ml[33,1437+2]..[33,1437+28])
                "Ttuple" (typing/types.ml[33,1437+4]..[33,1437+10])
                [
                  core_type (typing/types.ml[33,1437+14]..[33,1437+28])
                    Ptyp_constr "list" (typing/types.ml[33,1437+24]..[33,1437+28])
                    [
                      core_type (typing/types.ml[33,1437+14]..[33,1437+23])
                        Ptyp_constr "type_expr" (typing/types.ml[33,1437+14]..[33,1437+23])
                        []
                    ]
                ]
                None
              (typing/types.ml[34,1466+2]..[34,1466+56])
                "Tconstr" (typing/types.ml[34,1466+4]..[34,1466+11])
                [
                  core_type (typing/types.ml[34,1466+15]..[34,1466+21])
                    Ptyp_constr "Path.t" (typing/types.ml[34,1466+15]..[34,1466+21])
                    []
                  core_type (typing/types.ml[34,1466+24]..[34,1466+38])
                    Ptyp_constr "list" (typing/types.ml[34,1466+34]..[34,1466+38])
                    [
                      core_type (typing/types.ml[34,1466+24]..[34,1466+33])
                        Ptyp_constr "type_expr" (typing/types.ml[34,1466+24]..[34,1466+33])
                        []
                    ]
                  core_type (typing/types.ml[34,1466+41]..[34,1466+56])
                    Ptyp_constr "ref" (typing/types.ml[34,1466+53]..[34,1466+56])
                    [
                      core_type (typing/types.ml[34,1466+41]..[34,1466+52])
                        Ptyp_constr "abbrev_memo" (typing/types.ml[34,1466+41]..[34,1466+52])
                        []
                    ]
                ]
                None
              (typing/types.ml[35,1523+2]..[35,1523+63])
                "Tobject" (typing/types.ml[35,1523+4]..[35,1523+11])
                [
                  core_type (typing/types.ml[35,1523+15]..[35,1523+24])
                    Ptyp_constr "type_expr" (typing/types.ml[35,1523+15]..[35,1523+24])
                    []
                  core_type (typing/types.ml[35,1523+27]..[35,1523+63])
                    Ptyp_constr "ref" (typing/types.ml[35,1523+60]..[35,1523+63])
                    [
                      core_type (typing/types.ml[35,1523+27]..[35,1523+59])
                        Ptyp_constr "option" (typing/types.ml[35,1523+53]..[35,1523+59])
                        [
                          core_type (typing/types.ml[35,1523+28]..[35,1523+51])
                            Ptyp_tuple
                            [
                              core_type (typing/types.ml[35,1523+28]..[35,1523+34])
                                Ptyp_constr "Path.t" (typing/types.ml[35,1523+28]..[35,1523+34])
                                []
                              core_type (typing/types.ml[35,1523+37]..[35,1523+51])
                                Ptyp_constr "list" (typing/types.ml[35,1523+47]..[35,1523+51])
                                [
                                  core_type (typing/types.ml[35,1523+37]..[35,1523+46])
                                    Ptyp_constr "type_expr" (typing/types.ml[35,1523+37]..[35,1523+46])
                                    []
                                ]
                            ]
                        ]
                    ]
                ]
                None
              (typing/types.ml[36,1587+2]..[36,1587+57])
                "Tfield" (typing/types.ml[36,1587+4]..[36,1587+10])
                [
                  core_type (typing/types.ml[36,1587+14]..[36,1587+20])
                    Ptyp_constr "string" (typing/types.ml[36,1587+14]..[36,1587+20])
                    []
                  core_type (typing/types.ml[36,1587+23]..[36,1587+33])
                    Ptyp_constr "field_kind" (typing/types.ml[36,1587+23]..[36,1587+33])
                    []
                  core_type (typing/types.ml[36,1587+36]..[36,1587+45])
                    Ptyp_constr "type_expr" (typing/types.ml[36,1587+36]..[36,1587+45])
                    []
                  core_type (typing/types.ml[36,1587+48]..[36,1587+57])
                    Ptyp_constr "type_expr" (typing/types.ml[36,1587+48]..[36,1587+57])
                    []
                ]
                None
              (typing/types.ml[37,1645+2]..[37,1645+8])
                "Tnil" (typing/types.ml[37,1645+4]..[37,1645+8])
                []
                None
              (typing/types.ml[38,1654+2]..[38,1654+22])
                "Tlink" (typing/types.ml[38,1654+4]..[38,1654+9])
                [
                  core_type (typing/types.ml[38,1654+13]..[38,1654+22])
                    Ptyp_constr "type_expr" (typing/types.ml[38,1654+13]..[38,1654+22])
                    []
                ]
                None
              (typing/types.ml[39,1677+2]..[39,1677+42])
                "Tsubst" (typing/types.ml[39,1677+4]..[39,1677+10])
                [
                  core_type (typing/types.ml[39,1677+14]..[39,1677+23])
                    Ptyp_constr "type_expr" (typing/types.ml[39,1677+14]..[39,1677+23])
                    []
                  core_type (typing/types.ml[39,1677+26]..[39,1677+42])
                    Ptyp_constr "option" (typing/types.ml[39,1677+36]..[39,1677+42])
                    [
                      core_type (typing/types.ml[39,1677+26]..[39,1677+35])
                        Ptyp_constr "type_expr" (typing/types.ml[39,1677+26]..[39,1677+35])
                        []
                    ]
                ]
                None
              (typing/types.ml[40,1720+2]..[40,1720+24])
                "Tvariant" (typing/types.ml[40,1720+4]..[40,1720+12])
                [
                  core_type (typing/types.ml[40,1720+16]..[40,1720+24])
                    Ptyp_constr "row_desc" (typing/types.ml[40,1720+16]..[40,1720+24])
                    []
                ]
                None
              (typing/types.ml[41,1745+2]..[41,1745+28])
                "Tunivar" (typing/types.ml[41,1745+4]..[41,1745+11])
                [
                  core_type (typing/types.ml[41,1745+15]..[41,1745+28])
                    Ptyp_constr "option" (typing/types.ml[41,1745+22]..[41,1745+28])
                    [
                      core_type (typing/types.ml[41,1745+15]..[41,1745+21])
                        Ptyp_constr "string" (typing/types.ml[41,1745+15]..[41,1745+21])
                        []
                    ]
                ]
                None
              (typing/types.ml[42,1774+2]..[42,1774+39])
                "Tpoly" (typing/types.ml[42,1774+4]..[42,1774+9])
                [
                  core_type (typing/types.ml[42,1774+13]..[42,1774+22])
                    Ptyp_constr "type_expr" (typing/types.ml[42,1774+13]..[42,1774+22])
                    []
                  core_type (typing/types.ml[42,1774+25]..[42,1774+39])
                    Ptyp_constr "list" (typing/types.ml[42,1774+35]..[42,1774+39])
                    [
                      core_type (typing/types.ml[42,1774+25]..[42,1774+34])
                        Ptyp_constr "type_expr" (typing/types.ml[42,1774+25]..[42,1774+34])
                        []
                    ]
                ]
                None
              (typing/types.ml[43,1814+2]..[43,1814+55])
                "Tpackage" (typing/types.ml[43,1814+4]..[43,1814+12])
                [
                  core_type (typing/types.ml[43,1814+16]..[43,1814+22])
                    Ptyp_constr "Path.t" (typing/types.ml[43,1814+16]..[43,1814+22])
                    []
                  core_type (typing/types.ml[43,1814+25]..[43,1814+55])
                    Ptyp_constr "list" (typing/types.ml[43,1814+51]..[43,1814+55])
                    [
                      core_type (typing/types.ml[43,1814+26]..[43,1814+49])
                        Ptyp_tuple
                        [
                          core_type (typing/types.ml[43,1814+26]..[43,1814+37])
                            Ptyp_constr "Longident.t" (typing/types.ml[43,1814+26]..[43,1814+37])
                            []
                          core_type (typing/types.ml[43,1814+40]..[43,1814+49])
                            Ptyp_constr "type_expr" (typing/types.ml[43,1814+40]..[43,1814+49])
                            []
                        ]
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "row_desc" (typing/types.ml[45,1871+4]..[45,1871+12]) (typing/types.ml[45,1871+0]..[51,2047+50])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.ml[46,1886+6]..[46,1886+43])
                Immutable
                "row_fields" (typing/types.ml[46,1886+6]..[46,1886+16])                core_type (typing/types.ml[46,1886+18]..[46,1886+42])
                  Ptyp_constr "list" (typing/types.ml[46,1886+38]..[46,1886+42])
                  [
                    core_type (typing/types.ml[46,1886+19]..[46,1886+36])
                      Ptyp_tuple
                      [
                        core_type (typing/types.ml[46,1886+19]..[46,1886+24])
                          Ptyp_constr "label" (typing/types.ml[46,1886+19]..[46,1886+24])
                          []
                        core_type (typing/types.ml[46,1886+27]..[46,1886+36])
                          Ptyp_constr "row_field" (typing/types.ml[46,1886+27]..[46,1886+36])
                          []
                      ]
                  ]
              (typing/types.ml[47,1930+6]..[47,1930+26])
                Immutable
                "row_more" (typing/types.ml[47,1930+6]..[47,1930+14])                core_type (typing/types.ml[47,1930+16]..[47,1930+25])
                  Ptyp_constr "type_expr" (typing/types.ml[47,1930+16]..[47,1930+25])
                  []
              (typing/types.ml[48,1957+6]..[48,1957+22])
                Immutable
                "row_bound" (typing/types.ml[48,1957+6]..[48,1957+15])                core_type (typing/types.ml[48,1957+17]..[48,1957+21])
                  Ptyp_constr "unit" (typing/types.ml[48,1957+17]..[48,1957+21])
                  []
              (typing/types.ml[49,1980+6]..[49,1980+23])
                Immutable
                "row_closed" (typing/types.ml[49,1980+6]..[49,1980+16])                core_type (typing/types.ml[49,1980+18]..[49,1980+22])
                  Ptyp_constr "bool" (typing/types.ml[49,1980+18]..[49,1980+22])
                  []
              (typing/types.ml[50,2004+6]..[50,2004+42])
                Immutable
                "row_fixed" (typing/types.ml[50,2004+6]..[50,2004+15])                core_type (typing/types.ml[50,2004+17]..[50,2004+41])
                  Ptyp_constr "option" (typing/types.ml[50,2004+35]..[50,2004+41])
                  [
                    core_type (typing/types.ml[50,2004+17]..[50,2004+34])
                      Ptyp_constr "fixed_explanation" (typing/types.ml[50,2004+17]..[50,2004+34])
                      []
                  ]
              (typing/types.ml[51,2047+6]..[51,2047+48])
                Immutable
                "row_name" (typing/types.ml[51,2047+6]..[51,2047+14])                core_type (typing/types.ml[51,2047+16]..[51,2047+48])
                  Ptyp_constr "option" (typing/types.ml[51,2047+42]..[51,2047+48])
                  [
                    core_type (typing/types.ml[51,2047+17]..[51,2047+40])
                      Ptyp_tuple
                      [
                        core_type (typing/types.ml[51,2047+17]..[51,2047+23])
                          Ptyp_constr "Path.t" (typing/types.ml[51,2047+17]..[51,2047+23])
                          []
                        core_type (typing/types.ml[51,2047+26]..[51,2047+40])
                          Ptyp_constr "list" (typing/types.ml[51,2047+36]..[51,2047+40])
                          [
                            core_type (typing/types.ml[51,2047+26]..[51,2047+35])
                              Ptyp_constr "type_expr" (typing/types.ml[51,2047+26]..[51,2047+35])
                              []
                          ]
                      ]
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "fixed_explanation" (typing/types.ml[52,2098+4]..[52,2098+21]) (typing/types.ml[52,2098+0]..[53,2122+67])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[53,2122+2]..[53,2122+23])
                "Univar" (typing/types.ml[53,2122+4]..[53,2122+10])
                [
                  core_type (typing/types.ml[53,2122+14]..[53,2122+23])
                    Ptyp_constr "type_expr" (typing/types.ml[53,2122+14]..[53,2122+23])
                    []
                ]
                None
              (typing/types.ml[53,2122+24]..[53,2122+39])
                "Fixed_private" (typing/types.ml[53,2122+26]..[53,2122+39])
                []
                None
              (typing/types.ml[53,2122+40]..[53,2122+59])
                "Reified" (typing/types.ml[53,2122+42]..[53,2122+49])
                [
                  core_type (typing/types.ml[53,2122+53]..[53,2122+59])
                    Ptyp_constr "Path.t" (typing/types.ml[53,2122+53]..[53,2122+59])
                    []
                ]
                None
              (typing/types.ml[53,2122+60]..[53,2122+67])
                "Rigid" (typing/types.ml[53,2122+62]..[53,2122+67])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "row_field" (typing/types.ml[54,2190+4]..[54,2190+13]) (typing/types.ml[54,2190+0]..[60,2451+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[55,2206+4]..[55,2206+32])
                "Rpresent" (typing/types.ml[55,2206+4]..[55,2206+12])
                [
                  core_type (typing/types.ml[55,2206+16]..[55,2206+32])
                    Ptyp_constr "option" (typing/types.ml[55,2206+26]..[55,2206+32])
                    [
                      core_type (typing/types.ml[55,2206+16]..[55,2206+25])
                        Ptyp_constr "type_expr" (typing/types.ml[55,2206+16]..[55,2206+25])
                        []
                    ]
                ]
                None
              (typing/types.ml[56,2239+2]..[56,2239+66])
                "Reither" (typing/types.ml[56,2239+4]..[56,2239+11])
                [
                  core_type (typing/types.ml[56,2239+15]..[56,2239+19])
                    Ptyp_constr "bool" (typing/types.ml[56,2239+15]..[56,2239+19])
                    []
                  core_type (typing/types.ml[56,2239+22]..[56,2239+36])
                    Ptyp_constr "list" (typing/types.ml[56,2239+32]..[56,2239+36])
                    [
                      core_type (typing/types.ml[56,2239+22]..[56,2239+31])
                        Ptyp_constr "type_expr" (typing/types.ml[56,2239+22]..[56,2239+31])
                        []
                    ]
                  core_type (typing/types.ml[56,2239+39]..[56,2239+43])
                    Ptyp_constr "bool" (typing/types.ml[56,2239+39]..[56,2239+43])
                    []
                  core_type (typing/types.ml[56,2239+46]..[56,2239+66])
                    Ptyp_constr "ref" (typing/types.ml[56,2239+63]..[56,2239+66])
                    [
                      core_type (typing/types.ml[56,2239+46]..[56,2239+62])
                        Ptyp_constr "option" (typing/types.ml[56,2239+56]..[56,2239+62])
                        [
                          core_type (typing/types.ml[56,2239+46]..[56,2239+55])
                            Ptyp_constr "row_field" (typing/types.ml[56,2239+46]..[56,2239+55])
                            []
                        ]
                    ]
                ]
                None
              (typing/types.ml[60,2451+2]..[60,2451+11])
                "Rabsent" (typing/types.ml[60,2451+4]..[60,2451+11])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "abbrev_memo" (typing/types.ml[62,2464+4]..[62,2464+15]) (typing/types.ml[62,2464+0]..[65,2564+28])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[63,2482+4]..[63,2482+8])
                "Mnil" (typing/types.ml[63,2482+4]..[63,2482+8])
                []
                None
              (typing/types.ml[64,2491+2]..[64,2491+72])
                "Mcons" (typing/types.ml[64,2491+4]..[64,2491+9])
                [
                  core_type (typing/types.ml[64,2491+13]..[64,2491+25])
                    Ptyp_constr "private_flag" (typing/types.ml[64,2491+13]..[64,2491+25])
                    []
                  core_type (typing/types.ml[64,2491+28]..[64,2491+34])
                    Ptyp_constr "Path.t" (typing/types.ml[64,2491+28]..[64,2491+34])
                    []
                  core_type (typing/types.ml[64,2491+37]..[64,2491+46])
                    Ptyp_constr "type_expr" (typing/types.ml[64,2491+37]..[64,2491+46])
                    []
                  core_type (typing/types.ml[64,2491+49]..[64,2491+58])
                    Ptyp_constr "type_expr" (typing/types.ml[64,2491+49]..[64,2491+58])
                    []
                  core_type (typing/types.ml[64,2491+61]..[64,2491+72])
                    Ptyp_constr "abbrev_memo" (typing/types.ml[64,2491+61]..[64,2491+72])
                    []
                ]
                None
              (typing/types.ml[65,2564+2]..[65,2564+28])
                "Mlink" (typing/types.ml[65,2564+4]..[65,2564+9])
                [
                  core_type (typing/types.ml[65,2564+13]..[65,2564+28])
                    Ptyp_constr "ref" (typing/types.ml[65,2564+25]..[65,2564+28])
                    [
                      core_type (typing/types.ml[65,2564+13]..[65,2564+24])
                        Ptyp_constr "abbrev_memo" (typing/types.ml[65,2564+13]..[65,2564+24])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "field_kind" (typing/types.ml[67,2594+4]..[67,2594+14]) (typing/types.ml[67,2594+0]..[70,2658+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[68,2611+4]..[68,2611+33])
                "Fvar" (typing/types.ml[68,2611+4]..[68,2611+8])
                [
                  core_type (typing/types.ml[68,2611+12]..[68,2611+33])
                    Ptyp_constr "ref" (typing/types.ml[68,2611+30]..[68,2611+33])
                    [
                      core_type (typing/types.ml[68,2611+12]..[68,2611+29])
                        Ptyp_constr "option" (typing/types.ml[68,2611+23]..[68,2611+29])
                        [
                          core_type (typing/types.ml[68,2611+12]..[68,2611+22])
                            Ptyp_constr "field_kind" (typing/types.ml[68,2611+12]..[68,2611+22])
                            []
                        ]
                    ]
                ]
                None
              (typing/types.ml[69,2645+2]..[69,2645+12])
                "Fpresent" (typing/types.ml[69,2645+4]..[69,2645+12])
                []
                None
              (typing/types.ml[70,2658+2]..[70,2658+11])
                "Fabsent" (typing/types.ml[70,2658+4]..[70,2658+11])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "commutable" (typing/types.ml[72,2671+4]..[72,2671+14]) (typing/types.ml[72,2671+0]..[75,2709+27])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[73,2688+4]..[73,2688+7])
                "Cok" (typing/types.ml[73,2688+4]..[73,2688+7])
                []
                None
              (typing/types.ml[74,2696+2]..[74,2696+12])
                "Cunknown" (typing/types.ml[74,2696+4]..[74,2696+12])
                []
                None
              (typing/types.ml[75,2709+2]..[75,2709+27])
                "Clink" (typing/types.ml[75,2709+4]..[75,2709+9])
                [
                  core_type (typing/types.ml[75,2709+13]..[75,2709+27])
                    Ptyp_constr "ref" (typing/types.ml[75,2709+24]..[75,2709+27])
                    [
                      core_type (typing/types.ml[75,2709+13]..[75,2709+23])
                        Ptyp_constr "commutable" (typing/types.ml[75,2709+13]..[75,2709+23])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/types.ml[77,2738+0]..[82,2877+3])
    Pstr_module
    "TransientTypeOps" (typing/types.ml[77,2738+7]..[77,2738+23])
      module_expr (typing/types.ml[77,2738+26]..[82,2877+3])
        Pmod_structure
        [
          structure_item (typing/types.ml[78,2771+2]..[78,2771+20])
            Pstr_type Rec
            [
              type_declaration "t" (typing/types.ml[78,2771+7]..[78,2771+8]) (typing/types.ml[78,2771+2]..[78,2771+20])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (typing/types.ml[78,2771+11]..[78,2771+20])
                      Ptyp_constr "type_expr" (typing/types.ml[78,2771+11]..[78,2771+20])
                      []
            ]
          structure_item (typing/types.ml[79,2792+2]..[79,2792+35])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[79,2792+6]..[79,2792+13])
                  Ppat_var "compare" (typing/types.ml[79,2792+6]..[79,2792+13])
                expression (typing/types.ml[79,2792+14]..[79,2792+35]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[79,2792+14]..[79,2792+16])
                    Ppat_var "t1" (typing/types.ml[79,2792+14]..[79,2792+16])
                  expression (typing/types.ml[79,2792+17]..[79,2792+35]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/types.ml[79,2792+17]..[79,2792+19])
                      Ppat_var "t2" (typing/types.ml[79,2792+17]..[79,2792+19])
                    expression (typing/types.ml[79,2792+22]..[79,2792+35])
                      Pexp_apply
                      expression (typing/types.ml[79,2792+28]..[79,2792+29])
                        Pexp_ident "-" (typing/types.ml[79,2792+28]..[79,2792+29])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[79,2792+22]..[79,2792+27])
                            Pexp_field
                            expression (typing/types.ml[79,2792+22]..[79,2792+24])
                              Pexp_ident "t1" (typing/types.ml[79,2792+22]..[79,2792+24])
                            "id" (typing/types.ml[79,2792+25]..[79,2792+27])
                        <arg>
                        Nolabel
                          expression (typing/types.ml[79,2792+30]..[79,2792+35])
                            Pexp_field
                            expression (typing/types.ml[79,2792+30]..[79,2792+32])
                              Pexp_ident "t2" (typing/types.ml[79,2792+30]..[79,2792+32])
                            "id" (typing/types.ml[79,2792+33]..[79,2792+35])
                      ]
            ]
          structure_item (typing/types.ml[80,2828+2]..[80,2828+19])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[80,2828+6]..[80,2828+10])
                  Ppat_var "hash" (typing/types.ml[80,2828+6]..[80,2828+10])
                expression (typing/types.ml[80,2828+11]..[80,2828+19]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[80,2828+11]..[80,2828+12])
                    Ppat_var "t" (typing/types.ml[80,2828+11]..[80,2828+12])
                  expression (typing/types.ml[80,2828+15]..[80,2828+19])
                    Pexp_field
                    expression (typing/types.ml[80,2828+15]..[80,2828+16])
                      Pexp_ident "t" (typing/types.ml[80,2828+15]..[80,2828+16])
                    "id" (typing/types.ml[80,2828+17]..[80,2828+19])
            ]
          structure_item (typing/types.ml[81,2848+2]..[81,2848+28])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[81,2848+6]..[81,2848+11])
                  Ppat_var "equal" (typing/types.ml[81,2848+6]..[81,2848+11])
                expression (typing/types.ml[81,2848+12]..[81,2848+28]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[81,2848+12]..[81,2848+14])
                    Ppat_var "t1" (typing/types.ml[81,2848+12]..[81,2848+14])
                  expression (typing/types.ml[81,2848+15]..[81,2848+28]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/types.ml[81,2848+15]..[81,2848+17])
                      Ppat_var "t2" (typing/types.ml[81,2848+15]..[81,2848+17])
                    expression (typing/types.ml[81,2848+20]..[81,2848+28])
                      Pexp_apply
                      expression (typing/types.ml[81,2848+23]..[81,2848+25])
                        Pexp_ident "==" (typing/types.ml[81,2848+23]..[81,2848+25])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[81,2848+20]..[81,2848+22])
                            Pexp_ident "t1" (typing/types.ml[81,2848+20]..[81,2848+22])
                        <arg>
                        Nolabel
                          expression (typing/types.ml[81,2848+26]..[81,2848+28])
                            Pexp_ident "t2" (typing/types.ml[81,2848+26]..[81,2848+28])
                      ]
            ]
        ]
  structure_item (typing/types.ml[86,2889+0]..[134,4207+3])
    Pstr_module
    "Uid" (typing/types.ml[86,2889+7]..[86,2889+10])
      module_expr (typing/types.ml[86,2889+13]..[134,4207+3])
        Pmod_structure
        [
          structure_item (typing/types.ml[87,2909+2]..[91,3013+22])
            Pstr_type Rec
            [
              type_declaration "t" (typing/types.ml[87,2909+7]..[87,2909+8]) (typing/types.ml[87,2909+2]..[91,3013+22])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (typing/types.ml[88,2920+4]..[88,2920+32])
                        "Compilation_unit" (typing/types.ml[88,2920+6]..[88,2920+22])
                        [
                          core_type (typing/types.ml[88,2920+26]..[88,2920+32])
                            Ptyp_constr "string" (typing/types.ml[88,2920+26]..[88,2920+32])
                            []
                        ]
                        None
                      (typing/types.ml[89,2953+4]..[89,2953+44])
                        "Item" (typing/types.ml[89,2953+6]..[89,2953+10])
                        [
                          (typing/types.ml[89,2953+16]..[89,2953+34])
                            Immutable
                            "comp_unit" (typing/types.ml[89,2953+16]..[89,2953+25])                            core_type (typing/types.ml[89,2953+27]..[89,2953+33])
                              Ptyp_constr "string" (typing/types.ml[89,2953+27]..[89,2953+33])
                              []
                          (typing/types.ml[89,2953+35]..[89,2953+42])
                            Immutable
                            "id" (typing/types.ml[89,2953+35]..[89,2953+37])                            core_type (typing/types.ml[89,2953+39]..[89,2953+42])
                              Ptyp_constr "int" (typing/types.ml[89,2953+39]..[89,2953+42])
                              []
                        ]
                        None
                      (typing/types.ml[90,2998+4]..[90,2998+14])
                        "Internal" (typing/types.ml[90,2998+6]..[90,2998+14])
                        []
                        None
                      (typing/types.ml[91,3013+4]..[91,3013+22])
                        "Predef" (typing/types.ml[91,3013+6]..[91,3013+12])
                        [
                          core_type (typing/types.ml[91,3013+16]..[91,3013+22])
                            Ptyp_constr "string" (typing/types.ml[91,3013+16]..[91,3013+22])
                            []
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (typing/types.ml[93,3037+2]..[109,3584+6])
            Pstr_include            module_expr (typing/types.ml[93,3037+10]..[109,3584+6])
              Pmod_apply
              module_expr (typing/types.ml[93,3037+10]..[93,3037+27])
                Pmod_ident "Identifiable.Make" (typing/types.ml[93,3037+10]..[93,3037+27])
              module_expr (typing/types.ml[93,3037+28]..[109,3584+5])
                Pmod_structure
                [
                  structure_item (typing/types.ml[94,3072+4]..[94,3072+21])
                    Pstr_type Nonrec
                    [
                      type_declaration "t" (typing/types.ml[94,3072+16]..[94,3072+17]) (typing/types.ml[94,3072+4]..[94,3072+21])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (typing/types.ml[94,3072+20]..[94,3072+21])
                              Ptyp_constr "t" (typing/types.ml[94,3072+20]..[94,3072+21])
                              []
                    ]
                  structure_item (typing/types.ml[96,3095+4]..[96,3095+31])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/types.ml[96,3095+8]..[96,3095+13])
                          Ppat_var "equal" (typing/types.ml[96,3095+8]..[96,3095+13])
                        expression (typing/types.ml[96,3095+14]..[96,3095+31]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/types.ml[96,3095+14]..[96,3095+21])
                            Ppat_constraint
                            pattern (typing/types.ml[96,3095+15]..[96,3095+16])
                              Ppat_var "x" (typing/types.ml[96,3095+15]..[96,3095+16])
                            core_type (typing/types.ml[96,3095+19]..[96,3095+20])
                              Ptyp_constr "t" (typing/types.ml[96,3095+19]..[96,3095+20])
                              []
                          expression (typing/types.ml[96,3095+22]..[96,3095+31]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/types.ml[96,3095+22]..[96,3095+23])
                              Ppat_var "y" (typing/types.ml[96,3095+22]..[96,3095+23])
                            expression (typing/types.ml[96,3095+26]..[96,3095+31])
                              Pexp_apply
                              expression (typing/types.ml[96,3095+28]..[96,3095+29])
                                Pexp_ident "=" (typing/types.ml[96,3095+28]..[96,3095+29])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[96,3095+26]..[96,3095+27])
                                    Pexp_ident "x" (typing/types.ml[96,3095+26]..[96,3095+27])
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[96,3095+30]..[96,3095+31])
                                    Pexp_ident "y" (typing/types.ml[96,3095+30]..[96,3095+31])
                              ]
                    ]
                  structure_item (typing/types.ml[97,3127+4]..[97,3127+39])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/types.ml[97,3127+8]..[97,3127+15])
                          Ppat_var "compare" (typing/types.ml[97,3127+8]..[97,3127+15])
                        expression (typing/types.ml[97,3127+16]..[97,3127+39]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/types.ml[97,3127+16]..[97,3127+23])
                            Ppat_constraint
                            pattern (typing/types.ml[97,3127+17]..[97,3127+18])
                              Ppat_var "x" (typing/types.ml[97,3127+17]..[97,3127+18])
                            core_type (typing/types.ml[97,3127+21]..[97,3127+22])
                              Ptyp_constr "t" (typing/types.ml[97,3127+21]..[97,3127+22])
                              []
                          expression (typing/types.ml[97,3127+24]..[97,3127+39]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/types.ml[97,3127+24]..[97,3127+25])
                              Ppat_var "y" (typing/types.ml[97,3127+24]..[97,3127+25])
                            expression (typing/types.ml[97,3127+28]..[97,3127+39])
                              Pexp_apply
                              expression (typing/types.ml[97,3127+28]..[97,3127+35])
                                Pexp_ident "compare" (typing/types.ml[97,3127+28]..[97,3127+35])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[97,3127+36]..[97,3127+37])
                                    Pexp_ident "x" (typing/types.ml[97,3127+36]..[97,3127+37])
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[97,3127+38]..[97,3127+39])
                                    Pexp_ident "y" (typing/types.ml[97,3127+38]..[97,3127+39])
                              ]
                    ]
                  structure_item (typing/types.ml[98,3167+4]..[98,3167+37])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/types.ml[98,3167+8]..[98,3167+12])
                          Ppat_var "hash" (typing/types.ml[98,3167+8]..[98,3167+12])
                        expression (typing/types.ml[98,3167+13]..[98,3167+37]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/types.ml[98,3167+13]..[98,3167+20])
                            Ppat_constraint
                            pattern (typing/types.ml[98,3167+14]..[98,3167+15])
                              Ppat_var "x" (typing/types.ml[98,3167+14]..[98,3167+15])
                            core_type (typing/types.ml[98,3167+18]..[98,3167+19])
                              Ptyp_constr "t" (typing/types.ml[98,3167+18]..[98,3167+19])
                              []
                          expression (typing/types.ml[98,3167+23]..[98,3167+37])
                            Pexp_apply
                            expression (typing/types.ml[98,3167+23]..[98,3167+35])
                              Pexp_ident "Hashtbl.hash" (typing/types.ml[98,3167+23]..[98,3167+35])
                            [
                              <arg>
                              Nolabel
                                expression (typing/types.ml[98,3167+36]..[98,3167+37])
                                  Pexp_ident "x" (typing/types.ml[98,3167+36]..[98,3167+37])
                            ]
                    ]
                  structure_item (typing/types.ml[100,3206+4]..[104,3415+73])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/types.ml[100,3206+8]..[100,3206+13])
                          Ppat_var "print" (typing/types.ml[100,3206+8]..[100,3206+13])
                        expression (typing/types.ml[100,3206+14]..[104,3415+73]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/types.ml[100,3206+14]..[100,3206+17])
                            Ppat_var "fmt" (typing/types.ml[100,3206+14]..[100,3206+17])
                          expression (typing/types.ml[100,3206+20]..[104,3415+73])
                            Pexp_function
                            [
                              <case>
                                pattern (typing/types.ml[101,3235+8]..[101,3235+16])
                                  Ppat_construct "Internal" (typing/types.ml[101,3235+8]..[101,3235+16])
                                  None
                                expression (typing/types.ml[101,3235+20]..[101,3235+59])
                                  Pexp_apply
                                  expression (typing/types.ml[101,3235+20]..[101,3235+42])
                                    Pexp_ident "Format.pp_print_string" (typing/types.ml[101,3235+20]..[101,3235+42])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/types.ml[101,3235+43]..[101,3235+46])
                                        Pexp_ident "fmt" (typing/types.ml[101,3235+43]..[101,3235+46])
                                    <arg>
                                    Nolabel
                                      expression (typing/types.ml[101,3235+47]..[101,3235+59])
                                        Pexp_constant PConst_string("<internal>",(typing/types.ml[101,3235+48]..[101,3235+58]),None)
                                  ]
                              <case>
                                pattern (typing/types.ml[102,3295+8]..[102,3295+19])
                                  Ppat_construct "Predef" (typing/types.ml[102,3295+8]..[102,3295+14])
                                  Some
                                    []
                                    pattern (typing/types.ml[102,3295+15]..[102,3295+19])
                                      Ppat_var "name" (typing/types.ml[102,3295+15]..[102,3295+19])
                                expression (typing/types.ml[102,3295+23]..[102,3295+60])
                                  Pexp_apply
                                  expression (typing/types.ml[102,3295+23]..[102,3295+37])
                                    Pexp_ident "Format.fprintf" (typing/types.ml[102,3295+23]..[102,3295+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/types.ml[102,3295+38]..[102,3295+41])
                                        Pexp_ident "fmt" (typing/types.ml[102,3295+38]..[102,3295+41])
                                    <arg>
                                    Nolabel
                                      expression (typing/types.ml[102,3295+42]..[102,3295+55])
                                        Pexp_constant PConst_string("<predef:%s>",(typing/types.ml[102,3295+43]..[102,3295+54]),None)
                                    <arg>
                                    Nolabel
                                      expression (typing/types.ml[102,3295+56]..[102,3295+60])
                                        Pexp_ident "name" (typing/types.ml[102,3295+56]..[102,3295+60])
                                  ]
                              <case>
                                pattern (typing/types.ml[103,3356+8]..[103,3356+26])
                                  Ppat_construct "Compilation_unit" (typing/types.ml[103,3356+8]..[103,3356+24])
                                  Some
                                    []
                                    pattern (typing/types.ml[103,3356+25]..[103,3356+26])
                                      Ppat_var "s" (typing/types.ml[103,3356+25]..[103,3356+26])
                                expression (typing/types.ml[103,3356+30]..[103,3356+58])
                                  Pexp_apply
                                  expression (typing/types.ml[103,3356+30]..[103,3356+52])
                                    Pexp_ident "Format.pp_print_string" (typing/types.ml[103,3356+30]..[103,3356+52])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/types.ml[103,3356+53]..[103,3356+56])
                                        Pexp_ident "fmt" (typing/types.ml[103,3356+53]..[103,3356+56])
                                    <arg>
                                    Nolabel
                                      expression (typing/types.ml[103,3356+57]..[103,3356+58])
                                        Pexp_ident "s" (typing/types.ml[103,3356+57]..[103,3356+58])
                                  ]
                              <case>
                                pattern (typing/types.ml[104,3415+8]..[104,3415+30])
                                  Ppat_construct "Item" (typing/types.ml[104,3415+8]..[104,3415+12])
                                  Some
                                    []
                                    pattern (typing/types.ml[104,3415+13]..[104,3415+30])
                                      Ppat_record Closed
                                      [
                                        "comp_unit" (typing/types.ml[104,3415+15]..[104,3415+24]) ghost
                                          pattern (typing/types.ml[104,3415+15]..[104,3415+24])
                                            Ppat_var "comp_unit" (typing/types.ml[104,3415+15]..[104,3415+24])
                                        "id" (typing/types.ml[104,3415+26]..[104,3415+28]) ghost
                                          pattern (typing/types.ml[104,3415+26]..[104,3415+28])
                                            Ppat_var "id" (typing/types.ml[104,3415+26]..[104,3415+28])
                                      ]
                                expression (typing/types.ml[104,3415+34]..[104,3415+73])
                                  Pexp_apply
                                  expression (typing/types.ml[104,3415+34]..[104,3415+48])
                                    Pexp_ident "Format.fprintf" (typing/types.ml[104,3415+34]..[104,3415+48])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/types.ml[104,3415+49]..[104,3415+52])
                                        Pexp_ident "fmt" (typing/types.ml[104,3415+49]..[104,3415+52])
                                    <arg>
                                    Nolabel
                                      expression (typing/types.ml[104,3415+53]..[104,3415+60])
                                        Pexp_constant PConst_string("%s.%d",(typing/types.ml[104,3415+54]..[104,3415+59]),None)
                                    <arg>
                                    Nolabel
                                      expression (typing/types.ml[104,3415+61]..[104,3415+70])
                                        Pexp_ident "comp_unit" (typing/types.ml[104,3415+61]..[104,3415+70])
                                    <arg>
                                    Nolabel
                                      expression (typing/types.ml[104,3415+71]..[104,3415+73])
                                        Pexp_ident "id" (typing/types.ml[104,3415+71]..[104,3415+73])
                                  ]
                            ]
                    ]
                  structure_item (typing/types.ml[106,3490+4]..[108,3566+17])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/types.ml[106,3490+8]..[106,3490+14])
                          Ppat_var "output" (typing/types.ml[106,3490+8]..[106,3490+14])
                        expression (typing/types.ml[106,3490+15]..[108,3566+17]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/types.ml[106,3490+15]..[106,3490+17])
                            Ppat_var "oc" (typing/types.ml[106,3490+15]..[106,3490+17])
                          expression (typing/types.ml[106,3490+18]..[108,3566+17]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/types.ml[106,3490+18]..[106,3490+19])
                              Ppat_var "t" (typing/types.ml[106,3490+18]..[106,3490+19])
                            expression (typing/types.ml[107,3512+6]..[108,3566+17])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/types.ml[107,3512+10]..[107,3512+13])
                                    Ppat_var "fmt" (typing/types.ml[107,3512+10]..[107,3512+13])
                                  expression (typing/types.ml[107,3512+16]..[107,3512+50])
                                    Pexp_apply
                                    expression (typing/types.ml[107,3512+16]..[107,3512+47])
                                      Pexp_ident "Format.formatter_of_out_channel" (typing/types.ml[107,3512+16]..[107,3512+47])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/types.ml[107,3512+48]..[107,3512+50])
                                          Pexp_ident "oc" (typing/types.ml[107,3512+48]..[107,3512+50])
                                    ]
                              ]
                              expression (typing/types.ml[108,3566+6]..[108,3566+17])
                                Pexp_apply
                                expression (typing/types.ml[108,3566+6]..[108,3566+11])
                                  Pexp_ident "print" (typing/types.ml[108,3566+6]..[108,3566+11])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/types.ml[108,3566+12]..[108,3566+15])
                                      Pexp_ident "fmt" (typing/types.ml[108,3566+12]..[108,3566+15])
                                  <arg>
                                  Nolabel
                                    expression (typing/types.ml[108,3566+16]..[108,3566+17])
                                      Pexp_ident "t" (typing/types.ml[108,3566+16]..[108,3566+17])
                                ]
                    ]
                ]
          structure_item (typing/types.ml[111,3592+2]..[111,3592+19])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[111,3592+6]..[111,3592+8])
                  Ppat_var "id" (typing/types.ml[111,3592+6]..[111,3592+8])
                expression (typing/types.ml[111,3592+11]..[111,3592+19])
                  Pexp_apply
                  expression (typing/types.ml[111,3592+11]..[111,3592+14])
                    Pexp_ident "ref" (typing/types.ml[111,3592+11]..[111,3592+14])
                  [
                    <arg>
                    Nolabel
                      expression (typing/types.ml[111,3592+15]..[111,3592+19])
                        Pexp_constant PConst_int (-1,None)
                  ]
            ]
          structure_item (typing/types.ml[113,3613+2]..[113,3613+28])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[113,3613+6]..[113,3613+12])
                  Ppat_var "reinit" (typing/types.ml[113,3613+6]..[113,3613+12])
                expression (typing/types.ml[113,3613+13]..[113,3613+28]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[113,3613+13]..[113,3613+15])
                    Ppat_construct "()" (typing/types.ml[113,3613+13]..[113,3613+15])
                    None
                  expression (typing/types.ml[113,3613+18]..[113,3613+28])
                    Pexp_apply
                    expression (typing/types.ml[113,3613+21]..[113,3613+23])
                      Pexp_ident ":=" (typing/types.ml[113,3613+21]..[113,3613+23])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[113,3613+18]..[113,3613+20])
                          Pexp_ident "id" (typing/types.ml[113,3613+18]..[113,3613+20])
                      <arg>
                      Nolabel
                        expression (typing/types.ml[113,3613+24]..[113,3613+28])
                          Pexp_constant PConst_int (-1,None)
                    ]
            ]
          structure_item (typing/types.ml[115,3643+2]..[117,3684+49])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[115,3643+6]..[115,3643+8])
                  Ppat_var "mk" (typing/types.ml[115,3643+6]..[115,3643+8])
                expression (typing/types.ml[115,3643+10]..[117,3684+49]) ghost
                  Pexp_fun
                  Labelled "current_unit"
                  None
                  pattern (typing/types.ml[115,3643+11]..[115,3643+23])
                    Ppat_var "current_unit" (typing/types.ml[115,3643+11]..[115,3643+23])
                  expression (typing/types.ml[116,3669+6]..[117,3684+49])
                    Pexp_sequence
                    expression (typing/types.ml[116,3669+6]..[116,3669+13])
                      Pexp_apply
                      expression (typing/types.ml[116,3669+6]..[116,3669+10])
                        Pexp_ident "incr" (typing/types.ml[116,3669+6]..[116,3669+10])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[116,3669+11]..[116,3669+13])
                            Pexp_ident "id" (typing/types.ml[116,3669+11]..[116,3669+13])
                      ]
                    expression (typing/types.ml[117,3684+6]..[117,3684+49])
                      Pexp_construct "Item" (typing/types.ml[117,3684+6]..[117,3684+10])
                      Some
                        expression (typing/types.ml[117,3684+11]..[117,3684+49])
                          Pexp_record
                          [
                            "comp_unit" (typing/types.ml[117,3684+13]..[117,3684+22])
                              expression (typing/types.ml[117,3684+25]..[117,3684+37])
                                Pexp_ident "current_unit" (typing/types.ml[117,3684+25]..[117,3684+37])
                            "id" (typing/types.ml[117,3684+39]..[117,3684+41])
                              expression (typing/types.ml[117,3684+44]..[117,3684+47])
                                Pexp_apply
                                expression (typing/types.ml[117,3684+44]..[117,3684+45])
                                  Pexp_ident "!" (typing/types.ml[117,3684+44]..[117,3684+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/types.ml[117,3684+45]..[117,3684+47])
                                      Pexp_ident "id" (typing/types.ml[117,3684+45]..[117,3684+47])
                                ]
                          ]
                          None
            ]
          structure_item (typing/types.ml[119,3735+2]..[122,3886+36])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[119,3735+6]..[119,3735+28])
                  Ppat_var "of_compilation_unit_id" (typing/types.ml[119,3735+6]..[119,3735+28])
                expression (typing/types.ml[119,3735+29]..[122,3886+36]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[119,3735+29]..[119,3735+31])
                    Ppat_var "id" (typing/types.ml[119,3735+29]..[119,3735+31])
                  expression (typing/types.ml[120,3769+4]..[122,3886+36])
                    Pexp_sequence
                    expression (typing/types.ml[120,3769+4]..[121,3807+77])
                      Pexp_ifthenelse
                      expression (typing/types.ml[120,3769+7]..[120,3769+32])
                        Pexp_apply
                        expression (typing/types.ml[120,3769+7]..[120,3769+10])
                          Pexp_ident "not" (typing/types.ml[120,3769+7]..[120,3769+10])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[120,3769+11]..[120,3769+32])
                              Pexp_apply
                              expression (typing/types.ml[120,3769+12]..[120,3769+28])
                                Pexp_ident "Ident.persistent" (typing/types.ml[120,3769+12]..[120,3769+28])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[120,3769+29]..[120,3769+31])
                                    Pexp_ident "id" (typing/types.ml[120,3769+29]..[120,3769+31])
                              ]
                        ]
                      expression (typing/types.ml[121,3807+6]..[121,3807+77])
                        Pexp_apply
                        expression (typing/types.ml[121,3807+6]..[121,3807+23])
                          Pexp_ident "Misc.fatal_errorf" (typing/types.ml[121,3807+6]..[121,3807+23])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[121,3807+24]..[121,3807+61])
                              Pexp_constant PConst_string("Types.Uid.of_compilation_unit_id %S",(typing/types.ml[121,3807+25]..[121,3807+60]),None)
                          <arg>
                          Nolabel
                            expression (typing/types.ml[121,3807+62]..[121,3807+77])
                              Pexp_apply
                              expression (typing/types.ml[121,3807+63]..[121,3807+73])
                                Pexp_ident "Ident.name" (typing/types.ml[121,3807+63]..[121,3807+73])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[121,3807+74]..[121,3807+76])
                                    Pexp_ident "id" (typing/types.ml[121,3807+74]..[121,3807+76])
                              ]
                        ]
                      None
                    expression (typing/types.ml[122,3886+4]..[122,3886+36])
                      Pexp_construct "Compilation_unit" (typing/types.ml[122,3886+4]..[122,3886+20])
                      Some
                        expression (typing/types.ml[122,3886+21]..[122,3886+36])
                          Pexp_apply
                          expression (typing/types.ml[122,3886+22]..[122,3886+32])
                            Pexp_ident "Ident.name" (typing/types.ml[122,3886+22]..[122,3886+32])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[122,3886+33]..[122,3886+35])
                                Pexp_ident "id" (typing/types.ml[122,3886+33]..[122,3886+35])
                          ]
            ]
          structure_item (typing/types.ml[124,3924+2]..[127,4054+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[124,3924+6]..[124,3924+18])
                  Ppat_var "of_predef_id" (typing/types.ml[124,3924+6]..[124,3924+18])
                expression (typing/types.ml[124,3924+19]..[127,4054+26]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[124,3924+19]..[124,3924+21])
                    Ppat_var "id" (typing/types.ml[124,3924+19]..[124,3924+21])
                  expression (typing/types.ml[125,3948+4]..[127,4054+26])
                    Pexp_sequence
                    expression (typing/types.ml[125,3948+4]..[126,3985+67])
                      Pexp_ifthenelse
                      expression (typing/types.ml[125,3948+7]..[125,3948+31])
                        Pexp_apply
                        expression (typing/types.ml[125,3948+7]..[125,3948+10])
                          Pexp_ident "not" (typing/types.ml[125,3948+7]..[125,3948+10])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[125,3948+11]..[125,3948+31])
                              Pexp_apply
                              expression (typing/types.ml[125,3948+12]..[125,3948+27])
                                Pexp_ident "Ident.is_predef" (typing/types.ml[125,3948+12]..[125,3948+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[125,3948+28]..[125,3948+30])
                                    Pexp_ident "id" (typing/types.ml[125,3948+28]..[125,3948+30])
                              ]
                        ]
                      expression (typing/types.ml[126,3985+6]..[126,3985+67])
                        Pexp_apply
                        expression (typing/types.ml[126,3985+6]..[126,3985+23])
                          Pexp_ident "Misc.fatal_errorf" (typing/types.ml[126,3985+6]..[126,3985+23])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[126,3985+24]..[126,3985+51])
                              Pexp_constant PConst_string("Types.Uid.of_predef_id %S",(typing/types.ml[126,3985+25]..[126,3985+50]),None)
                          <arg>
                          Nolabel
                            expression (typing/types.ml[126,3985+52]..[126,3985+67])
                              Pexp_apply
                              expression (typing/types.ml[126,3985+53]..[126,3985+63])
                                Pexp_ident "Ident.name" (typing/types.ml[126,3985+53]..[126,3985+63])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[126,3985+64]..[126,3985+66])
                                    Pexp_ident "id" (typing/types.ml[126,3985+64]..[126,3985+66])
                              ]
                        ]
                      None
                    expression (typing/types.ml[127,4054+4]..[127,4054+26])
                      Pexp_construct "Predef" (typing/types.ml[127,4054+4]..[127,4054+10])
                      Some
                        expression (typing/types.ml[127,4054+11]..[127,4054+26])
                          Pexp_apply
                          expression (typing/types.ml[127,4054+12]..[127,4054+22])
                            Pexp_ident "Ident.name" (typing/types.ml[127,4054+12]..[127,4054+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[127,4054+23]..[127,4054+25])
                                Pexp_ident "id" (typing/types.ml[127,4054+23]..[127,4054+25])
                          ]
            ]
          structure_item (typing/types.ml[129,4082+2]..[129,4082+45])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[129,4082+6]..[129,4082+34])
                  Ppat_var "internal_not_actually_unique" (typing/types.ml[129,4082+6]..[129,4082+34])
                expression (typing/types.ml[129,4082+37]..[129,4082+45])
                  Pexp_construct "Internal" (typing/types.ml[129,4082+37]..[129,4082+45])
                  None
            ]
          structure_item (typing/types.ml[131,4129+2]..[133,4190+16])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[131,4129+6]..[131,4129+28])
                  Ppat_var "for_actual_declaration" (typing/types.ml[131,4129+6]..[131,4129+28])
                expression (typing/types.ml[131,4129+31]..[133,4190+16])
                  Pexp_function
                  [
                    <case>
                      pattern (typing/types.ml[132,4169+6]..[132,4169+12])
                        Ppat_construct "Item" (typing/types.ml[132,4169+6]..[132,4169+10])
                        Some
                          []
                          pattern (typing/types.ml[132,4169+11]..[132,4169+12])
                            Ppat_any
                      expression (typing/types.ml[132,4169+16]..[132,4169+20])
                        Pexp_construct "true" (typing/types.ml[132,4169+16]..[132,4169+20])
                        None
                    <case>
                      pattern (typing/types.ml[133,4190+6]..[133,4190+7])
                        Ppat_any
                      expression (typing/types.ml[133,4190+11]..[133,4190+16])
                        Pexp_construct "false" (typing/types.ml[133,4190+11]..[133,4190+16])
                        None
                  ]
            ]
        ]
  structure_item (typing/types.ml[138,4258+0]..[138,4258+39])
    Pstr_module
    "MethSet" (typing/types.ml[138,4258+7]..[138,4258+14])
      module_expr (typing/types.ml[138,4258+17]..[138,4258+39])
        Pmod_ident "Misc.Stdlib.String.Set" (typing/types.ml[138,4258+17]..[138,4258+39])
  structure_item (typing/types.ml[139,4298+0]..[139,4298+38])
    Pstr_module
    "VarSet" (typing/types.ml[139,4298+7]..[139,4298+13])
      module_expr (typing/types.ml[139,4298+16]..[139,4298+38])
        Pmod_ident "Misc.Stdlib.String.Set" (typing/types.ml[139,4298+16]..[139,4298+38])
  structure_item (typing/types.ml[141,4338+0]..[141,4338+37])
    Pstr_module
    "Meths" (typing/types.ml[141,4338+7]..[141,4338+12])
      module_expr (typing/types.ml[141,4338+15]..[141,4338+37])
        Pmod_ident "Misc.Stdlib.String.Map" (typing/types.ml[141,4338+15]..[141,4338+37])
  structure_item (typing/types.ml[142,4376+0]..[142,4376+36])
    Pstr_module
    "Vars" (typing/types.ml[142,4376+7]..[142,4376+11])
      module_expr (typing/types.ml[142,4376+14]..[142,4376+36])
        Pmod_ident "Misc.Stdlib.String.Map" (typing/types.ml[142,4376+14]..[142,4376+36])
  structure_item (typing/types.ml[147,4441+0]..[173,5353+76])
    Pstr_type Rec
    [
      type_declaration "value_description" (typing/types.ml[147,4441+5]..[147,4441+22]) (typing/types.ml[147,4441+0]..[153,4643+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.ml[148,4466+4]..[148,4466+24])
                Immutable
                "val_type" (typing/types.ml[148,4466+4]..[148,4466+12])                core_type (typing/types.ml[148,4466+14]..[148,4466+23])
                  Ptyp_constr "type_expr" (typing/types.ml[148,4466+14]..[148,4466+23])
                  []
              (typing/types.ml[149,4530+4]..[149,4530+25])
                Immutable
                "val_kind" (typing/types.ml[149,4530+4]..[149,4530+12])                core_type (typing/types.ml[149,4530+14]..[149,4530+24])
                  Ptyp_constr "value_kind" (typing/types.ml[149,4530+14]..[149,4530+24])
                  []
              (typing/types.ml[150,4556+4]..[150,4556+24])
                Immutable
                "val_loc" (typing/types.ml[150,4556+4]..[150,4556+11])                core_type (typing/types.ml[150,4556+13]..[150,4556+23])
                  Ptyp_constr "Location.t" (typing/types.ml[150,4556+13]..[150,4556+23])
                  []
              (typing/types.ml[151,4581+4]..[151,4581+41])
                Immutable
                "val_attributes" (typing/types.ml[151,4581+4]..[151,4581+18])                core_type (typing/types.ml[151,4581+20]..[151,4581+40])
                  Ptyp_constr "Parsetree.attributes" (typing/types.ml[151,4581+20]..[151,4581+40])
                  []
              (typing/types.ml[152,4623+4]..[152,4623+19])
                Immutable
                "val_uid" (typing/types.ml[152,4623+4]..[152,4623+11])                core_type (typing/types.ml[152,4623+13]..[152,4623+18])
                  Ptyp_constr "Uid.t" (typing/types.ml[152,4623+13]..[152,4623+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "value_kind" (typing/types.ml[155,4648+4]..[155,4648+14]) (typing/types.ml[155,4648+0]..[162,4985+57])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[156,4665+4]..[156,4665+11])
                "Val_reg" (typing/types.ml[156,4665+4]..[156,4665+11])
                []
                None
              (typing/types.ml[157,4725+2]..[157,4725+37])
                "Val_prim" (typing/types.ml[157,4725+4]..[157,4725+12])
                [
                  core_type (typing/types.ml[157,4725+16]..[157,4725+37])
                    Ptyp_constr "Primitive.description" (typing/types.ml[157,4725+16]..[157,4725+37])
                    []
                ]
                None
              (typing/types.ml[158,4781+2]..[158,4781+37])
                "Val_ivar" (typing/types.ml[158,4781+4]..[158,4781+12])
                [
                  core_type (typing/types.ml[158,4781+16]..[158,4781+28])
                    Ptyp_constr "mutable_flag" (typing/types.ml[158,4781+16]..[158,4781+28])
                    []
                  core_type (typing/types.ml[158,4781+31]..[158,4781+37])
                    Ptyp_constr "string" (typing/types.ml[158,4781+31]..[158,4781+37])
                    []
                ]
                None
              (typing/types.ml[159,4857+2]..[160,4873+60])
                "Val_self" (typing/types.ml[159,4857+4]..[159,4857+12])
                [
                  core_type (typing/types.ml[160,4873+6]..[160,4873+21])
                    Ptyp_constr "class_signature" (typing/types.ml[160,4873+6]..[160,4873+21])
                    []
                  core_type (typing/types.ml[160,4873+24]..[160,4873+34])
                    Ptyp_constr "self_meths" (typing/types.ml[160,4873+24]..[160,4873+34])
                    []
                  core_type (typing/types.ml[160,4873+37]..[160,4873+51])
                    Ptyp_constr "Vars.t" (typing/types.ml[160,4873+45]..[160,4873+51])
                    [
                      core_type (typing/types.ml[160,4873+37]..[160,4873+44])
                        Ptyp_constr "Ident.t" (typing/types.ml[160,4873+37]..[160,4873+44])
                        []
                    ]
                  core_type (typing/types.ml[160,4873+54]..[160,4873+60])
                    Ptyp_constr "string" (typing/types.ml[160,4873+54]..[160,4873+60])
                    []
                ]
                None
              (typing/types.ml[162,4985+2]..[162,4985+57])
                "Val_anc" (typing/types.ml[162,4985+4]..[162,4985+11])
                [
                  core_type (typing/types.ml[162,4985+15]..[162,4985+30])
                    Ptyp_constr "class_signature" (typing/types.ml[162,4985+15]..[162,4985+30])
                    []
                  core_type (typing/types.ml[162,4985+33]..[162,4985+48])
                    Ptyp_constr "Meths.t" (typing/types.ml[162,4985+41]..[162,4985+48])
                    [
                      core_type (typing/types.ml[162,4985+33]..[162,4985+40])
                        Ptyp_constr "Ident.t" (typing/types.ml[162,4985+33]..[162,4985+40])
                        []
                    ]
                  core_type (typing/types.ml[162,4985+51]..[162,4985+57])
                    Ptyp_constr "string" (typing/types.ml[162,4985+51]..[162,4985+57])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "self_meths" (typing/types.ml[165,5099+4]..[165,5099+14]) (typing/types.ml[165,5099+0]..[167,5153+39])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[166,5116+2]..[166,5116+36])
                "Self_concrete" (typing/types.ml[166,5116+4]..[166,5116+17])
                [
                  core_type (typing/types.ml[166,5116+21]..[166,5116+36])
                    Ptyp_constr "Meths.t" (typing/types.ml[166,5116+29]..[166,5116+36])
                    [
                      core_type (typing/types.ml[166,5116+21]..[166,5116+28])
                        Ptyp_constr "Ident.t" (typing/types.ml[166,5116+21]..[166,5116+28])
                        []
                    ]
                ]
                None
              (typing/types.ml[167,5153+2]..[167,5153+39])
                "Self_virtual" (typing/types.ml[167,5153+4]..[167,5153+16])
                [
                  core_type (typing/types.ml[167,5153+20]..[167,5153+39])
                    Ptyp_constr "ref" (typing/types.ml[167,5153+36]..[167,5153+39])
                    [
                      core_type (typing/types.ml[167,5153+20]..[167,5153+35])
                        Ptyp_constr "Meths.t" (typing/types.ml[167,5153+28]..[167,5153+35])
                        [
                          core_type (typing/types.ml[167,5153+20]..[167,5153+27])
                            Ptyp_constr "Ident.t" (typing/types.ml[167,5153+20]..[167,5153+27])
                            []
                        ]
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "class_signature" (typing/types.ml[169,5194+4]..[169,5194+19]) (typing/types.ml[169,5194+0]..[173,5353+76])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.ml[170,5216+4]..[170,5216+25])
                Immutable
                "csig_self" (typing/types.ml[170,5216+4]..[170,5216+13])                core_type (typing/types.ml[170,5216+15]..[170,5216+24])
                  Ptyp_constr "type_expr" (typing/types.ml[170,5216+15]..[170,5216+24])
                  []
              (typing/types.ml[171,5242+4]..[171,5242+37])
                Mutable
                "csig_self_row" (typing/types.ml[171,5242+12]..[171,5242+25])                core_type (typing/types.ml[171,5242+27]..[171,5242+36])
                  Ptyp_constr "type_expr" (typing/types.ml[171,5242+27]..[171,5242+36])
                  []
              (typing/types.ml[172,5280+4]..[172,5280+72])
                Mutable
                "csig_vars" (typing/types.ml[172,5280+12]..[172,5280+21])                core_type (typing/types.ml[172,5280+23]..[172,5280+71])
                  Ptyp_constr "Vars.t" (typing/types.ml[172,5280+65]..[172,5280+71])
                  [
                    core_type (typing/types.ml[172,5280+24]..[172,5280+63])
                      Ptyp_tuple
                      [
                        core_type (typing/types.ml[172,5280+24]..[172,5280+36])
                          Ptyp_constr "mutable_flag" (typing/types.ml[172,5280+24]..[172,5280+36])
                          []
                        core_type (typing/types.ml[172,5280+39]..[172,5280+51])
                          Ptyp_constr "virtual_flag" (typing/types.ml[172,5280+39]..[172,5280+51])
                          []
                        core_type (typing/types.ml[172,5280+54]..[172,5280+63])
                          Ptyp_constr "type_expr" (typing/types.ml[172,5280+54]..[172,5280+63])
                          []
                      ]
                  ]
              (typing/types.ml[173,5353+4]..[173,5353+74])
                Mutable
                "csig_meths" (typing/types.ml[173,5353+12]..[173,5353+22])                core_type (typing/types.ml[173,5353+24]..[173,5353+73])
                  Ptyp_constr "Meths.t" (typing/types.ml[173,5353+66]..[173,5353+73])
                  [
                    core_type (typing/types.ml[173,5353+25]..[173,5353+64])
                      Ptyp_tuple
                      [
                        core_type (typing/types.ml[173,5353+25]..[173,5353+37])
                          Ptyp_constr "private_flag" (typing/types.ml[173,5353+25]..[173,5353+37])
                          []
                        core_type (typing/types.ml[173,5353+40]..[173,5353+52])
                          Ptyp_constr "virtual_flag" (typing/types.ml[173,5353+40]..[173,5353+52])
                          []
                        core_type (typing/types.ml[173,5353+55]..[173,5353+64])
                          Ptyp_constr "type_expr" (typing/types.ml[173,5353+55]..[173,5353+64])
                          []
                      ]
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/types.ml[177,5447+0]..[207,6447+3])
    Pstr_module
    "Variance" (typing/types.ml[177,5447+7]..[177,5447+15])
      module_expr (typing/types.ml[177,5447+18]..[207,6447+3])
        Pmod_structure
        [
          structure_item (typing/types.ml[178,5472+2]..[178,5472+14])
            Pstr_type Rec
            [
              type_declaration "t" (typing/types.ml[178,5472+7]..[178,5472+8]) (typing/types.ml[178,5472+2]..[178,5472+14])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (typing/types.ml[178,5472+11]..[178,5472+14])
                      Ptyp_constr "int" (typing/types.ml[178,5472+11]..[178,5472+14])
                      []
            ]
          structure_item (typing/types.ml[179,5487+2]..[179,5487+63])
            Pstr_type Rec
            [
              type_declaration "f" (typing/types.ml[179,5487+7]..[179,5487+8]) (typing/types.ml[179,5487+2]..[179,5487+63])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (typing/types.ml[179,5487+11]..[179,5487+18])
                        "May_pos" (typing/types.ml[179,5487+11]..[179,5487+18])
                        []
                        None
                      (typing/types.ml[179,5487+19]..[179,5487+28])
                        "May_neg" (typing/types.ml[179,5487+21]..[179,5487+28])
                        []
                        None
                      (typing/types.ml[179,5487+29]..[179,5487+39])
                        "May_weak" (typing/types.ml[179,5487+31]..[179,5487+39])
                        []
                        None
                      (typing/types.ml[179,5487+40]..[179,5487+45])
                        "Inj" (typing/types.ml[179,5487+42]..[179,5487+45])
                        []
                        None
                      (typing/types.ml[179,5487+46]..[179,5487+51])
                        "Pos" (typing/types.ml[179,5487+48]..[179,5487+51])
                        []
                        None
                      (typing/types.ml[179,5487+52]..[179,5487+57])
                        "Neg" (typing/types.ml[179,5487+54]..[179,5487+57])
                        []
                        None
                      (typing/types.ml[179,5487+58]..[179,5487+63])
                        "Inv" (typing/types.ml[179,5487+60]..[179,5487+63])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (typing/types.ml[180,5551+2]..[187,5680+15])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[180,5551+6]..[180,5551+12])
                  Ppat_var "single" (typing/types.ml[180,5551+6]..[180,5551+12])
                expression (typing/types.ml[180,5551+15]..[187,5680+15])
                  Pexp_function
                  [
                    <case>
                      pattern (typing/types.ml[181,5575+6]..[181,5575+13])
                        Ppat_construct "May_pos" (typing/types.ml[181,5575+6]..[181,5575+13])
                        None
                      expression (typing/types.ml[181,5575+17]..[181,5575+18])
                        Pexp_constant PConst_int (1,None)
                    <case>
                      pattern (typing/types.ml[182,5594+6]..[182,5594+13])
                        Ppat_construct "May_neg" (typing/types.ml[182,5594+6]..[182,5594+13])
                        None
                      expression (typing/types.ml[182,5594+17]..[182,5594+18])
                        Pexp_constant PConst_int (2,None)
                    <case>
                      pattern (typing/types.ml[183,5613+6]..[183,5613+14])
                        Ppat_construct "May_weak" (typing/types.ml[183,5613+6]..[183,5613+14])
                        None
                      expression (typing/types.ml[183,5613+18]..[183,5613+19])
                        Pexp_constant PConst_int (4,None)
                    <case>
                      pattern (typing/types.ml[184,5633+6]..[184,5633+9])
                        Ppat_construct "Inj" (typing/types.ml[184,5633+6]..[184,5633+9])
                        None
                      expression (typing/types.ml[184,5633+13]..[184,5633+14])
                        Pexp_constant PConst_int (8,None)
                    <case>
                      pattern (typing/types.ml[185,5648+6]..[185,5648+9])
                        Ppat_construct "Pos" (typing/types.ml[185,5648+6]..[185,5648+9])
                        None
                      expression (typing/types.ml[185,5648+13]..[185,5648+15])
                        Pexp_constant PConst_int (16,None)
                    <case>
                      pattern (typing/types.ml[186,5664+6]..[186,5664+9])
                        Ppat_construct "Neg" (typing/types.ml[186,5664+6]..[186,5664+9])
                        None
                      expression (typing/types.ml[186,5664+13]..[186,5664+15])
                        Pexp_constant PConst_int (32,None)
                    <case>
                      pattern (typing/types.ml[187,5680+6]..[187,5680+9])
                        Ppat_construct "Inv" (typing/types.ml[187,5680+6]..[187,5680+9])
                        None
                      expression (typing/types.ml[187,5680+13]..[187,5680+15])
                        Pexp_constant PConst_int (64,None)
                  ]
            ]
          structure_item (typing/types.ml[188,5696+2]..[188,5696+29])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[188,5696+6]..[188,5696+11])
                  Ppat_var "union" (typing/types.ml[188,5696+6]..[188,5696+11])
                expression (typing/types.ml[188,5696+12]..[188,5696+29]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[188,5696+12]..[188,5696+14])
                    Ppat_var "v1" (typing/types.ml[188,5696+12]..[188,5696+14])
                  expression (typing/types.ml[188,5696+15]..[188,5696+29]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/types.ml[188,5696+15]..[188,5696+17])
                      Ppat_var "v2" (typing/types.ml[188,5696+15]..[188,5696+17])
                    expression (typing/types.ml[188,5696+20]..[188,5696+29])
                      Pexp_apply
                      expression (typing/types.ml[188,5696+23]..[188,5696+26])
                        Pexp_ident "lor" (typing/types.ml[188,5696+23]..[188,5696+26])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[188,5696+20]..[188,5696+22])
                            Pexp_ident "v1" (typing/types.ml[188,5696+20]..[188,5696+22])
                        <arg>
                        Nolabel
                          expression (typing/types.ml[188,5696+27]..[188,5696+29])
                            Pexp_ident "v2" (typing/types.ml[188,5696+27]..[188,5696+29])
                      ]
            ]
          structure_item (typing/types.ml[189,5726+2]..[189,5726+30])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[189,5726+6]..[189,5726+11])
                  Ppat_var "inter" (typing/types.ml[189,5726+6]..[189,5726+11])
                expression (typing/types.ml[189,5726+12]..[189,5726+30]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[189,5726+12]..[189,5726+14])
                    Ppat_var "v1" (typing/types.ml[189,5726+12]..[189,5726+14])
                  expression (typing/types.ml[189,5726+15]..[189,5726+30]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/types.ml[189,5726+15]..[189,5726+17])
                      Ppat_var "v2" (typing/types.ml[189,5726+15]..[189,5726+17])
                    expression (typing/types.ml[189,5726+20]..[189,5726+30])
                      Pexp_apply
                      expression (typing/types.ml[189,5726+23]..[189,5726+27])
                        Pexp_ident "land" (typing/types.ml[189,5726+23]..[189,5726+27])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[189,5726+20]..[189,5726+22])
                            Pexp_ident "v1" (typing/types.ml[189,5726+20]..[189,5726+22])
                        <arg>
                        Nolabel
                          expression (typing/types.ml[189,5726+28]..[189,5726+30])
                            Pexp_ident "v2" (typing/types.ml[189,5726+28]..[189,5726+30])
                      ]
            ]
          structure_item (typing/types.ml[190,5757+2]..[190,5757+38])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[190,5757+6]..[190,5757+12])
                  Ppat_var "subset" (typing/types.ml[190,5757+6]..[190,5757+12])
                expression (typing/types.ml[190,5757+13]..[190,5757+38]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[190,5757+13]..[190,5757+15])
                    Ppat_var "v1" (typing/types.ml[190,5757+13]..[190,5757+15])
                  expression (typing/types.ml[190,5757+16]..[190,5757+38]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/types.ml[190,5757+16]..[190,5757+18])
                      Ppat_var "v2" (typing/types.ml[190,5757+16]..[190,5757+18])
                    expression (typing/types.ml[190,5757+21]..[190,5757+38])
                      Pexp_apply
                      expression (typing/types.ml[190,5757+33]..[190,5757+34])
                        Pexp_ident "=" (typing/types.ml[190,5757+33]..[190,5757+34])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[190,5757+22]..[190,5757+32])
                            Pexp_apply
                            expression (typing/types.ml[190,5757+25]..[190,5757+29])
                              Pexp_ident "land" (typing/types.ml[190,5757+25]..[190,5757+29])
                            [
                              <arg>
                              Nolabel
                                expression (typing/types.ml[190,5757+22]..[190,5757+24])
                                  Pexp_ident "v1" (typing/types.ml[190,5757+22]..[190,5757+24])
                              <arg>
                              Nolabel
                                expression (typing/types.ml[190,5757+30]..[190,5757+32])
                                  Pexp_ident "v2" (typing/types.ml[190,5757+30]..[190,5757+32])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/types.ml[190,5757+35]..[190,5757+37])
                            Pexp_ident "v1" (typing/types.ml[190,5757+35]..[190,5757+37])
                      ]
            ]
          structure_item (typing/types.ml[191,5796+2]..[191,5796+32])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[191,5796+6]..[191,5796+8])
                  Ppat_var "eq" (typing/types.ml[191,5796+6]..[191,5796+8])
                expression (typing/types.ml[191,5796+9]..[191,5796+32]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[191,5796+9]..[191,5796+17])
                    Ppat_constraint
                    pattern (typing/types.ml[191,5796+10]..[191,5796+12])
                      Ppat_var "v1" (typing/types.ml[191,5796+10]..[191,5796+12])
                    core_type (typing/types.ml[191,5796+15]..[191,5796+16])
                      Ptyp_constr "t" (typing/types.ml[191,5796+15]..[191,5796+16])
                      []
                  expression (typing/types.ml[191,5796+18]..[191,5796+32]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/types.ml[191,5796+18]..[191,5796+20])
                      Ppat_var "v2" (typing/types.ml[191,5796+18]..[191,5796+20])
                    expression (typing/types.ml[191,5796+23]..[191,5796+32])
                      Pexp_apply
                      expression (typing/types.ml[191,5796+27]..[191,5796+28])
                        Pexp_ident "=" (typing/types.ml[191,5796+27]..[191,5796+28])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[191,5796+24]..[191,5796+26])
                            Pexp_ident "v1" (typing/types.ml[191,5796+24]..[191,5796+26])
                        <arg>
                        Nolabel
                          expression (typing/types.ml[191,5796+29]..[191,5796+31])
                            Pexp_ident "v2" (typing/types.ml[191,5796+29]..[191,5796+31])
                      ]
            ]
          structure_item (typing/types.ml[192,5829+2]..[193,5847+59])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[192,5829+6]..[192,5829+9])
                  Ppat_var "set" (typing/types.ml[192,5829+6]..[192,5829+9])
                expression (typing/types.ml[192,5829+10]..[193,5847+59]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[192,5829+10]..[192,5829+11])
                    Ppat_var "x" (typing/types.ml[192,5829+10]..[192,5829+11])
                  expression (typing/types.ml[192,5829+12]..[193,5847+59]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/types.ml[192,5829+12]..[192,5829+13])
                      Ppat_var "b" (typing/types.ml[192,5829+12]..[192,5829+13])
                    expression (typing/types.ml[192,5829+14]..[193,5847+59]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/types.ml[192,5829+14]..[192,5829+15])
                        Ppat_var "v" (typing/types.ml[192,5829+14]..[192,5829+15])
                      expression (typing/types.ml[193,5847+4]..[193,5847+59])
                        Pexp_ifthenelse
                        expression (typing/types.ml[193,5847+7]..[193,5847+8])
                          Pexp_ident "b" (typing/types.ml[193,5847+7]..[193,5847+8])
                        expression (typing/types.ml[193,5847+14]..[193,5847+28])
                          Pexp_apply
                          expression (typing/types.ml[193,5847+16]..[193,5847+19])
                            Pexp_ident "lor" (typing/types.ml[193,5847+16]..[193,5847+19])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[193,5847+14]..[193,5847+15])
                                Pexp_ident "v" (typing/types.ml[193,5847+14]..[193,5847+15])
                            <arg>
                            Nolabel
                              expression (typing/types.ml[193,5847+20]..[193,5847+28])
                                Pexp_apply
                                expression (typing/types.ml[193,5847+20]..[193,5847+26])
                                  Pexp_ident "single" (typing/types.ml[193,5847+20]..[193,5847+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/types.ml[193,5847+27]..[193,5847+28])
                                      Pexp_ident "x" (typing/types.ml[193,5847+27]..[193,5847+28])
                                ]
                          ]
                        Some
                          expression (typing/types.ml[193,5847+35]..[193,5847+59])
                            Pexp_apply
                            expression (typing/types.ml[193,5847+37]..[193,5847+41])
                              Pexp_ident "land" (typing/types.ml[193,5847+37]..[193,5847+41])
                            [
                              <arg>
                              Nolabel
                                expression (typing/types.ml[193,5847+35]..[193,5847+36])
                                  Pexp_ident "v" (typing/types.ml[193,5847+35]..[193,5847+36])
                              <arg>
                              Nolabel
                                expression (typing/types.ml[193,5847+42]..[193,5847+59])
                                  Pexp_apply
                                  expression (typing/types.ml[193,5847+43]..[193,5847+47])
                                    Pexp_ident "lnot" (typing/types.ml[193,5847+43]..[193,5847+47])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/types.ml[193,5847+48]..[193,5847+58])
                                        Pexp_apply
                                        expression (typing/types.ml[193,5847+49]..[193,5847+55])
                                          Pexp_ident "single" (typing/types.ml[193,5847+49]..[193,5847+55])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/types.ml[193,5847+56]..[193,5847+57])
                                              Pexp_ident "x" (typing/types.ml[193,5847+56]..[193,5847+57])
                                        ]
                                  ]
                            ]
            ]
          structure_item (typing/types.ml[194,5907+2]..[194,5907+31])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[194,5907+6]..[194,5907+9])
                  Ppat_var "mem" (typing/types.ml[194,5907+6]..[194,5907+9])
                expression (typing/types.ml[194,5907+10]..[194,5907+31]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[194,5907+10]..[194,5907+11])
                    Ppat_var "x" (typing/types.ml[194,5907+10]..[194,5907+11])
                  expression (typing/types.ml[194,5907+14]..[194,5907+31])
                    Pexp_apply
                    expression (typing/types.ml[194,5907+14]..[194,5907+20])
                      Pexp_ident "subset" (typing/types.ml[194,5907+14]..[194,5907+20])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[194,5907+21]..[194,5907+31])
                          Pexp_apply
                          expression (typing/types.ml[194,5907+22]..[194,5907+28])
                            Pexp_ident "single" (typing/types.ml[194,5907+22]..[194,5907+28])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[194,5907+29]..[194,5907+30])
                                Pexp_ident "x" (typing/types.ml[194,5907+29]..[194,5907+30])
                          ]
                    ]
            ]
          structure_item (typing/types.ml[195,5939+2]..[195,5939+14])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[195,5939+6]..[195,5939+10])
                  Ppat_var "null" (typing/types.ml[195,5939+6]..[195,5939+10])
                expression (typing/types.ml[195,5939+13]..[195,5939+14])
                  Pexp_constant PConst_int (0,None)
            ]
          structure_item (typing/types.ml[196,5954+2]..[196,5954+17])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[196,5954+6]..[196,5954+13])
                  Ppat_var "unknown" (typing/types.ml[196,5954+6]..[196,5954+13])
                expression (typing/types.ml[196,5954+16]..[196,5954+17])
                  Pexp_constant PConst_int (7,None)
            ]
          structure_item (typing/types.ml[197,5972+2]..[197,5972+16])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[197,5972+6]..[197,5972+10])
                  Ppat_var "full" (typing/types.ml[197,5972+6]..[197,5972+10])
                expression (typing/types.ml[197,5972+13]..[197,5972+16])
                  Pexp_constant PConst_int (127,None)
            ]
          structure_item (typing/types.ml[198,5989+2]..[198,5989+62])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[198,5989+6]..[198,5989+15])
                  Ppat_var "covariant" (typing/types.ml[198,5989+6]..[198,5989+15])
                expression (typing/types.ml[198,5989+18]..[198,5989+62])
                  Pexp_apply
                  expression (typing/types.ml[198,5989+48]..[198,5989+51])
                    Pexp_ident "lor" (typing/types.ml[198,5989+48]..[198,5989+51])
                  [
                    <arg>
                    Nolabel
                      expression (typing/types.ml[198,5989+18]..[198,5989+47])
                        Pexp_apply
                        expression (typing/types.ml[198,5989+33]..[198,5989+36])
                          Pexp_ident "lor" (typing/types.ml[198,5989+33]..[198,5989+36])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[198,5989+18]..[198,5989+32])
                              Pexp_apply
                              expression (typing/types.ml[198,5989+18]..[198,5989+24])
                                Pexp_ident "single" (typing/types.ml[198,5989+18]..[198,5989+24])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[198,5989+25]..[198,5989+32])
                                    Pexp_construct "May_pos" (typing/types.ml[198,5989+25]..[198,5989+32])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (typing/types.ml[198,5989+37]..[198,5989+47])
                              Pexp_apply
                              expression (typing/types.ml[198,5989+37]..[198,5989+43])
                                Pexp_ident "single" (typing/types.ml[198,5989+37]..[198,5989+43])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[198,5989+44]..[198,5989+47])
                                    Pexp_construct "Pos" (typing/types.ml[198,5989+44]..[198,5989+47])
                                    None
                              ]
                        ]
                    <arg>
                    Nolabel
                      expression (typing/types.ml[198,5989+52]..[198,5989+62])
                        Pexp_apply
                        expression (typing/types.ml[198,5989+52]..[198,5989+58])
                          Pexp_ident "single" (typing/types.ml[198,5989+52]..[198,5989+58])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[198,5989+59]..[198,5989+62])
                              Pexp_construct "Inj" (typing/types.ml[198,5989+59]..[198,5989+62])
                              None
                        ]
                  ]
            ]
          structure_item (typing/types.ml[199,6052+2]..[200,6073+56])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[199,6052+6]..[199,6052+10])
                  Ppat_var "swap" (typing/types.ml[199,6052+6]..[199,6052+10])
                expression (typing/types.ml[199,6052+11]..[200,6073+56]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[199,6052+11]..[199,6052+13])
                    Ppat_var "f1" (typing/types.ml[199,6052+11]..[199,6052+13])
                  expression (typing/types.ml[199,6052+14]..[200,6073+56]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/types.ml[199,6052+14]..[199,6052+16])
                      Ppat_var "f2" (typing/types.ml[199,6052+14]..[199,6052+16])
                    expression (typing/types.ml[199,6052+17]..[200,6073+56]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/types.ml[199,6052+17]..[199,6052+18])
                        Ppat_var "v" (typing/types.ml[199,6052+17]..[199,6052+18])
                      expression (typing/types.ml[200,6073+4]..[200,6073+56])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/types.ml[200,6073+8]..[200,6073+10])
                              Ppat_var "v'" (typing/types.ml[200,6073+8]..[200,6073+10])
                            expression (typing/types.ml[200,6073+13]..[200,6073+32])
                              Pexp_apply
                              expression (typing/types.ml[200,6073+13]..[200,6073+16])
                                Pexp_ident "set" (typing/types.ml[200,6073+13]..[200,6073+16])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[200,6073+17]..[200,6073+19])
                                    Pexp_ident "f1" (typing/types.ml[200,6073+17]..[200,6073+19])
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[200,6073+20]..[200,6073+30])
                                    Pexp_apply
                                    expression (typing/types.ml[200,6073+21]..[200,6073+24])
                                      Pexp_ident "mem" (typing/types.ml[200,6073+21]..[200,6073+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/types.ml[200,6073+25]..[200,6073+27])
                                          Pexp_ident "f2" (typing/types.ml[200,6073+25]..[200,6073+27])
                                      <arg>
                                      Nolabel
                                        expression (typing/types.ml[200,6073+28]..[200,6073+29])
                                          Pexp_ident "v" (typing/types.ml[200,6073+28]..[200,6073+29])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[200,6073+31]..[200,6073+32])
                                    Pexp_ident "v" (typing/types.ml[200,6073+31]..[200,6073+32])
                              ]
                        ]
                        expression (typing/types.ml[200,6073+36]..[200,6073+56])
                          Pexp_apply
                          expression (typing/types.ml[200,6073+36]..[200,6073+39])
                            Pexp_ident "set" (typing/types.ml[200,6073+36]..[200,6073+39])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[200,6073+40]..[200,6073+42])
                                Pexp_ident "f2" (typing/types.ml[200,6073+40]..[200,6073+42])
                            <arg>
                            Nolabel
                              expression (typing/types.ml[200,6073+43]..[200,6073+53])
                                Pexp_apply
                                expression (typing/types.ml[200,6073+44]..[200,6073+47])
                                  Pexp_ident "mem" (typing/types.ml[200,6073+44]..[200,6073+47])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/types.ml[200,6073+48]..[200,6073+50])
                                      Pexp_ident "f1" (typing/types.ml[200,6073+48]..[200,6073+50])
                                  <arg>
                                  Nolabel
                                    expression (typing/types.ml[200,6073+51]..[200,6073+52])
                                      Pexp_ident "v" (typing/types.ml[200,6073+51]..[200,6073+52])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/types.ml[200,6073+54]..[200,6073+56])
                                Pexp_ident "v'" (typing/types.ml[200,6073+54]..[200,6073+56])
                          ]
            ]
          structure_item (typing/types.ml[201,6130+2]..[201,6130+57])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[201,6130+6]..[201,6130+15])
                  Ppat_var "conjugate" (typing/types.ml[201,6130+6]..[201,6130+15])
                expression (typing/types.ml[201,6130+16]..[201,6130+57]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[201,6130+16]..[201,6130+17])
                    Ppat_var "v" (typing/types.ml[201,6130+16]..[201,6130+17])
                  expression (typing/types.ml[201,6130+20]..[201,6130+57])
                    Pexp_apply
                    expression (typing/types.ml[201,6130+20]..[201,6130+24])
                      Pexp_ident "swap" (typing/types.ml[201,6130+20]..[201,6130+24])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[201,6130+25]..[201,6130+32])
                          Pexp_construct "May_pos" (typing/types.ml[201,6130+25]..[201,6130+32])
                          None
                      <arg>
                      Nolabel
                        expression (typing/types.ml[201,6130+33]..[201,6130+40])
                          Pexp_construct "May_neg" (typing/types.ml[201,6130+33]..[201,6130+40])
                          None
                      <arg>
                      Nolabel
                        expression (typing/types.ml[201,6130+41]..[201,6130+57])
                          Pexp_apply
                          expression (typing/types.ml[201,6130+42]..[201,6130+46])
                            Pexp_ident "swap" (typing/types.ml[201,6130+42]..[201,6130+46])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[201,6130+47]..[201,6130+50])
                                Pexp_construct "Pos" (typing/types.ml[201,6130+47]..[201,6130+50])
                                None
                            <arg>
                            Nolabel
                              expression (typing/types.ml[201,6130+51]..[201,6130+54])
                                Pexp_construct "Neg" (typing/types.ml[201,6130+51]..[201,6130+54])
                                None
                            <arg>
                            Nolabel
                              expression (typing/types.ml[201,6130+55]..[201,6130+56])
                                Pexp_ident "v" (typing/types.ml[201,6130+55]..[201,6130+56])
                          ]
                    ]
            ]
          structure_item (typing/types.ml[202,6188+2]..[202,6188+50])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[202,6188+6]..[202,6188+15])
                  Ppat_var "get_upper" (typing/types.ml[202,6188+6]..[202,6188+15])
                expression (typing/types.ml[202,6188+16]..[202,6188+50]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[202,6188+16]..[202,6188+17])
                    Ppat_var "v" (typing/types.ml[202,6188+16]..[202,6188+17])
                  expression (typing/types.ml[202,6188+20]..[202,6188+50])
                    Pexp_tuple
                    [
                      expression (typing/types.ml[202,6188+21]..[202,6188+34])
                        Pexp_apply
                        expression (typing/types.ml[202,6188+21]..[202,6188+24])
                          Pexp_ident "mem" (typing/types.ml[202,6188+21]..[202,6188+24])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[202,6188+25]..[202,6188+32])
                              Pexp_construct "May_pos" (typing/types.ml[202,6188+25]..[202,6188+32])
                              None
                          <arg>
                          Nolabel
                            expression (typing/types.ml[202,6188+33]..[202,6188+34])
                              Pexp_ident "v" (typing/types.ml[202,6188+33]..[202,6188+34])
                        ]
                      expression (typing/types.ml[202,6188+36]..[202,6188+49])
                        Pexp_apply
                        expression (typing/types.ml[202,6188+36]..[202,6188+39])
                          Pexp_ident "mem" (typing/types.ml[202,6188+36]..[202,6188+39])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[202,6188+40]..[202,6188+47])
                              Pexp_construct "May_neg" (typing/types.ml[202,6188+40]..[202,6188+47])
                              None
                          <arg>
                          Nolabel
                            expression (typing/types.ml[202,6188+48]..[202,6188+49])
                              Pexp_ident "v" (typing/types.ml[202,6188+48]..[202,6188+49])
                        ]
                    ]
            ]
          structure_item (typing/types.ml[203,6239+2]..[203,6239+64])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[203,6239+6]..[203,6239+15])
                  Ppat_var "get_lower" (typing/types.ml[203,6239+6]..[203,6239+15])
                expression (typing/types.ml[203,6239+16]..[203,6239+64]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[203,6239+16]..[203,6239+17])
                    Ppat_var "v" (typing/types.ml[203,6239+16]..[203,6239+17])
                  expression (typing/types.ml[203,6239+20]..[203,6239+64])
                    Pexp_tuple
                    [
                      expression (typing/types.ml[203,6239+21]..[203,6239+30])
                        Pexp_apply
                        expression (typing/types.ml[203,6239+21]..[203,6239+24])
                          Pexp_ident "mem" (typing/types.ml[203,6239+21]..[203,6239+24])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[203,6239+25]..[203,6239+28])
                              Pexp_construct "Pos" (typing/types.ml[203,6239+25]..[203,6239+28])
                              None
                          <arg>
                          Nolabel
                            expression (typing/types.ml[203,6239+29]..[203,6239+30])
                              Pexp_ident "v" (typing/types.ml[203,6239+29]..[203,6239+30])
                        ]
                      expression (typing/types.ml[203,6239+32]..[203,6239+41])
                        Pexp_apply
                        expression (typing/types.ml[203,6239+32]..[203,6239+35])
                          Pexp_ident "mem" (typing/types.ml[203,6239+32]..[203,6239+35])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[203,6239+36]..[203,6239+39])
                              Pexp_construct "Neg" (typing/types.ml[203,6239+36]..[203,6239+39])
                              None
                          <arg>
                          Nolabel
                            expression (typing/types.ml[203,6239+40]..[203,6239+41])
                              Pexp_ident "v" (typing/types.ml[203,6239+40]..[203,6239+41])
                        ]
                      expression (typing/types.ml[203,6239+43]..[203,6239+52])
                        Pexp_apply
                        expression (typing/types.ml[203,6239+43]..[203,6239+46])
                          Pexp_ident "mem" (typing/types.ml[203,6239+43]..[203,6239+46])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[203,6239+47]..[203,6239+50])
                              Pexp_construct "Inv" (typing/types.ml[203,6239+47]..[203,6239+50])
                              None
                          <arg>
                          Nolabel
                            expression (typing/types.ml[203,6239+51]..[203,6239+52])
                              Pexp_ident "v" (typing/types.ml[203,6239+51]..[203,6239+52])
                        ]
                      expression (typing/types.ml[203,6239+54]..[203,6239+63])
                        Pexp_apply
                        expression (typing/types.ml[203,6239+54]..[203,6239+57])
                          Pexp_ident "mem" (typing/types.ml[203,6239+54]..[203,6239+57])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[203,6239+58]..[203,6239+61])
                              Pexp_construct "Inj" (typing/types.ml[203,6239+58]..[203,6239+61])
                              None
                          <arg>
                          Nolabel
                            expression (typing/types.ml[203,6239+62]..[203,6239+63])
                              Pexp_ident "v" (typing/types.ml[203,6239+62]..[203,6239+63])
                        ]
                    ]
            ]
          structure_item (typing/types.ml[204,6304+2]..[206,6415+31])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[204,6304+6]..[204,6304+23])
                  Ppat_var "unknown_signature" (typing/types.ml[204,6304+6]..[204,6304+23])
                expression (typing/types.ml[204,6304+24]..[206,6415+31]) ghost
                  Pexp_fun
                  Labelled "injective"
                  None
                  pattern (typing/types.ml[204,6304+25]..[204,6304+34])
                    Ppat_var "injective" (typing/types.ml[204,6304+25]..[204,6304+34])
                  expression (typing/types.ml[204,6304+35]..[206,6415+31]) ghost
                    Pexp_fun
                    Labelled "arity"
                    None
                    pattern (typing/types.ml[204,6304+36]..[204,6304+41])
                      Ppat_var "arity" (typing/types.ml[204,6304+36]..[204,6304+41])
                    expression (typing/types.ml[205,6348+4]..[206,6415+31])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/types.ml[205,6348+8]..[205,6348+9])
                            Ppat_var "v" (typing/types.ml[205,6348+8]..[205,6348+9])
                          expression (typing/types.ml[205,6348+12]..[205,6348+63])
                            Pexp_ifthenelse
                            expression (typing/types.ml[205,6348+15]..[205,6348+24])
                              Pexp_ident "injective" (typing/types.ml[205,6348+15]..[205,6348+24])
                            expression (typing/types.ml[205,6348+30]..[205,6348+50])
                              Pexp_apply
                              expression (typing/types.ml[205,6348+30]..[205,6348+33])
                                Pexp_ident "set" (typing/types.ml[205,6348+30]..[205,6348+33])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[205,6348+34]..[205,6348+37])
                                    Pexp_construct "Inj" (typing/types.ml[205,6348+34]..[205,6348+37])
                                    None
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[205,6348+38]..[205,6348+42])
                                    Pexp_construct "true" (typing/types.ml[205,6348+38]..[205,6348+42])
                                    None
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[205,6348+43]..[205,6348+50])
                                    Pexp_ident "unknown" (typing/types.ml[205,6348+43]..[205,6348+50])
                              ]
                            Some
                              expression (typing/types.ml[205,6348+56]..[205,6348+63])
                                Pexp_ident "unknown" (typing/types.ml[205,6348+56]..[205,6348+63])
                      ]
                      expression (typing/types.ml[206,6415+4]..[206,6415+31])
                        Pexp_apply
                        expression (typing/types.ml[206,6415+4]..[206,6415+23])
                          Pexp_ident "Misc.replicate_list" (typing/types.ml[206,6415+4]..[206,6415+23])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[206,6415+24]..[206,6415+25])
                              Pexp_ident "v" (typing/types.ml[206,6415+24]..[206,6415+25])
                          <arg>
                          Nolabel
                            expression (typing/types.ml[206,6415+26]..[206,6415+31])
                              Pexp_ident "arity" (typing/types.ml[206,6415+26]..[206,6415+31])
                        ]
            ]
        ]
  structure_item (typing/types.ml[209,6452+0]..[233,7220+3])
    Pstr_module
    "Separability" (typing/types.ml[209,6452+7]..[209,6452+19])
      module_expr (typing/types.ml[209,6452+22]..[233,7220+3])
        Pmod_structure
        [
          structure_item (typing/types.ml[210,6481+2]..[210,6481+30])
            Pstr_type Rec
            [
              type_declaration "t" (typing/types.ml[210,6481+7]..[210,6481+8]) (typing/types.ml[210,6481+2]..[210,6481+30])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (typing/types.ml[210,6481+11]..[210,6481+14])
                        "Ind" (typing/types.ml[210,6481+11]..[210,6481+14])
                        []
                        None
                      (typing/types.ml[210,6481+15]..[210,6481+20])
                        "Sep" (typing/types.ml[210,6481+17]..[210,6481+20])
                        []
                        None
                      (typing/types.ml[210,6481+21]..[210,6481+30])
                        "Deepsep" (typing/types.ml[210,6481+23]..[210,6481+30])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (typing/types.ml[211,6512+2]..[211,6512+25])
            Pstr_type Rec
            [
              type_declaration "signature" (typing/types.ml[211,6512+7]..[211,6512+16]) (typing/types.ml[211,6512+2]..[211,6512+25])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (typing/types.ml[211,6512+19]..[211,6512+25])
                      Ptyp_constr "list" (typing/types.ml[211,6512+21]..[211,6512+25])
                      [
                        core_type (typing/types.ml[211,6512+19]..[211,6512+20])
                          Ptyp_constr "t" (typing/types.ml[211,6512+19]..[211,6512+20])
                          []
                      ]
            ]
          structure_item (typing/types.ml[212,6538+2]..[212,6538+32])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[212,6538+6]..[212,6538+8])
                  Ppat_var "eq" (typing/types.ml[212,6538+6]..[212,6538+8])
                expression (typing/types.ml[212,6538+9]..[212,6538+32]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[212,6538+9]..[212,6538+17])
                    Ppat_constraint
                    pattern (typing/types.ml[212,6538+10]..[212,6538+12])
                      Ppat_var "m1" (typing/types.ml[212,6538+10]..[212,6538+12])
                    core_type (typing/types.ml[212,6538+15]..[212,6538+16])
                      Ptyp_constr "t" (typing/types.ml[212,6538+15]..[212,6538+16])
                      []
                  expression (typing/types.ml[212,6538+18]..[212,6538+32]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/types.ml[212,6538+18]..[212,6538+20])
                      Ppat_var "m2" (typing/types.ml[212,6538+18]..[212,6538+20])
                    expression (typing/types.ml[212,6538+23]..[212,6538+32])
                      Pexp_apply
                      expression (typing/types.ml[212,6538+27]..[212,6538+28])
                        Pexp_ident "=" (typing/types.ml[212,6538+27]..[212,6538+28])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[212,6538+24]..[212,6538+26])
                            Pexp_ident "m1" (typing/types.ml[212,6538+24]..[212,6538+26])
                        <arg>
                        Nolabel
                          expression (typing/types.ml[212,6538+29]..[212,6538+31])
                            Pexp_ident "m2" (typing/types.ml[212,6538+29]..[212,6538+31])
                      ]
            ]
          structure_item (typing/types.ml[213,6571+2]..[216,6623+18])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[213,6571+6]..[213,6571+10])
                  Ppat_var "rank" (typing/types.ml[213,6571+6]..[213,6571+10])
                expression (typing/types.ml[213,6571+13]..[216,6623+18])
                  Pexp_function
                  [
                    <case>
                      pattern (typing/types.ml[214,6593+6]..[214,6593+9])
                        Ppat_construct "Ind" (typing/types.ml[214,6593+6]..[214,6593+9])
                        None
                      expression (typing/types.ml[214,6593+13]..[214,6593+14])
                        Pexp_constant PConst_int (0,None)
                    <case>
                      pattern (typing/types.ml[215,6608+6]..[215,6608+9])
                        Ppat_construct "Sep" (typing/types.ml[215,6608+6]..[215,6608+9])
                        None
                      expression (typing/types.ml[215,6608+13]..[215,6608+14])
                        Pexp_constant PConst_int (1,None)
                    <case>
                      pattern (typing/types.ml[216,6623+6]..[216,6623+13])
                        Ppat_construct "Deepsep" (typing/types.ml[216,6623+6]..[216,6623+13])
                        None
                      expression (typing/types.ml[216,6623+17]..[216,6623+18])
                        Pexp_constant PConst_int (2,None)
                  ]
            ]
          structure_item (typing/types.ml[217,6642+2]..[217,6642+49])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[217,6642+6]..[217,6642+13])
                  Ppat_var "compare" (typing/types.ml[217,6642+6]..[217,6642+13])
                expression (typing/types.ml[217,6642+14]..[217,6642+49]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[217,6642+14]..[217,6642+16])
                    Ppat_var "m1" (typing/types.ml[217,6642+14]..[217,6642+16])
                  expression (typing/types.ml[217,6642+17]..[217,6642+49]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/types.ml[217,6642+17]..[217,6642+19])
                      Ppat_var "m2" (typing/types.ml[217,6642+17]..[217,6642+19])
                    expression (typing/types.ml[217,6642+22]..[217,6642+49])
                      Pexp_apply
                      expression (typing/types.ml[217,6642+22]..[217,6642+29])
                        Pexp_ident "compare" (typing/types.ml[217,6642+22]..[217,6642+29])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[217,6642+30]..[217,6642+39])
                            Pexp_apply
                            expression (typing/types.ml[217,6642+31]..[217,6642+35])
                              Pexp_ident "rank" (typing/types.ml[217,6642+31]..[217,6642+35])
                            [
                              <arg>
                              Nolabel
                                expression (typing/types.ml[217,6642+36]..[217,6642+38])
                                  Pexp_ident "m1" (typing/types.ml[217,6642+36]..[217,6642+38])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/types.ml[217,6642+40]..[217,6642+49])
                            Pexp_apply
                            expression (typing/types.ml[217,6642+41]..[217,6642+45])
                              Pexp_ident "rank" (typing/types.ml[217,6642+41]..[217,6642+45])
                            [
                              <arg>
                              Nolabel
                                expression (typing/types.ml[217,6642+46]..[217,6642+48])
                                  Pexp_ident "m2" (typing/types.ml[217,6642+46]..[217,6642+48])
                            ]
                      ]
            ]
          structure_item (typing/types.ml[218,6692+2]..[218,6692+55])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[218,6692+6]..[218,6692+9])
                  Ppat_var "max" (typing/types.ml[218,6692+6]..[218,6692+9])
                expression (typing/types.ml[218,6692+10]..[218,6692+55]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[218,6692+10]..[218,6692+12])
                    Ppat_var "m1" (typing/types.ml[218,6692+10]..[218,6692+12])
                  expression (typing/types.ml[218,6692+13]..[218,6692+55]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/types.ml[218,6692+13]..[218,6692+15])
                      Ppat_var "m2" (typing/types.ml[218,6692+13]..[218,6692+15])
                    expression (typing/types.ml[218,6692+18]..[218,6692+55])
                      Pexp_ifthenelse
                      expression (typing/types.ml[218,6692+21]..[218,6692+39])
                        Pexp_apply
                        expression (typing/types.ml[218,6692+29]..[218,6692+31])
                          Pexp_ident ">=" (typing/types.ml[218,6692+29]..[218,6692+31])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[218,6692+21]..[218,6692+28])
                              Pexp_apply
                              expression (typing/types.ml[218,6692+21]..[218,6692+25])
                                Pexp_ident "rank" (typing/types.ml[218,6692+21]..[218,6692+25])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[218,6692+26]..[218,6692+28])
                                    Pexp_ident "m1" (typing/types.ml[218,6692+26]..[218,6692+28])
                              ]
                          <arg>
                          Nolabel
                            expression (typing/types.ml[218,6692+32]..[218,6692+39])
                              Pexp_apply
                              expression (typing/types.ml[218,6692+32]..[218,6692+36])
                                Pexp_ident "rank" (typing/types.ml[218,6692+32]..[218,6692+36])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[218,6692+37]..[218,6692+39])
                                    Pexp_ident "m2" (typing/types.ml[218,6692+37]..[218,6692+39])
                              ]
                        ]
                      expression (typing/types.ml[218,6692+45]..[218,6692+47])
                        Pexp_ident "m1" (typing/types.ml[218,6692+45]..[218,6692+47])
                      Some
                        expression (typing/types.ml[218,6692+53]..[218,6692+55])
                          Pexp_ident "m2" (typing/types.ml[218,6692+53]..[218,6692+55])
            ]
          structure_item (typing/types.ml[220,6749+2]..[223,6852+45])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[220,6749+6]..[220,6749+11])
                  Ppat_var "print" (typing/types.ml[220,6749+6]..[220,6749+11])
                expression (typing/types.ml[220,6749+12]..[223,6852+45]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[220,6749+12]..[220,6749+15])
                    Ppat_var "ppf" (typing/types.ml[220,6749+12]..[220,6749+15])
                  expression (typing/types.ml[220,6749+18]..[223,6852+45])
                    Pexp_function
                    [
                      <case>
                        pattern (typing/types.ml[221,6776+6]..[221,6776+9])
                          Ppat_construct "Ind" (typing/types.ml[221,6776+6]..[221,6776+9])
                          None
                        expression (typing/types.ml[221,6776+13]..[221,6776+37])
                          Pexp_apply
                          expression (typing/types.ml[221,6776+13]..[221,6776+27])
                            Pexp_ident "Format.fprintf" (typing/types.ml[221,6776+13]..[221,6776+27])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[221,6776+28]..[221,6776+31])
                                Pexp_ident "ppf" (typing/types.ml[221,6776+28]..[221,6776+31])
                            <arg>
                            Nolabel
                              expression (typing/types.ml[221,6776+32]..[221,6776+37])
                                Pexp_constant PConst_string("Ind",(typing/types.ml[221,6776+33]..[221,6776+36]),None)
                          ]
                      <case>
                        pattern (typing/types.ml[222,6814+6]..[222,6814+9])
                          Ppat_construct "Sep" (typing/types.ml[222,6814+6]..[222,6814+9])
                          None
                        expression (typing/types.ml[222,6814+13]..[222,6814+37])
                          Pexp_apply
                          expression (typing/types.ml[222,6814+13]..[222,6814+27])
                            Pexp_ident "Format.fprintf" (typing/types.ml[222,6814+13]..[222,6814+27])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[222,6814+28]..[222,6814+31])
                                Pexp_ident "ppf" (typing/types.ml[222,6814+28]..[222,6814+31])
                            <arg>
                            Nolabel
                              expression (typing/types.ml[222,6814+32]..[222,6814+37])
                                Pexp_constant PConst_string("Sep",(typing/types.ml[222,6814+33]..[222,6814+36]),None)
                          ]
                      <case>
                        pattern (typing/types.ml[223,6852+6]..[223,6852+13])
                          Ppat_construct "Deepsep" (typing/types.ml[223,6852+6]..[223,6852+13])
                          None
                        expression (typing/types.ml[223,6852+17]..[223,6852+45])
                          Pexp_apply
                          expression (typing/types.ml[223,6852+17]..[223,6852+31])
                            Pexp_ident "Format.fprintf" (typing/types.ml[223,6852+17]..[223,6852+31])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[223,6852+32]..[223,6852+35])
                                Pexp_ident "ppf" (typing/types.ml[223,6852+32]..[223,6852+35])
                            <arg>
                            Nolabel
                              expression (typing/types.ml[223,6852+36]..[223,6852+45])
                                Pexp_constant PConst_string("Deepsep",(typing/types.ml[223,6852+37]..[223,6852+44]),None)
                          ]
                    ]
            ]
          structure_item (typing/types.ml[225,6899+2]..[228,7019+48])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[225,6899+6]..[225,6899+21])
                  Ppat_var "print_signature" (typing/types.ml[225,6899+6]..[225,6899+21])
                expression (typing/types.ml[225,6899+22]..[228,7019+48]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[225,6899+22]..[225,6899+25])
                    Ppat_var "ppf" (typing/types.ml[225,6899+22]..[225,6899+25])
                  expression (typing/types.ml[225,6899+26]..[228,7019+48]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/types.ml[225,6899+26]..[225,6899+31])
                      Ppat_var "modes" (typing/types.ml[225,6899+26]..[225,6899+31])
                    expression (typing/types.ml[226,6933+4]..[228,7019+48])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/types.ml[226,6933+8]..[226,6933+14])
                            Ppat_var "pp_sep" (typing/types.ml[226,6933+8]..[226,6933+14])
                          expression (typing/types.ml[226,6933+15]..[226,6933+48]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/types.ml[226,6933+15]..[226,6933+18])
                              Ppat_var "ppf" (typing/types.ml[226,6933+15]..[226,6933+18])
                            expression (typing/types.ml[226,6933+19]..[226,6933+48]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/types.ml[226,6933+19]..[226,6933+21])
                                Ppat_construct "()" (typing/types.ml[226,6933+19]..[226,6933+21])
                                None
                              expression (typing/types.ml[226,6933+24]..[226,6933+48])
                                Pexp_apply
                                expression (typing/types.ml[226,6933+24]..[226,6933+38])
                                  Pexp_ident "Format.fprintf" (typing/types.ml[226,6933+24]..[226,6933+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/types.ml[226,6933+39]..[226,6933+42])
                                      Pexp_ident "ppf" (typing/types.ml[226,6933+39]..[226,6933+42])
                                  <arg>
                                  Nolabel
                                    expression (typing/types.ml[226,6933+43]..[226,6933+48])
                                      Pexp_constant PConst_string(",@,",(typing/types.ml[226,6933+44]..[226,6933+47]),None)
                                ]
                      ]
                      expression (typing/types.ml[227,6985+4]..[228,7019+48])
                        Pexp_apply
                        expression (typing/types.ml[227,6985+4]..[227,6985+18])
                          Pexp_ident "Format.fprintf" (typing/types.ml[227,6985+4]..[227,6985+18])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[227,6985+19]..[227,6985+22])
                              Pexp_ident "ppf" (typing/types.ml[227,6985+19]..[227,6985+22])
                          <arg>
                          Nolabel
                            expression (typing/types.ml[227,6985+23]..[227,6985+33])
                              Pexp_constant PConst_string("@[(%a)@]",(typing/types.ml[227,6985+24]..[227,6985+32]),None)
                          <arg>
                          Nolabel
                            expression (typing/types.ml[228,7019+6]..[228,7019+42])
                              Pexp_apply
                              expression (typing/types.ml[228,7019+7]..[228,7019+27])
                                Pexp_ident "Format.pp_print_list" (typing/types.ml[228,7019+7]..[228,7019+27])
                              [
                                <arg>
                                Labelled "pp_sep"
                                  expression (typing/types.ml[228,7019+29]..[228,7019+35])
                                    Pexp_ident "pp_sep" (typing/types.ml[228,7019+29]..[228,7019+35])
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[228,7019+36]..[228,7019+41])
                                    Pexp_ident "print" (typing/types.ml[228,7019+36]..[228,7019+41])
                              ]
                          <arg>
                          Nolabel
                            expression (typing/types.ml[228,7019+43]..[228,7019+48])
                              Pexp_ident "modes" (typing/types.ml[228,7019+43]..[228,7019+48])
                        ]
            ]
          structure_item (typing/types.ml[230,7069+2]..[232,7177+42])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[230,7069+6]..[230,7069+23])
                  Ppat_var "default_signature" (typing/types.ml[230,7069+6]..[230,7069+23])
                expression (typing/types.ml[230,7069+24]..[232,7177+42]) ghost
                  Pexp_fun
                  Labelled "arity"
                  None
                  pattern (typing/types.ml[230,7069+25]..[230,7069+30])
                    Ppat_var "arity" (typing/types.ml[230,7069+25]..[230,7069+30])
                  expression (typing/types.ml[231,7102+4]..[232,7177+42])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/types.ml[231,7102+8]..[231,7102+20])
                          Ppat_var "default_mode" (typing/types.ml[231,7102+8]..[231,7102+20])
                        expression (typing/types.ml[231,7102+23]..[231,7102+71])
                          Pexp_ifthenelse
                          expression (typing/types.ml[231,7102+26]..[231,7102+49])
                            Pexp_ident "Config.flat_float_array" (typing/types.ml[231,7102+26]..[231,7102+49])
                          expression (typing/types.ml[231,7102+55]..[231,7102+62])
                            Pexp_construct "Deepsep" (typing/types.ml[231,7102+55]..[231,7102+62])
                            None
                          Some
                            expression (typing/types.ml[231,7102+68]..[231,7102+71])
                              Pexp_construct "Ind" (typing/types.ml[231,7102+68]..[231,7102+71])
                              None
                    ]
                    expression (typing/types.ml[232,7177+4]..[232,7177+42])
                      Pexp_apply
                      expression (typing/types.ml[232,7177+4]..[232,7177+23])
                        Pexp_ident "Misc.replicate_list" (typing/types.ml[232,7177+4]..[232,7177+23])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[232,7177+24]..[232,7177+36])
                            Pexp_ident "default_mode" (typing/types.ml[232,7177+24]..[232,7177+36])
                        <arg>
                        Nolabel
                          expression (typing/types.ml[232,7177+37]..[232,7177+42])
                            Pexp_ident "arity" (typing/types.ml[232,7177+37]..[232,7177+42])
                      ]
            ]
        ]
  structure_item (typing/types.ml[237,7249+0]..[295,8998+41])
    Pstr_type Rec
    [
      type_declaration "type_declaration" (typing/types.ml[237,7249+5]..[237,7249+21]) (typing/types.ml[237,7249+0]..[252,7725+2])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.ml[238,7273+4]..[238,7273+32])
                Immutable
                "type_params" (typing/types.ml[238,7273+4]..[238,7273+15])                core_type (typing/types.ml[238,7273+17]..[238,7273+31])
                  Ptyp_constr "list" (typing/types.ml[238,7273+27]..[238,7273+31])
                  [
                    core_type (typing/types.ml[238,7273+17]..[238,7273+26])
                      Ptyp_constr "type_expr" (typing/types.ml[238,7273+17]..[238,7273+26])
                      []
                  ]
              (typing/types.ml[239,7306+4]..[239,7306+20])
                Immutable
                "type_arity" (typing/types.ml[239,7306+4]..[239,7306+14])                core_type (typing/types.ml[239,7306+16]..[239,7306+19])
                  Ptyp_constr "int" (typing/types.ml[239,7306+16]..[239,7306+19])
                  []
              (typing/types.ml[240,7327+4]..[240,7327+30])
                Immutable
                "type_kind" (typing/types.ml[240,7327+4]..[240,7327+13])                core_type (typing/types.ml[240,7327+15]..[240,7327+29])
                  Ptyp_constr "type_decl_kind" (typing/types.ml[240,7327+15]..[240,7327+29])
                  []
              (typing/types.ml[241,7358+4]..[241,7358+31])
                Immutable
                "type_private" (typing/types.ml[241,7358+4]..[241,7358+16])                core_type (typing/types.ml[241,7358+18]..[241,7358+30])
                  Ptyp_constr "private_flag" (typing/types.ml[241,7358+18]..[241,7358+30])
                  []
              (typing/types.ml[242,7390+4]..[242,7390+36])
                Immutable
                "type_manifest" (typing/types.ml[242,7390+4]..[242,7390+17])                core_type (typing/types.ml[242,7390+19]..[242,7390+35])
                  Ptyp_constr "option" (typing/types.ml[242,7390+29]..[242,7390+35])
                  [
                    core_type (typing/types.ml[242,7390+19]..[242,7390+28])
                      Ptyp_constr "type_expr" (typing/types.ml[242,7390+19]..[242,7390+28])
                      []
                  ]
              (typing/types.ml[243,7427+4]..[243,7427+35])
                Immutable
                "type_variance" (typing/types.ml[243,7427+4]..[243,7427+17])                core_type (typing/types.ml[243,7427+19]..[243,7427+34])
                  Ptyp_constr "list" (typing/types.ml[243,7427+30]..[243,7427+34])
                  [
                    core_type (typing/types.ml[243,7427+19]..[243,7427+29])
                      Ptyp_constr "Variance.t" (typing/types.ml[243,7427+19]..[243,7427+29])
                      []
                  ]
              (typing/types.ml[244,7463+4]..[244,7463+43])
                Immutable
                "type_separability" (typing/types.ml[244,7463+4]..[244,7463+21])                core_type (typing/types.ml[244,7463+23]..[244,7463+42])
                  Ptyp_constr "list" (typing/types.ml[244,7463+38]..[244,7463+42])
                  [
                    core_type (typing/types.ml[244,7463+23]..[244,7463+37])
                      Ptyp_constr "Separability.t" (typing/types.ml[244,7463+23]..[244,7463+37])
                      []
                  ]
              (typing/types.ml[245,7507+4]..[245,7507+26])
                Immutable
                "type_is_newtype" (typing/types.ml[245,7507+4]..[245,7507+19])                core_type (typing/types.ml[245,7507+21]..[245,7507+25])
                  Ptyp_constr "bool" (typing/types.ml[245,7507+21]..[245,7507+25])
                  []
              (typing/types.ml[246,7534+4]..[246,7534+30])
                Immutable
                "type_expansion_scope" (typing/types.ml[246,7534+4]..[246,7534+24])                core_type (typing/types.ml[246,7534+26]..[246,7534+29])
                  Ptyp_constr "int" (typing/types.ml[246,7534+26]..[246,7534+29])
                  []
              (typing/types.ml[247,7565+4]..[247,7565+25])
                Immutable
                "type_loc" (typing/types.ml[247,7565+4]..[247,7565+12])                core_type (typing/types.ml[247,7565+14]..[247,7565+24])
                  Ptyp_constr "Location.t" (typing/types.ml[247,7565+14]..[247,7565+24])
                  []
              (typing/types.ml[248,7591+4]..[248,7591+42])
                Immutable
                "type_attributes" (typing/types.ml[248,7591+4]..[248,7591+19])                core_type (typing/types.ml[248,7591+21]..[248,7591+41])
                  Ptyp_constr "Parsetree.attributes" (typing/types.ml[248,7591+21]..[248,7591+41])
                  []
              (typing/types.ml[249,7634+4]..[249,7634+37])
                Immutable
                "type_immediate" (typing/types.ml[249,7634+4]..[249,7634+18])                core_type (typing/types.ml[249,7634+20]..[249,7634+36])
                  Ptyp_constr "Type_immediacy.t" (typing/types.ml[249,7634+20]..[249,7634+36])
                  []
              (typing/types.ml[250,7672+4]..[250,7672+31])
                Immutable
                "type_unboxed_default" (typing/types.ml[250,7672+4]..[250,7672+24])                core_type (typing/types.ml[250,7672+26]..[250,7672+30])
                  Ptyp_constr "bool" (typing/types.ml[250,7672+26]..[250,7672+30])
                  []
              (typing/types.ml[251,7704+4]..[251,7704+20])
                Immutable
                "type_uid" (typing/types.ml[251,7704+4]..[251,7704+12])                core_type (typing/types.ml[251,7704+14]..[251,7704+19])
                  Ptyp_constr "Uid.t" (typing/types.ml[251,7704+14]..[251,7704+19])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "type_decl_kind" (typing/types.ml[254,7729+4]..[254,7729+18]) (typing/types.ml[254,7729+0]..[254,7729+75])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/types.ml[254,7729+21]..[254,7729+75])
              Ptyp_constr "type_kind" (typing/types.ml[254,7729+66]..[254,7729+75])
              [
                core_type (typing/types.ml[254,7729+22]..[254,7729+39])
                  Ptyp_constr "label_declaration" (typing/types.ml[254,7729+22]..[254,7729+39])
                  []
                core_type (typing/types.ml[254,7729+41]..[254,7729+64])
                  Ptyp_constr "constructor_declaration" (typing/types.ml[254,7729+41]..[254,7729+64])
                  []
              ]
      type_declaration "type_kind" (typing/types.ml[256,7806+18]..[256,7806+27]) (typing/types.ml[256,7806+0]..[260,7963+13])
        ptype_params =
          [
            core_type (typing/types.ml[256,7806+5]..[256,7806+9])
              Ptyp_var lbl
            core_type (typing/types.ml[256,7806+11]..[256,7806+16])
              Ptyp_var cstr
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[257,7836+4]..[257,7836+17])
                "Type_abstract" (typing/types.ml[257,7836+4]..[257,7836+17])
                []
                None
              (typing/types.ml[258,7854+2]..[258,7854+52])
                "Type_record" (typing/types.ml[258,7854+4]..[258,7854+15])
                [
                  core_type (typing/types.ml[258,7854+19]..[258,7854+28])
                    Ptyp_constr "list" (typing/types.ml[258,7854+24]..[258,7854+28])
                    [
                      core_type (typing/types.ml[258,7854+19]..[258,7854+23])
                        Ptyp_var lbl
                    ]
                  core_type (typing/types.ml[258,7854+31]..[258,7854+52])
                    Ptyp_constr "record_representation" (typing/types.ml[258,7854+31]..[258,7854+52])
                    []
                ]
                None
              (typing/types.ml[259,7907+2]..[259,7907+55])
                "Type_variant" (typing/types.ml[259,7907+4]..[259,7907+16])
                [
                  core_type (typing/types.ml[259,7907+20]..[259,7907+30])
                    Ptyp_constr "list" (typing/types.ml[259,7907+26]..[259,7907+30])
                    [
                      core_type (typing/types.ml[259,7907+20]..[259,7907+25])
                        Ptyp_var cstr
                    ]
                  core_type (typing/types.ml[259,7907+33]..[259,7907+55])
                    Ptyp_constr "variant_representation" (typing/types.ml[259,7907+33]..[259,7907+55])
                    []
                ]
                None
              (typing/types.ml[260,7963+2]..[260,7963+13])
                "Type_open" (typing/types.ml[260,7963+4]..[260,7963+13])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "record_representation" (typing/types.ml[262,7978+4]..[262,7978+25]) (typing/types.ml[262,7978+0]..[267,8291+30])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[263,8006+4]..[263,8006+18])
                "Record_regular" (typing/types.ml[263,8006+4]..[263,8006+18])
                []
                None
              (typing/types.ml[264,8082+2]..[264,8082+16])
                "Record_float" (typing/types.ml[264,8082+4]..[264,8082+16])
                []
                None
              (typing/types.ml[265,8150+2]..[265,8150+26])
                "Record_unboxed" (typing/types.ml[265,8150+4]..[265,8150+18])
                [
                  core_type (typing/types.ml[265,8150+22]..[265,8150+26])
                    Ptyp_constr "bool" (typing/types.ml[265,8150+22]..[265,8150+26])
                    []
                ]
                None
              (typing/types.ml[266,8230+2]..[266,8230+25])
                "Record_inlined" (typing/types.ml[266,8230+4]..[266,8230+18])
                [
                  core_type (typing/types.ml[266,8230+22]..[266,8230+25])
                    Ptyp_constr "int" (typing/types.ml[266,8230+22]..[266,8230+25])
                    []
                ]
                None
              (typing/types.ml[267,8291+2]..[267,8291+30])
                "Record_extension" (typing/types.ml[267,8291+4]..[267,8291+20])
                [
                  core_type (typing/types.ml[267,8291+24]..[267,8291+30])
                    Ptyp_constr "Path.t" (typing/types.ml[267,8291+24]..[267,8291+30])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "variant_representation" (typing/types.ml[269,8369+4]..[269,8369+26]) (typing/types.ml[269,8369+0]..[271,8464+19])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[270,8398+4]..[270,8398+19])
                "Variant_regular" (typing/types.ml[270,8398+4]..[270,8398+19])
                []
                None
              (typing/types.ml[271,8464+2]..[271,8464+19])
                "Variant_unboxed" (typing/types.ml[271,8464+4]..[271,8464+19])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "label_declaration" (typing/types.ml[273,8537+4]..[273,8537+21]) (typing/types.ml[273,8537+0]..[281,8723+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.ml[275,8565+4]..[275,8565+19])
                Immutable
                "ld_id" (typing/types.ml[275,8565+4]..[275,8565+9])                core_type (typing/types.ml[275,8565+11]..[275,8565+18])
                  Ptyp_constr "Ident.t" (typing/types.ml[275,8565+11]..[275,8565+18])
                  []
              (typing/types.ml[276,8585+4]..[276,8585+29])
                Immutable
                "ld_mutable" (typing/types.ml[276,8585+4]..[276,8585+14])                core_type (typing/types.ml[276,8585+16]..[276,8585+28])
                  Ptyp_constr "mutable_flag" (typing/types.ml[276,8585+16]..[276,8585+28])
                  []
              (typing/types.ml[277,8615+4]..[277,8615+23])
                Immutable
                "ld_type" (typing/types.ml[277,8615+4]..[277,8615+11])                core_type (typing/types.ml[277,8615+13]..[277,8615+22])
                  Ptyp_constr "type_expr" (typing/types.ml[277,8615+13]..[277,8615+22])
                  []
              (typing/types.ml[278,8639+4]..[278,8639+23])
                Immutable
                "ld_loc" (typing/types.ml[278,8639+4]..[278,8639+10])                core_type (typing/types.ml[278,8639+12]..[278,8639+22])
                  Ptyp_constr "Location.t" (typing/types.ml[278,8639+12]..[278,8639+22])
                  []
              (typing/types.ml[279,8663+4]..[279,8663+40])
                Immutable
                "ld_attributes" (typing/types.ml[279,8663+4]..[279,8663+17])                core_type (typing/types.ml[279,8663+19]..[279,8663+39])
                  Ptyp_constr "Parsetree.attributes" (typing/types.ml[279,8663+19]..[279,8663+39])
                  []
              (typing/types.ml[280,8704+4]..[280,8704+18])
                Immutable
                "ld_uid" (typing/types.ml[280,8704+4]..[280,8704+10])                core_type (typing/types.ml[280,8704+12]..[280,8704+17])
                  Ptyp_constr "Uid.t" (typing/types.ml[280,8704+12]..[280,8704+17])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "constructor_declaration" (typing/types.ml[283,8728+4]..[283,8728+27]) (typing/types.ml[283,8728+0]..[291,8932+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.ml[285,8762+4]..[285,8762+19])
                Immutable
                "cd_id" (typing/types.ml[285,8762+4]..[285,8762+9])                core_type (typing/types.ml[285,8762+11]..[285,8762+18])
                  Ptyp_constr "Ident.t" (typing/types.ml[285,8762+11]..[285,8762+18])
                  []
              (typing/types.ml[286,8782+4]..[286,8782+35])
                Immutable
                "cd_args" (typing/types.ml[286,8782+4]..[286,8782+11])                core_type (typing/types.ml[286,8782+13]..[286,8782+34])
                  Ptyp_constr "constructor_arguments" (typing/types.ml[286,8782+13]..[286,8782+34])
                  []
              (typing/types.ml[287,8818+4]..[287,8818+29])
                Immutable
                "cd_res" (typing/types.ml[287,8818+4]..[287,8818+10])                core_type (typing/types.ml[287,8818+12]..[287,8818+28])
                  Ptyp_constr "option" (typing/types.ml[287,8818+22]..[287,8818+28])
                  [
                    core_type (typing/types.ml[287,8818+12]..[287,8818+21])
                      Ptyp_constr "type_expr" (typing/types.ml[287,8818+12]..[287,8818+21])
                      []
                  ]
              (typing/types.ml[288,8848+4]..[288,8848+23])
                Immutable
                "cd_loc" (typing/types.ml[288,8848+4]..[288,8848+10])                core_type (typing/types.ml[288,8848+12]..[288,8848+22])
                  Ptyp_constr "Location.t" (typing/types.ml[288,8848+12]..[288,8848+22])
                  []
              (typing/types.ml[289,8872+4]..[289,8872+40])
                Immutable
                "cd_attributes" (typing/types.ml[289,8872+4]..[289,8872+17])                core_type (typing/types.ml[289,8872+19]..[289,8872+39])
                  Ptyp_constr "Parsetree.attributes" (typing/types.ml[289,8872+19]..[289,8872+39])
                  []
              (typing/types.ml[290,8913+4]..[290,8913+18])
                Immutable
                "cd_uid" (typing/types.ml[290,8913+4]..[290,8913+10])                core_type (typing/types.ml[290,8913+12]..[290,8913+17])
                  Ptyp_constr "Uid.t" (typing/types.ml[290,8913+12]..[290,8913+17])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "constructor_arguments" (typing/types.ml[293,8937+4]..[293,8937+25]) (typing/types.ml[293,8937+0]..[295,8998+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[294,8965+2]..[294,8965+32])
                "Cstr_tuple" (typing/types.ml[294,8965+4]..[294,8965+14])
                [
                  core_type (typing/types.ml[294,8965+18]..[294,8965+32])
                    Ptyp_constr "list" (typing/types.ml[294,8965+28]..[294,8965+32])
                    [
                      core_type (typing/types.ml[294,8965+18]..[294,8965+27])
                        Ptyp_constr "type_expr" (typing/types.ml[294,8965+18]..[294,8965+27])
                        []
                    ]
                ]
                None
              (typing/types.ml[295,8998+2]..[295,8998+41])
                "Cstr_record" (typing/types.ml[295,8998+4]..[295,8998+15])
                [
                  core_type (typing/types.ml[295,8998+19]..[295,8998+41])
                    Ptyp_constr "list" (typing/types.ml[295,8998+37]..[295,8998+41])
                    [
                      core_type (typing/types.ml[295,8998+19]..[295,8998+36])
                        Ptyp_constr "label_declaration" (typing/types.ml[295,8998+19]..[295,8998+36])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/types.ml[297,9041+0]..[311,9442+16])
    Pstr_type Rec
    [
      type_declaration "extension_constructor" (typing/types.ml[297,9041+5]..[297,9041+26]) (typing/types.ml[297,9041+0]..[306,9325+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.ml[298,9070+4]..[298,9070+26])
                Immutable
                "ext_type_path" (typing/types.ml[298,9070+4]..[298,9070+17])                core_type (typing/types.ml[298,9070+19]..[298,9070+25])
                  Ptyp_constr "Path.t" (typing/types.ml[298,9070+19]..[298,9070+25])
                  []
              (typing/types.ml[299,9097+4]..[299,9097+36])
                Immutable
                "ext_type_params" (typing/types.ml[299,9097+4]..[299,9097+19])                core_type (typing/types.ml[299,9097+21]..[299,9097+35])
                  Ptyp_constr "list" (typing/types.ml[299,9097+31]..[299,9097+35])
                  [
                    core_type (typing/types.ml[299,9097+21]..[299,9097+30])
                      Ptyp_constr "type_expr" (typing/types.ml[299,9097+21]..[299,9097+30])
                      []
                  ]
              (typing/types.ml[300,9134+4]..[300,9134+36])
                Immutable
                "ext_args" (typing/types.ml[300,9134+4]..[300,9134+12])                core_type (typing/types.ml[300,9134+14]..[300,9134+35])
                  Ptyp_constr "constructor_arguments" (typing/types.ml[300,9134+14]..[300,9134+35])
                  []
              (typing/types.ml[301,9171+4]..[301,9171+35])
                Immutable
                "ext_ret_type" (typing/types.ml[301,9171+4]..[301,9171+16])                core_type (typing/types.ml[301,9171+18]..[301,9171+34])
                  Ptyp_constr "option" (typing/types.ml[301,9171+28]..[301,9171+34])
                  [
                    core_type (typing/types.ml[301,9171+18]..[301,9171+27])
                      Ptyp_constr "type_expr" (typing/types.ml[301,9171+18]..[301,9171+27])
                      []
                  ]
              (typing/types.ml[302,9207+4]..[302,9207+30])
                Immutable
                "ext_private" (typing/types.ml[302,9207+4]..[302,9207+15])                core_type (typing/types.ml[302,9207+17]..[302,9207+29])
                  Ptyp_constr "private_flag" (typing/types.ml[302,9207+17]..[302,9207+29])
                  []
              (typing/types.ml[303,9238+4]..[303,9238+24])
                Immutable
                "ext_loc" (typing/types.ml[303,9238+4]..[303,9238+11])                core_type (typing/types.ml[303,9238+13]..[303,9238+23])
                  Ptyp_constr "Location.t" (typing/types.ml[303,9238+13]..[303,9238+23])
                  []
              (typing/types.ml[304,9263+4]..[304,9263+41])
                Immutable
                "ext_attributes" (typing/types.ml[304,9263+4]..[304,9263+18])                core_type (typing/types.ml[304,9263+20]..[304,9263+40])
                  Ptyp_constr "Parsetree.attributes" (typing/types.ml[304,9263+20]..[304,9263+40])
                  []
              (typing/types.ml[305,9305+4]..[305,9305+19])
                Immutable
                "ext_uid" (typing/types.ml[305,9305+4]..[305,9305+11])                core_type (typing/types.ml[305,9305+13]..[305,9305+18])
                  Ptyp_constr "Uid.t" (typing/types.ml[305,9305+13]..[305,9305+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "type_transparence" (typing/types.ml[308,9330+4]..[308,9330+21]) (typing/types.ml[308,9330+0]..[311,9442+16])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[309,9354+4]..[309,9354+15])
                "Type_public" (typing/types.ml[309,9354+4]..[309,9354+15])
                []
                None
              (typing/types.ml[310,9404+2]..[310,9404+12])
                "Type_new" (typing/types.ml[310,9404+4]..[310,9404+12])
                []
                None
              (typing/types.ml[311,9442+2]..[311,9442+16])
                "Type_private" (typing/types.ml[311,9442+4]..[311,9442+16])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/types.ml[315,9530+0]..[318,9640+51])
    Pstr_type Rec
    [
      type_declaration "class_type" (typing/types.ml[315,9530+5]..[315,9530+15]) (typing/types.ml[315,9530+0]..[318,9640+51])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[316,9548+4]..[316,9548+54])
                "Cty_constr" (typing/types.ml[316,9548+4]..[316,9548+14])
                [
                  core_type (typing/types.ml[316,9548+18]..[316,9548+24])
                    Ptyp_constr "Path.t" (typing/types.ml[316,9548+18]..[316,9548+24])
                    []
                  core_type (typing/types.ml[316,9548+27]..[316,9548+41])
                    Ptyp_constr "list" (typing/types.ml[316,9548+37]..[316,9548+41])
                    [
                      core_type (typing/types.ml[316,9548+27]..[316,9548+36])
                        Ptyp_constr "type_expr" (typing/types.ml[316,9548+27]..[316,9548+36])
                        []
                    ]
                  core_type (typing/types.ml[316,9548+44]..[316,9548+54])
                    Ptyp_constr "class_type" (typing/types.ml[316,9548+44]..[316,9548+54])
                    []
                ]
                None
              (typing/types.ml[317,9603+2]..[317,9603+36])
                "Cty_signature" (typing/types.ml[317,9603+4]..[317,9603+17])
                [
                  core_type (typing/types.ml[317,9603+21]..[317,9603+36])
                    Ptyp_constr "class_signature" (typing/types.ml[317,9603+21]..[317,9603+36])
                    []
                ]
                None
              (typing/types.ml[318,9640+2]..[318,9640+51])
                "Cty_arrow" (typing/types.ml[318,9640+4]..[318,9640+13])
                [
                  core_type (typing/types.ml[318,9640+17]..[318,9640+26])
                    Ptyp_constr "arg_label" (typing/types.ml[318,9640+17]..[318,9640+26])
                    []
                  core_type (typing/types.ml[318,9640+29]..[318,9640+38])
                    Ptyp_constr "type_expr" (typing/types.ml[318,9640+29]..[318,9640+38])
                    []
                  core_type (typing/types.ml[318,9640+41]..[318,9640+51])
                    Ptyp_constr "class_type" (typing/types.ml[318,9640+41]..[318,9640+51])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/types.ml[320,9693+0]..[329,9959+2])
    Pstr_type Rec
    [
      type_declaration "class_declaration" (typing/types.ml[320,9693+5]..[320,9693+22]) (typing/types.ml[320,9693+0]..[329,9959+2])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.ml[321,9718+4]..[321,9718+31])
                Immutable
                "cty_params" (typing/types.ml[321,9718+4]..[321,9718+14])                core_type (typing/types.ml[321,9718+16]..[321,9718+30])
                  Ptyp_constr "list" (typing/types.ml[321,9718+26]..[321,9718+30])
                  [
                    core_type (typing/types.ml[321,9718+16]..[321,9718+25])
                      Ptyp_constr "type_expr" (typing/types.ml[321,9718+16]..[321,9718+25])
                      []
                  ]
              (typing/types.ml[322,9750+4]..[322,9750+33])
                Mutable
                "cty_type" (typing/types.ml[322,9750+12]..[322,9750+20])                core_type (typing/types.ml[322,9750+22]..[322,9750+32])
                  Ptyp_constr "class_type" (typing/types.ml[322,9750+22]..[322,9750+32])
                  []
              (typing/types.ml[323,9784+4]..[323,9784+21])
                Immutable
                "cty_path" (typing/types.ml[323,9784+4]..[323,9784+12])                core_type (typing/types.ml[323,9784+14]..[323,9784+20])
                  Ptyp_constr "Path.t" (typing/types.ml[323,9784+14]..[323,9784+20])
                  []
              (typing/types.ml[324,9806+4]..[324,9806+30])
                Immutable
                "cty_new" (typing/types.ml[324,9806+4]..[324,9806+11])                core_type (typing/types.ml[324,9806+13]..[324,9806+29])
                  Ptyp_constr "option" (typing/types.ml[324,9806+23]..[324,9806+29])
                  [
                    core_type (typing/types.ml[324,9806+13]..[324,9806+22])
                      Ptyp_constr "type_expr" (typing/types.ml[324,9806+13]..[324,9806+22])
                      []
                  ]
              (typing/types.ml[325,9837+4]..[325,9837+34])
                Immutable
                "cty_variance" (typing/types.ml[325,9837+4]..[325,9837+16])                core_type (typing/types.ml[325,9837+18]..[325,9837+33])
                  Ptyp_constr "list" (typing/types.ml[325,9837+29]..[325,9837+33])
                  [
                    core_type (typing/types.ml[325,9837+18]..[325,9837+28])
                      Ptyp_constr "Variance.t" (typing/types.ml[325,9837+18]..[325,9837+28])
                      []
                  ]
              (typing/types.ml[326,9872+4]..[326,9872+24])
                Immutable
                "cty_loc" (typing/types.ml[326,9872+4]..[326,9872+11])                core_type (typing/types.ml[326,9872+13]..[326,9872+23])
                  Ptyp_constr "Location.t" (typing/types.ml[326,9872+13]..[326,9872+23])
                  []
              (typing/types.ml[327,9897+4]..[327,9897+41])
                Immutable
                "cty_attributes" (typing/types.ml[327,9897+4]..[327,9897+18])                core_type (typing/types.ml[327,9897+20]..[327,9897+40])
                  Ptyp_constr "Parsetree.attributes" (typing/types.ml[327,9897+20]..[327,9897+40])
                  []
              (typing/types.ml[328,9939+4]..[328,9939+19])
                Immutable
                "cty_uid" (typing/types.ml[328,9939+4]..[328,9939+11])                core_type (typing/types.ml[328,9939+13]..[328,9939+18])
                  Ptyp_constr "Uid.t" (typing/types.ml[328,9939+13]..[328,9939+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/types.ml[331,9963+0]..[339,10202+3])
    Pstr_type Rec
    [
      type_declaration "class_type_declaration" (typing/types.ml[331,9963+5]..[331,9963+27]) (typing/types.ml[331,9963+0]..[339,10202+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.ml[332,9993+4]..[332,9993+32])
                Immutable
                "clty_params" (typing/types.ml[332,9993+4]..[332,9993+15])                core_type (typing/types.ml[332,9993+17]..[332,9993+31])
                  Ptyp_constr "list" (typing/types.ml[332,9993+27]..[332,9993+31])
                  [
                    core_type (typing/types.ml[332,9993+17]..[332,9993+26])
                      Ptyp_constr "type_expr" (typing/types.ml[332,9993+17]..[332,9993+26])
                      []
                  ]
              (typing/types.ml[333,10026+4]..[333,10026+26])
                Immutable
                "clty_type" (typing/types.ml[333,10026+4]..[333,10026+13])                core_type (typing/types.ml[333,10026+15]..[333,10026+25])
                  Ptyp_constr "class_type" (typing/types.ml[333,10026+15]..[333,10026+25])
                  []
              (typing/types.ml[334,10053+4]..[334,10053+22])
                Immutable
                "clty_path" (typing/types.ml[334,10053+4]..[334,10053+13])                core_type (typing/types.ml[334,10053+15]..[334,10053+21])
                  Ptyp_constr "Path.t" (typing/types.ml[334,10053+15]..[334,10053+21])
                  []
              (typing/types.ml[335,10076+4]..[335,10076+35])
                Immutable
                "clty_variance" (typing/types.ml[335,10076+4]..[335,10076+17])                core_type (typing/types.ml[335,10076+19]..[335,10076+34])
                  Ptyp_constr "list" (typing/types.ml[335,10076+30]..[335,10076+34])
                  [
                    core_type (typing/types.ml[335,10076+19]..[335,10076+29])
                      Ptyp_constr "Variance.t" (typing/types.ml[335,10076+19]..[335,10076+29])
                      []
                  ]
              (typing/types.ml[336,10112+4]..[336,10112+25])
                Immutable
                "clty_loc" (typing/types.ml[336,10112+4]..[336,10112+12])                core_type (typing/types.ml[336,10112+14]..[336,10112+24])
                  Ptyp_constr "Location.t" (typing/types.ml[336,10112+14]..[336,10112+24])
                  []
              (typing/types.ml[337,10138+4]..[337,10138+42])
                Immutable
                "clty_attributes" (typing/types.ml[337,10138+4]..[337,10138+19])                core_type (typing/types.ml[337,10138+21]..[337,10138+41])
                  Ptyp_constr "Parsetree.attributes" (typing/types.ml[337,10138+21]..[337,10138+41])
                  []
              (typing/types.ml[338,10181+4]..[338,10181+20])
                Immutable
                "clty_uid" (typing/types.ml[338,10181+4]..[338,10181+12])                core_type (typing/types.ml[338,10181+14]..[338,10181+19])
                  Ptyp_constr "Uid.t" (typing/types.ml[338,10181+14]..[338,10181+19])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/types.ml[343,10255+0]..[345,10286+10])
    Pstr_type Rec
    [
      type_declaration "visibility" (typing/types.ml[343,10255+5]..[343,10255+15]) (typing/types.ml[343,10255+0]..[345,10286+10])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[344,10273+2]..[344,10273+12])
                "Exported" (typing/types.ml[344,10273+4]..[344,10273+12])
                []
                None
              (typing/types.ml[345,10286+2]..[345,10286+10])
                "Hidden" (typing/types.ml[345,10286+4]..[345,10286+10])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/types.ml[347,10298+0]..[397,11872+18])
    Pstr_type Rec
    [
      type_declaration "module_type" (typing/types.ml[347,10298+5]..[347,10298+16]) (typing/types.ml[347,10298+0]..[351,10423+23])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[348,10317+4]..[348,10317+23])
                "Mty_ident" (typing/types.ml[348,10317+4]..[348,10317+13])
                [
                  core_type (typing/types.ml[348,10317+17]..[348,10317+23])
                    Ptyp_constr "Path.t" (typing/types.ml[348,10317+17]..[348,10317+23])
                    []
                ]
                None
              (typing/types.ml[349,10341+2]..[349,10341+30])
                "Mty_signature" (typing/types.ml[349,10341+4]..[349,10341+17])
                [
                  core_type (typing/types.ml[349,10341+21]..[349,10341+30])
                    Ptyp_constr "signature" (typing/types.ml[349,10341+21]..[349,10341+30])
                    []
                ]
                None
              (typing/types.ml[350,10372+2]..[350,10372+50])
                "Mty_functor" (typing/types.ml[350,10372+4]..[350,10372+15])
                [
                  core_type (typing/types.ml[350,10372+19]..[350,10372+36])
                    Ptyp_constr "functor_parameter" (typing/types.ml[350,10372+19]..[350,10372+36])
                    []
                  core_type (typing/types.ml[350,10372+39]..[350,10372+50])
                    Ptyp_constr "module_type" (typing/types.ml[350,10372+39]..[350,10372+50])
                    []
                ]
                None
              (typing/types.ml[351,10423+2]..[351,10423+23])
                "Mty_alias" (typing/types.ml[351,10423+4]..[351,10423+13])
                [
                  core_type (typing/types.ml[351,10423+17]..[351,10423+23])
                    Ptyp_constr "Path.t" (typing/types.ml[351,10423+17]..[351,10423+23])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "functor_parameter" (typing/types.ml[353,10448+4]..[353,10448+21]) (typing/types.ml[353,10448+0]..[355,10481+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[354,10472+2]..[354,10472+8])
                "Unit" (typing/types.ml[354,10472+4]..[354,10472+8])
                []
                None
              (typing/types.ml[355,10481+2]..[355,10481+41])
                "Named" (typing/types.ml[355,10481+4]..[355,10481+9])
                [
                  core_type (typing/types.ml[355,10481+13]..[355,10481+27])
                    Ptyp_constr "option" (typing/types.ml[355,10481+21]..[355,10481+27])
                    [
                      core_type (typing/types.ml[355,10481+13]..[355,10481+20])
                        Ptyp_constr "Ident.t" (typing/types.ml[355,10481+13]..[355,10481+20])
                        []
                    ]
                  core_type (typing/types.ml[355,10481+30]..[355,10481+41])
                    Ptyp_constr "module_type" (typing/types.ml[355,10481+30]..[355,10481+41])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "module_presence" (typing/types.ml[357,10524+4]..[357,10524+19]) (typing/types.ml[357,10524+0]..[359,10561+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[358,10546+2]..[358,10546+14])
                "Mp_present" (typing/types.ml[358,10546+4]..[358,10546+14])
                []
                None
              (typing/types.ml[359,10561+2]..[359,10561+13])
                "Mp_absent" (typing/types.ml[359,10561+4]..[359,10561+13])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "signature" (typing/types.ml[361,10576+4]..[361,10576+13]) (typing/types.ml[361,10576+0]..[361,10576+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/types.ml[361,10576+16]..[361,10576+35])
              Ptyp_constr "list" (typing/types.ml[361,10576+31]..[361,10576+35])
              [
                core_type (typing/types.ml[361,10576+16]..[361,10576+30])
                  Ptyp_constr "signature_item" (typing/types.ml[361,10576+16]..[361,10576+30])
                  []
              ]
      type_declaration "signature_item" (typing/types.ml[363,10613+4]..[363,10613+18]) (typing/types.ml[363,10613+0]..[371,11067+80])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[364,10634+4]..[364,10634+57])
                "Sig_value" (typing/types.ml[364,10634+4]..[364,10634+13])
                [
                  core_type (typing/types.ml[364,10634+17]..[364,10634+24])
                    Ptyp_constr "Ident.t" (typing/types.ml[364,10634+17]..[364,10634+24])
                    []
                  core_type (typing/types.ml[364,10634+27]..[364,10634+44])
                    Ptyp_constr "value_description" (typing/types.ml[364,10634+27]..[364,10634+44])
                    []
                  core_type (typing/types.ml[364,10634+47]..[364,10634+57])
                    Ptyp_constr "visibility" (typing/types.ml[364,10634+47]..[364,10634+57])
                    []
                ]
                None
              (typing/types.ml[365,10692+2]..[365,10692+68])
                "Sig_type" (typing/types.ml[365,10692+4]..[365,10692+12])
                [
                  core_type (typing/types.ml[365,10692+16]..[365,10692+23])
                    Ptyp_constr "Ident.t" (typing/types.ml[365,10692+16]..[365,10692+23])
                    []
                  core_type (typing/types.ml[365,10692+26]..[365,10692+42])
                    Ptyp_constr "type_declaration" (typing/types.ml[365,10692+26]..[365,10692+42])
                    []
                  core_type (typing/types.ml[365,10692+45]..[365,10692+55])
                    Ptyp_constr "rec_status" (typing/types.ml[365,10692+45]..[365,10692+55])
                    []
                  core_type (typing/types.ml[365,10692+58]..[365,10692+68])
                    Ptyp_constr "visibility" (typing/types.ml[365,10692+58]..[365,10692+68])
                    []
                ]
                None
              (typing/types.ml[366,10761+2]..[366,10761+75])
                "Sig_typext" (typing/types.ml[366,10761+4]..[366,10761+14])
                [
                  core_type (typing/types.ml[366,10761+18]..[366,10761+25])
                    Ptyp_constr "Ident.t" (typing/types.ml[366,10761+18]..[366,10761+25])
                    []
                  core_type (typing/types.ml[366,10761+28]..[366,10761+49])
                    Ptyp_constr "extension_constructor" (typing/types.ml[366,10761+28]..[366,10761+49])
                    []
                  core_type (typing/types.ml[366,10761+52]..[366,10761+62])
                    Ptyp_constr "ext_status" (typing/types.ml[366,10761+52]..[366,10761+62])
                    []
                  core_type (typing/types.ml[366,10761+65]..[366,10761+75])
                    Ptyp_constr "visibility" (typing/types.ml[366,10761+65]..[366,10761+75])
                    []
                ]
                None
              (typing/types.ml[367,10837+2]..[368,10855+78])
                "Sig_module" (typing/types.ml[367,10837+4]..[367,10837+14])
                [
                  core_type (typing/types.ml[368,10855+6]..[368,10855+13])
                    Ptyp_constr "Ident.t" (typing/types.ml[368,10855+6]..[368,10855+13])
                    []
                  core_type (typing/types.ml[368,10855+16]..[368,10855+31])
                    Ptyp_constr "module_presence" (typing/types.ml[368,10855+16]..[368,10855+31])
                    []
                  core_type (typing/types.ml[368,10855+34]..[368,10855+52])
                    Ptyp_constr "module_declaration" (typing/types.ml[368,10855+34]..[368,10855+52])
                    []
                  core_type (typing/types.ml[368,10855+55]..[368,10855+65])
                    Ptyp_constr "rec_status" (typing/types.ml[368,10855+55]..[368,10855+65])
                    []
                  core_type (typing/types.ml[368,10855+68]..[368,10855+78])
                    Ptyp_constr "visibility" (typing/types.ml[368,10855+68]..[368,10855+78])
                    []
                ]
                None
              (typing/types.ml[369,10934+2]..[369,10934+61])
                "Sig_modtype" (typing/types.ml[369,10934+4]..[369,10934+15])
                [
                  core_type (typing/types.ml[369,10934+19]..[369,10934+26])
                    Ptyp_constr "Ident.t" (typing/types.ml[369,10934+19]..[369,10934+26])
                    []
                  core_type (typing/types.ml[369,10934+29]..[369,10934+48])
                    Ptyp_constr "modtype_declaration" (typing/types.ml[369,10934+29]..[369,10934+48])
                    []
                  core_type (typing/types.ml[369,10934+51]..[369,10934+61])
                    Ptyp_constr "visibility" (typing/types.ml[369,10934+51]..[369,10934+61])
                    []
                ]
                None
              (typing/types.ml[370,10996+2]..[370,10996+70])
                "Sig_class" (typing/types.ml[370,10996+4]..[370,10996+13])
                [
                  core_type (typing/types.ml[370,10996+17]..[370,10996+24])
                    Ptyp_constr "Ident.t" (typing/types.ml[370,10996+17]..[370,10996+24])
                    []
                  core_type (typing/types.ml[370,10996+27]..[370,10996+44])
                    Ptyp_constr "class_declaration" (typing/types.ml[370,10996+27]..[370,10996+44])
                    []
                  core_type (typing/types.ml[370,10996+47]..[370,10996+57])
                    Ptyp_constr "rec_status" (typing/types.ml[370,10996+47]..[370,10996+57])
                    []
                  core_type (typing/types.ml[370,10996+60]..[370,10996+70])
                    Ptyp_constr "visibility" (typing/types.ml[370,10996+60]..[370,10996+70])
                    []
                ]
                None
              (typing/types.ml[371,11067+2]..[371,11067+80])
                "Sig_class_type" (typing/types.ml[371,11067+4]..[371,11067+18])
                [
                  core_type (typing/types.ml[371,11067+22]..[371,11067+29])
                    Ptyp_constr "Ident.t" (typing/types.ml[371,11067+22]..[371,11067+29])
                    []
                  core_type (typing/types.ml[371,11067+32]..[371,11067+54])
                    Ptyp_constr "class_type_declaration" (typing/types.ml[371,11067+32]..[371,11067+54])
                    []
                  core_type (typing/types.ml[371,11067+57]..[371,11067+67])
                    Ptyp_constr "rec_status" (typing/types.ml[371,11067+57]..[371,11067+67])
                    []
                  core_type (typing/types.ml[371,11067+70]..[371,11067+80])
                    Ptyp_constr "visibility" (typing/types.ml[371,11067+70]..[371,11067+80])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "module_declaration" (typing/types.ml[373,11149+4]..[373,11149+22]) (typing/types.ml[373,11149+0]..[379,11288+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.ml[375,11178+4]..[375,11178+25])
                Immutable
                "md_type" (typing/types.ml[375,11178+4]..[375,11178+11])                core_type (typing/types.ml[375,11178+13]..[375,11178+24])
                  Ptyp_constr "module_type" (typing/types.ml[375,11178+13]..[375,11178+24])
                  []
              (typing/types.ml[376,11204+4]..[376,11204+40])
                Immutable
                "md_attributes" (typing/types.ml[376,11204+4]..[376,11204+17])                core_type (typing/types.ml[376,11204+19]..[376,11204+39])
                  Ptyp_constr "Parsetree.attributes" (typing/types.ml[376,11204+19]..[376,11204+39])
                  []
              (typing/types.ml[377,11245+4]..[377,11245+23])
                Immutable
                "md_loc" (typing/types.ml[377,11245+4]..[377,11245+10])                core_type (typing/types.ml[377,11245+12]..[377,11245+22])
                  Ptyp_constr "Location.t" (typing/types.ml[377,11245+12]..[377,11245+22])
                  []
              (typing/types.ml[378,11269+4]..[378,11269+18])
                Immutable
                "md_uid" (typing/types.ml[378,11269+4]..[378,11269+10])                core_type (typing/types.ml[378,11269+12]..[378,11269+17])
                  Ptyp_constr "Uid.t" (typing/types.ml[378,11269+12]..[378,11269+17])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "modtype_declaration" (typing/types.ml[381,11293+4]..[381,11293+23]) (typing/types.ml[381,11293+0]..[387,11466+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.ml[383,11323+4]..[383,11323+33])
                Immutable
                "mtd_type" (typing/types.ml[383,11323+4]..[383,11323+12])                core_type (typing/types.ml[383,11323+14]..[383,11323+32])
                  Ptyp_constr "option" (typing/types.ml[383,11323+26]..[383,11323+32])
                  [
                    core_type (typing/types.ml[383,11323+14]..[383,11323+25])
                      Ptyp_constr "module_type" (typing/types.ml[383,11323+14]..[383,11323+25])
                      []
                  ]
              (typing/types.ml[384,11379+4]..[384,11379+41])
                Immutable
                "mtd_attributes" (typing/types.ml[384,11379+4]..[384,11379+18])                core_type (typing/types.ml[384,11379+20]..[384,11379+40])
                  Ptyp_constr "Parsetree.attributes" (typing/types.ml[384,11379+20]..[384,11379+40])
                  []
              (typing/types.ml[385,11421+4]..[385,11421+24])
                Immutable
                "mtd_loc" (typing/types.ml[385,11421+4]..[385,11421+11])                core_type (typing/types.ml[385,11421+13]..[385,11421+23])
                  Ptyp_constr "Location.t" (typing/types.ml[385,11421+13]..[385,11421+23])
                  []
              (typing/types.ml[386,11446+4]..[386,11446+19])
                Immutable
                "mtd_uid" (typing/types.ml[386,11446+4]..[386,11446+11])                core_type (typing/types.ml[386,11446+13]..[386,11446+18])
                  Ptyp_constr "Uid.t" (typing/types.ml[386,11446+13]..[386,11446+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "rec_status" (typing/types.ml[389,11471+4]..[389,11471+14]) (typing/types.ml[389,11471+0]..[392,11619+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[390,11488+4]..[390,11488+12])
                "Trec_not" (typing/types.ml[390,11488+4]..[390,11488+12])
                []
                None
              (typing/types.ml[391,11555+2]..[391,11555+14])
                "Trec_first" (typing/types.ml[391,11555+4]..[391,11555+14])
                []
                None
              (typing/types.ml[392,11619+2]..[392,11619+13])
                "Trec_next" (typing/types.ml[392,11619+4]..[392,11619+13])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "ext_status" (typing/types.ml[394,11701+4]..[394,11701+14]) (typing/types.ml[394,11701+0]..[397,11872+18])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[395,11718+4]..[395,11718+14])
                "Text_first" (typing/types.ml[395,11718+4]..[395,11718+14])
                []
                None
              (typing/types.ml[396,11793+2]..[396,11793+13])
                "Text_next" (typing/types.ml[396,11793+4]..[396,11793+13])
                []
                None
              (typing/types.ml[397,11872+2]..[397,11872+18])
                "Text_exception" (typing/types.ml[397,11872+4]..[397,11872+18])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/types.ml[403,12017+0]..[424,13130+35])
    Pstr_type Rec
    [
      type_declaration "constructor_description" (typing/types.ml[403,12017+5]..[403,12017+28]) (typing/types.ml[403,12017+0]..[418,12873+4])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.ml[404,12048+4]..[404,12048+22])
                Immutable
                "cstr_name" (typing/types.ml[404,12048+4]..[404,12048+13])                core_type (typing/types.ml[404,12048+15]..[404,12048+21])
                  Ptyp_constr "string" (typing/types.ml[404,12048+15]..[404,12048+21])
                  []
              (typing/types.ml[405,12111+4]..[405,12111+24])
                Immutable
                "cstr_res" (typing/types.ml[405,12111+4]..[405,12111+12])                core_type (typing/types.ml[405,12111+14]..[405,12111+23])
                  Ptyp_constr "type_expr" (typing/types.ml[405,12111+14]..[405,12111+23])
                  []
              (typing/types.ml[406,12176+4]..[406,12176+38])
                Immutable
                "cstr_existentials" (typing/types.ml[406,12176+4]..[406,12176+21])                core_type (typing/types.ml[406,12176+23]..[406,12176+37])
                  Ptyp_constr "list" (typing/types.ml[406,12176+33]..[406,12176+37])
                  [
                    core_type (typing/types.ml[406,12176+23]..[406,12176+32])
                      Ptyp_constr "type_expr" (typing/types.ml[406,12176+23]..[406,12176+32])
                      []
                  ]
              (typing/types.ml[407,12243+4]..[407,12243+30])
                Immutable
                "cstr_args" (typing/types.ml[407,12243+4]..[407,12243+13])                core_type (typing/types.ml[407,12243+15]..[407,12243+29])
                  Ptyp_constr "list" (typing/types.ml[407,12243+25]..[407,12243+29])
                  [
                    core_type (typing/types.ml[407,12243+15]..[407,12243+24])
                      Ptyp_constr "type_expr" (typing/types.ml[407,12243+15]..[407,12243+24])
                      []
                  ]
              (typing/types.ml[408,12311+4]..[408,12311+20])
                Immutable
                "cstr_arity" (typing/types.ml[408,12311+4]..[408,12311+14])                core_type (typing/types.ml[408,12311+16]..[408,12311+19])
                  Ptyp_constr "int" (typing/types.ml[408,12311+16]..[408,12311+19])
                  []
              (typing/types.ml[409,12377+4]..[409,12377+30])
                Immutable
                "cstr_tag" (typing/types.ml[409,12377+4]..[409,12377+12])                core_type (typing/types.ml[409,12377+14]..[409,12377+29])
                  Ptyp_constr "constructor_tag" (typing/types.ml[409,12377+14]..[409,12377+29])
                  []
              (typing/types.ml[410,12443+4]..[410,12443+21])
                Immutable
                "cstr_consts" (typing/types.ml[410,12443+4]..[410,12443+15])                core_type (typing/types.ml[410,12443+17]..[410,12443+20])
                  Ptyp_constr "int" (typing/types.ml[410,12443+17]..[410,12443+20])
                  []
              (typing/types.ml[411,12521+4]..[411,12521+24])
                Immutable
                "cstr_nonconsts" (typing/types.ml[411,12521+4]..[411,12521+18])                core_type (typing/types.ml[411,12521+20]..[411,12521+23])
                  Ptyp_constr "int" (typing/types.ml[411,12521+20]..[411,12521+23])
                  []
              (typing/types.ml[412,12600+4]..[412,12600+27])
                Immutable
                "cstr_generalized" (typing/types.ml[412,12600+4]..[412,12600+20])                core_type (typing/types.ml[412,12600+22]..[412,12600+26])
                  Ptyp_constr "bool" (typing/types.ml[412,12600+22]..[412,12600+26])
                  []
              (typing/types.ml[413,12671+4]..[413,12671+31])
                Immutable
                "cstr_private" (typing/types.ml[413,12671+4]..[413,12671+16])                core_type (typing/types.ml[413,12671+18]..[413,12671+30])
                  Ptyp_constr "private_flag" (typing/types.ml[413,12671+18]..[413,12671+30])
                  []
              (typing/types.ml[414,12740+4]..[414,12740+25])
                Immutable
                "cstr_loc" (typing/types.ml[414,12740+4]..[414,12740+12])                core_type (typing/types.ml[414,12740+14]..[414,12740+24])
                  Ptyp_constr "Location.t" (typing/types.ml[414,12740+14]..[414,12740+24])
                  []
              (typing/types.ml[415,12766+4]..[415,12766+42])
                Immutable
                "cstr_attributes" (typing/types.ml[415,12766+4]..[415,12766+19])                core_type (typing/types.ml[415,12766+21]..[415,12766+41])
                  Ptyp_constr "Parsetree.attributes" (typing/types.ml[415,12766+21]..[415,12766+41])
                  []
              (typing/types.ml[416,12809+4]..[416,12809+42])
                Immutable
                "cstr_inlined" (typing/types.ml[416,12809+4]..[416,12809+16])                core_type (typing/types.ml[416,12809+18]..[416,12809+41])
                  Ptyp_constr "option" (typing/types.ml[416,12809+35]..[416,12809+41])
                  [
                    core_type (typing/types.ml[416,12809+18]..[416,12809+34])
                      Ptyp_constr "type_declaration" (typing/types.ml[416,12809+18]..[416,12809+34])
                      []
                  ]
              (typing/types.ml[417,12852+4]..[417,12852+20])
                Immutable
                "cstr_uid" (typing/types.ml[417,12852+4]..[417,12852+12])                core_type (typing/types.ml[417,12852+14]..[417,12852+19])
                  Ptyp_constr "Uid.t" (typing/types.ml[417,12852+14]..[417,12852+19])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "constructor_tag" (typing/types.ml[420,12879+4]..[420,12879+19]) (typing/types.ml[420,12879+0]..[424,13130+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[421,12901+4]..[421,12901+24])
                "Cstr_constant" (typing/types.ml[421,12901+4]..[421,12901+17])
                [
                  core_type (typing/types.ml[421,12901+21]..[421,12901+24])
                    Ptyp_constr "int" (typing/types.ml[421,12901+21]..[421,12901+24])
                    []
                ]
                None
              (typing/types.ml[422,12977+2]..[422,12977+21])
                "Cstr_block" (typing/types.ml[422,12977+4]..[422,12977+14])
                [
                  core_type (typing/types.ml[422,12977+18]..[422,12977+21])
                    Ptyp_constr "int" (typing/types.ml[422,12977+18]..[422,12977+21])
                    []
                ]
                None
              (typing/types.ml[423,13053+2]..[423,13053+16])
                "Cstr_unboxed" (typing/types.ml[423,13053+4]..[423,13053+16])
                []
                None
              (typing/types.ml[424,13130+2]..[424,13130+35])
                "Cstr_extension" (typing/types.ml[424,13130+4]..[424,13130+18])
                [
                  core_type (typing/types.ml[424,13130+22]..[424,13130+28])
                    Ptyp_constr "Path.t" (typing/types.ml[424,13130+22]..[424,13130+28])
                    []
                  core_type (typing/types.ml[424,13130+31]..[424,13130+35])
                    Ptyp_constr "bool" (typing/types.ml[424,13130+31]..[424,13130+35])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/types.ml[427,13277+0]..[434,13555+76])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[427,13277+4]..[427,13277+13])
          Ppat_var "equal_tag" (typing/types.ml[427,13277+4]..[427,13277+13])
        expression (typing/types.ml[427,13277+14]..[434,13555+76]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[427,13277+14]..[427,13277+16])
            Ppat_var "t1" (typing/types.ml[427,13277+14]..[427,13277+16])
          expression (typing/types.ml[427,13277+17]..[434,13555+76]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[427,13277+17]..[427,13277+19])
              Ppat_var "t2" (typing/types.ml[427,13277+17]..[427,13277+19])
            expression (typing/types.ml[428,13299+2]..[434,13555+76])
              Pexp_match
              expression (typing/types.ml[428,13299+8]..[428,13299+16])
                Pexp_tuple
                [
                  expression (typing/types.ml[428,13299+9]..[428,13299+11])
                    Pexp_ident "t1" (typing/types.ml[428,13299+9]..[428,13299+11])
                  expression (typing/types.ml[428,13299+13]..[428,13299+15])
                    Pexp_ident "t2" (typing/types.ml[428,13299+13]..[428,13299+15])
                ]
              [
                <case>
                  pattern (typing/types.ml[429,13321+4]..[429,13321+38])
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[429,13321+4]..[429,13321+20])
                        Ppat_construct "Cstr_constant" (typing/types.ml[429,13321+4]..[429,13321+17])
                        Some
                          []
                          pattern (typing/types.ml[429,13321+18]..[429,13321+20])
                            Ppat_var "i1" (typing/types.ml[429,13321+18]..[429,13321+20])
                      pattern (typing/types.ml[429,13321+22]..[429,13321+38])
                        Ppat_construct "Cstr_constant" (typing/types.ml[429,13321+22]..[429,13321+35])
                        Some
                          []
                          pattern (typing/types.ml[429,13321+36]..[429,13321+38])
                            Ppat_var "i2" (typing/types.ml[429,13321+36]..[429,13321+38])
                    ]
                  expression (typing/types.ml[429,13321+42]..[429,13321+49])
                    Pexp_apply
                    expression (typing/types.ml[429,13321+45]..[429,13321+46])
                      Pexp_ident "=" (typing/types.ml[429,13321+45]..[429,13321+46])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[429,13321+42]..[429,13321+44])
                          Pexp_ident "i2" (typing/types.ml[429,13321+42]..[429,13321+44])
                      <arg>
                      Nolabel
                        expression (typing/types.ml[429,13321+47]..[429,13321+49])
                          Pexp_ident "i1" (typing/types.ml[429,13321+47]..[429,13321+49])
                    ]
                <case>
                  pattern (typing/types.ml[430,13371+4]..[430,13371+32])
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[430,13371+4]..[430,13371+17])
                        Ppat_construct "Cstr_block" (typing/types.ml[430,13371+4]..[430,13371+14])
                        Some
                          []
                          pattern (typing/types.ml[430,13371+15]..[430,13371+17])
                            Ppat_var "i1" (typing/types.ml[430,13371+15]..[430,13371+17])
                      pattern (typing/types.ml[430,13371+19]..[430,13371+32])
                        Ppat_construct "Cstr_block" (typing/types.ml[430,13371+19]..[430,13371+29])
                        Some
                          []
                          pattern (typing/types.ml[430,13371+30]..[430,13371+32])
                            Ppat_var "i2" (typing/types.ml[430,13371+30]..[430,13371+32])
                    ]
                  expression (typing/types.ml[430,13371+36]..[430,13371+43])
                    Pexp_apply
                    expression (typing/types.ml[430,13371+39]..[430,13371+40])
                      Pexp_ident "=" (typing/types.ml[430,13371+39]..[430,13371+40])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[430,13371+36]..[430,13371+38])
                          Pexp_ident "i2" (typing/types.ml[430,13371+36]..[430,13371+38])
                      <arg>
                      Nolabel
                        expression (typing/types.ml[430,13371+41]..[430,13371+43])
                          Pexp_ident "i1" (typing/types.ml[430,13371+41]..[430,13371+43])
                    ]
                <case>
                  pattern (typing/types.ml[431,13415+4]..[431,13415+30])
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[431,13415+4]..[431,13415+16])
                        Ppat_construct "Cstr_unboxed" (typing/types.ml[431,13415+4]..[431,13415+16])
                        None
                      pattern (typing/types.ml[431,13415+18]..[431,13415+30])
                        Ppat_construct "Cstr_unboxed" (typing/types.ml[431,13415+18]..[431,13415+30])
                        None
                    ]
                  expression (typing/types.ml[431,13415+34]..[431,13415+38])
                    Pexp_construct "true" (typing/types.ml[431,13415+34]..[431,13415+38])
                    None
                <case>
                  pattern (typing/types.ml[432,13454+4]..[432,13454+58])
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[432,13454+4]..[432,13454+30])
                        Ppat_construct "Cstr_extension" (typing/types.ml[432,13454+4]..[432,13454+18])
                        Some
                          []
                          pattern (typing/types.ml[432,13454+19]..[432,13454+30])
                            Ppat_tuple
                            [
                              pattern (typing/types.ml[432,13454+20]..[432,13454+25])
                                Ppat_var "path1" (typing/types.ml[432,13454+20]..[432,13454+25])
                              pattern (typing/types.ml[432,13454+27]..[432,13454+29])
                                Ppat_var "b1" (typing/types.ml[432,13454+27]..[432,13454+29])
                            ]
                      pattern (typing/types.ml[432,13454+32]..[432,13454+58])
                        Ppat_construct "Cstr_extension" (typing/types.ml[432,13454+32]..[432,13454+46])
                        Some
                          []
                          pattern (typing/types.ml[432,13454+47]..[432,13454+58])
                            Ppat_tuple
                            [
                              pattern (typing/types.ml[432,13454+48]..[432,13454+53])
                                Ppat_var "path2" (typing/types.ml[432,13454+48]..[432,13454+53])
                              pattern (typing/types.ml[432,13454+55]..[432,13454+57])
                                Ppat_var "b2" (typing/types.ml[432,13454+55]..[432,13454+57])
                            ]
                    ]
                  expression (typing/types.ml[433,13516+6]..[433,13516+38])
                    Pexp_apply
                    expression (typing/types.ml[433,13516+28]..[433,13516+30])
                      Pexp_ident "&&" (typing/types.ml[433,13516+28]..[433,13516+30])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[433,13516+6]..[433,13516+27])
                          Pexp_apply
                          expression (typing/types.ml[433,13516+6]..[433,13516+15])
                            Pexp_ident "Path.same" (typing/types.ml[433,13516+6]..[433,13516+15])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[433,13516+16]..[433,13516+21])
                                Pexp_ident "path1" (typing/types.ml[433,13516+16]..[433,13516+21])
                            <arg>
                            Nolabel
                              expression (typing/types.ml[433,13516+22]..[433,13516+27])
                                Pexp_ident "path2" (typing/types.ml[433,13516+22]..[433,13516+27])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/types.ml[433,13516+31]..[433,13516+38])
                          Pexp_apply
                          expression (typing/types.ml[433,13516+34]..[433,13516+35])
                            Pexp_ident "=" (typing/types.ml[433,13516+34]..[433,13516+35])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[433,13516+31]..[433,13516+33])
                                Pexp_ident "b1" (typing/types.ml[433,13516+31]..[433,13516+33])
                            <arg>
                            Nolabel
                              expression (typing/types.ml[433,13516+36]..[433,13516+38])
                                Pexp_ident "b2" (typing/types.ml[433,13516+36]..[433,13516+38])
                          ]
                    ]
                <case>
                  pattern (typing/types.ml[434,13555+4]..[434,13555+67])
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[434,13555+4]..[434,13555+64])
                        Ppat_or
                        pattern (typing/types.ml[434,13555+5]..[434,13555+46])
                          Ppat_or
                          pattern (typing/types.ml[434,13555+5]..[434,13555+33])
                            Ppat_or
                            pattern (typing/types.ml[434,13555+5]..[434,13555+20])
                              Ppat_construct "Cstr_constant" (typing/types.ml[434,13555+5]..[434,13555+18])
                              Some
                                []
                                pattern (typing/types.ml[434,13555+19]..[434,13555+20])
                                  Ppat_any
                            pattern (typing/types.ml[434,13555+21]..[434,13555+33])
                              Ppat_construct "Cstr_block" (typing/types.ml[434,13555+21]..[434,13555+31])
                              Some
                                []
                                pattern (typing/types.ml[434,13555+32]..[434,13555+33])
                                  Ppat_any
                          pattern (typing/types.ml[434,13555+34]..[434,13555+46])
                            Ppat_construct "Cstr_unboxed" (typing/types.ml[434,13555+34]..[434,13555+46])
                            None
                        pattern (typing/types.ml[434,13555+47]..[434,13555+63])
                          Ppat_construct "Cstr_extension" (typing/types.ml[434,13555+47]..[434,13555+61])
                          Some
                            []
                            pattern (typing/types.ml[434,13555+62]..[434,13555+63])
                              Ppat_any
                      pattern (typing/types.ml[434,13555+66]..[434,13555+67])
                        Ppat_any
                    ]
                  expression (typing/types.ml[434,13555+71]..[434,13555+76])
                    Pexp_construct "false" (typing/types.ml[434,13555+71]..[434,13555+76])
                    None
              ]
    ]
  structure_item (typing/types.ml[436,13633+0]..[443,13884+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[436,13633+4]..[436,13633+20])
          Ppat_var "may_equal_constr" (typing/types.ml[436,13633+4]..[436,13633+20])
        expression (typing/types.ml[436,13633+21]..[443,13884+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[436,13633+21]..[436,13633+23])
            Ppat_var "c1" (typing/types.ml[436,13633+21]..[436,13633+23])
          expression (typing/types.ml[436,13633+24]..[443,13884+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[436,13633+24]..[436,13633+26])
              Ppat_var "c2" (typing/types.ml[436,13633+24]..[436,13633+26])
            expression (typing/types.ml[437,13662+2]..[443,13884+29])
              Pexp_apply
              expression (typing/types.ml[438,13694+2]..[438,13694+4])
                Pexp_ident "&&" (typing/types.ml[438,13694+2]..[438,13694+4])
              [
                <arg>
                Nolabel
                  expression (typing/types.ml[437,13662+2]..[437,13662+31])
                    Pexp_apply
                    expression (typing/types.ml[437,13662+16]..[437,13662+17])
                      Pexp_ident "=" (typing/types.ml[437,13662+16]..[437,13662+17])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[437,13662+2]..[437,13662+15])
                          Pexp_field
                          expression (typing/types.ml[437,13662+2]..[437,13662+4])
                            Pexp_ident "c1" (typing/types.ml[437,13662+2]..[437,13662+4])
                          "cstr_arity" (typing/types.ml[437,13662+5]..[437,13662+15])
                      <arg>
                      Nolabel
                        expression (typing/types.ml[437,13662+18]..[437,13662+31])
                          Pexp_field
                          expression (typing/types.ml[437,13662+18]..[437,13662+20])
                            Pexp_ident "c2" (typing/types.ml[437,13662+18]..[437,13662+20])
                          "cstr_arity" (typing/types.ml[437,13662+21]..[437,13662+31])
                    ]
                <arg>
                Nolabel
                  expression (typing/types.ml[438,13694+5]..[443,13884+29])
                    Pexp_match
                    expression (typing/types.ml[438,13694+12]..[438,13694+35])
                      Pexp_tuple
                      [
                        expression (typing/types.ml[438,13694+12]..[438,13694+23])
                          Pexp_field
                          expression (typing/types.ml[438,13694+12]..[438,13694+14])
                            Pexp_ident "c1" (typing/types.ml[438,13694+12]..[438,13694+14])
                          "cstr_tag" (typing/types.ml[438,13694+15]..[438,13694+23])
                        expression (typing/types.ml[438,13694+24]..[438,13694+35])
                          Pexp_field
                          expression (typing/types.ml[438,13694+24]..[438,13694+26])
                            Pexp_ident "c2" (typing/types.ml[438,13694+24]..[438,13694+26])
                          "cstr_tag" (typing/types.ml[438,13694+27]..[438,13694+35])
                      ]
                    [
                      <case>
                        pattern (typing/types.ml[439,13735+7]..[439,13735+40])
                          Ppat_tuple
                          [
                            pattern (typing/types.ml[439,13735+7]..[439,13735+23])
                              Ppat_construct "Cstr_extension" (typing/types.ml[439,13735+7]..[439,13735+21])
                              Some
                                []
                                pattern (typing/types.ml[439,13735+22]..[439,13735+23])
                                  Ppat_any
                            pattern (typing/types.ml[439,13735+24]..[439,13735+40])
                              Ppat_construct "Cstr_extension" (typing/types.ml[439,13735+24]..[439,13735+38])
                              Some
                                []
                                pattern (typing/types.ml[439,13735+39]..[439,13735+40])
                                  Ppat_any
                          ]
                        expression (typing/types.ml[441,13849+9]..[441,13849+13])
                          Pexp_construct "true" (typing/types.ml[441,13849+9]..[441,13849+13])
                          None
                      <case>
                        pattern (typing/types.ml[442,13863+7]..[442,13863+17])
                          Ppat_tuple
                          [
                            pattern (typing/types.ml[442,13863+7]..[442,13863+11])
                              Ppat_var "tag1" (typing/types.ml[442,13863+7]..[442,13863+11])
                            pattern (typing/types.ml[442,13863+13]..[442,13863+17])
                              Ppat_var "tag2" (typing/types.ml[442,13863+13]..[442,13863+17])
                          ]
                        expression (typing/types.ml[443,13884+9]..[443,13884+28])
                          Pexp_apply
                          expression (typing/types.ml[443,13884+9]..[443,13884+18])
                            Pexp_ident "equal_tag" (typing/types.ml[443,13884+9]..[443,13884+18])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[443,13884+19]..[443,13884+23])
                                Pexp_ident "tag1" (typing/types.ml[443,13884+19]..[443,13884+23])
                            <arg>
                            Nolabel
                              expression (typing/types.ml[443,13884+24]..[443,13884+28])
                                Pexp_ident "tag2" (typing/types.ml[443,13884+24]..[443,13884+28])
                          ]
                    ]
              ]
    ]
  structure_item (typing/types.ml[445,13915+0]..[457,14565+4])
    Pstr_type Rec
    [
      type_declaration "label_description" (typing/types.ml[445,13915+5]..[445,13915+22]) (typing/types.ml[445,13915+0]..[457,14565+4])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.ml[446,13940+4]..[446,13940+21])
                Immutable
                "lbl_name" (typing/types.ml[446,13940+4]..[446,13940+12])                core_type (typing/types.ml[446,13940+14]..[446,13940+20])
                  Ptyp_constr "string" (typing/types.ml[446,13940+14]..[446,13940+20])
                  []
              (typing/types.ml[447,13997+4]..[447,13997+23])
                Immutable
                "lbl_res" (typing/types.ml[447,13997+4]..[447,13997+11])                core_type (typing/types.ml[447,13997+13]..[447,13997+22])
                  Ptyp_constr "type_expr" (typing/types.ml[447,13997+13]..[447,13997+22])
                  []
              (typing/types.ml[448,14062+4]..[448,14062+23])
                Immutable
                "lbl_arg" (typing/types.ml[448,14062+4]..[448,14062+11])                core_type (typing/types.ml[448,14062+13]..[448,14062+22])
                  Ptyp_constr "type_expr" (typing/types.ml[448,14062+13]..[448,14062+22])
                  []
              (typing/types.ml[449,14129+4]..[449,14129+26])
                Immutable
                "lbl_mut" (typing/types.ml[449,14129+4]..[449,14129+11])                core_type (typing/types.ml[449,14129+13]..[449,14129+25])
                  Ptyp_constr "mutable_flag" (typing/types.ml[449,14129+13]..[449,14129+25])
                  []
              (typing/types.ml[450,14200+4]..[450,14200+17])
                Immutable
                "lbl_pos" (typing/types.ml[450,14200+4]..[450,14200+11])                core_type (typing/types.ml[450,14200+13]..[450,14200+16])
                  Ptyp_constr "int" (typing/types.ml[450,14200+13]..[450,14200+16])
                  []
              (typing/types.ml[451,14264+4]..[451,14264+37])
                Immutable
                "lbl_all" (typing/types.ml[451,14264+4]..[451,14264+11])                core_type (typing/types.ml[451,14264+13]..[451,14264+36])
                  Ptyp_constr "array" (typing/types.ml[451,14264+31]..[451,14264+36])
                  [
                    core_type (typing/types.ml[451,14264+13]..[451,14264+30])
                      Ptyp_constr "label_description" (typing/types.ml[451,14264+13]..[451,14264+30])
                      []
                  ]
              (typing/types.ml[452,14338+4]..[452,14338+38])
                Immutable
                "lbl_repres" (typing/types.ml[452,14338+4]..[452,14338+14])                core_type (typing/types.ml[452,14338+16]..[452,14338+37])
                  Ptyp_constr "record_representation" (typing/types.ml[452,14338+16]..[452,14338+37])
                  []
              (typing/types.ml[453,14415+4]..[453,14415+30])
                Immutable
                "lbl_private" (typing/types.ml[453,14415+4]..[453,14415+15])                core_type (typing/types.ml[453,14415+17]..[453,14415+29])
                  Ptyp_constr "private_flag" (typing/types.ml[453,14415+17]..[453,14415+29])
                  []
              (typing/types.ml[454,14478+4]..[454,14478+24])
                Immutable
                "lbl_loc" (typing/types.ml[454,14478+4]..[454,14478+11])                core_type (typing/types.ml[454,14478+13]..[454,14478+23])
                  Ptyp_constr "Location.t" (typing/types.ml[454,14478+13]..[454,14478+23])
                  []
              (typing/types.ml[455,14503+4]..[455,14503+41])
                Immutable
                "lbl_attributes" (typing/types.ml[455,14503+4]..[455,14503+18])                core_type (typing/types.ml[455,14503+20]..[455,14503+40])
                  Ptyp_constr "Parsetree.attributes" (typing/types.ml[455,14503+20]..[455,14503+40])
                  []
              (typing/types.ml[456,14545+4]..[456,14545+19])
                Immutable
                "lbl_uid" (typing/types.ml[456,14545+4]..[456,14545+11])                core_type (typing/types.ml[456,14545+13]..[456,14545+18])
                  Ptyp_constr "Uid.t" (typing/types.ml[456,14545+13]..[456,14545+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/types.ml[459,14571+0]..[467,14953+43])
    Pstr_value Rec
    [
      <def>
        pattern (typing/types.ml[459,14571+8]..[459,14571+31])
          Ppat_var "bound_value_identifiers" (typing/types.ml[459,14571+8]..[459,14571+31])
        expression (typing/types.ml[459,14571+34]..[467,14953+43])
          Pexp_function
          [
            <case>
              pattern (typing/types.ml[460,14614+4]..[460,14614+6])
                Ppat_construct "[]" (typing/types.ml[460,14614+4]..[460,14614+6])
                None
              expression (typing/types.ml[460,14614+10]..[460,14614+12])
                Pexp_construct "[]" (typing/types.ml[460,14614+10]..[460,14614+12])
                None
            <case>
              pattern (typing/types.ml[461,14627+4]..[461,14627+49])
                Ppat_construct "::" (typing/types.ml[461,14627+43]..[461,14627+45])
                Some
                  []
                  pattern (typing/types.ml[461,14627+4]..[461,14627+49]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[461,14627+4]..[461,14627+42])
                        Ppat_construct "Sig_value" (typing/types.ml[461,14627+4]..[461,14627+13])
                        Some
                          []
                          pattern (typing/types.ml[461,14627+13]..[461,14627+42])
                            Ppat_tuple
                            [
                              pattern (typing/types.ml[461,14627+14]..[461,14627+16])
                                Ppat_var "id" (typing/types.ml[461,14627+14]..[461,14627+16])
                              pattern (typing/types.ml[461,14627+18]..[461,14627+38])
                                Ppat_record Closed
                                [
                                  "val_kind" (typing/types.ml[461,14627+19]..[461,14627+27])
                                    pattern (typing/types.ml[461,14627+30]..[461,14627+37])
                                      Ppat_construct "Val_reg" (typing/types.ml[461,14627+30]..[461,14627+37])
                                      None
                                ]
                              pattern (typing/types.ml[461,14627+40]..[461,14627+41])
                                Ppat_any
                            ]
                      pattern (typing/types.ml[461,14627+46]..[461,14627+49])
                        Ppat_var "rem" (typing/types.ml[461,14627+46]..[461,14627+49])
                    ]
              expression (typing/types.ml[462,14680+6]..[462,14680+39])
                Pexp_construct "::" (typing/types.ml[462,14680+9]..[462,14680+11])
                Some
                  expression (typing/types.ml[462,14680+6]..[462,14680+39]) ghost
                    Pexp_tuple
                    [
                      expression (typing/types.ml[462,14680+6]..[462,14680+8])
                        Pexp_ident "id" (typing/types.ml[462,14680+6]..[462,14680+8])
                      expression (typing/types.ml[462,14680+12]..[462,14680+39])
                        Pexp_apply
                        expression (typing/types.ml[462,14680+12]..[462,14680+35])
                          Pexp_ident "bound_value_identifiers" (typing/types.ml[462,14680+12]..[462,14680+35])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[462,14680+36]..[462,14680+39])
                              Pexp_ident "rem" (typing/types.ml[462,14680+36]..[462,14680+39])
                        ]
                    ]
            <case>
              pattern (typing/types.ml[463,14720+4]..[463,14720+34])
                Ppat_construct "::" (typing/types.ml[463,14720+28]..[463,14720+30])
                Some
                  []
                  pattern (typing/types.ml[463,14720+4]..[463,14720+34]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[463,14720+4]..[463,14720+27])
                        Ppat_construct "Sig_typext" (typing/types.ml[463,14720+4]..[463,14720+14])
                        Some
                          []
                          pattern (typing/types.ml[463,14720+14]..[463,14720+27])
                            Ppat_tuple
                            [
                              pattern (typing/types.ml[463,14720+15]..[463,14720+17])
                                Ppat_var "id" (typing/types.ml[463,14720+15]..[463,14720+17])
                              pattern (typing/types.ml[463,14720+19]..[463,14720+20])
                                Ppat_any
                              pattern (typing/types.ml[463,14720+22]..[463,14720+23])
                                Ppat_any
                              pattern (typing/types.ml[463,14720+25]..[463,14720+26])
                                Ppat_any
                            ]
                      pattern (typing/types.ml[463,14720+31]..[463,14720+34])
                        Ppat_var "rem" (typing/types.ml[463,14720+31]..[463,14720+34])
                    ]
              expression (typing/types.ml[463,14720+38]..[463,14720+71])
                Pexp_construct "::" (typing/types.ml[463,14720+41]..[463,14720+43])
                Some
                  expression (typing/types.ml[463,14720+38]..[463,14720+71]) ghost
                    Pexp_tuple
                    [
                      expression (typing/types.ml[463,14720+38]..[463,14720+40])
                        Pexp_ident "id" (typing/types.ml[463,14720+38]..[463,14720+40])
                      expression (typing/types.ml[463,14720+44]..[463,14720+71])
                        Pexp_apply
                        expression (typing/types.ml[463,14720+44]..[463,14720+67])
                          Pexp_ident "bound_value_identifiers" (typing/types.ml[463,14720+44]..[463,14720+67])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[463,14720+68]..[463,14720+71])
                              Pexp_ident "rem" (typing/types.ml[463,14720+68]..[463,14720+71])
                        ]
                    ]
            <case>
              pattern (typing/types.ml[464,14792+4]..[464,14792+46])
                Ppat_construct "::" (typing/types.ml[464,14792+40]..[464,14792+42])
                Some
                  []
                  pattern (typing/types.ml[464,14792+4]..[464,14792+46]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[464,14792+4]..[464,14792+39])
                        Ppat_construct "Sig_module" (typing/types.ml[464,14792+4]..[464,14792+14])
                        Some
                          []
                          pattern (typing/types.ml[464,14792+14]..[464,14792+39])
                            Ppat_tuple
                            [
                              pattern (typing/types.ml[464,14792+15]..[464,14792+17])
                                Ppat_var "id" (typing/types.ml[464,14792+15]..[464,14792+17])
                              pattern (typing/types.ml[464,14792+19]..[464,14792+29])
                                Ppat_construct "Mp_present" (typing/types.ml[464,14792+19]..[464,14792+29])
                                None
                              pattern (typing/types.ml[464,14792+31]..[464,14792+32])
                                Ppat_any
                              pattern (typing/types.ml[464,14792+34]..[464,14792+35])
                                Ppat_any
                              pattern (typing/types.ml[464,14792+37]..[464,14792+38])
                                Ppat_any
                            ]
                      pattern (typing/types.ml[464,14792+43]..[464,14792+46])
                        Ppat_var "rem" (typing/types.ml[464,14792+43]..[464,14792+46])
                    ]
              expression (typing/types.ml[465,14842+6]..[465,14842+39])
                Pexp_construct "::" (typing/types.ml[465,14842+9]..[465,14842+11])
                Some
                  expression (typing/types.ml[465,14842+6]..[465,14842+39]) ghost
                    Pexp_tuple
                    [
                      expression (typing/types.ml[465,14842+6]..[465,14842+8])
                        Pexp_ident "id" (typing/types.ml[465,14842+6]..[465,14842+8])
                      expression (typing/types.ml[465,14842+12]..[465,14842+39])
                        Pexp_apply
                        expression (typing/types.ml[465,14842+12]..[465,14842+35])
                          Pexp_ident "bound_value_identifiers" (typing/types.ml[465,14842+12]..[465,14842+35])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[465,14842+36]..[465,14842+39])
                              Pexp_ident "rem" (typing/types.ml[465,14842+36]..[465,14842+39])
                        ]
                    ]
            <case>
              pattern (typing/types.ml[466,14882+4]..[466,14882+33])
                Ppat_construct "::" (typing/types.ml[466,14882+27]..[466,14882+29])
                Some
                  []
                  pattern (typing/types.ml[466,14882+4]..[466,14882+33]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[466,14882+4]..[466,14882+26])
                        Ppat_construct "Sig_class" (typing/types.ml[466,14882+4]..[466,14882+13])
                        Some
                          []
                          pattern (typing/types.ml[466,14882+13]..[466,14882+26])
                            Ppat_tuple
                            [
                              pattern (typing/types.ml[466,14882+14]..[466,14882+16])
                                Ppat_var "id" (typing/types.ml[466,14882+14]..[466,14882+16])
                              pattern (typing/types.ml[466,14882+18]..[466,14882+19])
                                Ppat_any
                              pattern (typing/types.ml[466,14882+21]..[466,14882+22])
                                Ppat_any
                              pattern (typing/types.ml[466,14882+24]..[466,14882+25])
                                Ppat_any
                            ]
                      pattern (typing/types.ml[466,14882+30]..[466,14882+33])
                        Ppat_var "rem" (typing/types.ml[466,14882+30]..[466,14882+33])
                    ]
              expression (typing/types.ml[466,14882+37]..[466,14882+70])
                Pexp_construct "::" (typing/types.ml[466,14882+40]..[466,14882+42])
                Some
                  expression (typing/types.ml[466,14882+37]..[466,14882+70]) ghost
                    Pexp_tuple
                    [
                      expression (typing/types.ml[466,14882+37]..[466,14882+39])
                        Pexp_ident "id" (typing/types.ml[466,14882+37]..[466,14882+39])
                      expression (typing/types.ml[466,14882+43]..[466,14882+70])
                        Pexp_apply
                        expression (typing/types.ml[466,14882+43]..[466,14882+66])
                          Pexp_ident "bound_value_identifiers" (typing/types.ml[466,14882+43]..[466,14882+66])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[466,14882+67]..[466,14882+70])
                              Pexp_ident "rem" (typing/types.ml[466,14882+67]..[466,14882+70])
                        ]
                    ]
            <case>
              pattern (typing/types.ml[467,14953+4]..[467,14953+12])
                Ppat_construct "::" (typing/types.ml[467,14953+6]..[467,14953+8])
                Some
                  []
                  pattern (typing/types.ml[467,14953+4]..[467,14953+12]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[467,14953+4]..[467,14953+5])
                        Ppat_any
                      pattern (typing/types.ml[467,14953+9]..[467,14953+12])
                        Ppat_var "rem" (typing/types.ml[467,14953+9]..[467,14953+12])
                    ]
              expression (typing/types.ml[467,14953+16]..[467,14953+43])
                Pexp_apply
                expression (typing/types.ml[467,14953+16]..[467,14953+39])
                  Pexp_ident "bound_value_identifiers" (typing/types.ml[467,14953+16]..[467,14953+39])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[467,14953+40]..[467,14953+43])
                      Pexp_ident "rem" (typing/types.ml[467,14953+40]..[467,14953+43])
                ]
          ]
    ]
  structure_item (typing/types.ml[469,14998+0]..[477,15232+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[469,14998+4]..[469,14998+21])
          Ppat_var "signature_item_id" (typing/types.ml[469,14998+4]..[469,14998+21])
        expression (typing/types.ml[469,14998+24]..[477,15232+9])
          Pexp_function
          [
            <case>
              pattern (typing/types.ml[470,15031+4]..[476,15199+32])
                Ppat_or
                pattern (typing/types.ml[470,15031+4]..[475,15171+27])
                  Ppat_or
                  pattern (typing/types.ml[470,15031+4]..[474,15144+26])
                    Ppat_or
                    pattern (typing/types.ml[470,15031+4]..[473,15112+31])
                      Ppat_or
                      pattern (typing/types.ml[470,15031+4]..[472,15083+28])
                        Ppat_or
                        pattern (typing/types.ml[470,15031+4]..[471,15056+26])
                          Ppat_or
                          pattern (typing/types.ml[470,15031+4]..[470,15031+24])
                            Ppat_construct "Sig_value" (typing/types.ml[470,15031+4]..[470,15031+13])
                            Some
                              []
                              pattern (typing/types.ml[470,15031+14]..[470,15031+24])
                                Ppat_tuple
                                [
                                  pattern (typing/types.ml[470,15031+15]..[470,15031+17])
                                    Ppat_var "id" (typing/types.ml[470,15031+15]..[470,15031+17])
                                  pattern (typing/types.ml[470,15031+19]..[470,15031+20])
                                    Ppat_any
                                  pattern (typing/types.ml[470,15031+22]..[470,15031+23])
                                    Ppat_any
                                ]
                          pattern (typing/types.ml[471,15056+4]..[471,15056+26])
                            Ppat_construct "Sig_type" (typing/types.ml[471,15056+4]..[471,15056+12])
                            Some
                              []
                              pattern (typing/types.ml[471,15056+13]..[471,15056+26])
                                Ppat_tuple
                                [
                                  pattern (typing/types.ml[471,15056+14]..[471,15056+16])
                                    Ppat_var "id" (typing/types.ml[471,15056+14]..[471,15056+16])
                                  pattern (typing/types.ml[471,15056+18]..[471,15056+19])
                                    Ppat_any
                                  pattern (typing/types.ml[471,15056+21]..[471,15056+22])
                                    Ppat_any
                                  pattern (typing/types.ml[471,15056+24]..[471,15056+25])
                                    Ppat_any
                                ]
                        pattern (typing/types.ml[472,15083+4]..[472,15083+28])
                          Ppat_construct "Sig_typext" (typing/types.ml[472,15083+4]..[472,15083+14])
                          Some
                            []
                            pattern (typing/types.ml[472,15083+15]..[472,15083+28])
                              Ppat_tuple
                              [
                                pattern (typing/types.ml[472,15083+16]..[472,15083+18])
                                  Ppat_var "id" (typing/types.ml[472,15083+16]..[472,15083+18])
                                pattern (typing/types.ml[472,15083+20]..[472,15083+21])
                                  Ppat_any
                                pattern (typing/types.ml[472,15083+23]..[472,15083+24])
                                  Ppat_any
                                pattern (typing/types.ml[472,15083+26]..[472,15083+27])
                                  Ppat_any
                              ]
                      pattern (typing/types.ml[473,15112+4]..[473,15112+31])
                        Ppat_construct "Sig_module" (typing/types.ml[473,15112+4]..[473,15112+14])
                        Some
                          []
                          pattern (typing/types.ml[473,15112+15]..[473,15112+31])
                            Ppat_tuple
                            [
                              pattern (typing/types.ml[473,15112+16]..[473,15112+18])
                                Ppat_var "id" (typing/types.ml[473,15112+16]..[473,15112+18])
                              pattern (typing/types.ml[473,15112+20]..[473,15112+21])
                                Ppat_any
                              pattern (typing/types.ml[473,15112+23]..[473,15112+24])
                                Ppat_any
                              pattern (typing/types.ml[473,15112+26]..[473,15112+27])
                                Ppat_any
                              pattern (typing/types.ml[473,15112+29]..[473,15112+30])
                                Ppat_any
                            ]
                    pattern (typing/types.ml[474,15144+4]..[474,15144+26])
                      Ppat_construct "Sig_modtype" (typing/types.ml[474,15144+4]..[474,15144+15])
                      Some
                        []
                        pattern (typing/types.ml[474,15144+16]..[474,15144+26])
                          Ppat_tuple
                          [
                            pattern (typing/types.ml[474,15144+17]..[474,15144+19])
                              Ppat_var "id" (typing/types.ml[474,15144+17]..[474,15144+19])
                            pattern (typing/types.ml[474,15144+21]..[474,15144+22])
                              Ppat_any
                            pattern (typing/types.ml[474,15144+24]..[474,15144+25])
                              Ppat_any
                          ]
                  pattern (typing/types.ml[475,15171+4]..[475,15171+27])
                    Ppat_construct "Sig_class" (typing/types.ml[475,15171+4]..[475,15171+13])
                    Some
                      []
                      pattern (typing/types.ml[475,15171+14]..[475,15171+27])
                        Ppat_tuple
                        [
                          pattern (typing/types.ml[475,15171+15]..[475,15171+17])
                            Ppat_var "id" (typing/types.ml[475,15171+15]..[475,15171+17])
                          pattern (typing/types.ml[475,15171+19]..[475,15171+20])
                            Ppat_any
                          pattern (typing/types.ml[475,15171+22]..[475,15171+23])
                            Ppat_any
                          pattern (typing/types.ml[475,15171+25]..[475,15171+26])
                            Ppat_any
                        ]
                pattern (typing/types.ml[476,15199+4]..[476,15199+32])
                  Ppat_construct "Sig_class_type" (typing/types.ml[476,15199+4]..[476,15199+18])
                  Some
                    []
                    pattern (typing/types.ml[476,15199+19]..[476,15199+32])
                      Ppat_tuple
                      [
                        pattern (typing/types.ml[476,15199+20]..[476,15199+22])
                          Ppat_var "id" (typing/types.ml[476,15199+20]..[476,15199+22])
                        pattern (typing/types.ml[476,15199+24]..[476,15199+25])
                          Ppat_any
                        pattern (typing/types.ml[476,15199+27]..[476,15199+28])
                          Ppat_any
                        pattern (typing/types.ml[476,15199+30]..[476,15199+31])
                          Ppat_any
                      ]
              expression (typing/types.ml[477,15232+7]..[477,15232+9])
                Pexp_ident "id" (typing/types.ml[477,15232+7]..[477,15232+9])
          ]
    ]
  structure_item (typing/types.ml[483,15320+0]..[493,15720+52])
    Pstr_type Rec
    [
      type_declaration "change" (typing/types.ml[483,15320+5]..[483,15320+11]) (typing/types.ml[483,15320+0]..[493,15720+52])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[484,15334+4]..[484,15334+34])
                "Ctype" (typing/types.ml[484,15334+4]..[484,15334+9])
                [
                  core_type (typing/types.ml[484,15334+13]..[484,15334+22])
                    Ptyp_constr "type_expr" (typing/types.ml[484,15334+13]..[484,15334+22])
                    []
                  core_type (typing/types.ml[484,15334+25]..[484,15334+34])
                    Ptyp_constr "type_desc" (typing/types.ml[484,15334+25]..[484,15334+34])
                    []
                ]
                None
              (typing/types.ml[485,15369+2]..[485,15369+50])
                "Ccompress" (typing/types.ml[485,15369+4]..[485,15369+13])
                [
                  core_type (typing/types.ml[485,15369+17]..[485,15369+26])
                    Ptyp_constr "type_expr" (typing/types.ml[485,15369+17]..[485,15369+26])
                    []
                  core_type (typing/types.ml[485,15369+29]..[485,15369+38])
                    Ptyp_constr "type_desc" (typing/types.ml[485,15369+29]..[485,15369+38])
                    []
                  core_type (typing/types.ml[485,15369+41]..[485,15369+50])
                    Ptyp_constr "type_desc" (typing/types.ml[485,15369+41]..[485,15369+50])
                    []
                ]
                None
              (typing/types.ml[486,15420+2]..[486,15420+29])
                "Clevel" (typing/types.ml[486,15420+4]..[486,15420+10])
                [
                  core_type (typing/types.ml[486,15420+14]..[486,15420+23])
                    Ptyp_constr "type_expr" (typing/types.ml[486,15420+14]..[486,15420+23])
                    []
                  core_type (typing/types.ml[486,15420+26]..[486,15420+29])
                    Ptyp_constr "int" (typing/types.ml[486,15420+26]..[486,15420+29])
                    []
                ]
                None
              (typing/types.ml[487,15450+2]..[487,15450+29])
                "Cscope" (typing/types.ml[487,15450+4]..[487,15450+10])
                [
                  core_type (typing/types.ml[487,15450+14]..[487,15450+23])
                    Ptyp_constr "type_expr" (typing/types.ml[487,15450+14]..[487,15450+23])
                    []
                  core_type (typing/types.ml[487,15450+26]..[487,15450+29])
                    Ptyp_constr "int" (typing/types.ml[487,15450+26]..[487,15450+29])
                    []
                ]
                None
              (typing/types.ml[488,15480+2]..[489,15493+77])
                "Cname" (typing/types.ml[488,15480+4]..[488,15480+9])
                [
                  core_type (typing/types.ml[489,15493+6]..[489,15493+42])
                    Ptyp_constr "ref" (typing/types.ml[489,15493+39]..[489,15493+42])
                    [
                      core_type (typing/types.ml[489,15493+6]..[489,15493+38])
                        Ptyp_constr "option" (typing/types.ml[489,15493+32]..[489,15493+38])
                        [
                          core_type (typing/types.ml[489,15493+7]..[489,15493+30])
                            Ptyp_tuple
                            [
                              core_type (typing/types.ml[489,15493+7]..[489,15493+13])
                                Ptyp_constr "Path.t" (typing/types.ml[489,15493+7]..[489,15493+13])
                                []
                              core_type (typing/types.ml[489,15493+16]..[489,15493+30])
                                Ptyp_constr "list" (typing/types.ml[489,15493+26]..[489,15493+30])
                                [
                                  core_type (typing/types.ml[489,15493+16]..[489,15493+25])
                                    Ptyp_constr "type_expr" (typing/types.ml[489,15493+16]..[489,15493+25])
                                    []
                                ]
                            ]
                        ]
                    ]
                  core_type (typing/types.ml[489,15493+45]..[489,15493+77])
                    Ptyp_constr "option" (typing/types.ml[489,15493+71]..[489,15493+77])
                    [
                      core_type (typing/types.ml[489,15493+46]..[489,15493+69])
                        Ptyp_tuple
                        [
                          core_type (typing/types.ml[489,15493+46]..[489,15493+52])
                            Ptyp_constr "Path.t" (typing/types.ml[489,15493+46]..[489,15493+52])
                            []
                          core_type (typing/types.ml[489,15493+55]..[489,15493+69])
                            Ptyp_constr "list" (typing/types.ml[489,15493+65]..[489,15493+69])
                            [
                              core_type (typing/types.ml[489,15493+55]..[489,15493+64])
                                Ptyp_constr "type_expr" (typing/types.ml[489,15493+55]..[489,15493+64])
                                []
                            ]
                        ]
                    ]
                ]
                None
              (typing/types.ml[490,15571+2]..[490,15571+51])
                "Crow" (typing/types.ml[490,15571+4]..[490,15571+8])
                [
                  core_type (typing/types.ml[490,15571+12]..[490,15571+32])
                    Ptyp_constr "ref" (typing/types.ml[490,15571+29]..[490,15571+32])
                    [
                      core_type (typing/types.ml[490,15571+12]..[490,15571+28])
                        Ptyp_constr "option" (typing/types.ml[490,15571+22]..[490,15571+28])
                        [
                          core_type (typing/types.ml[490,15571+12]..[490,15571+21])
                            Ptyp_constr "row_field" (typing/types.ml[490,15571+12]..[490,15571+21])
                            []
                        ]
                    ]
                  core_type (typing/types.ml[490,15571+35]..[490,15571+51])
                    Ptyp_constr "option" (typing/types.ml[490,15571+45]..[490,15571+51])
                    [
                      core_type (typing/types.ml[490,15571+35]..[490,15571+44])
                        Ptyp_constr "row_field" (typing/types.ml[490,15571+35]..[490,15571+44])
                        []
                    ]
                ]
                None
              (typing/types.ml[491,15623+2]..[491,15623+54])
                "Ckind" (typing/types.ml[491,15623+4]..[491,15623+9])
                [
                  core_type (typing/types.ml[491,15623+13]..[491,15623+34])
                    Ptyp_constr "ref" (typing/types.ml[491,15623+31]..[491,15623+34])
                    [
                      core_type (typing/types.ml[491,15623+13]..[491,15623+30])
                        Ptyp_constr "option" (typing/types.ml[491,15623+24]..[491,15623+30])
                        [
                          core_type (typing/types.ml[491,15623+13]..[491,15623+23])
                            Ptyp_constr "field_kind" (typing/types.ml[491,15623+13]..[491,15623+23])
                            []
                        ]
                    ]
                  core_type (typing/types.ml[491,15623+37]..[491,15623+54])
                    Ptyp_constr "option" (typing/types.ml[491,15623+48]..[491,15623+54])
                    [
                      core_type (typing/types.ml[491,15623+37]..[491,15623+47])
                        Ptyp_constr "field_kind" (typing/types.ml[491,15623+37]..[491,15623+47])
                        []
                    ]
                ]
                None
              (typing/types.ml[492,15678+2]..[492,15678+41])
                "Ccommu" (typing/types.ml[492,15678+4]..[492,15678+10])
                [
                  core_type (typing/types.ml[492,15678+14]..[492,15678+28])
                    Ptyp_constr "ref" (typing/types.ml[492,15678+25]..[492,15678+28])
                    [
                      core_type (typing/types.ml[492,15678+14]..[492,15678+24])
                        Ptyp_constr "commutable" (typing/types.ml[492,15678+14]..[492,15678+24])
                        []
                    ]
                  core_type (typing/types.ml[492,15678+31]..[492,15678+41])
                    Ptyp_constr "commutable" (typing/types.ml[492,15678+31]..[492,15678+41])
                    []
                ]
                None
              (typing/types.ml[493,15720+2]..[493,15720+52])
                "Cuniv" (typing/types.ml[493,15720+4]..[493,15720+9])
                [
                  core_type (typing/types.ml[493,15720+13]..[493,15720+33])
                    Ptyp_constr "ref" (typing/types.ml[493,15720+30]..[493,15720+33])
                    [
                      core_type (typing/types.ml[493,15720+13]..[493,15720+29])
                        Ptyp_constr "option" (typing/types.ml[493,15720+23]..[493,15720+29])
                        [
                          core_type (typing/types.ml[493,15720+13]..[493,15720+22])
                            Ptyp_constr "type_expr" (typing/types.ml[493,15720+13]..[493,15720+22])
                            []
                        ]
                    ]
                  core_type (typing/types.ml[493,15720+36]..[493,15720+52])
                    Ptyp_constr "option" (typing/types.ml[493,15720+46]..[493,15720+52])
                    [
                      core_type (typing/types.ml[493,15720+36]..[493,15720+45])
                        Ptyp_constr "type_expr" (typing/types.ml[493,15720+36]..[493,15720+45])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/types.ml[495,15774+0]..[498,15838+11])
    Pstr_type Rec
    [
      type_declaration "changes" (typing/types.ml[495,15774+5]..[495,15774+12]) (typing/types.ml[495,15774+0]..[498,15838+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.ml[496,15789+4]..[496,15789+34])
                "Change" (typing/types.ml[496,15789+4]..[496,15789+10])
                [
                  core_type (typing/types.ml[496,15789+14]..[496,15789+20])
                    Ptyp_constr "change" (typing/types.ml[496,15789+14]..[496,15789+20])
                    []
                  core_type (typing/types.ml[496,15789+23]..[496,15789+34])
                    Ptyp_constr "ref" (typing/types.ml[496,15789+31]..[496,15789+34])
                    [
                      core_type (typing/types.ml[496,15789+23]..[496,15789+30])
                        Ptyp_constr "changes" (typing/types.ml[496,15789+23]..[496,15789+30])
                        []
                    ]
                ]
                None
              (typing/types.ml[497,15824+2]..[497,15824+13])
                "Unchanged" (typing/types.ml[497,15824+4]..[497,15824+13])
                []
                None
              (typing/types.ml[498,15838+2]..[498,15838+11])
                "Invalid" (typing/types.ml[498,15838+4]..[498,15838+11])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/types.ml[500,15851+0]..[500,15851+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[500,15851+4]..[500,15851+9])
          Ppat_var "trail" (typing/types.ml[500,15851+4]..[500,15851+9])
        expression (typing/types.ml[500,15851+12]..[500,15851+45])
          Pexp_apply
          expression (typing/types.ml[500,15851+12]..[500,15851+31])
            Pexp_ident "Local_store.s_table" (typing/types.ml[500,15851+12]..[500,15851+31])
          [
            <arg>
            Nolabel
              expression (typing/types.ml[500,15851+32]..[500,15851+35])
                Pexp_ident "ref" (typing/types.ml[500,15851+32]..[500,15851+35])
            <arg>
            Nolabel
              expression (typing/types.ml[500,15851+36]..[500,15851+45])
                Pexp_construct "Unchanged" (typing/types.ml[500,15851+36]..[500,15851+45])
                None
          ]
    ]
  structure_item (typing/types.ml[502,15898+0]..[505,15975+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[502,15898+4]..[502,15898+14])
          Ppat_var "log_change" (typing/types.ml[502,15898+4]..[502,15898+14])
        expression (typing/types.ml[502,15898+15]..[505,15975+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[502,15898+15]..[502,15898+17])
            Ppat_var "ch" (typing/types.ml[502,15898+15]..[502,15898+17])
          expression (typing/types.ml[503,15918+2]..[505,15975+13])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/types.ml[503,15918+6]..[503,15918+8])
                  Ppat_var "r'" (typing/types.ml[503,15918+6]..[503,15918+8])
                expression (typing/types.ml[503,15918+11]..[503,15918+24])
                  Pexp_apply
                  expression (typing/types.ml[503,15918+11]..[503,15918+14])
                    Pexp_ident "ref" (typing/types.ml[503,15918+11]..[503,15918+14])
                  [
                    <arg>
                    Nolabel
                      expression (typing/types.ml[503,15918+15]..[503,15918+24])
                        Pexp_construct "Unchanged" (typing/types.ml[503,15918+15]..[503,15918+24])
                        None
                  ]
            ]
            expression (typing/types.ml[504,15946+2]..[505,15975+13])
              Pexp_sequence
              expression (typing/types.ml[504,15946+2]..[504,15946+27])
                Pexp_apply
                expression (typing/types.ml[504,15946+9]..[504,15946+11])
                  Pexp_ident ":=" (typing/types.ml[504,15946+9]..[504,15946+11])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[504,15946+2]..[504,15946+8])
                      Pexp_apply
                      expression (typing/types.ml[504,15946+2]..[504,15946+3])
                        Pexp_ident "!" (typing/types.ml[504,15946+2]..[504,15946+3])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[504,15946+3]..[504,15946+8])
                            Pexp_ident "trail" (typing/types.ml[504,15946+3]..[504,15946+8])
                      ]
                  <arg>
                  Nolabel
                    expression (typing/types.ml[504,15946+12]..[504,15946+27])
                      Pexp_construct "Change" (typing/types.ml[504,15946+12]..[504,15946+18])
                      Some
                        expression (typing/types.ml[504,15946+19]..[504,15946+27])
                          Pexp_tuple
                          [
                            expression (typing/types.ml[504,15946+20]..[504,15946+22])
                              Pexp_ident "ch" (typing/types.ml[504,15946+20]..[504,15946+22])
                            expression (typing/types.ml[504,15946+24]..[504,15946+26])
                              Pexp_ident "r'" (typing/types.ml[504,15946+24]..[504,15946+26])
                          ]
                ]
              expression (typing/types.ml[505,15975+2]..[505,15975+13])
                Pexp_apply
                expression (typing/types.ml[505,15975+8]..[505,15975+10])
                  Pexp_ident ":=" (typing/types.ml[505,15975+8]..[505,15975+10])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[505,15975+2]..[505,15975+7])
                      Pexp_ident "trail" (typing/types.ml[505,15975+2]..[505,15975+7])
                  <arg>
                  Nolabel
                    expression (typing/types.ml[505,15975+11]..[505,15975+13])
                      Pexp_ident "r'" (typing/types.ml[505,15975+11]..[505,15975+13])
                ]
    ]
  structure_item (typing/types.ml[509,16028+0]..[512,16121+39])
    Pstr_value Rec
    [
      <def>
        pattern (typing/types.ml[509,16028+8]..[509,16028+23])
          Ppat_var "field_kind_repr" (typing/types.ml[509,16028+8]..[509,16028+23])
        expression (typing/types.ml[510,16054+2]..[512,16121+39])
          Pexp_function
          [
            <case>
              pattern (typing/types.ml[511,16065+4]..[511,16065+31])
                Ppat_construct "Fvar" (typing/types.ml[511,16065+4]..[511,16065+8])
                Some
                  []
                  pattern (typing/types.ml[511,16065+9]..[511,16065+31])
                    Ppat_record Closed
                    [
                      "contents" (typing/types.ml[511,16065+10]..[511,16065+18])
                        pattern (typing/types.ml[511,16065+21]..[511,16065+30])
                          Ppat_construct "Some" (typing/types.ml[511,16065+21]..[511,16065+25])
                          Some
                            []
                            pattern (typing/types.ml[511,16065+26]..[511,16065+30])
                              Ppat_var "kind" (typing/types.ml[511,16065+26]..[511,16065+30])
                    ]
              expression (typing/types.ml[511,16065+35]..[511,16065+55])
                Pexp_apply
                expression (typing/types.ml[511,16065+35]..[511,16065+50])
                  Pexp_ident "field_kind_repr" (typing/types.ml[511,16065+35]..[511,16065+50])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[511,16065+51]..[511,16065+55])
                      Pexp_ident "kind" (typing/types.ml[511,16065+51]..[511,16065+55])
                ]
            <case>
              pattern (typing/types.ml[512,16121+4]..[512,16121+8])
                Ppat_var "kind" (typing/types.ml[512,16121+4]..[512,16121+8])
              expression (typing/types.ml[512,16121+35]..[512,16121+39])
                Pexp_ident "kind" (typing/types.ml[512,16121+35]..[512,16121+39])
          ]
    ]
  structure_item (typing/types.ml[514,16162+0]..[523,16457+7])
    Pstr_value Rec
    [
      <def>
        pattern (typing/types.ml[514,16162+8]..[514,16162+17])
          Ppat_var "repr_link" (typing/types.ml[514,16162+8]..[514,16162+17])
        expression (typing/types.ml[514,16162+18]..[523,16457+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[514,16162+18]..[514,16162+33])
            Ppat_constraint
            pattern (typing/types.ml[514,16162+19]..[514,16162+20])
              Ppat_var "t" (typing/types.ml[514,16162+19]..[514,16162+20])
            core_type (typing/types.ml[514,16162+23]..[514,16162+32])
              Ptyp_constr "type_expr" (typing/types.ml[514,16162+23]..[514,16162+32])
              []
          expression (typing/types.ml[514,16162+34]..[523,16457+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[514,16162+34]..[514,16162+35])
              Ppat_var "d" (typing/types.ml[514,16162+34]..[514,16162+35])
            expression (typing/types.ml[514,16162+36]..[523,16457+7])
              Pexp_constraint
              expression (typing/types.ml[515,16225+1]..[523,16457+7])
                Pexp_function
                [
                  <case>
                    pattern (typing/types.ml[516,16235+3]..[516,16235+26])
                      Ppat_record Closed
                      [
                        "desc" (typing/types.ml[516,16235+4]..[516,16235+8])
                          pattern (typing/types.ml[516,16235+11]..[516,16235+25])
                            Ppat_alias "d'" (typing/types.ml[516,16235+23]..[516,16235+25])
                            pattern (typing/types.ml[516,16235+11]..[516,16235+19])
                              Ppat_construct "Tlink" (typing/types.ml[516,16235+11]..[516,16235+16])
                              Some
                                []
                                pattern (typing/types.ml[516,16235+17]..[516,16235+19])
                                  Ppat_var "t'" (typing/types.ml[516,16235+17]..[516,16235+19])
                      ]
                    expression (typing/types.ml[517,16265+5]..[517,16265+22])
                      Pexp_apply
                      expression (typing/types.ml[517,16265+5]..[517,16265+14])
                        Pexp_ident "repr_link" (typing/types.ml[517,16265+5]..[517,16265+14])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[517,16265+15]..[517,16265+16])
                            Pexp_ident "t" (typing/types.ml[517,16265+15]..[517,16265+16])
                        <arg>
                        Nolabel
                          expression (typing/types.ml[517,16265+17]..[517,16265+19])
                            Pexp_ident "d'" (typing/types.ml[517,16265+17]..[517,16265+19])
                        <arg>
                        Nolabel
                          expression (typing/types.ml[517,16265+20]..[517,16265+22])
                            Pexp_ident "t'" (typing/types.ml[517,16265+20]..[517,16265+22])
                      ]
                  <case>
                    pattern (typing/types.ml[518,16288+3]..[518,16288+38])
                      Ppat_record Closed
                      [
                        "desc" (typing/types.ml[518,16288+4]..[518,16288+8])
                          pattern (typing/types.ml[518,16288+11]..[518,16288+37])
                            Ppat_alias "d'" (typing/types.ml[518,16288+35]..[518,16288+37])
                            pattern (typing/types.ml[518,16288+11]..[518,16288+31])
                              Ppat_construct "Tfield" (typing/types.ml[518,16288+11]..[518,16288+17])
                              Some
                                []
                                pattern (typing/types.ml[518,16288+18]..[518,16288+31])
                                  Ppat_tuple
                                  [
                                    pattern (typing/types.ml[518,16288+19]..[518,16288+20])
                                      Ppat_any
                                    pattern (typing/types.ml[518,16288+22]..[518,16288+23])
                                      Ppat_var "k" (typing/types.ml[518,16288+22]..[518,16288+23])
                                    pattern (typing/types.ml[518,16288+25]..[518,16288+26])
                                      Ppat_any
                                    pattern (typing/types.ml[518,16288+28]..[518,16288+30])
                                      Ppat_var "t'" (typing/types.ml[518,16288+28]..[518,16288+30])
                                  ]
                      ]
                    <when>
                      expression (typing/types.ml[518,16288+44]..[518,16288+71])
                        Pexp_apply
                        expression (typing/types.ml[518,16288+62]..[518,16288+63])
                          Pexp_ident "=" (typing/types.ml[518,16288+62]..[518,16288+63])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[518,16288+44]..[518,16288+61])
                              Pexp_apply
                              expression (typing/types.ml[518,16288+44]..[518,16288+59])
                                Pexp_ident "field_kind_repr" (typing/types.ml[518,16288+44]..[518,16288+59])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[518,16288+60]..[518,16288+61])
                                    Pexp_ident "k" (typing/types.ml[518,16288+60]..[518,16288+61])
                              ]
                          <arg>
                          Nolabel
                            expression (typing/types.ml[518,16288+64]..[518,16288+71])
                              Pexp_construct "Fabsent" (typing/types.ml[518,16288+64]..[518,16288+71])
                              None
                        ]
                    expression (typing/types.ml[519,16363+5]..[519,16363+22])
                      Pexp_apply
                      expression (typing/types.ml[519,16363+5]..[519,16363+14])
                        Pexp_ident "repr_link" (typing/types.ml[519,16363+5]..[519,16363+14])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[519,16363+15]..[519,16363+16])
                            Pexp_ident "t" (typing/types.ml[519,16363+15]..[519,16363+16])
                        <arg>
                        Nolabel
                          expression (typing/types.ml[519,16363+17]..[519,16363+19])
                            Pexp_ident "d'" (typing/types.ml[519,16363+17]..[519,16363+19])
                        <arg>
                        Nolabel
                          expression (typing/types.ml[519,16363+20]..[519,16363+22])
                            Pexp_ident "t'" (typing/types.ml[519,16363+20]..[519,16363+22])
                      ]
                  <case>
                    pattern (typing/types.ml[520,16386+3]..[520,16386+5])
                      Ppat_var "t'" (typing/types.ml[520,16386+3]..[520,16386+5])
                    expression (typing/types.ml[521,16395+5]..[523,16457+7])
                      Pexp_sequence
                      expression (typing/types.ml[521,16395+5]..[521,16395+42])
                        Pexp_apply
                        expression (typing/types.ml[521,16395+5]..[521,16395+15])
                          Pexp_ident "log_change" (typing/types.ml[521,16395+5]..[521,16395+15])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[521,16395+16]..[521,16395+42])
                              Pexp_construct "Ccompress" (typing/types.ml[521,16395+17]..[521,16395+26])
                              Some
                                expression (typing/types.ml[521,16395+27]..[521,16395+41])
                                  Pexp_tuple
                                  [
                                    expression (typing/types.ml[521,16395+28]..[521,16395+29])
                                      Pexp_ident "t" (typing/types.ml[521,16395+28]..[521,16395+29])
                                    expression (typing/types.ml[521,16395+31]..[521,16395+37])
                                      Pexp_field
                                      expression (typing/types.ml[521,16395+31]..[521,16395+32])
                                        Pexp_ident "t" (typing/types.ml[521,16395+31]..[521,16395+32])
                                      "desc" (typing/types.ml[521,16395+33]..[521,16395+37])
                                    expression (typing/types.ml[521,16395+39]..[521,16395+40])
                                      Pexp_ident "d" (typing/types.ml[521,16395+39]..[521,16395+40])
                                  ]
                        ]
                      expression (typing/types.ml[522,16439+5]..[523,16457+7])
                        Pexp_sequence
                        expression (typing/types.ml[522,16439+5]..[522,16439+16])
                          Pexp_setfield
                          expression (typing/types.ml[522,16439+5]..[522,16439+6])
                            Pexp_ident "t" (typing/types.ml[522,16439+5]..[522,16439+6])
                          "desc" (typing/types.ml[522,16439+7]..[522,16439+11])
                          expression (typing/types.ml[522,16439+15]..[522,16439+16])
                            Pexp_ident "d" (typing/types.ml[522,16439+15]..[522,16439+16])
                        expression (typing/types.ml[523,16457+5]..[523,16457+7])
                          Pexp_ident "t'" (typing/types.ml[523,16457+5]..[523,16457+7])
                ]
              core_type (typing/types.ml[514,16162+38]..[514,16162+60])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.ml[514,16162+38]..[514,16162+47])
                  Ptyp_constr "type_expr" (typing/types.ml[514,16162+38]..[514,16162+47])
                  []
                core_type (typing/types.ml[514,16162+51]..[514,16162+60])
                  Ptyp_constr "type_expr" (typing/types.ml[514,16162+51]..[514,16162+60])
                  []
    ]
  structure_item (typing/types.ml[525,16466+0]..[530,16645+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[525,16466+4]..[525,16466+14])
          Ppat_var "repr_link1" (typing/types.ml[525,16466+4]..[525,16466+14])
        expression (typing/types.ml[525,16466+15]..[530,16645+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[525,16466+15]..[525,16466+16])
            Ppat_var "t" (typing/types.ml[525,16466+15]..[525,16466+16])
          expression (typing/types.ml[525,16466+19]..[530,16645+11])
            Pexp_function
            [
              <case>
                pattern (typing/types.ml[526,16494+3]..[526,16494+26])
                  Ppat_record Closed
                  [
                    "desc" (typing/types.ml[526,16494+4]..[526,16494+8])
                      pattern (typing/types.ml[526,16494+11]..[526,16494+25])
                        Ppat_alias "d'" (typing/types.ml[526,16494+23]..[526,16494+25])
                        pattern (typing/types.ml[526,16494+11]..[526,16494+19])
                          Ppat_construct "Tlink" (typing/types.ml[526,16494+11]..[526,16494+16])
                          Some
                            []
                            pattern (typing/types.ml[526,16494+17]..[526,16494+19])
                              Ppat_var "t'" (typing/types.ml[526,16494+17]..[526,16494+19])
                  ]
                expression (typing/types.ml[527,16524+5]..[527,16524+22])
                  Pexp_apply
                  expression (typing/types.ml[527,16524+5]..[527,16524+14])
                    Pexp_ident "repr_link" (typing/types.ml[527,16524+5]..[527,16524+14])
                  [
                    <arg>
                    Nolabel
                      expression (typing/types.ml[527,16524+15]..[527,16524+16])
                        Pexp_ident "t" (typing/types.ml[527,16524+15]..[527,16524+16])
                    <arg>
                    Nolabel
                      expression (typing/types.ml[527,16524+17]..[527,16524+19])
                        Pexp_ident "d'" (typing/types.ml[527,16524+17]..[527,16524+19])
                    <arg>
                    Nolabel
                      expression (typing/types.ml[527,16524+20]..[527,16524+22])
                        Pexp_ident "t'" (typing/types.ml[527,16524+20]..[527,16524+22])
                  ]
              <case>
                pattern (typing/types.ml[528,16547+3]..[528,16547+38])
                  Ppat_record Closed
                  [
                    "desc" (typing/types.ml[528,16547+4]..[528,16547+8])
                      pattern (typing/types.ml[528,16547+11]..[528,16547+37])
                        Ppat_alias "d'" (typing/types.ml[528,16547+35]..[528,16547+37])
                        pattern (typing/types.ml[528,16547+11]..[528,16547+31])
                          Ppat_construct "Tfield" (typing/types.ml[528,16547+11]..[528,16547+17])
                          Some
                            []
                            pattern (typing/types.ml[528,16547+18]..[528,16547+31])
                              Ppat_tuple
                              [
                                pattern (typing/types.ml[528,16547+19]..[528,16547+20])
                                  Ppat_any
                                pattern (typing/types.ml[528,16547+22]..[528,16547+23])
                                  Ppat_var "k" (typing/types.ml[528,16547+22]..[528,16547+23])
                                pattern (typing/types.ml[528,16547+25]..[528,16547+26])
                                  Ppat_any
                                pattern (typing/types.ml[528,16547+28]..[528,16547+30])
                                  Ppat_var "t'" (typing/types.ml[528,16547+28]..[528,16547+30])
                              ]
                  ]
                <when>
                  expression (typing/types.ml[528,16547+44]..[528,16547+71])
                    Pexp_apply
                    expression (typing/types.ml[528,16547+62]..[528,16547+63])
                      Pexp_ident "=" (typing/types.ml[528,16547+62]..[528,16547+63])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[528,16547+44]..[528,16547+61])
                          Pexp_apply
                          expression (typing/types.ml[528,16547+44]..[528,16547+59])
                            Pexp_ident "field_kind_repr" (typing/types.ml[528,16547+44]..[528,16547+59])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[528,16547+60]..[528,16547+61])
                                Pexp_ident "k" (typing/types.ml[528,16547+60]..[528,16547+61])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/types.ml[528,16547+64]..[528,16547+71])
                          Pexp_construct "Fabsent" (typing/types.ml[528,16547+64]..[528,16547+71])
                          None
                    ]
                expression (typing/types.ml[529,16622+5]..[529,16622+22])
                  Pexp_apply
                  expression (typing/types.ml[529,16622+5]..[529,16622+14])
                    Pexp_ident "repr_link" (typing/types.ml[529,16622+5]..[529,16622+14])
                  [
                    <arg>
                    Nolabel
                      expression (typing/types.ml[529,16622+15]..[529,16622+16])
                        Pexp_ident "t" (typing/types.ml[529,16622+15]..[529,16622+16])
                    <arg>
                    Nolabel
                      expression (typing/types.ml[529,16622+17]..[529,16622+19])
                        Pexp_ident "d'" (typing/types.ml[529,16622+17]..[529,16622+19])
                    <arg>
                    Nolabel
                      expression (typing/types.ml[529,16622+20]..[529,16622+22])
                        Pexp_ident "t'" (typing/types.ml[529,16622+20]..[529,16622+22])
                  ]
              <case>
                pattern (typing/types.ml[530,16645+3]..[530,16645+5])
                  Ppat_var "t'" (typing/types.ml[530,16645+3]..[530,16645+5])
                expression (typing/types.ml[530,16645+9]..[530,16645+11])
                  Pexp_ident "t'" (typing/types.ml[530,16645+9]..[530,16645+11])
            ]
    ]
  structure_item (typing/types.ml[532,16658+0]..[538,16808+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[532,16658+4]..[532,16658+8])
          Ppat_var "repr" (typing/types.ml[532,16658+4]..[532,16658+8])
        expression (typing/types.ml[532,16658+9]..[538,16808+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[532,16658+9]..[532,16658+10])
            Ppat_var "t" (typing/types.ml[532,16658+9]..[532,16658+10])
          expression (typing/types.ml[533,16671+2]..[538,16808+9])
            Pexp_match
            expression (typing/types.ml[533,16671+8]..[533,16671+14])
              Pexp_field
              expression (typing/types.ml[533,16671+8]..[533,16671+9])
                Pexp_ident "t" (typing/types.ml[533,16671+8]..[533,16671+9])
              "desc" (typing/types.ml[533,16671+10]..[533,16671+14])
            [
              <case>
                pattern (typing/types.ml[534,16691+3]..[534,16691+11])
                  Ppat_construct "Tlink" (typing/types.ml[534,16691+3]..[534,16691+8])
                  Some
                    []
                    pattern (typing/types.ml[534,16691+9]..[534,16691+11])
                      Ppat_var "t'" (typing/types.ml[534,16691+9]..[534,16691+11])
                expression (typing/types.ml[535,16706+5]..[535,16706+20])
                  Pexp_apply
                  expression (typing/types.ml[535,16706+5]..[535,16706+15])
                    Pexp_ident "repr_link1" (typing/types.ml[535,16706+5]..[535,16706+15])
                  [
                    <arg>
                    Nolabel
                      expression (typing/types.ml[535,16706+16]..[535,16706+17])
                        Pexp_ident "t" (typing/types.ml[535,16706+16]..[535,16706+17])
                    <arg>
                    Nolabel
                      expression (typing/types.ml[535,16706+18]..[535,16706+20])
                        Pexp_ident "t'" (typing/types.ml[535,16706+18]..[535,16706+20])
                  ]
              <case>
                pattern (typing/types.ml[536,16727+3]..[536,16727+23])
                  Ppat_construct "Tfield" (typing/types.ml[536,16727+3]..[536,16727+9])
                  Some
                    []
                    pattern (typing/types.ml[536,16727+10]..[536,16727+23])
                      Ppat_tuple
                      [
                        pattern (typing/types.ml[536,16727+11]..[536,16727+12])
                          Ppat_any
                        pattern (typing/types.ml[536,16727+14]..[536,16727+15])
                          Ppat_var "k" (typing/types.ml[536,16727+14]..[536,16727+15])
                        pattern (typing/types.ml[536,16727+17]..[536,16727+18])
                          Ppat_any
                        pattern (typing/types.ml[536,16727+20]..[536,16727+22])
                          Ppat_var "t'" (typing/types.ml[536,16727+20]..[536,16727+22])
                      ]
                <when>
                  expression (typing/types.ml[536,16727+29]..[536,16727+56])
                    Pexp_apply
                    expression (typing/types.ml[536,16727+47]..[536,16727+48])
                      Pexp_ident "=" (typing/types.ml[536,16727+47]..[536,16727+48])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[536,16727+29]..[536,16727+46])
                          Pexp_apply
                          expression (typing/types.ml[536,16727+29]..[536,16727+44])
                            Pexp_ident "field_kind_repr" (typing/types.ml[536,16727+29]..[536,16727+44])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[536,16727+45]..[536,16727+46])
                                Pexp_ident "k" (typing/types.ml[536,16727+45]..[536,16727+46])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/types.ml[536,16727+49]..[536,16727+56])
                          Pexp_construct "Fabsent" (typing/types.ml[536,16727+49]..[536,16727+56])
                          None
                    ]
                expression (typing/types.ml[537,16787+5]..[537,16787+20])
                  Pexp_apply
                  expression (typing/types.ml[537,16787+5]..[537,16787+15])
                    Pexp_ident "repr_link1" (typing/types.ml[537,16787+5]..[537,16787+15])
                  [
                    <arg>
                    Nolabel
                      expression (typing/types.ml[537,16787+16]..[537,16787+17])
                        Pexp_ident "t" (typing/types.ml[537,16787+16]..[537,16787+17])
                    <arg>
                    Nolabel
                      expression (typing/types.ml[537,16787+18]..[537,16787+20])
                        Pexp_ident "t'" (typing/types.ml[537,16787+18]..[537,16787+20])
                  ]
              <case>
                pattern (typing/types.ml[538,16808+3]..[538,16808+4])
                  Ppat_any
                expression (typing/types.ml[538,16808+8]..[538,16808+9])
                  Pexp_ident "t" (typing/types.ml[538,16808+8]..[538,16808+9])
            ]
    ]
  structure_item (typing/types.ml[542,16848+0]..[542,16848+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[542,16848+4]..[542,16848+12])
          Ppat_var "get_desc" (typing/types.ml[542,16848+4]..[542,16848+12])
        expression (typing/types.ml[542,16848+13]..[542,16848+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[542,16848+13]..[542,16848+14])
            Ppat_var "t" (typing/types.ml[542,16848+13]..[542,16848+14])
          expression (typing/types.ml[542,16848+17]..[542,16848+30])
            Pexp_field
            expression (typing/types.ml[542,16848+17]..[542,16848+25])
              Pexp_apply
              expression (typing/types.ml[542,16848+18]..[542,16848+22])
                Pexp_ident "repr" (typing/types.ml[542,16848+18]..[542,16848+22])
              [
                <arg>
                Nolabel
                  expression (typing/types.ml[542,16848+23]..[542,16848+24])
                    Pexp_ident "t" (typing/types.ml[542,16848+23]..[542,16848+24])
              ]
            "desc" (typing/types.ml[542,16848+26]..[542,16848+30])
    ]
  structure_item (typing/types.ml[543,16879+0]..[543,16879+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[543,16879+4]..[543,16879+13])
          Ppat_var "get_level" (typing/types.ml[543,16879+4]..[543,16879+13])
        expression (typing/types.ml[543,16879+14]..[543,16879+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[543,16879+14]..[543,16879+15])
            Ppat_var "t" (typing/types.ml[543,16879+14]..[543,16879+15])
          expression (typing/types.ml[543,16879+18]..[543,16879+32])
            Pexp_field
            expression (typing/types.ml[543,16879+18]..[543,16879+26])
              Pexp_apply
              expression (typing/types.ml[543,16879+19]..[543,16879+23])
                Pexp_ident "repr" (typing/types.ml[543,16879+19]..[543,16879+23])
              [
                <arg>
                Nolabel
                  expression (typing/types.ml[543,16879+24]..[543,16879+25])
                    Pexp_ident "t" (typing/types.ml[543,16879+24]..[543,16879+25])
              ]
            "level" (typing/types.ml[543,16879+27]..[543,16879+32])
    ]
  structure_item (typing/types.ml[544,16912+0]..[544,16912+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[544,16912+4]..[544,16912+13])
          Ppat_var "get_scope" (typing/types.ml[544,16912+4]..[544,16912+13])
        expression (typing/types.ml[544,16912+14]..[544,16912+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[544,16912+14]..[544,16912+15])
            Ppat_var "t" (typing/types.ml[544,16912+14]..[544,16912+15])
          expression (typing/types.ml[544,16912+18]..[544,16912+32])
            Pexp_field
            expression (typing/types.ml[544,16912+18]..[544,16912+26])
              Pexp_apply
              expression (typing/types.ml[544,16912+19]..[544,16912+23])
                Pexp_ident "repr" (typing/types.ml[544,16912+19]..[544,16912+23])
              [
                <arg>
                Nolabel
                  expression (typing/types.ml[544,16912+24]..[544,16912+25])
                    Pexp_ident "t" (typing/types.ml[544,16912+24]..[544,16912+25])
              ]
            "scope" (typing/types.ml[544,16912+27]..[544,16912+32])
    ]
  structure_item (typing/types.ml[545,16945+0]..[545,16945+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[545,16945+4]..[545,16945+10])
          Ppat_var "get_id" (typing/types.ml[545,16945+4]..[545,16945+10])
        expression (typing/types.ml[545,16945+11]..[545,16945+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[545,16945+11]..[545,16945+12])
            Ppat_var "t" (typing/types.ml[545,16945+11]..[545,16945+12])
          expression (typing/types.ml[545,16945+15]..[545,16945+26])
            Pexp_field
            expression (typing/types.ml[545,16945+15]..[545,16945+23])
              Pexp_apply
              expression (typing/types.ml[545,16945+16]..[545,16945+20])
                Pexp_ident "repr" (typing/types.ml[545,16945+16]..[545,16945+20])
              [
                <arg>
                Nolabel
                  expression (typing/types.ml[545,16945+21]..[545,16945+22])
                    Pexp_ident "t" (typing/types.ml[545,16945+21]..[545,16945+22])
              ]
            "id" (typing/types.ml[545,16945+24]..[545,16945+26])
    ]
  structure_item (typing/types.ml[549,17000+0]..[558,17340+3])
    Pstr_module
    "Transient_expr" (typing/types.ml[549,17000+7]..[549,17000+21])
      module_expr (typing/types.ml[549,17000+24]..[558,17340+3])
        Pmod_structure
        [
          structure_item (typing/types.ml[550,17031+2]..[550,17031+62])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[550,17031+6]..[550,17031+12])
                  Ppat_var "create" (typing/types.ml[550,17031+6]..[550,17031+12])
                expression (typing/types.ml[550,17031+13]..[550,17031+62]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[550,17031+13]..[550,17031+17])
                    Ppat_var "desc" (typing/types.ml[550,17031+13]..[550,17031+17])
                  expression (typing/types.ml[550,17031+18]..[550,17031+62]) ghost
                    Pexp_fun
                    Labelled "level"
                    None
                    pattern (typing/types.ml[550,17031+19]..[550,17031+24])
                      Ppat_var "level" (typing/types.ml[550,17031+19]..[550,17031+24])
                    expression (typing/types.ml[550,17031+25]..[550,17031+62]) ghost
                      Pexp_fun
                      Labelled "scope"
                      None
                      pattern (typing/types.ml[550,17031+26]..[550,17031+31])
                        Ppat_var "scope" (typing/types.ml[550,17031+26]..[550,17031+31])
                      expression (typing/types.ml[550,17031+32]..[550,17031+62]) ghost
                        Pexp_fun
                        Labelled "id"
                        None
                        pattern (typing/types.ml[550,17031+33]..[550,17031+35])
                          Ppat_var "id" (typing/types.ml[550,17031+33]..[550,17031+35])
                        expression (typing/types.ml[550,17031+38]..[550,17031+62])
                          Pexp_record
                          [
                            "desc" (typing/types.ml[550,17031+39]..[550,17031+43]) ghost
                              expression (typing/types.ml[550,17031+39]..[550,17031+43])
                                Pexp_ident "desc" (typing/types.ml[550,17031+39]..[550,17031+43])
                            "level" (typing/types.ml[550,17031+45]..[550,17031+50]) ghost
                              expression (typing/types.ml[550,17031+45]..[550,17031+50])
                                Pexp_ident "level" (typing/types.ml[550,17031+45]..[550,17031+50])
                            "scope" (typing/types.ml[550,17031+52]..[550,17031+57]) ghost
                              expression (typing/types.ml[550,17031+52]..[550,17031+57])
                                Pexp_ident "scope" (typing/types.ml[550,17031+52]..[550,17031+57])
                            "id" (typing/types.ml[550,17031+59]..[550,17031+61]) ghost
                              expression (typing/types.ml[550,17031+59]..[550,17031+61])
                                Pexp_ident "id" (typing/types.ml[550,17031+59]..[550,17031+61])
                          ]
                          None
            ]
          structure_item (typing/types.ml[551,17094+2]..[551,17094+34])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[551,17094+6]..[551,17094+14])
                  Ppat_var "set_desc" (typing/types.ml[551,17094+6]..[551,17094+14])
                expression (typing/types.ml[551,17094+15]..[551,17094+34]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[551,17094+15]..[551,17094+17])
                    Ppat_var "ty" (typing/types.ml[551,17094+15]..[551,17094+17])
                  expression (typing/types.ml[551,17094+18]..[551,17094+34]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/types.ml[551,17094+18]..[551,17094+19])
                      Ppat_var "d" (typing/types.ml[551,17094+18]..[551,17094+19])
                    expression (typing/types.ml[551,17094+22]..[551,17094+34])
                      Pexp_setfield
                      expression (typing/types.ml[551,17094+22]..[551,17094+24])
                        Pexp_ident "ty" (typing/types.ml[551,17094+22]..[551,17094+24])
                      "desc" (typing/types.ml[551,17094+25]..[551,17094+29])
                      expression (typing/types.ml[551,17094+33]..[551,17094+34])
                        Pexp_ident "d" (typing/types.ml[551,17094+33]..[551,17094+34])
            ]
          structure_item (typing/types.ml[552,17129+2]..[552,17129+69])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[552,17129+6]..[552,17129+19])
                  Ppat_var "set_stub_desc" (typing/types.ml[552,17129+6]..[552,17129+19])
                expression (typing/types.ml[552,17129+20]..[552,17129+69]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[552,17129+20]..[552,17129+22])
                    Ppat_var "ty" (typing/types.ml[552,17129+20]..[552,17129+22])
                  expression (typing/types.ml[552,17129+23]..[552,17129+69]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/types.ml[552,17129+23]..[552,17129+24])
                      Ppat_var "d" (typing/types.ml[552,17129+23]..[552,17129+24])
                    expression (typing/types.ml[552,17129+27]..[552,17129+69])
                      Pexp_sequence
                      expression (typing/types.ml[552,17129+27]..[552,17129+55])
                        Pexp_assert
                        expression (typing/types.ml[552,17129+34]..[552,17129+55])
                          Pexp_apply
                          expression (typing/types.ml[552,17129+43]..[552,17129+44])
                            Pexp_ident "=" (typing/types.ml[552,17129+43]..[552,17129+44])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[552,17129+35]..[552,17129+42])
                                Pexp_field
                                expression (typing/types.ml[552,17129+35]..[552,17129+37])
                                  Pexp_ident "ty" (typing/types.ml[552,17129+35]..[552,17129+37])
                                "desc" (typing/types.ml[552,17129+38]..[552,17129+42])
                            <arg>
                            Nolabel
                              expression (typing/types.ml[552,17129+45]..[552,17129+54])
                                Pexp_construct "Tvar" (typing/types.ml[552,17129+45]..[552,17129+49])
                                Some
                                  expression (typing/types.ml[552,17129+50]..[552,17129+54])
                                    Pexp_construct "None" (typing/types.ml[552,17129+50]..[552,17129+54])
                                    None
                          ]
                      expression (typing/types.ml[552,17129+57]..[552,17129+69])
                        Pexp_setfield
                        expression (typing/types.ml[552,17129+57]..[552,17129+59])
                          Pexp_ident "ty" (typing/types.ml[552,17129+57]..[552,17129+59])
                        "desc" (typing/types.ml[552,17129+60]..[552,17129+64])
                        expression (typing/types.ml[552,17129+68]..[552,17129+69])
                          Pexp_ident "d" (typing/types.ml[552,17129+68]..[552,17129+69])
            ]
          structure_item (typing/types.ml[553,17199+2]..[553,17199+38])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[553,17199+6]..[553,17199+15])
                  Ppat_var "set_level" (typing/types.ml[553,17199+6]..[553,17199+15])
                expression (typing/types.ml[553,17199+16]..[553,17199+38]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[553,17199+16]..[553,17199+18])
                    Ppat_var "ty" (typing/types.ml[553,17199+16]..[553,17199+18])
                  expression (typing/types.ml[553,17199+19]..[553,17199+38]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/types.ml[553,17199+19]..[553,17199+21])
                      Ppat_var "lv" (typing/types.ml[553,17199+19]..[553,17199+21])
                    expression (typing/types.ml[553,17199+24]..[553,17199+38])
                      Pexp_setfield
                      expression (typing/types.ml[553,17199+24]..[553,17199+26])
                        Pexp_ident "ty" (typing/types.ml[553,17199+24]..[553,17199+26])
                      "level" (typing/types.ml[553,17199+27]..[553,17199+32])
                      expression (typing/types.ml[553,17199+36]..[553,17199+38])
                        Pexp_ident "lv" (typing/types.ml[553,17199+36]..[553,17199+38])
            ]
          structure_item (typing/types.ml[554,17238+2]..[554,17238+38])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[554,17238+6]..[554,17238+15])
                  Ppat_var "set_scope" (typing/types.ml[554,17238+6]..[554,17238+15])
                expression (typing/types.ml[554,17238+16]..[554,17238+38]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[554,17238+16]..[554,17238+18])
                    Ppat_var "ty" (typing/types.ml[554,17238+16]..[554,17238+18])
                  expression (typing/types.ml[554,17238+19]..[554,17238+38]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/types.ml[554,17238+19]..[554,17238+21])
                      Ppat_var "sc" (typing/types.ml[554,17238+19]..[554,17238+21])
                    expression (typing/types.ml[554,17238+24]..[554,17238+38])
                      Pexp_setfield
                      expression (typing/types.ml[554,17238+24]..[554,17238+26])
                        Pexp_ident "ty" (typing/types.ml[554,17238+24]..[554,17238+26])
                      "scope" (typing/types.ml[554,17238+27]..[554,17238+32])
                      expression (typing/types.ml[554,17238+36]..[554,17238+38])
                        Pexp_ident "sc" (typing/types.ml[554,17238+36]..[554,17238+38])
            ]
          structure_item (typing/types.ml[555,17277+2]..[555,17277+20])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[555,17277+6]..[555,17277+12])
                  Ppat_var "coerce" (typing/types.ml[555,17277+6]..[555,17277+12])
                expression (typing/types.ml[555,17277+13]..[555,17277+20]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[555,17277+13]..[555,17277+15])
                    Ppat_var "ty" (typing/types.ml[555,17277+13]..[555,17277+15])
                  expression (typing/types.ml[555,17277+18]..[555,17277+20])
                    Pexp_ident "ty" (typing/types.ml[555,17277+18]..[555,17277+20])
            ]
          structure_item (typing/types.ml[556,17298+2]..[556,17298+17])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[556,17298+6]..[556,17298+10])
                  Ppat_var "repr" (typing/types.ml[556,17298+6]..[556,17298+10])
                expression (typing/types.ml[556,17298+13]..[556,17298+17])
                  Pexp_ident "repr" (typing/types.ml[556,17298+13]..[556,17298+17])
            ]
          structure_item (typing/types.ml[557,17316+2]..[557,17316+23])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/types.ml[557,17316+6]..[557,17316+15])
                  Ppat_var "type_expr" (typing/types.ml[557,17316+6]..[557,17316+15])
                expression (typing/types.ml[557,17316+16]..[557,17316+23]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/types.ml[557,17316+16]..[557,17316+18])
                    Ppat_var "ty" (typing/types.ml[557,17316+16]..[557,17316+18])
                  expression (typing/types.ml[557,17316+21]..[557,17316+23])
                    Pexp_ident "ty" (typing/types.ml[557,17316+21]..[557,17316+23])
            ]
        ]
  structure_item (typing/types.ml[562,17408+0]..[562,17408+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[562,17408+4]..[562,17408+11])
          Ppat_var "eq_type" (typing/types.ml[562,17408+4]..[562,17408+11])
        expression (typing/types.ml[562,17408+12]..[562,17408+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[562,17408+12]..[562,17408+14])
            Ppat_var "t1" (typing/types.ml[562,17408+12]..[562,17408+14])
          expression (typing/types.ml[562,17408+15]..[562,17408+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[562,17408+15]..[562,17408+17])
              Ppat_var "t2" (typing/types.ml[562,17408+15]..[562,17408+17])
            expression (typing/types.ml[562,17408+20]..[562,17408+50])
              Pexp_apply
              expression (typing/types.ml[562,17408+29]..[562,17408+31])
                Pexp_ident "||" (typing/types.ml[562,17408+29]..[562,17408+31])
              [
                <arg>
                Nolabel
                  expression (typing/types.ml[562,17408+20]..[562,17408+28])
                    Pexp_apply
                    expression (typing/types.ml[562,17408+23]..[562,17408+25])
                      Pexp_ident "==" (typing/types.ml[562,17408+23]..[562,17408+25])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[562,17408+20]..[562,17408+22])
                          Pexp_ident "t1" (typing/types.ml[562,17408+20]..[562,17408+22])
                      <arg>
                      Nolabel
                        expression (typing/types.ml[562,17408+26]..[562,17408+28])
                          Pexp_ident "t2" (typing/types.ml[562,17408+26]..[562,17408+28])
                    ]
                <arg>
                Nolabel
                  expression (typing/types.ml[562,17408+32]..[562,17408+50])
                    Pexp_apply
                    expression (typing/types.ml[562,17408+40]..[562,17408+42])
                      Pexp_ident "==" (typing/types.ml[562,17408+40]..[562,17408+42])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[562,17408+32]..[562,17408+39])
                          Pexp_apply
                          expression (typing/types.ml[562,17408+32]..[562,17408+36])
                            Pexp_ident "repr" (typing/types.ml[562,17408+32]..[562,17408+36])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[562,17408+37]..[562,17408+39])
                                Pexp_ident "t1" (typing/types.ml[562,17408+37]..[562,17408+39])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/types.ml[562,17408+43]..[562,17408+50])
                          Pexp_apply
                          expression (typing/types.ml[562,17408+43]..[562,17408+47])
                            Pexp_ident "repr" (typing/types.ml[562,17408+43]..[562,17408+47])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[562,17408+48]..[562,17408+50])
                                Pexp_ident "t2" (typing/types.ml[562,17408+48]..[562,17408+50])
                          ]
                    ]
              ]
    ]
  structure_item (typing/types.ml[563,17459+0]..[563,17459+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[563,17459+4]..[563,17459+16])
          Ppat_var "compare_type" (typing/types.ml[563,17459+4]..[563,17459+16])
        expression (typing/types.ml[563,17459+17]..[563,17459+56]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[563,17459+17]..[563,17459+19])
            Ppat_var "t1" (typing/types.ml[563,17459+17]..[563,17459+19])
          expression (typing/types.ml[563,17459+20]..[563,17459+56]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[563,17459+20]..[563,17459+22])
              Ppat_var "t2" (typing/types.ml[563,17459+20]..[563,17459+22])
            expression (typing/types.ml[563,17459+25]..[563,17459+56])
              Pexp_apply
              expression (typing/types.ml[563,17459+25]..[563,17459+32])
                Pexp_ident "compare" (typing/types.ml[563,17459+25]..[563,17459+32])
              [
                <arg>
                Nolabel
                  expression (typing/types.ml[563,17459+33]..[563,17459+44])
                    Pexp_apply
                    expression (typing/types.ml[563,17459+34]..[563,17459+40])
                      Pexp_ident "get_id" (typing/types.ml[563,17459+34]..[563,17459+40])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[563,17459+41]..[563,17459+43])
                          Pexp_ident "t1" (typing/types.ml[563,17459+41]..[563,17459+43])
                    ]
                <arg>
                Nolabel
                  expression (typing/types.ml[563,17459+45]..[563,17459+56])
                    Pexp_apply
                    expression (typing/types.ml[563,17459+46]..[563,17459+52])
                      Pexp_ident "get_id" (typing/types.ml[563,17459+46]..[563,17459+52])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[563,17459+53]..[563,17459+55])
                          Pexp_ident "t2" (typing/types.ml[563,17459+53]..[563,17459+55])
                    ]
              ]
    ]
  structure_item (typing/types.ml[567,17549+0]..[567,17549+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[567,17549+4]..[567,17549+10])
          Ppat_var "new_id" (typing/types.ml[567,17549+4]..[567,17549+10])
        expression (typing/types.ml[567,17549+13]..[567,17549+35])
          Pexp_apply
          expression (typing/types.ml[567,17549+13]..[567,17549+30])
            Pexp_ident "Local_store.s_ref" (typing/types.ml[567,17549+13]..[567,17549+30])
          [
            <arg>
            Nolabel
              expression (typing/types.ml[567,17549+31]..[567,17549+35])
                Pexp_constant PConst_int (-1,None)
          ]
    ]
  structure_item (typing/types.ml[569,17586+0]..[569,17586+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[569,17586+4]..[569,17586+15])
          Ppat_var "create_expr" (typing/types.ml[569,17586+4]..[569,17586+15])
        expression (typing/types.ml[569,17586+18]..[569,17586+39])
          Pexp_ident "Transient_expr.create" (typing/types.ml[569,17586+18]..[569,17586+39])
    ]
  structure_item (typing/types.ml[571,17627+0]..[573,17675+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[571,17627+4]..[571,17627+10])
          Ppat_var "newty3" (typing/types.ml[571,17627+4]..[571,17627+10])
        expression (typing/types.ml[571,17627+11]..[573,17675+44]) ghost
          Pexp_fun
          Labelled "level"
          None
          pattern (typing/types.ml[571,17627+12]..[571,17627+17])
            Ppat_var "level" (typing/types.ml[571,17627+12]..[571,17627+17])
          expression (typing/types.ml[571,17627+18]..[573,17675+44]) ghost
            Pexp_fun
            Labelled "scope"
            None
            pattern (typing/types.ml[571,17627+19]..[571,17627+24])
              Ppat_var "scope" (typing/types.ml[571,17627+19]..[571,17627+24])
            expression (typing/types.ml[571,17627+25]..[573,17675+44]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/types.ml[571,17627+25]..[571,17627+29])
                Ppat_var "desc" (typing/types.ml[571,17627+25]..[571,17627+29])
              expression (typing/types.ml[572,17660+2]..[573,17675+44])
                Pexp_sequence
                expression (typing/types.ml[572,17660+2]..[572,17660+13])
                  Pexp_apply
                  expression (typing/types.ml[572,17660+2]..[572,17660+6])
                    Pexp_ident "incr" (typing/types.ml[572,17660+2]..[572,17660+6])
                  [
                    <arg>
                    Nolabel
                      expression (typing/types.ml[572,17660+7]..[572,17660+13])
                        Pexp_ident "new_id" (typing/types.ml[572,17660+7]..[572,17660+13])
                  ]
                expression (typing/types.ml[573,17675+2]..[573,17675+44])
                  Pexp_apply
                  expression (typing/types.ml[573,17675+2]..[573,17675+13])
                    Pexp_ident "create_expr" (typing/types.ml[573,17675+2]..[573,17675+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/types.ml[573,17675+14]..[573,17675+18])
                        Pexp_ident "desc" (typing/types.ml[573,17675+14]..[573,17675+18])
                    <arg>
                    Labelled "level"
                      expression (typing/types.ml[573,17675+20]..[573,17675+25])
                        Pexp_ident "level" (typing/types.ml[573,17675+20]..[573,17675+25])
                    <arg>
                    Labelled "scope"
                      expression (typing/types.ml[573,17675+27]..[573,17675+32])
                        Pexp_ident "scope" (typing/types.ml[573,17675+27]..[573,17675+32])
                    <arg>
                    Labelled "id"
                      expression (typing/types.ml[573,17675+37]..[573,17675+44])
                        Pexp_apply
                        expression (typing/types.ml[573,17675+37]..[573,17675+38])
                          Pexp_ident "!" (typing/types.ml[573,17675+37]..[573,17675+38])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[573,17675+38]..[573,17675+44])
                              Pexp_ident "new_id" (typing/types.ml[573,17675+38]..[573,17675+44])
                        ]
                  ]
    ]
  structure_item (typing/types.ml[575,17721+0]..[576,17746+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[575,17721+4]..[575,17721+10])
          Ppat_var "newty2" (typing/types.ml[575,17721+4]..[575,17721+10])
        expression (typing/types.ml[575,17721+11]..[576,17746+46]) ghost
          Pexp_fun
          Labelled "level"
          None
          pattern (typing/types.ml[575,17721+12]..[575,17721+17])
            Ppat_var "level" (typing/types.ml[575,17721+12]..[575,17721+17])
          expression (typing/types.ml[575,17721+18]..[576,17746+46]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[575,17721+18]..[575,17721+22])
              Ppat_var "desc" (typing/types.ml[575,17721+18]..[575,17721+22])
            expression (typing/types.ml[576,17746+2]..[576,17746+46])
              Pexp_apply
              expression (typing/types.ml[576,17746+2]..[576,17746+8])
                Pexp_ident "newty3" (typing/types.ml[576,17746+2]..[576,17746+8])
              [
                <arg>
                Labelled "level"
                  expression (typing/types.ml[576,17746+10]..[576,17746+15])
                    Pexp_ident "level" (typing/types.ml[576,17746+10]..[576,17746+15])
                <arg>
                Labelled "scope"
                  expression (typing/types.ml[576,17746+23]..[576,17746+41])
                    Pexp_ident "Ident.lowest_scope" (typing/types.ml[576,17746+23]..[576,17746+41])
                <arg>
                Nolabel
                  expression (typing/types.ml[576,17746+42]..[576,17746+46])
                    Pexp_ident "desc" (typing/types.ml[576,17746+42]..[576,17746+46])
              ]
    ]
  structure_item (typing/types.ml[582,17960+0]..[591,18340+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[582,17960+4]..[582,17960+15])
          Ppat_var "undo_change" (typing/types.ml[582,17960+4]..[582,17960+15])
        expression (typing/types.ml[582,17960+18]..[591,18340+27])
          Pexp_function
          [
            <case>
              pattern (typing/types.ml[583,17987+4]..[583,17987+21])
                Ppat_construct "Ctype" (typing/types.ml[583,17987+4]..[583,17987+9])
                Some
                  []
                  pattern (typing/types.ml[583,17987+11]..[583,17987+21])
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[583,17987+12]..[583,17987+14])
                        Ppat_var "ty" (typing/types.ml[583,17987+12]..[583,17987+14])
                      pattern (typing/types.ml[583,17987+16]..[583,17987+20])
                        Ppat_var "desc" (typing/types.ml[583,17987+16]..[583,17987+20])
                    ]
              expression (typing/types.ml[583,17987+25]..[583,17987+56])
                Pexp_apply
                expression (typing/types.ml[583,17987+25]..[583,17987+48])
                  Pexp_ident "Transient_expr.set_desc" (typing/types.ml[583,17987+25]..[583,17987+48])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[583,17987+49]..[583,17987+51])
                      Pexp_ident "ty" (typing/types.ml[583,17987+49]..[583,17987+51])
                  <arg>
                  Nolabel
                    expression (typing/types.ml[583,17987+52]..[583,17987+56])
                      Pexp_ident "desc" (typing/types.ml[583,17987+52]..[583,17987+56])
                ]
            <case>
              pattern (typing/types.ml[584,18044+4]..[584,18044+28])
                Ppat_construct "Ccompress" (typing/types.ml[584,18044+4]..[584,18044+13])
                Some
                  []
                  pattern (typing/types.ml[584,18044+15]..[584,18044+28])
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[584,18044+16]..[584,18044+18])
                        Ppat_var "ty" (typing/types.ml[584,18044+16]..[584,18044+18])
                      pattern (typing/types.ml[584,18044+20]..[584,18044+24])
                        Ppat_var "desc" (typing/types.ml[584,18044+20]..[584,18044+24])
                      pattern (typing/types.ml[584,18044+26]..[584,18044+27])
                        Ppat_any
                    ]
              expression (typing/types.ml[584,18044+32]..[584,18044+63])
                Pexp_apply
                expression (typing/types.ml[584,18044+32]..[584,18044+55])
                  Pexp_ident "Transient_expr.set_desc" (typing/types.ml[584,18044+32]..[584,18044+55])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[584,18044+56]..[584,18044+58])
                      Pexp_ident "ty" (typing/types.ml[584,18044+56]..[584,18044+58])
                  <arg>
                  Nolabel
                    expression (typing/types.ml[584,18044+59]..[584,18044+63])
                      Pexp_ident "desc" (typing/types.ml[584,18044+59]..[584,18044+63])
                ]
            <case>
              pattern (typing/types.ml[585,18108+4]..[585,18108+22])
                Ppat_construct "Clevel" (typing/types.ml[585,18108+4]..[585,18108+10])
                Some
                  []
                  pattern (typing/types.ml[585,18108+11]..[585,18108+22])
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[585,18108+12]..[585,18108+14])
                        Ppat_var "ty" (typing/types.ml[585,18108+12]..[585,18108+14])
                      pattern (typing/types.ml[585,18108+16]..[585,18108+21])
                        Ppat_var "level" (typing/types.ml[585,18108+16]..[585,18108+21])
                    ]
              expression (typing/types.ml[585,18108+26]..[585,18108+59])
                Pexp_apply
                expression (typing/types.ml[585,18108+26]..[585,18108+50])
                  Pexp_ident "Transient_expr.set_level" (typing/types.ml[585,18108+26]..[585,18108+50])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[585,18108+51]..[585,18108+53])
                      Pexp_ident "ty" (typing/types.ml[585,18108+51]..[585,18108+53])
                  <arg>
                  Nolabel
                    expression (typing/types.ml[585,18108+54]..[585,18108+59])
                      Pexp_ident "level" (typing/types.ml[585,18108+54]..[585,18108+59])
                ]
            <case>
              pattern (typing/types.ml[586,18168+4]..[586,18168+22])
                Ppat_construct "Cscope" (typing/types.ml[586,18168+4]..[586,18168+10])
                Some
                  []
                  pattern (typing/types.ml[586,18168+11]..[586,18168+22])
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[586,18168+12]..[586,18168+14])
                        Ppat_var "ty" (typing/types.ml[586,18168+12]..[586,18168+14])
                      pattern (typing/types.ml[586,18168+16]..[586,18168+21])
                        Ppat_var "scope" (typing/types.ml[586,18168+16]..[586,18168+21])
                    ]
              expression (typing/types.ml[586,18168+26]..[586,18168+59])
                Pexp_apply
                expression (typing/types.ml[586,18168+26]..[586,18168+50])
                  Pexp_ident "Transient_expr.set_scope" (typing/types.ml[586,18168+26]..[586,18168+50])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[586,18168+51]..[586,18168+53])
                      Pexp_ident "ty" (typing/types.ml[586,18168+51]..[586,18168+53])
                  <arg>
                  Nolabel
                    expression (typing/types.ml[586,18168+54]..[586,18168+59])
                      Pexp_ident "scope" (typing/types.ml[586,18168+54]..[586,18168+59])
                ]
            <case>
              pattern (typing/types.ml[587,18228+4]..[587,18228+17])
                Ppat_construct "Cname" (typing/types.ml[587,18228+4]..[587,18228+9])
                Some
                  []
                  pattern (typing/types.ml[587,18228+11]..[587,18228+17])
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[587,18228+12]..[587,18228+13])
                        Ppat_var "r" (typing/types.ml[587,18228+12]..[587,18228+13])
                      pattern (typing/types.ml[587,18228+15]..[587,18228+16])
                        Ppat_var "v" (typing/types.ml[587,18228+15]..[587,18228+16])
                    ]
              expression (typing/types.ml[587,18228+21]..[587,18228+27])
                Pexp_apply
                expression (typing/types.ml[587,18228+23]..[587,18228+25])
                  Pexp_ident ":=" (typing/types.ml[587,18228+23]..[587,18228+25])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[587,18228+21]..[587,18228+22])
                      Pexp_ident "r" (typing/types.ml[587,18228+21]..[587,18228+22])
                  <arg>
                  Nolabel
                    expression (typing/types.ml[587,18228+26]..[587,18228+27])
                      Pexp_ident "v" (typing/types.ml[587,18228+26]..[587,18228+27])
                ]
            <case>
              pattern (typing/types.ml[588,18256+4]..[588,18256+17])
                Ppat_construct "Crow" (typing/types.ml[588,18256+4]..[588,18256+8])
                Some
                  []
                  pattern (typing/types.ml[588,18256+11]..[588,18256+17])
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[588,18256+12]..[588,18256+13])
                        Ppat_var "r" (typing/types.ml[588,18256+12]..[588,18256+13])
                      pattern (typing/types.ml[588,18256+15]..[588,18256+16])
                        Ppat_var "v" (typing/types.ml[588,18256+15]..[588,18256+16])
                    ]
              expression (typing/types.ml[588,18256+21]..[588,18256+27])
                Pexp_apply
                expression (typing/types.ml[588,18256+23]..[588,18256+25])
                  Pexp_ident ":=" (typing/types.ml[588,18256+23]..[588,18256+25])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[588,18256+21]..[588,18256+22])
                      Pexp_ident "r" (typing/types.ml[588,18256+21]..[588,18256+22])
                  <arg>
                  Nolabel
                    expression (typing/types.ml[588,18256+26]..[588,18256+27])
                      Pexp_ident "v" (typing/types.ml[588,18256+26]..[588,18256+27])
                ]
            <case>
              pattern (typing/types.ml[589,18284+4]..[589,18284+17])
                Ppat_construct "Ckind" (typing/types.ml[589,18284+4]..[589,18284+9])
                Some
                  []
                  pattern (typing/types.ml[589,18284+11]..[589,18284+17])
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[589,18284+12]..[589,18284+13])
                        Ppat_var "r" (typing/types.ml[589,18284+12]..[589,18284+13])
                      pattern (typing/types.ml[589,18284+15]..[589,18284+16])
                        Ppat_var "v" (typing/types.ml[589,18284+15]..[589,18284+16])
                    ]
              expression (typing/types.ml[589,18284+21]..[589,18284+27])
                Pexp_apply
                expression (typing/types.ml[589,18284+23]..[589,18284+25])
                  Pexp_ident ":=" (typing/types.ml[589,18284+23]..[589,18284+25])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[589,18284+21]..[589,18284+22])
                      Pexp_ident "r" (typing/types.ml[589,18284+21]..[589,18284+22])
                  <arg>
                  Nolabel
                    expression (typing/types.ml[589,18284+26]..[589,18284+27])
                      Pexp_ident "v" (typing/types.ml[589,18284+26]..[589,18284+27])
                ]
            <case>
              pattern (typing/types.ml[590,18312+4]..[590,18312+17])
                Ppat_construct "Ccommu" (typing/types.ml[590,18312+4]..[590,18312+10])
                Some
                  []
                  pattern (typing/types.ml[590,18312+11]..[590,18312+17])
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[590,18312+12]..[590,18312+13])
                        Ppat_var "r" (typing/types.ml[590,18312+12]..[590,18312+13])
                      pattern (typing/types.ml[590,18312+15]..[590,18312+16])
                        Ppat_var "v" (typing/types.ml[590,18312+15]..[590,18312+16])
                    ]
              expression (typing/types.ml[590,18312+21]..[590,18312+27])
                Pexp_apply
                expression (typing/types.ml[590,18312+23]..[590,18312+25])
                  Pexp_ident ":=" (typing/types.ml[590,18312+23]..[590,18312+25])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[590,18312+21]..[590,18312+22])
                      Pexp_ident "r" (typing/types.ml[590,18312+21]..[590,18312+22])
                  <arg>
                  Nolabel
                    expression (typing/types.ml[590,18312+26]..[590,18312+27])
                      Pexp_ident "v" (typing/types.ml[590,18312+26]..[590,18312+27])
                ]
            <case>
              pattern (typing/types.ml[591,18340+4]..[591,18340+17])
                Ppat_construct "Cuniv" (typing/types.ml[591,18340+4]..[591,18340+9])
                Some
                  []
                  pattern (typing/types.ml[591,18340+11]..[591,18340+17])
                    Ppat_tuple
                    [
                      pattern (typing/types.ml[591,18340+12]..[591,18340+13])
                        Ppat_var "r" (typing/types.ml[591,18340+12]..[591,18340+13])
                      pattern (typing/types.ml[591,18340+15]..[591,18340+16])
                        Ppat_var "v" (typing/types.ml[591,18340+15]..[591,18340+16])
                    ]
              expression (typing/types.ml[591,18340+21]..[591,18340+27])
                Pexp_apply
                expression (typing/types.ml[591,18340+23]..[591,18340+25])
                  Pexp_ident ":=" (typing/types.ml[591,18340+23]..[591,18340+25])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[591,18340+21]..[591,18340+22])
                      Pexp_ident "r" (typing/types.ml[591,18340+21]..[591,18340+22])
                  <arg>
                  Nolabel
                    expression (typing/types.ml[591,18340+26]..[591,18340+27])
                      Pexp_ident "v" (typing/types.ml[591,18340+26]..[591,18340+27])
                ]
          ]
    ]
  structure_item (typing/types.ml[593,18369+0]..[593,18369+33])
    Pstr_type Rec
    [
      type_declaration "snapshot" (typing/types.ml[593,18369+5]..[593,18369+13]) (typing/types.ml[593,18369+0]..[593,18369+33])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/types.ml[593,18369+16]..[593,18369+33])
              Ptyp_tuple
              [
                core_type (typing/types.ml[593,18369+16]..[593,18369+27])
                  Ptyp_constr "ref" (typing/types.ml[593,18369+24]..[593,18369+27])
                  [
                    core_type (typing/types.ml[593,18369+16]..[593,18369+23])
                      Ptyp_constr "changes" (typing/types.ml[593,18369+16]..[593,18369+23])
                      []
                  ]
                core_type (typing/types.ml[593,18369+30]..[593,18369+33])
                  Ptyp_constr "int" (typing/types.ml[593,18369+30]..[593,18369+33])
                  []
              ]
    ]
  structure_item (typing/types.ml[594,18403+0]..[594,18403+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[594,18403+4]..[594,18403+17])
          Ppat_var "last_snapshot" (typing/types.ml[594,18403+4]..[594,18403+17])
        expression (typing/types.ml[594,18403+20]..[594,18403+39])
          Pexp_apply
          expression (typing/types.ml[594,18403+20]..[594,18403+37])
            Pexp_ident "Local_store.s_ref" (typing/types.ml[594,18403+20]..[594,18403+37])
          [
            <arg>
            Nolabel
              expression (typing/types.ml[594,18403+38]..[594,18403+39])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (typing/types.ml[596,18444+0]..[597,18462+66])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[596,18444+4]..[596,18444+12])
          Ppat_var "log_type" (typing/types.ml[596,18444+4]..[596,18444+12])
        expression (typing/types.ml[596,18444+13]..[597,18462+66]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[596,18444+13]..[596,18444+15])
            Ppat_var "ty" (typing/types.ml[596,18444+13]..[596,18444+15])
          expression (typing/types.ml[597,18462+2]..[597,18462+66])
            Pexp_ifthenelse
            expression (typing/types.ml[597,18462+5]..[597,18462+28])
              Pexp_apply
              expression (typing/types.ml[597,18462+11]..[597,18462+13])
                Pexp_ident "<=" (typing/types.ml[597,18462+11]..[597,18462+13])
              [
                <arg>
                Nolabel
                  expression (typing/types.ml[597,18462+5]..[597,18462+10])
                    Pexp_field
                    expression (typing/types.ml[597,18462+5]..[597,18462+7])
                      Pexp_ident "ty" (typing/types.ml[597,18462+5]..[597,18462+7])
                    "id" (typing/types.ml[597,18462+8]..[597,18462+10])
                <arg>
                Nolabel
                  expression (typing/types.ml[597,18462+14]..[597,18462+28])
                    Pexp_apply
                    expression (typing/types.ml[597,18462+14]..[597,18462+15])
                      Pexp_ident "!" (typing/types.ml[597,18462+14]..[597,18462+15])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[597,18462+15]..[597,18462+28])
                          Pexp_ident "last_snapshot" (typing/types.ml[597,18462+15]..[597,18462+28])
                    ]
              ]
            expression (typing/types.ml[597,18462+34]..[597,18462+66])
              Pexp_apply
              expression (typing/types.ml[597,18462+34]..[597,18462+44])
                Pexp_ident "log_change" (typing/types.ml[597,18462+34]..[597,18462+44])
              [
                <arg>
                Nolabel
                  expression (typing/types.ml[597,18462+45]..[597,18462+66])
                    Pexp_construct "Ctype" (typing/types.ml[597,18462+46]..[597,18462+51])
                    Some
                      expression (typing/types.ml[597,18462+52]..[597,18462+65])
                        Pexp_tuple
                        [
                          expression (typing/types.ml[597,18462+53]..[597,18462+55])
                            Pexp_ident "ty" (typing/types.ml[597,18462+53]..[597,18462+55])
                          expression (typing/types.ml[597,18462+57]..[597,18462+64])
                            Pexp_field
                            expression (typing/types.ml[597,18462+57]..[597,18462+59])
                              Pexp_ident "ty" (typing/types.ml[597,18462+57]..[597,18462+59])
                            "desc" (typing/types.ml[597,18462+60]..[597,18462+64])
                        ]
              ]
            None
    ]
  structure_item (typing/types.ml[598,18529+0]..[616,19169+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[598,18529+4]..[598,18529+13])
          Ppat_var "link_type" (typing/types.ml[598,18529+4]..[598,18529+13])
        expression (typing/types.ml[598,18529+14]..[616,19169+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[598,18529+14]..[598,18529+16])
            Ppat_var "ty" (typing/types.ml[598,18529+14]..[598,18529+16])
          expression (typing/types.ml[598,18529+17]..[616,19169+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[598,18529+17]..[598,18529+20])
              Ppat_var "ty'" (typing/types.ml[598,18529+17]..[598,18529+20])
            expression (typing/types.ml[599,18552+2]..[616,19169+11])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/types.ml[599,18552+6]..[599,18552+8])
                    Ppat_var "ty" (typing/types.ml[599,18552+6]..[599,18552+8])
                  expression (typing/types.ml[599,18552+11]..[599,18552+18])
                    Pexp_apply
                    expression (typing/types.ml[599,18552+11]..[599,18552+15])
                      Pexp_ident "repr" (typing/types.ml[599,18552+11]..[599,18552+15])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[599,18552+16]..[599,18552+18])
                          Pexp_ident "ty" (typing/types.ml[599,18552+16]..[599,18552+18])
                    ]
              ]
              expression (typing/types.ml[600,18574+2]..[616,19169+11])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/types.ml[600,18574+6]..[600,18574+9])
                      Ppat_var "ty'" (typing/types.ml[600,18574+6]..[600,18574+9])
                    expression (typing/types.ml[600,18574+12]..[600,18574+20])
                      Pexp_apply
                      expression (typing/types.ml[600,18574+12]..[600,18574+16])
                        Pexp_ident "repr" (typing/types.ml[600,18574+12]..[600,18574+16])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[600,18574+17]..[600,18574+20])
                            Pexp_ident "ty'" (typing/types.ml[600,18574+17]..[600,18574+20])
                      ]
                ]
                expression (typing/types.ml[601,18598+2]..[616,19169+11])
                  Pexp_sequence
                  expression (typing/types.ml[601,18598+2]..[601,18598+13])
                    Pexp_apply
                    expression (typing/types.ml[601,18598+2]..[601,18598+10])
                      Pexp_ident "log_type" (typing/types.ml[601,18598+2]..[601,18598+10])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[601,18598+11]..[601,18598+13])
                          Pexp_ident "ty" (typing/types.ml[601,18598+11]..[601,18598+13])
                    ]
                  expression (typing/types.ml[602,18613+2]..[616,19169+11])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/types.ml[602,18613+6]..[602,18613+10])
                          Ppat_var "desc" (typing/types.ml[602,18613+6]..[602,18613+10])
                        expression (typing/types.ml[602,18613+13]..[602,18613+20])
                          Pexp_field
                          expression (typing/types.ml[602,18613+13]..[602,18613+15])
                            Pexp_ident "ty" (typing/types.ml[602,18613+13]..[602,18613+15])
                          "desc" (typing/types.ml[602,18613+16]..[602,18613+20])
                    ]
                    expression (typing/types.ml[603,18637+2]..[616,19169+11])
                      Pexp_sequence
                      expression (typing/types.ml[603,18637+2]..[603,18637+40])
                        Pexp_apply
                        expression (typing/types.ml[603,18637+2]..[603,18637+25])
                          Pexp_ident "Transient_expr.set_desc" (typing/types.ml[603,18637+2]..[603,18637+25])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[603,18637+26]..[603,18637+28])
                              Pexp_ident "ty" (typing/types.ml[603,18637+26]..[603,18637+28])
                          <arg>
                          Nolabel
                            expression (typing/types.ml[603,18637+29]..[603,18637+40])
                              Pexp_construct "Tlink" (typing/types.ml[603,18637+30]..[603,18637+35])
                              Some
                                expression (typing/types.ml[603,18637+36]..[603,18637+39])
                                  Pexp_ident "ty'" (typing/types.ml[603,18637+36]..[603,18637+39])
                        ]
                      expression (typing/types.ml[606,18802+2]..[616,19169+11])
                        Pexp_match
                        expression (typing/types.ml[606,18802+8]..[606,18802+22])
                          Pexp_tuple
                          [
                            expression (typing/types.ml[606,18802+8]..[606,18802+12])
                              Pexp_ident "desc" (typing/types.ml[606,18802+8]..[606,18802+12])
                            expression (typing/types.ml[606,18802+14]..[606,18802+22])
                              Pexp_field
                              expression (typing/types.ml[606,18802+14]..[606,18802+17])
                                Pexp_ident "ty'" (typing/types.ml[606,18802+14]..[606,18802+17])
                              "desc" (typing/types.ml[606,18802+18]..[606,18802+22])
                          ]
                        [
                          <case>
                            pattern (typing/types.ml[607,18830+4]..[607,18830+25])
                              Ppat_tuple
                              [
                                pattern (typing/types.ml[607,18830+4]..[607,18830+13])
                                  Ppat_construct "Tvar" (typing/types.ml[607,18830+4]..[607,18830+8])
                                  Some
                                    []
                                    pattern (typing/types.ml[607,18830+9]..[607,18830+13])
                                      Ppat_var "name" (typing/types.ml[607,18830+9]..[607,18830+13])
                                pattern (typing/types.ml[607,18830+15]..[607,18830+25])
                                  Ppat_construct "Tvar" (typing/types.ml[607,18830+15]..[607,18830+19])
                                  Some
                                    []
                                    pattern (typing/types.ml[607,18830+20]..[607,18830+25])
                                      Ppat_var "name'" (typing/types.ml[607,18830+20]..[607,18830+25])
                              ]
                            expression (typing/types.ml[608,18859+6]..[615,19159+9])
                              Pexp_match
                              expression (typing/types.ml[608,18859+18]..[608,18859+29])
                                Pexp_tuple
                                [
                                  expression (typing/types.ml[608,18859+18]..[608,18859+22])
                                    Pexp_ident "name" (typing/types.ml[608,18859+18]..[608,18859+22])
                                  expression (typing/types.ml[608,18859+24]..[608,18859+29])
                                    Pexp_ident "name'" (typing/types.ml[608,18859+24]..[608,18859+29])
                                ]
                              [
                                <case>
                                  pattern (typing/types.ml[609,18894+8]..[609,18894+20])
                                    Ppat_tuple
                                    [
                                      pattern (typing/types.ml[609,18894+8]..[609,18894+14])
                                        Ppat_construct "Some" (typing/types.ml[609,18894+8]..[609,18894+12])
                                        Some
                                          []
                                          pattern (typing/types.ml[609,18894+13]..[609,18894+14])
                                            Ppat_any
                                      pattern (typing/types.ml[609,18894+16]..[609,18894+20])
                                        Ppat_construct "None" (typing/types.ml[609,18894+16]..[609,18894+20])
                                        None
                                    ]
                                  expression (typing/types.ml[609,18894+24]..[609,18894+77])
                                    Pexp_sequence
                                    expression (typing/types.ml[609,18894+24]..[609,18894+36])
                                      Pexp_apply
                                      expression (typing/types.ml[609,18894+24]..[609,18894+32])
                                        Pexp_ident "log_type" (typing/types.ml[609,18894+24]..[609,18894+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/types.ml[609,18894+33]..[609,18894+36])
                                            Pexp_ident "ty'" (typing/types.ml[609,18894+33]..[609,18894+36])
                                      ]
                                    expression (typing/types.ml[609,18894+38]..[609,18894+77])
                                      Pexp_apply
                                      expression (typing/types.ml[609,18894+38]..[609,18894+61])
                                        Pexp_ident "Transient_expr.set_desc" (typing/types.ml[609,18894+38]..[609,18894+61])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/types.ml[609,18894+62]..[609,18894+65])
                                            Pexp_ident "ty'" (typing/types.ml[609,18894+62]..[609,18894+65])
                                        <arg>
                                        Nolabel
                                          expression (typing/types.ml[609,18894+66]..[609,18894+77])
                                            Pexp_construct "Tvar" (typing/types.ml[609,18894+67]..[609,18894+71])
                                            Some
                                              expression (typing/types.ml[609,18894+72]..[609,18894+76])
                                                Pexp_ident "name" (typing/types.ml[609,18894+72]..[609,18894+76])
                                      ]
                                <case>
                                  pattern (typing/types.ml[610,18972+8]..[610,18972+20])
                                    Ppat_tuple
                                    [
                                      pattern (typing/types.ml[610,18972+8]..[610,18972+12])
                                        Ppat_construct "None" (typing/types.ml[610,18972+8]..[610,18972+12])
                                        None
                                      pattern (typing/types.ml[610,18972+14]..[610,18972+20])
                                        Ppat_construct "Some" (typing/types.ml[610,18972+14]..[610,18972+18])
                                        Some
                                          []
                                          pattern (typing/types.ml[610,18972+19]..[610,18972+20])
                                            Ppat_any
                                    ]
                                  expression (typing/types.ml[610,18972+24]..[610,18972+26])
                                    Pexp_construct "()" (typing/types.ml[610,18972+24]..[610,18972+26])
                                    None
                                <case>
                                  pattern (typing/types.ml[611,18999+8]..[611,18999+22])
                                    Ppat_tuple
                                    [
                                      pattern (typing/types.ml[611,18999+8]..[611,18999+14])
                                        Ppat_construct "Some" (typing/types.ml[611,18999+8]..[611,18999+12])
                                        Some
                                          []
                                          pattern (typing/types.ml[611,18999+13]..[611,18999+14])
                                            Ppat_any
                                      pattern (typing/types.ml[611,18999+16]..[611,18999+22])
                                        Ppat_construct "Some" (typing/types.ml[611,18999+16]..[611,18999+20])
                                        Some
                                          []
                                          pattern (typing/types.ml[611,18999+21]..[611,18999+22])
                                            Ppat_any
                                    ]
                                  expression (typing/types.ml[612,19025+10]..[613,19064+67])
                                    Pexp_ifthenelse
                                    expression (typing/types.ml[612,19025+13]..[612,19025+33])
                                      Pexp_apply
                                      expression (typing/types.ml[612,19025+22]..[612,19025+23])
                                        Pexp_ident "<" (typing/types.ml[612,19025+22]..[612,19025+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/types.ml[612,19025+13]..[612,19025+21])
                                            Pexp_field
                                            expression (typing/types.ml[612,19025+13]..[612,19025+15])
                                              Pexp_ident "ty" (typing/types.ml[612,19025+13]..[612,19025+15])
                                            "level" (typing/types.ml[612,19025+16]..[612,19025+21])
                                        <arg>
                                        Nolabel
                                          expression (typing/types.ml[612,19025+24]..[612,19025+33])
                                            Pexp_field
                                            expression (typing/types.ml[612,19025+24]..[612,19025+27])
                                              Pexp_ident "ty'" (typing/types.ml[612,19025+24]..[612,19025+27])
                                            "level" (typing/types.ml[612,19025+28]..[612,19025+33])
                                      ]
                                    expression (typing/types.ml[613,19064+12]..[613,19064+67])
                                      Pexp_sequence
                                      expression (typing/types.ml[613,19064+13]..[613,19064+25])
                                        Pexp_apply
                                        expression (typing/types.ml[613,19064+13]..[613,19064+21])
                                          Pexp_ident "log_type" (typing/types.ml[613,19064+13]..[613,19064+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/types.ml[613,19064+22]..[613,19064+25])
                                              Pexp_ident "ty'" (typing/types.ml[613,19064+22]..[613,19064+25])
                                        ]
                                      expression (typing/types.ml[613,19064+27]..[613,19064+66])
                                        Pexp_apply
                                        expression (typing/types.ml[613,19064+27]..[613,19064+50])
                                          Pexp_ident "Transient_expr.set_desc" (typing/types.ml[613,19064+27]..[613,19064+50])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/types.ml[613,19064+51]..[613,19064+54])
                                              Pexp_ident "ty'" (typing/types.ml[613,19064+51]..[613,19064+54])
                                          <arg>
                                          Nolabel
                                            expression (typing/types.ml[613,19064+55]..[613,19064+66])
                                              Pexp_construct "Tvar" (typing/types.ml[613,19064+56]..[613,19064+60])
                                              Some
                                                expression (typing/types.ml[613,19064+61]..[613,19064+65])
                                                  Pexp_ident "name" (typing/types.ml[613,19064+61]..[613,19064+65])
                                        ]
                                    None
                                <case>
                                  pattern (typing/types.ml[614,19132+8]..[614,19132+18])
                                    Ppat_tuple
                                    [
                                      pattern (typing/types.ml[614,19132+8]..[614,19132+12])
                                        Ppat_construct "None" (typing/types.ml[614,19132+8]..[614,19132+12])
                                        None
                                      pattern (typing/types.ml[614,19132+14]..[614,19132+18])
                                        Ppat_construct "None" (typing/types.ml[614,19132+14]..[614,19132+18])
                                        None
                                    ]
                                  expression (typing/types.ml[614,19132+24]..[614,19132+26])
                                    Pexp_construct "()" (typing/types.ml[614,19132+24]..[614,19132+26])
                                    None
                              ]
                          <case>
                            pattern (typing/types.ml[616,19169+4]..[616,19169+5])
                              Ppat_any
                            expression (typing/types.ml[616,19169+9]..[616,19169+11])
                              Pexp_construct "()" (typing/types.ml[616,19169+9]..[616,19169+11])
                              None
                        ]
    ]
  structure_item (typing/types.ml[620,19335+0]..[625,19464+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[620,19335+4]..[620,19335+17])
          Ppat_var "set_type_desc" (typing/types.ml[620,19335+4]..[620,19335+17])
        expression (typing/types.ml[620,19335+18]..[625,19464+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[620,19335+18]..[620,19335+20])
            Ppat_var "ty" (typing/types.ml[620,19335+18]..[620,19335+20])
          expression (typing/types.ml[620,19335+21]..[625,19464+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[620,19335+21]..[620,19335+23])
              Ppat_var "td" (typing/types.ml[620,19335+21]..[620,19335+23])
            expression (typing/types.ml[621,19361+2]..[625,19464+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/types.ml[621,19361+6]..[621,19361+8])
                    Ppat_var "ty" (typing/types.ml[621,19361+6]..[621,19361+8])
                  expression (typing/types.ml[621,19361+11]..[621,19361+18])
                    Pexp_apply
                    expression (typing/types.ml[621,19361+11]..[621,19361+15])
                      Pexp_ident "repr" (typing/types.ml[621,19361+11]..[621,19361+15])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[621,19361+16]..[621,19361+18])
                          Pexp_ident "ty" (typing/types.ml[621,19361+16]..[621,19361+18])
                    ]
              ]
              expression (typing/types.ml[622,19383+2]..[625,19464+5])
                Pexp_ifthenelse
                expression (typing/types.ml[622,19383+5]..[622,19383+18])
                  Pexp_apply
                  expression (typing/types.ml[622,19383+8]..[622,19383+10])
                    Pexp_ident "!=" (typing/types.ml[622,19383+8]..[622,19383+10])
                  [
                    <arg>
                    Nolabel
                      expression (typing/types.ml[622,19383+5]..[622,19383+7])
                        Pexp_ident "td" (typing/types.ml[622,19383+5]..[622,19383+7])
                    <arg>
                    Nolabel
                      expression (typing/types.ml[622,19383+11]..[622,19383+18])
                        Pexp_field
                        expression (typing/types.ml[622,19383+11]..[622,19383+13])
                          Pexp_ident "ty" (typing/types.ml[622,19383+11]..[622,19383+13])
                        "desc" (typing/types.ml[622,19383+14]..[622,19383+18])
                  ]
                expression (typing/types.ml[622,19383+24]..[625,19464+5])
                  Pexp_sequence
                  expression (typing/types.ml[623,19413+4]..[623,19413+15])
                    Pexp_apply
                    expression (typing/types.ml[623,19413+4]..[623,19413+12])
                      Pexp_ident "log_type" (typing/types.ml[623,19413+4]..[623,19413+12])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[623,19413+13]..[623,19413+15])
                          Pexp_ident "ty" (typing/types.ml[623,19413+13]..[623,19413+15])
                    ]
                  expression (typing/types.ml[624,19430+4]..[624,19430+33])
                    Pexp_apply
                    expression (typing/types.ml[624,19430+4]..[624,19430+27])
                      Pexp_ident "Transient_expr.set_desc" (typing/types.ml[624,19430+4]..[624,19430+27])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[624,19430+28]..[624,19430+30])
                          Pexp_ident "ty" (typing/types.ml[624,19430+28]..[624,19430+30])
                      <arg>
                      Nolabel
                        expression (typing/types.ml[624,19430+31]..[624,19430+33])
                          Pexp_ident "td" (typing/types.ml[624,19430+31]..[624,19430+33])
                    ]
                None
    ]
  structure_item (typing/types.ml[628,19575+0]..[633,19766+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[628,19575+4]..[628,19575+13])
          Ppat_var "set_level" (typing/types.ml[628,19575+4]..[628,19575+13])
        expression (typing/types.ml[628,19575+14]..[633,19766+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[628,19575+14]..[628,19575+16])
            Ppat_var "ty" (typing/types.ml[628,19575+14]..[628,19575+16])
          expression (typing/types.ml[628,19575+17]..[633,19766+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[628,19575+17]..[628,19575+22])
              Ppat_var "level" (typing/types.ml[628,19575+17]..[628,19575+22])
            expression (typing/types.ml[629,19600+2]..[633,19766+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/types.ml[629,19600+6]..[629,19600+8])
                    Ppat_var "ty" (typing/types.ml[629,19600+6]..[629,19600+8])
                  expression (typing/types.ml[629,19600+11]..[629,19600+18])
                    Pexp_apply
                    expression (typing/types.ml[629,19600+11]..[629,19600+15])
                      Pexp_ident "repr" (typing/types.ml[629,19600+11]..[629,19600+15])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[629,19600+16]..[629,19600+18])
                          Pexp_ident "ty" (typing/types.ml[629,19600+16]..[629,19600+18])
                    ]
              ]
              expression (typing/types.ml[630,19622+2]..[633,19766+5])
                Pexp_ifthenelse
                expression (typing/types.ml[630,19622+5]..[630,19622+22])
                  Pexp_apply
                  expression (typing/types.ml[630,19622+11]..[630,19622+13])
                    Pexp_ident "<>" (typing/types.ml[630,19622+11]..[630,19622+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/types.ml[630,19622+5]..[630,19622+10])
                        Pexp_ident "level" (typing/types.ml[630,19622+5]..[630,19622+10])
                    <arg>
                    Nolabel
                      expression (typing/types.ml[630,19622+14]..[630,19622+22])
                        Pexp_field
                        expression (typing/types.ml[630,19622+14]..[630,19622+16])
                          Pexp_ident "ty" (typing/types.ml[630,19622+14]..[630,19622+16])
                        "level" (typing/types.ml[630,19622+17]..[630,19622+22])
                  ]
                expression (typing/types.ml[630,19622+28]..[633,19766+5])
                  Pexp_sequence
                  expression (typing/types.ml[631,19656+4]..[631,19656+70])
                    Pexp_ifthenelse
                    expression (typing/types.ml[631,19656+7]..[631,19656+30])
                      Pexp_apply
                      expression (typing/types.ml[631,19656+13]..[631,19656+15])
                        Pexp_ident "<=" (typing/types.ml[631,19656+13]..[631,19656+15])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[631,19656+7]..[631,19656+12])
                            Pexp_field
                            expression (typing/types.ml[631,19656+7]..[631,19656+9])
                              Pexp_ident "ty" (typing/types.ml[631,19656+7]..[631,19656+9])
                            "id" (typing/types.ml[631,19656+10]..[631,19656+12])
                        <arg>
                        Nolabel
                          expression (typing/types.ml[631,19656+16]..[631,19656+30])
                            Pexp_apply
                            expression (typing/types.ml[631,19656+16]..[631,19656+17])
                              Pexp_ident "!" (typing/types.ml[631,19656+16]..[631,19656+17])
                            [
                              <arg>
                              Nolabel
                                expression (typing/types.ml[631,19656+17]..[631,19656+30])
                                  Pexp_ident "last_snapshot" (typing/types.ml[631,19656+17]..[631,19656+30])
                            ]
                      ]
                    expression (typing/types.ml[631,19656+36]..[631,19656+70])
                      Pexp_apply
                      expression (typing/types.ml[631,19656+36]..[631,19656+46])
                        Pexp_ident "log_change" (typing/types.ml[631,19656+36]..[631,19656+46])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[631,19656+47]..[631,19656+70])
                            Pexp_construct "Clevel" (typing/types.ml[631,19656+48]..[631,19656+54])
                            Some
                              expression (typing/types.ml[631,19656+55]..[631,19656+69])
                                Pexp_tuple
                                [
                                  expression (typing/types.ml[631,19656+56]..[631,19656+58])
                                    Pexp_ident "ty" (typing/types.ml[631,19656+56]..[631,19656+58])
                                  expression (typing/types.ml[631,19656+60]..[631,19656+68])
                                    Pexp_field
                                    expression (typing/types.ml[631,19656+60]..[631,19656+62])
                                      Pexp_ident "ty" (typing/types.ml[631,19656+60]..[631,19656+62])
                                    "level" (typing/types.ml[631,19656+63]..[631,19656+68])
                                ]
                      ]
                    None
                  expression (typing/types.ml[632,19728+4]..[632,19728+37])
                    Pexp_apply
                    expression (typing/types.ml[632,19728+4]..[632,19728+28])
                      Pexp_ident "Transient_expr.set_level" (typing/types.ml[632,19728+4]..[632,19728+28])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[632,19728+29]..[632,19728+31])
                          Pexp_ident "ty" (typing/types.ml[632,19728+29]..[632,19728+31])
                      <arg>
                      Nolabel
                        expression (typing/types.ml[632,19728+32]..[632,19728+37])
                          Pexp_ident "level" (typing/types.ml[632,19728+32]..[632,19728+37])
                    ]
                None
    ]
  structure_item (typing/types.ml[635,19837+0]..[640,20028+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[635,19837+4]..[635,19837+13])
          Ppat_var "set_scope" (typing/types.ml[635,19837+4]..[635,19837+13])
        expression (typing/types.ml[635,19837+14]..[640,20028+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[635,19837+14]..[635,19837+16])
            Ppat_var "ty" (typing/types.ml[635,19837+14]..[635,19837+16])
          expression (typing/types.ml[635,19837+17]..[640,20028+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[635,19837+17]..[635,19837+22])
              Ppat_var "scope" (typing/types.ml[635,19837+17]..[635,19837+22])
            expression (typing/types.ml[636,19862+2]..[640,20028+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/types.ml[636,19862+6]..[636,19862+8])
                    Ppat_var "ty" (typing/types.ml[636,19862+6]..[636,19862+8])
                  expression (typing/types.ml[636,19862+11]..[636,19862+18])
                    Pexp_apply
                    expression (typing/types.ml[636,19862+11]..[636,19862+15])
                      Pexp_ident "repr" (typing/types.ml[636,19862+11]..[636,19862+15])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[636,19862+16]..[636,19862+18])
                          Pexp_ident "ty" (typing/types.ml[636,19862+16]..[636,19862+18])
                    ]
              ]
              expression (typing/types.ml[637,19884+2]..[640,20028+5])
                Pexp_ifthenelse
                expression (typing/types.ml[637,19884+5]..[637,19884+22])
                  Pexp_apply
                  expression (typing/types.ml[637,19884+11]..[637,19884+13])
                    Pexp_ident "<>" (typing/types.ml[637,19884+11]..[637,19884+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/types.ml[637,19884+5]..[637,19884+10])
                        Pexp_ident "scope" (typing/types.ml[637,19884+5]..[637,19884+10])
                    <arg>
                    Nolabel
                      expression (typing/types.ml[637,19884+14]..[637,19884+22])
                        Pexp_field
                        expression (typing/types.ml[637,19884+14]..[637,19884+16])
                          Pexp_ident "ty" (typing/types.ml[637,19884+14]..[637,19884+16])
                        "scope" (typing/types.ml[637,19884+17]..[637,19884+22])
                  ]
                expression (typing/types.ml[637,19884+28]..[640,20028+5])
                  Pexp_sequence
                  expression (typing/types.ml[638,19918+4]..[638,19918+70])
                    Pexp_ifthenelse
                    expression (typing/types.ml[638,19918+7]..[638,19918+30])
                      Pexp_apply
                      expression (typing/types.ml[638,19918+13]..[638,19918+15])
                        Pexp_ident "<=" (typing/types.ml[638,19918+13]..[638,19918+15])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[638,19918+7]..[638,19918+12])
                            Pexp_field
                            expression (typing/types.ml[638,19918+7]..[638,19918+9])
                              Pexp_ident "ty" (typing/types.ml[638,19918+7]..[638,19918+9])
                            "id" (typing/types.ml[638,19918+10]..[638,19918+12])
                        <arg>
                        Nolabel
                          expression (typing/types.ml[638,19918+16]..[638,19918+30])
                            Pexp_apply
                            expression (typing/types.ml[638,19918+16]..[638,19918+17])
                              Pexp_ident "!" (typing/types.ml[638,19918+16]..[638,19918+17])
                            [
                              <arg>
                              Nolabel
                                expression (typing/types.ml[638,19918+17]..[638,19918+30])
                                  Pexp_ident "last_snapshot" (typing/types.ml[638,19918+17]..[638,19918+30])
                            ]
                      ]
                    expression (typing/types.ml[638,19918+36]..[638,19918+70])
                      Pexp_apply
                      expression (typing/types.ml[638,19918+36]..[638,19918+46])
                        Pexp_ident "log_change" (typing/types.ml[638,19918+36]..[638,19918+46])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[638,19918+47]..[638,19918+70])
                            Pexp_construct "Cscope" (typing/types.ml[638,19918+48]..[638,19918+54])
                            Some
                              expression (typing/types.ml[638,19918+55]..[638,19918+69])
                                Pexp_tuple
                                [
                                  expression (typing/types.ml[638,19918+56]..[638,19918+58])
                                    Pexp_ident "ty" (typing/types.ml[638,19918+56]..[638,19918+58])
                                  expression (typing/types.ml[638,19918+60]..[638,19918+68])
                                    Pexp_field
                                    expression (typing/types.ml[638,19918+60]..[638,19918+62])
                                      Pexp_ident "ty" (typing/types.ml[638,19918+60]..[638,19918+62])
                                    "scope" (typing/types.ml[638,19918+63]..[638,19918+68])
                                ]
                      ]
                    None
                  expression (typing/types.ml[639,19990+4]..[639,19990+37])
                    Pexp_apply
                    expression (typing/types.ml[639,19990+4]..[639,19990+28])
                      Pexp_ident "Transient_expr.set_scope" (typing/types.ml[639,19990+4]..[639,19990+28])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[639,19990+29]..[639,19990+31])
                          Pexp_ident "ty" (typing/types.ml[639,19990+29]..[639,19990+31])
                      <arg>
                      Nolabel
                        expression (typing/types.ml[639,19990+32]..[639,19990+37])
                          Pexp_ident "scope" (typing/types.ml[639,19990+32]..[639,19990+37])
                    ]
                None
    ]
  structure_item (typing/types.ml[641,20034+0]..[642,20058+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[641,20034+4]..[641,20034+14])
          Ppat_var "set_univar" (typing/types.ml[641,20034+4]..[641,20034+14])
        expression (typing/types.ml[641,20034+15]..[642,20058+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[641,20034+15]..[641,20034+18])
            Ppat_var "rty" (typing/types.ml[641,20034+15]..[641,20034+18])
          expression (typing/types.ml[641,20034+19]..[642,20058+48]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[641,20034+19]..[641,20034+21])
              Ppat_var "ty" (typing/types.ml[641,20034+19]..[641,20034+21])
            expression (typing/types.ml[642,20058+2]..[642,20058+48])
              Pexp_sequence
              expression (typing/types.ml[642,20058+2]..[642,20058+32])
                Pexp_apply
                expression (typing/types.ml[642,20058+2]..[642,20058+12])
                  Pexp_ident "log_change" (typing/types.ml[642,20058+2]..[642,20058+12])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[642,20058+13]..[642,20058+32])
                      Pexp_construct "Cuniv" (typing/types.ml[642,20058+14]..[642,20058+19])
                      Some
                        expression (typing/types.ml[642,20058+20]..[642,20058+31])
                          Pexp_tuple
                          [
                            expression (typing/types.ml[642,20058+21]..[642,20058+24])
                              Pexp_ident "rty" (typing/types.ml[642,20058+21]..[642,20058+24])
                            expression (typing/types.ml[642,20058+26]..[642,20058+30])
                              Pexp_apply
                              expression (typing/types.ml[642,20058+26]..[642,20058+27])
                                Pexp_ident "!" (typing/types.ml[642,20058+26]..[642,20058+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[642,20058+27]..[642,20058+30])
                                    Pexp_ident "rty" (typing/types.ml[642,20058+27]..[642,20058+30])
                              ]
                          ]
                ]
              expression (typing/types.ml[642,20058+34]..[642,20058+48])
                Pexp_apply
                expression (typing/types.ml[642,20058+38]..[642,20058+40])
                  Pexp_ident ":=" (typing/types.ml[642,20058+38]..[642,20058+40])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[642,20058+34]..[642,20058+37])
                      Pexp_ident "rty" (typing/types.ml[642,20058+34]..[642,20058+37])
                  <arg>
                  Nolabel
                    expression (typing/types.ml[642,20058+41]..[642,20058+48])
                      Pexp_construct "Some" (typing/types.ml[642,20058+41]..[642,20058+45])
                      Some
                        expression (typing/types.ml[642,20058+46]..[642,20058+48])
                          Pexp_ident "ty" (typing/types.ml[642,20058+46]..[642,20058+48])
                ]
    ]
  structure_item (typing/types.ml[643,20107+0]..[644,20127+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[643,20107+4]..[643,20107+12])
          Ppat_var "set_name" (typing/types.ml[643,20107+4]..[643,20107+12])
        expression (typing/types.ml[643,20107+13]..[644,20127+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[643,20107+13]..[643,20107+15])
            Ppat_var "nm" (typing/types.ml[643,20107+13]..[643,20107+15])
          expression (typing/types.ml[643,20107+16]..[644,20127+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[643,20107+16]..[643,20107+17])
              Ppat_var "v" (typing/types.ml[643,20107+16]..[643,20107+17])
            expression (typing/types.ml[644,20127+2]..[644,20127+39])
              Pexp_sequence
              expression (typing/types.ml[644,20127+2]..[644,20127+30])
                Pexp_apply
                expression (typing/types.ml[644,20127+2]..[644,20127+12])
                  Pexp_ident "log_change" (typing/types.ml[644,20127+2]..[644,20127+12])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[644,20127+13]..[644,20127+30])
                      Pexp_construct "Cname" (typing/types.ml[644,20127+14]..[644,20127+19])
                      Some
                        expression (typing/types.ml[644,20127+20]..[644,20127+29])
                          Pexp_tuple
                          [
                            expression (typing/types.ml[644,20127+21]..[644,20127+23])
                              Pexp_ident "nm" (typing/types.ml[644,20127+21]..[644,20127+23])
                            expression (typing/types.ml[644,20127+25]..[644,20127+28])
                              Pexp_apply
                              expression (typing/types.ml[644,20127+25]..[644,20127+26])
                                Pexp_ident "!" (typing/types.ml[644,20127+25]..[644,20127+26])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[644,20127+26]..[644,20127+28])
                                    Pexp_ident "nm" (typing/types.ml[644,20127+26]..[644,20127+28])
                              ]
                          ]
                ]
              expression (typing/types.ml[644,20127+32]..[644,20127+39])
                Pexp_apply
                expression (typing/types.ml[644,20127+35]..[644,20127+37])
                  Pexp_ident ":=" (typing/types.ml[644,20127+35]..[644,20127+37])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[644,20127+32]..[644,20127+34])
                      Pexp_ident "nm" (typing/types.ml[644,20127+32]..[644,20127+34])
                  <arg>
                  Nolabel
                    expression (typing/types.ml[644,20127+38]..[644,20127+39])
                      Pexp_ident "v" (typing/types.ml[644,20127+38]..[644,20127+39])
                ]
    ]
  structure_item (typing/types.ml[645,20167+0]..[646,20191+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[645,20167+4]..[645,20167+17])
          Ppat_var "set_row_field" (typing/types.ml[645,20167+4]..[645,20167+17])
        expression (typing/types.ml[645,20167+18]..[646,20191+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[645,20167+18]..[645,20167+19])
            Ppat_var "e" (typing/types.ml[645,20167+18]..[645,20167+19])
          expression (typing/types.ml[645,20167+20]..[646,20191+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[645,20167+20]..[645,20167+21])
              Ppat_var "v" (typing/types.ml[645,20167+20]..[645,20167+21])
            expression (typing/types.ml[646,20191+2]..[646,20191+40])
              Pexp_sequence
              expression (typing/types.ml[646,20191+2]..[646,20191+27])
                Pexp_apply
                expression (typing/types.ml[646,20191+2]..[646,20191+12])
                  Pexp_ident "log_change" (typing/types.ml[646,20191+2]..[646,20191+12])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[646,20191+13]..[646,20191+27])
                      Pexp_construct "Crow" (typing/types.ml[646,20191+14]..[646,20191+18])
                      Some
                        expression (typing/types.ml[646,20191+19]..[646,20191+26])
                          Pexp_tuple
                          [
                            expression (typing/types.ml[646,20191+20]..[646,20191+21])
                              Pexp_ident "e" (typing/types.ml[646,20191+20]..[646,20191+21])
                            expression (typing/types.ml[646,20191+23]..[646,20191+25])
                              Pexp_apply
                              expression (typing/types.ml[646,20191+23]..[646,20191+24])
                                Pexp_ident "!" (typing/types.ml[646,20191+23]..[646,20191+24])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[646,20191+24]..[646,20191+25])
                                    Pexp_ident "e" (typing/types.ml[646,20191+24]..[646,20191+25])
                              ]
                          ]
                ]
              expression (typing/types.ml[646,20191+29]..[646,20191+40])
                Pexp_apply
                expression (typing/types.ml[646,20191+31]..[646,20191+33])
                  Pexp_ident ":=" (typing/types.ml[646,20191+31]..[646,20191+33])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[646,20191+29]..[646,20191+30])
                      Pexp_ident "e" (typing/types.ml[646,20191+29]..[646,20191+30])
                  <arg>
                  Nolabel
                    expression (typing/types.ml[646,20191+34]..[646,20191+40])
                      Pexp_construct "Some" (typing/types.ml[646,20191+34]..[646,20191+38])
                      Some
                        expression (typing/types.ml[646,20191+39]..[646,20191+40])
                          Pexp_ident "v" (typing/types.ml[646,20191+39]..[646,20191+40])
                ]
    ]
  structure_item (typing/types.ml[647,20232+0]..[648,20252+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[647,20232+4]..[647,20232+12])
          Ppat_var "set_kind" (typing/types.ml[647,20232+4]..[647,20232+12])
        expression (typing/types.ml[647,20232+13]..[648,20252+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[647,20232+13]..[647,20232+15])
            Ppat_var "rk" (typing/types.ml[647,20232+13]..[647,20232+15])
          expression (typing/types.ml[647,20232+16]..[648,20252+44]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[647,20232+16]..[647,20232+17])
              Ppat_var "k" (typing/types.ml[647,20232+16]..[647,20232+17])
            expression (typing/types.ml[648,20252+2]..[648,20252+44])
              Pexp_sequence
              expression (typing/types.ml[648,20252+2]..[648,20252+30])
                Pexp_apply
                expression (typing/types.ml[648,20252+2]..[648,20252+12])
                  Pexp_ident "log_change" (typing/types.ml[648,20252+2]..[648,20252+12])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[648,20252+13]..[648,20252+30])
                      Pexp_construct "Ckind" (typing/types.ml[648,20252+14]..[648,20252+19])
                      Some
                        expression (typing/types.ml[648,20252+20]..[648,20252+29])
                          Pexp_tuple
                          [
                            expression (typing/types.ml[648,20252+21]..[648,20252+23])
                              Pexp_ident "rk" (typing/types.ml[648,20252+21]..[648,20252+23])
                            expression (typing/types.ml[648,20252+25]..[648,20252+28])
                              Pexp_apply
                              expression (typing/types.ml[648,20252+25]..[648,20252+26])
                                Pexp_ident "!" (typing/types.ml[648,20252+25]..[648,20252+26])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[648,20252+26]..[648,20252+28])
                                    Pexp_ident "rk" (typing/types.ml[648,20252+26]..[648,20252+28])
                              ]
                          ]
                ]
              expression (typing/types.ml[648,20252+32]..[648,20252+44])
                Pexp_apply
                expression (typing/types.ml[648,20252+35]..[648,20252+37])
                  Pexp_ident ":=" (typing/types.ml[648,20252+35]..[648,20252+37])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[648,20252+32]..[648,20252+34])
                      Pexp_ident "rk" (typing/types.ml[648,20252+32]..[648,20252+34])
                  <arg>
                  Nolabel
                    expression (typing/types.ml[648,20252+38]..[648,20252+44])
                      Pexp_construct "Some" (typing/types.ml[648,20252+38]..[648,20252+42])
                      Some
                        expression (typing/types.ml[648,20252+43]..[648,20252+44])
                          Pexp_ident "k" (typing/types.ml[648,20252+43]..[648,20252+44])
                ]
    ]
  structure_item (typing/types.ml[649,20297+0]..[650,20318+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[649,20297+4]..[649,20297+13])
          Ppat_var "set_commu" (typing/types.ml[649,20297+4]..[649,20297+13])
        expression (typing/types.ml[649,20297+14]..[650,20318+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[649,20297+14]..[649,20297+16])
            Ppat_var "rc" (typing/types.ml[649,20297+14]..[649,20297+16])
          expression (typing/types.ml[649,20297+17]..[650,20318+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[649,20297+17]..[649,20297+18])
              Ppat_var "c" (typing/types.ml[649,20297+17]..[649,20297+18])
            expression (typing/types.ml[650,20318+2]..[650,20318+40])
              Pexp_sequence
              expression (typing/types.ml[650,20318+2]..[650,20318+31])
                Pexp_apply
                expression (typing/types.ml[650,20318+2]..[650,20318+12])
                  Pexp_ident "log_change" (typing/types.ml[650,20318+2]..[650,20318+12])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[650,20318+13]..[650,20318+31])
                      Pexp_construct "Ccommu" (typing/types.ml[650,20318+14]..[650,20318+20])
                      Some
                        expression (typing/types.ml[650,20318+21]..[650,20318+30])
                          Pexp_tuple
                          [
                            expression (typing/types.ml[650,20318+22]..[650,20318+24])
                              Pexp_ident "rc" (typing/types.ml[650,20318+22]..[650,20318+24])
                            expression (typing/types.ml[650,20318+26]..[650,20318+29])
                              Pexp_apply
                              expression (typing/types.ml[650,20318+26]..[650,20318+27])
                                Pexp_ident "!" (typing/types.ml[650,20318+26]..[650,20318+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[650,20318+27]..[650,20318+29])
                                    Pexp_ident "rc" (typing/types.ml[650,20318+27]..[650,20318+29])
                              ]
                          ]
                ]
              expression (typing/types.ml[650,20318+33]..[650,20318+40])
                Pexp_apply
                expression (typing/types.ml[650,20318+36]..[650,20318+38])
                  Pexp_ident ":=" (typing/types.ml[650,20318+36]..[650,20318+38])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[650,20318+33]..[650,20318+35])
                      Pexp_ident "rc" (typing/types.ml[650,20318+33]..[650,20318+35])
                  <arg>
                  Nolabel
                    expression (typing/types.ml[650,20318+39]..[650,20318+40])
                      Pexp_ident "c" (typing/types.ml[650,20318+39]..[650,20318+40])
                ]
    ]
  structure_item (typing/types.ml[652,20360+0]..[655,20436+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[652,20360+4]..[652,20360+12])
          Ppat_var "snapshot" (typing/types.ml[652,20360+4]..[652,20360+12])
        expression (typing/types.ml[652,20360+13]..[655,20436+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[652,20360+13]..[652,20360+15])
            Ppat_construct "()" (typing/types.ml[652,20360+13]..[652,20360+15])
            None
          expression (typing/types.ml[653,20378+2]..[655,20436+15])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/types.ml[653,20378+6]..[653,20378+9])
                  Ppat_var "old" (typing/types.ml[653,20378+6]..[653,20378+9])
                expression (typing/types.ml[653,20378+12]..[653,20378+26])
                  Pexp_apply
                  expression (typing/types.ml[653,20378+12]..[653,20378+13])
                    Pexp_ident "!" (typing/types.ml[653,20378+12]..[653,20378+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/types.ml[653,20378+13]..[653,20378+26])
                        Pexp_ident "last_snapshot" (typing/types.ml[653,20378+13]..[653,20378+26])
                  ]
            ]
            expression (typing/types.ml[654,20408+2]..[655,20436+15])
              Pexp_sequence
              expression (typing/types.ml[654,20408+2]..[654,20408+26])
                Pexp_apply
                expression (typing/types.ml[654,20408+16]..[654,20408+18])
                  Pexp_ident ":=" (typing/types.ml[654,20408+16]..[654,20408+18])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[654,20408+2]..[654,20408+15])
                      Pexp_ident "last_snapshot" (typing/types.ml[654,20408+2]..[654,20408+15])
                  <arg>
                  Nolabel
                    expression (typing/types.ml[654,20408+19]..[654,20408+26])
                      Pexp_apply
                      expression (typing/types.ml[654,20408+19]..[654,20408+20])
                        Pexp_ident "!" (typing/types.ml[654,20408+19]..[654,20408+20])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[654,20408+20]..[654,20408+26])
                            Pexp_ident "new_id" (typing/types.ml[654,20408+20]..[654,20408+26])
                      ]
                ]
              expression (typing/types.ml[655,20436+2]..[655,20436+15])
                Pexp_tuple
                [
                  expression (typing/types.ml[655,20436+3]..[655,20436+9])
                    Pexp_apply
                    expression (typing/types.ml[655,20436+3]..[655,20436+4])
                      Pexp_ident "!" (typing/types.ml[655,20436+3]..[655,20436+4])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[655,20436+4]..[655,20436+9])
                          Pexp_ident "trail" (typing/types.ml[655,20436+4]..[655,20436+9])
                    ]
                  expression (typing/types.ml[655,20436+11]..[655,20436+14])
                    Pexp_ident "old" (typing/types.ml[655,20436+11]..[655,20436+14])
                ]
    ]
  structure_item (typing/types.ml[657,20453+0]..[663,20606+26])
    Pstr_value Rec
    [
      <def>
        pattern (typing/types.ml[657,20453+8]..[657,20453+15])
          Ppat_var "rev_log" (typing/types.ml[657,20453+8]..[657,20453+15])
        expression (typing/types.ml[657,20453+16]..[663,20606+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[657,20453+16]..[657,20453+20])
            Ppat_var "accu" (typing/types.ml[657,20453+16]..[657,20453+20])
          expression (typing/types.ml[657,20453+23]..[663,20606+26])
            Pexp_function
            [
              <case>
                pattern (typing/types.ml[658,20485+4]..[658,20485+13])
                  Ppat_construct "Unchanged" (typing/types.ml[658,20485+4]..[658,20485+13])
                  None
                expression (typing/types.ml[658,20485+17]..[658,20485+21])
                  Pexp_ident "accu" (typing/types.ml[658,20485+17]..[658,20485+21])
              <case>
                pattern (typing/types.ml[659,20507+4]..[659,20507+11])
                  Ppat_construct "Invalid" (typing/types.ml[659,20507+4]..[659,20507+11])
                  None
                expression (typing/types.ml[659,20507+15]..[659,20507+27])
                  Pexp_assert
                  expression (typing/types.ml[659,20507+22]..[659,20507+27])
                    Pexp_construct "false" (typing/types.ml[659,20507+22]..[659,20507+27])
                    None
              <case>
                pattern (typing/types.ml[660,20535+4]..[660,20535+21])
                  Ppat_construct "Change" (typing/types.ml[660,20535+4]..[660,20535+10])
                  Some
                    []
                    pattern (typing/types.ml[660,20535+11]..[660,20535+21])
                      Ppat_tuple
                      [
                        pattern (typing/types.ml[660,20535+12]..[660,20535+14])
                          Ppat_var "ch" (typing/types.ml[660,20535+12]..[660,20535+14])
                        pattern (typing/types.ml[660,20535+16]..[660,20535+20])
                          Ppat_var "next" (typing/types.ml[660,20535+16]..[660,20535+20])
                      ]
                expression (typing/types.ml[661,20560+6]..[663,20606+26])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/types.ml[661,20560+10]..[661,20560+11])
                        Ppat_var "d" (typing/types.ml[661,20560+10]..[661,20560+11])
                      expression (typing/types.ml[661,20560+14]..[661,20560+19])
                        Pexp_apply
                        expression (typing/types.ml[661,20560+14]..[661,20560+15])
                          Pexp_ident "!" (typing/types.ml[661,20560+14]..[661,20560+15])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[661,20560+15]..[661,20560+19])
                              Pexp_ident "next" (typing/types.ml[661,20560+15]..[661,20560+19])
                        ]
                  ]
                  expression (typing/types.ml[662,20583+6]..[663,20606+26])
                    Pexp_sequence
                    expression (typing/types.ml[662,20583+6]..[662,20583+21])
                      Pexp_apply
                      expression (typing/types.ml[662,20583+11]..[662,20583+13])
                        Pexp_ident ":=" (typing/types.ml[662,20583+11]..[662,20583+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[662,20583+6]..[662,20583+10])
                            Pexp_ident "next" (typing/types.ml[662,20583+6]..[662,20583+10])
                        <arg>
                        Nolabel
                          expression (typing/types.ml[662,20583+14]..[662,20583+21])
                            Pexp_construct "Invalid" (typing/types.ml[662,20583+14]..[662,20583+21])
                            None
                      ]
                    expression (typing/types.ml[663,20606+6]..[663,20606+26])
                      Pexp_apply
                      expression (typing/types.ml[663,20606+6]..[663,20606+13])
                        Pexp_ident "rev_log" (typing/types.ml[663,20606+6]..[663,20606+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[663,20606+14]..[663,20606+24])
                            Pexp_construct "::" (typing/types.ml[663,20606+17]..[663,20606+19])
                            Some
                              expression (typing/types.ml[663,20606+15]..[663,20606+23]) ghost
                                Pexp_tuple
                                [
                                  expression (typing/types.ml[663,20606+15]..[663,20606+17])
                                    Pexp_ident "ch" (typing/types.ml[663,20606+15]..[663,20606+17])
                                  expression (typing/types.ml[663,20606+19]..[663,20606+23])
                                    Pexp_ident "accu" (typing/types.ml[663,20606+19]..[663,20606+23])
                                ]
                        <arg>
                        Nolabel
                          expression (typing/types.ml[663,20606+25]..[663,20606+26])
                            Pexp_ident "d" (typing/types.ml[663,20606+25]..[663,20606+26])
                      ]
            ]
    ]
  structure_item (typing/types.ml[665,20634+0]..[675,20968+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[665,20634+4]..[665,20634+13])
          Ppat_var "backtrack" (typing/types.ml[665,20634+4]..[665,20634+13])
        expression (typing/types.ml[665,20634+14]..[675,20968+22]) ghost
          Pexp_fun
          Labelled "cleanup_abbrev"
          None
          pattern (typing/types.ml[665,20634+15]..[665,20634+29])
            Ppat_var "cleanup_abbrev" (typing/types.ml[665,20634+15]..[665,20634+29])
          expression (typing/types.ml[665,20634+30]..[675,20968+22]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[665,20634+30]..[665,20634+44])
              Ppat_tuple
              [
                pattern (typing/types.ml[665,20634+31]..[665,20634+38])
                  Ppat_var "changes" (typing/types.ml[665,20634+31]..[665,20634+38])
                pattern (typing/types.ml[665,20634+40]..[665,20634+43])
                  Ppat_var "old" (typing/types.ml[665,20634+40]..[665,20634+43])
              ]
            expression (typing/types.ml[666,20681+2]..[675,20968+22])
              Pexp_match
              expression (typing/types.ml[666,20681+8]..[666,20681+16])
                Pexp_apply
                expression (typing/types.ml[666,20681+8]..[666,20681+9])
                  Pexp_ident "!" (typing/types.ml[666,20681+8]..[666,20681+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[666,20681+9]..[666,20681+16])
                      Pexp_ident "changes" (typing/types.ml[666,20681+9]..[666,20681+16])
                ]
              [
                <case>
                  pattern (typing/types.ml[667,20703+4]..[667,20703+13])
                    Ppat_construct "Unchanged" (typing/types.ml[667,20703+4]..[667,20703+13])
                    None
                  expression (typing/types.ml[667,20703+17]..[667,20703+37])
                    Pexp_apply
                    expression (typing/types.ml[667,20703+31]..[667,20703+33])
                      Pexp_ident ":=" (typing/types.ml[667,20703+31]..[667,20703+33])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[667,20703+17]..[667,20703+30])
                          Pexp_ident "last_snapshot" (typing/types.ml[667,20703+17]..[667,20703+30])
                      <arg>
                      Nolabel
                        expression (typing/types.ml[667,20703+34]..[667,20703+37])
                          Pexp_ident "old" (typing/types.ml[667,20703+34]..[667,20703+37])
                    ]
                <case>
                  pattern (typing/types.ml[668,20741+4]..[668,20741+11])
                    Ppat_construct "Invalid" (typing/types.ml[668,20741+4]..[668,20741+11])
                    None
                  expression (typing/types.ml[668,20741+15]..[668,20741+41])
                    Pexp_apply
                    expression (typing/types.ml[668,20741+15]..[668,20741+23])
                      Pexp_ident "failwith" (typing/types.ml[668,20741+15]..[668,20741+23])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[668,20741+24]..[668,20741+41])
                          Pexp_constant PConst_string("Btype.backtrack",(typing/types.ml[668,20741+25]..[668,20741+40]),None)
                    ]
                <case>
                  pattern (typing/types.ml[669,20783+4]..[669,20783+22])
                    Ppat_alias "change" (typing/types.ml[669,20783+16]..[669,20783+22])
                    pattern (typing/types.ml[669,20783+4]..[669,20783+12])
                      Ppat_construct "Change" (typing/types.ml[669,20783+4]..[669,20783+10])
                      Some
                        []
                        pattern (typing/types.ml[669,20783+11]..[669,20783+12])
                          Ppat_any
                  expression (typing/types.ml[670,20809+6]..[675,20968+22])
                    Pexp_sequence
                    expression (typing/types.ml[670,20809+6]..[670,20809+23])
                      Pexp_apply
                      expression (typing/types.ml[670,20809+6]..[670,20809+20])
                        Pexp_ident "cleanup_abbrev" (typing/types.ml[670,20809+6]..[670,20809+20])
                      [
                        <arg>
                        Nolabel
                          expression (typing/types.ml[670,20809+21]..[670,20809+23])
                            Pexp_construct "()" (typing/types.ml[670,20809+21]..[670,20809+23])
                            None
                      ]
                    expression (typing/types.ml[671,20834+6]..[675,20968+22])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/types.ml[671,20834+10]..[671,20834+17])
                            Ppat_var "backlog" (typing/types.ml[671,20834+10]..[671,20834+17])
                          expression (typing/types.ml[671,20834+20]..[671,20834+37])
                            Pexp_apply
                            expression (typing/types.ml[671,20834+20]..[671,20834+27])
                              Pexp_ident "rev_log" (typing/types.ml[671,20834+20]..[671,20834+27])
                            [
                              <arg>
                              Nolabel
                                expression (typing/types.ml[671,20834+28]..[671,20834+30])
                                  Pexp_construct "[]" (typing/types.ml[671,20834+28]..[671,20834+30])
                                  None
                              <arg>
                              Nolabel
                                expression (typing/types.ml[671,20834+31]..[671,20834+37])
                                  Pexp_ident "change" (typing/types.ml[671,20834+31]..[671,20834+37])
                            ]
                      ]
                      expression (typing/types.ml[672,20875+6]..[675,20968+22])
                        Pexp_sequence
                        expression (typing/types.ml[672,20875+6]..[672,20875+35])
                          Pexp_apply
                          expression (typing/types.ml[672,20875+6]..[672,20875+15])
                            Pexp_ident "List.iter" (typing/types.ml[672,20875+6]..[672,20875+15])
                          [
                            <arg>
                            Nolabel
                              expression (typing/types.ml[672,20875+16]..[672,20875+27])
                                Pexp_ident "undo_change" (typing/types.ml[672,20875+16]..[672,20875+27])
                            <arg>
                            Nolabel
                              expression (typing/types.ml[672,20875+28]..[672,20875+35])
                                Pexp_ident "backlog" (typing/types.ml[672,20875+28]..[672,20875+35])
                          ]
                        expression (typing/types.ml[673,20912+6]..[675,20968+22])
                          Pexp_sequence
                          expression (typing/types.ml[673,20912+6]..[673,20912+26])
                            Pexp_apply
                            expression (typing/types.ml[673,20912+14]..[673,20912+16])
                              Pexp_ident ":=" (typing/types.ml[673,20912+14]..[673,20912+16])
                            [
                              <arg>
                              Nolabel
                                expression (typing/types.ml[673,20912+6]..[673,20912+13])
                                  Pexp_ident "changes" (typing/types.ml[673,20912+6]..[673,20912+13])
                              <arg>
                              Nolabel
                                expression (typing/types.ml[673,20912+17]..[673,20912+26])
                                  Pexp_construct "Unchanged" (typing/types.ml[673,20912+17]..[673,20912+26])
                                  None
                            ]
                          expression (typing/types.ml[674,20940+6]..[675,20968+22])
                            Pexp_sequence
                            expression (typing/types.ml[674,20940+6]..[674,20940+26])
                              Pexp_apply
                              expression (typing/types.ml[674,20940+20]..[674,20940+22])
                                Pexp_ident ":=" (typing/types.ml[674,20940+20]..[674,20940+22])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[674,20940+6]..[674,20940+19])
                                    Pexp_ident "last_snapshot" (typing/types.ml[674,20940+6]..[674,20940+19])
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[674,20940+23]..[674,20940+26])
                                    Pexp_ident "old" (typing/types.ml[674,20940+23]..[674,20940+26])
                              ]
                            expression (typing/types.ml[675,20968+6]..[675,20968+22])
                              Pexp_apply
                              expression (typing/types.ml[675,20968+12]..[675,20968+14])
                                Pexp_ident ":=" (typing/types.ml[675,20968+12]..[675,20968+14])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[675,20968+6]..[675,20968+11])
                                    Pexp_ident "trail" (typing/types.ml[675,20968+6]..[675,20968+11])
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[675,20968+15]..[675,20968+22])
                                    Pexp_ident "changes" (typing/types.ml[675,20968+15]..[675,20968+22])
                              ]
              ]
    ]
  structure_item (typing/types.ml[677,20992+0]..[684,21173+31])
    Pstr_value Rec
    [
      <def>
        pattern (typing/types.ml[677,20992+8]..[677,20992+24])
          Ppat_var "rev_compress_log" (typing/types.ml[677,20992+8]..[677,20992+24])
        expression (typing/types.ml[677,20992+25]..[684,21173+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[677,20992+25]..[677,20992+28])
            Ppat_var "log" (typing/types.ml[677,20992+25]..[677,20992+28])
          expression (typing/types.ml[677,20992+29]..[684,21173+31]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/types.ml[677,20992+29]..[677,20992+30])
              Ppat_var "r" (typing/types.ml[677,20992+29]..[677,20992+30])
            expression (typing/types.ml[678,21025+2]..[684,21173+31])
              Pexp_match
              expression (typing/types.ml[678,21025+8]..[678,21025+10])
                Pexp_apply
                expression (typing/types.ml[678,21025+8]..[678,21025+9])
                  Pexp_ident "!" (typing/types.ml[678,21025+8]..[678,21025+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/types.ml[678,21025+9]..[678,21025+10])
                      Pexp_ident "r" (typing/types.ml[678,21025+9]..[678,21025+10])
                ]
              [
                <case>
                  pattern (typing/types.ml[679,21041+4]..[679,21041+23])
                    Ppat_or
                    pattern (typing/types.ml[679,21041+4]..[679,21041+13])
                      Ppat_construct "Unchanged" (typing/types.ml[679,21041+4]..[679,21041+13])
                      None
                    pattern (typing/types.ml[679,21041+16]..[679,21041+23])
                      Ppat_construct "Invalid" (typing/types.ml[679,21041+16]..[679,21041+23])
                      None
                  expression (typing/types.ml[680,21068+6]..[680,21068+9])
                    Pexp_ident "log" (typing/types.ml[680,21068+6]..[680,21068+9])
                <case>
                  pattern (typing/types.ml[681,21078+4]..[681,21078+30])
                    Ppat_construct "Change" (typing/types.ml[681,21078+4]..[681,21078+10])
                    Some
                      []
                      pattern (typing/types.ml[681,21078+11]..[681,21078+30])
                        Ppat_tuple
                        [
                          pattern (typing/types.ml[681,21078+12]..[681,21078+23])
                            Ppat_construct "Ccompress" (typing/types.ml[681,21078+12]..[681,21078+21])
                            Some
                              []
                              pattern (typing/types.ml[681,21078+22]..[681,21078+23])
                                Ppat_any
                          pattern (typing/types.ml[681,21078+25]..[681,21078+29])
                            Ppat_var "next" (typing/types.ml[681,21078+25]..[681,21078+29])
                        ]
                  expression (typing/types.ml[682,21112+6]..[682,21112+36])
                    Pexp_apply
                    expression (typing/types.ml[682,21112+6]..[682,21112+22])
                      Pexp_ident "rev_compress_log" (typing/types.ml[682,21112+6]..[682,21112+22])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[682,21112+23]..[682,21112+31])
                          Pexp_construct "::" (typing/types.ml[682,21112+25]..[682,21112+27])
                          Some
                            expression (typing/types.ml[682,21112+24]..[682,21112+30]) ghost
                              Pexp_tuple
                              [
                                expression (typing/types.ml[682,21112+24]..[682,21112+25])
                                  Pexp_ident "r" (typing/types.ml[682,21112+24]..[682,21112+25])
                                expression (typing/types.ml[682,21112+27]..[682,21112+30])
                                  Pexp_ident "log" (typing/types.ml[682,21112+27]..[682,21112+30])
                              ]
                      <arg>
                      Nolabel
                        expression (typing/types.ml[682,21112+32]..[682,21112+36])
                          Pexp_ident "next" (typing/types.ml[682,21112+32]..[682,21112+36])
                    ]
                <case>
                  pattern (typing/types.ml[683,21149+4]..[683,21149+20])
                    Ppat_construct "Change" (typing/types.ml[683,21149+4]..[683,21149+10])
                    Some
                      []
                      pattern (typing/types.ml[683,21149+11]..[683,21149+20])
                        Ppat_tuple
                        [
                          pattern (typing/types.ml[683,21149+12]..[683,21149+13])
                            Ppat_any
                          pattern (typing/types.ml[683,21149+15]..[683,21149+19])
                            Ppat_var "next" (typing/types.ml[683,21149+15]..[683,21149+19])
                        ]
                  expression (typing/types.ml[684,21173+6]..[684,21173+31])
                    Pexp_apply
                    expression (typing/types.ml[684,21173+6]..[684,21173+22])
                      Pexp_ident "rev_compress_log" (typing/types.ml[684,21173+6]..[684,21173+22])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[684,21173+23]..[684,21173+26])
                          Pexp_ident "log" (typing/types.ml[684,21173+23]..[684,21173+26])
                      <arg>
                      Nolabel
                        expression (typing/types.ml[684,21173+27]..[684,21173+31])
                          Pexp_ident "next" (typing/types.ml[684,21173+27]..[684,21173+31])
                    ]
              ]
    ]
  structure_item (typing/types.ml[686,21206+0]..[697,21552+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/types.ml[686,21206+4]..[686,21206+17])
          Ppat_var "undo_compress" (typing/types.ml[686,21206+4]..[686,21206+17])
        expression (typing/types.ml[686,21206+18]..[697,21552+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/types.ml[686,21206+18]..[686,21206+33])
            Ppat_tuple
            [
              pattern (typing/types.ml[686,21206+19]..[686,21206+26])
                Ppat_var "changes" (typing/types.ml[686,21206+19]..[686,21206+26])
              pattern (typing/types.ml[686,21206+28]..[686,21206+32])
                Ppat_var "_old" (typing/types.ml[686,21206+28]..[686,21206+32])
            ]
          expression (typing/types.ml[687,21242+2]..[697,21552+11])
            Pexp_match
            expression (typing/types.ml[687,21242+8]..[687,21242+16])
              Pexp_apply
              expression (typing/types.ml[687,21242+8]..[687,21242+9])
                Pexp_ident "!" (typing/types.ml[687,21242+8]..[687,21242+9])
              [
                <arg>
                Nolabel
                  expression (typing/types.ml[687,21242+9]..[687,21242+16])
                    Pexp_ident "changes" (typing/types.ml[687,21242+9]..[687,21242+16])
              ]
            [
              <case>
                pattern (typing/types.ml[688,21264+4]..[689,21278+11])
                  Ppat_or
                  pattern (typing/types.ml[688,21264+4]..[688,21264+13])
                    Ppat_construct "Unchanged" (typing/types.ml[688,21264+4]..[688,21264+13])
                    None
                  pattern (typing/types.ml[689,21278+4]..[689,21278+11])
                    Ppat_construct "Invalid" (typing/types.ml[689,21278+4]..[689,21278+11])
                    None
                expression (typing/types.ml[689,21278+15]..[689,21278+17])
                  Pexp_construct "()" (typing/types.ml[689,21278+15]..[689,21278+17])
                  None
              <case>
                pattern (typing/types.ml[690,21296+4]..[690,21296+12])
                  Ppat_construct "Change" (typing/types.ml[690,21296+4]..[690,21296+10])
                  Some
                    []
                    pattern (typing/types.ml[690,21296+11]..[690,21296+12])
                      Ppat_any
                expression (typing/types.ml[691,21312+6]..[697,21552+11])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/types.ml[691,21312+10]..[691,21312+13])
                        Ppat_var "log" (typing/types.ml[691,21312+10]..[691,21312+13])
                      expression (typing/types.ml[691,21312+16]..[691,21312+43])
                        Pexp_apply
                        expression (typing/types.ml[691,21312+16]..[691,21312+32])
                          Pexp_ident "rev_compress_log" (typing/types.ml[691,21312+16]..[691,21312+32])
                        [
                          <arg>
                          Nolabel
                            expression (typing/types.ml[691,21312+33]..[691,21312+35])
                              Pexp_construct "[]" (typing/types.ml[691,21312+33]..[691,21312+35])
                              None
                          <arg>
                          Nolabel
                            expression (typing/types.ml[691,21312+36]..[691,21312+43])
                              Pexp_ident "changes" (typing/types.ml[691,21312+36]..[691,21312+43])
                        ]
                  ]
                  expression (typing/types.ml[692,21359+6]..[697,21552+11])
                    Pexp_apply
                    expression (typing/types.ml[692,21359+6]..[692,21359+15])
                      Pexp_ident "List.iter" (typing/types.ml[692,21359+6]..[692,21359+15])
                    [
                      <arg>
                      Nolabel
                        expression (typing/types.ml[693,21375+8]..[696,21533+18])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/types.ml[693,21375+13]..[693,21375+14])
                            Ppat_var "r" (typing/types.ml[693,21375+13]..[693,21375+14])
                          expression (typing/types.ml[693,21375+18]..[696,21533+17])
                            Pexp_match
                            expression (typing/types.ml[693,21375+24]..[693,21375+26])
                              Pexp_apply
                              expression (typing/types.ml[693,21375+24]..[693,21375+25])
                                Pexp_ident "!" (typing/types.ml[693,21375+24]..[693,21375+25])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/types.ml[693,21375+25]..[693,21375+26])
                                    Pexp_ident "r" (typing/types.ml[693,21375+25]..[693,21375+26])
                              ]
                            [
                              <case>
                                pattern (typing/types.ml[694,21407+10]..[694,21407+48])
                                  Ppat_construct "Change" (typing/types.ml[694,21407+10]..[694,21407+16])
                                  Some
                                    []
                                    pattern (typing/types.ml[694,21407+17]..[694,21407+48])
                                      Ppat_tuple
                                      [
                                        pattern (typing/types.ml[694,21407+18]..[694,21407+41])
                                          Ppat_construct "Ccompress" (typing/types.ml[694,21407+18]..[694,21407+27])
                                          Some
                                            []
                                            pattern (typing/types.ml[694,21407+28]..[694,21407+41])
                                              Ppat_tuple
                                              [
                                                pattern (typing/types.ml[694,21407+29]..[694,21407+31])
                                                  Ppat_var "ty" (typing/types.ml[694,21407+29]..[694,21407+31])
                                                pattern (typing/types.ml[694,21407+33]..[694,21407+37])
                                                  Ppat_var "desc" (typing/types.ml[694,21407+33]..[694,21407+37])
                                                pattern (typing/types.ml[694,21407+39]..[694,21407+40])
                                                  Ppat_var "d" (typing/types.ml[694,21407+39]..[694,21407+40])
                                              ]
                                        pattern (typing/types.ml[694,21407+43]..[694,21407+47])
                                          Ppat_var "next" (typing/types.ml[694,21407+43]..[694,21407+47])
                                      ]
                                <when>
                                  expression (typing/types.ml[694,21407+54]..[694,21407+66])
                                    Pexp_apply
                                    expression (typing/types.ml[694,21407+62]..[694,21407+64])
                                      Pexp_ident "==" (typing/types.ml[694,21407+62]..[694,21407+64])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/types.ml[694,21407+54]..[694,21407+61])
                                          Pexp_field
                                          expression (typing/types.ml[694,21407+54]..[694,21407+56])
                                            Pexp_ident "ty" (typing/types.ml[694,21407+54]..[694,21407+56])
                                          "desc" (typing/types.ml[694,21407+57]..[694,21407+61])
                                      <arg>
                                      Nolabel
                                        expression (typing/types.ml[694,21407+65]..[694,21407+66])
                                          Pexp_ident "d" (typing/types.ml[694,21407+65]..[694,21407+66])
                                    ]
                                expression (typing/types.ml[695,21477+12]..[695,21477+55])
                                  Pexp_sequence
                                  expression (typing/types.ml[695,21477+12]..[695,21477+43])
                                    Pexp_apply
                                    expression (typing/types.ml[695,21477+12]..[695,21477+35])
                                      Pexp_ident "Transient_expr.set_desc" (typing/types.ml[695,21477+12]..[695,21477+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/types.ml[695,21477+36]..[695,21477+38])
                                          Pexp_ident "ty" (typing/types.ml[695,21477+36]..[695,21477+38])
                                      <arg>
                                      Nolabel
                                        expression (typing/types.ml[695,21477+39]..[695,21477+43])
                                          Pexp_ident "desc" (typing/types.ml[695,21477+39]..[695,21477+43])
                                    ]
                                  expression (typing/types.ml[695,21477+45]..[695,21477+55])
                                    Pexp_apply
                                    expression (typing/types.ml[695,21477+47]..[695,21477+49])
                                      Pexp_ident ":=" (typing/types.ml[695,21477+47]..[695,21477+49])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/types.ml[695,21477+45]..[695,21477+46])
                                          Pexp_ident "r" (typing/types.ml[695,21477+45]..[695,21477+46])
                                      <arg>
                                      Nolabel
                                        expression (typing/types.ml[695,21477+50]..[695,21477+55])
                                          Pexp_apply
                                          expression (typing/types.ml[695,21477+50]..[695,21477+51])
                                            Pexp_ident "!" (typing/types.ml[695,21477+50]..[695,21477+51])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/types.ml[695,21477+51]..[695,21477+55])
                                                Pexp_ident "next" (typing/types.ml[695,21477+51]..[695,21477+55])
                                          ]
                                    ]
                              <case>
                                pattern (typing/types.ml[696,21533+10]..[696,21533+11])
                                  Ppat_any
                                expression (typing/types.ml[696,21533+15]..[696,21533+17])
                                  Pexp_construct "()" (typing/types.ml[696,21533+15]..[696,21533+17])
                                  None
                            ]
                      <arg>
                      Nolabel
                        expression (typing/types.ml[697,21552+8]..[697,21552+11])
                          Pexp_ident "log" (typing/types.ml[697,21552+8]..[697,21552+11])
                    ]
            ]
    ]
]

