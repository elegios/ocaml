[
  structure_item (testsuite/tests/letrec-check/basic.ml[5,24+0]..[5,24+19])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[5,24+8]..[5,24+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[5,24+8]..[5,24+9])
        expression (testsuite/tests/letrec-check/basic.ml[5,24+12]..[5,24+19])
          Pexp_sequence
          expression (testsuite/tests/letrec-check/basic.ml[5,24+13]..[5,24+14])
            Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[5,24+13]..[5,24+14])
          expression (testsuite/tests/letrec-check/basic.ml[5,24+16]..[5,24+18])
            Pexp_construct "()" (testsuite/tests/letrec-check/basic.ml[5,24+16]..[5,24+18])
            None
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[6,46+0]..[8,76+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[6,46+9]..[8,76+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[6,46+9]..[8,76+2])
          Pexp_constant PConst_string ("\nval x : unit = ()\n",(testsuite/tests/letrec-check/basic.ml[6,46+11]..[8,76+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[10,83+0]..[10,83+15])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[10,83+8]..[10,83+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[10,83+8]..[10,83+9])
        expression (testsuite/tests/letrec-check/basic.ml[10,83+12]..[10,83+15])
          Pexp_constant PConst_string("x",(testsuite/tests/letrec-check/basic.ml[10,83+13]..[10,83+14]),None)
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[11,101+0]..[13,134+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[11,101+9]..[13,134+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[11,101+9]..[13,134+2])
          Pexp_constant PConst_string ("\nval x : string = \"x\"\n",(testsuite/tests/letrec-check/basic.ml[11,101+11]..[13,134+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[15,141+0]..[15,141+27])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[15,141+8]..[15,141+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[15,141+8]..[15,141+9])
        expression (testsuite/tests/letrec-check/basic.ml[15,141+12]..[15,141+27])
          Pexp_let Nonrec
          [
            <def>
              pattern (testsuite/tests/letrec-check/basic.ml[15,141+16]..[15,141+17])
                Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[15,141+16]..[15,141+17])
              expression (testsuite/tests/letrec-check/basic.ml[15,141+20]..[15,141+22])
                Pexp_construct "()" (testsuite/tests/letrec-check/basic.ml[15,141+20]..[15,141+22])
                None
          ]
          expression (testsuite/tests/letrec-check/basic.ml[15,141+26]..[15,141+27])
            Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[15,141+26]..[15,141+27])
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[16,171+0]..[18,201+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[16,171+9]..[18,201+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[16,171+9]..[18,201+2])
          Pexp_constant PConst_string ("\nval x : unit = ()\n",(testsuite/tests/letrec-check/basic.ml[16,171+11]..[18,201+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[20,208+0]..[20,208+32])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[20,208+8]..[20,208+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[20,208+8]..[20,208+9])
        expression (testsuite/tests/letrec-check/basic.ml[20,208+12]..[20,208+32])
          Pexp_let Nonrec
          [
            <def>
              pattern (testsuite/tests/letrec-check/basic.ml[20,208+16]..[20,208+17])
                Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[20,208+16]..[20,208+17])
              expression (testsuite/tests/letrec-check/basic.ml[20,208+20]..[20,208+27])
                Pexp_sequence
                expression (testsuite/tests/letrec-check/basic.ml[20,208+21]..[20,208+22])
                  Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[20,208+21]..[20,208+22])
                expression (testsuite/tests/letrec-check/basic.ml[20,208+24]..[20,208+26])
                  Pexp_construct "()" (testsuite/tests/letrec-check/basic.ml[20,208+24]..[20,208+26])
                  None
          ]
          expression (testsuite/tests/letrec-check/basic.ml[20,208+31]..[20,208+32])
            Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[20,208+31]..[20,208+32])
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[21,243+0]..[23,273+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[21,243+9]..[23,273+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[21,243+9]..[23,273+2])
          Pexp_constant PConst_string ("\nval x : unit = ()\n",(testsuite/tests/letrec-check/basic.ml[21,243+11]..[23,273+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[25,280+0]..[25,280+27])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[25,280+8]..[25,280+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[25,280+8]..[25,280+9])
        expression (testsuite/tests/letrec-check/basic.ml[25,280+12]..[25,280+27])
          Pexp_let Nonrec
          [
            <def>
              pattern (testsuite/tests/letrec-check/basic.ml[25,280+16]..[25,280+17])
                Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[25,280+16]..[25,280+17])
              expression (testsuite/tests/letrec-check/basic.ml[25,280+20]..[25,280+22])
                Pexp_construct "()" (testsuite/tests/letrec-check/basic.ml[25,280+20]..[25,280+22])
                None
          ]
          expression (testsuite/tests/letrec-check/basic.ml[25,280+26]..[25,280+27])
            Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[25,280+26]..[25,280+27])
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[26,310+0]..[31,492+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[26,310+9]..[31,492+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[26,310+9]..[31,492+2])
          Pexp_constant PConst_string ("\nLine 1, characters 12-27:\n1 | let rec x = let y = () in x;;\n                ^^^^^^^^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[26,310+11]..[31,492+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[33,499+0]..[34,515+23])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[33,499+8]..[33,499+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[33,499+8]..[33,499+9])
        expression (testsuite/tests/letrec-check/basic.ml[33,499+12]..[33,499+15])
          Pexp_construct "::" (testsuite/tests/letrec-check/basic.ml[33,499+13]..[33,499+15]) ghost
          Some
            expression (testsuite/tests/letrec-check/basic.ml[33,499+13]..[33,499+15]) ghost
              Pexp_tuple
              [
                expression (testsuite/tests/letrec-check/basic.ml[33,499+13]..[33,499+14])
                  Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[33,499+13]..[33,499+14])
                expression (testsuite/tests/letrec-check/basic.ml[33,499+14]..[33,499+15]) ghost
                  Pexp_construct "[]" (testsuite/tests/letrec-check/basic.ml[33,499+14]..[33,499+15]) ghost
                  None
              ]
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[34,515+4]..[34,515+5])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[34,515+4]..[34,515+5])
        expression (testsuite/tests/letrec-check/basic.ml[34,515+8]..[34,515+23])
          Pexp_let Nonrec
          [
            <def>
              pattern (testsuite/tests/letrec-check/basic.ml[34,515+12]..[34,515+13])
                Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[34,515+12]..[34,515+13])
              expression (testsuite/tests/letrec-check/basic.ml[34,515+16]..[34,515+18])
                Pexp_construct "()" (testsuite/tests/letrec-check/basic.ml[34,515+16]..[34,515+18])
                None
          ]
          expression (testsuite/tests/letrec-check/basic.ml[34,515+22]..[34,515+23])
            Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[34,515+22]..[34,515+23])
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[35,541+0]..[38,596+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[35,541+9]..[38,596+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[35,541+9]..[38,596+2])
          Pexp_constant PConst_string ("\nval x : unit list = [()]\nval y : unit = ()\n",(testsuite/tests/letrec-check/basic.ml[35,541+11]..[38,596+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[40,603+0]..[41,619+27])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[40,603+8]..[40,603+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[40,603+8]..[40,603+9])
        expression (testsuite/tests/letrec-check/basic.ml[40,603+12]..[40,603+15])
          Pexp_construct "::" (testsuite/tests/letrec-check/basic.ml[40,603+13]..[40,603+15]) ghost
          Some
            expression (testsuite/tests/letrec-check/basic.ml[40,603+13]..[40,603+15]) ghost
              Pexp_tuple
              [
                expression (testsuite/tests/letrec-check/basic.ml[40,603+13]..[40,603+14])
                  Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[40,603+13]..[40,603+14])
                expression (testsuite/tests/letrec-check/basic.ml[40,603+14]..[40,603+15]) ghost
                  Pexp_construct "[]" (testsuite/tests/letrec-check/basic.ml[40,603+14]..[40,603+15]) ghost
                  None
              ]
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[41,619+4]..[41,619+5])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[41,619+4]..[41,619+5])
        expression (testsuite/tests/letrec-check/basic.ml[41,619+8]..[41,619+27])
          Pexp_let Rec
          [
            <def>
              pattern (testsuite/tests/letrec-check/basic.ml[41,619+16]..[41,619+17])
                Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[41,619+16]..[41,619+17])
              expression (testsuite/tests/letrec-check/basic.ml[41,619+20]..[41,619+22])
                Pexp_construct "()" (testsuite/tests/letrec-check/basic.ml[41,619+20]..[41,619+22])
                None
          ]
          expression (testsuite/tests/letrec-check/basic.ml[41,619+26]..[41,619+27])
            Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[41,619+26]..[41,619+27])
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[42,649+0]..[45,704+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[42,649+9]..[45,704+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[42,649+9]..[45,704+2])
          Pexp_constant PConst_string ("\nval x : unit list = [()]\nval y : unit = ()\n",(testsuite/tests/letrec-check/basic.ml[42,649+11]..[45,704+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[47,711+0]..[51,763+5])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[47,711+8]..[47,711+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[47,711+8]..[47,711+9])
        expression (testsuite/tests/letrec-check/basic.ml[48,723+2]..[49,738+16])
          Pexp_let Nonrec
          [
            <def>
              pattern (testsuite/tests/letrec-check/basic.ml[48,723+6]..[48,723+7])
                Ppat_var "a" (testsuite/tests/letrec-check/basic.ml[48,723+6]..[48,723+7])
              expression (testsuite/tests/letrec-check/basic.ml[48,723+10]..[48,723+11])
                Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[48,723+10]..[48,723+11])
          ]
          expression (testsuite/tests/letrec-check/basic.ml[49,738+2]..[49,738+16])
            Pexp_fun
            Nolabel
            None
            pattern (testsuite/tests/letrec-check/basic.ml[49,738+6]..[49,738+8])
              Ppat_construct "()" (testsuite/tests/letrec-check/basic.ml[49,738+6]..[49,738+8])
              None
            expression (testsuite/tests/letrec-check/basic.ml[49,738+12]..[49,738+16])
              Pexp_apply
              expression (testsuite/tests/letrec-check/basic.ml[49,738+12]..[49,738+13])
                Pexp_ident "a" (testsuite/tests/letrec-check/basic.ml[49,738+12]..[49,738+13])
              [
                <arg>
                Nolabel
                  expression (testsuite/tests/letrec-check/basic.ml[49,738+14]..[49,738+16])
                    Pexp_construct "()" (testsuite/tests/letrec-check/basic.ml[49,738+14]..[49,738+16])
                    None
              ]
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[50,755+4]..[50,755+5])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[50,755+4]..[50,755+5])
        expression (testsuite/tests/letrec-check/basic.ml[51,763+2]..[51,763+5])
          Pexp_construct "::" (testsuite/tests/letrec-check/basic.ml[51,763+3]..[51,763+5]) ghost
          Some
            expression (testsuite/tests/letrec-check/basic.ml[51,763+3]..[51,763+5]) ghost
              Pexp_tuple
              [
                expression (testsuite/tests/letrec-check/basic.ml[51,763+3]..[51,763+4])
                  Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[51,763+3]..[51,763+4])
                expression (testsuite/tests/letrec-check/basic.ml[51,763+4]..[51,763+5]) ghost
                  Pexp_construct "[]" (testsuite/tests/letrec-check/basic.ml[51,763+4]..[51,763+5]) ghost
                  None
              ]
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[52,771+0]..[55,846+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[52,771+9]..[55,846+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[52,771+9]..[55,846+2])
          Pexp_constant PConst_string ("\nval x : unit -> 'a = <fun>\nval y : (unit -> 'a) list = [<fun>]\n",(testsuite/tests/letrec-check/basic.ml[52,771+11]..[55,846+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[57,853+0]..[57,853+27])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[57,853+8]..[57,853+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[57,853+8]..[57,853+9])
        expression (testsuite/tests/letrec-check/basic.ml[57,853+12]..[57,853+17])
          Pexp_array
          [
            expression (testsuite/tests/letrec-check/basic.ml[57,853+14]..[57,853+15])
              Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[57,853+14]..[57,853+15])
          ]
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[57,853+22]..[57,853+23])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[57,853+22]..[57,853+23])
        expression (testsuite/tests/letrec-check/basic.ml[57,853+26]..[57,853+27])
          Pexp_constant PConst_int (0,None)
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[58,883+0]..[61,937+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[58,883+9]..[61,937+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[58,883+9]..[61,937+2])
          Pexp_constant PConst_string ("\nval x : int array = [|0|]\nval y : int = 0\n",(testsuite/tests/letrec-check/basic.ml[58,883+11]..[61,937+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[64,945+0]..[65,964+26])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[64,945+8]..[64,945+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[64,945+8]..[64,945+9])
        expression (testsuite/tests/letrec-check/basic.ml[64,945+12]..[64,945+18])
          Pexp_tuple
          [
            expression (testsuite/tests/letrec-check/basic.ml[64,945+13]..[64,945+14])
              Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[64,945+13]..[64,945+14])
            expression (testsuite/tests/letrec-check/basic.ml[64,945+16]..[64,945+17])
              Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[64,945+16]..[64,945+17])
          ]
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[65,964+4]..[65,964+5])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[65,964+4]..[65,964+5])
        expression (testsuite/tests/letrec-check/basic.ml[65,964+8]..[65,964+26])
          Pexp_fun
          Nolabel
          None
          pattern (testsuite/tests/letrec-check/basic.ml[65,964+12]..[65,964+14])
            Ppat_construct "()" (testsuite/tests/letrec-check/basic.ml[65,964+12]..[65,964+14])
            None
          expression (testsuite/tests/letrec-check/basic.ml[65,964+18]..[65,964+26])
            Pexp_apply
            expression (testsuite/tests/letrec-check/basic.ml[65,964+18]..[65,964+24])
              Pexp_ident "ignore" (testsuite/tests/letrec-check/basic.ml[65,964+18]..[65,964+24])
            [
              <arg>
              Nolabel
                expression (testsuite/tests/letrec-check/basic.ml[65,964+25]..[65,964+26])
                  Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[65,964+25]..[65,964+26])
            ]
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[66,993+0]..[69,1091+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[66,993+9]..[69,1091+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[66,993+9]..[69,1091+2])
          Pexp_constant PConst_string ("\nval x : (unit -> unit) * (unit -> unit) = (<fun>, <fun>)\nval y : unit -> unit = <fun>\n",(testsuite/tests/letrec-check/basic.ml[66,993+11]..[69,1091+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[71,1098+0]..[72,1117+26])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[71,1098+8]..[71,1098+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[71,1098+8]..[71,1098+9])
        expression (testsuite/tests/letrec-check/basic.ml[71,1098+12]..[71,1098+18])
          Pexp_construct "Some" (testsuite/tests/letrec-check/basic.ml[71,1098+12]..[71,1098+16])
          Some
            expression (testsuite/tests/letrec-check/basic.ml[71,1098+17]..[71,1098+18])
              Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[71,1098+17]..[71,1098+18])
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[72,1117+4]..[72,1117+5])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[72,1117+4]..[72,1117+5])
        expression (testsuite/tests/letrec-check/basic.ml[72,1117+8]..[72,1117+26])
          Pexp_fun
          Nolabel
          None
          pattern (testsuite/tests/letrec-check/basic.ml[72,1117+12]..[72,1117+14])
            Ppat_construct "()" (testsuite/tests/letrec-check/basic.ml[72,1117+12]..[72,1117+14])
            None
          expression (testsuite/tests/letrec-check/basic.ml[72,1117+18]..[72,1117+26])
            Pexp_apply
            expression (testsuite/tests/letrec-check/basic.ml[72,1117+18]..[72,1117+24])
              Pexp_ident "ignore" (testsuite/tests/letrec-check/basic.ml[72,1117+18]..[72,1117+24])
            [
              <arg>
              Nolabel
                expression (testsuite/tests/letrec-check/basic.ml[72,1117+25]..[72,1117+26])
                  Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[72,1117+25]..[72,1117+26])
            ]
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[74,1147+0]..[77,1231+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[74,1147+9]..[77,1231+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[74,1147+9]..[77,1231+2])
          Pexp_constant PConst_string ("\nval x : (unit -> unit) option = Some <fun>\nval y : unit -> unit = <fun>\n",(testsuite/tests/letrec-check/basic.ml[74,1147+11]..[77,1231+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[79,1238+0]..[79,1238+20])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[79,1238+8]..[79,1238+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[79,1238+8]..[79,1238+9])
        expression (testsuite/tests/letrec-check/basic.ml[79,1238+12]..[79,1238+20])
          Pexp_apply
          expression (testsuite/tests/letrec-check/basic.ml[79,1238+12]..[79,1238+18])
            Pexp_ident "ignore" (testsuite/tests/letrec-check/basic.ml[79,1238+12]..[79,1238+18])
          [
            <arg>
            Nolabel
              expression (testsuite/tests/letrec-check/basic.ml[79,1238+19]..[79,1238+20])
                Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[79,1238+19]..[79,1238+20])
          ]
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[80,1261+0]..[85,1429+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[80,1261+9]..[85,1429+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[80,1261+9]..[85,1429+2])
          Pexp_constant PConst_string ("\nLine 1, characters 12-20:\n1 | let rec x = ignore x;;\n                ^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[80,1261+11]..[85,1429+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[87,1436+0]..[87,1436+28])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[87,1436+8]..[87,1436+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[87,1436+8]..[87,1436+9])
        expression (testsuite/tests/letrec-check/basic.ml[87,1436+12]..[87,1436+15])
          Pexp_apply
          expression (testsuite/tests/letrec-check/basic.ml[87,1436+12]..[87,1436+13])
            Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[87,1436+12]..[87,1436+13])
          [
            <arg>
            Nolabel
              expression (testsuite/tests/letrec-check/basic.ml[87,1436+14]..[87,1436+15])
                Pexp_constant PConst_int (0,None)
          ]
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[87,1436+20]..[87,1436+21])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[87,1436+20]..[87,1436+21])
        expression (testsuite/tests/letrec-check/basic.ml[87,1436+22]..[87,1436+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (testsuite/tests/letrec-check/basic.ml[87,1436+22]..[87,1436+23])
            Ppat_any
          expression (testsuite/tests/letrec-check/basic.ml[87,1436+26]..[87,1436+28])
            Pexp_construct "()" (testsuite/tests/letrec-check/basic.ml[87,1436+26]..[87,1436+28])
            None
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[88,1467+0]..[93,1638+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[88,1467+9]..[93,1638+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[88,1467+9]..[93,1638+2])
          Pexp_constant PConst_string ("\nLine 1, characters 12-15:\n1 | let rec x = y 0 and y _ = ();;\n                ^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[88,1467+11]..[93,1638+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[95,1645+0]..[95,1645+37])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[95,1645+8]..[95,1645+9])
          Ppat_var "b" (testsuite/tests/letrec-check/basic.ml[95,1645+8]..[95,1645+9])
        expression (testsuite/tests/letrec-check/basic.ml[95,1645+12]..[95,1645+37])
          Pexp_ifthenelse
          expression (testsuite/tests/letrec-check/basic.ml[95,1645+15]..[95,1645+16])
            Pexp_ident "b" (testsuite/tests/letrec-check/basic.ml[95,1645+15]..[95,1645+16])
          expression (testsuite/tests/letrec-check/basic.ml[95,1645+22]..[95,1645+26])
            Pexp_construct "true" (testsuite/tests/letrec-check/basic.ml[95,1645+22]..[95,1645+26])
            None
          Some
            expression (testsuite/tests/letrec-check/basic.ml[95,1645+32]..[95,1645+37])
              Pexp_construct "false" (testsuite/tests/letrec-check/basic.ml[95,1645+32]..[95,1645+37])
              None
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[96,1685+0]..[101,1887+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[96,1685+9]..[101,1887+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[96,1685+9]..[101,1887+2])
          Pexp_constant PConst_string ("\nLine 1, characters 12-37:\n1 | let rec b = if b then true else false;;\n                ^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[96,1685+11]..[101,1887+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[103,1894+0]..[108,2012+29])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[103,1894+8]..[103,1894+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[103,1894+8]..[103,1894+9])
        expression (testsuite/tests/letrec-check/basic.ml[103,1894+12]..[105,1943+25])
          Pexp_function
          [
            <case>
              pattern (testsuite/tests/letrec-check/basic.ml[104,1915+4]..[104,1915+10])
                Ppat_construct "Some" (testsuite/tests/letrec-check/basic.ml[104,1915+4]..[104,1915+8])
                Some
                  []
                  pattern (testsuite/tests/letrec-check/basic.ml[104,1915+9]..[104,1915+10])
                    Ppat_any
              expression (testsuite/tests/letrec-check/basic.ml[104,1915+14]..[104,1915+27])
                Pexp_apply
                expression (testsuite/tests/letrec-check/basic.ml[104,1915+14]..[104,1915+20])
                  Pexp_ident "ignore" (testsuite/tests/letrec-check/basic.ml[104,1915+14]..[104,1915+20])
                [
                  <arg>
                  Nolabel
                    expression (testsuite/tests/letrec-check/basic.ml[104,1915+21]..[104,1915+27])
                      Pexp_apply
                      expression (testsuite/tests/letrec-check/basic.ml[104,1915+22]..[104,1915+23])
                        Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[104,1915+22]..[104,1915+23])
                      [
                        <arg>
                        Nolabel
                          expression (testsuite/tests/letrec-check/basic.ml[104,1915+24]..[104,1915+26])
                            Pexp_construct "[]" (testsuite/tests/letrec-check/basic.ml[104,1915+24]..[104,1915+26])
                            None
                      ]
                ]
            <case>
              pattern (testsuite/tests/letrec-check/basic.ml[105,1943+4]..[105,1943+8])
                Ppat_construct "None" (testsuite/tests/letrec-check/basic.ml[105,1943+4]..[105,1943+8])
                None
              expression (testsuite/tests/letrec-check/basic.ml[105,1943+12]..[105,1943+25])
                Pexp_apply
                expression (testsuite/tests/letrec-check/basic.ml[105,1943+12]..[105,1943+18])
                  Pexp_ident "ignore" (testsuite/tests/letrec-check/basic.ml[105,1943+12]..[105,1943+18])
                [
                  <arg>
                  Nolabel
                    expression (testsuite/tests/letrec-check/basic.ml[105,1943+19]..[105,1943+25])
                      Pexp_apply
                      expression (testsuite/tests/letrec-check/basic.ml[105,1943+20]..[105,1943+21])
                        Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[105,1943+20]..[105,1943+21])
                      [
                        <arg>
                        Nolabel
                          expression (testsuite/tests/letrec-check/basic.ml[105,1943+22]..[105,1943+24])
                            Pexp_construct "[]" (testsuite/tests/letrec-check/basic.ml[105,1943+22]..[105,1943+24])
                            None
                      ]
                ]
          ]
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[106,1969+4]..[106,1969+5])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[106,1969+4]..[106,1969+5])
        expression (testsuite/tests/letrec-check/basic.ml[106,1969+8]..[108,2012+29])
          Pexp_function
          [
            <case>
              pattern (testsuite/tests/letrec-check/basic.ml[107,1986+4]..[107,1986+6])
                Ppat_construct "[]" (testsuite/tests/letrec-check/basic.ml[107,1986+4]..[107,1986+6])
                None
              expression (testsuite/tests/letrec-check/basic.ml[107,1986+10]..[107,1986+25])
                Pexp_apply
                expression (testsuite/tests/letrec-check/basic.ml[107,1986+10]..[107,1986+16])
                  Pexp_ident "ignore" (testsuite/tests/letrec-check/basic.ml[107,1986+10]..[107,1986+16])
                [
                  <arg>
                  Nolabel
                    expression (testsuite/tests/letrec-check/basic.ml[107,1986+17]..[107,1986+25])
                      Pexp_apply
                      expression (testsuite/tests/letrec-check/basic.ml[107,1986+18]..[107,1986+19])
                        Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[107,1986+18]..[107,1986+19])
                      [
                        <arg>
                        Nolabel
                          expression (testsuite/tests/letrec-check/basic.ml[107,1986+20]..[107,1986+24])
                            Pexp_construct "None" (testsuite/tests/letrec-check/basic.ml[107,1986+20]..[107,1986+24])
                            None
                      ]
                ]
            <case>
              pattern (testsuite/tests/letrec-check/basic.ml[108,2012+4]..[108,2012+10])
                Ppat_construct "::" (testsuite/tests/letrec-check/basic.ml[108,2012+6]..[108,2012+8])
                Some
                  []
                  pattern (testsuite/tests/letrec-check/basic.ml[108,2012+4]..[108,2012+10]) ghost
                    Ppat_tuple
                    [
                      pattern (testsuite/tests/letrec-check/basic.ml[108,2012+4]..[108,2012+5])
                        Ppat_any
                      pattern (testsuite/tests/letrec-check/basic.ml[108,2012+9]..[108,2012+10])
                        Ppat_any
                    ]
              expression (testsuite/tests/letrec-check/basic.ml[108,2012+14]..[108,2012+29])
                Pexp_apply
                expression (testsuite/tests/letrec-check/basic.ml[108,2012+14]..[108,2012+20])
                  Pexp_ident "ignore" (testsuite/tests/letrec-check/basic.ml[108,2012+14]..[108,2012+20])
                [
                  <arg>
                  Nolabel
                    expression (testsuite/tests/letrec-check/basic.ml[108,2012+21]..[108,2012+29])
                      Pexp_apply
                      expression (testsuite/tests/letrec-check/basic.ml[108,2012+22]..[108,2012+23])
                        Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[108,2012+22]..[108,2012+23])
                      [
                        <arg>
                        Nolabel
                          expression (testsuite/tests/letrec-check/basic.ml[108,2012+24]..[108,2012+28])
                            Pexp_construct "None" (testsuite/tests/letrec-check/basic.ml[108,2012+24]..[108,2012+28])
                            None
                      ]
                ]
          ]
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[110,2049+0]..[113,2127+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[110,2049+9]..[113,2127+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[110,2049+9]..[113,2127+2])
          Pexp_constant PConst_string ("\nval x : 'a option -> unit = <fun>\nval y : 'a list -> unit = <fun>\n",(testsuite/tests/letrec-check/basic.ml[110,2049+11]..[113,2127+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[116,2173+0]..[116,2173+59])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[116,2173+8]..[116,2173+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[116,2173+8]..[116,2173+9])
        expression (testsuite/tests/letrec-check/basic.ml[116,2173+12]..[116,2173+35])
          attribute "ocaml.warning"
            [
              structure_item (testsuite/tests/letrec-check/basic.ml[116,2173+53]..[116,2173+58])
                Pstr_eval
                expression (testsuite/tests/letrec-check/basic.ml[116,2173+53]..[116,2173+58])
                  Pexp_constant PConst_string("-23",(testsuite/tests/letrec-check/basic.ml[116,2173+54]..[116,2173+57]),None)
            ]
          Pexp_record
          [
            "contents" (testsuite/tests/letrec-check/basic.ml[116,2173+21]..[116,2173+29])
              expression (testsuite/tests/letrec-check/basic.ml[116,2173+32]..[116,2173+33])
                Pexp_constant PConst_int (3,None)
          ]
          Some
            expression (testsuite/tests/letrec-check/basic.ml[116,2173+14]..[116,2173+15])
              Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[116,2173+14]..[116,2173+15])
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[117,2235+0]..[122,2457+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[117,2235+9]..[122,2457+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[117,2235+9]..[122,2457+2])
          Pexp_constant PConst_string ("\nLine 1, characters 12-35:\n1 | let rec x = { x with contents = 3 }  [@ocaml.warning \"-23\"];;\n                ^^^^^^^^^^^^^^^^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[117,2235+11]..[122,2457+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[126,2564+0]..[126,2564+39])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[126,2564+8]..[126,2564+9])
          Ppat_var "c" (testsuite/tests/letrec-check/basic.ml[126,2564+8]..[126,2564+9])
        expression (testsuite/tests/letrec-check/basic.ml[126,2564+12]..[126,2564+39])
          Pexp_record
          [
            "Complex.re" (testsuite/tests/letrec-check/basic.ml[126,2564+21]..[126,2564+31])
              expression (testsuite/tests/letrec-check/basic.ml[126,2564+34]..[126,2564+37])
                Pexp_constant PConst_float (1.0,None)
          ]
          Some
            expression (testsuite/tests/letrec-check/basic.ml[126,2564+14]..[126,2564+15])
              Pexp_ident "c" (testsuite/tests/letrec-check/basic.ml[126,2564+14]..[126,2564+15])
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[127,2606+0]..[132,2812+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[127,2606+9]..[132,2812+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[127,2606+9]..[132,2812+2])
          Pexp_constant PConst_string ("\nLine 1, characters 12-39:\n1 | let rec c = { c with Complex.re = 1.0 };;\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[127,2606+11]..[132,2812+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[134,2819+0]..[135,2836+26])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[134,2819+8]..[134,2819+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[134,2819+8]..[134,2819+9])
        expression (testsuite/tests/letrec-check/basic.ml[134,2819+12]..[134,2819+16])
          Pexp_variant "A"
          Some
            expression (testsuite/tests/letrec-check/basic.ml[134,2819+15]..[134,2819+16])
              Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[134,2819+15]..[134,2819+16])
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[135,2836+4]..[135,2836+5])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[135,2836+4]..[135,2836+5])
        expression (testsuite/tests/letrec-check/basic.ml[135,2836+8]..[135,2836+26])
          Pexp_fun
          Nolabel
          None
          pattern (testsuite/tests/letrec-check/basic.ml[135,2836+12]..[135,2836+14])
            Ppat_construct "()" (testsuite/tests/letrec-check/basic.ml[135,2836+12]..[135,2836+14])
            None
          expression (testsuite/tests/letrec-check/basic.ml[135,2836+18]..[135,2836+26])
            Pexp_apply
            expression (testsuite/tests/letrec-check/basic.ml[135,2836+18]..[135,2836+24])
              Pexp_ident "ignore" (testsuite/tests/letrec-check/basic.ml[135,2836+18]..[135,2836+24])
            [
              <arg>
              Nolabel
                expression (testsuite/tests/letrec-check/basic.ml[135,2836+25]..[135,2836+26])
                  Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[135,2836+25]..[135,2836+26])
            ]
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[137,2866+0]..[140,2950+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[137,2866+9]..[140,2950+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[137,2866+9]..[140,2950+2])
          Pexp_constant PConst_string ("\nval x : [> `A of unit -> unit ] = `A <fun>\nval y : unit -> unit = <fun>\n",(testsuite/tests/letrec-check/basic.ml[137,2866+11]..[140,2950+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[142,2957+0]..[143,2986+26])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[142,2957+8]..[142,2957+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[142,2957+8]..[142,2957+9])
        expression (testsuite/tests/letrec-check/basic.ml[142,2957+12]..[142,2957+28])
          Pexp_record
          [
            "contents" (testsuite/tests/letrec-check/basic.ml[142,2957+14]..[142,2957+22])
              expression (testsuite/tests/letrec-check/basic.ml[142,2957+25]..[142,2957+26])
                Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[142,2957+25]..[142,2957+26])
          ]
          None
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[143,2986+4]..[143,2986+5])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[143,2986+4]..[143,2986+5])
        expression (testsuite/tests/letrec-check/basic.ml[143,2986+8]..[143,2986+26])
          Pexp_fun
          Nolabel
          None
          pattern (testsuite/tests/letrec-check/basic.ml[143,2986+12]..[143,2986+14])
            Ppat_construct "()" (testsuite/tests/letrec-check/basic.ml[143,2986+12]..[143,2986+14])
            None
          expression (testsuite/tests/letrec-check/basic.ml[143,2986+18]..[143,2986+26])
            Pexp_apply
            expression (testsuite/tests/letrec-check/basic.ml[143,2986+18]..[143,2986+24])
              Pexp_ident "ignore" (testsuite/tests/letrec-check/basic.ml[143,2986+18]..[143,2986+24])
            [
              <arg>
              Nolabel
                expression (testsuite/tests/letrec-check/basic.ml[143,2986+25]..[143,2986+26])
                  Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[143,2986+25]..[143,2986+26])
            ]
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[144,3015+0]..[147,3104+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[144,3015+9]..[147,3104+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[144,3015+9]..[147,3104+2])
          Pexp_constant PConst_string ("\nval x : (unit -> unit) ref = {contents = <fun>}\nval y : unit -> unit = <fun>\n",(testsuite/tests/letrec-check/basic.ml[144,3015+11]..[147,3104+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[149,3111+0]..[149,3111+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[149,3111+4]..[149,3111+5])
          Ppat_var "r" (testsuite/tests/letrec-check/basic.ml[149,3111+4]..[149,3111+5])
        expression (testsuite/tests/letrec-check/basic.ml[149,3111+8]..[149,3111+26])
          Pexp_apply
          expression (testsuite/tests/letrec-check/basic.ml[149,3111+8]..[149,3111+11])
            Pexp_ident "ref" (testsuite/tests/letrec-check/basic.ml[149,3111+8]..[149,3111+11])
          [
            <arg>
            Nolabel
              expression (testsuite/tests/letrec-check/basic.ml[149,3111+12]..[149,3111+26])
                Pexp_fun
                Nolabel
                None
                pattern (testsuite/tests/letrec-check/basic.ml[149,3111+17]..[149,3111+19])
                  Ppat_construct "()" (testsuite/tests/letrec-check/basic.ml[149,3111+17]..[149,3111+19])
                  None
                expression (testsuite/tests/letrec-check/basic.ml[149,3111+23]..[149,3111+25])
                  Pexp_construct "()" (testsuite/tests/letrec-check/basic.ml[149,3111+23]..[149,3111+25])
                  None
          ]
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[150,3138+0]..[150,3138+28])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[150,3138+8]..[150,3138+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[150,3138+8]..[150,3138+9])
        expression (testsuite/tests/letrec-check/basic.ml[150,3138+12]..[150,3138+28])
          Pexp_fun
          Nolabel
          None
          pattern (testsuite/tests/letrec-check/basic.ml[150,3138+16]..[150,3138+18])
            Ppat_construct "()" (testsuite/tests/letrec-check/basic.ml[150,3138+16]..[150,3138+18])
            None
          expression (testsuite/tests/letrec-check/basic.ml[150,3138+22]..[150,3138+28])
            Pexp_apply
            expression (testsuite/tests/letrec-check/basic.ml[150,3138+24]..[150,3138+26])
              Pexp_ident ":=" (testsuite/tests/letrec-check/basic.ml[150,3138+24]..[150,3138+26])
            [
              <arg>
              Nolabel
                expression (testsuite/tests/letrec-check/basic.ml[150,3138+22]..[150,3138+23])
                  Pexp_ident "r" (testsuite/tests/letrec-check/basic.ml[150,3138+22]..[150,3138+23])
              <arg>
              Nolabel
                expression (testsuite/tests/letrec-check/basic.ml[150,3138+27]..[150,3138+28])
                  Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[150,3138+27]..[150,3138+28])
            ]
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[151,3169+0]..[154,3258+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[151,3169+9]..[154,3258+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[151,3169+9]..[154,3258+2])
          Pexp_constant PConst_string ("\nval r : (unit -> unit) ref = {contents = <fun>}\nval x : unit -> unit = <fun>\n",(testsuite/tests/letrec-check/basic.ml[151,3169+11]..[154,3258+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[156,3265+0]..[156,3265+57])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[156,3265+8]..[156,3265+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[156,3265+8]..[156,3265+9])
        expression (testsuite/tests/letrec-check/basic.ml[156,3265+12]..[156,3265+32])
          Pexp_fun
          Nolabel
          None
          pattern (testsuite/tests/letrec-check/basic.ml[156,3265+16]..[156,3265+18])
            Ppat_construct "()" (testsuite/tests/letrec-check/basic.ml[156,3265+16]..[156,3265+18])
            None
          expression (testsuite/tests/letrec-check/basic.ml[156,3265+22]..[156,3265+32])
            Pexp_field
            expression (testsuite/tests/letrec-check/basic.ml[156,3265+22]..[156,3265+23])
              Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[156,3265+22]..[156,3265+23])
            "contents" (testsuite/tests/letrec-check/basic.ml[156,3265+24]..[156,3265+32])
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[156,3265+37]..[156,3265+38])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[156,3265+37]..[156,3265+38])
        expression (testsuite/tests/letrec-check/basic.ml[156,3265+41]..[156,3265+57])
          Pexp_record
          [
            "contents" (testsuite/tests/letrec-check/basic.ml[156,3265+43]..[156,3265+51])
              expression (testsuite/tests/letrec-check/basic.ml[156,3265+54]..[156,3265+55])
                Pexp_constant PConst_int (3,None)
          ]
          None
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[157,3325+0]..[160,3398+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[157,3325+9]..[160,3398+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[157,3325+9]..[160,3398+2])
          Pexp_constant PConst_string ("\nval x : unit -> int = <fun>\nval y : int ref = {contents = 3}\n",(testsuite/tests/letrec-check/basic.ml[157,3325+11]..[160,3398+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[162,3405+0]..[162,3405+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[162,3405+4]..[162,3405+5])
          Ppat_var "r" (testsuite/tests/letrec-check/basic.ml[162,3405+4]..[162,3405+5])
        expression (testsuite/tests/letrec-check/basic.ml[162,3405+8]..[162,3405+14])
          Pexp_apply
          expression (testsuite/tests/letrec-check/basic.ml[162,3405+8]..[162,3405+11])
            Pexp_ident "ref" (testsuite/tests/letrec-check/basic.ml[162,3405+8]..[162,3405+11])
          [
            <arg>
            Nolabel
              expression (testsuite/tests/letrec-check/basic.ml[162,3405+12]..[162,3405+14])
                Pexp_construct "()" (testsuite/tests/letrec-check/basic.ml[162,3405+12]..[162,3405+14])
                None
          ]
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[163,3420+0]..[163,3420+18])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[163,3420+8]..[163,3420+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[163,3420+8]..[163,3420+9])
        expression (testsuite/tests/letrec-check/basic.ml[163,3420+12]..[163,3420+18])
          Pexp_apply
          expression (testsuite/tests/letrec-check/basic.ml[163,3420+14]..[163,3420+16])
            Pexp_ident ":=" (testsuite/tests/letrec-check/basic.ml[163,3420+14]..[163,3420+16])
          [
            <arg>
            Nolabel
              expression (testsuite/tests/letrec-check/basic.ml[163,3420+12]..[163,3420+13])
                Pexp_ident "r" (testsuite/tests/letrec-check/basic.ml[163,3420+12]..[163,3420+13])
            <arg>
            Nolabel
              expression (testsuite/tests/letrec-check/basic.ml[163,3420+17]..[163,3420+18])
                Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[163,3420+17]..[163,3420+18])
          ]
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[164,3441+0]..[170,3640+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[164,3441+9]..[170,3640+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[164,3441+9]..[170,3640+2])
          Pexp_constant PConst_string ("\nval r : unit ref = {contents = ()}\nLine 2, characters 12-18:\n2 | let rec x = r := x;;\n                ^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[164,3441+11]..[170,3640+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[172,3647+0]..[176,3712+13])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[172,3647+8]..[172,3647+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[172,3647+8]..[172,3647+9])
        expression (testsuite/tests/letrec-check/basic.ml[173,3659+2]..[175,3705+6])
          Pexp_for Up
          pattern (testsuite/tests/letrec-check/basic.ml[173,3659+6]..[173,3659+7])
            Ppat_var "i" (testsuite/tests/letrec-check/basic.ml[173,3659+6]..[173,3659+7])
          expression (testsuite/tests/letrec-check/basic.ml[173,3659+10]..[173,3659+11])
            Pexp_constant PConst_int (0,None)
          expression (testsuite/tests/letrec-check/basic.ml[173,3659+15]..[173,3659+16])
            Pexp_constant PConst_int (1,None)
          expression (testsuite/tests/letrec-check/basic.ml[174,3679+4]..[174,3679+25])
            Pexp_let Nonrec
            [
              <def>
                pattern (testsuite/tests/letrec-check/basic.ml[174,3679+8]..[174,3679+9])
                  Ppat_var "z" (testsuite/tests/letrec-check/basic.ml[174,3679+8]..[174,3679+9])
                expression (testsuite/tests/letrec-check/basic.ml[174,3679+12]..[174,3679+13])
                  Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[174,3679+12]..[174,3679+13])
            ]
            expression (testsuite/tests/letrec-check/basic.ml[174,3679+17]..[174,3679+25])
              Pexp_apply
              expression (testsuite/tests/letrec-check/basic.ml[174,3679+17]..[174,3679+23])
                Pexp_ident "ignore" (testsuite/tests/letrec-check/basic.ml[174,3679+17]..[174,3679+23])
              [
                <arg>
                Nolabel
                  expression (testsuite/tests/letrec-check/basic.ml[174,3679+24]..[174,3679+25])
                    Pexp_ident "z" (testsuite/tests/letrec-check/basic.ml[174,3679+24]..[174,3679+25])
              ]
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[176,3712+4]..[176,3712+5])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[176,3712+4]..[176,3712+5])
        expression (testsuite/tests/letrec-check/basic.ml[176,3712+8]..[176,3712+13])
          Pexp_sequence
          expression (testsuite/tests/letrec-check/basic.ml[176,3712+8]..[176,3712+9])
            Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[176,3712+8]..[176,3712+9])
          expression (testsuite/tests/letrec-check/basic.ml[176,3712+11]..[176,3712+13])
            Pexp_construct "()" (testsuite/tests/letrec-check/basic.ml[176,3712+11]..[176,3712+13])
            None
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[177,3728+0]..[183,3910+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[177,3728+9]..[183,3910+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[177,3728+9]..[183,3910+2])
          Pexp_constant PConst_string ("\nLines 2-4, characters 2-6:\n2 | ..for i = 0 to 1 do\n3 |     let z = y in ignore z\n4 |   done\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[177,3728+11]..[183,3910+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[185,3917+0]..[189,3963+10])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[185,3917+8]..[185,3917+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[185,3917+8]..[185,3917+9])
        expression (testsuite/tests/letrec-check/basic.ml[186,3929+2]..[188,3956+6])
          Pexp_for Up
          pattern (testsuite/tests/letrec-check/basic.ml[186,3929+6]..[186,3929+7])
            Ppat_var "i" (testsuite/tests/letrec-check/basic.ml[186,3929+6]..[186,3929+7])
          expression (testsuite/tests/letrec-check/basic.ml[186,3929+10]..[186,3929+11])
            Pexp_constant PConst_int (0,None)
          expression (testsuite/tests/letrec-check/basic.ml[186,3929+15]..[186,3929+16])
            Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[186,3929+15]..[186,3929+16])
          expression (testsuite/tests/letrec-check/basic.ml[187,3949+4]..[187,3949+6])
            Pexp_construct "()" (testsuite/tests/letrec-check/basic.ml[187,3949+4]..[187,3949+6])
            None
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[189,3963+4]..[189,3963+5])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[189,3963+4]..[189,3963+5])
        expression (testsuite/tests/letrec-check/basic.ml[189,3963+8]..[189,3963+10])
          Pexp_constant PConst_int (10,None)
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[190,3976+0]..[196,4139+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[190,3976+9]..[196,4139+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[190,3976+9]..[196,4139+2])
          Pexp_constant PConst_string ("\nLines 2-4, characters 2-6:\n2 | ..for i = 0 to y do\n3 |     ()\n4 |   done\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[190,3976+11]..[196,4139+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[198,4146+0]..[202,4193+9])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[198,4146+8]..[198,4146+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[198,4146+8]..[198,4146+9])
        expression (testsuite/tests/letrec-check/basic.ml[199,4158+2]..[201,4186+6])
          Pexp_for Up
          pattern (testsuite/tests/letrec-check/basic.ml[199,4158+6]..[199,4158+7])
            Ppat_var "i" (testsuite/tests/letrec-check/basic.ml[199,4158+6]..[199,4158+7])
          expression (testsuite/tests/letrec-check/basic.ml[199,4158+10]..[199,4158+11])
            Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[199,4158+10]..[199,4158+11])
          expression (testsuite/tests/letrec-check/basic.ml[199,4158+15]..[199,4158+17])
            Pexp_constant PConst_int (10,None)
          expression (testsuite/tests/letrec-check/basic.ml[200,4179+4]..[200,4179+6])
            Pexp_construct "()" (testsuite/tests/letrec-check/basic.ml[200,4179+4]..[200,4179+6])
            None
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[202,4193+4]..[202,4193+5])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[202,4193+4]..[202,4193+5])
        expression (testsuite/tests/letrec-check/basic.ml[202,4193+8]..[202,4193+9])
          Pexp_constant PConst_int (0,None)
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[203,4205+0]..[209,4369+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[203,4205+9]..[209,4369+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[203,4205+9]..[209,4369+2])
          Pexp_constant PConst_string ("\nLines 2-4, characters 2-6:\n2 | ..for i = y to 10 do\n3 |     ()\n4 |   done\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[203,4205+11]..[209,4369+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[211,4376+0]..[215,4438+13])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[211,4376+8]..[211,4376+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[211,4376+8]..[211,4376+9])
        expression (testsuite/tests/letrec-check/basic.ml[212,4388+2]..[214,4431+6])
          Pexp_while
          expression (testsuite/tests/letrec-check/basic.ml[212,4388+8]..[212,4388+13])
            Pexp_construct "false" (testsuite/tests/letrec-check/basic.ml[212,4388+8]..[212,4388+13])
            None
          expression (testsuite/tests/letrec-check/basic.ml[213,4405+4]..[213,4405+25])
            Pexp_let Nonrec
            [
              <def>
                pattern (testsuite/tests/letrec-check/basic.ml[213,4405+8]..[213,4405+9])
                  Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[213,4405+8]..[213,4405+9])
                expression (testsuite/tests/letrec-check/basic.ml[213,4405+12]..[213,4405+13])
                  Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[213,4405+12]..[213,4405+13])
            ]
            expression (testsuite/tests/letrec-check/basic.ml[213,4405+17]..[213,4405+25])
              Pexp_apply
              expression (testsuite/tests/letrec-check/basic.ml[213,4405+17]..[213,4405+23])
                Pexp_ident "ignore" (testsuite/tests/letrec-check/basic.ml[213,4405+17]..[213,4405+23])
              [
                <arg>
                Nolabel
                  expression (testsuite/tests/letrec-check/basic.ml[213,4405+24]..[213,4405+25])
                    Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[213,4405+24]..[213,4405+25])
              ]
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[215,4438+4]..[215,4438+5])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[215,4438+4]..[215,4438+5])
        expression (testsuite/tests/letrec-check/basic.ml[215,4438+8]..[215,4438+13])
          Pexp_sequence
          expression (testsuite/tests/letrec-check/basic.ml[215,4438+8]..[215,4438+9])
            Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[215,4438+8]..[215,4438+9])
          expression (testsuite/tests/letrec-check/basic.ml[215,4438+11]..[215,4438+13])
            Pexp_construct "()" (testsuite/tests/letrec-check/basic.ml[215,4438+11]..[215,4438+13])
            None
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[216,4454+0]..[222,4633+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[216,4454+9]..[222,4633+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[216,4454+9]..[222,4633+2])
          Pexp_constant PConst_string ("\nLines 2-4, characters 2-6:\n2 | ..while false do\n3 |     let y = x in ignore y\n4 |   done\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[216,4454+11]..[222,4633+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[224,4640+0]..[228,4679+13])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[224,4640+8]..[224,4640+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[224,4640+8]..[224,4640+9])
        expression (testsuite/tests/letrec-check/basic.ml[225,4652+2]..[227,4672+6])
          Pexp_while
          expression (testsuite/tests/letrec-check/basic.ml[225,4652+8]..[225,4652+9])
            Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[225,4652+8]..[225,4652+9])
          expression (testsuite/tests/letrec-check/basic.ml[226,4665+4]..[226,4665+6])
            Pexp_construct "()" (testsuite/tests/letrec-check/basic.ml[226,4665+4]..[226,4665+6])
            None
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[228,4679+4]..[228,4679+5])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[228,4679+4]..[228,4679+5])
        expression (testsuite/tests/letrec-check/basic.ml[228,4679+8]..[228,4679+13])
          Pexp_construct "false" (testsuite/tests/letrec-check/basic.ml[228,4679+8]..[228,4679+13])
          None
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[229,4695+0]..[235,4851+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[229,4695+9]..[235,4851+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[229,4695+9]..[235,4851+2])
          Pexp_constant PConst_string ("\nLines 2-4, characters 2-6:\n2 | ..while y do\n3 |     ()\n4 |   done\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[229,4695+11]..[235,4851+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[237,4858+0]..[241,4916+13])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[237,4858+8]..[237,4858+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[237,4858+8]..[237,4858+9])
        expression (testsuite/tests/letrec-check/basic.ml[238,4870+2]..[240,4909+6])
          Pexp_while
          expression (testsuite/tests/letrec-check/basic.ml[238,4870+8]..[238,4870+9])
            Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[238,4870+8]..[238,4870+9])
          expression (testsuite/tests/letrec-check/basic.ml[239,4883+4]..[239,4883+25])
            Pexp_let Nonrec
            [
              <def>
                pattern (testsuite/tests/letrec-check/basic.ml[239,4883+8]..[239,4883+9])
                  Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[239,4883+8]..[239,4883+9])
                expression (testsuite/tests/letrec-check/basic.ml[239,4883+12]..[239,4883+13])
                  Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[239,4883+12]..[239,4883+13])
            ]
            expression (testsuite/tests/letrec-check/basic.ml[239,4883+17]..[239,4883+25])
              Pexp_apply
              expression (testsuite/tests/letrec-check/basic.ml[239,4883+17]..[239,4883+23])
                Pexp_ident "ignore" (testsuite/tests/letrec-check/basic.ml[239,4883+17]..[239,4883+23])
              [
                <arg>
                Nolabel
                  expression (testsuite/tests/letrec-check/basic.ml[239,4883+24]..[239,4883+25])
                    Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[239,4883+24]..[239,4883+25])
              ]
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[241,4916+4]..[241,4916+5])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[241,4916+4]..[241,4916+5])
        expression (testsuite/tests/letrec-check/basic.ml[241,4916+8]..[241,4916+13])
          Pexp_construct "false" (testsuite/tests/letrec-check/basic.ml[241,4916+8]..[241,4916+13])
          None
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[242,4932+0]..[248,5107+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[242,4932+9]..[248,5107+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[242,4932+9]..[248,5107+2])
          Pexp_constant PConst_string ("\nLines 2-4, characters 2-6:\n2 | ..while y do\n3 |     let y = x in ignore y\n4 |   done\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[242,4932+11]..[248,5107+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[252,5116+0]..[252,5116+47])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[252,5116+8]..[252,5116+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[252,5116+8]..[252,5116+9])
        expression (testsuite/tests/letrec-check/basic.ml[252,5116+12]..[252,5116+22])
          Pexp_field
          expression (testsuite/tests/letrec-check/basic.ml[252,5116+12]..[252,5116+13])
            Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[252,5116+12]..[252,5116+13])
          "contents" (testsuite/tests/letrec-check/basic.ml[252,5116+14]..[252,5116+22])
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[252,5116+27]..[252,5116+28])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[252,5116+27]..[252,5116+28])
        expression (testsuite/tests/letrec-check/basic.ml[252,5116+31]..[252,5116+47])
          Pexp_record
          [
            "contents" (testsuite/tests/letrec-check/basic.ml[252,5116+33]..[252,5116+41])
              expression (testsuite/tests/letrec-check/basic.ml[252,5116+44]..[252,5116+45])
                Pexp_constant PConst_int (3,None)
          ]
          None
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[253,5166+0]..[258,5363+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[253,5166+9]..[258,5363+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[253,5166+9]..[258,5363+2])
          Pexp_constant PConst_string ("\nLine 1, characters 12-22:\n1 | let rec x = y.contents and y = { contents = 3 };;\n                ^^^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[253,5166+11]..[258,5363+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[260,5370+0]..[260,5370+33])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[260,5370+8]..[260,5370+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[260,5370+8]..[260,5370+9])
        expression (testsuite/tests/letrec-check/basic.ml[260,5370+12]..[260,5370+20])
          Pexp_assert
          expression (testsuite/tests/letrec-check/basic.ml[260,5370+19]..[260,5370+20])
            Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[260,5370+19]..[260,5370+20])
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[260,5370+25]..[260,5370+26])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[260,5370+25]..[260,5370+26])
        expression (testsuite/tests/letrec-check/basic.ml[260,5370+29]..[260,5370+33])
          Pexp_construct "true" (testsuite/tests/letrec-check/basic.ml[260,5370+29]..[260,5370+33])
          None
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[261,5406+0]..[266,5587+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[261,5406+9]..[266,5587+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[261,5406+9]..[266,5587+2])
          Pexp_constant PConst_string ("\nLine 1, characters 12-20:\n1 | let rec x = assert y and y = true;;\n                ^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[261,5406+11]..[266,5587+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[269,5669+0]..[270,5730+35])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[269,5669+8]..[269,5669+60]) ghost
          Ppat_constraint
          pattern (testsuite/tests/letrec-check/basic.ml[269,5669+8]..[269,5669+18])
            Ppat_var "deep_cycle" (testsuite/tests/letrec-check/basic.ml[269,5669+8]..[269,5669+18])
          core_type (testsuite/tests/letrec-check/basic.ml[269,5669+21]..[269,5669+60]) ghost
            Ptyp_poly
            core_type (testsuite/tests/letrec-check/basic.ml[269,5669+21]..[269,5669+60])
              Ptyp_alias "a"
              core_type (testsuite/tests/letrec-check/basic.ml[269,5669+21]..[269,5669+54])
                Ptyp_variant closed=Closed
                [
                  Rtag "Tuple" false
                    [
                      core_type (testsuite/tests/letrec-check/basic.ml[269,5669+32]..[269,5669+53])
                        Ptyp_constr "array" (testsuite/tests/letrec-check/basic.ml[269,5669+48]..[269,5669+53])
                        [
                          core_type (testsuite/tests/letrec-check/basic.ml[269,5669+32]..[269,5669+47])
                            Ptyp_variant closed=Closed
                            [
                              Rtag "Shared" false
                                [
                                  core_type (testsuite/tests/letrec-check/basic.ml[269,5669+44]..[269,5669+46])
                                    Ptyp_var a
                                ]
                            ]
                            None
                        ]
                    ]
                ]
                None
        expression (testsuite/tests/letrec-check/basic.ml[269,5669+8]..[270,5730+35])
          Pexp_constraint
          expression (testsuite/tests/letrec-check/basic.ml[270,5730+4]..[270,5730+35])
            Pexp_variant "Tuple"
            Some
              expression (testsuite/tests/letrec-check/basic.ml[270,5730+11]..[270,5730+35])
                Pexp_array
                [
                  expression (testsuite/tests/letrec-check/basic.ml[270,5730+14]..[270,5730+32])
                    Pexp_variant "Shared"
                    Some
                      expression (testsuite/tests/letrec-check/basic.ml[270,5730+22]..[270,5730+32])
                        Pexp_ident "deep_cycle" (testsuite/tests/letrec-check/basic.ml[270,5730+22]..[270,5730+32])
                ]
          core_type (testsuite/tests/letrec-check/basic.ml[269,5669+21]..[269,5669+60])
            Ptyp_alias "a"
            core_type (testsuite/tests/letrec-check/basic.ml[269,5669+21]..[269,5669+54])
              Ptyp_variant closed=Closed
              [
                Rtag "Tuple" false
                  [
                    core_type (testsuite/tests/letrec-check/basic.ml[269,5669+32]..[269,5669+53])
                      Ptyp_constr "array" (testsuite/tests/letrec-check/basic.ml[269,5669+48]..[269,5669+53])
                      [
                        core_type (testsuite/tests/letrec-check/basic.ml[269,5669+32]..[269,5669+47])
                          Ptyp_variant closed=Closed
                          [
                            Rtag "Shared" false
                              [
                                core_type (testsuite/tests/letrec-check/basic.ml[269,5669+44]..[269,5669+46])
                                  Ptyp_var a
                              ]
                          ]
                          None
                      ]
                  ]
              ]
              None
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[271,5768+0]..[274,5872+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[271,5768+9]..[274,5872+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[271,5768+9]..[274,5872+2])
          Pexp_constant PConst_string ("\nval deep_cycle : [ `Tuple of [ `Shared of 'a ] array ] as 'a =\n  `Tuple [|`Shared <cycle>|]\n",(testsuite/tests/letrec-check/basic.ml[271,5768+11]..[274,5872+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[279,6080+0]..[279,6080+42])
    Pstr_eval
    expression (testsuite/tests/letrec-check/basic.ml[279,6080+0]..[279,6080+42])
      Pexp_let Rec
      [
        <def>
          pattern (testsuite/tests/letrec-check/basic.ml[279,6080+8]..[279,6080+10])
            Ppat_var "_x" (testsuite/tests/letrec-check/basic.ml[279,6080+8]..[279,6080+10])
          expression (testsuite/tests/letrec-check/basic.ml[279,6080+13]..[279,6080+36])
            Pexp_let Nonrec
            [
              <def>
                pattern (testsuite/tests/letrec-check/basic.ml[279,6080+17]..[279,6080+18])
                  Ppat_any
                expression (testsuite/tests/letrec-check/basic.ml[279,6080+21]..[279,6080+30])
                  Pexp_array
                  [
                    expression (testsuite/tests/letrec-check/basic.ml[279,6080+24]..[279,6080+27])
                      Pexp_constant PConst_float (1.0,None)
                  ]
            ]
            expression (testsuite/tests/letrec-check/basic.ml[279,6080+34]..[279,6080+36])
              Pexp_constant PConst_float (1.,None)
      ]
      expression (testsuite/tests/letrec-check/basic.ml[279,6080+40]..[279,6080+42])
        Pexp_construct "()" (testsuite/tests/letrec-check/basic.ml[279,6080+40]..[279,6080+42])
        None
  structure_item (testsuite/tests/letrec-check/basic.ml[280,6125+0]..[282,6151+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[280,6125+9]..[282,6151+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[280,6125+9]..[282,6151+2])
          Pexp_constant PConst_string ("\n- : unit = ()\n",(testsuite/tests/letrec-check/basic.ml[280,6125+11]..[282,6151+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[286,6288+0]..[293,6421+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[286,6288+4]..[286,6288+5])
          Ppat_any
        expression (testsuite/tests/letrec-check/basic.ml[287,6296+2]..[293,6421+11])
          Pexp_letmodule "Stdlib" (testsuite/tests/letrec-check/basic.ml[287,6296+13]..[287,6296+19])
          module_expr (testsuite/tests/letrec-check/basic.ml[288,6318+2]..[290,6356+5])
            Pmod_structure
            [
              structure_item (testsuite/tests/letrec-check/basic.ml[289,6327+4]..[289,6327+28])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (testsuite/tests/letrec-check/basic.ml[289,6327+8]..[289,6327+11])
                      Ppat_var "ref" (testsuite/tests/letrec-check/basic.ml[289,6327+8]..[289,6327+11])
                    expression (testsuite/tests/letrec-check/basic.ml[289,6327+12]..[289,6327+28]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (testsuite/tests/letrec-check/basic.ml[289,6327+12]..[289,6327+13])
                        Ppat_any
                      expression (testsuite/tests/letrec-check/basic.ml[289,6327+16]..[289,6327+28])
                        Pexp_assert
                        expression (testsuite/tests/letrec-check/basic.ml[289,6327+23]..[289,6327+28])
                          Pexp_construct "false" (testsuite/tests/letrec-check/basic.ml[289,6327+23]..[289,6327+28])
                          None
                ]
            ]
          expression (testsuite/tests/letrec-check/basic.ml[291,6365+2]..[293,6421+11])
            Pexp_let Rec
            [
              <def>
                pattern (testsuite/tests/letrec-check/basic.ml[291,6365+10]..[291,6365+11])
                  Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[291,6365+10]..[291,6365+11])
                expression (testsuite/tests/letrec-check/basic.ml[291,6365+14]..[291,6365+26])
                  Pexp_apply
                  expression (testsuite/tests/letrec-check/basic.ml[291,6365+14]..[291,6365+24])
                    Pexp_ident "Stdlib.ref" (testsuite/tests/letrec-check/basic.ml[291,6365+14]..[291,6365+24])
                  [
                    <arg>
                    Nolabel
                      expression (testsuite/tests/letrec-check/basic.ml[291,6365+25]..[291,6365+26])
                        Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[291,6365+25]..[291,6365+26])
                  ]
              <def>
                pattern (testsuite/tests/letrec-check/basic.ml[292,6392+6]..[292,6392+7])
                  Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[292,6392+6]..[292,6392+7])
                expression (testsuite/tests/letrec-check/basic.ml[292,6392+10]..[292,6392+28])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (testsuite/tests/letrec-check/basic.ml[292,6392+14]..[292,6392+16])
                    Ppat_construct "()" (testsuite/tests/letrec-check/basic.ml[292,6392+14]..[292,6392+16])
                    None
                  expression (testsuite/tests/letrec-check/basic.ml[292,6392+20]..[292,6392+28])
                    Pexp_apply
                    expression (testsuite/tests/letrec-check/basic.ml[292,6392+20]..[292,6392+26])
                      Pexp_ident "ignore" (testsuite/tests/letrec-check/basic.ml[292,6392+20]..[292,6392+26])
                    [
                      <arg>
                      Nolabel
                        expression (testsuite/tests/letrec-check/basic.ml[292,6392+27]..[292,6392+28])
                          Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[292,6392+27]..[292,6392+28])
                    ]
            ]
            expression (testsuite/tests/letrec-check/basic.ml[293,6421+5]..[293,6421+11])
              Pexp_tuple
              [
                expression (testsuite/tests/letrec-check/basic.ml[293,6421+6]..[293,6421+7])
                  Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[293,6421+6]..[293,6421+7])
                expression (testsuite/tests/letrec-check/basic.ml[293,6421+9]..[293,6421+10])
                  Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[293,6421+9]..[293,6421+10])
              ]
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[295,6436+0]..[300,6614+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[295,6436+9]..[300,6614+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[295,6436+9]..[300,6614+2])
          Pexp_constant PConst_string ("\nLine 6, characters 14-26:\n6 |   let rec x = Stdlib.ref y\n                  ^^^^^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[295,6436+11]..[300,6614+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[304,6715+0]..[310,6868+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[304,6715+4]..[304,6715+7])
          Ppat_var "foo" (testsuite/tests/letrec-check/basic.ml[304,6715+4]..[304,6715+7])
        expression (testsuite/tests/letrec-check/basic.ml[304,6715+8]..[310,6868+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (testsuite/tests/letrec-check/basic.ml[304,6715+8]..[304,6715+9])
            Ppat_var "p" (testsuite/tests/letrec-check/basic.ml[304,6715+8]..[304,6715+9])
          expression (testsuite/tests/letrec-check/basic.ml[304,6715+10]..[310,6868+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (testsuite/tests/letrec-check/basic.ml[304,6715+10]..[304,6715+11])
              Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[304,6715+10]..[304,6715+11])
            expression (testsuite/tests/letrec-check/basic.ml[305,6729+2]..[310,6868+8])
              Pexp_let Rec
              [
                <def>
                  pattern (testsuite/tests/letrec-check/basic.ml[305,6729+10]..[305,6729+11])
                    Ppat_var "f" (testsuite/tests/letrec-check/basic.ml[305,6729+10]..[305,6729+11])
                  expression (testsuite/tests/letrec-check/basic.ml[306,6743+4]..[306,6743+52])
                    Pexp_ifthenelse
                    expression (testsuite/tests/letrec-check/basic.ml[306,6743+7]..[306,6743+8])
                      Pexp_ident "p" (testsuite/tests/letrec-check/basic.ml[306,6743+7]..[306,6743+8])
                    expression (testsuite/tests/letrec-check/basic.ml[306,6743+14]..[306,6743+32])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (testsuite/tests/letrec-check/basic.ml[306,6743+19]..[306,6743+20])
                        Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[306,6743+19]..[306,6743+20])
                      expression (testsuite/tests/letrec-check/basic.ml[306,6743+24]..[306,6743+31])
                        Pexp_apply
                        expression (testsuite/tests/letrec-check/basic.ml[306,6743+26]..[306,6743+27])
                          Pexp_ident "+" (testsuite/tests/letrec-check/basic.ml[306,6743+26]..[306,6743+27])
                        [
                          <arg>
                          Nolabel
                            expression (testsuite/tests/letrec-check/basic.ml[306,6743+24]..[306,6743+25])
                              Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[306,6743+24]..[306,6743+25])
                          <arg>
                          Nolabel
                            expression (testsuite/tests/letrec-check/basic.ml[306,6743+28]..[306,6743+31])
                              Pexp_apply
                              expression (testsuite/tests/letrec-check/basic.ml[306,6743+28]..[306,6743+29])
                                Pexp_ident "g" (testsuite/tests/letrec-check/basic.ml[306,6743+28]..[306,6743+29])
                              [
                                <arg>
                                Nolabel
                                  expression (testsuite/tests/letrec-check/basic.ml[306,6743+30]..[306,6743+31])
                                    Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[306,6743+30]..[306,6743+31])
                              ]
                        ]
                    Some
                      expression (testsuite/tests/letrec-check/basic.ml[306,6743+38]..[306,6743+52])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (testsuite/tests/letrec-check/basic.ml[306,6743+43]..[306,6743+44])
                          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[306,6743+43]..[306,6743+44])
                        expression (testsuite/tests/letrec-check/basic.ml[306,6743+48]..[306,6743+51])
                          Pexp_apply
                          expression (testsuite/tests/letrec-check/basic.ml[306,6743+48]..[306,6743+49])
                            Pexp_ident "g" (testsuite/tests/letrec-check/basic.ml[306,6743+48]..[306,6743+49])
                          [
                            <arg>
                            Nolabel
                              expression (testsuite/tests/letrec-check/basic.ml[306,6743+50]..[306,6743+51])
                                Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[306,6743+50]..[306,6743+51])
                          ]
                <def>
                  pattern (testsuite/tests/letrec-check/basic.ml[307,6796+6]..[307,6796+7])
                    Ppat_var "g" (testsuite/tests/letrec-check/basic.ml[307,6796+6]..[307,6796+7])
                  expression (testsuite/tests/letrec-check/basic.ml[308,6806+4]..[308,6806+56])
                    Pexp_ifthenelse
                    expression (testsuite/tests/letrec-check/basic.ml[308,6806+7]..[308,6806+12])
                      Pexp_apply
                      expression (testsuite/tests/letrec-check/basic.ml[308,6806+7]..[308,6806+10])
                        Pexp_ident "not" (testsuite/tests/letrec-check/basic.ml[308,6806+7]..[308,6806+10])
                      [
                        <arg>
                        Nolabel
                          expression (testsuite/tests/letrec-check/basic.ml[308,6806+11]..[308,6806+12])
                            Pexp_ident "p" (testsuite/tests/letrec-check/basic.ml[308,6806+11]..[308,6806+12])
                      ]
                    expression (testsuite/tests/letrec-check/basic.ml[308,6806+18]..[308,6806+36])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (testsuite/tests/letrec-check/basic.ml[308,6806+23]..[308,6806+24])
                        Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[308,6806+23]..[308,6806+24])
                      expression (testsuite/tests/letrec-check/basic.ml[308,6806+28]..[308,6806+35])
                        Pexp_apply
                        expression (testsuite/tests/letrec-check/basic.ml[308,6806+30]..[308,6806+31])
                          Pexp_ident "-" (testsuite/tests/letrec-check/basic.ml[308,6806+30]..[308,6806+31])
                        [
                          <arg>
                          Nolabel
                            expression (testsuite/tests/letrec-check/basic.ml[308,6806+28]..[308,6806+29])
                              Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[308,6806+28]..[308,6806+29])
                          <arg>
                          Nolabel
                            expression (testsuite/tests/letrec-check/basic.ml[308,6806+32]..[308,6806+35])
                              Pexp_apply
                              expression (testsuite/tests/letrec-check/basic.ml[308,6806+32]..[308,6806+33])
                                Pexp_ident "f" (testsuite/tests/letrec-check/basic.ml[308,6806+32]..[308,6806+33])
                              [
                                <arg>
                                Nolabel
                                  expression (testsuite/tests/letrec-check/basic.ml[308,6806+34]..[308,6806+35])
                                    Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[308,6806+34]..[308,6806+35])
                              ]
                        ]
                    Some
                      expression (testsuite/tests/letrec-check/basic.ml[308,6806+42]..[308,6806+56])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (testsuite/tests/letrec-check/basic.ml[308,6806+47]..[308,6806+48])
                          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[308,6806+47]..[308,6806+48])
                        expression (testsuite/tests/letrec-check/basic.ml[308,6806+52]..[308,6806+55])
                          Pexp_apply
                          expression (testsuite/tests/letrec-check/basic.ml[308,6806+52]..[308,6806+53])
                            Pexp_ident "f" (testsuite/tests/letrec-check/basic.ml[308,6806+52]..[308,6806+53])
                          [
                            <arg>
                            Nolabel
                              expression (testsuite/tests/letrec-check/basic.ml[308,6806+54]..[308,6806+55])
                                Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[308,6806+54]..[308,6806+55])
                          ]
              ]
              expression (testsuite/tests/letrec-check/basic.ml[310,6868+2]..[310,6868+8])
                Pexp_tuple
                [
                  expression (testsuite/tests/letrec-check/basic.ml[310,6868+3]..[310,6868+4])
                    Pexp_ident "f" (testsuite/tests/letrec-check/basic.ml[310,6868+3]..[310,6868+4])
                  expression (testsuite/tests/letrec-check/basic.ml[310,6868+6]..[310,6868+7])
                    Pexp_ident "g" (testsuite/tests/letrec-check/basic.ml[310,6868+6]..[310,6868+7])
                ]
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[312,6880+0]..[317,7109+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[312,6880+9]..[317,7109+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[312,6880+9]..[317,7109+2])
          Pexp_constant PConst_string ("\nLine 3, characters 4-52:\n3 |     if p then (fun y -> x + g y) else (fun y -> g y)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[312,6880+11]..[317,7109+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[319,7116+0]..[324,7235+15])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[319,7116+8]..[319,7116+9])
          Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[319,7116+8]..[319,7116+9])
        expression (testsuite/tests/letrec-check/basic.ml[320,7128+2]..[322,7183+30])
          Pexp_match
          expression (testsuite/tests/letrec-check/basic.ml[320,7128+8]..[320,7128+36])
            Pexp_let Nonrec
            [
              <def>
                pattern (testsuite/tests/letrec-check/basic.ml[320,7128+12]..[320,7128+13])
                  Ppat_any
                expression (testsuite/tests/letrec-check/basic.ml[320,7128+16]..[320,7128+17])
                  Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[320,7128+16]..[320,7128+17])
            ]
            expression (testsuite/tests/letrec-check/basic.ml[320,7128+21]..[320,7128+36])
              Pexp_apply
              expression (testsuite/tests/letrec-check/basic.ml[320,7128+21]..[320,7128+26])
                Pexp_ident "raise" (testsuite/tests/letrec-check/basic.ml[320,7128+21]..[320,7128+26])
              [
                <arg>
                Nolabel
                  expression (testsuite/tests/letrec-check/basic.ml[320,7128+27]..[320,7128+36])
                    Pexp_construct "Not_found" (testsuite/tests/letrec-check/basic.ml[320,7128+27]..[320,7128+36])
                    None
              ]
          [
            <case>
              pattern (testsuite/tests/letrec-check/basic.ml[321,7170+4]..[321,7170+5])
                Ppat_any
              expression (testsuite/tests/letrec-check/basic.ml[321,7170+9]..[321,7170+12])
                Pexp_constant PConst_string("x",(testsuite/tests/letrec-check/basic.ml[321,7170+10]..[321,7170+11]),None)
            <case>
              pattern (testsuite/tests/letrec-check/basic.ml[322,7183+4]..[322,7183+23])
                Ppat_exception
                pattern (testsuite/tests/letrec-check/basic.ml[322,7183+14]..[322,7183+23])
                  Ppat_construct "Not_found" (testsuite/tests/letrec-check/basic.ml[322,7183+14]..[322,7183+23])
                  None
              expression (testsuite/tests/letrec-check/basic.ml[322,7183+27]..[322,7183+30])
                Pexp_constant PConst_string("z",(testsuite/tests/letrec-check/basic.ml[322,7183+28]..[322,7183+29]),None)
          ]
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[323,7214+4]..[323,7214+5])
          Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[323,7214+4]..[323,7214+5])
        expression (testsuite/tests/letrec-check/basic.ml[323,7214+8]..[324,7235+15])
          Pexp_match
          expression (testsuite/tests/letrec-check/basic.ml[323,7214+14]..[323,7214+15])
            Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[323,7214+14]..[323,7214+15])
          [
            <case>
              pattern (testsuite/tests/letrec-check/basic.ml[324,7235+2]..[324,7235+3])
                Ppat_var "z" (testsuite/tests/letrec-check/basic.ml[324,7235+2]..[324,7235+3])
              expression (testsuite/tests/letrec-check/basic.ml[324,7235+7]..[324,7235+15])
                Pexp_tuple
                [
                  expression (testsuite/tests/letrec-check/basic.ml[324,7235+8]..[324,7235+11])
                    Pexp_constant PConst_string("y",(testsuite/tests/letrec-check/basic.ml[324,7235+9]..[324,7235+10]),None)
                  expression (testsuite/tests/letrec-check/basic.ml[324,7235+13]..[324,7235+14])
                    Pexp_ident "z" (testsuite/tests/letrec-check/basic.ml[324,7235+13]..[324,7235+14])
                ]
          ]
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[325,7253+0]..[331,7469+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[325,7253+9]..[331,7469+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[325,7253+9]..[331,7469+2])
          Pexp_constant PConst_string ("\nLines 2-4, characters 2-30:\n2 | ..match let _ = y in raise Not_found with\n3 |     _ -> \"x\"\n4 |   | exception Not_found -> \"z\"\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[325,7253+11]..[331,7469+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[339,7656+0]..[350,7987+25])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[339,7656+8]..[339,7656+13])
          Ppat_var "wrong" (testsuite/tests/letrec-check/basic.ml[339,7656+8]..[339,7656+13])
        expression (testsuite/tests/letrec-check/basic.ml[348,7947+2]..[350,7987+25])
          Pexp_let Rec
          [
            <def>
              pattern (testsuite/tests/letrec-check/basic.ml[348,7947+10]..[348,7947+11])
                Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[348,7947+10]..[348,7947+11])
              expression (testsuite/tests/letrec-check/basic.ml[348,7947+14]..[348,7947+19])
                Pexp_apply
                expression (testsuite/tests/letrec-check/basic.ml[348,7947+14]..[348,7947+17])
                  Pexp_ident "ref" (testsuite/tests/letrec-check/basic.ml[348,7947+14]..[348,7947+17])
                [
                  <arg>
                  Nolabel
                    expression (testsuite/tests/letrec-check/basic.ml[348,7947+18]..[348,7947+19])
                      Pexp_ident "y" (testsuite/tests/letrec-check/basic.ml[348,7947+18]..[348,7947+19])
                ]
            <def>
              pattern (testsuite/tests/letrec-check/basic.ml[349,7967+6]..[349,7967+7])
                Ppat_var "y" (testsuite/tests/letrec-check/basic.ml[349,7967+6]..[349,7967+7])
              expression (testsuite/tests/letrec-check/basic.ml[349,7967+10]..[349,7967+19])
                Pexp_apply
                expression (testsuite/tests/letrec-check/basic.ml[349,7967+10]..[349,7967+13])
                  Pexp_ident "ref" (testsuite/tests/letrec-check/basic.ml[349,7967+10]..[349,7967+13])
                [
                  <arg>
                  Nolabel
                    expression (testsuite/tests/letrec-check/basic.ml[349,7967+14]..[349,7967+19])
                      Pexp_ident "wrong" (testsuite/tests/letrec-check/basic.ml[349,7967+14]..[349,7967+19])
                ]
          ]
          expression (testsuite/tests/letrec-check/basic.ml[350,7987+5]..[350,7987+25])
            Pexp_apply
            expression (testsuite/tests/letrec-check/basic.ml[350,7987+5]..[350,7987+8])
              Pexp_ident "ref" (testsuite/tests/letrec-check/basic.ml[350,7987+5]..[350,7987+8])
            [
              <arg>
              Nolabel
                expression (testsuite/tests/letrec-check/basic.ml[350,7987+9]..[350,7987+25])
                  Pexp_apply
                  expression (testsuite/tests/letrec-check/basic.ml[350,7987+16]..[350,7987+17])
                    Pexp_ident "^" (testsuite/tests/letrec-check/basic.ml[350,7987+16]..[350,7987+17])
                  [
                    <arg>
                    Nolabel
                      expression (testsuite/tests/letrec-check/basic.ml[350,7987+10]..[350,7987+15])
                        Pexp_constant PConst_string("foo",(testsuite/tests/letrec-check/basic.ml[350,7987+11]..[350,7987+14]),None)
                    <arg>
                    Nolabel
                      expression (testsuite/tests/letrec-check/basic.ml[350,7987+18]..[350,7987+24])
                        Pexp_apply
                        expression (testsuite/tests/letrec-check/basic.ml[350,7987+18]..[350,7987+19])
                          Pexp_ident "!" (testsuite/tests/letrec-check/basic.ml[350,7987+18]..[350,7987+19])
                        [
                          <arg>
                          Nolabel
                            expression (testsuite/tests/letrec-check/basic.ml[350,7987+20]..[350,7987+24])
                              Pexp_apply
                              expression (testsuite/tests/letrec-check/basic.ml[350,7987+20]..[350,7987+21])
                                Pexp_ident "!" (testsuite/tests/letrec-check/basic.ml[350,7987+20]..[350,7987+21])
                              [
                                <arg>
                                Nolabel
                                  expression (testsuite/tests/letrec-check/basic.ml[350,7987+22]..[350,7987+24])
                                    Pexp_apply
                                    expression (testsuite/tests/letrec-check/basic.ml[350,7987+22]..[350,7987+23])
                                      Pexp_ident "!" (testsuite/tests/letrec-check/basic.ml[350,7987+22]..[350,7987+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (testsuite/tests/letrec-check/basic.ml[350,7987+23]..[350,7987+24])
                                          Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[350,7987+23]..[350,7987+24])
                                    ]
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[351,8015+0]..[357,8218+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[351,8015+9]..[357,8218+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[351,8015+9]..[357,8218+2])
          Pexp_constant PConst_string ("\nLines 10-12, characters 2-25:\n10 | ..let rec x = ref y\n11 |   and y = ref wrong\n12 |   in ref (\"foo\" ^ ! ! !x)..\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/basic.ml[351,8015+11]..[357,8218+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[360,8289+0]..[363,8351+19])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/basic.ml[360,8289+8]..[360,8289+12])
          Ppat_var "okay" (testsuite/tests/letrec-check/basic.ml[360,8289+8]..[360,8289+12])
        expression (testsuite/tests/letrec-check/basic.ml[361,8304+2]..[363,8351+19])
          Pexp_let Rec
          [
            <def>
              pattern (testsuite/tests/letrec-check/basic.ml[361,8304+10]..[361,8304+11])
                Ppat_var "x" (testsuite/tests/letrec-check/basic.ml[361,8304+10]..[361,8304+11])
              expression (testsuite/tests/letrec-check/basic.ml[361,8304+14]..[361,8304+23])
                Pexp_apply
                expression (testsuite/tests/letrec-check/basic.ml[361,8304+14]..[361,8304+17])
                  Pexp_ident "ref" (testsuite/tests/letrec-check/basic.ml[361,8304+14]..[361,8304+17])
                [
                  <arg>
                  Nolabel
                    expression (testsuite/tests/letrec-check/basic.ml[361,8304+18]..[361,8304+23])
                      Pexp_constant PConst_string("bar",(testsuite/tests/letrec-check/basic.ml[361,8304+19]..[361,8304+22]),None)
                ]
            <def>
              pattern (testsuite/tests/letrec-check/basic.ml[362,8328+6]..[362,8328+8])
                Ppat_var "_y" (testsuite/tests/letrec-check/basic.ml[362,8328+6]..[362,8328+8])
              expression (testsuite/tests/letrec-check/basic.ml[362,8328+11]..[362,8328+19])
                Pexp_apply
                expression (testsuite/tests/letrec-check/basic.ml[362,8328+11]..[362,8328+14])
                  Pexp_ident "ref" (testsuite/tests/letrec-check/basic.ml[362,8328+11]..[362,8328+14])
                [
                  <arg>
                  Nolabel
                    expression (testsuite/tests/letrec-check/basic.ml[362,8328+15]..[362,8328+19])
                      Pexp_ident "okay" (testsuite/tests/letrec-check/basic.ml[362,8328+15]..[362,8328+19])
                ]
          ]
          expression (testsuite/tests/letrec-check/basic.ml[363,8351+2]..[363,8351+19])
            Pexp_apply
            expression (testsuite/tests/letrec-check/basic.ml[363,8351+2]..[363,8351+5])
              Pexp_ident "ref" (testsuite/tests/letrec-check/basic.ml[363,8351+2]..[363,8351+5])
            [
              <arg>
              Nolabel
                expression (testsuite/tests/letrec-check/basic.ml[363,8351+6]..[363,8351+19])
                  Pexp_apply
                  expression (testsuite/tests/letrec-check/basic.ml[363,8351+13]..[363,8351+14])
                    Pexp_ident "^" (testsuite/tests/letrec-check/basic.ml[363,8351+13]..[363,8351+14])
                  [
                    <arg>
                    Nolabel
                      expression (testsuite/tests/letrec-check/basic.ml[363,8351+7]..[363,8351+12])
                        Pexp_constant PConst_string("foo",(testsuite/tests/letrec-check/basic.ml[363,8351+8]..[363,8351+11]),None)
                    <arg>
                    Nolabel
                      expression (testsuite/tests/letrec-check/basic.ml[363,8351+15]..[363,8351+18])
                        Pexp_apply
                        expression (testsuite/tests/letrec-check/basic.ml[363,8351+15]..[363,8351+16])
                          Pexp_ident "!" (testsuite/tests/letrec-check/basic.ml[363,8351+15]..[363,8351+16])
                        [
                          <arg>
                          Nolabel
                            expression (testsuite/tests/letrec-check/basic.ml[363,8351+17]..[363,8351+18])
                              Pexp_ident "x" (testsuite/tests/letrec-check/basic.ml[363,8351+17]..[363,8351+18])
                        ]
                  ]
            ]
    ]
  structure_item (testsuite/tests/letrec-check/basic.ml[364,8373+0]..[366,8431+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/basic.ml[364,8373+9]..[366,8431+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/basic.ml[364,8373+9]..[366,8431+2])
          Pexp_constant PConst_string ("\nval okay : string ref = {contents = \"foobar\"}\n",(testsuite/tests/letrec-check/basic.ml[364,8373+11]..[366,8431+0]),Some "")
    ]
]

