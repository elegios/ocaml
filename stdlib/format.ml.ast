[
  structure_item (stdlib/format.ml[23,1297+0]..[23,1297+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[23,1297+4]..[23,1297+6])
          Ppat_var "id" (stdlib/format.ml[23,1297+4]..[23,1297+6])
        expression (stdlib/format.ml[23,1297+7]..[23,1297+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[23,1297+7]..[23,1297+8])
            Ppat_var "x" (stdlib/format.ml[23,1297+7]..[23,1297+8])
          expression (stdlib/format.ml[23,1297+11]..[23,1297+12])
            Pexp_ident "x" (stdlib/format.ml[23,1297+11]..[23,1297+12])
    ]
  structure_item (stdlib/format.ml[27,1397+0]..[43,1659+3])
    Pstr_module
    "Size" (stdlib/format.ml[27,1397+7]..[27,1397+11])
      module_expr (stdlib/format.ml[27,1397+12]..[43,1659+3])
        Pmod_constraint
        module_expr (stdlib/format.ml[35,1533+7]..[43,1659+3])
          Pmod_structure
          [
            structure_item (stdlib/format.ml[36,1547+2]..[36,1547+14])
              Pstr_type Rec
              [
                type_declaration "t" (stdlib/format.ml[36,1547+7]..[36,1547+8]) (stdlib/format.ml[36,1547+2]..[36,1547+14])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (stdlib/format.ml[36,1547+11]..[36,1547+14])
                        Ptyp_constr "int" (stdlib/format.ml[36,1547+11]..[36,1547+14])
                        []
              ]
            structure_item (stdlib/format.ml[38,1563+2]..[38,1563+17])
              Pstr_value Nonrec
              [
                <def>
                  pattern (stdlib/format.ml[38,1563+6]..[38,1563+12])
                    Ppat_var "to_int" (stdlib/format.ml[38,1563+6]..[38,1563+12])
                  expression (stdlib/format.ml[38,1563+15]..[38,1563+17])
                    Pexp_ident "id" (stdlib/format.ml[38,1563+15]..[38,1563+17])
              ]
            structure_item (stdlib/format.ml[39,1581+2]..[39,1581+17])
              Pstr_value Nonrec
              [
                <def>
                  pattern (stdlib/format.ml[39,1581+6]..[39,1581+12])
                    Ppat_var "of_int" (stdlib/format.ml[39,1581+6]..[39,1581+12])
                  expression (stdlib/format.ml[39,1581+15]..[39,1581+17])
                    Pexp_ident "id" (stdlib/format.ml[39,1581+15]..[39,1581+17])
              ]
            structure_item (stdlib/format.ml[40,1599+2]..[40,1599+14])
              Pstr_value Nonrec
              [
                <def>
                  pattern (stdlib/format.ml[40,1599+6]..[40,1599+10])
                    Ppat_var "zero" (stdlib/format.ml[40,1599+6]..[40,1599+10])
                  expression (stdlib/format.ml[40,1599+13]..[40,1599+14])
                    Pexp_constant PConst_int (0,None)
              ]
            structure_item (stdlib/format.ml[41,1614+2]..[41,1614+18])
              Pstr_value Nonrec
              [
                <def>
                  pattern (stdlib/format.ml[41,1614+6]..[41,1614+13])
                    Ppat_var "unknown" (stdlib/format.ml[41,1614+6]..[41,1614+13])
                  expression (stdlib/format.ml[41,1614+16]..[41,1614+18])
                    Pexp_constant PConst_int (-1,None)
              ]
            structure_item (stdlib/format.ml[42,1633+2]..[42,1633+25])
              Pstr_value Nonrec
              [
                <def>
                  pattern (stdlib/format.ml[42,1633+6]..[42,1633+14])
                    Ppat_var "is_known" (stdlib/format.ml[42,1633+6]..[42,1633+14])
                  expression (stdlib/format.ml[42,1633+15]..[42,1633+25]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (stdlib/format.ml[42,1633+15]..[42,1633+16])
                      Ppat_var "n" (stdlib/format.ml[42,1633+15]..[42,1633+16])
                    expression (stdlib/format.ml[42,1633+19]..[42,1633+25])
                      Pexp_apply
                      expression (stdlib/format.ml[42,1633+21]..[42,1633+23])
                        Pexp_ident ">=" (stdlib/format.ml[42,1633+21]..[42,1633+23])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[42,1633+19]..[42,1633+20])
                            Pexp_ident "n" (stdlib/format.ml[42,1633+19]..[42,1633+20])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[42,1633+24]..[42,1633+25])
                            Pexp_constant PConst_int (0,None)
                      ]
              ]
          ]
        module_type (stdlib/format.ml[27,1397+14]..[35,1533+3])
          Pmty_signature
          [
            signature_item (stdlib/format.ml[28,1415+2]..[28,1415+8])
              Psig_type Rec
              [
                type_declaration "t" (stdlib/format.ml[28,1415+7]..[28,1415+8]) (stdlib/format.ml[28,1415+2]..[28,1415+8])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (stdlib/format.ml[30,1425+2]..[30,1425+23])
              Psig_value
              value_description "to_int" (stdlib/format.ml[30,1425+6]..[30,1425+12]) (stdlib/format.ml[30,1425+2]..[30,1425+23])
                core_type (stdlib/format.ml[30,1425+15]..[30,1425+23])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[30,1425+15]..[30,1425+16])
                    Ptyp_constr "t" (stdlib/format.ml[30,1425+15]..[30,1425+16])
                    []
                  core_type (stdlib/format.ml[30,1425+20]..[30,1425+23])
                    Ptyp_constr "int" (stdlib/format.ml[30,1425+20]..[30,1425+23])
                    []
                []
            signature_item (stdlib/format.ml[31,1449+2]..[31,1449+23])
              Psig_value
              value_description "of_int" (stdlib/format.ml[31,1449+6]..[31,1449+12]) (stdlib/format.ml[31,1449+2]..[31,1449+23])
                core_type (stdlib/format.ml[31,1449+15]..[31,1449+23])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[31,1449+15]..[31,1449+18])
                    Ptyp_constr "int" (stdlib/format.ml[31,1449+15]..[31,1449+18])
                    []
                  core_type (stdlib/format.ml[31,1449+22]..[31,1449+23])
                    Ptyp_constr "t" (stdlib/format.ml[31,1449+22]..[31,1449+23])
                    []
                []
            signature_item (stdlib/format.ml[32,1473+2]..[32,1473+14])
              Psig_value
              value_description "zero" (stdlib/format.ml[32,1473+6]..[32,1473+10]) (stdlib/format.ml[32,1473+2]..[32,1473+14])
                core_type (stdlib/format.ml[32,1473+13]..[32,1473+14])
                  Ptyp_constr "t" (stdlib/format.ml[32,1473+13]..[32,1473+14])
                  []
                []
            signature_item (stdlib/format.ml[33,1488+2]..[33,1488+17])
              Psig_value
              value_description "unknown" (stdlib/format.ml[33,1488+6]..[33,1488+13]) (stdlib/format.ml[33,1488+2]..[33,1488+17])
                core_type (stdlib/format.ml[33,1488+16]..[33,1488+17])
                  Ptyp_constr "t" (stdlib/format.ml[33,1488+16]..[33,1488+17])
                  []
                []
            signature_item (stdlib/format.ml[34,1506+2]..[34,1506+26])
              Psig_value
              value_description "is_known" (stdlib/format.ml[34,1506+6]..[34,1506+14]) (stdlib/format.ml[34,1506+2]..[34,1506+26])
                core_type (stdlib/format.ml[34,1506+17]..[34,1506+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[34,1506+17]..[34,1506+18])
                    Ptyp_constr "t" (stdlib/format.ml[34,1506+17]..[34,1506+18])
                    []
                  core_type (stdlib/format.ml[34,1506+22]..[34,1506+26])
                    Ptyp_constr "bool" (stdlib/format.ml[34,1506+22]..[34,1506+26])
                    []
                []
          ]
  structure_item (stdlib/format.ml[61,2366+0]..[62,2420+63])
    Pstr_type Rec
    [
      type_declaration "box_type" (stdlib/format.ml[61,2366+5]..[61,2366+13]) (stdlib/format.ml[61,2366+0]..[62,2420+63])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (stdlib/format.ml[62,2420+2]..[62,2420+11])
                "Pp_hbox" (stdlib/format.ml[62,2420+4]..[62,2420+11])
                []
                None
              (stdlib/format.ml[62,2420+12]..[62,2420+21])
                "Pp_vbox" (stdlib/format.ml[62,2420+14]..[62,2420+21])
                []
                None
              (stdlib/format.ml[62,2420+22]..[62,2420+32])
                "Pp_hvbox" (stdlib/format.ml[62,2420+24]..[62,2420+32])
                []
                None
              (stdlib/format.ml[62,2420+33]..[62,2420+44])
                "Pp_hovbox" (stdlib/format.ml[62,2420+35]..[62,2420+44])
                []
                None
              (stdlib/format.ml[62,2420+45]..[62,2420+53])
                "Pp_box" (stdlib/format.ml[62,2420+47]..[62,2420+53])
                []
                None
              (stdlib/format.ml[62,2420+54]..[62,2420+63])
                "Pp_fits" (stdlib/format.ml[62,2420+56]..[62,2420+63])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/format.ml[61,2366+16]..[61,2366+51])
              Ptyp_constr "CamlinternalFormatBasics.block_type" (stdlib/format.ml[61,2366+16]..[61,2366+51])
              []
    ]
  structure_item (stdlib/format.ml[68,2633+0]..[88,3561+34])
    Pstr_type Rec
    [
      type_declaration "pp_token" (stdlib/format.ml[68,2633+5]..[68,2633+13]) (stdlib/format.ml[68,2633+0]..[84,3473+16])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (stdlib/format.ml[69,2649+2]..[69,2649+21])
                "Pp_text" (stdlib/format.ml[69,2649+4]..[69,2649+11])
                [
                  core_type (stdlib/format.ml[69,2649+15]..[69,2649+21])
                    Ptyp_constr "string" (stdlib/format.ml[69,2649+15]..[69,2649+21])
                    []
                ]
                None
              (stdlib/format.ml[70,2698+2]..[73,2868+5])
                "Pp_break" (stdlib/format.ml[70,2698+4]..[70,2698+12])
                [
                  (stdlib/format.ml[71,2750+6]..[71,2750+34])
                    Immutable
                    "fits" (stdlib/format.ml[71,2750+6]..[71,2750+10])                    core_type (stdlib/format.ml[71,2750+12]..[71,2750+33])
                      Ptyp_tuple
                      [
                        core_type (stdlib/format.ml[71,2750+12]..[71,2750+18])
                          Ptyp_constr "string" (stdlib/format.ml[71,2750+12]..[71,2750+18])
                          []
                        core_type (stdlib/format.ml[71,2750+21]..[71,2750+24])
                          Ptyp_constr "int" (stdlib/format.ml[71,2750+21]..[71,2750+24])
                          []
                        core_type (stdlib/format.ml[71,2750+27]..[71,2750+33])
                          Ptyp_constr "string" (stdlib/format.ml[71,2750+27]..[71,2750+33])
                          []
                      ]
                  (stdlib/format.ml[72,2811+6]..[72,2811+36])
                    Immutable
                    "breaks" (stdlib/format.ml[72,2811+6]..[72,2811+12])                    core_type (stdlib/format.ml[72,2811+14]..[72,2811+35])
                      Ptyp_tuple
                      [
                        core_type (stdlib/format.ml[72,2811+14]..[72,2811+20])
                          Ptyp_constr "string" (stdlib/format.ml[72,2811+14]..[72,2811+20])
                          []
                        core_type (stdlib/format.ml[72,2811+23]..[72,2811+26])
                          Ptyp_constr "int" (stdlib/format.ml[72,2811+23]..[72,2811+26])
                          []
                        core_type (stdlib/format.ml[72,2811+29]..[72,2811+35])
                          Ptyp_constr "string" (stdlib/format.ml[72,2811+29]..[72,2811+35])
                          []
                      ]
                ]
                None
              (stdlib/format.ml[74,2874+2]..[74,2874+26])
                "Pp_tbreak" (stdlib/format.ml[74,2874+4]..[74,2874+13])
                [
                  core_type (stdlib/format.ml[74,2874+17]..[74,2874+20])
                    Ptyp_constr "int" (stdlib/format.ml[74,2874+17]..[74,2874+20])
                    []
                  core_type (stdlib/format.ml[74,2874+23]..[74,2874+26])
                    Ptyp_constr "int" (stdlib/format.ml[74,2874+23]..[74,2874+26])
                    []
                ]
                None
              (stdlib/format.ml[75,2933+2]..[75,2933+11])
                "Pp_stab" (stdlib/format.ml[75,2933+4]..[75,2933+11])
                []
                None
              (stdlib/format.ml[76,2987+2]..[76,2987+30])
                "Pp_begin" (stdlib/format.ml[76,2987+4]..[76,2987+12])
                [
                  core_type (stdlib/format.ml[76,2987+16]..[76,2987+19])
                    Ptyp_constr "int" (stdlib/format.ml[76,2987+16]..[76,2987+19])
                    []
                  core_type (stdlib/format.ml[76,2987+22]..[76,2987+30])
                    Ptyp_constr "box_type" (stdlib/format.ml[76,2987+22]..[76,2987+30])
                    []
                ]
                None
              (stdlib/format.ml[77,3043+2]..[77,3043+10])
                "Pp_end" (stdlib/format.ml[77,3043+4]..[77,3043+10])
                []
                None
              (stdlib/format.ml[78,3093+2]..[78,3093+21])
                "Pp_tbegin" (stdlib/format.ml[78,3093+4]..[78,3093+13])
                [
                  core_type (stdlib/format.ml[78,3093+17]..[78,3093+21])
                    Ptyp_constr "tbox" (stdlib/format.ml[78,3093+17]..[78,3093+21])
                    []
                ]
                None
              (stdlib/format.ml[79,3160+2]..[79,3160+11])
                "Pp_tend" (stdlib/format.ml[79,3160+4]..[79,3160+11])
                []
                None
              (stdlib/format.ml[80,3221+2]..[80,3221+14])
                "Pp_newline" (stdlib/format.ml[80,3221+4]..[80,3221+14])
                []
                None
              (stdlib/format.ml[81,3290+2]..[81,3290+17])
                "Pp_if_newline" (stdlib/format.ml[81,3290+4]..[81,3290+17])
                []
                None
              (stdlib/format.ml[83,3416+2]..[83,3416+23])
                "Pp_open_tag" (stdlib/format.ml[83,3416+4]..[83,3416+15])
                [
                  core_type (stdlib/format.ml[83,3416+19]..[83,3416+23])
                    Ptyp_constr "stag" (stdlib/format.ml[83,3416+19]..[83,3416+23])
                    []
                ]
                None
              (stdlib/format.ml[84,3473+2]..[84,3473+16])
                "Pp_close_tag" (stdlib/format.ml[84,3473+4]..[84,3473+16])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "stag" (stdlib/format.ml[86,3546+4]..[86,3546+8]) (stdlib/format.ml[86,3546+0]..[86,3546+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_open
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "tbox" (stdlib/format.ml[88,3561+4]..[88,3561+8]) (stdlib/format.ml[88,3561+0]..[88,3561+34])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (stdlib/format.ml[88,3561+11]..[88,3561+34])
                "Pp_tbox" (stdlib/format.ml[88,3561+11]..[88,3561+18])
                [
                  core_type (stdlib/format.ml[88,3561+22]..[88,3561+34])
                    Ptyp_constr "ref" (stdlib/format.ml[88,3561+31]..[88,3561+34])
                    [
                      core_type (stdlib/format.ml[88,3561+22]..[88,3561+30])
                        Ptyp_constr "list" (stdlib/format.ml[88,3561+26]..[88,3561+30])
                        [
                          core_type (stdlib/format.ml[88,3561+22]..[88,3561+25])
                            Ptyp_constr "int" (stdlib/format.ml[88,3561+22]..[88,3561+25])
                            []
                        ]
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (stdlib/format.ml[90,3619+0]..[90,3619+17])
    Pstr_type Rec
    [
      type_declaration "tag" (stdlib/format.ml[90,3619+5]..[90,3619+8]) (stdlib/format.ml[90,3619+0]..[90,3619+17])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/format.ml[90,3619+11]..[90,3619+17])
              Ptyp_constr "string" (stdlib/format.ml[90,3619+11]..[90,3619+17])
              []
    ]
  structure_item (stdlib/format.ml[91,3637+0]..[91,3637+30])
    Pstr_typext
    type_extension
      ptyext_path = "stag" (stdlib/format.ml[91,3637+5]..[91,3637+9])
      ptyext_params =
        []
      ptyext_constructors =
        [
          extension_constructor (stdlib/format.ml[91,3637+13]..[91,3637+30])
            pext_name = "String_tag"
            pext_kind =
              Pext_decl
                [
                  core_type (stdlib/format.ml[91,3637+27]..[91,3637+30])
                    Ptyp_constr "tag" (stdlib/format.ml[91,3637+27]..[91,3637+30])
                    []
                ]
                None
        ]
      ptyext_private = Public
  structure_item (stdlib/format.ml[106,4305+0]..[110,4389+1])
    Pstr_type Rec
    [
      type_declaration "pp_queue_elem" (stdlib/format.ml[106,4305+5]..[106,4305+18]) (stdlib/format.ml[106,4305+0]..[110,4389+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (stdlib/format.ml[107,4328+2]..[107,4328+24])
                Mutable
                "size" (stdlib/format.ml[107,4328+10]..[107,4328+14])                core_type (stdlib/format.ml[107,4328+17]..[107,4328+23])
                  Ptyp_constr "Size.t" (stdlib/format.ml[107,4328+17]..[107,4328+23])
                  []
              (stdlib/format.ml[108,4353+2]..[108,4353+19])
                Immutable
                "token" (stdlib/format.ml[108,4353+2]..[108,4353+7])                core_type (stdlib/format.ml[108,4353+10]..[108,4353+18])
                  Ptyp_constr "pp_token" (stdlib/format.ml[108,4353+10]..[108,4353+18])
                  []
              (stdlib/format.ml[109,4373+2]..[109,4373+15])
                Immutable
                "length" (stdlib/format.ml[109,4373+2]..[109,4373+8])                core_type (stdlib/format.ml[109,4373+11]..[109,4373+14])
                  Ptyp_constr "int" (stdlib/format.ml[109,4373+11]..[109,4373+14])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (stdlib/format.ml[114,4436+0]..[114,4436+37])
    Pstr_type Rec
    [
      type_declaration "pp_queue" (stdlib/format.ml[114,4436+5]..[114,4436+13]) (stdlib/format.ml[114,4436+0]..[114,4436+37])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/format.ml[114,4436+16]..[114,4436+37])
              Ptyp_constr "Queue.t" (stdlib/format.ml[114,4436+30]..[114,4436+37])
              [
                core_type (stdlib/format.ml[114,4436+16]..[114,4436+29])
                  Ptyp_constr "pp_queue_elem" (stdlib/format.ml[114,4436+16]..[114,4436+29])
                  []
              ]
    ]
  structure_item (stdlib/format.ml[119,4587+0]..[122,4718+1])
    Pstr_type Rec
    [
      type_declaration "pp_scan_elem" (stdlib/format.ml[119,4587+5]..[119,4587+17]) (stdlib/format.ml[119,4587+0]..[122,4718+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (stdlib/format.ml[120,4609+2]..[120,4609+19])
                Immutable
                "left_total" (stdlib/format.ml[120,4609+2]..[120,4609+12])                core_type (stdlib/format.ml[120,4609+15]..[120,4609+18])
                  Ptyp_constr "int" (stdlib/format.ml[120,4609+15]..[120,4609+18])
                  []
              (stdlib/format.ml[121,4689+2]..[121,4689+28])
                Immutable
                "queue_elem" (stdlib/format.ml[121,4689+2]..[121,4689+12])                core_type (stdlib/format.ml[121,4689+15]..[121,4689+28])
                  Ptyp_constr "pp_queue_elem" (stdlib/format.ml[121,4689+15]..[121,4689+28])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (stdlib/format.ml[131,5076+0]..[131,5076+58])
    Pstr_type Rec
    [
      type_declaration "pp_format_elem" (stdlib/format.ml[131,5076+5]..[131,5076+19]) (stdlib/format.ml[131,5076+0]..[131,5076+58])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (stdlib/format.ml[131,5076+24]..[131,5076+44])
                Immutable
                "box_type" (stdlib/format.ml[131,5076+24]..[131,5076+32])                core_type (stdlib/format.ml[131,5076+35]..[131,5076+43])
                  Ptyp_constr "box_type" (stdlib/format.ml[131,5076+35]..[131,5076+43])
                  []
              (stdlib/format.ml[131,5076+45]..[131,5076+56])
                Immutable
                "width" (stdlib/format.ml[131,5076+45]..[131,5076+50])                core_type (stdlib/format.ml[131,5076+53]..[131,5076+56])
                  Ptyp_constr "int" (stdlib/format.ml[131,5076+53]..[131,5076+56])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (stdlib/format.ml[136,5248+0]..[189,7250+1])
    Pstr_type Rec
    [
      type_declaration "formatter" (stdlib/format.ml[136,5248+5]..[136,5248+14]) (stdlib/format.ml[136,5248+0]..[189,7250+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (stdlib/format.ml[138,5310+2]..[138,5310+39])
                Immutable
                "pp_scan_stack" (stdlib/format.ml[138,5310+2]..[138,5310+15])                core_type (stdlib/format.ml[138,5310+18]..[138,5310+38])
                  Ptyp_constr "Stack.t" (stdlib/format.ml[138,5310+31]..[138,5310+38])
                  [
                    core_type (stdlib/format.ml[138,5310+18]..[138,5310+30])
                      Ptyp_constr "pp_scan_elem" (stdlib/format.ml[138,5310+18]..[138,5310+30])
                      []
                  ]
              (stdlib/format.ml[140,5395+2]..[140,5395+43])
                Immutable
                "pp_format_stack" (stdlib/format.ml[140,5395+2]..[140,5395+17])                core_type (stdlib/format.ml[140,5395+20]..[140,5395+42])
                  Ptyp_constr "Stack.t" (stdlib/format.ml[140,5395+35]..[140,5395+42])
                  [
                    core_type (stdlib/format.ml[140,5395+20]..[140,5395+34])
                      Ptyp_constr "pp_format_elem" (stdlib/format.ml[140,5395+20]..[140,5395+34])
                      []
                  ]
              (stdlib/format.ml[141,5439+2]..[141,5439+31])
                Immutable
                "pp_tbox_stack" (stdlib/format.ml[141,5439+2]..[141,5439+15])                core_type (stdlib/format.ml[141,5439+18]..[141,5439+30])
                  Ptyp_constr "Stack.t" (stdlib/format.ml[141,5439+23]..[141,5439+30])
                  [
                    core_type (stdlib/format.ml[141,5439+18]..[141,5439+22])
                      Ptyp_constr "tbox" (stdlib/format.ml[141,5439+18]..[141,5439+22])
                      []
                  ]
              (stdlib/format.ml[143,5519+2]..[143,5519+30])
                Immutable
                "pp_tag_stack" (stdlib/format.ml[143,5519+2]..[143,5519+14])                core_type (stdlib/format.ml[143,5519+17]..[143,5519+29])
                  Ptyp_constr "Stack.t" (stdlib/format.ml[143,5519+22]..[143,5519+29])
                  [
                    core_type (stdlib/format.ml[143,5519+17]..[143,5519+21])
                      Ptyp_constr "stag" (stdlib/format.ml[143,5519+17]..[143,5519+21])
                      []
                  ]
              (stdlib/format.ml[144,5550+2]..[144,5550+31])
                Immutable
                "pp_mark_stack" (stdlib/format.ml[144,5550+2]..[144,5550+15])                core_type (stdlib/format.ml[144,5550+18]..[144,5550+30])
                  Ptyp_constr "Stack.t" (stdlib/format.ml[144,5550+23]..[144,5550+30])
                  [
                    core_type (stdlib/format.ml[144,5550+18]..[144,5550+22])
                      Ptyp_constr "stag" (stdlib/format.ml[144,5550+18]..[144,5550+22])
                      []
                  ]
              (stdlib/format.ml[146,5613+2]..[146,5613+26])
                Mutable
                "pp_margin" (stdlib/format.ml[146,5613+10]..[146,5613+19])                core_type (stdlib/format.ml[146,5613+22]..[146,5613+25])
                  Ptyp_constr "int" (stdlib/format.ml[146,5613+22]..[146,5613+25])
                  []
              (stdlib/format.ml[148,5702+2]..[148,5702+34])
                Mutable
                "pp_min_space_left" (stdlib/format.ml[148,5702+10]..[148,5702+27])                core_type (stdlib/format.ml[148,5702+30]..[148,5702+33])
                  Ptyp_constr "int" (stdlib/format.ml[148,5702+30]..[148,5702+33])
                  []
              (stdlib/format.ml[151,5810+2]..[151,5810+30])
                Mutable
                "pp_max_indent" (stdlib/format.ml[151,5810+10]..[151,5810+23])                core_type (stdlib/format.ml[151,5810+26]..[151,5810+29])
                  Ptyp_constr "int" (stdlib/format.ml[151,5810+26]..[151,5810+29])
                  []
              (stdlib/format.ml[153,5886+2]..[153,5886+30])
                Mutable
                "pp_space_left" (stdlib/format.ml[153,5886+10]..[153,5886+23])                core_type (stdlib/format.ml[153,5886+26]..[153,5886+29])
                  Ptyp_constr "int" (stdlib/format.ml[153,5886+26]..[153,5886+29])
                  []
              (stdlib/format.ml[155,5955+2]..[155,5955+34])
                Mutable
                "pp_current_indent" (stdlib/format.ml[155,5955+10]..[155,5955+27])                core_type (stdlib/format.ml[155,5955+30]..[155,5955+33])
                  Ptyp_constr "int" (stdlib/format.ml[155,5955+30]..[155,5955+33])
                  []
              (stdlib/format.ml[157,6056+2]..[157,6056+32])
                Mutable
                "pp_is_new_line" (stdlib/format.ml[157,6056+10]..[157,6056+24])                core_type (stdlib/format.ml[157,6056+27]..[157,6056+31])
                  Ptyp_constr "bool" (stdlib/format.ml[157,6056+27]..[157,6056+31])
                  []
              (stdlib/format.ml[159,6136+2]..[159,6136+30])
                Mutable
                "pp_left_total" (stdlib/format.ml[159,6136+10]..[159,6136+23])                core_type (stdlib/format.ml[159,6136+26]..[159,6136+29])
                  Ptyp_constr "int" (stdlib/format.ml[159,6136+26]..[159,6136+29])
                  []
              (stdlib/format.ml[161,6216+2]..[161,6216+31])
                Mutable
                "pp_right_total" (stdlib/format.ml[161,6216+10]..[161,6216+24])                core_type (stdlib/format.ml[161,6216+27]..[161,6216+30])
                  Ptyp_constr "int" (stdlib/format.ml[161,6216+27]..[161,6216+30])
                  []
              (stdlib/format.ml[163,6286+2]..[163,6286+30])
                Mutable
                "pp_curr_depth" (stdlib/format.ml[163,6286+10]..[163,6286+23])                core_type (stdlib/format.ml[163,6286+26]..[163,6286+29])
                  Ptyp_constr "int" (stdlib/format.ml[163,6286+26]..[163,6286+29])
                  []
              (stdlib/format.ml[165,6383+2]..[165,6383+29])
                Mutable
                "pp_max_boxes" (stdlib/format.ml[165,6383+10]..[165,6383+22])                core_type (stdlib/format.ml[165,6383+25]..[165,6383+28])
                  Ptyp_constr "int" (stdlib/format.ml[165,6383+25]..[165,6383+28])
                  []
              (stdlib/format.ml[167,6438+2]..[167,6438+31])
                Mutable
                "pp_ellipsis" (stdlib/format.ml[167,6438+10]..[167,6438+21])                core_type (stdlib/format.ml[167,6438+24]..[167,6438+30])
                  Ptyp_constr "string" (stdlib/format.ml[167,6438+24]..[167,6438+30])
                  []
              (stdlib/format.ml[169,6495+2]..[169,6495+55])
                Mutable
                "pp_out_string" (stdlib/format.ml[169,6495+10]..[169,6495+23])                core_type (stdlib/format.ml[169,6495+26]..[169,6495+54])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[169,6495+26]..[169,6495+32])
                    Ptyp_constr "string" (stdlib/format.ml[169,6495+26]..[169,6495+32])
                    []
                  core_type (stdlib/format.ml[169,6495+36]..[169,6495+54])
                    Ptyp_arrow
                    Nolabel
                    core_type (stdlib/format.ml[169,6495+36]..[169,6495+39])
                      Ptyp_constr "int" (stdlib/format.ml[169,6495+36]..[169,6495+39])
                      []
                    core_type (stdlib/format.ml[169,6495+43]..[169,6495+54])
                      Ptyp_arrow
                      Nolabel
                      core_type (stdlib/format.ml[169,6495+43]..[169,6495+46])
                        Ptyp_constr "int" (stdlib/format.ml[169,6495+43]..[169,6495+46])
                        []
                      core_type (stdlib/format.ml[169,6495+50]..[169,6495+54])
                        Ptyp_constr "unit" (stdlib/format.ml[169,6495+50]..[169,6495+54])
                        []
              (stdlib/format.ml[171,6578+2]..[171,6578+38])
                Mutable
                "pp_out_flush" (stdlib/format.ml[171,6578+10]..[171,6578+22])                core_type (stdlib/format.ml[171,6578+25]..[171,6578+37])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[171,6578+25]..[171,6578+29])
                    Ptyp_constr "unit" (stdlib/format.ml[171,6578+25]..[171,6578+29])
                    []
                  core_type (stdlib/format.ml[171,6578+33]..[171,6578+37])
                    Ptyp_constr "unit" (stdlib/format.ml[171,6578+33]..[171,6578+37])
                    []
              (stdlib/format.ml[173,6646+2]..[173,6646+40])
                Mutable
                "pp_out_newline" (stdlib/format.ml[173,6646+10]..[173,6646+24])                core_type (stdlib/format.ml[173,6646+27]..[173,6646+39])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[173,6646+27]..[173,6646+31])
                    Ptyp_constr "unit" (stdlib/format.ml[173,6646+27]..[173,6646+31])
                    []
                  core_type (stdlib/format.ml[173,6646+35]..[173,6646+39])
                    Ptyp_constr "unit" (stdlib/format.ml[173,6646+35]..[173,6646+39])
                    []
              (stdlib/format.ml[175,6725+2]..[175,6725+38])
                Mutable
                "pp_out_spaces" (stdlib/format.ml[175,6725+10]..[175,6725+23])                core_type (stdlib/format.ml[175,6725+26]..[175,6725+37])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[175,6725+26]..[175,6725+29])
                    Ptyp_constr "int" (stdlib/format.ml[175,6725+26]..[175,6725+29])
                    []
                  core_type (stdlib/format.ml[175,6725+33]..[175,6725+37])
                    Ptyp_constr "unit" (stdlib/format.ml[175,6725+33]..[175,6725+37])
                    []
              (stdlib/format.ml[177,6808+2]..[177,6808+38])
                Mutable
                "pp_out_indent" (stdlib/format.ml[177,6808+10]..[177,6808+23])                core_type (stdlib/format.ml[177,6808+26]..[177,6808+37])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[177,6808+26]..[177,6808+29])
                    Ptyp_constr "int" (stdlib/format.ml[177,6808+26]..[177,6808+29])
                    []
                  core_type (stdlib/format.ml[177,6808+33]..[177,6808+37])
                    Ptyp_constr "unit" (stdlib/format.ml[177,6808+33]..[177,6808+37])
                    []
              (stdlib/format.ml[179,6874+2]..[179,6874+31])
                Mutable
                "pp_print_tags" (stdlib/format.ml[179,6874+10]..[179,6874+23])                core_type (stdlib/format.ml[179,6874+26]..[179,6874+30])
                  Ptyp_constr "bool" (stdlib/format.ml[179,6874+26]..[179,6874+30])
                  []
              (stdlib/format.ml[181,6932+2]..[181,6932+30])
                Mutable
                "pp_mark_tags" (stdlib/format.ml[181,6932+10]..[181,6932+22])                core_type (stdlib/format.ml[181,6932+25]..[181,6932+29])
                  Ptyp_constr "bool" (stdlib/format.ml[181,6932+25]..[181,6932+29])
                  []
              (stdlib/format.ml[183,7013+2]..[183,7013+44])
                Mutable
                "pp_mark_open_tag" (stdlib/format.ml[183,7013+10]..[183,7013+26])                core_type (stdlib/format.ml[183,7013+29]..[183,7013+43])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[183,7013+29]..[183,7013+33])
                    Ptyp_constr "stag" (stdlib/format.ml[183,7013+29]..[183,7013+33])
                    []
                  core_type (stdlib/format.ml[183,7013+37]..[183,7013+43])
                    Ptyp_constr "string" (stdlib/format.ml[183,7013+37]..[183,7013+43])
                    []
              (stdlib/format.ml[184,7058+2]..[184,7058+45])
                Mutable
                "pp_mark_close_tag" (stdlib/format.ml[184,7058+10]..[184,7058+27])                core_type (stdlib/format.ml[184,7058+30]..[184,7058+44])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[184,7058+30]..[184,7058+34])
                    Ptyp_constr "stag" (stdlib/format.ml[184,7058+30]..[184,7058+34])
                    []
                  core_type (stdlib/format.ml[184,7058+38]..[184,7058+44])
                    Ptyp_constr "string" (stdlib/format.ml[184,7058+38]..[184,7058+44])
                    []
              (stdlib/format.ml[185,7104+2]..[185,7104+43])
                Mutable
                "pp_print_open_tag" (stdlib/format.ml[185,7104+10]..[185,7104+27])                core_type (stdlib/format.ml[185,7104+30]..[185,7104+42])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[185,7104+30]..[185,7104+34])
                    Ptyp_constr "stag" (stdlib/format.ml[185,7104+30]..[185,7104+34])
                    []
                  core_type (stdlib/format.ml[185,7104+38]..[185,7104+42])
                    Ptyp_constr "unit" (stdlib/format.ml[185,7104+38]..[185,7104+42])
                    []
              (stdlib/format.ml[186,7148+2]..[186,7148+44])
                Mutable
                "pp_print_close_tag" (stdlib/format.ml[186,7148+10]..[186,7148+28])                core_type (stdlib/format.ml[186,7148+31]..[186,7148+43])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[186,7148+31]..[186,7148+35])
                    Ptyp_constr "stag" (stdlib/format.ml[186,7148+31]..[186,7148+35])
                    []
                  core_type (stdlib/format.ml[186,7148+39]..[186,7148+43])
                    Ptyp_constr "unit" (stdlib/format.ml[186,7148+39]..[186,7148+43])
                    []
              (stdlib/format.ml[188,7227+2]..[188,7227+22])
                Immutable
                "pp_queue" (stdlib/format.ml[188,7227+2]..[188,7227+10])                core_type (stdlib/format.ml[188,7227+13]..[188,7227+21])
                  Ptyp_constr "pp_queue" (stdlib/format.ml[188,7227+13]..[188,7227+21])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (stdlib/format.ml[193,7307+0]..[198,7481+1])
    Pstr_type Rec
    [
      type_declaration "formatter_stag_functions" (stdlib/format.ml[193,7307+5]..[193,7307+29]) (stdlib/format.ml[193,7307+0]..[198,7481+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (stdlib/format.ml[194,7341+2]..[194,7341+34])
                Immutable
                "mark_open_stag" (stdlib/format.ml[194,7341+2]..[194,7341+16])                core_type (stdlib/format.ml[194,7341+19]..[194,7341+33])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[194,7341+19]..[194,7341+23])
                    Ptyp_constr "stag" (stdlib/format.ml[194,7341+19]..[194,7341+23])
                    []
                  core_type (stdlib/format.ml[194,7341+27]..[194,7341+33])
                    Ptyp_constr "string" (stdlib/format.ml[194,7341+27]..[194,7341+33])
                    []
              (stdlib/format.ml[195,7376+2]..[195,7376+35])
                Immutable
                "mark_close_stag" (stdlib/format.ml[195,7376+2]..[195,7376+17])                core_type (stdlib/format.ml[195,7376+20]..[195,7376+34])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[195,7376+20]..[195,7376+24])
                    Ptyp_constr "stag" (stdlib/format.ml[195,7376+20]..[195,7376+24])
                    []
                  core_type (stdlib/format.ml[195,7376+28]..[195,7376+34])
                    Ptyp_constr "string" (stdlib/format.ml[195,7376+28]..[195,7376+34])
                    []
              (stdlib/format.ml[196,7412+2]..[196,7412+33])
                Immutable
                "print_open_stag" (stdlib/format.ml[196,7412+2]..[196,7412+17])                core_type (stdlib/format.ml[196,7412+20]..[196,7412+32])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[196,7412+20]..[196,7412+24])
                    Ptyp_constr "stag" (stdlib/format.ml[196,7412+20]..[196,7412+24])
                    []
                  core_type (stdlib/format.ml[196,7412+28]..[196,7412+32])
                    Ptyp_constr "unit" (stdlib/format.ml[196,7412+28]..[196,7412+32])
                    []
              (stdlib/format.ml[197,7446+2]..[197,7446+34])
                Immutable
                "print_close_stag" (stdlib/format.ml[197,7446+2]..[197,7446+18])                core_type (stdlib/format.ml[197,7446+21]..[197,7446+33])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[197,7446+21]..[197,7446+25])
                    Ptyp_constr "stag" (stdlib/format.ml[197,7446+21]..[197,7446+25])
                    []
                  core_type (stdlib/format.ml[197,7446+29]..[197,7446+33])
                    Ptyp_constr "unit" (stdlib/format.ml[197,7446+29]..[197,7446+33])
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (stdlib/format.ml[202,7535+0]..[208,7727+1])
    Pstr_type Rec
    [
      type_declaration "formatter_out_functions" (stdlib/format.ml[202,7535+5]..[202,7535+28]) (stdlib/format.ml[202,7535+0]..[208,7727+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (stdlib/format.ml[203,7568+2]..[203,7568+44])
                Immutable
                "out_string" (stdlib/format.ml[203,7568+2]..[203,7568+12])                core_type (stdlib/format.ml[203,7568+15]..[203,7568+43])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[203,7568+15]..[203,7568+21])
                    Ptyp_constr "string" (stdlib/format.ml[203,7568+15]..[203,7568+21])
                    []
                  core_type (stdlib/format.ml[203,7568+25]..[203,7568+43])
                    Ptyp_arrow
                    Nolabel
                    core_type (stdlib/format.ml[203,7568+25]..[203,7568+28])
                      Ptyp_constr "int" (stdlib/format.ml[203,7568+25]..[203,7568+28])
                      []
                    core_type (stdlib/format.ml[203,7568+32]..[203,7568+43])
                      Ptyp_arrow
                      Nolabel
                      core_type (stdlib/format.ml[203,7568+32]..[203,7568+35])
                        Ptyp_constr "int" (stdlib/format.ml[203,7568+32]..[203,7568+35])
                        []
                      core_type (stdlib/format.ml[203,7568+39]..[203,7568+43])
                        Ptyp_constr "unit" (stdlib/format.ml[203,7568+39]..[203,7568+43])
                        []
              (stdlib/format.ml[204,7613+2]..[204,7613+27])
                Immutable
                "out_flush" (stdlib/format.ml[204,7613+2]..[204,7613+11])                core_type (stdlib/format.ml[204,7613+14]..[204,7613+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[204,7613+14]..[204,7613+18])
                    Ptyp_constr "unit" (stdlib/format.ml[204,7613+14]..[204,7613+18])
                    []
                  core_type (stdlib/format.ml[204,7613+22]..[204,7613+26])
                    Ptyp_constr "unit" (stdlib/format.ml[204,7613+22]..[204,7613+26])
                    []
              (stdlib/format.ml[205,7641+2]..[205,7641+29])
                Immutable
                "out_newline" (stdlib/format.ml[205,7641+2]..[205,7641+13])                core_type (stdlib/format.ml[205,7641+16]..[205,7641+28])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[205,7641+16]..[205,7641+20])
                    Ptyp_constr "unit" (stdlib/format.ml[205,7641+16]..[205,7641+20])
                    []
                  core_type (stdlib/format.ml[205,7641+24]..[205,7641+28])
                    Ptyp_constr "unit" (stdlib/format.ml[205,7641+24]..[205,7641+28])
                    []
              (stdlib/format.ml[206,7671+2]..[206,7671+27])
                Immutable
                "out_spaces" (stdlib/format.ml[206,7671+2]..[206,7671+12])                core_type (stdlib/format.ml[206,7671+15]..[206,7671+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[206,7671+15]..[206,7671+18])
                    Ptyp_constr "int" (stdlib/format.ml[206,7671+15]..[206,7671+18])
                    []
                  core_type (stdlib/format.ml[206,7671+22]..[206,7671+26])
                    Ptyp_constr "unit" (stdlib/format.ml[206,7671+22]..[206,7671+26])
                    []
              (stdlib/format.ml[207,7699+2]..[207,7699+27])
                Immutable
                "out_indent" (stdlib/format.ml[207,7699+2]..[207,7699+12])                core_type (stdlib/format.ml[207,7699+15]..[207,7699+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[207,7699+15]..[207,7699+18])
                    Ptyp_constr "int" (stdlib/format.ml[207,7699+15]..[207,7699+18])
                    []
                  core_type (stdlib/format.ml[207,7699+22]..[207,7699+26])
                    Ptyp_constr "unit" (stdlib/format.ml[207,7699+22]..[207,7699+26])
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (stdlib/format.ml[218,7824+0]..[220,7916+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[218,7824+4]..[218,7824+14])
          Ppat_var "pp_enqueue" (stdlib/format.ml[218,7824+4]..[218,7824+14])
        expression (stdlib/format.ml[218,7824+15]..[220,7916+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[218,7824+15]..[218,7824+20])
            Ppat_var "state" (stdlib/format.ml[218,7824+15]..[218,7824+20])
          expression (stdlib/format.ml[218,7824+21]..[220,7916+32]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[218,7824+21]..[218,7824+26])
              Ppat_var "token" (stdlib/format.ml[218,7824+21]..[218,7824+26])
            expression (stdlib/format.ml[219,7853+2]..[220,7916+32])
              Pexp_sequence
              expression (stdlib/format.ml[219,7853+2]..[219,7853+61])
                Pexp_setfield
                expression (stdlib/format.ml[219,7853+2]..[219,7853+7])
                  Pexp_ident "state" (stdlib/format.ml[219,7853+2]..[219,7853+7])
                "pp_right_total" (stdlib/format.ml[219,7853+8]..[219,7853+22])
                expression (stdlib/format.ml[219,7853+26]..[219,7853+61])
                  Pexp_apply
                  expression (stdlib/format.ml[219,7853+47]..[219,7853+48])
                    Pexp_ident "+" (stdlib/format.ml[219,7853+47]..[219,7853+48])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[219,7853+26]..[219,7853+46])
                        Pexp_field
                        expression (stdlib/format.ml[219,7853+26]..[219,7853+31])
                          Pexp_ident "state" (stdlib/format.ml[219,7853+26]..[219,7853+31])
                        "pp_right_total" (stdlib/format.ml[219,7853+32]..[219,7853+46])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[219,7853+49]..[219,7853+61])
                        Pexp_field
                        expression (stdlib/format.ml[219,7853+49]..[219,7853+54])
                          Pexp_ident "token" (stdlib/format.ml[219,7853+49]..[219,7853+54])
                        "length" (stdlib/format.ml[219,7853+55]..[219,7853+61])
                  ]
              expression (stdlib/format.ml[220,7916+2]..[220,7916+32])
                Pexp_apply
                expression (stdlib/format.ml[220,7916+2]..[220,7916+11])
                  Pexp_ident "Queue.add" (stdlib/format.ml[220,7916+2]..[220,7916+11])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[220,7916+12]..[220,7916+17])
                      Pexp_ident "token" (stdlib/format.ml[220,7916+12]..[220,7916+17])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[220,7916+18]..[220,7916+32])
                      Pexp_field
                      expression (stdlib/format.ml[220,7916+18]..[220,7916+23])
                        Pexp_ident "state" (stdlib/format.ml[220,7916+18]..[220,7916+23])
                      "pp_queue" (stdlib/format.ml[220,7916+24]..[220,7916+32])
                ]
    ]
  structure_item (stdlib/format.ml[223,7951+0]..[225,8033+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[223,7951+4]..[223,7951+18])
          Ppat_var "pp_clear_queue" (stdlib/format.ml[223,7951+4]..[223,7951+18])
        expression (stdlib/format.ml[223,7951+19]..[225,8033+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[223,7951+19]..[223,7951+24])
            Ppat_var "state" (stdlib/format.ml[223,7951+19]..[223,7951+24])
          expression (stdlib/format.ml[224,7978+2]..[225,8033+28])
            Pexp_sequence
            expression (stdlib/format.ml[224,7978+2]..[224,7978+26])
              Pexp_setfield
              expression (stdlib/format.ml[224,7978+2]..[224,7978+7])
                Pexp_ident "state" (stdlib/format.ml[224,7978+2]..[224,7978+7])
              "pp_left_total" (stdlib/format.ml[224,7978+8]..[224,7978+21])
              expression (stdlib/format.ml[224,7978+25]..[224,7978+26])
                Pexp_constant PConst_int (1,None)
            expression (stdlib/format.ml[224,7978+28]..[225,8033+28])
              Pexp_sequence
              expression (stdlib/format.ml[224,7978+28]..[224,7978+53])
                Pexp_setfield
                expression (stdlib/format.ml[224,7978+28]..[224,7978+33])
                  Pexp_ident "state" (stdlib/format.ml[224,7978+28]..[224,7978+33])
                "pp_right_total" (stdlib/format.ml[224,7978+34]..[224,7978+48])
                expression (stdlib/format.ml[224,7978+52]..[224,7978+53])
                  Pexp_constant PConst_int (1,None)
              expression (stdlib/format.ml[225,8033+2]..[225,8033+28])
                Pexp_apply
                expression (stdlib/format.ml[225,8033+2]..[225,8033+13])
                  Pexp_ident "Queue.clear" (stdlib/format.ml[225,8033+2]..[225,8033+13])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[225,8033+14]..[225,8033+28])
                      Pexp_field
                      expression (stdlib/format.ml[225,8033+14]..[225,8033+19])
                        Pexp_ident "state" (stdlib/format.ml[225,8033+14]..[225,8033+19])
                      "pp_queue" (stdlib/format.ml[225,8033+20]..[225,8033+28])
                ]
    ]
  structure_item (stdlib/format.ml[248,9126+0]..[248,9126+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[248,9126+4]..[248,9126+15])
          Ppat_var "pp_infinity" (stdlib/format.ml[248,9126+4]..[248,9126+15])
        expression (stdlib/format.ml[248,9126+18]..[248,9126+28])
          Pexp_constant PConst_int (1000000010,None)
    ]
  structure_item (stdlib/format.ml[251,9198+0]..[254,9378+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[251,9198+4]..[251,9198+20])
          Ppat_var "pp_output_string" (stdlib/format.ml[251,9198+4]..[251,9198+20])
        expression (stdlib/format.ml[251,9198+21]..[251,9198+72]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[251,9198+21]..[251,9198+26])
            Ppat_var "state" (stdlib/format.ml[251,9198+21]..[251,9198+26])
          expression (stdlib/format.ml[251,9198+27]..[251,9198+72]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[251,9198+27]..[251,9198+28])
              Ppat_var "s" (stdlib/format.ml[251,9198+27]..[251,9198+28])
            expression (stdlib/format.ml[251,9198+31]..[251,9198+72])
              Pexp_apply
              expression (stdlib/format.ml[251,9198+31]..[251,9198+50])
                Pexp_field
                expression (stdlib/format.ml[251,9198+31]..[251,9198+36])
                  Pexp_ident "state" (stdlib/format.ml[251,9198+31]..[251,9198+36])
                "pp_out_string" (stdlib/format.ml[251,9198+37]..[251,9198+50])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[251,9198+51]..[251,9198+52])
                    Pexp_ident "s" (stdlib/format.ml[251,9198+51]..[251,9198+52])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[251,9198+53]..[251,9198+54])
                    Pexp_constant PConst_int (0,None)
                <arg>
                Nolabel
                  expression (stdlib/format.ml[251,9198+55]..[251,9198+72])
                    Pexp_apply
                    expression (stdlib/format.ml[251,9198+56]..[251,9198+69])
                      Pexp_ident "String.length" (stdlib/format.ml[251,9198+56]..[251,9198+69])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[251,9198+70]..[251,9198+71])
                          Pexp_ident "s" (stdlib/format.ml[251,9198+70]..[251,9198+71])
                    ]
              ]
      <def>
        pattern (stdlib/format.ml[252,9271+4]..[252,9271+21])
          Ppat_var "pp_output_newline" (stdlib/format.ml[252,9271+4]..[252,9271+21])
        expression (stdlib/format.ml[252,9271+22]..[252,9271+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[252,9271+22]..[252,9271+27])
            Ppat_var "state" (stdlib/format.ml[252,9271+22]..[252,9271+27])
          expression (stdlib/format.ml[252,9271+30]..[252,9271+53])
            Pexp_apply
            expression (stdlib/format.ml[252,9271+30]..[252,9271+50])
              Pexp_field
              expression (stdlib/format.ml[252,9271+30]..[252,9271+35])
                Pexp_ident "state" (stdlib/format.ml[252,9271+30]..[252,9271+35])
              "pp_out_newline" (stdlib/format.ml[252,9271+36]..[252,9271+50])
            [
              <arg>
              Nolabel
                expression (stdlib/format.ml[252,9271+51]..[252,9271+53])
                  Pexp_construct "()" (stdlib/format.ml[252,9271+51]..[252,9271+53])
                  None
            ]
      <def>
        pattern (stdlib/format.ml[253,9325+4]..[253,9325+20])
          Ppat_var "pp_output_spaces" (stdlib/format.ml[253,9325+4]..[253,9325+20])
        expression (stdlib/format.ml[253,9325+21]..[253,9325+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[253,9325+21]..[253,9325+26])
            Ppat_var "state" (stdlib/format.ml[253,9325+21]..[253,9325+26])
          expression (stdlib/format.ml[253,9325+27]..[253,9325+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[253,9325+27]..[253,9325+28])
              Ppat_var "n" (stdlib/format.ml[253,9325+27]..[253,9325+28])
            expression (stdlib/format.ml[253,9325+31]..[253,9325+52])
              Pexp_apply
              expression (stdlib/format.ml[253,9325+31]..[253,9325+50])
                Pexp_field
                expression (stdlib/format.ml[253,9325+31]..[253,9325+36])
                  Pexp_ident "state" (stdlib/format.ml[253,9325+31]..[253,9325+36])
                "pp_out_spaces" (stdlib/format.ml[253,9325+37]..[253,9325+50])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[253,9325+51]..[253,9325+52])
                    Pexp_ident "n" (stdlib/format.ml[253,9325+51]..[253,9325+52])
              ]
      <def>
        pattern (stdlib/format.ml[254,9378+4]..[254,9378+20])
          Ppat_var "pp_output_indent" (stdlib/format.ml[254,9378+4]..[254,9378+20])
        expression (stdlib/format.ml[254,9378+21]..[254,9378+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[254,9378+21]..[254,9378+26])
            Ppat_var "state" (stdlib/format.ml[254,9378+21]..[254,9378+26])
          expression (stdlib/format.ml[254,9378+27]..[254,9378+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[254,9378+27]..[254,9378+28])
              Ppat_var "n" (stdlib/format.ml[254,9378+27]..[254,9378+28])
            expression (stdlib/format.ml[254,9378+31]..[254,9378+52])
              Pexp_apply
              expression (stdlib/format.ml[254,9378+31]..[254,9378+50])
                Pexp_field
                expression (stdlib/format.ml[254,9378+31]..[254,9378+36])
                  Pexp_ident "state" (stdlib/format.ml[254,9378+31]..[254,9378+36])
                "pp_out_indent" (stdlib/format.ml[254,9378+37]..[254,9378+50])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[254,9378+51]..[254,9378+52])
                    Pexp_ident "n" (stdlib/format.ml[254,9378+51]..[254,9378+52])
              ]
    ]
  structure_item (stdlib/format.ml[257,9461+0]..[260,9582+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[257,9461+4]..[257,9461+18])
          Ppat_var "format_pp_text" (stdlib/format.ml[257,9461+4]..[257,9461+18])
        expression (stdlib/format.ml[257,9461+19]..[260,9582+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[257,9461+19]..[257,9461+24])
            Ppat_var "state" (stdlib/format.ml[257,9461+19]..[257,9461+24])
          expression (stdlib/format.ml[257,9461+25]..[260,9582+31]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[257,9461+25]..[257,9461+29])
              Ppat_var "size" (stdlib/format.ml[257,9461+25]..[257,9461+29])
            expression (stdlib/format.ml[257,9461+30]..[260,9582+31]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[257,9461+30]..[257,9461+34])
                Ppat_var "text" (stdlib/format.ml[257,9461+30]..[257,9461+34])
              expression (stdlib/format.ml[258,9498+2]..[260,9582+31])
                Pexp_sequence
                expression (stdlib/format.ml[258,9498+2]..[258,9498+51])
                  Pexp_setfield
                  expression (stdlib/format.ml[258,9498+2]..[258,9498+7])
                    Pexp_ident "state" (stdlib/format.ml[258,9498+2]..[258,9498+7])
                  "pp_space_left" (stdlib/format.ml[258,9498+8]..[258,9498+21])
                  expression (stdlib/format.ml[258,9498+25]..[258,9498+51])
                    Pexp_apply
                    expression (stdlib/format.ml[258,9498+45]..[258,9498+46])
                      Pexp_ident "-" (stdlib/format.ml[258,9498+45]..[258,9498+46])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[258,9498+25]..[258,9498+44])
                          Pexp_field
                          expression (stdlib/format.ml[258,9498+25]..[258,9498+30])
                            Pexp_ident "state" (stdlib/format.ml[258,9498+25]..[258,9498+30])
                          "pp_space_left" (stdlib/format.ml[258,9498+31]..[258,9498+44])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[258,9498+47]..[258,9498+51])
                          Pexp_ident "size" (stdlib/format.ml[258,9498+47]..[258,9498+51])
                    ]
                expression (stdlib/format.ml[259,9551+2]..[260,9582+31])
                  Pexp_sequence
                  expression (stdlib/format.ml[259,9551+2]..[259,9551+29])
                    Pexp_apply
                    expression (stdlib/format.ml[259,9551+2]..[259,9551+18])
                      Pexp_ident "pp_output_string" (stdlib/format.ml[259,9551+2]..[259,9551+18])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[259,9551+19]..[259,9551+24])
                          Pexp_ident "state" (stdlib/format.ml[259,9551+19]..[259,9551+24])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[259,9551+25]..[259,9551+29])
                          Pexp_ident "text" (stdlib/format.ml[259,9551+25]..[259,9551+29])
                    ]
                  expression (stdlib/format.ml[260,9582+2]..[260,9582+31])
                    Pexp_setfield
                    expression (stdlib/format.ml[260,9582+2]..[260,9582+7])
                      Pexp_ident "state" (stdlib/format.ml[260,9582+2]..[260,9582+7])
                    "pp_is_new_line" (stdlib/format.ml[260,9582+8]..[260,9582+22])
                    expression (stdlib/format.ml[260,9582+26]..[260,9582+31])
                      Pexp_construct "false" (stdlib/format.ml[260,9582+26]..[260,9582+31])
                      None
    ]
  structure_item (stdlib/format.ml[263,9665+0]..[264,9693+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[263,9665+4]..[263,9665+17])
          Ppat_var "format_string" (stdlib/format.ml[263,9665+4]..[263,9665+17])
        expression (stdlib/format.ml[263,9665+18]..[264,9693+58]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[263,9665+18]..[263,9665+23])
            Ppat_var "state" (stdlib/format.ml[263,9665+18]..[263,9665+23])
          expression (stdlib/format.ml[263,9665+24]..[264,9693+58]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[263,9665+24]..[263,9665+25])
              Ppat_var "s" (stdlib/format.ml[263,9665+24]..[263,9665+25])
            expression (stdlib/format.ml[264,9693+2]..[264,9693+58])
              Pexp_ifthenelse
              expression (stdlib/format.ml[264,9693+5]..[264,9693+12])
                Pexp_apply
                expression (stdlib/format.ml[264,9693+7]..[264,9693+9])
                  Pexp_ident "<>" (stdlib/format.ml[264,9693+7]..[264,9693+9])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[264,9693+5]..[264,9693+6])
                      Pexp_ident "s" (stdlib/format.ml[264,9693+5]..[264,9693+6])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[264,9693+10]..[264,9693+12])
                      Pexp_constant PConst_string("",(stdlib/format.ml[264,9693+11]..[264,9693+11]),None)
                ]
              expression (stdlib/format.ml[264,9693+18]..[264,9693+58])
                Pexp_apply
                expression (stdlib/format.ml[264,9693+18]..[264,9693+32])
                  Pexp_ident "format_pp_text" (stdlib/format.ml[264,9693+18]..[264,9693+32])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[264,9693+33]..[264,9693+38])
                      Pexp_ident "state" (stdlib/format.ml[264,9693+33]..[264,9693+38])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[264,9693+39]..[264,9693+56])
                      Pexp_apply
                      expression (stdlib/format.ml[264,9693+40]..[264,9693+53])
                        Pexp_ident "String.length" (stdlib/format.ml[264,9693+40]..[264,9693+53])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[264,9693+54]..[264,9693+55])
                            Pexp_ident "s" (stdlib/format.ml[264,9693+54]..[264,9693+55])
                      ]
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[264,9693+57]..[264,9693+58])
                      Pexp_ident "s" (stdlib/format.ml[264,9693+57]..[264,9693+58])
                ]
              None
    ]
  structure_item (stdlib/format.ml[267,9800+0]..[277,10261+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[267,9800+4]..[267,9800+18])
          Ppat_var "break_new_line" (stdlib/format.ml[267,9800+4]..[267,9800+18])
        expression (stdlib/format.ml[267,9800+19]..[277,10261+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[267,9800+19]..[267,9800+24])
            Ppat_var "state" (stdlib/format.ml[267,9800+19]..[267,9800+24])
          expression (stdlib/format.ml[267,9800+25]..[277,10261+27]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[267,9800+25]..[267,9800+48])
              Ppat_tuple
              [
                pattern (stdlib/format.ml[267,9800+26]..[267,9800+32])
                  Ppat_var "before" (stdlib/format.ml[267,9800+26]..[267,9800+32])
                pattern (stdlib/format.ml[267,9800+34]..[267,9800+40])
                  Ppat_var "offset" (stdlib/format.ml[267,9800+34]..[267,9800+40])
                pattern (stdlib/format.ml[267,9800+42]..[267,9800+47])
                  Ppat_var "after" (stdlib/format.ml[267,9800+42]..[267,9800+47])
              ]
            expression (stdlib/format.ml[267,9800+49]..[277,10261+27]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[267,9800+49]..[267,9800+54])
                Ppat_var "width" (stdlib/format.ml[267,9800+49]..[267,9800+54])
              expression (stdlib/format.ml[268,9857+2]..[277,10261+27])
                Pexp_sequence
                expression (stdlib/format.ml[268,9857+2]..[268,9857+28])
                  Pexp_apply
                  expression (stdlib/format.ml[268,9857+2]..[268,9857+15])
                    Pexp_ident "format_string" (stdlib/format.ml[268,9857+2]..[268,9857+15])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[268,9857+16]..[268,9857+21])
                        Pexp_ident "state" (stdlib/format.ml[268,9857+16]..[268,9857+21])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[268,9857+22]..[268,9857+28])
                        Pexp_ident "before" (stdlib/format.ml[268,9857+22]..[268,9857+28])
                  ]
                expression (stdlib/format.ml[269,9887+2]..[277,10261+27])
                  Pexp_sequence
                  expression (stdlib/format.ml[269,9887+2]..[269,9887+25])
                    Pexp_apply
                    expression (stdlib/format.ml[269,9887+2]..[269,9887+19])
                      Pexp_ident "pp_output_newline" (stdlib/format.ml[269,9887+2]..[269,9887+19])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[269,9887+20]..[269,9887+25])
                          Pexp_ident "state" (stdlib/format.ml[269,9887+20]..[269,9887+25])
                    ]
                  expression (stdlib/format.ml[270,9914+2]..[277,10261+27])
                    Pexp_sequence
                    expression (stdlib/format.ml[270,9914+2]..[270,9914+30])
                      Pexp_setfield
                      expression (stdlib/format.ml[270,9914+2]..[270,9914+7])
                        Pexp_ident "state" (stdlib/format.ml[270,9914+2]..[270,9914+7])
                      "pp_is_new_line" (stdlib/format.ml[270,9914+8]..[270,9914+22])
                      expression (stdlib/format.ml[270,9914+26]..[270,9914+30])
                        Pexp_construct "true" (stdlib/format.ml[270,9914+26]..[270,9914+30])
                        None
                    expression (stdlib/format.ml[271,9946+2]..[277,10261+27])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (stdlib/format.ml[271,9946+6]..[271,9946+12])
                            Ppat_var "indent" (stdlib/format.ml[271,9946+6]..[271,9946+12])
                          expression (stdlib/format.ml[271,9946+15]..[271,9946+47])
                            Pexp_apply
                            expression (stdlib/format.ml[271,9946+39]..[271,9946+40])
                              Pexp_ident "+" (stdlib/format.ml[271,9946+39]..[271,9946+40])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[271,9946+15]..[271,9946+38])
                                  Pexp_apply
                                  expression (stdlib/format.ml[271,9946+31]..[271,9946+32])
                                    Pexp_ident "-" (stdlib/format.ml[271,9946+31]..[271,9946+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[271,9946+15]..[271,9946+30])
                                        Pexp_field
                                        expression (stdlib/format.ml[271,9946+15]..[271,9946+20])
                                          Pexp_ident "state" (stdlib/format.ml[271,9946+15]..[271,9946+20])
                                        "pp_margin" (stdlib/format.ml[271,9946+21]..[271,9946+30])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[271,9946+33]..[271,9946+38])
                                        Pexp_ident "width" (stdlib/format.ml[271,9946+33]..[271,9946+38])
                                  ]
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[271,9946+41]..[271,9946+47])
                                  Pexp_ident "offset" (stdlib/format.ml[271,9946+41]..[271,9946+47])
                            ]
                      ]
                      expression (stdlib/format.ml[273,10043+2]..[277,10261+27])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (stdlib/format.ml[273,10043+6]..[273,10043+17])
                              Ppat_var "real_indent" (stdlib/format.ml[273,10043+6]..[273,10043+17])
                            expression (stdlib/format.ml[273,10043+20]..[273,10043+54])
                              Pexp_apply
                              expression (stdlib/format.ml[273,10043+20]..[273,10043+27])
                                Pexp_ident "Int.min" (stdlib/format.ml[273,10043+20]..[273,10043+27])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[273,10043+28]..[273,10043+47])
                                    Pexp_field
                                    expression (stdlib/format.ml[273,10043+28]..[273,10043+33])
                                      Pexp_ident "state" (stdlib/format.ml[273,10043+28]..[273,10043+33])
                                    "pp_max_indent" (stdlib/format.ml[273,10043+34]..[273,10043+47])
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[273,10043+48]..[273,10043+54])
                                    Pexp_ident "indent" (stdlib/format.ml[273,10043+48]..[273,10043+54])
                              ]
                        ]
                        expression (stdlib/format.ml[274,10101+2]..[277,10261+27])
                          Pexp_sequence
                          expression (stdlib/format.ml[274,10101+2]..[274,10101+40])
                            Pexp_setfield
                            expression (stdlib/format.ml[274,10101+2]..[274,10101+7])
                              Pexp_ident "state" (stdlib/format.ml[274,10101+2]..[274,10101+7])
                            "pp_current_indent" (stdlib/format.ml[274,10101+8]..[274,10101+25])
                            expression (stdlib/format.ml[274,10101+29]..[274,10101+40])
                              Pexp_ident "real_indent" (stdlib/format.ml[274,10101+29]..[274,10101+40])
                          expression (stdlib/format.ml[275,10143+2]..[277,10261+27])
                            Pexp_sequence
                            expression (stdlib/format.ml[275,10143+2]..[275,10143+66])
                              Pexp_setfield
                              expression (stdlib/format.ml[275,10143+2]..[275,10143+7])
                                Pexp_ident "state" (stdlib/format.ml[275,10143+2]..[275,10143+7])
                              "pp_space_left" (stdlib/format.ml[275,10143+8]..[275,10143+21])
                              expression (stdlib/format.ml[275,10143+25]..[275,10143+66])
                                Pexp_apply
                                expression (stdlib/format.ml[275,10143+41]..[275,10143+42])
                                  Pexp_ident "-" (stdlib/format.ml[275,10143+41]..[275,10143+42])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[275,10143+25]..[275,10143+40])
                                      Pexp_field
                                      expression (stdlib/format.ml[275,10143+25]..[275,10143+30])
                                        Pexp_ident "state" (stdlib/format.ml[275,10143+25]..[275,10143+30])
                                      "pp_margin" (stdlib/format.ml[275,10143+31]..[275,10143+40])
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[275,10143+43]..[275,10143+66])
                                      Pexp_field
                                      expression (stdlib/format.ml[275,10143+43]..[275,10143+48])
                                        Pexp_ident "state" (stdlib/format.ml[275,10143+43]..[275,10143+48])
                                      "pp_current_indent" (stdlib/format.ml[275,10143+49]..[275,10143+66])
                                ]
                            expression (stdlib/format.ml[276,10211+2]..[277,10261+27])
                              Pexp_sequence
                              expression (stdlib/format.ml[276,10211+2]..[276,10211+48])
                                Pexp_apply
                                expression (stdlib/format.ml[276,10211+2]..[276,10211+18])
                                  Pexp_ident "pp_output_indent" (stdlib/format.ml[276,10211+2]..[276,10211+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[276,10211+19]..[276,10211+24])
                                      Pexp_ident "state" (stdlib/format.ml[276,10211+19]..[276,10211+24])
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[276,10211+25]..[276,10211+48])
                                      Pexp_field
                                      expression (stdlib/format.ml[276,10211+25]..[276,10211+30])
                                        Pexp_ident "state" (stdlib/format.ml[276,10211+25]..[276,10211+30])
                                      "pp_current_indent" (stdlib/format.ml[276,10211+31]..[276,10211+48])
                                ]
                              expression (stdlib/format.ml[277,10261+2]..[277,10261+27])
                                Pexp_apply
                                expression (stdlib/format.ml[277,10261+2]..[277,10261+15])
                                  Pexp_ident "format_string" (stdlib/format.ml[277,10261+2]..[277,10261+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[277,10261+16]..[277,10261+21])
                                      Pexp_ident "state" (stdlib/format.ml[277,10261+16]..[277,10261+21])
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[277,10261+22]..[277,10261+27])
                                      Pexp_ident "after" (stdlib/format.ml[277,10261+22]..[277,10261+27])
                                ]
    ]
  structure_item (stdlib/format.ml[281,10353+0]..[281,10353+67])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[281,10353+4]..[281,10353+14])
          Ppat_var "break_line" (stdlib/format.ml[281,10353+4]..[281,10353+14])
        expression (stdlib/format.ml[281,10353+15]..[281,10353+67]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[281,10353+15]..[281,10353+20])
            Ppat_var "state" (stdlib/format.ml[281,10353+15]..[281,10353+20])
          expression (stdlib/format.ml[281,10353+21]..[281,10353+67]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[281,10353+21]..[281,10353+26])
              Ppat_var "width" (stdlib/format.ml[281,10353+21]..[281,10353+26])
            expression (stdlib/format.ml[281,10353+29]..[281,10353+67])
              Pexp_apply
              expression (stdlib/format.ml[281,10353+29]..[281,10353+43])
                Pexp_ident "break_new_line" (stdlib/format.ml[281,10353+29]..[281,10353+43])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[281,10353+44]..[281,10353+49])
                    Pexp_ident "state" (stdlib/format.ml[281,10353+44]..[281,10353+49])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[281,10353+50]..[281,10353+61])
                    Pexp_tuple
                    [
                      expression (stdlib/format.ml[281,10353+51]..[281,10353+53])
                        Pexp_constant PConst_string("",(stdlib/format.ml[281,10353+52]..[281,10353+52]),None)
                      expression (stdlib/format.ml[281,10353+55]..[281,10353+56])
                        Pexp_constant PConst_int (0,None)
                      expression (stdlib/format.ml[281,10353+58]..[281,10353+60])
                        Pexp_constant PConst_string("",(stdlib/format.ml[281,10353+59]..[281,10353+59]),None)
                    ]
                <arg>
                Nolabel
                  expression (stdlib/format.ml[281,10353+62]..[281,10353+67])
                    Pexp_ident "width" (stdlib/format.ml[281,10353+62]..[281,10353+67])
              ]
    ]
  structure_item (stdlib/format.ml[284,10477+0]..[288,10644+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[284,10477+4]..[284,10477+19])
          Ppat_var "break_same_line" (stdlib/format.ml[284,10477+4]..[284,10477+19])
        expression (stdlib/format.ml[284,10477+20]..[288,10644+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[284,10477+20]..[284,10477+25])
            Ppat_var "state" (stdlib/format.ml[284,10477+20]..[284,10477+25])
          expression (stdlib/format.ml[284,10477+26]..[288,10644+27]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[284,10477+26]..[284,10477+48])
              Ppat_tuple
              [
                pattern (stdlib/format.ml[284,10477+27]..[284,10477+33])
                  Ppat_var "before" (stdlib/format.ml[284,10477+27]..[284,10477+33])
                pattern (stdlib/format.ml[284,10477+35]..[284,10477+40])
                  Ppat_var "width" (stdlib/format.ml[284,10477+35]..[284,10477+40])
                pattern (stdlib/format.ml[284,10477+42]..[284,10477+47])
                  Ppat_var "after" (stdlib/format.ml[284,10477+42]..[284,10477+47])
              ]
            expression (stdlib/format.ml[285,10528+2]..[288,10644+27])
              Pexp_sequence
              expression (stdlib/format.ml[285,10528+2]..[285,10528+28])
                Pexp_apply
                expression (stdlib/format.ml[285,10528+2]..[285,10528+15])
                  Pexp_ident "format_string" (stdlib/format.ml[285,10528+2]..[285,10528+15])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[285,10528+16]..[285,10528+21])
                      Pexp_ident "state" (stdlib/format.ml[285,10528+16]..[285,10528+21])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[285,10528+22]..[285,10528+28])
                      Pexp_ident "before" (stdlib/format.ml[285,10528+22]..[285,10528+28])
                ]
              expression (stdlib/format.ml[286,10558+2]..[288,10644+27])
                Pexp_sequence
                expression (stdlib/format.ml[286,10558+2]..[286,10558+52])
                  Pexp_setfield
                  expression (stdlib/format.ml[286,10558+2]..[286,10558+7])
                    Pexp_ident "state" (stdlib/format.ml[286,10558+2]..[286,10558+7])
                  "pp_space_left" (stdlib/format.ml[286,10558+8]..[286,10558+21])
                  expression (stdlib/format.ml[286,10558+25]..[286,10558+52])
                    Pexp_apply
                    expression (stdlib/format.ml[286,10558+45]..[286,10558+46])
                      Pexp_ident "-" (stdlib/format.ml[286,10558+45]..[286,10558+46])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[286,10558+25]..[286,10558+44])
                          Pexp_field
                          expression (stdlib/format.ml[286,10558+25]..[286,10558+30])
                            Pexp_ident "state" (stdlib/format.ml[286,10558+25]..[286,10558+30])
                          "pp_space_left" (stdlib/format.ml[286,10558+31]..[286,10558+44])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[286,10558+47]..[286,10558+52])
                          Pexp_ident "width" (stdlib/format.ml[286,10558+47]..[286,10558+52])
                    ]
                expression (stdlib/format.ml[287,10612+2]..[288,10644+27])
                  Pexp_sequence
                  expression (stdlib/format.ml[287,10612+2]..[287,10612+30])
                    Pexp_apply
                    expression (stdlib/format.ml[287,10612+2]..[287,10612+18])
                      Pexp_ident "pp_output_spaces" (stdlib/format.ml[287,10612+2]..[287,10612+18])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[287,10612+19]..[287,10612+24])
                          Pexp_ident "state" (stdlib/format.ml[287,10612+19]..[287,10612+24])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[287,10612+25]..[287,10612+30])
                          Pexp_ident "width" (stdlib/format.ml[287,10612+25]..[287,10612+30])
                    ]
                  expression (stdlib/format.ml[288,10644+2]..[288,10644+27])
                    Pexp_apply
                    expression (stdlib/format.ml[288,10644+2]..[288,10644+15])
                      Pexp_ident "format_string" (stdlib/format.ml[288,10644+2]..[288,10644+15])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[288,10644+16]..[288,10644+21])
                          Pexp_ident "state" (stdlib/format.ml[288,10644+16]..[288,10644+21])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[288,10644+22]..[288,10644+27])
                          Pexp_ident "after" (stdlib/format.ml[288,10644+22]..[288,10644+27])
                    ]
    ]
  structure_item (stdlib/format.ml[294,10833+0]..[301,11080+73])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[294,10833+4]..[294,10833+23])
          Ppat_var "pp_force_break_line" (stdlib/format.ml[294,10833+4]..[294,10833+23])
        expression (stdlib/format.ml[294,10833+24]..[301,11080+73]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[294,10833+24]..[294,10833+29])
            Ppat_var "state" (stdlib/format.ml[294,10833+24]..[294,10833+29])
          expression (stdlib/format.ml[295,10865+2]..[301,11080+73])
            Pexp_match
            expression (stdlib/format.ml[295,10865+8]..[295,10865+43])
              Pexp_apply
              expression (stdlib/format.ml[295,10865+8]..[295,10865+21])
                Pexp_ident "Stack.top_opt" (stdlib/format.ml[295,10865+8]..[295,10865+21])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[295,10865+22]..[295,10865+43])
                    Pexp_field
                    expression (stdlib/format.ml[295,10865+22]..[295,10865+27])
                      Pexp_ident "state" (stdlib/format.ml[295,10865+22]..[295,10865+27])
                    "pp_format_stack" (stdlib/format.ml[295,10865+28]..[295,10865+43])
              ]
            [
              <case>
                pattern (stdlib/format.ml[296,10914+4]..[296,10914+8])
                  Ppat_construct "None" (stdlib/format.ml[296,10914+4]..[296,10914+8])
                  None
                expression (stdlib/format.ml[296,10914+12]..[296,10914+35])
                  Pexp_apply
                  expression (stdlib/format.ml[296,10914+12]..[296,10914+29])
                    Pexp_ident "pp_output_newline" (stdlib/format.ml[296,10914+12]..[296,10914+29])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[296,10914+30]..[296,10914+35])
                        Pexp_ident "state" (stdlib/format.ml[296,10914+30]..[296,10914+35])
                  ]
              <case>
                pattern (stdlib/format.ml[297,10950+4]..[297,10950+28])
                  Ppat_construct "Some" (stdlib/format.ml[297,10950+4]..[297,10950+8])
                  Some
                    []
                    pattern (stdlib/format.ml[297,10950+9]..[297,10950+28])
                      Ppat_record Closed
                      [
                        "box_type" (stdlib/format.ml[297,10950+11]..[297,10950+19]) ghost
                          pattern (stdlib/format.ml[297,10950+11]..[297,10950+19])
                            Ppat_var "box_type" (stdlib/format.ml[297,10950+11]..[297,10950+19])
                        "width" (stdlib/format.ml[297,10950+21]..[297,10950+26]) ghost
                          pattern (stdlib/format.ml[297,10950+21]..[297,10950+26])
                            Ppat_var "width" (stdlib/format.ml[297,10950+21]..[297,10950+26])
                      ]
                expression (stdlib/format.ml[298,10982+4]..[301,11080+73])
                  Pexp_ifthenelse
                  expression (stdlib/format.ml[298,10982+7]..[298,10982+34])
                    Pexp_apply
                    expression (stdlib/format.ml[298,10982+13]..[298,10982+14])
                      Pexp_ident ">" (stdlib/format.ml[298,10982+13]..[298,10982+14])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[298,10982+7]..[298,10982+12])
                          Pexp_ident "width" (stdlib/format.ml[298,10982+7]..[298,10982+12])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[298,10982+15]..[298,10982+34])
                          Pexp_field
                          expression (stdlib/format.ml[298,10982+15]..[298,10982+20])
                            Pexp_ident "state" (stdlib/format.ml[298,10982+15]..[298,10982+20])
                          "pp_space_left" (stdlib/format.ml[298,10982+21]..[298,10982+34])
                    ]
                  expression (stdlib/format.ml[299,11022+6]..[301,11080+73])
                    Pexp_match
                    expression (stdlib/format.ml[299,11022+12]..[299,11022+20])
                      Pexp_ident "box_type" (stdlib/format.ml[299,11022+12]..[299,11022+20])
                    [
                      <case>
                        pattern (stdlib/format.ml[300,11048+8]..[300,11048+25])
                          Ppat_or
                          pattern (stdlib/format.ml[300,11048+8]..[300,11048+15])
                            Ppat_construct "Pp_fits" (stdlib/format.ml[300,11048+8]..[300,11048+15])
                            None
                          pattern (stdlib/format.ml[300,11048+18]..[300,11048+25])
                            Ppat_construct "Pp_hbox" (stdlib/format.ml[300,11048+18]..[300,11048+25])
                            None
                        expression (stdlib/format.ml[300,11048+29]..[300,11048+31])
                          Pexp_construct "()" (stdlib/format.ml[300,11048+29]..[300,11048+31])
                          None
                      <case>
                        pattern (stdlib/format.ml[301,11080+8]..[301,11080+47])
                          Ppat_or
                          pattern (stdlib/format.ml[301,11080+8]..[301,11080+38])
                            Ppat_or
                            pattern (stdlib/format.ml[301,11080+8]..[301,11080+26])
                              Ppat_or
                              pattern (stdlib/format.ml[301,11080+8]..[301,11080+15])
                                Ppat_construct "Pp_vbox" (stdlib/format.ml[301,11080+8]..[301,11080+15])
                                None
                              pattern (stdlib/format.ml[301,11080+18]..[301,11080+26])
                                Ppat_construct "Pp_hvbox" (stdlib/format.ml[301,11080+18]..[301,11080+26])
                                None
                            pattern (stdlib/format.ml[301,11080+29]..[301,11080+38])
                              Ppat_construct "Pp_hovbox" (stdlib/format.ml[301,11080+29]..[301,11080+38])
                              None
                          pattern (stdlib/format.ml[301,11080+41]..[301,11080+47])
                            Ppat_construct "Pp_box" (stdlib/format.ml[301,11080+41]..[301,11080+47])
                            None
                        expression (stdlib/format.ml[301,11080+51]..[301,11080+73])
                          Pexp_apply
                          expression (stdlib/format.ml[301,11080+51]..[301,11080+61])
                            Pexp_ident "break_line" (stdlib/format.ml[301,11080+51]..[301,11080+61])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[301,11080+62]..[301,11080+67])
                                Pexp_ident "state" (stdlib/format.ml[301,11080+62]..[301,11080+67])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[301,11080+68]..[301,11080+73])
                                Pexp_ident "width" (stdlib/format.ml[301,11080+68]..[301,11080+73])
                          ]
                    ]
                  None
            ]
    ]
  structure_item (stdlib/format.ml[305,11217+0]..[310,11454+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[305,11217+4]..[305,11217+17])
          Ppat_var "pp_skip_token" (stdlib/format.ml[305,11217+4]..[305,11217+17])
        expression (stdlib/format.ml[305,11217+18]..[310,11454+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[305,11217+18]..[305,11217+23])
            Ppat_var "state" (stdlib/format.ml[305,11217+18]..[305,11217+23])
          expression (stdlib/format.ml[306,11243+2]..[310,11454+65])
            Pexp_match
            expression (stdlib/format.ml[306,11243+8]..[306,11243+37])
              Pexp_apply
              expression (stdlib/format.ml[306,11243+8]..[306,11243+22])
                Pexp_ident "Queue.take_opt" (stdlib/format.ml[306,11243+8]..[306,11243+22])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[306,11243+23]..[306,11243+37])
                    Pexp_field
                    expression (stdlib/format.ml[306,11243+23]..[306,11243+28])
                      Pexp_ident "state" (stdlib/format.ml[306,11243+23]..[306,11243+28])
                    "pp_queue" (stdlib/format.ml[306,11243+29]..[306,11243+37])
              ]
            [
              <case>
                pattern (stdlib/format.ml[307,11286+4]..[307,11286+8])
                  Ppat_construct "None" (stdlib/format.ml[307,11286+4]..[307,11286+8])
                  None
                expression (stdlib/format.ml[307,11286+12]..[307,11286+14])
                  Pexp_construct "()" (stdlib/format.ml[307,11286+12]..[307,11286+14])
                  None
              <case>
                pattern (stdlib/format.ml[308,11365+4]..[308,11365+28])
                  Ppat_construct "Some" (stdlib/format.ml[308,11365+4]..[308,11365+8])
                  Some
                    []
                    pattern (stdlib/format.ml[308,11365+9]..[308,11365+28])
                      Ppat_record Open
                      [
                        "size" (stdlib/format.ml[308,11365+11]..[308,11365+15]) ghost
                          pattern (stdlib/format.ml[308,11365+11]..[308,11365+15])
                            Ppat_var "size" (stdlib/format.ml[308,11365+11]..[308,11365+15])
                        "length" (stdlib/format.ml[308,11365+17]..[308,11365+23]) ghost
                          pattern (stdlib/format.ml[308,11365+17]..[308,11365+23])
                            Ppat_var "length" (stdlib/format.ml[308,11365+17]..[308,11365+23])
                      ]
                expression (stdlib/format.ml[309,11397+4]..[310,11454+65])
                  Pexp_sequence
                  expression (stdlib/format.ml[309,11397+4]..[309,11397+55])
                    Pexp_setfield
                    expression (stdlib/format.ml[309,11397+4]..[309,11397+9])
                      Pexp_ident "state" (stdlib/format.ml[309,11397+4]..[309,11397+9])
                    "pp_left_total" (stdlib/format.ml[309,11397+10]..[309,11397+23])
                    expression (stdlib/format.ml[309,11397+27]..[309,11397+55])
                      Pexp_apply
                      expression (stdlib/format.ml[309,11397+47]..[309,11397+48])
                        Pexp_ident "-" (stdlib/format.ml[309,11397+47]..[309,11397+48])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[309,11397+27]..[309,11397+46])
                            Pexp_field
                            expression (stdlib/format.ml[309,11397+27]..[309,11397+32])
                              Pexp_ident "state" (stdlib/format.ml[309,11397+27]..[309,11397+32])
                            "pp_left_total" (stdlib/format.ml[309,11397+33]..[309,11397+46])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[309,11397+49]..[309,11397+55])
                            Pexp_ident "length" (stdlib/format.ml[309,11397+49]..[309,11397+55])
                      ]
                  expression (stdlib/format.ml[310,11454+4]..[310,11454+65])
                    Pexp_setfield
                    expression (stdlib/format.ml[310,11454+4]..[310,11454+9])
                      Pexp_ident "state" (stdlib/format.ml[310,11454+4]..[310,11454+9])
                    "pp_space_left" (stdlib/format.ml[310,11454+10]..[310,11454+23])
                    expression (stdlib/format.ml[310,11454+27]..[310,11454+65])
                      Pexp_apply
                      expression (stdlib/format.ml[310,11454+47]..[310,11454+48])
                        Pexp_ident "+" (stdlib/format.ml[310,11454+47]..[310,11454+48])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[310,11454+27]..[310,11454+46])
                            Pexp_field
                            expression (stdlib/format.ml[310,11454+27]..[310,11454+32])
                              Pexp_ident "state" (stdlib/format.ml[310,11454+27]..[310,11454+32])
                            "pp_space_left" (stdlib/format.ml[310,11454+33]..[310,11454+46])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[310,11454+49]..[310,11454+65])
                            Pexp_apply
                            expression (stdlib/format.ml[310,11454+49]..[310,11454+60])
                              Pexp_ident "Size.to_int" (stdlib/format.ml[310,11454+49]..[310,11454+60])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[310,11454+61]..[310,11454+65])
                                  Pexp_ident "size" (stdlib/format.ml[310,11454+61]..[310,11454+65])
                            ]
                      ]
            ]
    ]
  structure_item (stdlib/format.ml[320,11613+0]..[424,15286+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[320,11613+4]..[320,11613+19])
          Ppat_var "format_pp_token" (stdlib/format.ml[320,11613+4]..[320,11613+19])
        expression (stdlib/format.ml[320,11613+20]..[424,15286+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[320,11613+20]..[320,11613+25])
            Ppat_var "state" (stdlib/format.ml[320,11613+20]..[320,11613+25])
          expression (stdlib/format.ml[320,11613+26]..[424,15286+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[320,11613+26]..[320,11613+30])
              Ppat_var "size" (stdlib/format.ml[320,11613+26]..[320,11613+30])
            expression (stdlib/format.ml[320,11613+33]..[424,15286+8])
              Pexp_function
              [
                <case>
                  pattern (stdlib/format.ml[322,11656+4]..[322,11656+13])
                    Ppat_construct "Pp_text" (stdlib/format.ml[322,11656+4]..[322,11656+11])
                    Some
                      []
                      pattern (stdlib/format.ml[322,11656+12]..[322,11656+13])
                        Ppat_var "s" (stdlib/format.ml[322,11656+12]..[322,11656+13])
                  expression (stdlib/format.ml[323,11673+4]..[323,11673+31])
                    Pexp_apply
                    expression (stdlib/format.ml[323,11673+4]..[323,11673+18])
                      Pexp_ident "format_pp_text" (stdlib/format.ml[323,11673+4]..[323,11673+18])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[323,11673+19]..[323,11673+24])
                          Pexp_ident "state" (stdlib/format.ml[323,11673+19]..[323,11673+24])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[323,11673+25]..[323,11673+29])
                          Pexp_ident "size" (stdlib/format.ml[323,11673+25]..[323,11673+29])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[323,11673+30]..[323,11673+31])
                          Pexp_ident "s" (stdlib/format.ml[323,11673+30]..[323,11673+31])
                    ]
                <case>
                  pattern (stdlib/format.ml[325,11706+4]..[325,11706+22])
                    Ppat_construct "Pp_begin" (stdlib/format.ml[325,11706+4]..[325,11706+12])
                    Some
                      []
                      pattern (stdlib/format.ml[325,11706+13]..[325,11706+22])
                        Ppat_tuple
                        [
                          pattern (stdlib/format.ml[325,11706+14]..[325,11706+17])
                            Ppat_var "off" (stdlib/format.ml[325,11706+14]..[325,11706+17])
                          pattern (stdlib/format.ml[325,11706+19]..[325,11706+21])
                            Ppat_var "ty" (stdlib/format.ml[325,11706+19]..[325,11706+21])
                        ]
                  expression (stdlib/format.ml[326,11732+4]..[336,12170+56])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/format.ml[326,11732+8]..[326,11732+23])
                          Ppat_var "insertion_point" (stdlib/format.ml[326,11732+8]..[326,11732+23])
                        expression (stdlib/format.ml[326,11732+26]..[326,11732+63])
                          Pexp_apply
                          expression (stdlib/format.ml[326,11732+42]..[326,11732+43])
                            Pexp_ident "-" (stdlib/format.ml[326,11732+42]..[326,11732+43])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[326,11732+26]..[326,11732+41])
                                Pexp_field
                                expression (stdlib/format.ml[326,11732+26]..[326,11732+31])
                                  Pexp_ident "state" (stdlib/format.ml[326,11732+26]..[326,11732+31])
                                "pp_margin" (stdlib/format.ml[326,11732+32]..[326,11732+41])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[326,11732+44]..[326,11732+63])
                                Pexp_field
                                expression (stdlib/format.ml[326,11732+44]..[326,11732+49])
                                  Pexp_ident "state" (stdlib/format.ml[326,11732+44]..[326,11732+49])
                                "pp_space_left" (stdlib/format.ml[326,11732+50]..[326,11732+63])
                          ]
                    ]
                    expression (stdlib/format.ml[327,11799+4]..[336,12170+56])
                      Pexp_sequence
                      expression (stdlib/format.ml[327,11799+4]..[329,11893+41])
                        Pexp_ifthenelse
                        expression (stdlib/format.ml[327,11799+7]..[327,11799+44])
                          Pexp_apply
                          expression (stdlib/format.ml[327,11799+23]..[327,11799+24])
                            Pexp_ident ">" (stdlib/format.ml[327,11799+23]..[327,11799+24])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[327,11799+7]..[327,11799+22])
                                Pexp_ident "insertion_point" (stdlib/format.ml[327,11799+7]..[327,11799+22])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[327,11799+25]..[327,11799+44])
                                Pexp_field
                                expression (stdlib/format.ml[327,11799+25]..[327,11799+30])
                                  Pexp_ident "state" (stdlib/format.ml[327,11799+25]..[327,11799+30])
                                "pp_max_indent" (stdlib/format.ml[327,11799+31]..[327,11799+44])
                          ]
                        expression (stdlib/format.ml[329,11893+6]..[329,11893+41])
                          Pexp_apply
                          expression (stdlib/format.ml[329,11893+12]..[329,11893+31])
                            Pexp_ident "pp_force_break_line" (stdlib/format.ml[329,11893+12]..[329,11893+31])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[329,11893+32]..[329,11893+37])
                                Pexp_ident "state" (stdlib/format.ml[329,11893+32]..[329,11893+37])
                          ]
                        None
                      expression (stdlib/format.ml[330,11936+4]..[336,12170+56])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (stdlib/format.ml[330,11936+8]..[330,11936+13])
                              Ppat_var "width" (stdlib/format.ml[330,11936+8]..[330,11936+13])
                            expression (stdlib/format.ml[330,11936+16]..[330,11936+41])
                              Pexp_apply
                              expression (stdlib/format.ml[330,11936+36]..[330,11936+37])
                                Pexp_ident "-" (stdlib/format.ml[330,11936+36]..[330,11936+37])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[330,11936+16]..[330,11936+35])
                                    Pexp_field
                                    expression (stdlib/format.ml[330,11936+16]..[330,11936+21])
                                      Pexp_ident "state" (stdlib/format.ml[330,11936+16]..[330,11936+21])
                                    "pp_space_left" (stdlib/format.ml[330,11936+22]..[330,11936+35])
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[330,11936+38]..[330,11936+41])
                                    Pexp_ident "off" (stdlib/format.ml[330,11936+38]..[330,11936+41])
                              ]
                        ]
                        expression (stdlib/format.ml[331,11981+4]..[336,12170+56])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (stdlib/format.ml[331,11981+8]..[331,11981+16])
                                Ppat_var "box_type" (stdlib/format.ml[331,11981+8]..[331,11981+16])
                              expression (stdlib/format.ml[332,12000+6]..[335,12108+58])
                                Pexp_match
                                expression (stdlib/format.ml[332,12000+12]..[332,12000+14])
                                  Pexp_ident "ty" (stdlib/format.ml[332,12000+12]..[332,12000+14])
                                [
                                  <case>
                                    pattern (stdlib/format.ml[333,12020+8]..[333,12020+15])
                                      Ppat_construct "Pp_vbox" (stdlib/format.ml[333,12020+8]..[333,12020+15])
                                      None
                                    expression (stdlib/format.ml[333,12020+19]..[333,12020+26])
                                      Pexp_construct "Pp_vbox" (stdlib/format.ml[333,12020+19]..[333,12020+26])
                                      None
                                  <case>
                                    pattern (stdlib/format.ml[334,12047+8]..[334,12047+57])
                                      Ppat_or
                                      pattern (stdlib/format.ml[334,12047+8]..[334,12047+47])
                                        Ppat_or
                                        pattern (stdlib/format.ml[334,12047+8]..[334,12047+38])
                                          Ppat_or
                                          pattern (stdlib/format.ml[334,12047+8]..[334,12047+26])
                                            Ppat_or
                                            pattern (stdlib/format.ml[334,12047+8]..[334,12047+15])
                                              Ppat_construct "Pp_hbox" (stdlib/format.ml[334,12047+8]..[334,12047+15])
                                              None
                                            pattern (stdlib/format.ml[334,12047+18]..[334,12047+26])
                                              Ppat_construct "Pp_hvbox" (stdlib/format.ml[334,12047+18]..[334,12047+26])
                                              None
                                          pattern (stdlib/format.ml[334,12047+29]..[334,12047+38])
                                            Ppat_construct "Pp_hovbox" (stdlib/format.ml[334,12047+29]..[334,12047+38])
                                            None
                                        pattern (stdlib/format.ml[334,12047+41]..[334,12047+47])
                                          Ppat_construct "Pp_box" (stdlib/format.ml[334,12047+41]..[334,12047+47])
                                          None
                                      pattern (stdlib/format.ml[334,12047+50]..[334,12047+57])
                                        Ppat_construct "Pp_fits" (stdlib/format.ml[334,12047+50]..[334,12047+57])
                                        None
                                    expression (stdlib/format.ml[335,12108+8]..[335,12108+58])
                                      Pexp_ifthenelse
                                      expression (stdlib/format.ml[335,12108+11]..[335,12108+37])
                                        Pexp_apply
                                        expression (stdlib/format.ml[335,12108+16]..[335,12108+17])
                                          Pexp_ident ">" (stdlib/format.ml[335,12108+16]..[335,12108+17])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[335,12108+11]..[335,12108+15])
                                              Pexp_ident "size" (stdlib/format.ml[335,12108+11]..[335,12108+15])
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[335,12108+18]..[335,12108+37])
                                              Pexp_field
                                              expression (stdlib/format.ml[335,12108+18]..[335,12108+23])
                                                Pexp_ident "state" (stdlib/format.ml[335,12108+18]..[335,12108+23])
                                              "pp_space_left" (stdlib/format.ml[335,12108+24]..[335,12108+37])
                                        ]
                                      expression (stdlib/format.ml[335,12108+43]..[335,12108+45])
                                        Pexp_ident "ty" (stdlib/format.ml[335,12108+43]..[335,12108+45])
                                      Some
                                        expression (stdlib/format.ml[335,12108+51]..[335,12108+58])
                                          Pexp_construct "Pp_fits" (stdlib/format.ml[335,12108+51]..[335,12108+58])
                                          None
                                ]
                          ]
                          expression (stdlib/format.ml[336,12170+4]..[336,12170+56])
                            Pexp_apply
                            expression (stdlib/format.ml[336,12170+4]..[336,12170+14])
                              Pexp_ident "Stack.push" (stdlib/format.ml[336,12170+4]..[336,12170+14])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[336,12170+15]..[336,12170+34])
                                  Pexp_record
                                  [
                                    "box_type" (stdlib/format.ml[336,12170+17]..[336,12170+25]) ghost
                                      expression (stdlib/format.ml[336,12170+17]..[336,12170+25])
                                        Pexp_ident "box_type" (stdlib/format.ml[336,12170+17]..[336,12170+25])
                                    "width" (stdlib/format.ml[336,12170+27]..[336,12170+32]) ghost
                                      expression (stdlib/format.ml[336,12170+27]..[336,12170+32])
                                        Pexp_ident "width" (stdlib/format.ml[336,12170+27]..[336,12170+32])
                                  ]
                                  None
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[336,12170+35]..[336,12170+56])
                                  Pexp_field
                                  expression (stdlib/format.ml[336,12170+35]..[336,12170+40])
                                    Pexp_ident "state" (stdlib/format.ml[336,12170+35]..[336,12170+40])
                                  "pp_format_stack" (stdlib/format.ml[336,12170+41]..[336,12170+56])
                            ]
                <case>
                  pattern (stdlib/format.ml[338,12228+4]..[338,12228+10])
                    Ppat_construct "Pp_end" (stdlib/format.ml[338,12228+4]..[338,12228+10])
                    None
                  expression (stdlib/format.ml[339,12242+4]..[339,12242+49])
                    Pexp_apply
                    expression (stdlib/format.ml[339,12242+40]..[339,12242+42])
                      Pexp_ident "|>" (stdlib/format.ml[339,12242+40]..[339,12242+42])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[339,12242+4]..[339,12242+39])
                          Pexp_apply
                          expression (stdlib/format.ml[339,12242+4]..[339,12242+17])
                            Pexp_ident "Stack.pop_opt" (stdlib/format.ml[339,12242+4]..[339,12242+17])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[339,12242+18]..[339,12242+39])
                                Pexp_field
                                expression (stdlib/format.ml[339,12242+18]..[339,12242+23])
                                  Pexp_ident "state" (stdlib/format.ml[339,12242+18]..[339,12242+23])
                                "pp_format_stack" (stdlib/format.ml[339,12242+24]..[339,12242+39])
                          ]
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[339,12242+43]..[339,12242+49])
                          Pexp_ident "ignore" (stdlib/format.ml[339,12242+43]..[339,12242+49])
                    ]
                <case>
                  pattern (stdlib/format.ml[341,12293+4]..[341,12293+33])
                    Ppat_construct "Pp_tbegin" (stdlib/format.ml[341,12293+4]..[341,12293+13])
                    Some
                      []
                      pattern (stdlib/format.ml[341,12293+14]..[341,12293+33])
                        Ppat_alias "tbox" (stdlib/format.ml[341,12293+28]..[341,12293+32])
                        pattern (stdlib/format.ml[341,12293+15]..[341,12293+24])
                          Ppat_construct "Pp_tbox" (stdlib/format.ml[341,12293+15]..[341,12293+22])
                          Some
                            []
                            pattern (stdlib/format.ml[341,12293+23]..[341,12293+24])
                              Ppat_any
                  expression (stdlib/format.ml[342,12330+4]..[342,12330+39])
                    Pexp_apply
                    expression (stdlib/format.ml[342,12330+4]..[342,12330+14])
                      Pexp_ident "Stack.push" (stdlib/format.ml[342,12330+4]..[342,12330+14])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[342,12330+15]..[342,12330+19])
                          Pexp_ident "tbox" (stdlib/format.ml[342,12330+15]..[342,12330+19])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[342,12330+20]..[342,12330+39])
                          Pexp_field
                          expression (stdlib/format.ml[342,12330+20]..[342,12330+25])
                            Pexp_ident "state" (stdlib/format.ml[342,12330+20]..[342,12330+25])
                          "pp_tbox_stack" (stdlib/format.ml[342,12330+26]..[342,12330+39])
                    ]
                <case>
                  pattern (stdlib/format.ml[344,12371+4]..[344,12371+11])
                    Ppat_construct "Pp_tend" (stdlib/format.ml[344,12371+4]..[344,12371+11])
                    None
                  expression (stdlib/format.ml[345,12386+4]..[345,12386+47])
                    Pexp_apply
                    expression (stdlib/format.ml[345,12386+38]..[345,12386+40])
                      Pexp_ident "|>" (stdlib/format.ml[345,12386+38]..[345,12386+40])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[345,12386+4]..[345,12386+37])
                          Pexp_apply
                          expression (stdlib/format.ml[345,12386+4]..[345,12386+17])
                            Pexp_ident "Stack.pop_opt" (stdlib/format.ml[345,12386+4]..[345,12386+17])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[345,12386+18]..[345,12386+37])
                                Pexp_field
                                expression (stdlib/format.ml[345,12386+18]..[345,12386+23])
                                  Pexp_ident "state" (stdlib/format.ml[345,12386+18]..[345,12386+23])
                                "pp_tbox_stack" (stdlib/format.ml[345,12386+24]..[345,12386+37])
                          ]
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[345,12386+41]..[345,12386+47])
                          Pexp_ident "ignore" (stdlib/format.ml[345,12386+41]..[345,12386+47])
                    ]
                <case>
                  pattern (stdlib/format.ml[347,12435+4]..[347,12435+11])
                    Ppat_construct "Pp_stab" (stdlib/format.ml[347,12435+4]..[347,12435+11])
                    None
                  expression (stdlib/format.ml[348,12450+4]..[355,12777+7])
                    Pexp_match
                    expression (stdlib/format.ml[348,12450+16]..[348,12450+49])
                      Pexp_apply
                      expression (stdlib/format.ml[348,12450+16]..[348,12450+29])
                        Pexp_ident "Stack.top_opt" (stdlib/format.ml[348,12450+16]..[348,12450+29])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[348,12450+30]..[348,12450+49])
                            Pexp_field
                            expression (stdlib/format.ml[348,12450+30]..[348,12450+35])
                              Pexp_ident "state" (stdlib/format.ml[348,12450+30]..[348,12450+35])
                            "pp_tbox_stack" (stdlib/format.ml[348,12450+36]..[348,12450+49])
                      ]
                    [
                      <case>
                        pattern (stdlib/format.ml[349,12505+6]..[349,12505+10])
                          Ppat_construct "None" (stdlib/format.ml[349,12505+6]..[349,12505+10])
                          None
                        expression (stdlib/format.ml[349,12505+14]..[349,12505+16])
                          Pexp_construct "()" (stdlib/format.ml[349,12505+14]..[349,12505+16])
                          None
                      <case>
                        pattern (stdlib/format.ml[350,12552+6]..[350,12552+25])
                          Ppat_construct "Some" (stdlib/format.ml[350,12552+6]..[350,12552+10])
                          Some
                            []
                            pattern (stdlib/format.ml[350,12552+11]..[350,12552+25])
                              Ppat_construct "Pp_tbox" (stdlib/format.ml[350,12552+12]..[350,12552+19])
                              Some
                                []
                                pattern (stdlib/format.ml[350,12552+20]..[350,12552+24])
                                  Ppat_var "tabs" (stdlib/format.ml[350,12552+20]..[350,12552+24])
                        expression (stdlib/format.ml[351,12581+6]..[354,12709+67])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (stdlib/format.ml[351,12581+14]..[351,12581+21])
                                Ppat_var "add_tab" (stdlib/format.ml[351,12581+14]..[351,12581+21])
                              expression (stdlib/format.ml[351,12581+22]..[353,12636+69]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (stdlib/format.ml[351,12581+22]..[351,12581+23])
                                  Ppat_var "n" (stdlib/format.ml[351,12581+22]..[351,12581+23])
                                expression (stdlib/format.ml[351,12581+26]..[353,12636+69])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (stdlib/format.ml[352,12616+10]..[352,12616+12])
                                        Ppat_construct "[]" (stdlib/format.ml[352,12616+10]..[352,12616+12])
                                        None
                                      expression (stdlib/format.ml[352,12616+16]..[352,12616+19])
                                        Pexp_construct "::" (stdlib/format.ml[352,12616+17]..[352,12616+19]) ghost
                                        Some
                                          expression (stdlib/format.ml[352,12616+17]..[352,12616+19]) ghost
                                            Pexp_tuple
                                            [
                                              expression (stdlib/format.ml[352,12616+17]..[352,12616+18])
                                                Pexp_ident "n" (stdlib/format.ml[352,12616+17]..[352,12616+18])
                                              expression (stdlib/format.ml[352,12616+18]..[352,12616+19]) ghost
                                                Pexp_construct "[]" (stdlib/format.ml[352,12616+18]..[352,12616+19]) ghost
                                                None
                                            ]
                                    <case>
                                      pattern (stdlib/format.ml[353,12636+10]..[353,12636+22])
                                        Ppat_alias "ls" (stdlib/format.ml[353,12636+20]..[353,12636+22])
                                        pattern (stdlib/format.ml[353,12636+10]..[353,12636+16])
                                          Ppat_construct "::" (stdlib/format.ml[353,12636+12]..[353,12636+14])
                                          Some
                                            []
                                            pattern (stdlib/format.ml[353,12636+10]..[353,12636+16]) ghost
                                              Ppat_tuple
                                              [
                                                pattern (stdlib/format.ml[353,12636+10]..[353,12636+11])
                                                  Ppat_var "x" (stdlib/format.ml[353,12636+10]..[353,12636+11])
                                                pattern (stdlib/format.ml[353,12636+15]..[353,12636+16])
                                                  Ppat_var "l" (stdlib/format.ml[353,12636+15]..[353,12636+16])
                                              ]
                                      expression (stdlib/format.ml[353,12636+26]..[353,12636+69])
                                        Pexp_ifthenelse
                                        expression (stdlib/format.ml[353,12636+29]..[353,12636+34])
                                          Pexp_apply
                                          expression (stdlib/format.ml[353,12636+31]..[353,12636+32])
                                            Pexp_ident "<" (stdlib/format.ml[353,12636+31]..[353,12636+32])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/format.ml[353,12636+29]..[353,12636+30])
                                                Pexp_ident "n" (stdlib/format.ml[353,12636+29]..[353,12636+30])
                                            <arg>
                                            Nolabel
                                              expression (stdlib/format.ml[353,12636+33]..[353,12636+34])
                                                Pexp_ident "x" (stdlib/format.ml[353,12636+33]..[353,12636+34])
                                          ]
                                        expression (stdlib/format.ml[353,12636+40]..[353,12636+47])
                                          Pexp_construct "::" (stdlib/format.ml[353,12636+42]..[353,12636+44])
                                          Some
                                            expression (stdlib/format.ml[353,12636+40]..[353,12636+47]) ghost
                                              Pexp_tuple
                                              [
                                                expression (stdlib/format.ml[353,12636+40]..[353,12636+41])
                                                  Pexp_ident "n" (stdlib/format.ml[353,12636+40]..[353,12636+41])
                                                expression (stdlib/format.ml[353,12636+45]..[353,12636+47])
                                                  Pexp_ident "ls" (stdlib/format.ml[353,12636+45]..[353,12636+47])
                                              ]
                                        Some
                                          expression (stdlib/format.ml[353,12636+53]..[353,12636+69])
                                            Pexp_construct "::" (stdlib/format.ml[353,12636+55]..[353,12636+57])
                                            Some
                                              expression (stdlib/format.ml[353,12636+53]..[353,12636+69]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (stdlib/format.ml[353,12636+53]..[353,12636+54])
                                                    Pexp_ident "x" (stdlib/format.ml[353,12636+53]..[353,12636+54])
                                                  expression (stdlib/format.ml[353,12636+58]..[353,12636+69])
                                                    Pexp_apply
                                                    expression (stdlib/format.ml[353,12636+58]..[353,12636+65])
                                                      Pexp_ident "add_tab" (stdlib/format.ml[353,12636+58]..[353,12636+65])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (stdlib/format.ml[353,12636+66]..[353,12636+67])
                                                          Pexp_ident "n" (stdlib/format.ml[353,12636+66]..[353,12636+67])
                                                      <arg>
                                                      Nolabel
                                                        expression (stdlib/format.ml[353,12636+68]..[353,12636+69])
                                                          Pexp_ident "l" (stdlib/format.ml[353,12636+68]..[353,12636+69])
                                                    ]
                                                ]
                                  ]
                          ]
                          expression (stdlib/format.ml[354,12709+6]..[354,12709+67])
                            Pexp_apply
                            expression (stdlib/format.ml[354,12709+11]..[354,12709+13])
                              Pexp_ident ":=" (stdlib/format.ml[354,12709+11]..[354,12709+13])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[354,12709+6]..[354,12709+10])
                                  Pexp_ident "tabs" (stdlib/format.ml[354,12709+6]..[354,12709+10])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[354,12709+14]..[354,12709+67])
                                  Pexp_apply
                                  expression (stdlib/format.ml[354,12709+14]..[354,12709+21])
                                    Pexp_ident "add_tab" (stdlib/format.ml[354,12709+14]..[354,12709+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[354,12709+22]..[354,12709+61])
                                        Pexp_apply
                                        expression (stdlib/format.ml[354,12709+39]..[354,12709+40])
                                          Pexp_ident "-" (stdlib/format.ml[354,12709+39]..[354,12709+40])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[354,12709+23]..[354,12709+38])
                                              Pexp_field
                                              expression (stdlib/format.ml[354,12709+23]..[354,12709+28])
                                                Pexp_ident "state" (stdlib/format.ml[354,12709+23]..[354,12709+28])
                                              "pp_margin" (stdlib/format.ml[354,12709+29]..[354,12709+38])
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[354,12709+41]..[354,12709+60])
                                              Pexp_field
                                              expression (stdlib/format.ml[354,12709+41]..[354,12709+46])
                                                Pexp_ident "state" (stdlib/format.ml[354,12709+41]..[354,12709+46])
                                              "pp_space_left" (stdlib/format.ml[354,12709+47]..[354,12709+60])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[354,12709+62]..[354,12709+67])
                                        Pexp_apply
                                        expression (stdlib/format.ml[354,12709+62]..[354,12709+63])
                                          Pexp_ident "!" (stdlib/format.ml[354,12709+62]..[354,12709+63])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[354,12709+63]..[354,12709+67])
                                              Pexp_ident "tabs" (stdlib/format.ml[354,12709+63]..[354,12709+67])
                                        ]
                                  ]
                            ]
                    ]
                <case>
                  pattern (stdlib/format.ml[357,12786+4]..[357,12786+22])
                    Ppat_construct "Pp_tbreak" (stdlib/format.ml[357,12786+4]..[357,12786+13])
                    Some
                      []
                      pattern (stdlib/format.ml[357,12786+14]..[357,12786+22])
                        Ppat_tuple
                        [
                          pattern (stdlib/format.ml[357,12786+15]..[357,12786+16])
                            Ppat_var "n" (stdlib/format.ml[357,12786+15]..[357,12786+16])
                          pattern (stdlib/format.ml[357,12786+18]..[357,12786+21])
                            Ppat_var "off" (stdlib/format.ml[357,12786+18]..[357,12786+21])
                        ]
                  expression (stdlib/format.ml[358,12812+4]..[375,13477+7])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/format.ml[358,12812+8]..[358,12812+23])
                          Ppat_var "insertion_point" (stdlib/format.ml[358,12812+8]..[358,12812+23])
                        expression (stdlib/format.ml[358,12812+26]..[358,12812+63])
                          Pexp_apply
                          expression (stdlib/format.ml[358,12812+42]..[358,12812+43])
                            Pexp_ident "-" (stdlib/format.ml[358,12812+42]..[358,12812+43])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[358,12812+26]..[358,12812+41])
                                Pexp_field
                                expression (stdlib/format.ml[358,12812+26]..[358,12812+31])
                                  Pexp_ident "state" (stdlib/format.ml[358,12812+26]..[358,12812+31])
                                "pp_margin" (stdlib/format.ml[358,12812+32]..[358,12812+41])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[358,12812+44]..[358,12812+63])
                                Pexp_field
                                expression (stdlib/format.ml[358,12812+44]..[358,12812+49])
                                  Pexp_ident "state" (stdlib/format.ml[358,12812+44]..[358,12812+49])
                                "pp_space_left" (stdlib/format.ml[358,12812+50]..[358,12812+63])
                          ]
                    ]
                    expression (stdlib/format.ml[359,12879+4]..[375,13477+7])
                      Pexp_match
                      expression (stdlib/format.ml[359,12879+16]..[359,12879+49])
                        Pexp_apply
                        expression (stdlib/format.ml[359,12879+16]..[359,12879+29])
                          Pexp_ident "Stack.top_opt" (stdlib/format.ml[359,12879+16]..[359,12879+29])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[359,12879+30]..[359,12879+49])
                              Pexp_field
                              expression (stdlib/format.ml[359,12879+30]..[359,12879+35])
                                Pexp_ident "state" (stdlib/format.ml[359,12879+30]..[359,12879+35])
                              "pp_tbox_stack" (stdlib/format.ml[359,12879+36]..[359,12879+49])
                        ]
                      [
                        <case>
                          pattern (stdlib/format.ml[360,12934+6]..[360,12934+10])
                            Ppat_construct "None" (stdlib/format.ml[360,12934+6]..[360,12934+10])
                            None
                          expression (stdlib/format.ml[360,12934+14]..[360,12934+16])
                            Pexp_construct "()" (stdlib/format.ml[360,12934+14]..[360,12934+16])
                            None
                        <case>
                          pattern (stdlib/format.ml[361,12981+6]..[361,12981+25])
                            Ppat_construct "Some" (stdlib/format.ml[361,12981+6]..[361,12981+10])
                            Some
                              []
                              pattern (stdlib/format.ml[361,12981+11]..[361,12981+25])
                                Ppat_construct "Pp_tbox" (stdlib/format.ml[361,12981+12]..[361,12981+19])
                                Some
                                  []
                                  pattern (stdlib/format.ml[361,12981+20]..[361,12981+24])
                                    Ppat_var "tabs" (stdlib/format.ml[361,12981+20]..[361,12981+24])
                          expression (stdlib/format.ml[362,13010+6]..[374,13409+67])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (stdlib/format.ml[362,13010+10]..[362,13010+13])
                                  Ppat_var "tab" (stdlib/format.ml[362,13010+10]..[362,13010+13])
                                expression (stdlib/format.ml[363,13026+8]..[370,13266+20])
                                  Pexp_match
                                  expression (stdlib/format.ml[363,13026+14]..[363,13026+19])
                                    Pexp_apply
                                    expression (stdlib/format.ml[363,13026+14]..[363,13026+15])
                                      Pexp_ident "!" (stdlib/format.ml[363,13026+14]..[363,13026+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[363,13026+15]..[363,13026+19])
                                          Pexp_ident "tabs" (stdlib/format.ml[363,13026+15]..[363,13026+19])
                                    ]
                                  [
                                    <case>
                                      pattern (stdlib/format.ml[364,13051+10]..[364,13051+12])
                                        Ppat_construct "[]" (stdlib/format.ml[364,13051+10]..[364,13051+12])
                                        None
                                      expression (stdlib/format.ml[364,13051+16]..[364,13051+31])
                                        Pexp_ident "insertion_point" (stdlib/format.ml[364,13051+16]..[364,13051+31])
                                    <case>
                                      pattern (stdlib/format.ml[365,13083+10]..[365,13083+20])
                                        Ppat_construct "::" (stdlib/format.ml[365,13083+16]..[365,13083+18])
                                        Some
                                          []
                                          pattern (stdlib/format.ml[365,13083+10]..[365,13083+20]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (stdlib/format.ml[365,13083+10]..[365,13083+15])
                                                Ppat_var "first" (stdlib/format.ml[365,13083+10]..[365,13083+15])
                                              pattern (stdlib/format.ml[365,13083+19]..[365,13083+20])
                                                Ppat_any
                                            ]
                                      expression (stdlib/format.ml[366,13107+10]..[370,13266+20])
                                        Pexp_let Rec
                                        [
                                          <def>
                                            pattern (stdlib/format.ml[366,13107+18]..[366,13107+22])
                                              Ppat_var "find" (stdlib/format.ml[366,13107+18]..[366,13107+22])
                                            expression (stdlib/format.ml[366,13107+25]..[369,13237+25])
                                              Pexp_function
                                              [
                                                <case>
                                                  pattern (stdlib/format.ml[367,13141+14]..[367,13141+26])
                                                    Ppat_construct "::" (stdlib/format.ml[367,13141+19]..[367,13141+21])
                                                    Some
                                                      []
                                                      pattern (stdlib/format.ml[367,13141+14]..[367,13141+26]) ghost
                                                        Ppat_tuple
                                                        [
                                                          pattern (stdlib/format.ml[367,13141+14]..[367,13141+18])
                                                            Ppat_var "head" (stdlib/format.ml[367,13141+14]..[367,13141+18])
                                                          pattern (stdlib/format.ml[367,13141+22]..[367,13141+26])
                                                            Ppat_var "tail" (stdlib/format.ml[367,13141+22]..[367,13141+26])
                                                        ]
                                                  expression (stdlib/format.ml[368,13171+14]..[368,13171+65])
                                                    Pexp_ifthenelse
                                                    expression (stdlib/format.ml[368,13171+17]..[368,13171+40])
                                                      Pexp_apply
                                                      expression (stdlib/format.ml[368,13171+22]..[368,13171+24])
                                                        Pexp_ident ">=" (stdlib/format.ml[368,13171+22]..[368,13171+24])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (stdlib/format.ml[368,13171+17]..[368,13171+21])
                                                            Pexp_ident "head" (stdlib/format.ml[368,13171+17]..[368,13171+21])
                                                        <arg>
                                                        Nolabel
                                                          expression (stdlib/format.ml[368,13171+25]..[368,13171+40])
                                                            Pexp_ident "insertion_point" (stdlib/format.ml[368,13171+25]..[368,13171+40])
                                                      ]
                                                    expression (stdlib/format.ml[368,13171+46]..[368,13171+50])
                                                      Pexp_ident "head" (stdlib/format.ml[368,13171+46]..[368,13171+50])
                                                    Some
                                                      expression (stdlib/format.ml[368,13171+56]..[368,13171+65])
                                                        Pexp_apply
                                                        expression (stdlib/format.ml[368,13171+56]..[368,13171+60])
                                                          Pexp_ident "find" (stdlib/format.ml[368,13171+56]..[368,13171+60])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (stdlib/format.ml[368,13171+61]..[368,13171+65])
                                                              Pexp_ident "tail" (stdlib/format.ml[368,13171+61]..[368,13171+65])
                                                        ]
                                                <case>
                                                  pattern (stdlib/format.ml[369,13237+14]..[369,13237+16])
                                                    Ppat_construct "[]" (stdlib/format.ml[369,13237+14]..[369,13237+16])
                                                    None
                                                  expression (stdlib/format.ml[369,13237+20]..[369,13237+25])
                                                    Pexp_ident "first" (stdlib/format.ml[369,13237+20]..[369,13237+25])
                                              ]
                                        ]
                                        expression (stdlib/format.ml[370,13266+10]..[370,13266+20])
                                          Pexp_apply
                                          expression (stdlib/format.ml[370,13266+10]..[370,13266+14])
                                            Pexp_ident "find" (stdlib/format.ml[370,13266+10]..[370,13266+14])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/format.ml[370,13266+15]..[370,13266+20])
                                                Pexp_apply
                                                expression (stdlib/format.ml[370,13266+15]..[370,13266+16])
                                                  Pexp_ident "!" (stdlib/format.ml[370,13266+15]..[370,13266+16])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (stdlib/format.ml[370,13266+16]..[370,13266+20])
                                                      Pexp_ident "tabs" (stdlib/format.ml[370,13266+16]..[370,13266+20])
                                                ]
                                          ]
                                  ]
                            ]
                            expression (stdlib/format.ml[371,13290+6]..[374,13409+67])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (stdlib/format.ml[371,13290+10]..[371,13290+16])
                                    Ppat_var "offset" (stdlib/format.ml[371,13290+10]..[371,13290+16])
                                  expression (stdlib/format.ml[371,13290+19]..[371,13290+40])
                                    Pexp_apply
                                    expression (stdlib/format.ml[371,13290+23]..[371,13290+24])
                                      Pexp_ident "-" (stdlib/format.ml[371,13290+23]..[371,13290+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[371,13290+19]..[371,13290+22])
                                          Pexp_ident "tab" (stdlib/format.ml[371,13290+19]..[371,13290+22])
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[371,13290+25]..[371,13290+40])
                                          Pexp_ident "insertion_point" (stdlib/format.ml[371,13290+25]..[371,13290+40])
                                    ]
                              ]
                              expression (stdlib/format.ml[372,13334+6]..[374,13409+67])
                                Pexp_ifthenelse
                                expression (stdlib/format.ml[372,13334+9]..[372,13334+20])
                                  Pexp_apply
                                  expression (stdlib/format.ml[372,13334+16]..[372,13334+18])
                                    Pexp_ident ">=" (stdlib/format.ml[372,13334+16]..[372,13334+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[372,13334+9]..[372,13334+15])
                                        Pexp_ident "offset" (stdlib/format.ml[372,13334+9]..[372,13334+15])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[372,13334+19]..[372,13334+20])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                                expression (stdlib/format.ml[373,13355+11]..[373,13355+53])
                                  Pexp_apply
                                  expression (stdlib/format.ml[373,13355+11]..[373,13355+26])
                                    Pexp_ident "break_same_line" (stdlib/format.ml[373,13355+11]..[373,13355+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[373,13355+27]..[373,13355+32])
                                        Pexp_ident "state" (stdlib/format.ml[373,13355+27]..[373,13355+32])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[373,13355+33]..[373,13355+53])
                                        Pexp_tuple
                                        [
                                          expression (stdlib/format.ml[373,13355+34]..[373,13355+36])
                                            Pexp_constant PConst_string("",(stdlib/format.ml[373,13355+35]..[373,13355+35]),None)
                                          expression (stdlib/format.ml[373,13355+38]..[373,13355+48])
                                            Pexp_apply
                                            expression (stdlib/format.ml[373,13355+45]..[373,13355+46])
                                              Pexp_ident "+" (stdlib/format.ml[373,13355+45]..[373,13355+46])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (stdlib/format.ml[373,13355+38]..[373,13355+44])
                                                  Pexp_ident "offset" (stdlib/format.ml[373,13355+38]..[373,13355+44])
                                              <arg>
                                              Nolabel
                                                expression (stdlib/format.ml[373,13355+47]..[373,13355+48])
                                                  Pexp_ident "n" (stdlib/format.ml[373,13355+47]..[373,13355+48])
                                            ]
                                          expression (stdlib/format.ml[373,13355+50]..[373,13355+52])
                                            Pexp_constant PConst_string("",(stdlib/format.ml[373,13355+51]..[373,13355+51]),None)
                                        ]
                                  ]
                                Some
                                  expression (stdlib/format.ml[374,13409+11]..[374,13409+67])
                                    Pexp_apply
                                    expression (stdlib/format.ml[374,13409+11]..[374,13409+25])
                                      Pexp_ident "break_new_line" (stdlib/format.ml[374,13409+11]..[374,13409+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[374,13409+26]..[374,13409+31])
                                          Pexp_ident "state" (stdlib/format.ml[374,13409+26]..[374,13409+31])
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[374,13409+32]..[374,13409+51])
                                          Pexp_tuple
                                          [
                                            expression (stdlib/format.ml[374,13409+33]..[374,13409+35])
                                              Pexp_constant PConst_string("",(stdlib/format.ml[374,13409+34]..[374,13409+34]),None)
                                            expression (stdlib/format.ml[374,13409+37]..[374,13409+46])
                                              Pexp_apply
                                              expression (stdlib/format.ml[374,13409+41]..[374,13409+42])
                                                Pexp_ident "+" (stdlib/format.ml[374,13409+41]..[374,13409+42])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/format.ml[374,13409+37]..[374,13409+40])
                                                    Pexp_ident "tab" (stdlib/format.ml[374,13409+37]..[374,13409+40])
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/format.ml[374,13409+43]..[374,13409+46])
                                                    Pexp_ident "off" (stdlib/format.ml[374,13409+43]..[374,13409+46])
                                              ]
                                            expression (stdlib/format.ml[374,13409+48]..[374,13409+50])
                                              Pexp_constant PConst_string("",(stdlib/format.ml[374,13409+49]..[374,13409+49]),None)
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[374,13409+52]..[374,13409+67])
                                          Pexp_field
                                          expression (stdlib/format.ml[374,13409+52]..[374,13409+57])
                                            Pexp_ident "state" (stdlib/format.ml[374,13409+52]..[374,13409+57])
                                          "pp_margin" (stdlib/format.ml[374,13409+58]..[374,13409+67])
                                    ]
                      ]
                <case>
                  pattern (stdlib/format.ml[377,13486+4]..[377,13486+14])
                    Ppat_construct "Pp_newline" (stdlib/format.ml[377,13486+4]..[377,13486+14])
                    None
                  expression (stdlib/format.ml[378,13504+4]..[381,13667+7])
                    Pexp_match
                    expression (stdlib/format.ml[378,13504+16]..[378,13504+51])
                      Pexp_apply
                      expression (stdlib/format.ml[378,13504+16]..[378,13504+29])
                        Pexp_ident "Stack.top_opt" (stdlib/format.ml[378,13504+16]..[378,13504+29])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[378,13504+30]..[378,13504+51])
                            Pexp_field
                            expression (stdlib/format.ml[378,13504+30]..[378,13504+35])
                              Pexp_ident "state" (stdlib/format.ml[378,13504+30]..[378,13504+35])
                            "pp_format_stack" (stdlib/format.ml[378,13504+36]..[378,13504+51])
                      ]
                    [
                      <case>
                        pattern (stdlib/format.ml[379,13561+6]..[379,13561+10])
                          Ppat_construct "None" (stdlib/format.ml[379,13561+6]..[379,13561+10])
                          None
                        expression (stdlib/format.ml[379,13561+14]..[379,13561+37])
                          Pexp_apply
                          expression (stdlib/format.ml[379,13561+14]..[379,13561+31])
                            Pexp_ident "pp_output_newline" (stdlib/format.ml[379,13561+14]..[379,13561+31])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[379,13561+32]..[379,13561+37])
                                Pexp_ident "state" (stdlib/format.ml[379,13561+32]..[379,13561+37])
                          ]
                      <case>
                        pattern (stdlib/format.ml[380,13618+6]..[380,13618+22])
                          Ppat_construct "Some" (stdlib/format.ml[380,13618+6]..[380,13618+10])
                          Some
                            []
                            pattern (stdlib/format.ml[380,13618+11]..[380,13618+22])
                              Ppat_record Open
                              [
                                "width" (stdlib/format.ml[380,13618+13]..[380,13618+18]) ghost
                                  pattern (stdlib/format.ml[380,13618+13]..[380,13618+18])
                                    Ppat_var "width" (stdlib/format.ml[380,13618+13]..[380,13618+18])
                              ]
                        expression (stdlib/format.ml[380,13618+26]..[380,13618+48])
                          Pexp_apply
                          expression (stdlib/format.ml[380,13618+26]..[380,13618+36])
                            Pexp_ident "break_line" (stdlib/format.ml[380,13618+26]..[380,13618+36])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[380,13618+37]..[380,13618+42])
                                Pexp_ident "state" (stdlib/format.ml[380,13618+37]..[380,13618+42])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[380,13618+43]..[380,13618+48])
                                Pexp_ident "width" (stdlib/format.ml[380,13618+43]..[380,13618+48])
                          ]
                    ]
                <case>
                  pattern (stdlib/format.ml[383,13676+4]..[383,13676+17])
                    Ppat_construct "Pp_if_newline" (stdlib/format.ml[383,13676+4]..[383,13676+17])
                    None
                  expression (stdlib/format.ml[384,13697+4]..[385,13769+28])
                    Pexp_ifthenelse
                    expression (stdlib/format.ml[384,13697+7]..[384,13697+71])
                      Pexp_apply
                      expression (stdlib/format.ml[384,13697+31]..[384,13697+33])
                        Pexp_ident "!=" (stdlib/format.ml[384,13697+31]..[384,13697+33])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[384,13697+7]..[384,13697+30])
                            Pexp_field
                            expression (stdlib/format.ml[384,13697+7]..[384,13697+12])
                              Pexp_ident "state" (stdlib/format.ml[384,13697+7]..[384,13697+12])
                            "pp_current_indent" (stdlib/format.ml[384,13697+13]..[384,13697+30])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[384,13697+34]..[384,13697+71])
                            Pexp_apply
                            expression (stdlib/format.ml[384,13697+50]..[384,13697+51])
                              Pexp_ident "-" (stdlib/format.ml[384,13697+50]..[384,13697+51])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[384,13697+34]..[384,13697+49])
                                  Pexp_field
                                  expression (stdlib/format.ml[384,13697+34]..[384,13697+39])
                                    Pexp_ident "state" (stdlib/format.ml[384,13697+34]..[384,13697+39])
                                  "pp_margin" (stdlib/format.ml[384,13697+40]..[384,13697+49])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[384,13697+52]..[384,13697+71])
                                  Pexp_field
                                  expression (stdlib/format.ml[384,13697+52]..[384,13697+57])
                                    Pexp_ident "state" (stdlib/format.ml[384,13697+52]..[384,13697+57])
                                  "pp_space_left" (stdlib/format.ml[384,13697+58]..[384,13697+71])
                            ]
                      ]
                    expression (stdlib/format.ml[385,13769+9]..[385,13769+28])
                      Pexp_apply
                      expression (stdlib/format.ml[385,13769+9]..[385,13769+22])
                        Pexp_ident "pp_skip_token" (stdlib/format.ml[385,13769+9]..[385,13769+22])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[385,13769+23]..[385,13769+28])
                            Pexp_ident "state" (stdlib/format.ml[385,13769+23]..[385,13769+28])
                      ]
                    None
                <case>
                  pattern (stdlib/format.ml[387,13799+4]..[387,13799+29])
                    Ppat_construct "Pp_break" (stdlib/format.ml[387,13799+4]..[387,13799+12])
                    Some
                      []
                      pattern (stdlib/format.ml[387,13799+13]..[387,13799+29])
                        Ppat_record Closed
                        [
                          "fits" (stdlib/format.ml[387,13799+15]..[387,13799+19]) ghost
                            pattern (stdlib/format.ml[387,13799+15]..[387,13799+19])
                              Ppat_var "fits" (stdlib/format.ml[387,13799+15]..[387,13799+19])
                          "breaks" (stdlib/format.ml[387,13799+21]..[387,13799+27]) ghost
                            pattern (stdlib/format.ml[387,13799+21]..[387,13799+27])
                              Ppat_var "breaks" (stdlib/format.ml[387,13799+21]..[387,13799+27])
                        ]
                  expression (stdlib/format.ml[388,13832+4]..[411,14873+7])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/format.ml[388,13832+8]..[388,13832+22])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[388,13832+8]..[388,13832+14])
                              Ppat_var "before" (stdlib/format.ml[388,13832+8]..[388,13832+14])
                            pattern (stdlib/format.ml[388,13832+16]..[388,13832+19])
                              Ppat_var "off" (stdlib/format.ml[388,13832+16]..[388,13832+19])
                            pattern (stdlib/format.ml[388,13832+21]..[388,13832+22])
                              Ppat_any
                          ]
                        expression (stdlib/format.ml[388,13832+25]..[388,13832+31])
                          Pexp_ident "breaks" (stdlib/format.ml[388,13832+25]..[388,13832+31])
                    ]
                    expression (stdlib/format.ml[389,13867+4]..[411,14873+7])
                      Pexp_match
                      expression (stdlib/format.ml[389,13867+16]..[389,13867+51])
                        Pexp_apply
                        expression (stdlib/format.ml[389,13867+16]..[389,13867+29])
                          Pexp_ident "Stack.top_opt" (stdlib/format.ml[389,13867+16]..[389,13867+29])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[389,13867+30]..[389,13867+51])
                              Pexp_field
                              expression (stdlib/format.ml[389,13867+30]..[389,13867+35])
                                Pexp_ident "state" (stdlib/format.ml[389,13867+30]..[389,13867+35])
                              "pp_format_stack" (stdlib/format.ml[389,13867+36]..[389,13867+51])
                        ]
                      [
                        <case>
                          pattern (stdlib/format.ml[390,13924+6]..[390,13924+10])
                            Ppat_construct "None" (stdlib/format.ml[390,13924+6]..[390,13924+10])
                            None
                          expression (stdlib/format.ml[390,13924+14]..[390,13924+16])
                            Pexp_construct "()" (stdlib/format.ml[390,13924+14]..[390,13924+16])
                            None
                        <case>
                          pattern (stdlib/format.ml[391,13960+6]..[391,13960+30])
                            Ppat_construct "Some" (stdlib/format.ml[391,13960+6]..[391,13960+10])
                            Some
                              []
                              pattern (stdlib/format.ml[391,13960+11]..[391,13960+30])
                                Ppat_record Closed
                                [
                                  "box_type" (stdlib/format.ml[391,13960+13]..[391,13960+21]) ghost
                                    pattern (stdlib/format.ml[391,13960+13]..[391,13960+21])
                                      Ppat_var "box_type" (stdlib/format.ml[391,13960+13]..[391,13960+21])
                                  "width" (stdlib/format.ml[391,13960+23]..[391,13960+28]) ghost
                                    pattern (stdlib/format.ml[391,13960+23]..[391,13960+28])
                                      Ppat_var "width" (stdlib/format.ml[391,13960+23]..[391,13960+28])
                                ]
                          expression (stdlib/format.ml[392,13994+6]..[410,14863+9])
                            Pexp_match
                            expression (stdlib/format.ml[392,13994+18]..[392,13994+26])
                              Pexp_ident "box_type" (stdlib/format.ml[392,13994+18]..[392,13994+26])
                            [
                              <case>
                                pattern (stdlib/format.ml[393,14026+8]..[393,14026+17])
                                  Ppat_construct "Pp_hovbox" (stdlib/format.ml[393,14026+8]..[393,14026+17])
                                  None
                                expression (stdlib/format.ml[394,14047+8]..[396,14155+39])
                                  Pexp_ifthenelse
                                  expression (stdlib/format.ml[394,14047+11]..[394,14047+60])
                                    Pexp_apply
                                    expression (stdlib/format.ml[394,14047+39]..[394,14047+40])
                                      Pexp_ident ">" (stdlib/format.ml[394,14047+39]..[394,14047+40])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[394,14047+11]..[394,14047+38])
                                          Pexp_apply
                                          expression (stdlib/format.ml[394,14047+16]..[394,14047+17])
                                            Pexp_ident "+" (stdlib/format.ml[394,14047+16]..[394,14047+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/format.ml[394,14047+11]..[394,14047+15])
                                                Pexp_ident "size" (stdlib/format.ml[394,14047+11]..[394,14047+15])
                                            <arg>
                                            Nolabel
                                              expression (stdlib/format.ml[394,14047+18]..[394,14047+38])
                                                Pexp_apply
                                                expression (stdlib/format.ml[394,14047+18]..[394,14047+31])
                                                  Pexp_ident "String.length" (stdlib/format.ml[394,14047+18]..[394,14047+31])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (stdlib/format.ml[394,14047+32]..[394,14047+38])
                                                      Pexp_ident "before" (stdlib/format.ml[394,14047+32]..[394,14047+38])
                                                ]
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[394,14047+41]..[394,14047+60])
                                          Pexp_field
                                          expression (stdlib/format.ml[394,14047+41]..[394,14047+46])
                                            Pexp_ident "state" (stdlib/format.ml[394,14047+41]..[394,14047+46])
                                          "pp_space_left" (stdlib/format.ml[394,14047+47]..[394,14047+60])
                                    ]
                                  expression (stdlib/format.ml[395,14108+13]..[395,14108+46])
                                    Pexp_apply
                                    expression (stdlib/format.ml[395,14108+13]..[395,14108+27])
                                      Pexp_ident "break_new_line" (stdlib/format.ml[395,14108+13]..[395,14108+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[395,14108+28]..[395,14108+33])
                                          Pexp_ident "state" (stdlib/format.ml[395,14108+28]..[395,14108+33])
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[395,14108+34]..[395,14108+40])
                                          Pexp_ident "breaks" (stdlib/format.ml[395,14108+34]..[395,14108+40])
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[395,14108+41]..[395,14108+46])
                                          Pexp_ident "width" (stdlib/format.ml[395,14108+41]..[395,14108+46])
                                    ]
                                  Some
                                    expression (stdlib/format.ml[396,14155+13]..[396,14155+39])
                                      Pexp_apply
                                      expression (stdlib/format.ml[396,14155+13]..[396,14155+28])
                                        Pexp_ident "break_same_line" (stdlib/format.ml[396,14155+13]..[396,14155+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/format.ml[396,14155+29]..[396,14155+34])
                                            Pexp_ident "state" (stdlib/format.ml[396,14155+29]..[396,14155+34])
                                        <arg>
                                        Nolabel
                                          expression (stdlib/format.ml[396,14155+35]..[396,14155+39])
                                            Pexp_ident "fits" (stdlib/format.ml[396,14155+35]..[396,14155+39])
                                      ]
                              <case>
                                pattern (stdlib/format.ml[397,14195+8]..[397,14195+14])
                                  Ppat_construct "Pp_box" (stdlib/format.ml[397,14195+8]..[397,14195+14])
                                  None
                                expression (stdlib/format.ml[399,14265+8]..[405,14624+39])
                                  Pexp_ifthenelse
                                  expression (stdlib/format.ml[399,14265+11]..[399,14265+31])
                                    Pexp_field
                                    expression (stdlib/format.ml[399,14265+11]..[399,14265+16])
                                      Pexp_ident "state" (stdlib/format.ml[399,14265+11]..[399,14265+16])
                                    "pp_is_new_line" (stdlib/format.ml[399,14265+17]..[399,14265+31])
                                  expression (stdlib/format.ml[399,14265+37]..[399,14265+63])
                                    Pexp_apply
                                    expression (stdlib/format.ml[399,14265+37]..[399,14265+52])
                                      Pexp_ident "break_same_line" (stdlib/format.ml[399,14265+37]..[399,14265+52])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[399,14265+53]..[399,14265+58])
                                          Pexp_ident "state" (stdlib/format.ml[399,14265+53]..[399,14265+58])
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[399,14265+59]..[399,14265+63])
                                          Pexp_ident "fits" (stdlib/format.ml[399,14265+59]..[399,14265+63])
                                    ]
                                  Some
                                    expression (stdlib/format.ml[400,14334+8]..[405,14624+39])
                                      Pexp_ifthenelse
                                      expression (stdlib/format.ml[400,14334+11]..[400,14334+60])
                                        Pexp_apply
                                        expression (stdlib/format.ml[400,14334+39]..[400,14334+40])
                                          Pexp_ident ">" (stdlib/format.ml[400,14334+39]..[400,14334+40])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[400,14334+11]..[400,14334+38])
                                              Pexp_apply
                                              expression (stdlib/format.ml[400,14334+16]..[400,14334+17])
                                                Pexp_ident "+" (stdlib/format.ml[400,14334+16]..[400,14334+17])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/format.ml[400,14334+11]..[400,14334+15])
                                                    Pexp_ident "size" (stdlib/format.ml[400,14334+11]..[400,14334+15])
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/format.ml[400,14334+18]..[400,14334+38])
                                                    Pexp_apply
                                                    expression (stdlib/format.ml[400,14334+18]..[400,14334+31])
                                                      Pexp_ident "String.length" (stdlib/format.ml[400,14334+18]..[400,14334+31])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (stdlib/format.ml[400,14334+32]..[400,14334+38])
                                                          Pexp_ident "before" (stdlib/format.ml[400,14334+32]..[400,14334+38])
                                                    ]
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[400,14334+41]..[400,14334+60])
                                              Pexp_field
                                              expression (stdlib/format.ml[400,14334+41]..[400,14334+46])
                                                Pexp_ident "state" (stdlib/format.ml[400,14334+41]..[400,14334+46])
                                              "pp_space_left" (stdlib/format.ml[400,14334+47]..[400,14334+60])
                                        ]
                                      expression (stdlib/format.ml[401,14395+15]..[401,14395+48])
                                        Pexp_apply
                                        expression (stdlib/format.ml[401,14395+15]..[401,14395+29])
                                          Pexp_ident "break_new_line" (stdlib/format.ml[401,14395+15]..[401,14395+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[401,14395+30]..[401,14395+35])
                                              Pexp_ident "state" (stdlib/format.ml[401,14395+30]..[401,14395+35])
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[401,14395+36]..[401,14395+42])
                                              Pexp_ident "breaks" (stdlib/format.ml[401,14395+36]..[401,14395+42])
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[401,14395+43]..[401,14395+48])
                                              Pexp_ident "width" (stdlib/format.ml[401,14395+43]..[401,14395+48])
                                        ]
                                      Some
                                        expression (stdlib/format.ml[403,14510+8]..[405,14624+39])
                                          Pexp_ifthenelse
                                          expression (stdlib/format.ml[403,14510+11]..[403,14510+66])
                                            Pexp_apply
                                            expression (stdlib/format.ml[403,14510+35]..[403,14510+36])
                                              Pexp_ident ">" (stdlib/format.ml[403,14510+35]..[403,14510+36])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (stdlib/format.ml[403,14510+11]..[403,14510+34])
                                                  Pexp_field
                                                  expression (stdlib/format.ml[403,14510+11]..[403,14510+16])
                                                    Pexp_ident "state" (stdlib/format.ml[403,14510+11]..[403,14510+16])
                                                  "pp_current_indent" (stdlib/format.ml[403,14510+17]..[403,14510+34])
                                              <arg>
                                              Nolabel
                                                expression (stdlib/format.ml[403,14510+37]..[403,14510+66])
                                                  Pexp_apply
                                                  expression (stdlib/format.ml[403,14510+61]..[403,14510+62])
                                                    Pexp_ident "+" (stdlib/format.ml[403,14510+61]..[403,14510+62])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (stdlib/format.ml[403,14510+37]..[403,14510+60])
                                                        Pexp_apply
                                                        expression (stdlib/format.ml[403,14510+53]..[403,14510+54])
                                                          Pexp_ident "-" (stdlib/format.ml[403,14510+53]..[403,14510+54])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (stdlib/format.ml[403,14510+37]..[403,14510+52])
                                                              Pexp_field
                                                              expression (stdlib/format.ml[403,14510+37]..[403,14510+42])
                                                                Pexp_ident "state" (stdlib/format.ml[403,14510+37]..[403,14510+42])
                                                              "pp_margin" (stdlib/format.ml[403,14510+43]..[403,14510+52])
                                                          <arg>
                                                          Nolabel
                                                            expression (stdlib/format.ml[403,14510+55]..[403,14510+60])
                                                              Pexp_ident "width" (stdlib/format.ml[403,14510+55]..[403,14510+60])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (stdlib/format.ml[403,14510+63]..[403,14510+66])
                                                        Pexp_ident "off" (stdlib/format.ml[403,14510+63]..[403,14510+66])
                                                  ]
                                            ]
                                          expression (stdlib/format.ml[404,14577+13]..[404,14577+46])
                                            Pexp_apply
                                            expression (stdlib/format.ml[404,14577+13]..[404,14577+27])
                                              Pexp_ident "break_new_line" (stdlib/format.ml[404,14577+13]..[404,14577+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (stdlib/format.ml[404,14577+28]..[404,14577+33])
                                                  Pexp_ident "state" (stdlib/format.ml[404,14577+28]..[404,14577+33])
                                              <arg>
                                              Nolabel
                                                expression (stdlib/format.ml[404,14577+34]..[404,14577+40])
                                                  Pexp_ident "breaks" (stdlib/format.ml[404,14577+34]..[404,14577+40])
                                              <arg>
                                              Nolabel
                                                expression (stdlib/format.ml[404,14577+41]..[404,14577+46])
                                                  Pexp_ident "width" (stdlib/format.ml[404,14577+41]..[404,14577+46])
                                            ]
                                          Some
                                            expression (stdlib/format.ml[405,14624+13]..[405,14624+39])
                                              Pexp_apply
                                              expression (stdlib/format.ml[405,14624+13]..[405,14624+28])
                                                Pexp_ident "break_same_line" (stdlib/format.ml[405,14624+13]..[405,14624+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/format.ml[405,14624+29]..[405,14624+34])
                                                    Pexp_ident "state" (stdlib/format.ml[405,14624+29]..[405,14624+34])
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/format.ml[405,14624+35]..[405,14624+39])
                                                    Pexp_ident "fits" (stdlib/format.ml[405,14624+35]..[405,14624+39])
                                              ]
                              <case>
                                pattern (stdlib/format.ml[406,14664+8]..[406,14664+16])
                                  Ppat_construct "Pp_hvbox" (stdlib/format.ml[406,14664+8]..[406,14664+16])
                                  None
                                expression (stdlib/format.ml[406,14664+20]..[406,14664+53])
                                  Pexp_apply
                                  expression (stdlib/format.ml[406,14664+20]..[406,14664+34])
                                    Pexp_ident "break_new_line" (stdlib/format.ml[406,14664+20]..[406,14664+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[406,14664+35]..[406,14664+40])
                                        Pexp_ident "state" (stdlib/format.ml[406,14664+35]..[406,14664+40])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[406,14664+41]..[406,14664+47])
                                        Pexp_ident "breaks" (stdlib/format.ml[406,14664+41]..[406,14664+47])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[406,14664+48]..[406,14664+53])
                                        Pexp_ident "width" (stdlib/format.ml[406,14664+48]..[406,14664+53])
                                  ]
                              <case>
                                pattern (stdlib/format.ml[407,14718+8]..[407,14718+15])
                                  Ppat_construct "Pp_fits" (stdlib/format.ml[407,14718+8]..[407,14718+15])
                                  None
                                expression (stdlib/format.ml[407,14718+19]..[407,14718+45])
                                  Pexp_apply
                                  expression (stdlib/format.ml[407,14718+19]..[407,14718+34])
                                    Pexp_ident "break_same_line" (stdlib/format.ml[407,14718+19]..[407,14718+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[407,14718+35]..[407,14718+40])
                                        Pexp_ident "state" (stdlib/format.ml[407,14718+35]..[407,14718+40])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[407,14718+41]..[407,14718+45])
                                        Pexp_ident "fits" (stdlib/format.ml[407,14718+41]..[407,14718+45])
                                  ]
                              <case>
                                pattern (stdlib/format.ml[408,14764+8]..[408,14764+15])
                                  Ppat_construct "Pp_vbox" (stdlib/format.ml[408,14764+8]..[408,14764+15])
                                  None
                                expression (stdlib/format.ml[408,14764+19]..[408,14764+52])
                                  Pexp_apply
                                  expression (stdlib/format.ml[408,14764+19]..[408,14764+33])
                                    Pexp_ident "break_new_line" (stdlib/format.ml[408,14764+19]..[408,14764+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[408,14764+34]..[408,14764+39])
                                        Pexp_ident "state" (stdlib/format.ml[408,14764+34]..[408,14764+39])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[408,14764+40]..[408,14764+46])
                                        Pexp_ident "breaks" (stdlib/format.ml[408,14764+40]..[408,14764+46])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[408,14764+47]..[408,14764+52])
                                        Pexp_ident "width" (stdlib/format.ml[408,14764+47]..[408,14764+52])
                                  ]
                              <case>
                                pattern (stdlib/format.ml[409,14817+8]..[409,14817+15])
                                  Ppat_construct "Pp_hbox" (stdlib/format.ml[409,14817+8]..[409,14817+15])
                                  None
                                expression (stdlib/format.ml[409,14817+19]..[409,14817+45])
                                  Pexp_apply
                                  expression (stdlib/format.ml[409,14817+19]..[409,14817+34])
                                    Pexp_ident "break_same_line" (stdlib/format.ml[409,14817+19]..[409,14817+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[409,14817+35]..[409,14817+40])
                                        Pexp_ident "state" (stdlib/format.ml[409,14817+35]..[409,14817+40])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[409,14817+41]..[409,14817+45])
                                        Pexp_ident "fits" (stdlib/format.ml[409,14817+41]..[409,14817+45])
                                  ]
                            ]
                      ]
                <case>
                  pattern (stdlib/format.ml[413,14882+5]..[413,14882+25])
                    Ppat_construct "Pp_open_tag" (stdlib/format.ml[413,14882+5]..[413,14882+16])
                    Some
                      []
                      pattern (stdlib/format.ml[413,14882+17]..[413,14882+25])
                        Ppat_var "tag_name" (stdlib/format.ml[413,14882+17]..[413,14882+25])
                  expression (stdlib/format.ml[414,14911+5]..[416,15000+44])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/format.ml[414,14911+9]..[414,14911+15])
                          Ppat_var "marker" (stdlib/format.ml[414,14911+9]..[414,14911+15])
                        expression (stdlib/format.ml[414,14911+18]..[414,14911+49])
                          Pexp_apply
                          expression (stdlib/format.ml[414,14911+18]..[414,14911+40])
                            Pexp_field
                            expression (stdlib/format.ml[414,14911+18]..[414,14911+23])
                              Pexp_ident "state" (stdlib/format.ml[414,14911+18]..[414,14911+23])
                            "pp_mark_open_tag" (stdlib/format.ml[414,14911+24]..[414,14911+40])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[414,14911+41]..[414,14911+49])
                                Pexp_ident "tag_name" (stdlib/format.ml[414,14911+41]..[414,14911+49])
                          ]
                    ]
                    expression (stdlib/format.ml[415,14964+5]..[416,15000+44])
                      Pexp_sequence
                      expression (stdlib/format.ml[415,14964+5]..[415,14964+34])
                        Pexp_apply
                        expression (stdlib/format.ml[415,14964+5]..[415,14964+21])
                          Pexp_ident "pp_output_string" (stdlib/format.ml[415,14964+5]..[415,14964+21])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[415,14964+22]..[415,14964+27])
                              Pexp_ident "state" (stdlib/format.ml[415,14964+22]..[415,14964+27])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[415,14964+28]..[415,14964+34])
                              Pexp_ident "marker" (stdlib/format.ml[415,14964+28]..[415,14964+34])
                        ]
                      expression (stdlib/format.ml[416,15000+5]..[416,15000+44])
                        Pexp_apply
                        expression (stdlib/format.ml[416,15000+5]..[416,15000+15])
                          Pexp_ident "Stack.push" (stdlib/format.ml[416,15000+5]..[416,15000+15])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[416,15000+16]..[416,15000+24])
                              Pexp_ident "tag_name" (stdlib/format.ml[416,15000+16]..[416,15000+24])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[416,15000+25]..[416,15000+44])
                              Pexp_field
                              expression (stdlib/format.ml[416,15000+25]..[416,15000+30])
                                Pexp_ident "state" (stdlib/format.ml[416,15000+25]..[416,15000+30])
                              "pp_mark_stack" (stdlib/format.ml[416,15000+31]..[416,15000+44])
                        ]
                <case>
                  pattern (stdlib/format.ml[418,15046+5]..[418,15046+17])
                    Ppat_construct "Pp_close_tag" (stdlib/format.ml[418,15046+5]..[418,15046+17])
                    None
                  expression (stdlib/format.ml[419,15067+5]..[424,15286+8])
                    Pexp_match
                    expression (stdlib/format.ml[419,15067+17]..[419,15067+50])
                      Pexp_apply
                      expression (stdlib/format.ml[419,15067+17]..[419,15067+30])
                        Pexp_ident "Stack.pop_opt" (stdlib/format.ml[419,15067+17]..[419,15067+30])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[419,15067+31]..[419,15067+50])
                            Pexp_field
                            expression (stdlib/format.ml[419,15067+31]..[419,15067+36])
                              Pexp_ident "state" (stdlib/format.ml[419,15067+31]..[419,15067+36])
                            "pp_mark_stack" (stdlib/format.ml[419,15067+37]..[419,15067+50])
                      ]
                    [
                      <case>
                        pattern (stdlib/format.ml[420,15123+7]..[420,15123+11])
                          Ppat_construct "None" (stdlib/format.ml[420,15123+7]..[420,15123+11])
                          None
                        expression (stdlib/format.ml[420,15123+15]..[420,15123+17])
                          Pexp_construct "()" (stdlib/format.ml[420,15123+15]..[420,15123+17])
                          None
                      <case>
                        pattern (stdlib/format.ml[421,15169+7]..[421,15169+20])
                          Ppat_construct "Some" (stdlib/format.ml[421,15169+7]..[421,15169+11])
                          Some
                            []
                            pattern (stdlib/format.ml[421,15169+12]..[421,15169+20])
                              Ppat_var "tag_name" (stdlib/format.ml[421,15169+12]..[421,15169+20])
                        expression (stdlib/format.ml[422,15193+7]..[423,15249+36])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (stdlib/format.ml[422,15193+11]..[422,15193+17])
                                Ppat_var "marker" (stdlib/format.ml[422,15193+11]..[422,15193+17])
                              expression (stdlib/format.ml[422,15193+20]..[422,15193+52])
                                Pexp_apply
                                expression (stdlib/format.ml[422,15193+20]..[422,15193+43])
                                  Pexp_field
                                  expression (stdlib/format.ml[422,15193+20]..[422,15193+25])
                                    Pexp_ident "state" (stdlib/format.ml[422,15193+20]..[422,15193+25])
                                  "pp_mark_close_tag" (stdlib/format.ml[422,15193+26]..[422,15193+43])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[422,15193+44]..[422,15193+52])
                                      Pexp_ident "tag_name" (stdlib/format.ml[422,15193+44]..[422,15193+52])
                                ]
                          ]
                          expression (stdlib/format.ml[423,15249+7]..[423,15249+36])
                            Pexp_apply
                            expression (stdlib/format.ml[423,15249+7]..[423,15249+23])
                              Pexp_ident "pp_output_string" (stdlib/format.ml[423,15249+7]..[423,15249+23])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[423,15249+24]..[423,15249+29])
                                  Pexp_ident "state" (stdlib/format.ml[423,15249+24]..[423,15249+29])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[423,15249+30]..[423,15249+36])
                                  Pexp_ident "marker" (stdlib/format.ml[423,15249+30]..[423,15249+36])
                            ]
                    ]
              ]
    ]
  structure_item (stdlib/format.ml[430,15481+0]..[441,16071+7])
    Pstr_value Rec
    [
      <def>
        pattern (stdlib/format.ml[430,15481+8]..[430,15481+20])
          Ppat_var "advance_left" (stdlib/format.ml[430,15481+8]..[430,15481+20])
        expression (stdlib/format.ml[430,15481+21]..[441,16071+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[430,15481+21]..[430,15481+26])
            Ppat_var "state" (stdlib/format.ml[430,15481+21]..[430,15481+26])
          expression (stdlib/format.ml[431,15510+2]..[441,16071+7])
            Pexp_match
            expression (stdlib/format.ml[431,15510+8]..[431,15510+37])
              Pexp_apply
              expression (stdlib/format.ml[431,15510+8]..[431,15510+22])
                Pexp_ident "Queue.peek_opt" (stdlib/format.ml[431,15510+8]..[431,15510+22])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[431,15510+23]..[431,15510+37])
                    Pexp_field
                    expression (stdlib/format.ml[431,15510+23]..[431,15510+28])
                      Pexp_ident "state" (stdlib/format.ml[431,15510+23]..[431,15510+28])
                    "pp_queue" (stdlib/format.ml[431,15510+29]..[431,15510+37])
              ]
            [
              <case>
                pattern (stdlib/format.ml[432,15553+4]..[432,15553+8])
                  Ppat_construct "None" (stdlib/format.ml[432,15553+4]..[432,15553+8])
                  None
                expression (stdlib/format.ml[432,15553+12]..[432,15553+14])
                  Pexp_construct "()" (stdlib/format.ml[432,15553+12]..[432,15553+14])
                  None
              <case>
                pattern (stdlib/format.ml[433,15593+4]..[433,15593+32])
                  Ppat_construct "Some" (stdlib/format.ml[433,15593+4]..[433,15593+8])
                  Some
                    []
                    pattern (stdlib/format.ml[433,15593+9]..[433,15593+32])
                      Ppat_record Closed
                      [
                        "size" (stdlib/format.ml[433,15593+11]..[433,15593+15]) ghost
                          pattern (stdlib/format.ml[433,15593+11]..[433,15593+15])
                            Ppat_var "size" (stdlib/format.ml[433,15593+11]..[433,15593+15])
                        "token" (stdlib/format.ml[433,15593+17]..[433,15593+22]) ghost
                          pattern (stdlib/format.ml[433,15593+17]..[433,15593+22])
                            Ppat_var "token" (stdlib/format.ml[433,15593+17]..[433,15593+22])
                        "length" (stdlib/format.ml[433,15593+24]..[433,15593+30]) ghost
                          pattern (stdlib/format.ml[433,15593+24]..[433,15593+30])
                            Ppat_var "length" (stdlib/format.ml[433,15593+24]..[433,15593+30])
                      ]
                expression (stdlib/format.ml[434,15629+4]..[441,16071+7])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (stdlib/format.ml[434,15629+8]..[434,15629+21])
                        Ppat_var "pending_count" (stdlib/format.ml[434,15629+8]..[434,15629+21])
                      expression (stdlib/format.ml[434,15629+24]..[434,15629+66])
                        Pexp_apply
                        expression (stdlib/format.ml[434,15629+45]..[434,15629+46])
                          Pexp_ident "-" (stdlib/format.ml[434,15629+45]..[434,15629+46])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[434,15629+24]..[434,15629+44])
                              Pexp_field
                              expression (stdlib/format.ml[434,15629+24]..[434,15629+29])
                                Pexp_ident "state" (stdlib/format.ml[434,15629+24]..[434,15629+29])
                              "pp_right_total" (stdlib/format.ml[434,15629+30]..[434,15629+44])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[434,15629+47]..[434,15629+66])
                              Pexp_field
                              expression (stdlib/format.ml[434,15629+47]..[434,15629+52])
                                Pexp_ident "state" (stdlib/format.ml[434,15629+47]..[434,15629+52])
                              "pp_left_total" (stdlib/format.ml[434,15629+53]..[434,15629+66])
                        ]
                  ]
                  expression (stdlib/format.ml[435,15699+4]..[441,16071+7])
                    Pexp_ifthenelse
                    expression (stdlib/format.ml[435,15699+7]..[435,15699+65])
                      Pexp_apply
                      expression (stdlib/format.ml[435,15699+26]..[435,15699+28])
                        Pexp_ident "||" (stdlib/format.ml[435,15699+26]..[435,15699+28])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[435,15699+7]..[435,15699+25])
                            Pexp_apply
                            expression (stdlib/format.ml[435,15699+7]..[435,15699+20])
                              Pexp_ident "Size.is_known" (stdlib/format.ml[435,15699+7]..[435,15699+20])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[435,15699+21]..[435,15699+25])
                                  Pexp_ident "size" (stdlib/format.ml[435,15699+21]..[435,15699+25])
                            ]
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[435,15699+29]..[435,15699+65])
                            Pexp_apply
                            expression (stdlib/format.ml[435,15699+43]..[435,15699+45])
                              Pexp_ident ">=" (stdlib/format.ml[435,15699+43]..[435,15699+45])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[435,15699+29]..[435,15699+42])
                                  Pexp_ident "pending_count" (stdlib/format.ml[435,15699+29]..[435,15699+42])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[435,15699+46]..[435,15699+65])
                                  Pexp_field
                                  expression (stdlib/format.ml[435,15699+46]..[435,15699+51])
                                    Pexp_ident "state" (stdlib/format.ml[435,15699+46]..[435,15699+51])
                                  "pp_space_left" (stdlib/format.ml[435,15699+52]..[435,15699+65])
                            ]
                      ]
                    expression (stdlib/format.ml[435,15699+71]..[441,16071+7])
                      Pexp_sequence
                      expression (stdlib/format.ml[436,15776+6]..[436,15776+41])
                        Pexp_apply
                        expression (stdlib/format.ml[436,15776+32]..[436,15776+34])
                          Pexp_ident "|>" (stdlib/format.ml[436,15776+32]..[436,15776+34])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[436,15776+6]..[436,15776+31])
                              Pexp_apply
                              expression (stdlib/format.ml[436,15776+6]..[436,15776+16])
                                Pexp_ident "Queue.take" (stdlib/format.ml[436,15776+6]..[436,15776+16])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[436,15776+17]..[436,15776+31])
                                    Pexp_field
                                    expression (stdlib/format.ml[436,15776+17]..[436,15776+22])
                                      Pexp_ident "state" (stdlib/format.ml[436,15776+17]..[436,15776+22])
                                    "pp_queue" (stdlib/format.ml[436,15776+23]..[436,15776+31])
                              ]
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[436,15776+35]..[436,15776+41])
                              Pexp_ident "ignore" (stdlib/format.ml[436,15776+35]..[436,15776+41])
                        ]
                      expression (stdlib/format.ml[437,15852+6]..[440,16032+38])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (stdlib/format.ml[437,15852+10]..[437,15852+14])
                              Ppat_var "size" (stdlib/format.ml[437,15852+10]..[437,15852+14])
                            expression (stdlib/format.ml[437,15852+17]..[437,15852+77])
                              Pexp_ifthenelse
                              expression (stdlib/format.ml[437,15852+20]..[437,15852+38])
                                Pexp_apply
                                expression (stdlib/format.ml[437,15852+20]..[437,15852+33])
                                  Pexp_ident "Size.is_known" (stdlib/format.ml[437,15852+20]..[437,15852+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[437,15852+34]..[437,15852+38])
                                      Pexp_ident "size" (stdlib/format.ml[437,15852+34]..[437,15852+38])
                                ]
                              expression (stdlib/format.ml[437,15852+44]..[437,15852+60])
                                Pexp_apply
                                expression (stdlib/format.ml[437,15852+44]..[437,15852+55])
                                  Pexp_ident "Size.to_int" (stdlib/format.ml[437,15852+44]..[437,15852+55])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[437,15852+56]..[437,15852+60])
                                      Pexp_ident "size" (stdlib/format.ml[437,15852+56]..[437,15852+60])
                                ]
                              Some
                                expression (stdlib/format.ml[437,15852+66]..[437,15852+77])
                                  Pexp_ident "pp_infinity" (stdlib/format.ml[437,15852+66]..[437,15852+77])
                        ]
                        expression (stdlib/format.ml[438,15933+6]..[440,16032+38])
                          Pexp_sequence
                          expression (stdlib/format.ml[438,15933+6]..[438,15933+38])
                            Pexp_apply
                            expression (stdlib/format.ml[438,15933+6]..[438,15933+21])
                              Pexp_ident "format_pp_token" (stdlib/format.ml[438,15933+6]..[438,15933+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[438,15933+22]..[438,15933+27])
                                  Pexp_ident "state" (stdlib/format.ml[438,15933+22]..[438,15933+27])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[438,15933+28]..[438,15933+32])
                                  Pexp_ident "size" (stdlib/format.ml[438,15933+28]..[438,15933+32])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[438,15933+33]..[438,15933+38])
                                  Pexp_ident "token" (stdlib/format.ml[438,15933+33]..[438,15933+38])
                            ]
                          expression (stdlib/format.ml[439,15973+6]..[440,16032+38])
                            Pexp_sequence
                            expression (stdlib/format.ml[439,15973+6]..[439,15973+57])
                              Pexp_setfield
                              expression (stdlib/format.ml[439,15973+6]..[439,15973+11])
                                Pexp_ident "state" (stdlib/format.ml[439,15973+6]..[439,15973+11])
                              "pp_left_total" (stdlib/format.ml[439,15973+12]..[439,15973+25])
                              expression (stdlib/format.ml[439,15973+29]..[439,15973+57])
                                Pexp_apply
                                expression (stdlib/format.ml[439,15973+36]..[439,15973+37])
                                  Pexp_ident "+" (stdlib/format.ml[439,15973+36]..[439,15973+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[439,15973+29]..[439,15973+35])
                                      Pexp_ident "length" (stdlib/format.ml[439,15973+29]..[439,15973+35])
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[439,15973+38]..[439,15973+57])
                                      Pexp_field
                                      expression (stdlib/format.ml[439,15973+38]..[439,15973+43])
                                        Pexp_ident "state" (stdlib/format.ml[439,15973+38]..[439,15973+43])
                                      "pp_left_total" (stdlib/format.ml[439,15973+44]..[439,15973+57])
                                ]
                            expression (stdlib/format.ml[440,16032+6]..[440,16032+38])
                              Pexp_apply
                              expression (stdlib/format.ml[440,16032+6]..[440,16032+32])
                                attribute "tailcall"
                                  []
                                Pexp_ident "advance_left" (stdlib/format.ml[440,16032+7]..[440,16032+19])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[440,16032+33]..[440,16032+38])
                                    Pexp_ident "state" (stdlib/format.ml[440,16032+33]..[440,16032+38])
                              ]
                    None
            ]
    ]
  structure_item (stdlib/format.ml[445,16124+0]..[445,16124+72])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[445,16124+4]..[445,16124+19])
          Ppat_var "enqueue_advance" (stdlib/format.ml[445,16124+4]..[445,16124+19])
        expression (stdlib/format.ml[445,16124+20]..[445,16124+72]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[445,16124+20]..[445,16124+25])
            Ppat_var "state" (stdlib/format.ml[445,16124+20]..[445,16124+25])
          expression (stdlib/format.ml[445,16124+26]..[445,16124+72]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[445,16124+26]..[445,16124+29])
              Ppat_var "tok" (stdlib/format.ml[445,16124+26]..[445,16124+29])
            expression (stdlib/format.ml[445,16124+32]..[445,16124+72])
              Pexp_sequence
              expression (stdlib/format.ml[445,16124+32]..[445,16124+52])
                Pexp_apply
                expression (stdlib/format.ml[445,16124+32]..[445,16124+42])
                  Pexp_ident "pp_enqueue" (stdlib/format.ml[445,16124+32]..[445,16124+42])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[445,16124+43]..[445,16124+48])
                      Pexp_ident "state" (stdlib/format.ml[445,16124+43]..[445,16124+48])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[445,16124+49]..[445,16124+52])
                      Pexp_ident "tok" (stdlib/format.ml[445,16124+49]..[445,16124+52])
                ]
              expression (stdlib/format.ml[445,16124+54]..[445,16124+72])
                Pexp_apply
                expression (stdlib/format.ml[445,16124+54]..[445,16124+66])
                  Pexp_ident "advance_left" (stdlib/format.ml[445,16124+54]..[445,16124+66])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[445,16124+67]..[445,16124+72])
                      Pexp_ident "state" (stdlib/format.ml[445,16124+67]..[445,16124+72])
                ]
    ]
  structure_item (stdlib/format.ml[449,16225+0]..[450,16262+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[449,16225+4]..[449,16225+21])
          Ppat_var "enqueue_string_as" (stdlib/format.ml[449,16225+4]..[449,16225+21])
        expression (stdlib/format.ml[449,16225+22]..[450,16262+78]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[449,16225+22]..[449,16225+27])
            Ppat_var "state" (stdlib/format.ml[449,16225+22]..[449,16225+27])
          expression (stdlib/format.ml[449,16225+28]..[450,16262+78]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[449,16225+28]..[449,16225+32])
              Ppat_var "size" (stdlib/format.ml[449,16225+28]..[449,16225+32])
            expression (stdlib/format.ml[449,16225+33]..[450,16262+78]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[449,16225+33]..[449,16225+34])
                Ppat_var "s" (stdlib/format.ml[449,16225+33]..[449,16225+34])
              expression (stdlib/format.ml[450,16262+2]..[450,16262+78])
                Pexp_apply
                expression (stdlib/format.ml[450,16262+2]..[450,16262+17])
                  Pexp_ident "enqueue_advance" (stdlib/format.ml[450,16262+2]..[450,16262+17])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[450,16262+18]..[450,16262+23])
                      Pexp_ident "state" (stdlib/format.ml[450,16262+18]..[450,16262+23])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[450,16262+24]..[450,16262+78])
                      Pexp_record
                      [
                        "size" (stdlib/format.ml[450,16262+26]..[450,16262+30]) ghost
                          expression (stdlib/format.ml[450,16262+26]..[450,16262+30])
                            Pexp_ident "size" (stdlib/format.ml[450,16262+26]..[450,16262+30])
                        "token" (stdlib/format.ml[450,16262+32]..[450,16262+37])
                          expression (stdlib/format.ml[450,16262+40]..[450,16262+49])
                            Pexp_construct "Pp_text" (stdlib/format.ml[450,16262+40]..[450,16262+47])
                            Some
                              expression (stdlib/format.ml[450,16262+48]..[450,16262+49])
                                Pexp_ident "s" (stdlib/format.ml[450,16262+48]..[450,16262+49])
                        "length" (stdlib/format.ml[450,16262+51]..[450,16262+57])
                          expression (stdlib/format.ml[450,16262+60]..[450,16262+76])
                            Pexp_apply
                            expression (stdlib/format.ml[450,16262+60]..[450,16262+71])
                              Pexp_ident "Size.to_int" (stdlib/format.ml[450,16262+60]..[450,16262+71])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[450,16262+72]..[450,16262+76])
                                  Pexp_ident "size" (stdlib/format.ml[450,16262+72]..[450,16262+76])
                            ]
                      ]
                      None
                ]
    ]
  structure_item (stdlib/format.ml[453,16343+0]..[454,16372+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[453,16343+4]..[453,16343+18])
          Ppat_var "enqueue_string" (stdlib/format.ml[453,16343+4]..[453,16343+18])
        expression (stdlib/format.ml[453,16343+19]..[454,16372+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[453,16343+19]..[453,16343+24])
            Ppat_var "state" (stdlib/format.ml[453,16343+19]..[453,16343+24])
          expression (stdlib/format.ml[453,16343+25]..[454,16372+59]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[453,16343+25]..[453,16343+26])
              Ppat_var "s" (stdlib/format.ml[453,16343+25]..[453,16343+26])
            expression (stdlib/format.ml[454,16372+2]..[454,16372+59])
              Pexp_apply
              expression (stdlib/format.ml[454,16372+2]..[454,16372+19])
                Pexp_ident "enqueue_string_as" (stdlib/format.ml[454,16372+2]..[454,16372+19])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[454,16372+20]..[454,16372+25])
                    Pexp_ident "state" (stdlib/format.ml[454,16372+20]..[454,16372+25])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[454,16372+26]..[454,16372+57])
                    Pexp_apply
                    expression (stdlib/format.ml[454,16372+27]..[454,16372+38])
                      Pexp_ident "Size.of_int" (stdlib/format.ml[454,16372+27]..[454,16372+38])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[454,16372+39]..[454,16372+56])
                          Pexp_apply
                          expression (stdlib/format.ml[454,16372+40]..[454,16372+53])
                            Pexp_ident "String.length" (stdlib/format.ml[454,16372+40]..[454,16372+53])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[454,16372+54]..[454,16372+55])
                                Pexp_ident "s" (stdlib/format.ml[454,16372+54]..[454,16372+55])
                          ]
                    ]
                <arg>
                Nolabel
                  expression (stdlib/format.ml[454,16372+58]..[454,16372+59])
                    Pexp_ident "s" (stdlib/format.ml[454,16372+58]..[454,16372+59])
              ]
    ]
  structure_item (stdlib/format.ml[461,16530+0]..[464,16663+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[461,16530+4]..[461,16530+25])
          Ppat_var "initialize_scan_stack" (stdlib/format.ml[461,16530+4]..[461,16530+25])
        expression (stdlib/format.ml[461,16530+26]..[464,16663+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[461,16530+26]..[461,16530+31])
            Ppat_var "stack" (stdlib/format.ml[461,16530+26]..[461,16530+31])
          expression (stdlib/format.ml[462,16564+2]..[464,16663+50])
            Pexp_sequence
            expression (stdlib/format.ml[462,16564+2]..[462,16564+19])
              Pexp_apply
              expression (stdlib/format.ml[462,16564+2]..[462,16564+13])
                Pexp_ident "Stack.clear" (stdlib/format.ml[462,16564+2]..[462,16564+13])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[462,16564+14]..[462,16564+19])
                    Pexp_ident "stack" (stdlib/format.ml[462,16564+14]..[462,16564+19])
              ]
            expression (stdlib/format.ml[463,16585+2]..[464,16663+50])
              Pexp_let Nonrec
              [
                <def>
                  pattern (stdlib/format.ml[463,16585+6]..[463,16585+16])
                    Ppat_var "queue_elem" (stdlib/format.ml[463,16585+6]..[463,16585+16])
                  expression (stdlib/format.ml[463,16585+19]..[463,16585+74])
                    Pexp_record
                    [
                      "size" (stdlib/format.ml[463,16585+21]..[463,16585+25])
                        expression (stdlib/format.ml[463,16585+28]..[463,16585+40])
                          Pexp_ident "Size.unknown" (stdlib/format.ml[463,16585+28]..[463,16585+40])
                      "token" (stdlib/format.ml[463,16585+42]..[463,16585+47])
                        expression (stdlib/format.ml[463,16585+50]..[463,16585+60])
                          Pexp_construct "Pp_text" (stdlib/format.ml[463,16585+50]..[463,16585+57])
                          Some
                            expression (stdlib/format.ml[463,16585+58]..[463,16585+60])
                              Pexp_constant PConst_string("",(stdlib/format.ml[463,16585+59]..[463,16585+59]),None)
                      "length" (stdlib/format.ml[463,16585+62]..[463,16585+68])
                        expression (stdlib/format.ml[463,16585+71]..[463,16585+72])
                          Pexp_constant PConst_int (0,None)
                    ]
                    None
              ]
              expression (stdlib/format.ml[464,16663+2]..[464,16663+50])
                Pexp_apply
                expression (stdlib/format.ml[464,16663+2]..[464,16663+12])
                  Pexp_ident "Stack.push" (stdlib/format.ml[464,16663+2]..[464,16663+12])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[464,16663+13]..[464,16663+44])
                      Pexp_record
                      [
                        "left_total" (stdlib/format.ml[464,16663+15]..[464,16663+25])
                          expression (stdlib/format.ml[464,16663+28]..[464,16663+30])
                            Pexp_constant PConst_int (-1,None)
                        "queue_elem" (stdlib/format.ml[464,16663+32]..[464,16663+42]) ghost
                          expression (stdlib/format.ml[464,16663+32]..[464,16663+42])
                            Pexp_ident "queue_elem" (stdlib/format.ml[464,16663+32]..[464,16663+42])
                      ]
                      None
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[464,16663+45]..[464,16663+50])
                      Pexp_ident "stack" (stdlib/format.ml[464,16663+45]..[464,16663+50])
                ]
    ]
  structure_item (stdlib/format.ml[475,17087+0]..[497,18024+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[475,17087+4]..[475,17087+12])
          Ppat_var "set_size" (stdlib/format.ml[475,17087+4]..[475,17087+12])
        expression (stdlib/format.ml[475,17087+13]..[497,18024+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[475,17087+13]..[475,17087+18])
            Ppat_var "state" (stdlib/format.ml[475,17087+13]..[475,17087+18])
          expression (stdlib/format.ml[475,17087+19]..[497,18024+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[475,17087+19]..[475,17087+21])
              Ppat_var "ty" (stdlib/format.ml[475,17087+19]..[475,17087+21])
            expression (stdlib/format.ml[476,17111+2]..[497,18024+10])
              Pexp_match
              expression (stdlib/format.ml[476,17111+8]..[476,17111+41])
                Pexp_apply
                expression (stdlib/format.ml[476,17111+8]..[476,17111+21])
                  Pexp_ident "Stack.top_opt" (stdlib/format.ml[476,17111+8]..[476,17111+21])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[476,17111+22]..[476,17111+41])
                      Pexp_field
                      expression (stdlib/format.ml[476,17111+22]..[476,17111+27])
                        Pexp_ident "state" (stdlib/format.ml[476,17111+22]..[476,17111+27])
                      "pp_scan_stack" (stdlib/format.ml[476,17111+28]..[476,17111+41])
                ]
              [
                <case>
                  pattern (stdlib/format.ml[477,17158+4]..[477,17158+8])
                    Ppat_construct "None" (stdlib/format.ml[477,17158+4]..[477,17158+8])
                    None
                  expression (stdlib/format.ml[477,17158+12]..[477,17158+14])
                    Pexp_construct "()" (stdlib/format.ml[477,17158+12]..[477,17158+14])
                    None
                <case>
                  pattern (stdlib/format.ml[478,17206+4]..[478,17206+35])
                    Ppat_construct "Some" (stdlib/format.ml[478,17206+4]..[478,17206+8])
                    Some
                      []
                      pattern (stdlib/format.ml[478,17206+9]..[478,17206+35])
                        Ppat_record Closed
                        [
                          "left_total" (stdlib/format.ml[478,17206+11]..[478,17206+21]) ghost
                            pattern (stdlib/format.ml[478,17206+11]..[478,17206+21])
                              Ppat_var "left_total" (stdlib/format.ml[478,17206+11]..[478,17206+21])
                          "queue_elem" (stdlib/format.ml[478,17206+23]..[478,17206+33]) ghost
                            pattern (stdlib/format.ml[478,17206+23]..[478,17206+33])
                              Ppat_var "queue_elem" (stdlib/format.ml[478,17206+23]..[478,17206+33])
                        ]
                  expression (stdlib/format.ml[479,17245+4]..[497,18024+10])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/format.ml[479,17245+8]..[479,17245+12])
                          Ppat_var "size" (stdlib/format.ml[479,17245+8]..[479,17245+12])
                        expression (stdlib/format.ml[479,17245+15]..[479,17245+42])
                          Pexp_apply
                          expression (stdlib/format.ml[479,17245+15]..[479,17245+26])
                            Pexp_ident "Size.to_int" (stdlib/format.ml[479,17245+15]..[479,17245+26])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[479,17245+27]..[479,17245+42])
                                Pexp_field
                                expression (stdlib/format.ml[479,17245+27]..[479,17245+37])
                                  Pexp_ident "queue_elem" (stdlib/format.ml[479,17245+27]..[479,17245+37])
                                "size" (stdlib/format.ml[479,17245+38]..[479,17245+42])
                          ]
                    ]
                    expression (stdlib/format.ml[481,17360+4]..[497,18024+10])
                      Pexp_ifthenelse
                      expression (stdlib/format.ml[481,17360+7]..[481,17360+39])
                        Pexp_apply
                        expression (stdlib/format.ml[481,17360+18]..[481,17360+19])
                          Pexp_ident "<" (stdlib/format.ml[481,17360+18]..[481,17360+19])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[481,17360+7]..[481,17360+17])
                              Pexp_ident "left_total" (stdlib/format.ml[481,17360+7]..[481,17360+17])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[481,17360+20]..[481,17360+39])
                              Pexp_field
                              expression (stdlib/format.ml[481,17360+20]..[481,17360+25])
                                Pexp_ident "state" (stdlib/format.ml[481,17360+20]..[481,17360+25])
                              "pp_left_total" (stdlib/format.ml[481,17360+26]..[481,17360+39])
                        ]
                      expression (stdlib/format.ml[482,17405+6]..[482,17405+47])
                        Pexp_apply
                        expression (stdlib/format.ml[482,17405+6]..[482,17405+27])
                          Pexp_ident "initialize_scan_stack" (stdlib/format.ml[482,17405+6]..[482,17405+27])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[482,17405+28]..[482,17405+47])
                              Pexp_field
                              expression (stdlib/format.ml[482,17405+28]..[482,17405+33])
                                Pexp_ident "state" (stdlib/format.ml[482,17405+28]..[482,17405+33])
                              "pp_scan_stack" (stdlib/format.ml[482,17405+34]..[482,17405+47])
                        ]
                      Some
                        expression (stdlib/format.ml[484,17462+6]..[497,18024+10])
                          Pexp_match
                          expression (stdlib/format.ml[484,17462+12]..[484,17462+28])
                            Pexp_field
                            expression (stdlib/format.ml[484,17462+12]..[484,17462+22])
                              Pexp_ident "queue_elem" (stdlib/format.ml[484,17462+12]..[484,17462+22])
                            "token" (stdlib/format.ml[484,17462+23]..[484,17462+28])
                          [
                            <case>
                              pattern (stdlib/format.ml[485,17496+8]..[485,17496+37])
                                Ppat_or
                                pattern (stdlib/format.ml[485,17496+8]..[485,17496+18])
                                  Ppat_construct "Pp_break" (stdlib/format.ml[485,17496+8]..[485,17496+16])
                                  Some
                                    []
                                    pattern (stdlib/format.ml[485,17496+17]..[485,17496+18])
                                      Ppat_any
                                pattern (stdlib/format.ml[485,17496+21]..[485,17496+37])
                                  Ppat_construct "Pp_tbreak" (stdlib/format.ml[485,17496+21]..[485,17496+30])
                                  Some
                                    []
                                    pattern (stdlib/format.ml[485,17496+31]..[485,17496+37])
                                      Ppat_tuple
                                      [
                                        pattern (stdlib/format.ml[485,17496+32]..[485,17496+33])
                                          Ppat_any
                                        pattern (stdlib/format.ml[485,17496+35]..[485,17496+36])
                                          Ppat_any
                                      ]
                              expression (stdlib/format.ml[486,17537+8]..[489,17688+11])
                                Pexp_ifthenelse
                                expression (stdlib/format.ml[486,17537+11]..[486,17537+13])
                                  Pexp_ident "ty" (stdlib/format.ml[486,17537+11]..[486,17537+13])
                                expression (stdlib/format.ml[486,17537+19]..[489,17688+11])
                                  Pexp_sequence
                                  expression (stdlib/format.ml[487,17562+10]..[487,17562+70])
                                    Pexp_setfield
                                    expression (stdlib/format.ml[487,17562+10]..[487,17562+20])
                                      Pexp_ident "queue_elem" (stdlib/format.ml[487,17562+10]..[487,17562+20])
                                    "size" (stdlib/format.ml[487,17562+21]..[487,17562+25])
                                    expression (stdlib/format.ml[487,17562+29]..[487,17562+70])
                                      Pexp_apply
                                      expression (stdlib/format.ml[487,17562+29]..[487,17562+40])
                                        Pexp_ident "Size.of_int" (stdlib/format.ml[487,17562+29]..[487,17562+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/format.ml[487,17562+41]..[487,17562+70])
                                            Pexp_apply
                                            expression (stdlib/format.ml[487,17562+63]..[487,17562+64])
                                              Pexp_ident "+" (stdlib/format.ml[487,17562+63]..[487,17562+64])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (stdlib/format.ml[487,17562+42]..[487,17562+62])
                                                  Pexp_field
                                                  expression (stdlib/format.ml[487,17562+42]..[487,17562+47])
                                                    Pexp_ident "state" (stdlib/format.ml[487,17562+42]..[487,17562+47])
                                                  "pp_right_total" (stdlib/format.ml[487,17562+48]..[487,17562+62])
                                              <arg>
                                              Nolabel
                                                expression (stdlib/format.ml[487,17562+65]..[487,17562+69])
                                                  Pexp_ident "size" (stdlib/format.ml[487,17562+65]..[487,17562+69])
                                            ]
                                      ]
                                  expression (stdlib/format.ml[488,17634+10]..[488,17634+53])
                                    Pexp_apply
                                    expression (stdlib/format.ml[488,17634+44]..[488,17634+46])
                                      Pexp_ident "|>" (stdlib/format.ml[488,17634+44]..[488,17634+46])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[488,17634+10]..[488,17634+43])
                                          Pexp_apply
                                          expression (stdlib/format.ml[488,17634+10]..[488,17634+23])
                                            Pexp_ident "Stack.pop_opt" (stdlib/format.ml[488,17634+10]..[488,17634+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/format.ml[488,17634+24]..[488,17634+43])
                                                Pexp_field
                                                expression (stdlib/format.ml[488,17634+24]..[488,17634+29])
                                                  Pexp_ident "state" (stdlib/format.ml[488,17634+24]..[488,17634+29])
                                                "pp_scan_stack" (stdlib/format.ml[488,17634+30]..[488,17634+43])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[488,17634+47]..[488,17634+53])
                                          Pexp_ident "ignore" (stdlib/format.ml[488,17634+47]..[488,17634+53])
                                    ]
                                None
                            <case>
                              pattern (stdlib/format.ml[490,17700+8]..[490,17700+23])
                                Ppat_construct "Pp_begin" (stdlib/format.ml[490,17700+8]..[490,17700+16])
                                Some
                                  []
                                  pattern (stdlib/format.ml[490,17700+17]..[490,17700+23])
                                    Ppat_tuple
                                    [
                                      pattern (stdlib/format.ml[490,17700+18]..[490,17700+19])
                                        Ppat_any
                                      pattern (stdlib/format.ml[490,17700+21]..[490,17700+22])
                                        Ppat_any
                                    ]
                              expression (stdlib/format.ml[491,17727+8]..[494,17882+11])
                                Pexp_ifthenelse
                                expression (stdlib/format.ml[491,17727+11]..[491,17727+17])
                                  Pexp_apply
                                  expression (stdlib/format.ml[491,17727+11]..[491,17727+14])
                                    Pexp_ident "not" (stdlib/format.ml[491,17727+11]..[491,17727+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[491,17727+15]..[491,17727+17])
                                        Pexp_ident "ty" (stdlib/format.ml[491,17727+15]..[491,17727+17])
                                  ]
                                expression (stdlib/format.ml[491,17727+23]..[494,17882+11])
                                  Pexp_sequence
                                  expression (stdlib/format.ml[492,17756+10]..[492,17756+70])
                                    Pexp_setfield
                                    expression (stdlib/format.ml[492,17756+10]..[492,17756+20])
                                      Pexp_ident "queue_elem" (stdlib/format.ml[492,17756+10]..[492,17756+20])
                                    "size" (stdlib/format.ml[492,17756+21]..[492,17756+25])
                                    expression (stdlib/format.ml[492,17756+29]..[492,17756+70])
                                      Pexp_apply
                                      expression (stdlib/format.ml[492,17756+29]..[492,17756+40])
                                        Pexp_ident "Size.of_int" (stdlib/format.ml[492,17756+29]..[492,17756+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/format.ml[492,17756+41]..[492,17756+70])
                                            Pexp_apply
                                            expression (stdlib/format.ml[492,17756+63]..[492,17756+64])
                                              Pexp_ident "+" (stdlib/format.ml[492,17756+63]..[492,17756+64])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (stdlib/format.ml[492,17756+42]..[492,17756+62])
                                                  Pexp_field
                                                  expression (stdlib/format.ml[492,17756+42]..[492,17756+47])
                                                    Pexp_ident "state" (stdlib/format.ml[492,17756+42]..[492,17756+47])
                                                  "pp_right_total" (stdlib/format.ml[492,17756+48]..[492,17756+62])
                                              <arg>
                                              Nolabel
                                                expression (stdlib/format.ml[492,17756+65]..[492,17756+69])
                                                  Pexp_ident "size" (stdlib/format.ml[492,17756+65]..[492,17756+69])
                                            ]
                                      ]
                                  expression (stdlib/format.ml[493,17828+10]..[493,17828+53])
                                    Pexp_apply
                                    expression (stdlib/format.ml[493,17828+44]..[493,17828+46])
                                      Pexp_ident "|>" (stdlib/format.ml[493,17828+44]..[493,17828+46])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[493,17828+10]..[493,17828+43])
                                          Pexp_apply
                                          expression (stdlib/format.ml[493,17828+10]..[493,17828+23])
                                            Pexp_ident "Stack.pop_opt" (stdlib/format.ml[493,17828+10]..[493,17828+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/format.ml[493,17828+24]..[493,17828+43])
                                                Pexp_field
                                                expression (stdlib/format.ml[493,17828+24]..[493,17828+29])
                                                  Pexp_ident "state" (stdlib/format.ml[493,17828+24]..[493,17828+29])
                                                "pp_scan_stack" (stdlib/format.ml[493,17828+30]..[493,17828+43])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[493,17828+47]..[493,17828+53])
                                          Pexp_ident "ignore" (stdlib/format.ml[493,17828+47]..[493,17828+53])
                                    ]
                                None
                            <case>
                              pattern (stdlib/format.ml[495,17894+8]..[496,17955+65])
                                Ppat_or
                                pattern (stdlib/format.ml[495,17894+8]..[496,17955+50])
                                  Ppat_or
                                  pattern (stdlib/format.ml[495,17894+8]..[496,17955+34])
                                    Ppat_or
                                    pattern (stdlib/format.ml[495,17894+8]..[496,17955+18])
                                      Ppat_or
                                      pattern (stdlib/format.ml[495,17894+8]..[495,17894+60])
                                        Ppat_or
                                        pattern (stdlib/format.ml[495,17894+8]..[495,17894+51])
                                          Ppat_or
                                          pattern (stdlib/format.ml[495,17894+8]..[495,17894+41])
                                            Ppat_or
                                            pattern (stdlib/format.ml[495,17894+8]..[495,17894+27])
                                              Ppat_or
                                              pattern (stdlib/format.ml[495,17894+8]..[495,17894+17])
                                                Ppat_construct "Pp_text" (stdlib/format.ml[495,17894+8]..[495,17894+15])
                                                Some
                                                  []
                                                  pattern (stdlib/format.ml[495,17894+16]..[495,17894+17])
                                                    Ppat_any
                                              pattern (stdlib/format.ml[495,17894+20]..[495,17894+27])
                                                Ppat_construct "Pp_stab" (stdlib/format.ml[495,17894+20]..[495,17894+27])
                                                None
                                            pattern (stdlib/format.ml[495,17894+30]..[495,17894+41])
                                              Ppat_construct "Pp_tbegin" (stdlib/format.ml[495,17894+30]..[495,17894+39])
                                              Some
                                                []
                                                pattern (stdlib/format.ml[495,17894+40]..[495,17894+41])
                                                  Ppat_any
                                          pattern (stdlib/format.ml[495,17894+44]..[495,17894+51])
                                            Ppat_construct "Pp_tend" (stdlib/format.ml[495,17894+44]..[495,17894+51])
                                            None
                                        pattern (stdlib/format.ml[495,17894+54]..[495,17894+60])
                                          Ppat_construct "Pp_end" (stdlib/format.ml[495,17894+54]..[495,17894+60])
                                          None
                                      pattern (stdlib/format.ml[496,17955+8]..[496,17955+18])
                                        Ppat_construct "Pp_newline" (stdlib/format.ml[496,17955+8]..[496,17955+18])
                                        None
                                    pattern (stdlib/format.ml[496,17955+21]..[496,17955+34])
                                      Ppat_construct "Pp_if_newline" (stdlib/format.ml[496,17955+21]..[496,17955+34])
                                      None
                                  pattern (stdlib/format.ml[496,17955+37]..[496,17955+50])
                                    Ppat_construct "Pp_open_tag" (stdlib/format.ml[496,17955+37]..[496,17955+48])
                                    Some
                                      []
                                      pattern (stdlib/format.ml[496,17955+49]..[496,17955+50])
                                        Ppat_any
                                pattern (stdlib/format.ml[496,17955+53]..[496,17955+65])
                                  Ppat_construct "Pp_close_tag" (stdlib/format.ml[496,17955+53]..[496,17955+65])
                                  None
                              expression (stdlib/format.ml[497,18024+8]..[497,18024+10])
                                Pexp_construct "()" (stdlib/format.ml[497,18024+8]..[497,18024+10])
                                None
                          ]
              ]
    ]
  structure_item (stdlib/format.ml[502,18177+0]..[506,18340+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[502,18177+4]..[502,18177+13])
          Ppat_var "scan_push" (stdlib/format.ml[502,18177+4]..[502,18177+13])
        expression (stdlib/format.ml[502,18177+14]..[506,18340+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[502,18177+14]..[502,18177+19])
            Ppat_var "state" (stdlib/format.ml[502,18177+14]..[502,18177+19])
          expression (stdlib/format.ml[502,18177+20]..[506,18340+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[502,18177+20]..[502,18177+21])
              Ppat_var "b" (stdlib/format.ml[502,18177+20]..[502,18177+21])
            expression (stdlib/format.ml[502,18177+22]..[506,18340+37]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[502,18177+22]..[502,18177+27])
                Ppat_var "token" (stdlib/format.ml[502,18177+22]..[502,18177+27])
              expression (stdlib/format.ml[503,18207+2]..[506,18340+37])
                Pexp_sequence
                expression (stdlib/format.ml[503,18207+2]..[503,18207+24])
                  Pexp_apply
                  expression (stdlib/format.ml[503,18207+2]..[503,18207+12])
                    Pexp_ident "pp_enqueue" (stdlib/format.ml[503,18207+2]..[503,18207+12])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[503,18207+13]..[503,18207+18])
                        Pexp_ident "state" (stdlib/format.ml[503,18207+13]..[503,18207+18])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[503,18207+19]..[503,18207+24])
                        Pexp_ident "token" (stdlib/format.ml[503,18207+19]..[503,18207+24])
                  ]
                expression (stdlib/format.ml[504,18233+2]..[506,18340+37])
                  Pexp_sequence
                  expression (stdlib/format.ml[504,18233+2]..[504,18233+31])
                    Pexp_ifthenelse
                    expression (stdlib/format.ml[504,18233+5]..[504,18233+6])
                      Pexp_ident "b" (stdlib/format.ml[504,18233+5]..[504,18233+6])
                    expression (stdlib/format.ml[504,18233+12]..[504,18233+31])
                      Pexp_apply
                      expression (stdlib/format.ml[504,18233+12]..[504,18233+20])
                        Pexp_ident "set_size" (stdlib/format.ml[504,18233+12]..[504,18233+20])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[504,18233+21]..[504,18233+26])
                            Pexp_ident "state" (stdlib/format.ml[504,18233+21]..[504,18233+26])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[504,18233+27]..[504,18233+31])
                            Pexp_construct "true" (stdlib/format.ml[504,18233+27]..[504,18233+31])
                            None
                      ]
                    None
                  expression (stdlib/format.ml[505,18266+2]..[506,18340+37])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/format.ml[505,18266+6]..[505,18266+10])
                          Ppat_var "elem" (stdlib/format.ml[505,18266+6]..[505,18266+10])
                        expression (stdlib/format.ml[505,18266+13]..[505,18266+70])
                          Pexp_record
                          [
                            "left_total" (stdlib/format.ml[505,18266+15]..[505,18266+25])
                              expression (stdlib/format.ml[505,18266+28]..[505,18266+48])
                                Pexp_field
                                expression (stdlib/format.ml[505,18266+28]..[505,18266+33])
                                  Pexp_ident "state" (stdlib/format.ml[505,18266+28]..[505,18266+33])
                                "pp_right_total" (stdlib/format.ml[505,18266+34]..[505,18266+48])
                            "queue_elem" (stdlib/format.ml[505,18266+50]..[505,18266+60])
                              expression (stdlib/format.ml[505,18266+63]..[505,18266+68])
                                Pexp_ident "token" (stdlib/format.ml[505,18266+63]..[505,18266+68])
                          ]
                          None
                    ]
                    expression (stdlib/format.ml[506,18340+2]..[506,18340+37])
                      Pexp_apply
                      expression (stdlib/format.ml[506,18340+2]..[506,18340+12])
                        Pexp_ident "Stack.push" (stdlib/format.ml[506,18340+2]..[506,18340+12])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[506,18340+13]..[506,18340+17])
                            Pexp_ident "elem" (stdlib/format.ml[506,18340+13]..[506,18340+17])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[506,18340+18]..[506,18340+37])
                            Pexp_field
                            expression (stdlib/format.ml[506,18340+18]..[506,18340+23])
                              Pexp_ident "state" (stdlib/format.ml[506,18340+18]..[506,18340+23])
                            "pp_scan_stack" (stdlib/format.ml[506,18340+24]..[506,18340+37])
                      ]
    ]
  structure_item (stdlib/format.ml[512,18516+0]..[519,18868+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[512,18516+4]..[512,18516+19])
          Ppat_var "pp_open_box_gen" (stdlib/format.ml[512,18516+4]..[512,18516+19])
        expression (stdlib/format.ml[512,18516+20]..[519,18868+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[512,18516+20]..[512,18516+25])
            Ppat_var "state" (stdlib/format.ml[512,18516+20]..[512,18516+25])
          expression (stdlib/format.ml[512,18516+26]..[519,18868+45]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[512,18516+26]..[512,18516+32])
              Ppat_var "indent" (stdlib/format.ml[512,18516+26]..[512,18516+32])
            expression (stdlib/format.ml[512,18516+33]..[519,18868+45]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[512,18516+33]..[512,18516+38])
                Ppat_var "br_ty" (stdlib/format.ml[512,18516+33]..[512,18516+38])
              expression (stdlib/format.ml[513,18557+2]..[519,18868+45])
                Pexp_sequence
                expression (stdlib/format.ml[513,18557+2]..[513,18557+48])
                  Pexp_setfield
                  expression (stdlib/format.ml[513,18557+2]..[513,18557+7])
                    Pexp_ident "state" (stdlib/format.ml[513,18557+2]..[513,18557+7])
                  "pp_curr_depth" (stdlib/format.ml[513,18557+8]..[513,18557+21])
                  expression (stdlib/format.ml[513,18557+25]..[513,18557+48])
                    Pexp_apply
                    expression (stdlib/format.ml[513,18557+45]..[513,18557+46])
                      Pexp_ident "+" (stdlib/format.ml[513,18557+45]..[513,18557+46])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[513,18557+25]..[513,18557+44])
                          Pexp_field
                          expression (stdlib/format.ml[513,18557+25]..[513,18557+30])
                            Pexp_ident "state" (stdlib/format.ml[513,18557+25]..[513,18557+30])
                          "pp_curr_depth" (stdlib/format.ml[513,18557+31]..[513,18557+44])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[513,18557+47]..[513,18557+48])
                          Pexp_constant PConst_int (1,None)
                    ]
                expression (stdlib/format.ml[514,18607+2]..[519,18868+45])
                  Pexp_ifthenelse
                  expression (stdlib/format.ml[514,18607+5]..[514,18607+45])
                    Pexp_apply
                    expression (stdlib/format.ml[514,18607+25]..[514,18607+26])
                      Pexp_ident "<" (stdlib/format.ml[514,18607+25]..[514,18607+26])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[514,18607+5]..[514,18607+24])
                          Pexp_field
                          expression (stdlib/format.ml[514,18607+5]..[514,18607+10])
                            Pexp_ident "state" (stdlib/format.ml[514,18607+5]..[514,18607+10])
                          "pp_curr_depth" (stdlib/format.ml[514,18607+11]..[514,18607+24])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[514,18607+27]..[514,18607+45])
                          Pexp_field
                          expression (stdlib/format.ml[514,18607+27]..[514,18607+32])
                            Pexp_ident "state" (stdlib/format.ml[514,18607+27]..[514,18607+32])
                          "pp_max_boxes" (stdlib/format.ml[514,18607+33]..[514,18607+45])
                    ]
                  expression (stdlib/format.ml[515,18658+4]..[517,18786+30])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/format.ml[515,18658+8]..[515,18658+12])
                          Ppat_var "size" (stdlib/format.ml[515,18658+8]..[515,18658+12])
                        expression (stdlib/format.ml[515,18658+15]..[515,18658+51])
                          Pexp_apply
                          expression (stdlib/format.ml[515,18658+15]..[515,18658+26])
                            Pexp_ident "Size.of_int" (stdlib/format.ml[515,18658+15]..[515,18658+26])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[515,18658+27]..[515,18658+51])
                                Pexp_apply
                                expression (stdlib/format.ml[515,18658+28]..[515,18658+29])
                                  Pexp_ident "~-" (stdlib/format.ml[515,18658+28]..[515,18658+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[515,18658+30]..[515,18658+50])
                                      Pexp_field
                                      expression (stdlib/format.ml[515,18658+30]..[515,18658+35])
                                        Pexp_ident "state" (stdlib/format.ml[515,18658+30]..[515,18658+35])
                                      "pp_right_total" (stdlib/format.ml[515,18658+36]..[515,18658+50])
                                ]
                          ]
                    ]
                    expression (stdlib/format.ml[516,18713+4]..[517,18786+30])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (stdlib/format.ml[516,18713+8]..[516,18713+12])
                            Ppat_var "elem" (stdlib/format.ml[516,18713+8]..[516,18713+12])
                          expression (stdlib/format.ml[516,18713+15]..[516,18713+69])
                            Pexp_record
                            [
                              "size" (stdlib/format.ml[516,18713+17]..[516,18713+21]) ghost
                                expression (stdlib/format.ml[516,18713+17]..[516,18713+21])
                                  Pexp_ident "size" (stdlib/format.ml[516,18713+17]..[516,18713+21])
                              "token" (stdlib/format.ml[516,18713+23]..[516,18713+28])
                                expression (stdlib/format.ml[516,18713+31]..[516,18713+55])
                                  Pexp_construct "Pp_begin" (stdlib/format.ml[516,18713+31]..[516,18713+39])
                                  Some
                                    expression (stdlib/format.ml[516,18713+40]..[516,18713+55])
                                      Pexp_tuple
                                      [
                                        expression (stdlib/format.ml[516,18713+41]..[516,18713+47])
                                          Pexp_ident "indent" (stdlib/format.ml[516,18713+41]..[516,18713+47])
                                        expression (stdlib/format.ml[516,18713+49]..[516,18713+54])
                                          Pexp_ident "br_ty" (stdlib/format.ml[516,18713+49]..[516,18713+54])
                                      ]
                              "length" (stdlib/format.ml[516,18713+57]..[516,18713+63])
                                expression (stdlib/format.ml[516,18713+66]..[516,18713+67])
                                  Pexp_constant PConst_int (0,None)
                            ]
                            None
                      ]
                      expression (stdlib/format.ml[517,18786+4]..[517,18786+30])
                        Pexp_apply
                        expression (stdlib/format.ml[517,18786+4]..[517,18786+13])
                          Pexp_ident "scan_push" (stdlib/format.ml[517,18786+4]..[517,18786+13])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[517,18786+14]..[517,18786+19])
                              Pexp_ident "state" (stdlib/format.ml[517,18786+14]..[517,18786+19])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[517,18786+20]..[517,18786+25])
                              Pexp_construct "false" (stdlib/format.ml[517,18786+20]..[517,18786+25])
                              None
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[517,18786+26]..[517,18786+30])
                              Pexp_ident "elem" (stdlib/format.ml[517,18786+26]..[517,18786+30])
                        ]
                  Some
                    expression (stdlib/format.ml[518,18822+2]..[519,18868+45])
                      Pexp_ifthenelse
                      expression (stdlib/format.ml[518,18822+5]..[518,18822+45])
                        Pexp_apply
                        expression (stdlib/format.ml[518,18822+25]..[518,18822+26])
                          Pexp_ident "=" (stdlib/format.ml[518,18822+25]..[518,18822+26])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[518,18822+5]..[518,18822+24])
                              Pexp_field
                              expression (stdlib/format.ml[518,18822+5]..[518,18822+10])
                                Pexp_ident "state" (stdlib/format.ml[518,18822+5]..[518,18822+10])
                              "pp_curr_depth" (stdlib/format.ml[518,18822+11]..[518,18822+24])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[518,18822+27]..[518,18822+45])
                              Pexp_field
                              expression (stdlib/format.ml[518,18822+27]..[518,18822+32])
                                Pexp_ident "state" (stdlib/format.ml[518,18822+27]..[518,18822+32])
                              "pp_max_boxes" (stdlib/format.ml[518,18822+33]..[518,18822+45])
                        ]
                      expression (stdlib/format.ml[519,18868+7]..[519,18868+45])
                        Pexp_apply
                        expression (stdlib/format.ml[519,18868+7]..[519,18868+21])
                          Pexp_ident "enqueue_string" (stdlib/format.ml[519,18868+7]..[519,18868+21])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[519,18868+22]..[519,18868+27])
                              Pexp_ident "state" (stdlib/format.ml[519,18868+22]..[519,18868+27])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[519,18868+28]..[519,18868+45])
                              Pexp_field
                              expression (stdlib/format.ml[519,18868+28]..[519,18868+33])
                                Pexp_ident "state" (stdlib/format.ml[519,18868+28]..[519,18868+33])
                              "pp_ellipsis" (stdlib/format.ml[519,18868+34]..[519,18868+45])
                        ]
                      None
    ]
  structure_item (stdlib/format.ml[523,18952+0]..[523,18952+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[523,18952+4]..[523,18952+19])
          Ppat_var "pp_open_sys_box" (stdlib/format.ml[523,18952+4]..[523,18952+19])
        expression (stdlib/format.ml[523,18952+20]..[523,18952+61]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[523,18952+20]..[523,18952+25])
            Ppat_var "state" (stdlib/format.ml[523,18952+20]..[523,18952+25])
          expression (stdlib/format.ml[523,18952+28]..[523,18952+61])
            Pexp_apply
            expression (stdlib/format.ml[523,18952+28]..[523,18952+43])
              Pexp_ident "pp_open_box_gen" (stdlib/format.ml[523,18952+28]..[523,18952+43])
            [
              <arg>
              Nolabel
                expression (stdlib/format.ml[523,18952+44]..[523,18952+49])
                  Pexp_ident "state" (stdlib/format.ml[523,18952+44]..[523,18952+49])
              <arg>
              Nolabel
                expression (stdlib/format.ml[523,18952+50]..[523,18952+51])
                  Pexp_constant PConst_int (0,None)
              <arg>
              Nolabel
                expression (stdlib/format.ml[523,18952+52]..[523,18952+61])
                  Pexp_construct "Pp_hovbox" (stdlib/format.ml[523,18952+52]..[523,18952+61])
                  None
            ]
    ]
  structure_item (stdlib/format.ml[526,19066+0]..[535,19381+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[526,19066+4]..[526,19066+16])
          Ppat_var "pp_close_box" (stdlib/format.ml[526,19066+4]..[526,19066+16])
        expression (stdlib/format.ml[526,19066+17]..[535,19381+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[526,19066+17]..[526,19066+22])
            Ppat_var "state" (stdlib/format.ml[526,19066+17]..[526,19066+22])
          expression (stdlib/format.ml[526,19066+23]..[535,19381+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[526,19066+23]..[526,19066+25])
              Ppat_construct "()" (stdlib/format.ml[526,19066+23]..[526,19066+25])
              None
            expression (stdlib/format.ml[527,19094+2]..[535,19381+5])
              Pexp_ifthenelse
              expression (stdlib/format.ml[527,19094+5]..[527,19094+28])
                Pexp_apply
                expression (stdlib/format.ml[527,19094+25]..[527,19094+26])
                  Pexp_ident ">" (stdlib/format.ml[527,19094+25]..[527,19094+26])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[527,19094+5]..[527,19094+24])
                      Pexp_field
                      expression (stdlib/format.ml[527,19094+5]..[527,19094+10])
                        Pexp_ident "state" (stdlib/format.ml[527,19094+5]..[527,19094+10])
                      "pp_curr_depth" (stdlib/format.ml[527,19094+11]..[527,19094+24])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[527,19094+27]..[527,19094+28])
                      Pexp_constant PConst_int (1,None)
                ]
              expression (stdlib/format.ml[528,19128+2]..[535,19381+5])
                Pexp_sequence
                expression (stdlib/format.ml[529,19136+4]..[533,19320+7])
                  Pexp_ifthenelse
                  expression (stdlib/format.ml[529,19136+7]..[529,19136+47])
                    Pexp_apply
                    expression (stdlib/format.ml[529,19136+27]..[529,19136+28])
                      Pexp_ident "<" (stdlib/format.ml[529,19136+27]..[529,19136+28])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[529,19136+7]..[529,19136+26])
                          Pexp_field
                          expression (stdlib/format.ml[529,19136+7]..[529,19136+12])
                            Pexp_ident "state" (stdlib/format.ml[529,19136+7]..[529,19136+12])
                          "pp_curr_depth" (stdlib/format.ml[529,19136+13]..[529,19136+26])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[529,19136+29]..[529,19136+47])
                          Pexp_field
                          expression (stdlib/format.ml[529,19136+29]..[529,19136+34])
                            Pexp_ident "state" (stdlib/format.ml[529,19136+29]..[529,19136+34])
                          "pp_max_boxes" (stdlib/format.ml[529,19136+35]..[529,19136+47])
                    ]
                  expression (stdlib/format.ml[530,19189+4]..[533,19320+7])
                    Pexp_sequence
                    expression (stdlib/format.ml[531,19199+6]..[531,19199+71])
                      Pexp_apply
                      expression (stdlib/format.ml[531,19199+6]..[531,19199+16])
                        Pexp_ident "pp_enqueue" (stdlib/format.ml[531,19199+6]..[531,19199+16])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[531,19199+17]..[531,19199+22])
                            Pexp_ident "state" (stdlib/format.ml[531,19199+17]..[531,19199+22])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[531,19199+23]..[531,19199+71])
                            Pexp_record
                            [
                              "size" (stdlib/format.ml[531,19199+25]..[531,19199+29])
                                expression (stdlib/format.ml[531,19199+32]..[531,19199+41])
                                  Pexp_ident "Size.zero" (stdlib/format.ml[531,19199+32]..[531,19199+41])
                              "token" (stdlib/format.ml[531,19199+43]..[531,19199+48])
                                expression (stdlib/format.ml[531,19199+51]..[531,19199+57])
                                  Pexp_construct "Pp_end" (stdlib/format.ml[531,19199+51]..[531,19199+57])
                                  None
                              "length" (stdlib/format.ml[531,19199+59]..[531,19199+65])
                                expression (stdlib/format.ml[531,19199+68]..[531,19199+69])
                                  Pexp_constant PConst_int (0,None)
                            ]
                            None
                      ]
                    expression (stdlib/format.ml[532,19272+6]..[532,19272+47])
                      Pexp_sequence
                      expression (stdlib/format.ml[532,19272+6]..[532,19272+25])
                        Pexp_apply
                        expression (stdlib/format.ml[532,19272+6]..[532,19272+14])
                          Pexp_ident "set_size" (stdlib/format.ml[532,19272+6]..[532,19272+14])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[532,19272+15]..[532,19272+20])
                              Pexp_ident "state" (stdlib/format.ml[532,19272+15]..[532,19272+20])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[532,19272+21]..[532,19272+25])
                              Pexp_construct "true" (stdlib/format.ml[532,19272+21]..[532,19272+25])
                              None
                        ]
                      expression (stdlib/format.ml[532,19272+27]..[532,19272+47])
                        Pexp_apply
                        expression (stdlib/format.ml[532,19272+27]..[532,19272+35])
                          Pexp_ident "set_size" (stdlib/format.ml[532,19272+27]..[532,19272+35])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[532,19272+36]..[532,19272+41])
                              Pexp_ident "state" (stdlib/format.ml[532,19272+36]..[532,19272+41])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[532,19272+42]..[532,19272+47])
                              Pexp_construct "false" (stdlib/format.ml[532,19272+42]..[532,19272+47])
                              None
                        ]
                  None
                expression (stdlib/format.ml[534,19329+4]..[534,19329+50])
                  Pexp_setfield
                  expression (stdlib/format.ml[534,19329+4]..[534,19329+9])
                    Pexp_ident "state" (stdlib/format.ml[534,19329+4]..[534,19329+9])
                  "pp_curr_depth" (stdlib/format.ml[534,19329+10]..[534,19329+23])
                  expression (stdlib/format.ml[534,19329+27]..[534,19329+50])
                    Pexp_apply
                    expression (stdlib/format.ml[534,19329+47]..[534,19329+48])
                      Pexp_ident "-" (stdlib/format.ml[534,19329+47]..[534,19329+48])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[534,19329+27]..[534,19329+46])
                          Pexp_field
                          expression (stdlib/format.ml[534,19329+27]..[534,19329+32])
                            Pexp_ident "state" (stdlib/format.ml[534,19329+27]..[534,19329+32])
                          "pp_curr_depth" (stdlib/format.ml[534,19329+33]..[534,19329+46])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[534,19329+49]..[534,19329+50])
                          Pexp_constant PConst_int (1,None)
                    ]
              None
    ]
  structure_item (stdlib/format.ml[539,19436+0]..[547,19665+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[539,19436+4]..[539,19436+16])
          Ppat_var "pp_open_stag" (stdlib/format.ml[539,19436+4]..[539,19436+16])
        expression (stdlib/format.ml[539,19436+17]..[547,19665+60]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[539,19436+17]..[539,19436+22])
            Ppat_var "state" (stdlib/format.ml[539,19436+17]..[539,19436+22])
          expression (stdlib/format.ml[539,19436+23]..[547,19665+60]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[539,19436+23]..[539,19436+31])
              Ppat_var "tag_name" (stdlib/format.ml[539,19436+23]..[539,19436+31])
            expression (stdlib/format.ml[540,19470+2]..[547,19665+60])
              Pexp_sequence
              expression (stdlib/format.ml[540,19470+2]..[544,19589+5])
                Pexp_ifthenelse
                expression (stdlib/format.ml[540,19470+5]..[540,19470+24])
                  Pexp_field
                  expression (stdlib/format.ml[540,19470+5]..[540,19470+10])
                    Pexp_ident "state" (stdlib/format.ml[540,19470+5]..[540,19470+10])
                  "pp_print_tags" (stdlib/format.ml[540,19470+11]..[540,19470+24])
                expression (stdlib/format.ml[541,19500+2]..[544,19589+5])
                  Pexp_sequence
                  expression (stdlib/format.ml[542,19508+4]..[542,19508+42])
                    Pexp_apply
                    expression (stdlib/format.ml[542,19508+4]..[542,19508+14])
                      Pexp_ident "Stack.push" (stdlib/format.ml[542,19508+4]..[542,19508+14])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[542,19508+15]..[542,19508+23])
                          Pexp_ident "tag_name" (stdlib/format.ml[542,19508+15]..[542,19508+23])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[542,19508+24]..[542,19508+42])
                          Pexp_field
                          expression (stdlib/format.ml[542,19508+24]..[542,19508+29])
                            Pexp_ident "state" (stdlib/format.ml[542,19508+24]..[542,19508+29])
                          "pp_tag_stack" (stdlib/format.ml[542,19508+30]..[542,19508+42])
                    ]
                  expression (stdlib/format.ml[543,19552+4]..[543,19552+36])
                    Pexp_apply
                    expression (stdlib/format.ml[543,19552+4]..[543,19552+27])
                      Pexp_field
                      expression (stdlib/format.ml[543,19552+4]..[543,19552+9])
                        Pexp_ident "state" (stdlib/format.ml[543,19552+4]..[543,19552+9])
                      "pp_print_open_tag" (stdlib/format.ml[543,19552+10]..[543,19552+27])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[543,19552+28]..[543,19552+36])
                          Pexp_ident "tag_name" (stdlib/format.ml[543,19552+28]..[543,19552+36])
                    ]
                None
              expression (stdlib/format.ml[545,19596+2]..[547,19665+60])
                Pexp_ifthenelse
                expression (stdlib/format.ml[545,19596+5]..[545,19596+23])
                  Pexp_field
                  expression (stdlib/format.ml[545,19596+5]..[545,19596+10])
                    Pexp_ident "state" (stdlib/format.ml[545,19596+5]..[545,19596+10])
                  "pp_mark_tags" (stdlib/format.ml[545,19596+11]..[545,19596+23])
                expression (stdlib/format.ml[546,19625+4]..[547,19665+60])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (stdlib/format.ml[546,19625+8]..[546,19625+13])
                        Ppat_var "token" (stdlib/format.ml[546,19625+8]..[546,19625+13])
                      expression (stdlib/format.ml[546,19625+16]..[546,19625+36])
                        Pexp_construct "Pp_open_tag" (stdlib/format.ml[546,19625+16]..[546,19625+27])
                        Some
                          expression (stdlib/format.ml[546,19625+28]..[546,19625+36])
                            Pexp_ident "tag_name" (stdlib/format.ml[546,19625+28]..[546,19625+36])
                  ]
                  expression (stdlib/format.ml[547,19665+4]..[547,19665+60])
                    Pexp_apply
                    expression (stdlib/format.ml[547,19665+4]..[547,19665+14])
                      Pexp_ident "pp_enqueue" (stdlib/format.ml[547,19665+4]..[547,19665+14])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[547,19665+15]..[547,19665+20])
                          Pexp_ident "state" (stdlib/format.ml[547,19665+15]..[547,19665+20])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[547,19665+21]..[547,19665+60])
                          Pexp_record
                          [
                            "size" (stdlib/format.ml[547,19665+23]..[547,19665+27])
                              expression (stdlib/format.ml[547,19665+30]..[547,19665+39])
                                Pexp_ident "Size.zero" (stdlib/format.ml[547,19665+30]..[547,19665+39])
                            "token" (stdlib/format.ml[547,19665+41]..[547,19665+46]) ghost
                              expression (stdlib/format.ml[547,19665+41]..[547,19665+46])
                                Pexp_ident "token" (stdlib/format.ml[547,19665+41]..[547,19665+46])
                            "length" (stdlib/format.ml[547,19665+48]..[547,19665+54])
                              expression (stdlib/format.ml[547,19665+57]..[547,19665+58])
                                Pexp_constant PConst_int (0,None)
                          ]
                          None
                    ]
                None
    ]
  structure_item (stdlib/format.ml[551,19778+0]..[558,20059+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[551,19778+4]..[551,19778+17])
          Ppat_var "pp_close_stag" (stdlib/format.ml[551,19778+4]..[551,19778+17])
        expression (stdlib/format.ml[551,19778+18]..[558,20059+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[551,19778+18]..[551,19778+23])
            Ppat_var "state" (stdlib/format.ml[551,19778+18]..[551,19778+23])
          expression (stdlib/format.ml[551,19778+24]..[558,20059+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[551,19778+24]..[551,19778+26])
              Ppat_construct "()" (stdlib/format.ml[551,19778+24]..[551,19778+26])
              None
            expression (stdlib/format.ml[552,19807+2]..[558,20059+39])
              Pexp_sequence
              expression (stdlib/format.ml[552,19807+2]..[553,19836+75])
                Pexp_ifthenelse
                expression (stdlib/format.ml[552,19807+5]..[552,19807+23])
                  Pexp_field
                  expression (stdlib/format.ml[552,19807+5]..[552,19807+10])
                    Pexp_ident "state" (stdlib/format.ml[552,19807+5]..[552,19807+10])
                  "pp_mark_tags" (stdlib/format.ml[552,19807+11]..[552,19807+23])
                expression (stdlib/format.ml[553,19836+4]..[553,19836+75])
                  Pexp_apply
                  expression (stdlib/format.ml[553,19836+4]..[553,19836+14])
                    Pexp_ident "pp_enqueue" (stdlib/format.ml[553,19836+4]..[553,19836+14])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[553,19836+15]..[553,19836+20])
                        Pexp_ident "state" (stdlib/format.ml[553,19836+15]..[553,19836+20])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[553,19836+21]..[553,19836+75])
                        Pexp_record
                        [
                          "size" (stdlib/format.ml[553,19836+23]..[553,19836+27])
                            expression (stdlib/format.ml[553,19836+30]..[553,19836+39])
                              Pexp_ident "Size.zero" (stdlib/format.ml[553,19836+30]..[553,19836+39])
                          "token" (stdlib/format.ml[553,19836+41]..[553,19836+46])
                            expression (stdlib/format.ml[553,19836+49]..[553,19836+61])
                              Pexp_construct "Pp_close_tag" (stdlib/format.ml[553,19836+49]..[553,19836+61])
                              None
                          "length" (stdlib/format.ml[553,19836+63]..[553,19836+69])
                            expression (stdlib/format.ml[553,19836+72]..[553,19836+73])
                              Pexp_constant PConst_int (0,None)
                        ]
                        None
                  ]
                None
              expression (stdlib/format.ml[554,19913+2]..[558,20059+39])
                Pexp_ifthenelse
                expression (stdlib/format.ml[554,19913+5]..[554,19913+24])
                  Pexp_field
                  expression (stdlib/format.ml[554,19913+5]..[554,19913+10])
                    Pexp_ident "state" (stdlib/format.ml[554,19913+5]..[554,19913+10])
                  "pp_print_tags" (stdlib/format.ml[554,19913+11]..[554,19913+24])
                expression (stdlib/format.ml[555,19943+4]..[558,20059+39])
                  Pexp_match
                  expression (stdlib/format.ml[555,19943+10]..[555,19943+42])
                    Pexp_apply
                    expression (stdlib/format.ml[555,19943+10]..[555,19943+23])
                      Pexp_ident "Stack.pop_opt" (stdlib/format.ml[555,19943+10]..[555,19943+23])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[555,19943+24]..[555,19943+42])
                          Pexp_field
                          expression (stdlib/format.ml[555,19943+24]..[555,19943+29])
                            Pexp_ident "state" (stdlib/format.ml[555,19943+24]..[555,19943+29])
                          "pp_tag_stack" (stdlib/format.ml[555,19943+30]..[555,19943+42])
                    ]
                  [
                    <case>
                      pattern (stdlib/format.ml[556,19991+6]..[556,19991+10])
                        Ppat_construct "None" (stdlib/format.ml[556,19991+6]..[556,19991+10])
                        None
                      expression (stdlib/format.ml[556,19991+14]..[556,19991+16])
                        Pexp_construct "()" (stdlib/format.ml[556,19991+14]..[556,19991+16])
                        None
                    <case>
                      pattern (stdlib/format.ml[557,20036+6]..[557,20036+19])
                        Ppat_construct "Some" (stdlib/format.ml[557,20036+6]..[557,20036+10])
                        Some
                          []
                          pattern (stdlib/format.ml[557,20036+11]..[557,20036+19])
                            Ppat_var "tag_name" (stdlib/format.ml[557,20036+11]..[557,20036+19])
                      expression (stdlib/format.ml[558,20059+6]..[558,20059+39])
                        Pexp_apply
                        expression (stdlib/format.ml[558,20059+6]..[558,20059+30])
                          Pexp_field
                          expression (stdlib/format.ml[558,20059+6]..[558,20059+11])
                            Pexp_ident "state" (stdlib/format.ml[558,20059+6]..[558,20059+11])
                          "pp_print_close_tag" (stdlib/format.ml[558,20059+12]..[558,20059+30])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[558,20059+31]..[558,20059+39])
                              Pexp_ident "tag_name" (stdlib/format.ml[558,20059+31]..[558,20059+39])
                        ]
                  ]
                None
    ]
  structure_item (stdlib/format.ml[560,20100+0]..[560,20100+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[560,20100+4]..[560,20100+15])
          Ppat_var "pp_open_tag" (stdlib/format.ml[560,20100+4]..[560,20100+15])
        expression (stdlib/format.ml[560,20100+16]..[560,20100+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[560,20100+16]..[560,20100+21])
            Ppat_var "state" (stdlib/format.ml[560,20100+16]..[560,20100+21])
          expression (stdlib/format.ml[560,20100+22]..[560,20100+59]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[560,20100+22]..[560,20100+23])
              Ppat_var "s" (stdlib/format.ml[560,20100+22]..[560,20100+23])
            expression (stdlib/format.ml[560,20100+26]..[560,20100+59])
              Pexp_apply
              expression (stdlib/format.ml[560,20100+26]..[560,20100+38])
                Pexp_ident "pp_open_stag" (stdlib/format.ml[560,20100+26]..[560,20100+38])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[560,20100+39]..[560,20100+44])
                    Pexp_ident "state" (stdlib/format.ml[560,20100+39]..[560,20100+44])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[560,20100+45]..[560,20100+59])
                    Pexp_construct "String_tag" (stdlib/format.ml[560,20100+46]..[560,20100+56])
                    Some
                      expression (stdlib/format.ml[560,20100+57]..[560,20100+58])
                        Pexp_ident "s" (stdlib/format.ml[560,20100+57]..[560,20100+58])
              ]
    ]
  structure_item (stdlib/format.ml[561,20160+0]..[561,20160+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[561,20160+4]..[561,20160+16])
          Ppat_var "pp_close_tag" (stdlib/format.ml[561,20160+4]..[561,20160+16])
        expression (stdlib/format.ml[561,20160+17]..[561,20160+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[561,20160+17]..[561,20160+22])
            Ppat_var "state" (stdlib/format.ml[561,20160+17]..[561,20160+22])
          expression (stdlib/format.ml[561,20160+23]..[561,20160+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[561,20160+23]..[561,20160+25])
              Ppat_construct "()" (stdlib/format.ml[561,20160+23]..[561,20160+25])
              None
            expression (stdlib/format.ml[561,20160+28]..[561,20160+50])
              Pexp_apply
              expression (stdlib/format.ml[561,20160+28]..[561,20160+41])
                Pexp_ident "pp_close_stag" (stdlib/format.ml[561,20160+28]..[561,20160+41])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[561,20160+42]..[561,20160+47])
                    Pexp_ident "state" (stdlib/format.ml[561,20160+42]..[561,20160+47])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[561,20160+48]..[561,20160+50])
                    Pexp_construct "()" (stdlib/format.ml[561,20160+48]..[561,20160+50])
                    None
              ]
    ]
  structure_item (stdlib/format.ml[563,20212+0]..[563,20212+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[563,20212+4]..[563,20212+21])
          Ppat_var "pp_set_print_tags" (stdlib/format.ml[563,20212+4]..[563,20212+21])
        expression (stdlib/format.ml[563,20212+22]..[563,20212+56]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[563,20212+22]..[563,20212+27])
            Ppat_var "state" (stdlib/format.ml[563,20212+22]..[563,20212+27])
          expression (stdlib/format.ml[563,20212+28]..[563,20212+56]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[563,20212+28]..[563,20212+29])
              Ppat_var "b" (stdlib/format.ml[563,20212+28]..[563,20212+29])
            expression (stdlib/format.ml[563,20212+32]..[563,20212+56])
              Pexp_setfield
              expression (stdlib/format.ml[563,20212+32]..[563,20212+37])
                Pexp_ident "state" (stdlib/format.ml[563,20212+32]..[563,20212+37])
              "pp_print_tags" (stdlib/format.ml[563,20212+38]..[563,20212+51])
              expression (stdlib/format.ml[563,20212+55]..[563,20212+56])
                Pexp_ident "b" (stdlib/format.ml[563,20212+55]..[563,20212+56])
    ]
  structure_item (stdlib/format.ml[564,20269+0]..[564,20269+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[564,20269+4]..[564,20269+20])
          Ppat_var "pp_set_mark_tags" (stdlib/format.ml[564,20269+4]..[564,20269+20])
        expression (stdlib/format.ml[564,20269+21]..[564,20269+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[564,20269+21]..[564,20269+26])
            Ppat_var "state" (stdlib/format.ml[564,20269+21]..[564,20269+26])
          expression (stdlib/format.ml[564,20269+27]..[564,20269+54]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[564,20269+27]..[564,20269+28])
              Ppat_var "b" (stdlib/format.ml[564,20269+27]..[564,20269+28])
            expression (stdlib/format.ml[564,20269+31]..[564,20269+54])
              Pexp_setfield
              expression (stdlib/format.ml[564,20269+31]..[564,20269+36])
                Pexp_ident "state" (stdlib/format.ml[564,20269+31]..[564,20269+36])
              "pp_mark_tags" (stdlib/format.ml[564,20269+37]..[564,20269+49])
              expression (stdlib/format.ml[564,20269+53]..[564,20269+54])
                Pexp_ident "b" (stdlib/format.ml[564,20269+53]..[564,20269+54])
    ]
  structure_item (stdlib/format.ml[565,20324+0]..[565,20324+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[565,20324+4]..[565,20324+21])
          Ppat_var "pp_get_print_tags" (stdlib/format.ml[565,20324+4]..[565,20324+21])
        expression (stdlib/format.ml[565,20324+22]..[565,20324+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[565,20324+22]..[565,20324+27])
            Ppat_var "state" (stdlib/format.ml[565,20324+22]..[565,20324+27])
          expression (stdlib/format.ml[565,20324+28]..[565,20324+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[565,20324+28]..[565,20324+30])
              Ppat_construct "()" (stdlib/format.ml[565,20324+28]..[565,20324+30])
              None
            expression (stdlib/format.ml[565,20324+33]..[565,20324+52])
              Pexp_field
              expression (stdlib/format.ml[565,20324+33]..[565,20324+38])
                Pexp_ident "state" (stdlib/format.ml[565,20324+33]..[565,20324+38])
              "pp_print_tags" (stdlib/format.ml[565,20324+39]..[565,20324+52])
    ]
  structure_item (stdlib/format.ml[566,20377+0]..[566,20377+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[566,20377+4]..[566,20377+20])
          Ppat_var "pp_get_mark_tags" (stdlib/format.ml[566,20377+4]..[566,20377+20])
        expression (stdlib/format.ml[566,20377+21]..[566,20377+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[566,20377+21]..[566,20377+26])
            Ppat_var "state" (stdlib/format.ml[566,20377+21]..[566,20377+26])
          expression (stdlib/format.ml[566,20377+27]..[566,20377+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[566,20377+27]..[566,20377+29])
              Ppat_construct "()" (stdlib/format.ml[566,20377+27]..[566,20377+29])
              None
            expression (stdlib/format.ml[566,20377+32]..[566,20377+50])
              Pexp_field
              expression (stdlib/format.ml[566,20377+32]..[566,20377+37])
                Pexp_ident "state" (stdlib/format.ml[566,20377+32]..[566,20377+37])
              "pp_mark_tags" (stdlib/format.ml[566,20377+38]..[566,20377+50])
    ]
  structure_item (stdlib/format.ml[567,20428+0]..[568,20454+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[567,20428+4]..[567,20428+15])
          Ppat_var "pp_set_tags" (stdlib/format.ml[567,20428+4]..[567,20428+15])
        expression (stdlib/format.ml[567,20428+16]..[568,20454+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[567,20428+16]..[567,20428+21])
            Ppat_var "state" (stdlib/format.ml[567,20428+16]..[567,20428+21])
          expression (stdlib/format.ml[567,20428+22]..[568,20454+53]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[567,20428+22]..[567,20428+23])
              Ppat_var "b" (stdlib/format.ml[567,20428+22]..[567,20428+23])
            expression (stdlib/format.ml[568,20454+2]..[568,20454+53])
              Pexp_sequence
              expression (stdlib/format.ml[568,20454+2]..[568,20454+27])
                Pexp_apply
                expression (stdlib/format.ml[568,20454+2]..[568,20454+19])
                  Pexp_ident "pp_set_print_tags" (stdlib/format.ml[568,20454+2]..[568,20454+19])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[568,20454+20]..[568,20454+25])
                      Pexp_ident "state" (stdlib/format.ml[568,20454+20]..[568,20454+25])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[568,20454+26]..[568,20454+27])
                      Pexp_ident "b" (stdlib/format.ml[568,20454+26]..[568,20454+27])
                ]
              expression (stdlib/format.ml[568,20454+29]..[568,20454+53])
                Pexp_apply
                expression (stdlib/format.ml[568,20454+29]..[568,20454+45])
                  Pexp_ident "pp_set_mark_tags" (stdlib/format.ml[568,20454+29]..[568,20454+45])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[568,20454+46]..[568,20454+51])
                      Pexp_ident "state" (stdlib/format.ml[568,20454+46]..[568,20454+51])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[568,20454+52]..[568,20454+53])
                      Pexp_ident "b" (stdlib/format.ml[568,20454+52]..[568,20454+53])
                ]
    ]
  structure_item (stdlib/format.ml[572,20568+0]..[577,20797+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[572,20568+4]..[572,20568+35])
          Ppat_var "pp_get_formatter_stag_functions" (stdlib/format.ml[572,20568+4]..[572,20568+35])
        expression (stdlib/format.ml[572,20568+36]..[577,20797+1]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[572,20568+36]..[572,20568+41])
            Ppat_var "state" (stdlib/format.ml[572,20568+36]..[572,20568+41])
          expression (stdlib/format.ml[572,20568+42]..[577,20797+1]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[572,20568+42]..[572,20568+44])
              Ppat_construct "()" (stdlib/format.ml[572,20568+42]..[572,20568+44])
              None
            expression (stdlib/format.ml[572,20568+47]..[577,20797+1])
              Pexp_record
              [
                "mark_open_stag" (stdlib/format.ml[573,20617+2]..[573,20617+16])
                  expression (stdlib/format.ml[573,20617+19]..[573,20617+41])
                    Pexp_field
                    expression (stdlib/format.ml[573,20617+19]..[573,20617+24])
                      Pexp_ident "state" (stdlib/format.ml[573,20617+19]..[573,20617+24])
                    "pp_mark_open_tag" (stdlib/format.ml[573,20617+25]..[573,20617+41])
                "mark_close_stag" (stdlib/format.ml[574,20660+2]..[574,20660+17])
                  expression (stdlib/format.ml[574,20660+20]..[574,20660+43])
                    Pexp_field
                    expression (stdlib/format.ml[574,20660+20]..[574,20660+25])
                      Pexp_ident "state" (stdlib/format.ml[574,20660+20]..[574,20660+25])
                    "pp_mark_close_tag" (stdlib/format.ml[574,20660+26]..[574,20660+43])
                "print_open_stag" (stdlib/format.ml[575,20705+2]..[575,20705+17])
                  expression (stdlib/format.ml[575,20705+20]..[575,20705+43])
                    Pexp_field
                    expression (stdlib/format.ml[575,20705+20]..[575,20705+25])
                      Pexp_ident "state" (stdlib/format.ml[575,20705+20]..[575,20705+25])
                    "pp_print_open_tag" (stdlib/format.ml[575,20705+26]..[575,20705+43])
                "print_close_stag" (stdlib/format.ml[576,20750+2]..[576,20750+18])
                  expression (stdlib/format.ml[576,20750+21]..[576,20750+45])
                    Pexp_field
                    expression (stdlib/format.ml[576,20750+21]..[576,20750+26])
                      Pexp_ident "state" (stdlib/format.ml[576,20750+21]..[576,20750+26])
                    "pp_print_close_tag" (stdlib/format.ml[576,20750+27]..[576,20750+45])
              ]
              None
    ]
  structure_item (stdlib/format.ml[580,20801+0]..[589,21064+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[580,20801+4]..[580,20801+35])
          Ppat_var "pp_set_formatter_stag_functions" (stdlib/format.ml[580,20801+4]..[580,20801+35])
        expression (stdlib/format.ml[580,20801+36]..[589,21064+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[580,20801+36]..[580,20801+41])
            Ppat_var "state" (stdlib/format.ml[580,20801+36]..[580,20801+41])
          expression (stdlib/format.ml[580,20801+42]..[589,21064+33]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[580,20801+42]..[585,20957+3])
              Ppat_record Closed
              [
                "mark_open_stag" (stdlib/format.ml[581,20845+5]..[581,20845+19])
                  pattern (stdlib/format.ml[581,20845+22]..[581,20845+25])
                    Ppat_var "mot" (stdlib/format.ml[581,20845+22]..[581,20845+25])
                "mark_close_stag" (stdlib/format.ml[582,20872+5]..[582,20872+20])
                  pattern (stdlib/format.ml[582,20872+23]..[582,20872+26])
                    Ppat_var "mct" (stdlib/format.ml[582,20872+23]..[582,20872+26])
                "print_open_stag" (stdlib/format.ml[583,20900+5]..[583,20900+20])
                  pattern (stdlib/format.ml[583,20900+23]..[583,20900+26])
                    Ppat_var "pot" (stdlib/format.ml[583,20900+23]..[583,20900+26])
                "print_close_stag" (stdlib/format.ml[584,20928+5]..[584,20928+21])
                  pattern (stdlib/format.ml[584,20928+24]..[584,20928+27])
                    Ppat_var "pct" (stdlib/format.ml[584,20928+24]..[584,20928+27])
              ]
            expression (stdlib/format.ml[586,20963+2]..[589,21064+33])
              Pexp_sequence
              expression (stdlib/format.ml[586,20963+2]..[586,20963+31])
                Pexp_setfield
                expression (stdlib/format.ml[586,20963+2]..[586,20963+7])
                  Pexp_ident "state" (stdlib/format.ml[586,20963+2]..[586,20963+7])
                "pp_mark_open_tag" (stdlib/format.ml[586,20963+8]..[586,20963+24])
                expression (stdlib/format.ml[586,20963+28]..[586,20963+31])
                  Pexp_ident "mot" (stdlib/format.ml[586,20963+28]..[586,20963+31])
              expression (stdlib/format.ml[587,20996+2]..[589,21064+33])
                Pexp_sequence
                expression (stdlib/format.ml[587,20996+2]..[587,20996+32])
                  Pexp_setfield
                  expression (stdlib/format.ml[587,20996+2]..[587,20996+7])
                    Pexp_ident "state" (stdlib/format.ml[587,20996+2]..[587,20996+7])
                  "pp_mark_close_tag" (stdlib/format.ml[587,20996+8]..[587,20996+25])
                  expression (stdlib/format.ml[587,20996+29]..[587,20996+32])
                    Pexp_ident "mct" (stdlib/format.ml[587,20996+29]..[587,20996+32])
                expression (stdlib/format.ml[588,21030+2]..[589,21064+33])
                  Pexp_sequence
                  expression (stdlib/format.ml[588,21030+2]..[588,21030+32])
                    Pexp_setfield
                    expression (stdlib/format.ml[588,21030+2]..[588,21030+7])
                      Pexp_ident "state" (stdlib/format.ml[588,21030+2]..[588,21030+7])
                    "pp_print_open_tag" (stdlib/format.ml[588,21030+8]..[588,21030+25])
                    expression (stdlib/format.ml[588,21030+29]..[588,21030+32])
                      Pexp_ident "pot" (stdlib/format.ml[588,21030+29]..[588,21030+32])
                  expression (stdlib/format.ml[589,21064+2]..[589,21064+33])
                    Pexp_setfield
                    expression (stdlib/format.ml[589,21064+2]..[589,21064+7])
                      Pexp_ident "state" (stdlib/format.ml[589,21064+2]..[589,21064+7])
                    "pp_print_close_tag" (stdlib/format.ml[589,21064+8]..[589,21064+26])
                    expression (stdlib/format.ml[589,21064+30]..[589,21064+33])
                      Pexp_ident "pct" (stdlib/format.ml[589,21064+30]..[589,21064+33])
    ]
  structure_item (stdlib/format.ml[593,21133+0]..[603,21466+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[593,21133+4]..[593,21133+12])
          Ppat_var "pp_rinit" (stdlib/format.ml[593,21133+4]..[593,21133+12])
        expression (stdlib/format.ml[593,21133+13]..[603,21466+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[593,21133+13]..[593,21133+18])
            Ppat_var "state" (stdlib/format.ml[593,21133+13]..[593,21133+18])
          expression (stdlib/format.ml[594,21154+2]..[603,21466+23])
            Pexp_sequence
            expression (stdlib/format.ml[594,21154+2]..[594,21154+22])
              Pexp_apply
              expression (stdlib/format.ml[594,21154+2]..[594,21154+16])
                Pexp_ident "pp_clear_queue" (stdlib/format.ml[594,21154+2]..[594,21154+16])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[594,21154+17]..[594,21154+22])
                    Pexp_ident "state" (stdlib/format.ml[594,21154+17]..[594,21154+22])
              ]
            expression (stdlib/format.ml[595,21178+2]..[603,21466+23])
              Pexp_sequence
              expression (stdlib/format.ml[595,21178+2]..[595,21178+43])
                Pexp_apply
                expression (stdlib/format.ml[595,21178+2]..[595,21178+23])
                  Pexp_ident "initialize_scan_stack" (stdlib/format.ml[595,21178+2]..[595,21178+23])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[595,21178+24]..[595,21178+43])
                      Pexp_field
                      expression (stdlib/format.ml[595,21178+24]..[595,21178+29])
                        Pexp_ident "state" (stdlib/format.ml[595,21178+24]..[595,21178+29])
                      "pp_scan_stack" (stdlib/format.ml[595,21178+30]..[595,21178+43])
                ]
              expression (stdlib/format.ml[596,21223+2]..[603,21466+23])
                Pexp_sequence
                expression (stdlib/format.ml[596,21223+2]..[596,21223+35])
                  Pexp_apply
                  expression (stdlib/format.ml[596,21223+2]..[596,21223+13])
                    Pexp_ident "Stack.clear" (stdlib/format.ml[596,21223+2]..[596,21223+13])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[596,21223+14]..[596,21223+35])
                        Pexp_field
                        expression (stdlib/format.ml[596,21223+14]..[596,21223+19])
                          Pexp_ident "state" (stdlib/format.ml[596,21223+14]..[596,21223+19])
                        "pp_format_stack" (stdlib/format.ml[596,21223+20]..[596,21223+35])
                  ]
                expression (stdlib/format.ml[597,21260+2]..[603,21466+23])
                  Pexp_sequence
                  expression (stdlib/format.ml[597,21260+2]..[597,21260+33])
                    Pexp_apply
                    expression (stdlib/format.ml[597,21260+2]..[597,21260+13])
                      Pexp_ident "Stack.clear" (stdlib/format.ml[597,21260+2]..[597,21260+13])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[597,21260+14]..[597,21260+33])
                          Pexp_field
                          expression (stdlib/format.ml[597,21260+14]..[597,21260+19])
                            Pexp_ident "state" (stdlib/format.ml[597,21260+14]..[597,21260+19])
                          "pp_tbox_stack" (stdlib/format.ml[597,21260+20]..[597,21260+33])
                    ]
                  expression (stdlib/format.ml[598,21295+2]..[603,21466+23])
                    Pexp_sequence
                    expression (stdlib/format.ml[598,21295+2]..[598,21295+32])
                      Pexp_apply
                      expression (stdlib/format.ml[598,21295+2]..[598,21295+13])
                        Pexp_ident "Stack.clear" (stdlib/format.ml[598,21295+2]..[598,21295+13])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[598,21295+14]..[598,21295+32])
                            Pexp_field
                            expression (stdlib/format.ml[598,21295+14]..[598,21295+19])
                              Pexp_ident "state" (stdlib/format.ml[598,21295+14]..[598,21295+19])
                            "pp_tag_stack" (stdlib/format.ml[598,21295+20]..[598,21295+32])
                      ]
                    expression (stdlib/format.ml[599,21329+2]..[603,21466+23])
                      Pexp_sequence
                      expression (stdlib/format.ml[599,21329+2]..[599,21329+33])
                        Pexp_apply
                        expression (stdlib/format.ml[599,21329+2]..[599,21329+13])
                          Pexp_ident "Stack.clear" (stdlib/format.ml[599,21329+2]..[599,21329+13])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[599,21329+14]..[599,21329+33])
                              Pexp_field
                              expression (stdlib/format.ml[599,21329+14]..[599,21329+19])
                                Pexp_ident "state" (stdlib/format.ml[599,21329+14]..[599,21329+19])
                              "pp_mark_stack" (stdlib/format.ml[599,21329+20]..[599,21329+33])
                        ]
                      expression (stdlib/format.ml[600,21364+2]..[603,21466+23])
                        Pexp_sequence
                        expression (stdlib/format.ml[600,21364+2]..[600,21364+30])
                          Pexp_setfield
                          expression (stdlib/format.ml[600,21364+2]..[600,21364+7])
                            Pexp_ident "state" (stdlib/format.ml[600,21364+2]..[600,21364+7])
                          "pp_current_indent" (stdlib/format.ml[600,21364+8]..[600,21364+25])
                          expression (stdlib/format.ml[600,21364+29]..[600,21364+30])
                            Pexp_constant PConst_int (0,None)
                        expression (stdlib/format.ml[601,21396+2]..[603,21466+23])
                          Pexp_sequence
                          expression (stdlib/format.ml[601,21396+2]..[601,21396+26])
                            Pexp_setfield
                            expression (stdlib/format.ml[601,21396+2]..[601,21396+7])
                              Pexp_ident "state" (stdlib/format.ml[601,21396+2]..[601,21396+7])
                            "pp_curr_depth" (stdlib/format.ml[601,21396+8]..[601,21396+21])
                            expression (stdlib/format.ml[601,21396+25]..[601,21396+26])
                              Pexp_constant PConst_int (0,None)
                          expression (stdlib/format.ml[602,21424+2]..[603,21466+23])
                            Pexp_sequence
                            expression (stdlib/format.ml[602,21424+2]..[602,21424+40])
                              Pexp_setfield
                              expression (stdlib/format.ml[602,21424+2]..[602,21424+7])
                                Pexp_ident "state" (stdlib/format.ml[602,21424+2]..[602,21424+7])
                              "pp_space_left" (stdlib/format.ml[602,21424+8]..[602,21424+21])
                              expression (stdlib/format.ml[602,21424+25]..[602,21424+40])
                                Pexp_field
                                expression (stdlib/format.ml[602,21424+25]..[602,21424+30])
                                  Pexp_ident "state" (stdlib/format.ml[602,21424+25]..[602,21424+30])
                                "pp_margin" (stdlib/format.ml[602,21424+31]..[602,21424+40])
                            expression (stdlib/format.ml[603,21466+2]..[603,21466+23])
                              Pexp_apply
                              expression (stdlib/format.ml[603,21466+2]..[603,21466+17])
                                Pexp_ident "pp_open_sys_box" (stdlib/format.ml[603,21466+2]..[603,21466+17])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[603,21466+18]..[603,21466+23])
                                    Pexp_ident "state" (stdlib/format.ml[603,21466+18]..[603,21466+23])
                              ]
    ]
  structure_item (stdlib/format.ml[605,21491+0]..[606,21519+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[605,21491+4]..[605,21491+19])
          Ppat_var "clear_tag_stack" (stdlib/format.ml[605,21491+4]..[605,21491+19])
        expression (stdlib/format.ml[605,21491+20]..[606,21519+64]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[605,21491+20]..[605,21491+25])
            Ppat_var "state" (stdlib/format.ml[605,21491+20]..[605,21491+25])
          expression (stdlib/format.ml[606,21519+2]..[606,21519+64])
            Pexp_apply
            expression (stdlib/format.ml[606,21519+2]..[606,21519+12])
              Pexp_ident "Stack.iter" (stdlib/format.ml[606,21519+2]..[606,21519+12])
            [
              <arg>
              Nolabel
                expression (stdlib/format.ml[606,21519+13]..[606,21519+45])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (stdlib/format.ml[606,21519+18]..[606,21519+19])
                    Ppat_any
                  expression (stdlib/format.ml[606,21519+23]..[606,21519+44])
                    Pexp_apply
                    expression (stdlib/format.ml[606,21519+23]..[606,21519+35])
                      Pexp_ident "pp_close_tag" (stdlib/format.ml[606,21519+23]..[606,21519+35])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[606,21519+36]..[606,21519+41])
                          Pexp_ident "state" (stdlib/format.ml[606,21519+36]..[606,21519+41])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[606,21519+42]..[606,21519+44])
                          Pexp_construct "()" (stdlib/format.ml[606,21519+42]..[606,21519+44])
                          None
                    ]
              <arg>
              Nolabel
                expression (stdlib/format.ml[606,21519+46]..[606,21519+64])
                  Pexp_field
                  expression (stdlib/format.ml[606,21519+46]..[606,21519+51])
                    Pexp_ident "state" (stdlib/format.ml[606,21519+46]..[606,21519+51])
                  "pp_tag_stack" (stdlib/format.ml[606,21519+52]..[606,21519+64])
            ]
    ]
  structure_item (stdlib/format.ml[610,21623+0]..[618,21844+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[610,21623+4]..[610,21623+18])
          Ppat_var "pp_flush_queue" (stdlib/format.ml[610,21623+4]..[610,21623+18])
        expression (stdlib/format.ml[610,21623+19]..[618,21844+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[610,21623+19]..[610,21623+24])
            Ppat_var "state" (stdlib/format.ml[610,21623+19]..[610,21623+24])
          expression (stdlib/format.ml[610,21623+25]..[618,21844+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[610,21623+25]..[610,21623+26])
              Ppat_var "b" (stdlib/format.ml[610,21623+25]..[610,21623+26])
            expression (stdlib/format.ml[611,21652+2]..[618,21844+16])
              Pexp_sequence
              expression (stdlib/format.ml[611,21652+2]..[611,21652+23])
                Pexp_apply
                expression (stdlib/format.ml[611,21652+2]..[611,21652+17])
                  Pexp_ident "clear_tag_stack" (stdlib/format.ml[611,21652+2]..[611,21652+17])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[611,21652+18]..[611,21652+23])
                      Pexp_ident "state" (stdlib/format.ml[611,21652+18]..[611,21652+23])
                ]
              expression (stdlib/format.ml[612,21677+2]..[618,21844+16])
                Pexp_sequence
                expression (stdlib/format.ml[612,21677+2]..[614,21738+6])
                  Pexp_while
                  expression (stdlib/format.ml[612,21677+8]..[612,21677+31])
                    Pexp_apply
                    expression (stdlib/format.ml[612,21677+28]..[612,21677+29])
                      Pexp_ident ">" (stdlib/format.ml[612,21677+28]..[612,21677+29])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[612,21677+8]..[612,21677+27])
                          Pexp_field
                          expression (stdlib/format.ml[612,21677+8]..[612,21677+13])
                            Pexp_ident "state" (stdlib/format.ml[612,21677+8]..[612,21677+13])
                          "pp_curr_depth" (stdlib/format.ml[612,21677+14]..[612,21677+27])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[612,21677+30]..[612,21677+31])
                          Pexp_constant PConst_int (1,None)
                    ]
                  expression (stdlib/format.ml[613,21712+4]..[613,21712+25])
                    Pexp_apply
                    expression (stdlib/format.ml[613,21712+4]..[613,21712+16])
                      Pexp_ident "pp_close_box" (stdlib/format.ml[613,21712+4]..[613,21712+16])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[613,21712+17]..[613,21712+22])
                          Pexp_ident "state" (stdlib/format.ml[613,21712+17]..[613,21712+22])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[613,21712+23]..[613,21712+25])
                          Pexp_construct "()" (stdlib/format.ml[613,21712+23]..[613,21712+25])
                          None
                    ]
                expression (stdlib/format.ml[615,21746+2]..[618,21844+16])
                  Pexp_sequence
                  expression (stdlib/format.ml[615,21746+2]..[615,21746+37])
                    Pexp_setfield
                    expression (stdlib/format.ml[615,21746+2]..[615,21746+7])
                      Pexp_ident "state" (stdlib/format.ml[615,21746+2]..[615,21746+7])
                    "pp_right_total" (stdlib/format.ml[615,21746+8]..[615,21746+22])
                    expression (stdlib/format.ml[615,21746+26]..[615,21746+37])
                      Pexp_ident "pp_infinity" (stdlib/format.ml[615,21746+26]..[615,21746+37])
                  expression (stdlib/format.ml[616,21785+2]..[618,21844+16])
                    Pexp_sequence
                    expression (stdlib/format.ml[616,21785+2]..[616,21785+20])
                      Pexp_apply
                      expression (stdlib/format.ml[616,21785+2]..[616,21785+14])
                        Pexp_ident "advance_left" (stdlib/format.ml[616,21785+2]..[616,21785+14])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[616,21785+15]..[616,21785+20])
                            Pexp_ident "state" (stdlib/format.ml[616,21785+15]..[616,21785+20])
                      ]
                    expression (stdlib/format.ml[617,21807+2]..[618,21844+16])
                      Pexp_sequence
                      expression (stdlib/format.ml[617,21807+2]..[617,21807+35])
                        Pexp_ifthenelse
                        expression (stdlib/format.ml[617,21807+5]..[617,21807+6])
                          Pexp_ident "b" (stdlib/format.ml[617,21807+5]..[617,21807+6])
                        expression (stdlib/format.ml[617,21807+12]..[617,21807+35])
                          Pexp_apply
                          expression (stdlib/format.ml[617,21807+12]..[617,21807+29])
                            Pexp_ident "pp_output_newline" (stdlib/format.ml[617,21807+12]..[617,21807+29])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[617,21807+30]..[617,21807+35])
                                Pexp_ident "state" (stdlib/format.ml[617,21807+30]..[617,21807+35])
                          ]
                        None
                      expression (stdlib/format.ml[618,21844+2]..[618,21844+16])
                        Pexp_apply
                        expression (stdlib/format.ml[618,21844+2]..[618,21844+10])
                          Pexp_ident "pp_rinit" (stdlib/format.ml[618,21844+2]..[618,21844+10])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[618,21844+11]..[618,21844+16])
                              Pexp_ident "state" (stdlib/format.ml[618,21844+11]..[618,21844+16])
                        ]
    ]
  structure_item (stdlib/format.ml[627,21942+0]..[629,22024+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[627,21942+4]..[627,21942+20])
          Ppat_var "pp_print_as_size" (stdlib/format.ml[627,21942+4]..[627,21942+20])
        expression (stdlib/format.ml[627,21942+21]..[629,22024+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[627,21942+21]..[627,21942+26])
            Ppat_var "state" (stdlib/format.ml[627,21942+21]..[627,21942+26])
          expression (stdlib/format.ml[627,21942+27]..[629,22024+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[627,21942+27]..[627,21942+31])
              Ppat_var "size" (stdlib/format.ml[627,21942+27]..[627,21942+31])
            expression (stdlib/format.ml[627,21942+32]..[629,22024+37]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[627,21942+32]..[627,21942+33])
                Ppat_var "s" (stdlib/format.ml[627,21942+32]..[627,21942+33])
              expression (stdlib/format.ml[628,21978+2]..[629,22024+37])
                Pexp_ifthenelse
                expression (stdlib/format.ml[628,21978+5]..[628,21978+45])
                  Pexp_apply
                  expression (stdlib/format.ml[628,21978+25]..[628,21978+26])
                    Pexp_ident "<" (stdlib/format.ml[628,21978+25]..[628,21978+26])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[628,21978+5]..[628,21978+24])
                        Pexp_field
                        expression (stdlib/format.ml[628,21978+5]..[628,21978+10])
                          Pexp_ident "state" (stdlib/format.ml[628,21978+5]..[628,21978+10])
                        "pp_curr_depth" (stdlib/format.ml[628,21978+11]..[628,21978+24])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[628,21978+27]..[628,21978+45])
                        Pexp_field
                        expression (stdlib/format.ml[628,21978+27]..[628,21978+32])
                          Pexp_ident "state" (stdlib/format.ml[628,21978+27]..[628,21978+32])
                        "pp_max_boxes" (stdlib/format.ml[628,21978+33]..[628,21978+45])
                  ]
                expression (stdlib/format.ml[629,22024+7]..[629,22024+37])
                  Pexp_apply
                  expression (stdlib/format.ml[629,22024+7]..[629,22024+24])
                    Pexp_ident "enqueue_string_as" (stdlib/format.ml[629,22024+7]..[629,22024+24])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[629,22024+25]..[629,22024+30])
                        Pexp_ident "state" (stdlib/format.ml[629,22024+25]..[629,22024+30])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[629,22024+31]..[629,22024+35])
                        Pexp_ident "size" (stdlib/format.ml[629,22024+31]..[629,22024+35])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[629,22024+36]..[629,22024+37])
                        Pexp_ident "s" (stdlib/format.ml[629,22024+36]..[629,22024+37])
                  ]
                None
    ]
  structure_item (stdlib/format.ml[632,22064+0]..[633,22096+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[632,22064+4]..[632,22064+15])
          Ppat_var "pp_print_as" (stdlib/format.ml[632,22064+4]..[632,22064+15])
        expression (stdlib/format.ml[632,22064+16]..[633,22096+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[632,22064+16]..[632,22064+21])
            Ppat_var "state" (stdlib/format.ml[632,22064+16]..[632,22064+21])
          expression (stdlib/format.ml[632,22064+22]..[633,22096+46]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[632,22064+22]..[632,22064+27])
              Ppat_var "isize" (stdlib/format.ml[632,22064+22]..[632,22064+27])
            expression (stdlib/format.ml[632,22064+28]..[633,22096+46]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[632,22064+28]..[632,22064+29])
                Ppat_var "s" (stdlib/format.ml[632,22064+28]..[632,22064+29])
              expression (stdlib/format.ml[633,22096+2]..[633,22096+46])
                Pexp_apply
                expression (stdlib/format.ml[633,22096+2]..[633,22096+18])
                  Pexp_ident "pp_print_as_size" (stdlib/format.ml[633,22096+2]..[633,22096+18])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[633,22096+19]..[633,22096+24])
                      Pexp_ident "state" (stdlib/format.ml[633,22096+19]..[633,22096+24])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[633,22096+25]..[633,22096+44])
                      Pexp_apply
                      expression (stdlib/format.ml[633,22096+26]..[633,22096+37])
                        Pexp_ident "Size.of_int" (stdlib/format.ml[633,22096+26]..[633,22096+37])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[633,22096+38]..[633,22096+43])
                            Pexp_ident "isize" (stdlib/format.ml[633,22096+38]..[633,22096+43])
                      ]
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[633,22096+45]..[633,22096+46])
                      Pexp_ident "s" (stdlib/format.ml[633,22096+45]..[633,22096+46])
                ]
    ]
  structure_item (stdlib/format.ml[636,22145+0]..[637,22175+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[636,22145+4]..[636,22145+19])
          Ppat_var "pp_print_string" (stdlib/format.ml[636,22145+4]..[636,22145+19])
        expression (stdlib/format.ml[636,22145+20]..[637,22175+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[636,22145+20]..[636,22145+25])
            Ppat_var "state" (stdlib/format.ml[636,22145+20]..[636,22145+25])
          expression (stdlib/format.ml[636,22145+26]..[637,22175+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[636,22145+26]..[636,22145+27])
              Ppat_var "s" (stdlib/format.ml[636,22145+26]..[636,22145+27])
            expression (stdlib/format.ml[637,22175+2]..[637,22175+39])
              Pexp_apply
              expression (stdlib/format.ml[637,22175+2]..[637,22175+13])
                Pexp_ident "pp_print_as" (stdlib/format.ml[637,22175+2]..[637,22175+13])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[637,22175+14]..[637,22175+19])
                    Pexp_ident "state" (stdlib/format.ml[637,22175+14]..[637,22175+19])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[637,22175+20]..[637,22175+37])
                    Pexp_apply
                    expression (stdlib/format.ml[637,22175+21]..[637,22175+34])
                      Pexp_ident "String.length" (stdlib/format.ml[637,22175+21]..[637,22175+34])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[637,22175+35]..[637,22175+36])
                          Pexp_ident "s" (stdlib/format.ml[637,22175+35]..[637,22175+36])
                    ]
                <arg>
                Nolabel
                  expression (stdlib/format.ml[637,22175+38]..[637,22175+39])
                    Pexp_ident "s" (stdlib/format.ml[637,22175+38]..[637,22175+39])
              ]
    ]
  structure_item (stdlib/format.ml[639,22216+0]..[640,22245+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[639,22216+4]..[639,22216+18])
          Ppat_var "pp_print_bytes" (stdlib/format.ml[639,22216+4]..[639,22216+18])
        expression (stdlib/format.ml[639,22216+19]..[640,22245+56]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[639,22216+19]..[639,22216+24])
            Ppat_var "state" (stdlib/format.ml[639,22216+19]..[639,22216+24])
          expression (stdlib/format.ml[639,22216+25]..[640,22245+56]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[639,22216+25]..[639,22216+26])
              Ppat_var "s" (stdlib/format.ml[639,22216+25]..[639,22216+26])
            expression (stdlib/format.ml[640,22245+2]..[640,22245+56])
              Pexp_apply
              expression (stdlib/format.ml[640,22245+2]..[640,22245+13])
                Pexp_ident "pp_print_as" (stdlib/format.ml[640,22245+2]..[640,22245+13])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[640,22245+14]..[640,22245+19])
                    Pexp_ident "state" (stdlib/format.ml[640,22245+14]..[640,22245+19])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[640,22245+20]..[640,22245+36])
                    Pexp_apply
                    expression (stdlib/format.ml[640,22245+21]..[640,22245+33])
                      Pexp_ident "Bytes.length" (stdlib/format.ml[640,22245+21]..[640,22245+33])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[640,22245+34]..[640,22245+35])
                          Pexp_ident "s" (stdlib/format.ml[640,22245+34]..[640,22245+35])
                    ]
                <arg>
                Nolabel
                  expression (stdlib/format.ml[640,22245+37]..[640,22245+56])
                    Pexp_apply
                    expression (stdlib/format.ml[640,22245+38]..[640,22245+53])
                      Pexp_ident "Bytes.to_string" (stdlib/format.ml[640,22245+38]..[640,22245+53])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[640,22245+54]..[640,22245+55])
                          Pexp_ident "s" (stdlib/format.ml[640,22245+54]..[640,22245+55])
                    ]
              ]
    ]
  structure_item (stdlib/format.ml[643,22331+0]..[643,22331+66])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[643,22331+4]..[643,22331+16])
          Ppat_var "pp_print_int" (stdlib/format.ml[643,22331+4]..[643,22331+16])
        expression (stdlib/format.ml[643,22331+17]..[643,22331+66]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[643,22331+17]..[643,22331+22])
            Ppat_var "state" (stdlib/format.ml[643,22331+17]..[643,22331+22])
          expression (stdlib/format.ml[643,22331+23]..[643,22331+66]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[643,22331+23]..[643,22331+24])
              Ppat_var "i" (stdlib/format.ml[643,22331+23]..[643,22331+24])
            expression (stdlib/format.ml[643,22331+27]..[643,22331+66])
              Pexp_apply
              expression (stdlib/format.ml[643,22331+27]..[643,22331+42])
                Pexp_ident "pp_print_string" (stdlib/format.ml[643,22331+27]..[643,22331+42])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[643,22331+43]..[643,22331+48])
                    Pexp_ident "state" (stdlib/format.ml[643,22331+43]..[643,22331+48])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[643,22331+49]..[643,22331+66])
                    Pexp_apply
                    expression (stdlib/format.ml[643,22331+50]..[643,22331+63])
                      Pexp_ident "Int.to_string" (stdlib/format.ml[643,22331+50]..[643,22331+63])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[643,22331+64]..[643,22331+65])
                          Pexp_ident "i" (stdlib/format.ml[643,22331+64]..[643,22331+65])
                    ]
              ]
    ]
  structure_item (stdlib/format.ml[646,22424+0]..[646,22424+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[646,22424+4]..[646,22424+18])
          Ppat_var "pp_print_float" (stdlib/format.ml[646,22424+4]..[646,22424+18])
        expression (stdlib/format.ml[646,22424+19]..[646,22424+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[646,22424+19]..[646,22424+24])
            Ppat_var "state" (stdlib/format.ml[646,22424+19]..[646,22424+24])
          expression (stdlib/format.ml[646,22424+25]..[646,22424+70]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[646,22424+25]..[646,22424+26])
              Ppat_var "f" (stdlib/format.ml[646,22424+25]..[646,22424+26])
            expression (stdlib/format.ml[646,22424+29]..[646,22424+70])
              Pexp_apply
              expression (stdlib/format.ml[646,22424+29]..[646,22424+44])
                Pexp_ident "pp_print_string" (stdlib/format.ml[646,22424+29]..[646,22424+44])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[646,22424+45]..[646,22424+50])
                    Pexp_ident "state" (stdlib/format.ml[646,22424+45]..[646,22424+50])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[646,22424+51]..[646,22424+70])
                    Pexp_apply
                    expression (stdlib/format.ml[646,22424+52]..[646,22424+67])
                      Pexp_ident "string_of_float" (stdlib/format.ml[646,22424+52]..[646,22424+67])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[646,22424+68]..[646,22424+69])
                          Pexp_ident "f" (stdlib/format.ml[646,22424+68]..[646,22424+69])
                    ]
              ]
    ]
  structure_item (stdlib/format.ml[649,22523+0]..[649,22523+68])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[649,22523+4]..[649,22523+17])
          Ppat_var "pp_print_bool" (stdlib/format.ml[649,22523+4]..[649,22523+17])
        expression (stdlib/format.ml[649,22523+18]..[649,22523+68]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[649,22523+18]..[649,22523+23])
            Ppat_var "state" (stdlib/format.ml[649,22523+18]..[649,22523+23])
          expression (stdlib/format.ml[649,22523+24]..[649,22523+68]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[649,22523+24]..[649,22523+25])
              Ppat_var "b" (stdlib/format.ml[649,22523+24]..[649,22523+25])
            expression (stdlib/format.ml[649,22523+28]..[649,22523+68])
              Pexp_apply
              expression (stdlib/format.ml[649,22523+28]..[649,22523+43])
                Pexp_ident "pp_print_string" (stdlib/format.ml[649,22523+28]..[649,22523+43])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[649,22523+44]..[649,22523+49])
                    Pexp_ident "state" (stdlib/format.ml[649,22523+44]..[649,22523+49])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[649,22523+50]..[649,22523+68])
                    Pexp_apply
                    expression (stdlib/format.ml[649,22523+51]..[649,22523+65])
                      Pexp_ident "string_of_bool" (stdlib/format.ml[649,22523+51]..[649,22523+65])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[649,22523+66]..[649,22523+67])
                          Pexp_ident "b" (stdlib/format.ml[649,22523+66]..[649,22523+67])
                    ]
              ]
    ]
  structure_item (stdlib/format.ml[652,22617+0]..[653,22645+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[652,22617+4]..[652,22617+17])
          Ppat_var "pp_print_char" (stdlib/format.ml[652,22617+4]..[652,22617+17])
        expression (stdlib/format.ml[652,22617+18]..[653,22645+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[652,22617+18]..[652,22617+23])
            Ppat_var "state" (stdlib/format.ml[652,22617+18]..[652,22617+23])
          expression (stdlib/format.ml[652,22617+24]..[653,22645+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[652,22617+24]..[652,22617+25])
              Ppat_var "c" (stdlib/format.ml[652,22617+24]..[652,22617+25])
            expression (stdlib/format.ml[653,22645+2]..[653,22645+39])
              Pexp_apply
              expression (stdlib/format.ml[653,22645+2]..[653,22645+13])
                Pexp_ident "pp_print_as" (stdlib/format.ml[653,22645+2]..[653,22645+13])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[653,22645+14]..[653,22645+19])
                    Pexp_ident "state" (stdlib/format.ml[653,22645+14]..[653,22645+19])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[653,22645+20]..[653,22645+21])
                    Pexp_constant PConst_int (1,None)
                <arg>
                Nolabel
                  expression (stdlib/format.ml[653,22645+22]..[653,22645+39])
                    Pexp_apply
                    expression (stdlib/format.ml[653,22645+23]..[653,22645+34])
                      Pexp_ident "String.make" (stdlib/format.ml[653,22645+23]..[653,22645+34])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[653,22645+35]..[653,22645+36])
                          Pexp_constant PConst_int (1,None)
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[653,22645+37]..[653,22645+38])
                          Pexp_ident "c" (stdlib/format.ml[653,22645+37]..[653,22645+38])
                    ]
              ]
    ]
  structure_item (stdlib/format.ml[657,22708+0]..[662,22982+66])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[657,22708+4]..[657,22708+16])
          Ppat_var "pp_open_hbox" (stdlib/format.ml[657,22708+4]..[657,22708+16])
        expression (stdlib/format.ml[657,22708+17]..[657,22708+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[657,22708+17]..[657,22708+22])
            Ppat_var "state" (stdlib/format.ml[657,22708+17]..[657,22708+22])
          expression (stdlib/format.ml[657,22708+23]..[657,22708+59]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[657,22708+23]..[657,22708+25])
              Ppat_construct "()" (stdlib/format.ml[657,22708+23]..[657,22708+25])
              None
            expression (stdlib/format.ml[657,22708+28]..[657,22708+59])
              Pexp_apply
              expression (stdlib/format.ml[657,22708+28]..[657,22708+43])
                Pexp_ident "pp_open_box_gen" (stdlib/format.ml[657,22708+28]..[657,22708+43])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[657,22708+44]..[657,22708+49])
                    Pexp_ident "state" (stdlib/format.ml[657,22708+44]..[657,22708+49])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[657,22708+50]..[657,22708+51])
                    Pexp_constant PConst_int (0,None)
                <arg>
                Nolabel
                  expression (stdlib/format.ml[657,22708+52]..[657,22708+59])
                    Pexp_construct "Pp_hbox" (stdlib/format.ml[657,22708+52]..[657,22708+59])
                    None
              ]
      <def>
        pattern (stdlib/format.ml[658,22768+4]..[658,22768+16])
          Ppat_var "pp_open_vbox" (stdlib/format.ml[658,22768+4]..[658,22768+16])
        expression (stdlib/format.ml[658,22768+17]..[658,22768+68]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[658,22768+17]..[658,22768+22])
            Ppat_var "state" (stdlib/format.ml[658,22768+17]..[658,22768+22])
          expression (stdlib/format.ml[658,22768+23]..[658,22768+68]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[658,22768+23]..[658,22768+29])
              Ppat_var "indent" (stdlib/format.ml[658,22768+23]..[658,22768+29])
            expression (stdlib/format.ml[658,22768+32]..[658,22768+68])
              Pexp_apply
              expression (stdlib/format.ml[658,22768+32]..[658,22768+47])
                Pexp_ident "pp_open_box_gen" (stdlib/format.ml[658,22768+32]..[658,22768+47])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[658,22768+48]..[658,22768+53])
                    Pexp_ident "state" (stdlib/format.ml[658,22768+48]..[658,22768+53])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[658,22768+54]..[658,22768+60])
                    Pexp_ident "indent" (stdlib/format.ml[658,22768+54]..[658,22768+60])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[658,22768+61]..[658,22768+68])
                    Pexp_construct "Pp_vbox" (stdlib/format.ml[658,22768+61]..[658,22768+68])
                    None
              ]
      <def>
        pattern (stdlib/format.ml[660,22838+4]..[660,22838+17])
          Ppat_var "pp_open_hvbox" (stdlib/format.ml[660,22838+4]..[660,22838+17])
        expression (stdlib/format.ml[660,22838+18]..[660,22838+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[660,22838+18]..[660,22838+23])
            Ppat_var "state" (stdlib/format.ml[660,22838+18]..[660,22838+23])
          expression (stdlib/format.ml[660,22838+24]..[660,22838+70]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[660,22838+24]..[660,22838+30])
              Ppat_var "indent" (stdlib/format.ml[660,22838+24]..[660,22838+30])
            expression (stdlib/format.ml[660,22838+33]..[660,22838+70])
              Pexp_apply
              expression (stdlib/format.ml[660,22838+33]..[660,22838+48])
                Pexp_ident "pp_open_box_gen" (stdlib/format.ml[660,22838+33]..[660,22838+48])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[660,22838+49]..[660,22838+54])
                    Pexp_ident "state" (stdlib/format.ml[660,22838+49]..[660,22838+54])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[660,22838+55]..[660,22838+61])
                    Pexp_ident "indent" (stdlib/format.ml[660,22838+55]..[660,22838+61])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[660,22838+62]..[660,22838+70])
                    Pexp_construct "Pp_hvbox" (stdlib/format.ml[660,22838+62]..[660,22838+70])
                    None
              ]
      <def>
        pattern (stdlib/format.ml[661,22909+4]..[661,22909+18])
          Ppat_var "pp_open_hovbox" (stdlib/format.ml[661,22909+4]..[661,22909+18])
        expression (stdlib/format.ml[661,22909+19]..[661,22909+72]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[661,22909+19]..[661,22909+24])
            Ppat_var "state" (stdlib/format.ml[661,22909+19]..[661,22909+24])
          expression (stdlib/format.ml[661,22909+25]..[661,22909+72]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[661,22909+25]..[661,22909+31])
              Ppat_var "indent" (stdlib/format.ml[661,22909+25]..[661,22909+31])
            expression (stdlib/format.ml[661,22909+34]..[661,22909+72])
              Pexp_apply
              expression (stdlib/format.ml[661,22909+34]..[661,22909+49])
                Pexp_ident "pp_open_box_gen" (stdlib/format.ml[661,22909+34]..[661,22909+49])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[661,22909+50]..[661,22909+55])
                    Pexp_ident "state" (stdlib/format.ml[661,22909+50]..[661,22909+55])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[661,22909+56]..[661,22909+62])
                    Pexp_ident "indent" (stdlib/format.ml[661,22909+56]..[661,22909+62])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[661,22909+63]..[661,22909+72])
                    Pexp_construct "Pp_hovbox" (stdlib/format.ml[661,22909+63]..[661,22909+72])
                    None
              ]
      <def>
        pattern (stdlib/format.ml[662,22982+4]..[662,22982+15])
          Ppat_var "pp_open_box" (stdlib/format.ml[662,22982+4]..[662,22982+15])
        expression (stdlib/format.ml[662,22982+16]..[662,22982+66]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[662,22982+16]..[662,22982+21])
            Ppat_var "state" (stdlib/format.ml[662,22982+16]..[662,22982+21])
          expression (stdlib/format.ml[662,22982+22]..[662,22982+66]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[662,22982+22]..[662,22982+28])
              Ppat_var "indent" (stdlib/format.ml[662,22982+22]..[662,22982+28])
            expression (stdlib/format.ml[662,22982+31]..[662,22982+66])
              Pexp_apply
              expression (stdlib/format.ml[662,22982+31]..[662,22982+46])
                Pexp_ident "pp_open_box_gen" (stdlib/format.ml[662,22982+31]..[662,22982+46])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[662,22982+47]..[662,22982+52])
                    Pexp_ident "state" (stdlib/format.ml[662,22982+47]..[662,22982+52])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[662,22982+53]..[662,22982+59])
                    Pexp_ident "indent" (stdlib/format.ml[662,22982+53]..[662,22982+59])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[662,22982+60]..[662,22982+66])
                    Pexp_construct "Pp_box" (stdlib/format.ml[662,22982+60]..[662,22982+66])
                    None
              ]
    ]
  structure_item (stdlib/format.ml[673,23353+0]..[676,23466+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[673,23353+4]..[673,23353+20])
          Ppat_var "pp_print_newline" (stdlib/format.ml[673,23353+4]..[673,23353+20])
        expression (stdlib/format.ml[673,23353+21]..[674,23385+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[673,23353+21]..[673,23353+26])
            Ppat_var "state" (stdlib/format.ml[673,23353+21]..[673,23353+26])
          expression (stdlib/format.ml[673,23353+27]..[674,23385+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[673,23353+27]..[673,23353+29])
              Ppat_construct "()" (stdlib/format.ml[673,23353+27]..[673,23353+29])
              None
            expression (stdlib/format.ml[674,23385+2]..[674,23385+50])
              Pexp_sequence
              expression (stdlib/format.ml[674,23385+2]..[674,23385+27])
                Pexp_apply
                expression (stdlib/format.ml[674,23385+2]..[674,23385+16])
                  Pexp_ident "pp_flush_queue" (stdlib/format.ml[674,23385+2]..[674,23385+16])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[674,23385+17]..[674,23385+22])
                      Pexp_ident "state" (stdlib/format.ml[674,23385+17]..[674,23385+22])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[674,23385+23]..[674,23385+27])
                      Pexp_construct "true" (stdlib/format.ml[674,23385+23]..[674,23385+27])
                      None
                ]
              expression (stdlib/format.ml[674,23385+29]..[674,23385+50])
                Pexp_apply
                expression (stdlib/format.ml[674,23385+29]..[674,23385+47])
                  Pexp_field
                  expression (stdlib/format.ml[674,23385+29]..[674,23385+34])
                    Pexp_ident "state" (stdlib/format.ml[674,23385+29]..[674,23385+34])
                  "pp_out_flush" (stdlib/format.ml[674,23385+35]..[674,23385+47])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[674,23385+48]..[674,23385+50])
                      Pexp_construct "()" (stdlib/format.ml[674,23385+48]..[674,23385+50])
                      None
                ]
      <def>
        pattern (stdlib/format.ml[675,23436+4]..[675,23436+18])
          Ppat_var "pp_print_flush" (stdlib/format.ml[675,23436+4]..[675,23436+18])
        expression (stdlib/format.ml[675,23436+19]..[676,23466+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[675,23436+19]..[675,23436+24])
            Ppat_var "state" (stdlib/format.ml[675,23436+19]..[675,23436+24])
          expression (stdlib/format.ml[675,23436+25]..[676,23466+51]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[675,23436+25]..[675,23436+27])
              Ppat_construct "()" (stdlib/format.ml[675,23436+25]..[675,23436+27])
              None
            expression (stdlib/format.ml[676,23466+2]..[676,23466+51])
              Pexp_sequence
              expression (stdlib/format.ml[676,23466+2]..[676,23466+28])
                Pexp_apply
                expression (stdlib/format.ml[676,23466+2]..[676,23466+16])
                  Pexp_ident "pp_flush_queue" (stdlib/format.ml[676,23466+2]..[676,23466+16])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[676,23466+17]..[676,23466+22])
                      Pexp_ident "state" (stdlib/format.ml[676,23466+17]..[676,23466+22])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[676,23466+23]..[676,23466+28])
                      Pexp_construct "false" (stdlib/format.ml[676,23466+23]..[676,23466+28])
                      None
                ]
              expression (stdlib/format.ml[676,23466+30]..[676,23466+51])
                Pexp_apply
                expression (stdlib/format.ml[676,23466+30]..[676,23466+48])
                  Pexp_field
                  expression (stdlib/format.ml[676,23466+30]..[676,23466+35])
                    Pexp_ident "state" (stdlib/format.ml[676,23466+30]..[676,23466+35])
                  "pp_out_flush" (stdlib/format.ml[676,23466+36]..[676,23466+48])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[676,23466+49]..[676,23466+51])
                      Pexp_construct "()" (stdlib/format.ml[676,23466+49]..[676,23466+51])
                      None
                ]
    ]
  structure_item (stdlib/format.ml[680,23592+0]..[682,23675+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[680,23592+4]..[680,23592+20])
          Ppat_var "pp_force_newline" (stdlib/format.ml[680,23592+4]..[680,23592+20])
        expression (stdlib/format.ml[680,23592+21]..[682,23675+78]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[680,23592+21]..[680,23592+26])
            Ppat_var "state" (stdlib/format.ml[680,23592+21]..[680,23592+26])
          expression (stdlib/format.ml[680,23592+27]..[682,23675+78]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[680,23592+27]..[680,23592+29])
              Ppat_construct "()" (stdlib/format.ml[680,23592+27]..[680,23592+29])
              None
            expression (stdlib/format.ml[681,23624+2]..[682,23675+78])
              Pexp_ifthenelse
              expression (stdlib/format.ml[681,23624+5]..[681,23624+45])
                Pexp_apply
                expression (stdlib/format.ml[681,23624+25]..[681,23624+26])
                  Pexp_ident "<" (stdlib/format.ml[681,23624+25]..[681,23624+26])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[681,23624+5]..[681,23624+24])
                      Pexp_field
                      expression (stdlib/format.ml[681,23624+5]..[681,23624+10])
                        Pexp_ident "state" (stdlib/format.ml[681,23624+5]..[681,23624+10])
                      "pp_curr_depth" (stdlib/format.ml[681,23624+11]..[681,23624+24])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[681,23624+27]..[681,23624+45])
                      Pexp_field
                      expression (stdlib/format.ml[681,23624+27]..[681,23624+32])
                        Pexp_ident "state" (stdlib/format.ml[681,23624+27]..[681,23624+32])
                      "pp_max_boxes" (stdlib/format.ml[681,23624+33]..[681,23624+45])
                ]
              expression (stdlib/format.ml[682,23675+4]..[682,23675+78])
                Pexp_apply
                expression (stdlib/format.ml[682,23675+4]..[682,23675+19])
                  Pexp_ident "enqueue_advance" (stdlib/format.ml[682,23675+4]..[682,23675+19])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[682,23675+20]..[682,23675+25])
                      Pexp_ident "state" (stdlib/format.ml[682,23675+20]..[682,23675+25])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[682,23675+26]..[682,23675+78])
                      Pexp_record
                      [
                        "size" (stdlib/format.ml[682,23675+28]..[682,23675+32])
                          expression (stdlib/format.ml[682,23675+35]..[682,23675+44])
                            Pexp_ident "Size.zero" (stdlib/format.ml[682,23675+35]..[682,23675+44])
                        "token" (stdlib/format.ml[682,23675+46]..[682,23675+51])
                          expression (stdlib/format.ml[682,23675+54]..[682,23675+64])
                            Pexp_construct "Pp_newline" (stdlib/format.ml[682,23675+54]..[682,23675+64])
                            None
                        "length" (stdlib/format.ml[682,23675+66]..[682,23675+72])
                          expression (stdlib/format.ml[682,23675+75]..[682,23675+76])
                            Pexp_constant PConst_int (0,None)
                      ]
                      None
                ]
              None
    ]
  structure_item (stdlib/format.ml[686,23827+0]..[689,23939+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[686,23827+4]..[686,23827+23])
          Ppat_var "pp_print_if_newline" (stdlib/format.ml[686,23827+4]..[686,23827+23])
        expression (stdlib/format.ml[686,23827+24]..[689,23939+61]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[686,23827+24]..[686,23827+29])
            Ppat_var "state" (stdlib/format.ml[686,23827+24]..[686,23827+29])
          expression (stdlib/format.ml[686,23827+30]..[689,23939+61]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[686,23827+30]..[686,23827+32])
              Ppat_construct "()" (stdlib/format.ml[686,23827+30]..[686,23827+32])
              None
            expression (stdlib/format.ml[687,23862+2]..[689,23939+61])
              Pexp_ifthenelse
              expression (stdlib/format.ml[687,23862+5]..[687,23862+45])
                Pexp_apply
                expression (stdlib/format.ml[687,23862+25]..[687,23862+26])
                  Pexp_ident "<" (stdlib/format.ml[687,23862+25]..[687,23862+26])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[687,23862+5]..[687,23862+24])
                      Pexp_field
                      expression (stdlib/format.ml[687,23862+5]..[687,23862+10])
                        Pexp_ident "state" (stdlib/format.ml[687,23862+5]..[687,23862+10])
                      "pp_curr_depth" (stdlib/format.ml[687,23862+11]..[687,23862+24])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[687,23862+27]..[687,23862+45])
                      Pexp_field
                      expression (stdlib/format.ml[687,23862+27]..[687,23862+32])
                        Pexp_ident "state" (stdlib/format.ml[687,23862+27]..[687,23862+32])
                      "pp_max_boxes" (stdlib/format.ml[687,23862+33]..[687,23862+45])
                ]
              expression (stdlib/format.ml[688,23913+4]..[689,23939+61])
                Pexp_apply
                expression (stdlib/format.ml[688,23913+4]..[688,23913+19])
                  Pexp_ident "enqueue_advance" (stdlib/format.ml[688,23913+4]..[688,23913+19])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[688,23913+20]..[688,23913+25])
                      Pexp_ident "state" (stdlib/format.ml[688,23913+20]..[688,23913+25])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[689,23939+6]..[689,23939+61])
                      Pexp_record
                      [
                        "size" (stdlib/format.ml[689,23939+8]..[689,23939+12])
                          expression (stdlib/format.ml[689,23939+15]..[689,23939+24])
                            Pexp_ident "Size.zero" (stdlib/format.ml[689,23939+15]..[689,23939+24])
                        "token" (stdlib/format.ml[689,23939+26]..[689,23939+31])
                          expression (stdlib/format.ml[689,23939+34]..[689,23939+47])
                            Pexp_construct "Pp_if_newline" (stdlib/format.ml[689,23939+34]..[689,23939+47])
                            None
                        "length" (stdlib/format.ml[689,23939+49]..[689,23939+55])
                          expression (stdlib/format.ml[689,23939+58]..[689,23939+59])
                            Pexp_constant PConst_int (0,None)
                      ]
                      None
                ]
              None
    ]
  structure_item (stdlib/format.ml[694,24121+0]..[701,24470+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[694,24121+4]..[694,24121+25])
          Ppat_var "pp_print_custom_break" (stdlib/format.ml[694,24121+4]..[694,24121+25])
        expression (stdlib/format.ml[694,24121+26]..[701,24470+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[694,24121+26]..[694,24121+31])
            Ppat_var "state" (stdlib/format.ml[694,24121+26]..[694,24121+31])
          expression (stdlib/format.ml[694,24121+32]..[701,24470+29]) ghost
            Pexp_fun
            Labelled "fits"
            None
            pattern (stdlib/format.ml[694,24121+33]..[694,24121+37])
              Ppat_var "fits" (stdlib/format.ml[694,24121+33]..[694,24121+37])
            expression (stdlib/format.ml[694,24121+38]..[701,24470+29]) ghost
              Pexp_fun
              Labelled "breaks"
              None
              pattern (stdlib/format.ml[694,24121+39]..[694,24121+45])
                Ppat_var "breaks" (stdlib/format.ml[694,24121+39]..[694,24121+45])
              expression (stdlib/format.ml[695,24169+2]..[701,24470+29])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/format.ml[695,24169+6]..[695,24169+26])
                      Ppat_tuple
                      [
                        pattern (stdlib/format.ml[695,24169+6]..[695,24169+12])
                          Ppat_var "before" (stdlib/format.ml[695,24169+6]..[695,24169+12])
                        pattern (stdlib/format.ml[695,24169+14]..[695,24169+19])
                          Ppat_var "width" (stdlib/format.ml[695,24169+14]..[695,24169+19])
                        pattern (stdlib/format.ml[695,24169+21]..[695,24169+26])
                          Ppat_var "after" (stdlib/format.ml[695,24169+21]..[695,24169+26])
                      ]
                    expression (stdlib/format.ml[695,24169+29]..[695,24169+33])
                      Pexp_ident "fits" (stdlib/format.ml[695,24169+29]..[695,24169+33])
                ]
                expression (stdlib/format.ml[696,24206+2]..[701,24470+29])
                  Pexp_ifthenelse
                  expression (stdlib/format.ml[696,24206+5]..[696,24206+45])
                    Pexp_apply
                    expression (stdlib/format.ml[696,24206+25]..[696,24206+26])
                      Pexp_ident "<" (stdlib/format.ml[696,24206+25]..[696,24206+26])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[696,24206+5]..[696,24206+24])
                          Pexp_field
                          expression (stdlib/format.ml[696,24206+5]..[696,24206+10])
                            Pexp_ident "state" (stdlib/format.ml[696,24206+5]..[696,24206+10])
                          "pp_curr_depth" (stdlib/format.ml[696,24206+11]..[696,24206+24])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[696,24206+27]..[696,24206+45])
                          Pexp_field
                          expression (stdlib/format.ml[696,24206+27]..[696,24206+32])
                            Pexp_ident "state" (stdlib/format.ml[696,24206+27]..[696,24206+32])
                          "pp_max_boxes" (stdlib/format.ml[696,24206+33]..[696,24206+45])
                    ]
                  expression (stdlib/format.ml[697,24257+4]..[701,24470+29])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/format.ml[697,24257+8]..[697,24257+12])
                          Ppat_var "size" (stdlib/format.ml[697,24257+8]..[697,24257+12])
                        expression (stdlib/format.ml[697,24257+15]..[697,24257+51])
                          Pexp_apply
                          expression (stdlib/format.ml[697,24257+15]..[697,24257+26])
                            Pexp_ident "Size.of_int" (stdlib/format.ml[697,24257+15]..[697,24257+26])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[697,24257+27]..[697,24257+51])
                                Pexp_apply
                                expression (stdlib/format.ml[697,24257+28]..[697,24257+29])
                                  Pexp_ident "~-" (stdlib/format.ml[697,24257+28]..[697,24257+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[697,24257+30]..[697,24257+50])
                                      Pexp_field
                                      expression (stdlib/format.ml[697,24257+30]..[697,24257+35])
                                        Pexp_ident "state" (stdlib/format.ml[697,24257+30]..[697,24257+35])
                                      "pp_right_total" (stdlib/format.ml[697,24257+36]..[697,24257+50])
                                ]
                          ]
                    ]
                    expression (stdlib/format.ml[698,24312+4]..[701,24470+29])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (stdlib/format.ml[698,24312+8]..[698,24312+13])
                            Ppat_var "token" (stdlib/format.ml[698,24312+8]..[698,24312+13])
                          expression (stdlib/format.ml[698,24312+16]..[698,24312+41])
                            Pexp_construct "Pp_break" (stdlib/format.ml[698,24312+16]..[698,24312+24])
                            Some
                              expression (stdlib/format.ml[698,24312+25]..[698,24312+41])
                                Pexp_record
                                [
                                  "fits" (stdlib/format.ml[698,24312+27]..[698,24312+31]) ghost
                                    expression (stdlib/format.ml[698,24312+27]..[698,24312+31])
                                      Pexp_ident "fits" (stdlib/format.ml[698,24312+27]..[698,24312+31])
                                  "breaks" (stdlib/format.ml[698,24312+33]..[698,24312+39]) ghost
                                    expression (stdlib/format.ml[698,24312+33]..[698,24312+39])
                                      Pexp_ident "breaks" (stdlib/format.ml[698,24312+33]..[698,24312+39])
                                ]
                                None
                      ]
                      expression (stdlib/format.ml[699,24357+4]..[701,24470+29])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (stdlib/format.ml[699,24357+8]..[699,24357+14])
                              Ppat_var "length" (stdlib/format.ml[699,24357+8]..[699,24357+14])
                            expression (stdlib/format.ml[699,24357+17]..[699,24357+67])
                              Pexp_apply
                              expression (stdlib/format.ml[699,24357+46]..[699,24357+47])
                                Pexp_ident "+" (stdlib/format.ml[699,24357+46]..[699,24357+47])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[699,24357+17]..[699,24357+45])
                                    Pexp_apply
                                    expression (stdlib/format.ml[699,24357+38]..[699,24357+39])
                                      Pexp_ident "+" (stdlib/format.ml[699,24357+38]..[699,24357+39])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[699,24357+17]..[699,24357+37])
                                          Pexp_apply
                                          expression (stdlib/format.ml[699,24357+17]..[699,24357+30])
                                            Pexp_ident "String.length" (stdlib/format.ml[699,24357+17]..[699,24357+30])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/format.ml[699,24357+31]..[699,24357+37])
                                                Pexp_ident "before" (stdlib/format.ml[699,24357+31]..[699,24357+37])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[699,24357+40]..[699,24357+45])
                                          Pexp_ident "width" (stdlib/format.ml[699,24357+40]..[699,24357+45])
                                    ]
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[699,24357+48]..[699,24357+67])
                                    Pexp_apply
                                    expression (stdlib/format.ml[699,24357+48]..[699,24357+61])
                                      Pexp_ident "String.length" (stdlib/format.ml[699,24357+48]..[699,24357+61])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[699,24357+62]..[699,24357+67])
                                          Pexp_ident "after" (stdlib/format.ml[699,24357+62]..[699,24357+67])
                                    ]
                              ]
                        ]
                        expression (stdlib/format.ml[700,24428+4]..[701,24470+29])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (stdlib/format.ml[700,24428+8]..[700,24428+12])
                                Ppat_var "elem" (stdlib/format.ml[700,24428+8]..[700,24428+12])
                              expression (stdlib/format.ml[700,24428+15]..[700,24428+38])
                                Pexp_record
                                [
                                  "size" (stdlib/format.ml[700,24428+17]..[700,24428+21]) ghost
                                    expression (stdlib/format.ml[700,24428+17]..[700,24428+21])
                                      Pexp_ident "size" (stdlib/format.ml[700,24428+17]..[700,24428+21])
                                  "token" (stdlib/format.ml[700,24428+23]..[700,24428+28]) ghost
                                    expression (stdlib/format.ml[700,24428+23]..[700,24428+28])
                                      Pexp_ident "token" (stdlib/format.ml[700,24428+23]..[700,24428+28])
                                  "length" (stdlib/format.ml[700,24428+30]..[700,24428+36]) ghost
                                    expression (stdlib/format.ml[700,24428+30]..[700,24428+36])
                                      Pexp_ident "length" (stdlib/format.ml[700,24428+30]..[700,24428+36])
                                ]
                                None
                          ]
                          expression (stdlib/format.ml[701,24470+4]..[701,24470+29])
                            Pexp_apply
                            expression (stdlib/format.ml[701,24470+4]..[701,24470+13])
                              Pexp_ident "scan_push" (stdlib/format.ml[701,24470+4]..[701,24470+13])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[701,24470+14]..[701,24470+19])
                                  Pexp_ident "state" (stdlib/format.ml[701,24470+14]..[701,24470+19])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[701,24470+20]..[701,24470+24])
                                  Pexp_construct "true" (stdlib/format.ml[701,24470+20]..[701,24470+24])
                                  None
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[701,24470+25]..[701,24470+29])
                                  Pexp_ident "elem" (stdlib/format.ml[701,24470+25]..[701,24470+29])
                            ]
                  None
    ]
  structure_item (stdlib/format.ml[707,24711+0]..[709,24781+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[707,24711+4]..[707,24711+18])
          Ppat_var "pp_print_break" (stdlib/format.ml[707,24711+4]..[707,24711+18])
        expression (stdlib/format.ml[707,24711+19]..[709,24781+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[707,24711+19]..[707,24711+24])
            Ppat_var "state" (stdlib/format.ml[707,24711+19]..[707,24711+24])
          expression (stdlib/format.ml[707,24711+25]..[709,24781+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[707,24711+25]..[707,24711+30])
              Ppat_var "width" (stdlib/format.ml[707,24711+25]..[707,24711+30])
            expression (stdlib/format.ml[707,24711+31]..[709,24781+50]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[707,24711+31]..[707,24711+37])
                Ppat_var "offset" (stdlib/format.ml[707,24711+31]..[707,24711+37])
              expression (stdlib/format.ml[708,24751+2]..[709,24781+50])
                Pexp_apply
                expression (stdlib/format.ml[708,24751+2]..[708,24751+23])
                  Pexp_ident "pp_print_custom_break" (stdlib/format.ml[708,24751+2]..[708,24751+23])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[708,24751+24]..[708,24751+29])
                      Pexp_ident "state" (stdlib/format.ml[708,24751+24]..[708,24751+29])
                  <arg>
                  Labelled "fits"
                    expression (stdlib/format.ml[709,24781+10]..[709,24781+25])
                      Pexp_tuple
                      [
                        expression (stdlib/format.ml[709,24781+11]..[709,24781+13])
                          Pexp_constant PConst_string("",(stdlib/format.ml[709,24781+12]..[709,24781+12]),None)
                        expression (stdlib/format.ml[709,24781+15]..[709,24781+20])
                          Pexp_ident "width" (stdlib/format.ml[709,24781+15]..[709,24781+20])
                        expression (stdlib/format.ml[709,24781+22]..[709,24781+24])
                          Pexp_constant PConst_string("",(stdlib/format.ml[709,24781+23]..[709,24781+23]),None)
                      ]
                  <arg>
                  Labelled "breaks"
                    expression (stdlib/format.ml[709,24781+34]..[709,24781+50])
                      Pexp_tuple
                      [
                        expression (stdlib/format.ml[709,24781+35]..[709,24781+37])
                          Pexp_constant PConst_string("",(stdlib/format.ml[709,24781+36]..[709,24781+36]),None)
                        expression (stdlib/format.ml[709,24781+39]..[709,24781+45])
                          Pexp_ident "offset" (stdlib/format.ml[709,24781+39]..[709,24781+45])
                        expression (stdlib/format.ml[709,24781+47]..[709,24781+49])
                          Pexp_constant PConst_string("",(stdlib/format.ml[709,24781+48]..[709,24781+48]),None)
                      ]
                ]
    ]
  structure_item (stdlib/format.ml[717,25037+0]..[718,25092+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[717,25037+4]..[717,25037+18])
          Ppat_var "pp_print_space" (stdlib/format.ml[717,25037+4]..[717,25037+18])
        expression (stdlib/format.ml[717,25037+19]..[717,25037+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[717,25037+19]..[717,25037+24])
            Ppat_var "state" (stdlib/format.ml[717,25037+19]..[717,25037+24])
          expression (stdlib/format.ml[717,25037+25]..[717,25037+54]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[717,25037+25]..[717,25037+27])
              Ppat_construct "()" (stdlib/format.ml[717,25037+25]..[717,25037+27])
              None
            expression (stdlib/format.ml[717,25037+30]..[717,25037+54])
              Pexp_apply
              expression (stdlib/format.ml[717,25037+30]..[717,25037+44])
                Pexp_ident "pp_print_break" (stdlib/format.ml[717,25037+30]..[717,25037+44])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[717,25037+45]..[717,25037+50])
                    Pexp_ident "state" (stdlib/format.ml[717,25037+45]..[717,25037+50])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[717,25037+51]..[717,25037+52])
                    Pexp_constant PConst_int (1,None)
                <arg>
                Nolabel
                  expression (stdlib/format.ml[717,25037+53]..[717,25037+54])
                    Pexp_constant PConst_int (0,None)
              ]
      <def>
        pattern (stdlib/format.ml[718,25092+4]..[718,25092+16])
          Ppat_var "pp_print_cut" (stdlib/format.ml[718,25092+4]..[718,25092+16])
        expression (stdlib/format.ml[718,25092+17]..[718,25092+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[718,25092+17]..[718,25092+22])
            Ppat_var "state" (stdlib/format.ml[718,25092+17]..[718,25092+22])
          expression (stdlib/format.ml[718,25092+23]..[718,25092+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[718,25092+23]..[718,25092+25])
              Ppat_construct "()" (stdlib/format.ml[718,25092+23]..[718,25092+25])
              None
            expression (stdlib/format.ml[718,25092+28]..[718,25092+52])
              Pexp_apply
              expression (stdlib/format.ml[718,25092+28]..[718,25092+42])
                Pexp_ident "pp_print_break" (stdlib/format.ml[718,25092+28]..[718,25092+42])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[718,25092+43]..[718,25092+48])
                    Pexp_ident "state" (stdlib/format.ml[718,25092+43]..[718,25092+48])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[718,25092+49]..[718,25092+50])
                    Pexp_constant PConst_int (0,None)
                <arg>
                Nolabel
                  expression (stdlib/format.ml[718,25092+51]..[718,25092+52])
                    Pexp_constant PConst_int (0,None)
              ]
    ]
  structure_item (stdlib/format.ml[722,25171+0]..[727,25405+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[722,25171+4]..[722,25171+16])
          Ppat_var "pp_open_tbox" (stdlib/format.ml[722,25171+4]..[722,25171+16])
        expression (stdlib/format.ml[722,25171+17]..[727,25405+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[722,25171+17]..[722,25171+22])
            Ppat_var "state" (stdlib/format.ml[722,25171+17]..[722,25171+22])
          expression (stdlib/format.ml[722,25171+23]..[727,25405+30]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[722,25171+23]..[722,25171+25])
              Ppat_construct "()" (stdlib/format.ml[722,25171+23]..[722,25171+25])
              None
            expression (stdlib/format.ml[723,25199+2]..[727,25405+30])
              Pexp_sequence
              expression (stdlib/format.ml[723,25199+2]..[723,25199+48])
                Pexp_setfield
                expression (stdlib/format.ml[723,25199+2]..[723,25199+7])
                  Pexp_ident "state" (stdlib/format.ml[723,25199+2]..[723,25199+7])
                "pp_curr_depth" (stdlib/format.ml[723,25199+8]..[723,25199+21])
                expression (stdlib/format.ml[723,25199+25]..[723,25199+48])
                  Pexp_apply
                  expression (stdlib/format.ml[723,25199+45]..[723,25199+46])
                    Pexp_ident "+" (stdlib/format.ml[723,25199+45]..[723,25199+46])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[723,25199+25]..[723,25199+44])
                        Pexp_field
                        expression (stdlib/format.ml[723,25199+25]..[723,25199+30])
                          Pexp_ident "state" (stdlib/format.ml[723,25199+25]..[723,25199+30])
                        "pp_curr_depth" (stdlib/format.ml[723,25199+31]..[723,25199+44])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[723,25199+47]..[723,25199+48])
                        Pexp_constant PConst_int (1,None)
                  ]
              expression (stdlib/format.ml[724,25249+2]..[727,25405+30])
                Pexp_ifthenelse
                expression (stdlib/format.ml[724,25249+5]..[724,25249+45])
                  Pexp_apply
                  expression (stdlib/format.ml[724,25249+25]..[724,25249+26])
                    Pexp_ident "<" (stdlib/format.ml[724,25249+25]..[724,25249+26])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[724,25249+5]..[724,25249+24])
                        Pexp_field
                        expression (stdlib/format.ml[724,25249+5]..[724,25249+10])
                          Pexp_ident "state" (stdlib/format.ml[724,25249+5]..[724,25249+10])
                        "pp_curr_depth" (stdlib/format.ml[724,25249+11]..[724,25249+24])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[724,25249+27]..[724,25249+45])
                        Pexp_field
                        expression (stdlib/format.ml[724,25249+27]..[724,25249+32])
                          Pexp_ident "state" (stdlib/format.ml[724,25249+27]..[724,25249+32])
                        "pp_max_boxes" (stdlib/format.ml[724,25249+33]..[724,25249+45])
                  ]
                expression (stdlib/format.ml[725,25300+4]..[727,25405+30])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (stdlib/format.ml[725,25300+8]..[725,25300+12])
                        Ppat_var "size" (stdlib/format.ml[725,25300+8]..[725,25300+12])
                      expression (stdlib/format.ml[725,25300+15]..[725,25300+24])
                        Pexp_ident "Size.zero" (stdlib/format.ml[725,25300+15]..[725,25300+24])
                  ]
                  expression (stdlib/format.ml[726,25328+4]..[727,25405+30])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/format.ml[726,25328+8]..[726,25328+12])
                          Ppat_var "elem" (stdlib/format.ml[726,25328+8]..[726,25328+12])
                        expression (stdlib/format.ml[726,25328+15]..[726,25328+73])
                          Pexp_record
                          [
                            "size" (stdlib/format.ml[726,25328+17]..[726,25328+21]) ghost
                              expression (stdlib/format.ml[726,25328+17]..[726,25328+21])
                                Pexp_ident "size" (stdlib/format.ml[726,25328+17]..[726,25328+21])
                            "token" (stdlib/format.ml[726,25328+23]..[726,25328+28])
                              expression (stdlib/format.ml[726,25328+31]..[726,25328+59])
                                Pexp_construct "Pp_tbegin" (stdlib/format.ml[726,25328+31]..[726,25328+40])
                                Some
                                  expression (stdlib/format.ml[726,25328+41]..[726,25328+59])
                                    Pexp_construct "Pp_tbox" (stdlib/format.ml[726,25328+42]..[726,25328+49])
                                    Some
                                      expression (stdlib/format.ml[726,25328+50]..[726,25328+58])
                                        Pexp_apply
                                        expression (stdlib/format.ml[726,25328+51]..[726,25328+54])
                                          Pexp_ident "ref" (stdlib/format.ml[726,25328+51]..[726,25328+54])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[726,25328+55]..[726,25328+57])
                                              Pexp_construct "[]" (stdlib/format.ml[726,25328+55]..[726,25328+57])
                                              None
                                        ]
                            "length" (stdlib/format.ml[726,25328+61]..[726,25328+67])
                              expression (stdlib/format.ml[726,25328+70]..[726,25328+71])
                                Pexp_constant PConst_int (0,None)
                          ]
                          None
                    ]
                    expression (stdlib/format.ml[727,25405+4]..[727,25405+30])
                      Pexp_apply
                      expression (stdlib/format.ml[727,25405+4]..[727,25405+19])
                        Pexp_ident "enqueue_advance" (stdlib/format.ml[727,25405+4]..[727,25405+19])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[727,25405+20]..[727,25405+25])
                            Pexp_ident "state" (stdlib/format.ml[727,25405+20]..[727,25405+25])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[727,25405+26]..[727,25405+30])
                            Pexp_ident "elem" (stdlib/format.ml[727,25405+26]..[727,25405+30])
                      ]
                None
    ]
  structure_item (stdlib/format.ml[731,25468+0]..[738,25745+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[731,25468+4]..[731,25468+17])
          Ppat_var "pp_close_tbox" (stdlib/format.ml[731,25468+4]..[731,25468+17])
        expression (stdlib/format.ml[731,25468+18]..[738,25745+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[731,25468+18]..[731,25468+23])
            Ppat_var "state" (stdlib/format.ml[731,25468+18]..[731,25468+23])
          expression (stdlib/format.ml[731,25468+24]..[738,25745+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[731,25468+24]..[731,25468+26])
              Ppat_construct "()" (stdlib/format.ml[731,25468+24]..[731,25468+26])
              None
            expression (stdlib/format.ml[732,25497+2]..[738,25745+5])
              Pexp_ifthenelse
              expression (stdlib/format.ml[732,25497+5]..[732,25497+28])
                Pexp_apply
                expression (stdlib/format.ml[732,25497+25]..[732,25497+26])
                  Pexp_ident ">" (stdlib/format.ml[732,25497+25]..[732,25497+26])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[732,25497+5]..[732,25497+24])
                      Pexp_field
                      expression (stdlib/format.ml[732,25497+5]..[732,25497+10])
                        Pexp_ident "state" (stdlib/format.ml[732,25497+5]..[732,25497+10])
                      "pp_curr_depth" (stdlib/format.ml[732,25497+11]..[732,25497+24])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[732,25497+27]..[732,25497+28])
                      Pexp_constant PConst_int (1,None)
                ]
              expression (stdlib/format.ml[733,25531+2]..[738,25745+5])
                Pexp_ifthenelse
                expression (stdlib/format.ml[734,25539+6]..[734,25539+46])
                  Pexp_apply
                  expression (stdlib/format.ml[734,25539+26]..[734,25539+27])
                    Pexp_ident "<" (stdlib/format.ml[734,25539+26]..[734,25539+27])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[734,25539+6]..[734,25539+25])
                        Pexp_field
                        expression (stdlib/format.ml[734,25539+6]..[734,25539+11])
                          Pexp_ident "state" (stdlib/format.ml[734,25539+6]..[734,25539+11])
                        "pp_curr_depth" (stdlib/format.ml[734,25539+12]..[734,25539+25])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[734,25539+28]..[734,25539+46])
                        Pexp_field
                        expression (stdlib/format.ml[734,25539+28]..[734,25539+33])
                          Pexp_ident "state" (stdlib/format.ml[734,25539+28]..[734,25539+33])
                        "pp_max_boxes" (stdlib/format.ml[734,25539+34]..[734,25539+46])
                  ]
                expression (stdlib/format.ml[735,25591+5]..[737,25693+51])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (stdlib/format.ml[735,25591+9]..[735,25591+13])
                        Ppat_var "elem" (stdlib/format.ml[735,25591+9]..[735,25591+13])
                      expression (stdlib/format.ml[735,25591+16]..[735,25591+65])
                        Pexp_record
                        [
                          "size" (stdlib/format.ml[735,25591+18]..[735,25591+22])
                            expression (stdlib/format.ml[735,25591+25]..[735,25591+34])
                              Pexp_ident "Size.zero" (stdlib/format.ml[735,25591+25]..[735,25591+34])
                          "token" (stdlib/format.ml[735,25591+36]..[735,25591+41])
                            expression (stdlib/format.ml[735,25591+44]..[735,25591+51])
                              Pexp_construct "Pp_tend" (stdlib/format.ml[735,25591+44]..[735,25591+51])
                              None
                          "length" (stdlib/format.ml[735,25591+53]..[735,25591+59])
                            expression (stdlib/format.ml[735,25591+62]..[735,25591+63])
                              Pexp_constant PConst_int (0,None)
                        ]
                        None
                  ]
                  expression (stdlib/format.ml[736,25660+5]..[737,25693+51])
                    Pexp_sequence
                    expression (stdlib/format.ml[736,25660+5]..[736,25660+31])
                      Pexp_apply
                      expression (stdlib/format.ml[736,25660+5]..[736,25660+20])
                        Pexp_ident "enqueue_advance" (stdlib/format.ml[736,25660+5]..[736,25660+20])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[736,25660+21]..[736,25660+26])
                            Pexp_ident "state" (stdlib/format.ml[736,25660+21]..[736,25660+26])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[736,25660+27]..[736,25660+31])
                            Pexp_ident "elem" (stdlib/format.ml[736,25660+27]..[736,25660+31])
                      ]
                    expression (stdlib/format.ml[737,25693+5]..[737,25693+51])
                      Pexp_setfield
                      expression (stdlib/format.ml[737,25693+5]..[737,25693+10])
                        Pexp_ident "state" (stdlib/format.ml[737,25693+5]..[737,25693+10])
                      "pp_curr_depth" (stdlib/format.ml[737,25693+11]..[737,25693+24])
                      expression (stdlib/format.ml[737,25693+28]..[737,25693+51])
                        Pexp_apply
                        expression (stdlib/format.ml[737,25693+48]..[737,25693+49])
                          Pexp_ident "-" (stdlib/format.ml[737,25693+48]..[737,25693+49])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[737,25693+28]..[737,25693+47])
                              Pexp_field
                              expression (stdlib/format.ml[737,25693+28]..[737,25693+33])
                                Pexp_ident "state" (stdlib/format.ml[737,25693+28]..[737,25693+33])
                              "pp_curr_depth" (stdlib/format.ml[737,25693+34]..[737,25693+47])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[737,25693+50]..[737,25693+51])
                              Pexp_constant PConst_int (1,None)
                        ]
                None
              None
    ]
  structure_item (stdlib/format.ml[742,25785+0]..[746,26010+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[742,25785+4]..[742,25785+19])
          Ppat_var "pp_print_tbreak" (stdlib/format.ml[742,25785+4]..[742,25785+19])
        expression (stdlib/format.ml[742,25785+20]..[746,26010+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[742,25785+20]..[742,25785+25])
            Ppat_var "state" (stdlib/format.ml[742,25785+20]..[742,25785+25])
          expression (stdlib/format.ml[742,25785+26]..[746,26010+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[742,25785+26]..[742,25785+31])
              Ppat_var "width" (stdlib/format.ml[742,25785+26]..[742,25785+31])
            expression (stdlib/format.ml[742,25785+32]..[746,26010+29]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[742,25785+32]..[742,25785+38])
                Ppat_var "offset" (stdlib/format.ml[742,25785+32]..[742,25785+38])
              expression (stdlib/format.ml[743,25826+2]..[746,26010+29])
                Pexp_ifthenelse
                expression (stdlib/format.ml[743,25826+5]..[743,25826+45])
                  Pexp_apply
                  expression (stdlib/format.ml[743,25826+25]..[743,25826+26])
                    Pexp_ident "<" (stdlib/format.ml[743,25826+25]..[743,25826+26])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[743,25826+5]..[743,25826+24])
                        Pexp_field
                        expression (stdlib/format.ml[743,25826+5]..[743,25826+10])
                          Pexp_ident "state" (stdlib/format.ml[743,25826+5]..[743,25826+10])
                        "pp_curr_depth" (stdlib/format.ml[743,25826+11]..[743,25826+24])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[743,25826+27]..[743,25826+45])
                        Pexp_field
                        expression (stdlib/format.ml[743,25826+27]..[743,25826+32])
                          Pexp_ident "state" (stdlib/format.ml[743,25826+27]..[743,25826+32])
                        "pp_max_boxes" (stdlib/format.ml[743,25826+33]..[743,25826+45])
                  ]
                expression (stdlib/format.ml[744,25877+4]..[746,26010+29])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (stdlib/format.ml[744,25877+8]..[744,25877+12])
                        Ppat_var "size" (stdlib/format.ml[744,25877+8]..[744,25877+12])
                      expression (stdlib/format.ml[744,25877+15]..[744,25877+51])
                        Pexp_apply
                        expression (stdlib/format.ml[744,25877+15]..[744,25877+26])
                          Pexp_ident "Size.of_int" (stdlib/format.ml[744,25877+15]..[744,25877+26])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[744,25877+27]..[744,25877+51])
                              Pexp_apply
                              expression (stdlib/format.ml[744,25877+28]..[744,25877+29])
                                Pexp_ident "~-" (stdlib/format.ml[744,25877+28]..[744,25877+29])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[744,25877+30]..[744,25877+50])
                                    Pexp_field
                                    expression (stdlib/format.ml[744,25877+30]..[744,25877+35])
                                      Pexp_ident "state" (stdlib/format.ml[744,25877+30]..[744,25877+35])
                                    "pp_right_total" (stdlib/format.ml[744,25877+36]..[744,25877+50])
                              ]
                        ]
                  ]
                  expression (stdlib/format.ml[745,25932+4]..[746,26010+29])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/format.ml[745,25932+8]..[745,25932+12])
                          Ppat_var "elem" (stdlib/format.ml[745,25932+8]..[745,25932+12])
                        expression (stdlib/format.ml[745,25932+15]..[745,25932+74])
                          Pexp_record
                          [
                            "size" (stdlib/format.ml[745,25932+17]..[745,25932+21]) ghost
                              expression (stdlib/format.ml[745,25932+17]..[745,25932+21])
                                Pexp_ident "size" (stdlib/format.ml[745,25932+17]..[745,25932+21])
                            "token" (stdlib/format.ml[745,25932+23]..[745,25932+28])
                              expression (stdlib/format.ml[745,25932+31]..[745,25932+56])
                                Pexp_construct "Pp_tbreak" (stdlib/format.ml[745,25932+31]..[745,25932+40])
                                Some
                                  expression (stdlib/format.ml[745,25932+41]..[745,25932+56])
                                    Pexp_tuple
                                    [
                                      expression (stdlib/format.ml[745,25932+42]..[745,25932+47])
                                        Pexp_ident "width" (stdlib/format.ml[745,25932+42]..[745,25932+47])
                                      expression (stdlib/format.ml[745,25932+49]..[745,25932+55])
                                        Pexp_ident "offset" (stdlib/format.ml[745,25932+49]..[745,25932+55])
                                    ]
                            "length" (stdlib/format.ml[745,25932+58]..[745,25932+64])
                              expression (stdlib/format.ml[745,25932+67]..[745,25932+72])
                                Pexp_ident "width" (stdlib/format.ml[745,25932+67]..[745,25932+72])
                          ]
                          None
                    ]
                    expression (stdlib/format.ml[746,26010+4]..[746,26010+29])
                      Pexp_apply
                      expression (stdlib/format.ml[746,26010+4]..[746,26010+13])
                        Pexp_ident "scan_push" (stdlib/format.ml[746,26010+4]..[746,26010+13])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[746,26010+14]..[746,26010+19])
                            Pexp_ident "state" (stdlib/format.ml[746,26010+14]..[746,26010+19])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[746,26010+20]..[746,26010+24])
                            Pexp_construct "true" (stdlib/format.ml[746,26010+20]..[746,26010+24])
                            None
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[746,26010+25]..[746,26010+29])
                            Pexp_ident "elem" (stdlib/format.ml[746,26010+25]..[746,26010+29])
                      ]
                None
    ]
  structure_item (stdlib/format.ml[749,26042+0]..[749,26042+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[749,26042+4]..[749,26042+16])
          Ppat_var "pp_print_tab" (stdlib/format.ml[749,26042+4]..[749,26042+16])
        expression (stdlib/format.ml[749,26042+17]..[749,26042+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[749,26042+17]..[749,26042+22])
            Ppat_var "state" (stdlib/format.ml[749,26042+17]..[749,26042+22])
          expression (stdlib/format.ml[749,26042+23]..[749,26042+53]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[749,26042+23]..[749,26042+25])
              Ppat_construct "()" (stdlib/format.ml[749,26042+23]..[749,26042+25])
              None
            expression (stdlib/format.ml[749,26042+28]..[749,26042+53])
              Pexp_apply
              expression (stdlib/format.ml[749,26042+28]..[749,26042+43])
                Pexp_ident "pp_print_tbreak" (stdlib/format.ml[749,26042+28]..[749,26042+43])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[749,26042+44]..[749,26042+49])
                    Pexp_ident "state" (stdlib/format.ml[749,26042+44]..[749,26042+49])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[749,26042+50]..[749,26042+51])
                    Pexp_constant PConst_int (0,None)
                <arg>
                Nolabel
                  expression (stdlib/format.ml[749,26042+52]..[749,26042+53])
                    Pexp_constant PConst_int (0,None)
              ]
    ]
  structure_item (stdlib/format.ml[751,26097+0]..[754,26242+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[751,26097+4]..[751,26097+14])
          Ppat_var "pp_set_tab" (stdlib/format.ml[751,26097+4]..[751,26097+14])
        expression (stdlib/format.ml[751,26097+15]..[754,26242+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[751,26097+15]..[751,26097+20])
            Ppat_var "state" (stdlib/format.ml[751,26097+15]..[751,26097+20])
          expression (stdlib/format.ml[751,26097+21]..[754,26242+30]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[751,26097+21]..[751,26097+23])
              Ppat_construct "()" (stdlib/format.ml[751,26097+21]..[751,26097+23])
              None
            expression (stdlib/format.ml[752,26123+2]..[754,26242+30])
              Pexp_ifthenelse
              expression (stdlib/format.ml[752,26123+5]..[752,26123+45])
                Pexp_apply
                expression (stdlib/format.ml[752,26123+25]..[752,26123+26])
                  Pexp_ident "<" (stdlib/format.ml[752,26123+25]..[752,26123+26])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[752,26123+5]..[752,26123+24])
                      Pexp_field
                      expression (stdlib/format.ml[752,26123+5]..[752,26123+10])
                        Pexp_ident "state" (stdlib/format.ml[752,26123+5]..[752,26123+10])
                      "pp_curr_depth" (stdlib/format.ml[752,26123+11]..[752,26123+24])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[752,26123+27]..[752,26123+45])
                      Pexp_field
                      expression (stdlib/format.ml[752,26123+27]..[752,26123+32])
                        Pexp_ident "state" (stdlib/format.ml[752,26123+27]..[752,26123+32])
                      "pp_max_boxes" (stdlib/format.ml[752,26123+33]..[752,26123+45])
                ]
              expression (stdlib/format.ml[753,26174+4]..[754,26242+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/format.ml[753,26174+8]..[753,26174+12])
                      Ppat_var "elem" (stdlib/format.ml[753,26174+8]..[753,26174+12])
                    expression (stdlib/format.ml[753,26174+15]..[753,26174+64])
                      Pexp_record
                      [
                        "size" (stdlib/format.ml[753,26174+17]..[753,26174+21])
                          expression (stdlib/format.ml[753,26174+24]..[753,26174+33])
                            Pexp_ident "Size.zero" (stdlib/format.ml[753,26174+24]..[753,26174+33])
                        "token" (stdlib/format.ml[753,26174+35]..[753,26174+40])
                          expression (stdlib/format.ml[753,26174+43]..[753,26174+50])
                            Pexp_construct "Pp_stab" (stdlib/format.ml[753,26174+43]..[753,26174+50])
                            None
                        "length" (stdlib/format.ml[753,26174+52]..[753,26174+58])
                          expression (stdlib/format.ml[753,26174+61]..[753,26174+62])
                            Pexp_constant PConst_int (0,None)
                      ]
                      None
                ]
                expression (stdlib/format.ml[754,26242+4]..[754,26242+30])
                  Pexp_apply
                  expression (stdlib/format.ml[754,26242+4]..[754,26242+19])
                    Pexp_ident "enqueue_advance" (stdlib/format.ml[754,26242+4]..[754,26242+19])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[754,26242+20]..[754,26242+25])
                        Pexp_ident "state" (stdlib/format.ml[754,26242+20]..[754,26242+25])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[754,26242+26]..[754,26242+30])
                        Pexp_ident "elem" (stdlib/format.ml[754,26242+26]..[754,26242+30])
                  ]
              None
    ]
  structure_item (stdlib/format.ml[764,26349+0]..[764,26349+68])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[764,26349+4]..[764,26349+20])
          Ppat_var "pp_set_max_boxes" (stdlib/format.ml[764,26349+4]..[764,26349+20])
        expression (stdlib/format.ml[764,26349+21]..[764,26349+68]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[764,26349+21]..[764,26349+26])
            Ppat_var "state" (stdlib/format.ml[764,26349+21]..[764,26349+26])
          expression (stdlib/format.ml[764,26349+27]..[764,26349+68]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[764,26349+27]..[764,26349+28])
              Ppat_var "n" (stdlib/format.ml[764,26349+27]..[764,26349+28])
            expression (stdlib/format.ml[764,26349+31]..[764,26349+68])
              Pexp_ifthenelse
              expression (stdlib/format.ml[764,26349+34]..[764,26349+39])
                Pexp_apply
                expression (stdlib/format.ml[764,26349+36]..[764,26349+37])
                  Pexp_ident ">" (stdlib/format.ml[764,26349+36]..[764,26349+37])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[764,26349+34]..[764,26349+35])
                      Pexp_ident "n" (stdlib/format.ml[764,26349+34]..[764,26349+35])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[764,26349+38]..[764,26349+39])
                      Pexp_constant PConst_int (1,None)
                ]
              expression (stdlib/format.ml[764,26349+45]..[764,26349+68])
                Pexp_setfield
                expression (stdlib/format.ml[764,26349+45]..[764,26349+50])
                  Pexp_ident "state" (stdlib/format.ml[764,26349+45]..[764,26349+50])
                "pp_max_boxes" (stdlib/format.ml[764,26349+51]..[764,26349+63])
                expression (stdlib/format.ml[764,26349+67]..[764,26349+68])
                  Pexp_ident "n" (stdlib/format.ml[764,26349+67]..[764,26349+68])
              None
    ]
  structure_item (stdlib/format.ml[767,26478+0]..[767,26478+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[767,26478+4]..[767,26478+20])
          Ppat_var "pp_get_max_boxes" (stdlib/format.ml[767,26478+4]..[767,26478+20])
        expression (stdlib/format.ml[767,26478+21]..[767,26478+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[767,26478+21]..[767,26478+26])
            Ppat_var "state" (stdlib/format.ml[767,26478+21]..[767,26478+26])
          expression (stdlib/format.ml[767,26478+27]..[767,26478+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[767,26478+27]..[767,26478+29])
              Ppat_construct "()" (stdlib/format.ml[767,26478+27]..[767,26478+29])
              None
            expression (stdlib/format.ml[767,26478+32]..[767,26478+50])
              Pexp_field
              expression (stdlib/format.ml[767,26478+32]..[767,26478+37])
                Pexp_ident "state" (stdlib/format.ml[767,26478+32]..[767,26478+37])
              "pp_max_boxes" (stdlib/format.ml[767,26478+38]..[767,26478+50])
    ]
  structure_item (stdlib/format.ml[769,26530+0]..[769,26530+73])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[769,26530+4]..[769,26530+21])
          Ppat_var "pp_over_max_boxes" (stdlib/format.ml[769,26530+4]..[769,26530+21])
        expression (stdlib/format.ml[769,26530+22]..[769,26530+73]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[769,26530+22]..[769,26530+27])
            Ppat_var "state" (stdlib/format.ml[769,26530+22]..[769,26530+27])
          expression (stdlib/format.ml[769,26530+28]..[769,26530+73]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[769,26530+28]..[769,26530+30])
              Ppat_construct "()" (stdlib/format.ml[769,26530+28]..[769,26530+30])
              None
            expression (stdlib/format.ml[769,26530+33]..[769,26530+73])
              Pexp_apply
              expression (stdlib/format.ml[769,26530+53]..[769,26530+54])
                Pexp_ident "=" (stdlib/format.ml[769,26530+53]..[769,26530+54])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[769,26530+33]..[769,26530+52])
                    Pexp_field
                    expression (stdlib/format.ml[769,26530+33]..[769,26530+38])
                      Pexp_ident "state" (stdlib/format.ml[769,26530+33]..[769,26530+38])
                    "pp_curr_depth" (stdlib/format.ml[769,26530+39]..[769,26530+52])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[769,26530+55]..[769,26530+73])
                    Pexp_field
                    expression (stdlib/format.ml[769,26530+55]..[769,26530+60])
                      Pexp_ident "state" (stdlib/format.ml[769,26530+55]..[769,26530+60])
                    "pp_max_boxes" (stdlib/format.ml[769,26530+61]..[769,26530+73])
              ]
    ]
  structure_item (stdlib/format.ml[772,26621+0]..[773,26679+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[772,26621+4]..[772,26621+24])
          Ppat_var "pp_set_ellipsis_text" (stdlib/format.ml[772,26621+4]..[772,26621+24])
        expression (stdlib/format.ml[772,26621+25]..[772,26621+57]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[772,26621+25]..[772,26621+30])
            Ppat_var "state" (stdlib/format.ml[772,26621+25]..[772,26621+30])
          expression (stdlib/format.ml[772,26621+31]..[772,26621+57]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[772,26621+31]..[772,26621+32])
              Ppat_var "s" (stdlib/format.ml[772,26621+31]..[772,26621+32])
            expression (stdlib/format.ml[772,26621+35]..[772,26621+57])
              Pexp_setfield
              expression (stdlib/format.ml[772,26621+35]..[772,26621+40])
                Pexp_ident "state" (stdlib/format.ml[772,26621+35]..[772,26621+40])
              "pp_ellipsis" (stdlib/format.ml[772,26621+41]..[772,26621+52])
              expression (stdlib/format.ml[772,26621+56]..[772,26621+57])
                Pexp_ident "s" (stdlib/format.ml[772,26621+56]..[772,26621+57])
      <def>
        pattern (stdlib/format.ml[773,26679+4]..[773,26679+24])
          Ppat_var "pp_get_ellipsis_text" (stdlib/format.ml[773,26679+4]..[773,26679+24])
        expression (stdlib/format.ml[773,26679+25]..[773,26679+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[773,26679+25]..[773,26679+30])
            Ppat_var "state" (stdlib/format.ml[773,26679+25]..[773,26679+30])
          expression (stdlib/format.ml[773,26679+31]..[773,26679+53]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[773,26679+31]..[773,26679+33])
              Ppat_construct "()" (stdlib/format.ml[773,26679+31]..[773,26679+33])
              None
            expression (stdlib/format.ml[773,26679+36]..[773,26679+53])
              Pexp_field
              expression (stdlib/format.ml[773,26679+36]..[773,26679+41])
                Pexp_ident "state" (stdlib/format.ml[773,26679+36]..[773,26679+41])
              "pp_ellipsis" (stdlib/format.ml[773,26679+42]..[773,26679+53])
    ]
  structure_item (stdlib/format.ml[777,26778+0]..[778,26795+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[777,26778+4]..[777,26778+12])
          Ppat_var "pp_limit" (stdlib/format.ml[777,26778+4]..[777,26778+12])
        expression (stdlib/format.ml[777,26778+13]..[778,26795+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[777,26778+13]..[777,26778+14])
            Ppat_var "n" (stdlib/format.ml[777,26778+13]..[777,26778+14])
          expression (stdlib/format.ml[778,26795+2]..[778,26795+49])
            Pexp_ifthenelse
            expression (stdlib/format.ml[778,26795+5]..[778,26795+20])
              Pexp_apply
              expression (stdlib/format.ml[778,26795+7]..[778,26795+8])
                Pexp_ident "<" (stdlib/format.ml[778,26795+7]..[778,26795+8])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[778,26795+5]..[778,26795+6])
                    Pexp_ident "n" (stdlib/format.ml[778,26795+5]..[778,26795+6])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[778,26795+9]..[778,26795+20])
                    Pexp_ident "pp_infinity" (stdlib/format.ml[778,26795+9]..[778,26795+20])
              ]
            expression (stdlib/format.ml[778,26795+26]..[778,26795+27])
              Pexp_ident "n" (stdlib/format.ml[778,26795+26]..[778,26795+27])
            Some
              expression (stdlib/format.ml[778,26795+33]..[778,26795+49])
                Pexp_apply
                expression (stdlib/format.ml[778,26795+33]..[778,26795+37])
                  Pexp_ident "pred" (stdlib/format.ml[778,26795+33]..[778,26795+37])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[778,26795+38]..[778,26795+49])
                      Pexp_ident "pp_infinity" (stdlib/format.ml[778,26795+38]..[778,26795+49])
                ]
    ]
  structure_item (stdlib/format.ml[782,26888+0]..[787,27071+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[782,26888+4]..[782,26888+25])
          Ppat_var "pp_set_min_space_left" (stdlib/format.ml[782,26888+4]..[782,26888+25])
        expression (stdlib/format.ml[782,26888+26]..[787,27071+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[782,26888+26]..[782,26888+31])
            Ppat_var "state" (stdlib/format.ml[782,26888+26]..[782,26888+31])
          expression (stdlib/format.ml[782,26888+32]..[787,27071+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[782,26888+32]..[782,26888+33])
              Ppat_var "n" (stdlib/format.ml[782,26888+32]..[782,26888+33])
            expression (stdlib/format.ml[783,26924+2]..[787,27071+18])
              Pexp_ifthenelse
              expression (stdlib/format.ml[783,26924+5]..[783,26924+11])
                Pexp_apply
                expression (stdlib/format.ml[783,26924+7]..[783,26924+9])
                  Pexp_ident ">=" (stdlib/format.ml[783,26924+7]..[783,26924+9])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[783,26924+5]..[783,26924+6])
                      Pexp_ident "n" (stdlib/format.ml[783,26924+5]..[783,26924+6])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[783,26924+10]..[783,26924+11])
                      Pexp_constant PConst_int (1,None)
                ]
              expression (stdlib/format.ml[784,26941+4]..[787,27071+18])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/format.ml[784,26941+8]..[784,26941+9])
                      Ppat_var "n" (stdlib/format.ml[784,26941+8]..[784,26941+9])
                    expression (stdlib/format.ml[784,26941+12]..[784,26941+22])
                      Pexp_apply
                      expression (stdlib/format.ml[784,26941+12]..[784,26941+20])
                        Pexp_ident "pp_limit" (stdlib/format.ml[784,26941+12]..[784,26941+20])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[784,26941+21]..[784,26941+22])
                            Pexp_ident "n" (stdlib/format.ml[784,26941+21]..[784,26941+22])
                      ]
                ]
                expression (stdlib/format.ml[785,26967+4]..[787,27071+18])
                  Pexp_sequence
                  expression (stdlib/format.ml[785,26967+4]..[785,26967+32])
                    Pexp_setfield
                    expression (stdlib/format.ml[785,26967+4]..[785,26967+9])
                      Pexp_ident "state" (stdlib/format.ml[785,26967+4]..[785,26967+9])
                    "pp_min_space_left" (stdlib/format.ml[785,26967+10]..[785,26967+27])
                    expression (stdlib/format.ml[785,26967+31]..[785,26967+32])
                      Pexp_ident "n" (stdlib/format.ml[785,26967+31]..[785,26967+32])
                  expression (stdlib/format.ml[786,27001+4]..[787,27071+18])
                    Pexp_sequence
                    expression (stdlib/format.ml[786,27001+4]..[786,27001+68])
                      Pexp_setfield
                      expression (stdlib/format.ml[786,27001+4]..[786,27001+9])
                        Pexp_ident "state" (stdlib/format.ml[786,27001+4]..[786,27001+9])
                      "pp_max_indent" (stdlib/format.ml[786,27001+10]..[786,27001+23])
                      expression (stdlib/format.ml[786,27001+27]..[786,27001+68])
                        Pexp_apply
                        expression (stdlib/format.ml[786,27001+43]..[786,27001+44])
                          Pexp_ident "-" (stdlib/format.ml[786,27001+43]..[786,27001+44])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[786,27001+27]..[786,27001+42])
                              Pexp_field
                              expression (stdlib/format.ml[786,27001+27]..[786,27001+32])
                                Pexp_ident "state" (stdlib/format.ml[786,27001+27]..[786,27001+32])
                              "pp_margin" (stdlib/format.ml[786,27001+33]..[786,27001+42])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[786,27001+45]..[786,27001+68])
                              Pexp_field
                              expression (stdlib/format.ml[786,27001+45]..[786,27001+50])
                                Pexp_ident "state" (stdlib/format.ml[786,27001+45]..[786,27001+50])
                              "pp_min_space_left" (stdlib/format.ml[786,27001+51]..[786,27001+68])
                        ]
                    expression (stdlib/format.ml[787,27071+4]..[787,27071+18])
                      Pexp_apply
                      expression (stdlib/format.ml[787,27071+4]..[787,27071+12])
                        Pexp_ident "pp_rinit" (stdlib/format.ml[787,27071+4]..[787,27071+12])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[787,27071+13]..[787,27071+18])
                            Pexp_ident "state" (stdlib/format.ml[787,27071+13]..[787,27071+18])
                      ]
              None
    ]
  structure_item (stdlib/format.ml[793,27203+0]..[795,27251+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[793,27203+4]..[793,27203+21])
          Ppat_var "pp_set_max_indent" (stdlib/format.ml[793,27203+4]..[793,27203+21])
        expression (stdlib/format.ml[793,27203+22]..[795,27251+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[793,27203+22]..[793,27203+27])
            Ppat_var "state" (stdlib/format.ml[793,27203+22]..[793,27203+27])
          expression (stdlib/format.ml[793,27203+28]..[795,27251+53]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[793,27203+28]..[793,27203+29])
              Ppat_var "n" (stdlib/format.ml[793,27203+28]..[793,27203+29])
            expression (stdlib/format.ml[794,27235+2]..[795,27251+53])
              Pexp_ifthenelse
              expression (stdlib/format.ml[794,27235+5]..[794,27235+10])
                Pexp_apply
                expression (stdlib/format.ml[794,27235+7]..[794,27235+8])
                  Pexp_ident ">" (stdlib/format.ml[794,27235+7]..[794,27235+8])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[794,27235+5]..[794,27235+6])
                      Pexp_ident "n" (stdlib/format.ml[794,27235+5]..[794,27235+6])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[794,27235+9]..[794,27235+10])
                      Pexp_constant PConst_int (1,None)
                ]
              expression (stdlib/format.ml[795,27251+4]..[795,27251+53])
                Pexp_apply
                expression (stdlib/format.ml[795,27251+4]..[795,27251+25])
                  Pexp_ident "pp_set_min_space_left" (stdlib/format.ml[795,27251+4]..[795,27251+25])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[795,27251+26]..[795,27251+31])
                      Pexp_ident "state" (stdlib/format.ml[795,27251+26]..[795,27251+31])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[795,27251+32]..[795,27251+53])
                      Pexp_apply
                      expression (stdlib/format.ml[795,27251+49]..[795,27251+50])
                        Pexp_ident "-" (stdlib/format.ml[795,27251+49]..[795,27251+50])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[795,27251+33]..[795,27251+48])
                            Pexp_field
                            expression (stdlib/format.ml[795,27251+33]..[795,27251+38])
                              Pexp_ident "state" (stdlib/format.ml[795,27251+33]..[795,27251+38])
                            "pp_margin" (stdlib/format.ml[795,27251+39]..[795,27251+48])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[795,27251+51]..[795,27251+52])
                            Pexp_ident "n" (stdlib/format.ml[795,27251+51]..[795,27251+52])
                      ]
                ]
              None
    ]
  structure_item (stdlib/format.ml[798,27307+0]..[798,27307+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[798,27307+4]..[798,27307+21])
          Ppat_var "pp_get_max_indent" (stdlib/format.ml[798,27307+4]..[798,27307+21])
        expression (stdlib/format.ml[798,27307+22]..[798,27307+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[798,27307+22]..[798,27307+27])
            Ppat_var "state" (stdlib/format.ml[798,27307+22]..[798,27307+27])
          expression (stdlib/format.ml[798,27307+28]..[798,27307+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[798,27307+28]..[798,27307+30])
              Ppat_construct "()" (stdlib/format.ml[798,27307+28]..[798,27307+30])
              None
            expression (stdlib/format.ml[798,27307+33]..[798,27307+52])
              Pexp_field
              expression (stdlib/format.ml[798,27307+33]..[798,27307+38])
                Pexp_ident "state" (stdlib/format.ml[798,27307+33]..[798,27307+38])
              "pp_max_indent" (stdlib/format.ml[798,27307+39]..[798,27307+52])
    ]
  structure_item (stdlib/format.ml[800,27361+0]..[814,27954+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[800,27361+4]..[800,27361+17])
          Ppat_var "pp_set_margin" (stdlib/format.ml[800,27361+4]..[800,27361+17])
        expression (stdlib/format.ml[800,27361+18]..[814,27954+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[800,27361+18]..[800,27361+23])
            Ppat_var "state" (stdlib/format.ml[800,27361+18]..[800,27361+23])
          expression (stdlib/format.ml[800,27361+24]..[814,27954+42]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[800,27361+24]..[800,27361+25])
              Ppat_var "n" (stdlib/format.ml[800,27361+24]..[800,27361+25])
            expression (stdlib/format.ml[801,27389+2]..[814,27954+42])
              Pexp_ifthenelse
              expression (stdlib/format.ml[801,27389+5]..[801,27389+11])
                Pexp_apply
                expression (stdlib/format.ml[801,27389+7]..[801,27389+9])
                  Pexp_ident ">=" (stdlib/format.ml[801,27389+7]..[801,27389+9])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[801,27389+5]..[801,27389+6])
                      Pexp_ident "n" (stdlib/format.ml[801,27389+5]..[801,27389+6])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[801,27389+10]..[801,27389+11])
                      Pexp_constant PConst_int (1,None)
                ]
              expression (stdlib/format.ml[802,27406+4]..[814,27954+42])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/format.ml[802,27406+8]..[802,27406+9])
                      Ppat_var "n" (stdlib/format.ml[802,27406+8]..[802,27406+9])
                    expression (stdlib/format.ml[802,27406+12]..[802,27406+22])
                      Pexp_apply
                      expression (stdlib/format.ml[802,27406+12]..[802,27406+20])
                        Pexp_ident "pp_limit" (stdlib/format.ml[802,27406+12]..[802,27406+20])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[802,27406+21]..[802,27406+22])
                            Pexp_ident "n" (stdlib/format.ml[802,27406+21]..[802,27406+22])
                      ]
                ]
                expression (stdlib/format.ml[803,27432+4]..[814,27954+42])
                  Pexp_sequence
                  expression (stdlib/format.ml[803,27432+4]..[803,27432+24])
                    Pexp_setfield
                    expression (stdlib/format.ml[803,27432+4]..[803,27432+9])
                      Pexp_ident "state" (stdlib/format.ml[803,27432+4]..[803,27432+9])
                    "pp_margin" (stdlib/format.ml[803,27432+10]..[803,27432+19])
                    expression (stdlib/format.ml[803,27432+23]..[803,27432+24])
                      Pexp_ident "n" (stdlib/format.ml[803,27432+23]..[803,27432+24])
                  expression (stdlib/format.ml[804,27458+4]..[814,27954+42])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/format.ml[804,27458+8]..[804,27458+22])
                          Ppat_var "new_max_indent" (stdlib/format.ml[804,27458+8]..[804,27458+22])
                        expression (stdlib/format.ml[806,27543+6]..[812,27880+40])
                          Pexp_ifthenelse
                          expression (stdlib/format.ml[806,27543+9]..[806,27543+47])
                            Pexp_apply
                            expression (stdlib/format.ml[806,27543+29]..[806,27543+31])
                              Pexp_ident "<=" (stdlib/format.ml[806,27543+29]..[806,27543+31])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[806,27543+9]..[806,27543+28])
                                  Pexp_field
                                  expression (stdlib/format.ml[806,27543+9]..[806,27543+14])
                                    Pexp_ident "state" (stdlib/format.ml[806,27543+9]..[806,27543+14])
                                  "pp_max_indent" (stdlib/format.ml[806,27543+15]..[806,27543+28])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[806,27543+32]..[806,27543+47])
                                  Pexp_field
                                  expression (stdlib/format.ml[806,27543+32]..[806,27543+37])
                                    Pexp_ident "state" (stdlib/format.ml[806,27543+32]..[806,27543+37])
                                  "pp_margin" (stdlib/format.ml[806,27543+38]..[806,27543+47])
                            ]
                          expression (stdlib/format.ml[807,27591+11]..[807,27591+30])
                            Pexp_field
                            expression (stdlib/format.ml[807,27591+11]..[807,27591+16])
                              Pexp_ident "state" (stdlib/format.ml[807,27591+11]..[807,27591+16])
                            "pp_max_indent" (stdlib/format.ml[807,27591+17]..[807,27591+30])
                          Some
                            expression (stdlib/format.ml[811,27812+7]..[812,27880+40])
                              Pexp_apply
                              expression (stdlib/format.ml[811,27812+7]..[811,27812+14])
                                Pexp_ident "Int.max" (stdlib/format.ml[811,27812+7]..[811,27812+14])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[811,27812+15]..[812,27880+38])
                                    Pexp_apply
                                    expression (stdlib/format.ml[811,27812+16]..[811,27812+23])
                                      Pexp_ident "Int.max" (stdlib/format.ml[811,27812+16]..[811,27812+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[811,27812+24]..[811,27812+67])
                                          Pexp_apply
                                          expression (stdlib/format.ml[811,27812+41]..[811,27812+42])
                                            Pexp_ident "-" (stdlib/format.ml[811,27812+41]..[811,27812+42])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/format.ml[811,27812+25]..[811,27812+40])
                                                Pexp_field
                                                expression (stdlib/format.ml[811,27812+25]..[811,27812+30])
                                                  Pexp_ident "state" (stdlib/format.ml[811,27812+25]..[811,27812+30])
                                                "pp_margin" (stdlib/format.ml[811,27812+31]..[811,27812+40])
                                            <arg>
                                            Nolabel
                                              expression (stdlib/format.ml[811,27812+43]..[811,27812+66])
                                                Pexp_field
                                                expression (stdlib/format.ml[811,27812+43]..[811,27812+48])
                                                  Pexp_ident "state" (stdlib/format.ml[811,27812+43]..[811,27812+48])
                                                "pp_min_space_left" (stdlib/format.ml[811,27812+49]..[811,27812+66])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[812,27880+16]..[812,27880+37])
                                          Pexp_apply
                                          expression (stdlib/format.ml[812,27880+33]..[812,27880+34])
                                            Pexp_ident "/" (stdlib/format.ml[812,27880+33]..[812,27880+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/format.ml[812,27880+17]..[812,27880+32])
                                                Pexp_field
                                                expression (stdlib/format.ml[812,27880+17]..[812,27880+22])
                                                  Pexp_ident "state" (stdlib/format.ml[812,27880+17]..[812,27880+22])
                                                "pp_margin" (stdlib/format.ml[812,27880+23]..[812,27880+32])
                                            <arg>
                                            Nolabel
                                              expression (stdlib/format.ml[812,27880+35]..[812,27880+36])
                                                Pexp_constant PConst_int (2,None)
                                          ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[812,27880+39]..[812,27880+40])
                                    Pexp_constant PConst_int (1,None)
                              ]
                    ]
                    expression (stdlib/format.ml[814,27954+4]..[814,27954+42])
                      Pexp_apply
                      expression (stdlib/format.ml[814,27954+4]..[814,27954+21])
                        Pexp_ident "pp_set_max_indent" (stdlib/format.ml[814,27954+4]..[814,27954+21])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[814,27954+22]..[814,27954+27])
                            Pexp_ident "state" (stdlib/format.ml[814,27954+22]..[814,27954+27])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[814,27954+28]..[814,27954+42])
                            Pexp_ident "new_max_indent" (stdlib/format.ml[814,27954+28]..[814,27954+42])
                      ]
              None
    ]
  structure_item (stdlib/format.ml[818,28035+0]..[818,28035+46])
    Pstr_type Rec
    [
      type_declaration "geometry" (stdlib/format.ml[818,28035+5]..[818,28035+13]) (stdlib/format.ml[818,28035+0]..[818,28035+46])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/format.ml[817,27999+0]..[817,27999+35])
              Pstr_eval
              expression (stdlib/format.ml[817,27999+0]..[817,27999+35])
                Pexp_constant PConst_string(" Geometry functions and types ",(stdlib/format.ml[817,27999+0]..[817,27999+35]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (stdlib/format.ml[818,28035+18]..[818,28035+33])
                Immutable
                "max_indent" (stdlib/format.ml[818,28035+18]..[818,28035+28])                core_type (stdlib/format.ml[818,28035+29]..[818,28035+32])
                  Ptyp_constr "int" (stdlib/format.ml[818,28035+29]..[818,28035+32])
                  []
              (stdlib/format.ml[818,28035+34]..[818,28035+45])
                Immutable
                "margin" (stdlib/format.ml[818,28035+34]..[818,28035+40])                core_type (stdlib/format.ml[818,28035+42]..[818,28035+45])
                  Ptyp_constr "int" (stdlib/format.ml[818,28035+42]..[818,28035+45])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (stdlib/format.ml[820,28083+0]..[825,28249+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[820,28083+4]..[820,28083+21])
          Ppat_var "validate_geometry" (stdlib/format.ml[820,28083+4]..[820,28083+21])
        expression (stdlib/format.ml[820,28083+22]..[825,28249+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[820,28083+22]..[820,28083+42])
            Ppat_record Closed
            [
              "margin" (stdlib/format.ml[820,28083+23]..[820,28083+29]) ghost
                pattern (stdlib/format.ml[820,28083+23]..[820,28083+29])
                  Ppat_var "margin" (stdlib/format.ml[820,28083+23]..[820,28083+29])
              "max_indent" (stdlib/format.ml[820,28083+31]..[820,28083+41]) ghost
                pattern (stdlib/format.ml[820,28083+31]..[820,28083+41])
                  Ppat_var "max_indent" (stdlib/format.ml[820,28083+31]..[820,28083+41])
            ]
          expression (stdlib/format.ml[821,28128+2]..[825,28249+12])
            Pexp_ifthenelse
            expression (stdlib/format.ml[821,28128+5]..[821,28128+19])
              Pexp_apply
              expression (stdlib/format.ml[821,28128+16]..[821,28128+17])
                Pexp_ident "<" (stdlib/format.ml[821,28128+16]..[821,28128+17])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[821,28128+5]..[821,28128+15])
                    Pexp_ident "max_indent" (stdlib/format.ml[821,28128+5]..[821,28128+15])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[821,28128+18]..[821,28128+19])
                    Pexp_constant PConst_int (2,None)
              ]
            expression (stdlib/format.ml[822,28153+4]..[822,28153+26])
              Pexp_construct "Error" (stdlib/format.ml[822,28153+4]..[822,28153+9])
              Some
                expression (stdlib/format.ml[822,28153+10]..[822,28153+26])
                  Pexp_constant PConst_string("max_indent < 2",(stdlib/format.ml[822,28153+11]..[822,28153+25]),None)
            Some
              expression (stdlib/format.ml[823,28180+7]..[825,28249+12])
                Pexp_ifthenelse
                expression (stdlib/format.ml[823,28180+10]..[823,28180+30])
                  Pexp_apply
                  expression (stdlib/format.ml[823,28180+17]..[823,28180+19])
                    Pexp_ident "<=" (stdlib/format.ml[823,28180+17]..[823,28180+19])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[823,28180+10]..[823,28180+16])
                        Pexp_ident "margin" (stdlib/format.ml[823,28180+10]..[823,28180+16])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[823,28180+20]..[823,28180+30])
                        Pexp_ident "max_indent" (stdlib/format.ml[823,28180+20]..[823,28180+30])
                  ]
                expression (stdlib/format.ml[824,28216+4]..[824,28216+32])
                  Pexp_construct "Error" (stdlib/format.ml[824,28216+4]..[824,28216+9])
                  Some
                    expression (stdlib/format.ml[824,28216+10]..[824,28216+32])
                      Pexp_constant PConst_string("margin <= max_indent",(stdlib/format.ml[824,28216+11]..[824,28216+31]),None)
                Some
                  expression (stdlib/format.ml[825,28249+7]..[825,28249+12])
                    Pexp_construct "Ok" (stdlib/format.ml[825,28249+7]..[825,28249+9])
                    Some
                      expression (stdlib/format.ml[825,28249+10]..[825,28249+12])
                        Pexp_construct "()" (stdlib/format.ml[825,28249+10]..[825,28249+12])
                        None
    ]
  structure_item (stdlib/format.ml[827,28263+0]..[830,28351+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[827,28263+4]..[827,28263+18])
          Ppat_var "check_geometry" (stdlib/format.ml[827,28263+4]..[827,28263+18])
        expression (stdlib/format.ml[827,28263+19]..[830,28351+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[827,28263+19]..[827,28263+27])
            Ppat_var "geometry" (stdlib/format.ml[827,28263+19]..[827,28263+27])
          expression (stdlib/format.ml[828,28293+2]..[830,28351+20])
            Pexp_match
            expression (stdlib/format.ml[828,28293+8]..[828,28293+34])
              Pexp_apply
              expression (stdlib/format.ml[828,28293+8]..[828,28293+25])
                Pexp_ident "validate_geometry" (stdlib/format.ml[828,28293+8]..[828,28293+25])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[828,28293+26]..[828,28293+34])
                    Pexp_ident "geometry" (stdlib/format.ml[828,28293+26]..[828,28293+34])
              ]
            [
              <case>
                pattern (stdlib/format.ml[829,28333+4]..[829,28333+9])
                  Ppat_construct "Ok" (stdlib/format.ml[829,28333+4]..[829,28333+6])
                  Some
                    []
                    pattern (stdlib/format.ml[829,28333+7]..[829,28333+9])
                      Ppat_construct "()" (stdlib/format.ml[829,28333+7]..[829,28333+9])
                      None
                expression (stdlib/format.ml[829,28333+13]..[829,28333+17])
                  Pexp_construct "true" (stdlib/format.ml[829,28333+13]..[829,28333+17])
                  None
              <case>
                pattern (stdlib/format.ml[830,28351+4]..[830,28351+11])
                  Ppat_construct "Error" (stdlib/format.ml[830,28351+4]..[830,28351+9])
                  Some
                    []
                    pattern (stdlib/format.ml[830,28351+10]..[830,28351+11])
                      Ppat_any
                expression (stdlib/format.ml[830,28351+15]..[830,28351+20])
                  Pexp_construct "false" (stdlib/format.ml[830,28351+15]..[830,28351+20])
                  None
            ]
    ]
  structure_item (stdlib/format.ml[832,28373+0]..[832,28373+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[832,28373+4]..[832,28373+17])
          Ppat_var "pp_get_margin" (stdlib/format.ml[832,28373+4]..[832,28373+17])
        expression (stdlib/format.ml[832,28373+18]..[832,28373+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[832,28373+18]..[832,28373+23])
            Ppat_var "state" (stdlib/format.ml[832,28373+18]..[832,28373+23])
          expression (stdlib/format.ml[832,28373+24]..[832,28373+44]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[832,28373+24]..[832,28373+26])
              Ppat_construct "()" (stdlib/format.ml[832,28373+24]..[832,28373+26])
              None
            expression (stdlib/format.ml[832,28373+29]..[832,28373+44])
              Pexp_field
              expression (stdlib/format.ml[832,28373+29]..[832,28373+34])
                Pexp_ident "state" (stdlib/format.ml[832,28373+29]..[832,28373+34])
              "pp_margin" (stdlib/format.ml[832,28373+35]..[832,28373+44])
    ]
  structure_item (stdlib/format.ml[834,28419+0]..[837,28541+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[834,28419+4]..[834,28419+24])
          Ppat_var "pp_set_full_geometry" (stdlib/format.ml[834,28419+4]..[834,28419+24])
        expression (stdlib/format.ml[834,28419+25]..[837,28541+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[834,28419+25]..[834,28419+30])
            Ppat_var "state" (stdlib/format.ml[834,28419+25]..[834,28419+30])
          expression (stdlib/format.ml[834,28419+31]..[837,28541+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[834,28419+31]..[834,28419+51])
              Ppat_record Closed
              [
                "margin" (stdlib/format.ml[834,28419+32]..[834,28419+38]) ghost
                  pattern (stdlib/format.ml[834,28419+32]..[834,28419+38])
                    Ppat_var "margin" (stdlib/format.ml[834,28419+32]..[834,28419+38])
                "max_indent" (stdlib/format.ml[834,28419+40]..[834,28419+50]) ghost
                  pattern (stdlib/format.ml[834,28419+40]..[834,28419+50])
                    Ppat_var "max_indent" (stdlib/format.ml[834,28419+40]..[834,28419+50])
              ]
            expression (stdlib/format.ml[835,28473+2]..[837,28541+4])
              Pexp_sequence
              expression (stdlib/format.ml[835,28473+2]..[835,28473+28])
                Pexp_apply
                expression (stdlib/format.ml[835,28473+2]..[835,28473+15])
                  Pexp_ident "pp_set_margin" (stdlib/format.ml[835,28473+2]..[835,28473+15])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[835,28473+16]..[835,28473+21])
                      Pexp_ident "state" (stdlib/format.ml[835,28473+16]..[835,28473+21])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[835,28473+22]..[835,28473+28])
                      Pexp_ident "margin" (stdlib/format.ml[835,28473+22]..[835,28473+28])
                ]
              expression (stdlib/format.ml[836,28503+2]..[837,28541+4])
                Pexp_sequence
                expression (stdlib/format.ml[836,28503+2]..[836,28503+36])
                  Pexp_apply
                  expression (stdlib/format.ml[836,28503+2]..[836,28503+19])
                    Pexp_ident "pp_set_max_indent" (stdlib/format.ml[836,28503+2]..[836,28503+19])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[836,28503+20]..[836,28503+25])
                        Pexp_ident "state" (stdlib/format.ml[836,28503+20]..[836,28503+25])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[836,28503+26]..[836,28503+36])
                        Pexp_ident "max_indent" (stdlib/format.ml[836,28503+26]..[836,28503+36])
                  ]
                expression (stdlib/format.ml[837,28541+2]..[837,28541+4])
                  Pexp_construct "()" (stdlib/format.ml[837,28541+2]..[837,28541+4])
                  None
    ]
  structure_item (stdlib/format.ml[839,28547+0]..[845,28772+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[839,28547+4]..[839,28547+19])
          Ppat_var "pp_set_geometry" (stdlib/format.ml[839,28547+4]..[839,28547+19])
        expression (stdlib/format.ml[839,28547+20]..[845,28772+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[839,28547+20]..[839,28547+25])
            Ppat_var "state" (stdlib/format.ml[839,28547+20]..[839,28547+25])
          expression (stdlib/format.ml[839,28547+26]..[845,28772+39]) ghost
            Pexp_fun
            Labelled "max_indent"
            None
            pattern (stdlib/format.ml[839,28547+27]..[839,28547+37])
              Ppat_var "max_indent" (stdlib/format.ml[839,28547+27]..[839,28547+37])
            expression (stdlib/format.ml[839,28547+38]..[845,28772+39]) ghost
              Pexp_fun
              Labelled "margin"
              None
              pattern (stdlib/format.ml[839,28547+39]..[839,28547+45])
                Ppat_var "margin" (stdlib/format.ml[839,28547+39]..[839,28547+45])
              expression (stdlib/format.ml[840,28595+2]..[845,28772+39])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/format.ml[840,28595+6]..[840,28595+14])
                      Ppat_var "geometry" (stdlib/format.ml[840,28595+6]..[840,28595+14])
                    expression (stdlib/format.ml[840,28595+17]..[840,28595+39])
                      Pexp_record
                      [
                        "max_indent" (stdlib/format.ml[840,28595+19]..[840,28595+29]) ghost
                          expression (stdlib/format.ml[840,28595+19]..[840,28595+29])
                            Pexp_ident "max_indent" (stdlib/format.ml[840,28595+19]..[840,28595+29])
                        "margin" (stdlib/format.ml[840,28595+31]..[840,28595+37]) ghost
                          expression (stdlib/format.ml[840,28595+31]..[840,28595+37])
                            Pexp_ident "margin" (stdlib/format.ml[840,28595+31]..[840,28595+37])
                      ]
                      None
                ]
                expression (stdlib/format.ml[841,28638+2]..[845,28772+39])
                  Pexp_match
                  expression (stdlib/format.ml[841,28638+8]..[841,28638+34])
                    Pexp_apply
                    expression (stdlib/format.ml[841,28638+8]..[841,28638+25])
                      Pexp_ident "validate_geometry" (stdlib/format.ml[841,28638+8]..[841,28638+25])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[841,28638+26]..[841,28638+34])
                          Pexp_ident "geometry" (stdlib/format.ml[841,28638+26]..[841,28638+34])
                    ]
                  [
                    <case>
                      pattern (stdlib/format.ml[842,28678+4]..[842,28678+13])
                        Ppat_construct "Error" (stdlib/format.ml[842,28678+4]..[842,28678+9])
                        Some
                          []
                          pattern (stdlib/format.ml[842,28678+10]..[842,28678+13])
                            Ppat_var "msg" (stdlib/format.ml[842,28678+10]..[842,28678+13])
                      expression (stdlib/format.ml[843,28695+4]..[843,28695+63])
                        Pexp_apply
                        expression (stdlib/format.ml[843,28695+4]..[843,28695+9])
                          Pexp_ident "raise" (stdlib/format.ml[843,28695+4]..[843,28695+9])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[843,28695+10]..[843,28695+63])
                              Pexp_construct "Invalid_argument" (stdlib/format.ml[843,28695+11]..[843,28695+27])
                              Some
                                expression (stdlib/format.ml[843,28695+28]..[843,28695+62])
                                  Pexp_apply
                                  expression (stdlib/format.ml[843,28695+56]..[843,28695+57])
                                    Pexp_ident "^" (stdlib/format.ml[843,28695+56]..[843,28695+57])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[843,28695+29]..[843,28695+55])
                                        Pexp_constant PConst_string("Format.pp_set_geometry: ",(stdlib/format.ml[843,28695+30]..[843,28695+54]),None)
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[843,28695+58]..[843,28695+61])
                                        Pexp_ident "msg" (stdlib/format.ml[843,28695+58]..[843,28695+61])
                                  ]
                        ]
                    <case>
                      pattern (stdlib/format.ml[844,28759+4]..[844,28759+9])
                        Ppat_construct "Ok" (stdlib/format.ml[844,28759+4]..[844,28759+6])
                        Some
                          []
                          pattern (stdlib/format.ml[844,28759+7]..[844,28759+9])
                            Ppat_construct "()" (stdlib/format.ml[844,28759+7]..[844,28759+9])
                            None
                      expression (stdlib/format.ml[845,28772+4]..[845,28772+39])
                        Pexp_apply
                        expression (stdlib/format.ml[845,28772+4]..[845,28772+24])
                          Pexp_ident "pp_set_full_geometry" (stdlib/format.ml[845,28772+4]..[845,28772+24])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[845,28772+25]..[845,28772+30])
                              Pexp_ident "state" (stdlib/format.ml[845,28772+25]..[845,28772+30])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[845,28772+31]..[845,28772+39])
                              Pexp_ident "geometry" (stdlib/format.ml[845,28772+31]..[845,28772+39])
                        ]
                  ]
    ]
  structure_item (stdlib/format.ml[847,28813+0]..[853,28988+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[847,28813+4]..[847,28813+24])
          Ppat_var "pp_safe_set_geometry" (stdlib/format.ml[847,28813+4]..[847,28813+24])
        expression (stdlib/format.ml[847,28813+25]..[853,28988+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[847,28813+25]..[847,28813+30])
            Ppat_var "state" (stdlib/format.ml[847,28813+25]..[847,28813+30])
          expression (stdlib/format.ml[847,28813+31]..[853,28988+39]) ghost
            Pexp_fun
            Labelled "max_indent"
            None
            pattern (stdlib/format.ml[847,28813+32]..[847,28813+42])
              Ppat_var "max_indent" (stdlib/format.ml[847,28813+32]..[847,28813+42])
            expression (stdlib/format.ml[847,28813+43]..[853,28988+39]) ghost
              Pexp_fun
              Labelled "margin"
              None
              pattern (stdlib/format.ml[847,28813+44]..[847,28813+50])
                Ppat_var "margin" (stdlib/format.ml[847,28813+44]..[847,28813+50])
              expression (stdlib/format.ml[848,28866+2]..[853,28988+39])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/format.ml[848,28866+6]..[848,28866+14])
                      Ppat_var "geometry" (stdlib/format.ml[848,28866+6]..[848,28866+14])
                    expression (stdlib/format.ml[848,28866+17]..[848,28866+39])
                      Pexp_record
                      [
                        "max_indent" (stdlib/format.ml[848,28866+19]..[848,28866+29]) ghost
                          expression (stdlib/format.ml[848,28866+19]..[848,28866+29])
                            Pexp_ident "max_indent" (stdlib/format.ml[848,28866+19]..[848,28866+29])
                        "margin" (stdlib/format.ml[848,28866+31]..[848,28866+37]) ghost
                          expression (stdlib/format.ml[848,28866+31]..[848,28866+37])
                            Pexp_ident "margin" (stdlib/format.ml[848,28866+31]..[848,28866+37])
                      ]
                      None
                ]
                expression (stdlib/format.ml[849,28909+2]..[853,28988+39])
                  Pexp_match
                  expression (stdlib/format.ml[849,28909+8]..[849,28909+34])
                    Pexp_apply
                    expression (stdlib/format.ml[849,28909+8]..[849,28909+25])
                      Pexp_ident "validate_geometry" (stdlib/format.ml[849,28909+8]..[849,28909+25])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[849,28909+26]..[849,28909+34])
                          Pexp_ident "geometry" (stdlib/format.ml[849,28909+26]..[849,28909+34])
                    ]
                  [
                    <case>
                      pattern (stdlib/format.ml[850,28949+4]..[850,28949+14])
                        Ppat_construct "Error" (stdlib/format.ml[850,28949+4]..[850,28949+9])
                        Some
                          []
                          pattern (stdlib/format.ml[850,28949+10]..[850,28949+14])
                            Ppat_var "_msg" (stdlib/format.ml[850,28949+10]..[850,28949+14])
                      expression (stdlib/format.ml[851,28967+5]..[851,28967+7])
                        Pexp_construct "()" (stdlib/format.ml[851,28967+5]..[851,28967+7])
                        None
                    <case>
                      pattern (stdlib/format.ml[852,28975+4]..[852,28975+9])
                        Ppat_construct "Ok" (stdlib/format.ml[852,28975+4]..[852,28975+6])
                        Some
                          []
                          pattern (stdlib/format.ml[852,28975+7]..[852,28975+9])
                            Ppat_construct "()" (stdlib/format.ml[852,28975+7]..[852,28975+9])
                            None
                      expression (stdlib/format.ml[853,28988+4]..[853,28988+39])
                        Pexp_apply
                        expression (stdlib/format.ml[853,28988+4]..[853,28988+24])
                          Pexp_ident "pp_set_full_geometry" (stdlib/format.ml[853,28988+4]..[853,28988+24])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[853,28988+25]..[853,28988+30])
                              Pexp_ident "state" (stdlib/format.ml[853,28988+25]..[853,28988+30])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[853,28988+31]..[853,28988+39])
                              Pexp_ident "geometry" (stdlib/format.ml[853,28988+31]..[853,28988+39])
                        ]
                  ]
    ]
  structure_item (stdlib/format.ml[855,29029+0]..[856,29060+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[855,29029+4]..[855,29029+19])
          Ppat_var "pp_get_geometry" (stdlib/format.ml[855,29029+4]..[855,29029+19])
        expression (stdlib/format.ml[855,29029+20]..[856,29060+78]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[855,29029+20]..[855,29029+25])
            Ppat_var "state" (stdlib/format.ml[855,29029+20]..[855,29029+25])
          expression (stdlib/format.ml[855,29029+26]..[856,29060+78]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[855,29029+26]..[855,29029+28])
              Ppat_construct "()" (stdlib/format.ml[855,29029+26]..[855,29029+28])
              None
            expression (stdlib/format.ml[856,29060+2]..[856,29060+78])
              Pexp_record
              [
                "margin" (stdlib/format.ml[856,29060+4]..[856,29060+10])
                  expression (stdlib/format.ml[856,29060+13]..[856,29060+35])
                    Pexp_apply
                    expression (stdlib/format.ml[856,29060+13]..[856,29060+26])
                      Pexp_ident "pp_get_margin" (stdlib/format.ml[856,29060+13]..[856,29060+26])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[856,29060+27]..[856,29060+32])
                          Pexp_ident "state" (stdlib/format.ml[856,29060+27]..[856,29060+32])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[856,29060+33]..[856,29060+35])
                          Pexp_construct "()" (stdlib/format.ml[856,29060+33]..[856,29060+35])
                          None
                    ]
                "max_indent" (stdlib/format.ml[856,29060+37]..[856,29060+47])
                  expression (stdlib/format.ml[856,29060+50]..[856,29060+76])
                    Pexp_apply
                    expression (stdlib/format.ml[856,29060+50]..[856,29060+67])
                      Pexp_ident "pp_get_max_indent" (stdlib/format.ml[856,29060+50]..[856,29060+67])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[856,29060+68]..[856,29060+73])
                          Pexp_ident "state" (stdlib/format.ml[856,29060+68]..[856,29060+73])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[856,29060+74]..[856,29060+76])
                          Pexp_construct "()" (stdlib/format.ml[856,29060+74]..[856,29060+76])
                          None
                    ]
              ]
              None
    ]
  structure_item (stdlib/format.ml[858,29140+0]..[860,29223+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[858,29140+4]..[858,29140+22])
          Ppat_var "pp_update_geometry" (stdlib/format.ml[858,29140+4]..[858,29140+22])
        expression (stdlib/format.ml[858,29140+23]..[860,29223+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[858,29140+23]..[858,29140+28])
            Ppat_var "state" (stdlib/format.ml[858,29140+23]..[858,29140+28])
          expression (stdlib/format.ml[858,29140+29]..[860,29223+46]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[858,29140+29]..[858,29140+35])
              Ppat_var "update" (stdlib/format.ml[858,29140+29]..[858,29140+35])
            expression (stdlib/format.ml[859,29178+2]..[860,29223+46])
              Pexp_let Nonrec
              [
                <def>
                  pattern (stdlib/format.ml[859,29178+6]..[859,29178+14])
                    Ppat_var "geometry" (stdlib/format.ml[859,29178+6]..[859,29178+14])
                  expression (stdlib/format.ml[859,29178+17]..[859,29178+41])
                    Pexp_apply
                    expression (stdlib/format.ml[859,29178+17]..[859,29178+32])
                      Pexp_ident "pp_get_geometry" (stdlib/format.ml[859,29178+17]..[859,29178+32])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[859,29178+33]..[859,29178+38])
                          Pexp_ident "state" (stdlib/format.ml[859,29178+33]..[859,29178+38])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[859,29178+39]..[859,29178+41])
                          Pexp_construct "()" (stdlib/format.ml[859,29178+39]..[859,29178+41])
                          None
                    ]
              ]
              expression (stdlib/format.ml[860,29223+2]..[860,29223+46])
                Pexp_apply
                expression (stdlib/format.ml[860,29223+2]..[860,29223+22])
                  Pexp_ident "pp_set_full_geometry" (stdlib/format.ml[860,29223+2]..[860,29223+22])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[860,29223+23]..[860,29223+28])
                      Pexp_ident "state" (stdlib/format.ml[860,29223+23]..[860,29223+28])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[860,29223+29]..[860,29223+46])
                      Pexp_apply
                      expression (stdlib/format.ml[860,29223+30]..[860,29223+36])
                        Pexp_ident "update" (stdlib/format.ml[860,29223+30]..[860,29223+36])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[860,29223+37]..[860,29223+45])
                            Pexp_ident "geometry" (stdlib/format.ml[860,29223+37]..[860,29223+45])
                      ]
                ]
    ]
  structure_item (stdlib/format.ml[863,29321+0]..[874,29594+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[863,29321+4]..[863,29321+34])
          Ppat_var "pp_set_formatter_out_functions" (stdlib/format.ml[863,29321+4]..[863,29321+34])
        expression (stdlib/format.ml[863,29321+35]..[874,29594+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[863,29321+35]..[863,29321+40])
            Ppat_var "state" (stdlib/format.ml[863,29321+35]..[863,29321+40])
          expression (stdlib/format.ml[863,29321+41]..[874,29594+26]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[863,29321+41]..[869,29474+5])
              Ppat_record Closed
              [
                "out_string" (stdlib/format.ml[864,29364+6]..[864,29364+16])
                  pattern (stdlib/format.ml[864,29364+19]..[864,29364+20])
                    Ppat_var "f" (stdlib/format.ml[864,29364+19]..[864,29364+20])
                "out_flush" (stdlib/format.ml[865,29386+6]..[865,29386+15])
                  pattern (stdlib/format.ml[865,29386+18]..[865,29386+19])
                    Ppat_var "g" (stdlib/format.ml[865,29386+18]..[865,29386+19])
                "out_newline" (stdlib/format.ml[866,29407+6]..[866,29407+17])
                  pattern (stdlib/format.ml[866,29407+20]..[866,29407+21])
                    Ppat_var "h" (stdlib/format.ml[866,29407+20]..[866,29407+21])
                "out_spaces" (stdlib/format.ml[867,29430+6]..[867,29430+16])
                  pattern (stdlib/format.ml[867,29430+19]..[867,29430+20])
                    Ppat_var "i" (stdlib/format.ml[867,29430+19]..[867,29430+20])
                "out_indent" (stdlib/format.ml[868,29452+6]..[868,29452+16])
                  pattern (stdlib/format.ml[868,29452+19]..[868,29452+20])
                    Ppat_var "j" (stdlib/format.ml[868,29452+19]..[868,29452+20])
              ]
            expression (stdlib/format.ml[870,29482+2]..[874,29594+26])
              Pexp_sequence
              expression (stdlib/format.ml[870,29482+2]..[870,29482+26])
                Pexp_setfield
                expression (stdlib/format.ml[870,29482+2]..[870,29482+7])
                  Pexp_ident "state" (stdlib/format.ml[870,29482+2]..[870,29482+7])
                "pp_out_string" (stdlib/format.ml[870,29482+8]..[870,29482+21])
                expression (stdlib/format.ml[870,29482+25]..[870,29482+26])
                  Pexp_ident "f" (stdlib/format.ml[870,29482+25]..[870,29482+26])
              expression (stdlib/format.ml[871,29510+2]..[874,29594+26])
                Pexp_sequence
                expression (stdlib/format.ml[871,29510+2]..[871,29510+25])
                  Pexp_setfield
                  expression (stdlib/format.ml[871,29510+2]..[871,29510+7])
                    Pexp_ident "state" (stdlib/format.ml[871,29510+2]..[871,29510+7])
                  "pp_out_flush" (stdlib/format.ml[871,29510+8]..[871,29510+20])
                  expression (stdlib/format.ml[871,29510+24]..[871,29510+25])
                    Pexp_ident "g" (stdlib/format.ml[871,29510+24]..[871,29510+25])
                expression (stdlib/format.ml[872,29537+2]..[874,29594+26])
                  Pexp_sequence
                  expression (stdlib/format.ml[872,29537+2]..[872,29537+27])
                    Pexp_setfield
                    expression (stdlib/format.ml[872,29537+2]..[872,29537+7])
                      Pexp_ident "state" (stdlib/format.ml[872,29537+2]..[872,29537+7])
                    "pp_out_newline" (stdlib/format.ml[872,29537+8]..[872,29537+22])
                    expression (stdlib/format.ml[872,29537+26]..[872,29537+27])
                      Pexp_ident "h" (stdlib/format.ml[872,29537+26]..[872,29537+27])
                  expression (stdlib/format.ml[873,29566+2]..[874,29594+26])
                    Pexp_sequence
                    expression (stdlib/format.ml[873,29566+2]..[873,29566+26])
                      Pexp_setfield
                      expression (stdlib/format.ml[873,29566+2]..[873,29566+7])
                        Pexp_ident "state" (stdlib/format.ml[873,29566+2]..[873,29566+7])
                      "pp_out_spaces" (stdlib/format.ml[873,29566+8]..[873,29566+21])
                      expression (stdlib/format.ml[873,29566+25]..[873,29566+26])
                        Pexp_ident "i" (stdlib/format.ml[873,29566+25]..[873,29566+26])
                    expression (stdlib/format.ml[874,29594+2]..[874,29594+26])
                      Pexp_setfield
                      expression (stdlib/format.ml[874,29594+2]..[874,29594+7])
                        Pexp_ident "state" (stdlib/format.ml[874,29594+2]..[874,29594+7])
                      "pp_out_indent" (stdlib/format.ml[874,29594+8]..[874,29594+21])
                      expression (stdlib/format.ml[874,29594+25]..[874,29594+26])
                        Pexp_ident "j" (stdlib/format.ml[874,29594+25]..[874,29594+26])
    ]
  structure_item (stdlib/format.ml[876,29622+0]..[882,29850+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[876,29622+4]..[876,29622+34])
          Ppat_var "pp_get_formatter_out_functions" (stdlib/format.ml[876,29622+4]..[876,29622+34])
        expression (stdlib/format.ml[876,29622+35]..[882,29850+1]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[876,29622+35]..[876,29622+40])
            Ppat_var "state" (stdlib/format.ml[876,29622+35]..[876,29622+40])
          expression (stdlib/format.ml[876,29622+41]..[882,29850+1]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[876,29622+41]..[876,29622+43])
              Ppat_construct "()" (stdlib/format.ml[876,29622+41]..[876,29622+43])
              None
            expression (stdlib/format.ml[876,29622+46]..[882,29850+1])
              Pexp_record
              [
                "out_string" (stdlib/format.ml[877,29670+2]..[877,29670+12])
                  expression (stdlib/format.ml[877,29670+15]..[877,29670+34])
                    Pexp_field
                    expression (stdlib/format.ml[877,29670+15]..[877,29670+20])
                      Pexp_ident "state" (stdlib/format.ml[877,29670+15]..[877,29670+20])
                    "pp_out_string" (stdlib/format.ml[877,29670+21]..[877,29670+34])
                "out_flush" (stdlib/format.ml[878,29706+2]..[878,29706+11])
                  expression (stdlib/format.ml[878,29706+14]..[878,29706+32])
                    Pexp_field
                    expression (stdlib/format.ml[878,29706+14]..[878,29706+19])
                      Pexp_ident "state" (stdlib/format.ml[878,29706+14]..[878,29706+19])
                    "pp_out_flush" (stdlib/format.ml[878,29706+20]..[878,29706+32])
                "out_newline" (stdlib/format.ml[879,29740+2]..[879,29740+13])
                  expression (stdlib/format.ml[879,29740+16]..[879,29740+36])
                    Pexp_field
                    expression (stdlib/format.ml[879,29740+16]..[879,29740+21])
                      Pexp_ident "state" (stdlib/format.ml[879,29740+16]..[879,29740+21])
                    "pp_out_newline" (stdlib/format.ml[879,29740+22]..[879,29740+36])
                "out_spaces" (stdlib/format.ml[880,29778+2]..[880,29778+12])
                  expression (stdlib/format.ml[880,29778+15]..[880,29778+34])
                    Pexp_field
                    expression (stdlib/format.ml[880,29778+15]..[880,29778+20])
                      Pexp_ident "state" (stdlib/format.ml[880,29778+15]..[880,29778+20])
                    "pp_out_spaces" (stdlib/format.ml[880,29778+21]..[880,29778+34])
                "out_indent" (stdlib/format.ml[881,29814+2]..[881,29814+12])
                  expression (stdlib/format.ml[881,29814+15]..[881,29814+34])
                    Pexp_field
                    expression (stdlib/format.ml[881,29814+15]..[881,29814+20])
                      Pexp_ident "state" (stdlib/format.ml[881,29814+15]..[881,29814+20])
                    "pp_out_indent" (stdlib/format.ml[881,29814+21]..[881,29814+34])
              ]
              None
    ]
  structure_item (stdlib/format.ml[886,29921+0]..[887,29971+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[886,29921+4]..[886,29921+37])
          Ppat_var "pp_set_formatter_output_functions" (stdlib/format.ml[886,29921+4]..[886,29921+37])
        expression (stdlib/format.ml[886,29921+38]..[887,29971+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[886,29921+38]..[886,29921+43])
            Ppat_var "state" (stdlib/format.ml[886,29921+38]..[886,29921+43])
          expression (stdlib/format.ml[886,29921+44]..[887,29971+51]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[886,29921+44]..[886,29921+45])
              Ppat_var "f" (stdlib/format.ml[886,29921+44]..[886,29921+45])
            expression (stdlib/format.ml[886,29921+46]..[887,29971+51]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[886,29921+46]..[886,29921+47])
                Ppat_var "g" (stdlib/format.ml[886,29921+46]..[886,29921+47])
              expression (stdlib/format.ml[887,29971+2]..[887,29971+51])
                Pexp_sequence
                expression (stdlib/format.ml[887,29971+2]..[887,29971+26])
                  Pexp_setfield
                  expression (stdlib/format.ml[887,29971+2]..[887,29971+7])
                    Pexp_ident "state" (stdlib/format.ml[887,29971+2]..[887,29971+7])
                  "pp_out_string" (stdlib/format.ml[887,29971+8]..[887,29971+21])
                  expression (stdlib/format.ml[887,29971+25]..[887,29971+26])
                    Pexp_ident "f" (stdlib/format.ml[887,29971+25]..[887,29971+26])
                expression (stdlib/format.ml[887,29971+28]..[887,29971+51])
                  Pexp_setfield
                  expression (stdlib/format.ml[887,29971+28]..[887,29971+33])
                    Pexp_ident "state" (stdlib/format.ml[887,29971+28]..[887,29971+33])
                  "pp_out_flush" (stdlib/format.ml[887,29971+34]..[887,29971+46])
                  expression (stdlib/format.ml[887,29971+50]..[887,29971+51])
                    Pexp_ident "g" (stdlib/format.ml[887,29971+50]..[887,29971+51])
    ]
  structure_item (stdlib/format.ml[889,30024+0]..[890,30073+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[889,30024+4]..[889,30024+37])
          Ppat_var "pp_get_formatter_output_functions" (stdlib/format.ml[889,30024+4]..[889,30024+37])
        expression (stdlib/format.ml[889,30024+38]..[890,30073+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[889,30024+38]..[889,30024+43])
            Ppat_var "state" (stdlib/format.ml[889,30024+38]..[889,30024+43])
          expression (stdlib/format.ml[889,30024+44]..[890,30073+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[889,30024+44]..[889,30024+46])
              Ppat_construct "()" (stdlib/format.ml[889,30024+44]..[889,30024+46])
              None
            expression (stdlib/format.ml[890,30073+2]..[890,30073+43])
              Pexp_tuple
              [
                expression (stdlib/format.ml[890,30073+3]..[890,30073+22])
                  Pexp_field
                  expression (stdlib/format.ml[890,30073+3]..[890,30073+8])
                    Pexp_ident "state" (stdlib/format.ml[890,30073+3]..[890,30073+8])
                  "pp_out_string" (stdlib/format.ml[890,30073+9]..[890,30073+22])
                expression (stdlib/format.ml[890,30073+24]..[890,30073+42])
                  Pexp_field
                  expression (stdlib/format.ml[890,30073+24]..[890,30073+29])
                    Pexp_ident "state" (stdlib/format.ml[890,30073+24]..[890,30073+29])
                  "pp_out_flush" (stdlib/format.ml[890,30073+30]..[890,30073+42])
              ]
    ]
  structure_item (stdlib/format.ml[894,30167+0]..[894,30167+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[894,30167+4]..[894,30167+19])
          Ppat_var "display_newline" (stdlib/format.ml[894,30167+4]..[894,30167+19])
        expression (stdlib/format.ml[894,30167+20]..[894,30167+60]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[894,30167+20]..[894,30167+25])
            Ppat_var "state" (stdlib/format.ml[894,30167+20]..[894,30167+25])
          expression (stdlib/format.ml[894,30167+26]..[894,30167+60]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[894,30167+26]..[894,30167+28])
              Ppat_construct "()" (stdlib/format.ml[894,30167+26]..[894,30167+28])
              None
            expression (stdlib/format.ml[894,30167+31]..[894,30167+60])
              Pexp_apply
              expression (stdlib/format.ml[894,30167+31]..[894,30167+50])
                Pexp_field
                expression (stdlib/format.ml[894,30167+31]..[894,30167+36])
                  Pexp_ident "state" (stdlib/format.ml[894,30167+31]..[894,30167+36])
                "pp_out_string" (stdlib/format.ml[894,30167+37]..[894,30167+50])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[894,30167+51]..[894,30167+55])
                    Pexp_constant PConst_string("\n",(stdlib/format.ml[894,30167+52]..[894,30167+54]),None)
                <arg>
                Nolabel
                  expression (stdlib/format.ml[894,30167+56]..[894,30167+57])
                    Pexp_constant PConst_int (0,None)
                <arg>
                Nolabel
                  expression (stdlib/format.ml[894,30167+59]..[894,30167+60])
                    Pexp_constant PConst_int (1,None)
              ]
    ]
  structure_item (stdlib/format.ml[897,30274+0]..[897,30274+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[897,30274+4]..[897,30274+14])
          Ppat_var "blank_line" (stdlib/format.ml[897,30274+4]..[897,30274+14])
        expression (stdlib/format.ml[897,30274+17]..[897,30274+35])
          Pexp_apply
          expression (stdlib/format.ml[897,30274+17]..[897,30274+28])
            Pexp_ident "String.make" (stdlib/format.ml[897,30274+17]..[897,30274+28])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[897,30274+29]..[897,30274+31])
                Pexp_constant PConst_int (80,None)
            <arg>
            Nolabel
              expression (stdlib/format.ml[897,30274+32]..[897,30274+35])
                Pexp_constant PConst_char 20
          ]
    ]
  structure_item (stdlib/format.ml[898,30310+0]..[904,30500+5])
    Pstr_value Rec
    [
      <def>
        pattern (stdlib/format.ml[898,30310+8]..[898,30310+22])
          Ppat_var "display_blanks" (stdlib/format.ml[898,30310+8]..[898,30310+22])
        expression (stdlib/format.ml[898,30310+23]..[904,30500+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[898,30310+23]..[898,30310+28])
            Ppat_var "state" (stdlib/format.ml[898,30310+23]..[898,30310+28])
          expression (stdlib/format.ml[898,30310+29]..[904,30500+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[898,30310+29]..[898,30310+30])
              Ppat_var "n" (stdlib/format.ml[898,30310+29]..[898,30310+30])
            expression (stdlib/format.ml[899,30343+2]..[904,30500+5])
              Pexp_ifthenelse
              expression (stdlib/format.ml[899,30343+5]..[899,30343+10])
                Pexp_apply
                expression (stdlib/format.ml[899,30343+7]..[899,30343+8])
                  Pexp_ident ">" (stdlib/format.ml[899,30343+7]..[899,30343+8])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[899,30343+5]..[899,30343+6])
                      Pexp_ident "n" (stdlib/format.ml[899,30343+5]..[899,30343+6])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[899,30343+9]..[899,30343+10])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (stdlib/format.ml[900,30359+2]..[904,30500+5])
                Pexp_ifthenelse
                expression (stdlib/format.ml[900,30359+5]..[900,30359+12])
                  Pexp_apply
                  expression (stdlib/format.ml[900,30359+7]..[900,30359+9])
                    Pexp_ident "<=" (stdlib/format.ml[900,30359+7]..[900,30359+9])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[900,30359+5]..[900,30359+6])
                        Pexp_ident "n" (stdlib/format.ml[900,30359+5]..[900,30359+6])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[900,30359+10]..[900,30359+12])
                        Pexp_constant PConst_int (80,None)
                  ]
                expression (stdlib/format.ml[900,30359+18]..[900,30359+52])
                  Pexp_apply
                  expression (stdlib/format.ml[900,30359+18]..[900,30359+37])
                    Pexp_field
                    expression (stdlib/format.ml[900,30359+18]..[900,30359+23])
                      Pexp_ident "state" (stdlib/format.ml[900,30359+18]..[900,30359+23])
                    "pp_out_string" (stdlib/format.ml[900,30359+24]..[900,30359+37])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[900,30359+38]..[900,30359+48])
                        Pexp_ident "blank_line" (stdlib/format.ml[900,30359+38]..[900,30359+48])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[900,30359+49]..[900,30359+50])
                        Pexp_constant PConst_int (0,None)
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[900,30359+51]..[900,30359+52])
                        Pexp_ident "n" (stdlib/format.ml[900,30359+51]..[900,30359+52])
                  ]
                Some
                  expression (stdlib/format.ml[901,30417+2]..[904,30500+5])
                    Pexp_sequence
                    expression (stdlib/format.ml[902,30425+4]..[902,30425+39])
                      Pexp_apply
                      expression (stdlib/format.ml[902,30425+4]..[902,30425+23])
                        Pexp_field
                        expression (stdlib/format.ml[902,30425+4]..[902,30425+9])
                          Pexp_ident "state" (stdlib/format.ml[902,30425+4]..[902,30425+9])
                        "pp_out_string" (stdlib/format.ml[902,30425+10]..[902,30425+23])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[902,30425+24]..[902,30425+34])
                            Pexp_ident "blank_line" (stdlib/format.ml[902,30425+24]..[902,30425+34])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[902,30425+35]..[902,30425+36])
                            Pexp_constant PConst_int (0,None)
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[902,30425+37]..[902,30425+39])
                            Pexp_constant PConst_int (80,None)
                      ]
                    expression (stdlib/format.ml[903,30466+4]..[903,30466+33])
                      Pexp_apply
                      expression (stdlib/format.ml[903,30466+4]..[903,30466+18])
                        Pexp_ident "display_blanks" (stdlib/format.ml[903,30466+4]..[903,30466+18])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[903,30466+19]..[903,30466+24])
                            Pexp_ident "state" (stdlib/format.ml[903,30466+19]..[903,30466+24])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[903,30466+25]..[903,30466+33])
                            Pexp_apply
                            expression (stdlib/format.ml[903,30466+28]..[903,30466+29])
                              Pexp_ident "-" (stdlib/format.ml[903,30466+28]..[903,30466+29])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[903,30466+26]..[903,30466+27])
                                  Pexp_ident "n" (stdlib/format.ml[903,30466+26]..[903,30466+27])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[903,30466+30]..[903,30466+32])
                                  Pexp_constant PConst_int (80,None)
                            ]
                      ]
              None
    ]
  structure_item (stdlib/format.ml[908,30571+0]..[908,30571+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[908,30571+4]..[908,30571+18])
          Ppat_var "display_indent" (stdlib/format.ml[908,30571+4]..[908,30571+18])
        expression (stdlib/format.ml[908,30571+21]..[908,30571+35])
          Pexp_ident "display_blanks" (stdlib/format.ml[908,30571+21]..[908,30571+35])
    ]
  structure_item (stdlib/format.ml[912,30714+0]..[917,30946+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[912,30714+4]..[912,30714+32])
          Ppat_var "pp_set_formatter_out_channel" (stdlib/format.ml[912,30714+4]..[912,30714+32])
        expression (stdlib/format.ml[912,30714+33]..[917,30946+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[912,30714+33]..[912,30714+38])
            Ppat_var "state" (stdlib/format.ml[912,30714+33]..[912,30714+38])
          expression (stdlib/format.ml[912,30714+39]..[917,30946+45]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[912,30714+39]..[912,30714+41])
              Ppat_var "oc" (stdlib/format.ml[912,30714+39]..[912,30714+41])
            expression (stdlib/format.ml[913,30758+2]..[917,30946+45])
              Pexp_sequence
              expression (stdlib/format.ml[913,30758+2]..[913,30758+44])
                Pexp_setfield
                expression (stdlib/format.ml[913,30758+2]..[913,30758+7])
                  Pexp_ident "state" (stdlib/format.ml[913,30758+2]..[913,30758+7])
                "pp_out_string" (stdlib/format.ml[913,30758+8]..[913,30758+21])
                expression (stdlib/format.ml[913,30758+25]..[913,30758+44])
                  Pexp_apply
                  expression (stdlib/format.ml[913,30758+25]..[913,30758+41])
                    Pexp_ident "output_substring" (stdlib/format.ml[913,30758+25]..[913,30758+41])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[913,30758+42]..[913,30758+44])
                        Pexp_ident "oc" (stdlib/format.ml[913,30758+42]..[913,30758+44])
                  ]
              expression (stdlib/format.ml[914,30804+2]..[917,30946+45])
                Pexp_sequence
                expression (stdlib/format.ml[914,30804+2]..[914,30804+44])
                  Pexp_setfield
                  expression (stdlib/format.ml[914,30804+2]..[914,30804+7])
                    Pexp_ident "state" (stdlib/format.ml[914,30804+2]..[914,30804+7])
                  "pp_out_flush" (stdlib/format.ml[914,30804+8]..[914,30804+20])
                  expression (stdlib/format.ml[914,30804+24]..[914,30804+44])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (stdlib/format.ml[914,30804+29]..[914,30804+31])
                      Ppat_construct "()" (stdlib/format.ml[914,30804+29]..[914,30804+31])
                      None
                    expression (stdlib/format.ml[914,30804+35]..[914,30804+43])
                      Pexp_apply
                      expression (stdlib/format.ml[914,30804+35]..[914,30804+40])
                        Pexp_ident "flush" (stdlib/format.ml[914,30804+35]..[914,30804+40])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[914,30804+41]..[914,30804+43])
                            Pexp_ident "oc" (stdlib/format.ml[914,30804+41]..[914,30804+43])
                      ]
                expression (stdlib/format.ml[915,30850+2]..[917,30946+45])
                  Pexp_sequence
                  expression (stdlib/format.ml[915,30850+2]..[915,30850+47])
                    Pexp_setfield
                    expression (stdlib/format.ml[915,30850+2]..[915,30850+7])
                      Pexp_ident "state" (stdlib/format.ml[915,30850+2]..[915,30850+7])
                    "pp_out_newline" (stdlib/format.ml[915,30850+8]..[915,30850+22])
                    expression (stdlib/format.ml[915,30850+26]..[915,30850+47])
                      Pexp_apply
                      expression (stdlib/format.ml[915,30850+26]..[915,30850+41])
                        Pexp_ident "display_newline" (stdlib/format.ml[915,30850+26]..[915,30850+41])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[915,30850+42]..[915,30850+47])
                            Pexp_ident "state" (stdlib/format.ml[915,30850+42]..[915,30850+47])
                      ]
                  expression (stdlib/format.ml[916,30899+2]..[917,30946+45])
                    Pexp_sequence
                    expression (stdlib/format.ml[916,30899+2]..[916,30899+45])
                      Pexp_setfield
                      expression (stdlib/format.ml[916,30899+2]..[916,30899+7])
                        Pexp_ident "state" (stdlib/format.ml[916,30899+2]..[916,30899+7])
                      "pp_out_spaces" (stdlib/format.ml[916,30899+8]..[916,30899+21])
                      expression (stdlib/format.ml[916,30899+25]..[916,30899+45])
                        Pexp_apply
                        expression (stdlib/format.ml[916,30899+25]..[916,30899+39])
                          Pexp_ident "display_blanks" (stdlib/format.ml[916,30899+25]..[916,30899+39])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[916,30899+40]..[916,30899+45])
                              Pexp_ident "state" (stdlib/format.ml[916,30899+40]..[916,30899+45])
                        ]
                    expression (stdlib/format.ml[917,30946+2]..[917,30946+45])
                      Pexp_setfield
                      expression (stdlib/format.ml[917,30946+2]..[917,30946+7])
                        Pexp_ident "state" (stdlib/format.ml[917,30946+2]..[917,30946+7])
                      "pp_out_indent" (stdlib/format.ml[917,30946+8]..[917,30946+21])
                      expression (stdlib/format.ml[917,30946+25]..[917,30946+45])
                        Pexp_apply
                        expression (stdlib/format.ml[917,30946+25]..[917,30946+39])
                          Pexp_ident "display_indent" (stdlib/format.ml[917,30946+25]..[917,30946+39])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[917,30946+40]..[917,30946+45])
                              Pexp_ident "state" (stdlib/format.ml[917,30946+40]..[917,30946+45])
                        ]
    ]
  structure_item (stdlib/format.ml[925,31033+0]..[927,31107+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[925,31033+4]..[925,31033+28])
          Ppat_var "default_pp_mark_open_tag" (stdlib/format.ml[925,31033+4]..[925,31033+28])
        expression (stdlib/format.ml[925,31033+31]..[927,31107+11])
          Pexp_function
          [
            <case>
              pattern (stdlib/format.ml[926,31073+4]..[926,31073+16])
                Ppat_construct "String_tag" (stdlib/format.ml[926,31073+4]..[926,31073+14])
                Some
                  []
                  pattern (stdlib/format.ml[926,31073+15]..[926,31073+16])
                    Ppat_var "s" (stdlib/format.ml[926,31073+15]..[926,31073+16])
              expression (stdlib/format.ml[926,31073+20]..[926,31073+33])
                Pexp_apply
                expression (stdlib/format.ml[926,31073+24]..[926,31073+25])
                  Pexp_ident "^" (stdlib/format.ml[926,31073+24]..[926,31073+25])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[926,31073+20]..[926,31073+23])
                      Pexp_constant PConst_string("<",(stdlib/format.ml[926,31073+21]..[926,31073+22]),None)
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[926,31073+26]..[926,31073+33])
                      Pexp_apply
                      expression (stdlib/format.ml[926,31073+28]..[926,31073+29])
                        Pexp_ident "^" (stdlib/format.ml[926,31073+28]..[926,31073+29])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[926,31073+26]..[926,31073+27])
                            Pexp_ident "s" (stdlib/format.ml[926,31073+26]..[926,31073+27])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[926,31073+30]..[926,31073+33])
                            Pexp_constant PConst_string(">",(stdlib/format.ml[926,31073+31]..[926,31073+32]),None)
                      ]
                ]
            <case>
              pattern (stdlib/format.ml[927,31107+4]..[927,31107+5])
                Ppat_any
              expression (stdlib/format.ml[927,31107+9]..[927,31107+11])
                Pexp_constant PConst_string("",(stdlib/format.ml[927,31107+10]..[927,31107+10]),None)
          ]
    ]
  structure_item (stdlib/format.ml[928,31119+0]..[930,31195+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[928,31119+4]..[928,31119+29])
          Ppat_var "default_pp_mark_close_tag" (stdlib/format.ml[928,31119+4]..[928,31119+29])
        expression (stdlib/format.ml[928,31119+32]..[930,31195+11])
          Pexp_function
          [
            <case>
              pattern (stdlib/format.ml[929,31160+4]..[929,31160+16])
                Ppat_construct "String_tag" (stdlib/format.ml[929,31160+4]..[929,31160+14])
                Some
                  []
                  pattern (stdlib/format.ml[929,31160+15]..[929,31160+16])
                    Ppat_var "s" (stdlib/format.ml[929,31160+15]..[929,31160+16])
              expression (stdlib/format.ml[929,31160+20]..[929,31160+34])
                Pexp_apply
                expression (stdlib/format.ml[929,31160+25]..[929,31160+26])
                  Pexp_ident "^" (stdlib/format.ml[929,31160+25]..[929,31160+26])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[929,31160+20]..[929,31160+24])
                      Pexp_constant PConst_string("</",(stdlib/format.ml[929,31160+21]..[929,31160+23]),None)
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[929,31160+27]..[929,31160+34])
                      Pexp_apply
                      expression (stdlib/format.ml[929,31160+29]..[929,31160+30])
                        Pexp_ident "^" (stdlib/format.ml[929,31160+29]..[929,31160+30])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[929,31160+27]..[929,31160+28])
                            Pexp_ident "s" (stdlib/format.ml[929,31160+27]..[929,31160+28])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[929,31160+31]..[929,31160+34])
                            Pexp_constant PConst_string(">",(stdlib/format.ml[929,31160+32]..[929,31160+33]),None)
                      ]
                ]
            <case>
              pattern (stdlib/format.ml[930,31195+4]..[930,31195+5])
                Ppat_any
              expression (stdlib/format.ml[930,31195+9]..[930,31195+11])
                Pexp_constant PConst_string("",(stdlib/format.ml[930,31195+10]..[930,31195+10]),None)
          ]
    ]
  structure_item (stdlib/format.ml[932,31208+0]..[932,31208+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[932,31208+4]..[932,31208+29])
          Ppat_var "default_pp_print_open_tag" (stdlib/format.ml[932,31208+4]..[932,31208+29])
        expression (stdlib/format.ml[932,31208+32]..[932,31208+38])
          Pexp_ident "ignore" (stdlib/format.ml[932,31208+32]..[932,31208+38])
    ]
  structure_item (stdlib/format.ml[933,31247+0]..[933,31247+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[933,31247+4]..[933,31247+30])
          Ppat_var "default_pp_print_close_tag" (stdlib/format.ml[933,31247+4]..[933,31247+30])
        expression (stdlib/format.ml[933,31247+33]..[933,31247+39])
          Pexp_ident "ignore" (stdlib/format.ml[933,31247+33]..[933,31247+39])
    ]
  structure_item (stdlib/format.ml[937,31396+0]..[977,32755+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[937,31396+4]..[937,31396+21])
          Ppat_var "pp_make_formatter" (stdlib/format.ml[937,31396+4]..[937,31396+21])
        expression (stdlib/format.ml[937,31396+22]..[977,32755+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[937,31396+22]..[937,31396+23])
            Ppat_var "f" (stdlib/format.ml[937,31396+22]..[937,31396+23])
          expression (stdlib/format.ml[937,31396+24]..[977,32755+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[937,31396+24]..[937,31396+25])
              Ppat_var "g" (stdlib/format.ml[937,31396+24]..[937,31396+25])
            expression (stdlib/format.ml[937,31396+26]..[977,32755+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[937,31396+26]..[937,31396+27])
                Ppat_var "h" (stdlib/format.ml[937,31396+26]..[937,31396+27])
              expression (stdlib/format.ml[937,31396+28]..[977,32755+3]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (stdlib/format.ml[937,31396+28]..[937,31396+29])
                  Ppat_var "i" (stdlib/format.ml[937,31396+28]..[937,31396+29])
                expression (stdlib/format.ml[937,31396+30]..[977,32755+3]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (stdlib/format.ml[937,31396+30]..[937,31396+31])
                    Ppat_var "j" (stdlib/format.ml[937,31396+30]..[937,31396+31])
                  expression (stdlib/format.ml[939,31495+2]..[977,32755+3])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/format.ml[939,31495+6]..[939,31495+14])
                          Ppat_var "pp_queue" (stdlib/format.ml[939,31495+6]..[939,31495+14])
                        expression (stdlib/format.ml[939,31495+17]..[939,31495+32])
                          Pexp_apply
                          expression (stdlib/format.ml[939,31495+17]..[939,31495+29])
                            Pexp_ident "Queue.create" (stdlib/format.ml[939,31495+17]..[939,31495+29])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[939,31495+30]..[939,31495+32])
                                Pexp_construct "()" (stdlib/format.ml[939,31495+30]..[939,31495+32])
                                None
                          ]
                    ]
                    expression (stdlib/format.ml[940,31531+2]..[977,32755+3])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (stdlib/format.ml[940,31531+6]..[940,31531+13])
                            Ppat_var "sys_tok" (stdlib/format.ml[940,31531+6]..[940,31531+13])
                          expression (stdlib/format.ml[941,31547+4]..[941,31547+72])
                            Pexp_record
                            [
                              "size" (stdlib/format.ml[941,31547+6]..[941,31547+10])
                                expression (stdlib/format.ml[941,31547+13]..[941,31547+25])
                                  Pexp_ident "Size.unknown" (stdlib/format.ml[941,31547+13]..[941,31547+25])
                              "token" (stdlib/format.ml[941,31547+27]..[941,31547+32])
                                expression (stdlib/format.ml[941,31547+35]..[941,31547+58])
                                  Pexp_construct "Pp_begin" (stdlib/format.ml[941,31547+35]..[941,31547+43])
                                  Some
                                    expression (stdlib/format.ml[941,31547+44]..[941,31547+58])
                                      Pexp_tuple
                                      [
                                        expression (stdlib/format.ml[941,31547+45]..[941,31547+46])
                                          Pexp_constant PConst_int (0,None)
                                        expression (stdlib/format.ml[941,31547+48]..[941,31547+57])
                                          Pexp_construct "Pp_hovbox" (stdlib/format.ml[941,31547+48]..[941,31547+57])
                                          None
                                      ]
                              "length" (stdlib/format.ml[941,31547+60]..[941,31547+66])
                                expression (stdlib/format.ml[941,31547+69]..[941,31547+70])
                                  Pexp_constant PConst_int (0,None)
                            ]
                            None
                      ]
                      expression (stdlib/format.ml[942,31623+2]..[977,32755+3])
                        Pexp_sequence
                        expression (stdlib/format.ml[942,31623+2]..[942,31623+28])
                          Pexp_apply
                          expression (stdlib/format.ml[942,31623+2]..[942,31623+11])
                            Pexp_ident "Queue.add" (stdlib/format.ml[942,31623+2]..[942,31623+11])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[942,31623+12]..[942,31623+19])
                                Pexp_ident "sys_tok" (stdlib/format.ml[942,31623+12]..[942,31623+19])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[942,31623+20]..[942,31623+28])
                                Pexp_ident "pp_queue" (stdlib/format.ml[942,31623+20]..[942,31623+28])
                          ]
                        expression (stdlib/format.ml[943,31653+2]..[977,32755+3])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (stdlib/format.ml[943,31653+6]..[943,31653+16])
                                Ppat_var "scan_stack" (stdlib/format.ml[943,31653+6]..[943,31653+16])
                              expression (stdlib/format.ml[943,31653+19]..[943,31653+34])
                                Pexp_apply
                                expression (stdlib/format.ml[943,31653+19]..[943,31653+31])
                                  Pexp_ident "Stack.create" (stdlib/format.ml[943,31653+19]..[943,31653+31])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[943,31653+32]..[943,31653+34])
                                      Pexp_construct "()" (stdlib/format.ml[943,31653+32]..[943,31653+34])
                                      None
                                ]
                          ]
                          expression (stdlib/format.ml[944,31691+2]..[977,32755+3])
                            Pexp_sequence
                            expression (stdlib/format.ml[944,31691+2]..[944,31691+34])
                              Pexp_apply
                              expression (stdlib/format.ml[944,31691+2]..[944,31691+23])
                                Pexp_ident "initialize_scan_stack" (stdlib/format.ml[944,31691+2]..[944,31691+23])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[944,31691+24]..[944,31691+34])
                                    Pexp_ident "scan_stack" (stdlib/format.ml[944,31691+24]..[944,31691+34])
                              ]
                            expression (stdlib/format.ml[945,31727+2]..[977,32755+3])
                              Pexp_sequence
                              expression (stdlib/format.ml[945,31727+2]..[945,31727+64])
                                Pexp_apply
                                expression (stdlib/format.ml[945,31727+2]..[945,31727+12])
                                  Pexp_ident "Stack.push" (stdlib/format.ml[945,31727+2]..[945,31727+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[945,31727+13]..[945,31727+53])
                                      Pexp_record
                                      [
                                        "left_total" (stdlib/format.ml[945,31727+15]..[945,31727+25])
                                          expression (stdlib/format.ml[945,31727+28]..[945,31727+29])
                                            Pexp_constant PConst_int (1,None)
                                        "queue_elem" (stdlib/format.ml[945,31727+31]..[945,31727+41])
                                          expression (stdlib/format.ml[945,31727+44]..[945,31727+51])
                                            Pexp_ident "sys_tok" (stdlib/format.ml[945,31727+44]..[945,31727+51])
                                      ]
                                      None
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[945,31727+54]..[945,31727+64])
                                      Pexp_ident "scan_stack" (stdlib/format.ml[945,31727+54]..[945,31727+64])
                                ]
                              expression (stdlib/format.ml[946,31793+2]..[977,32755+3])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (stdlib/format.ml[946,31793+6]..[946,31793+15])
                                      Ppat_var "pp_margin" (stdlib/format.ml[946,31793+6]..[946,31793+15])
                                    expression (stdlib/format.ml[946,31793+18]..[946,31793+20])
                                      Pexp_constant PConst_int (78,None)
                                  <def>
                                    pattern (stdlib/format.ml[947,31814+6]..[947,31814+23])
                                      Ppat_var "pp_min_space_left" (stdlib/format.ml[947,31814+6]..[947,31814+23])
                                    expression (stdlib/format.ml[947,31814+26]..[947,31814+28])
                                      Pexp_constant PConst_int (10,None)
                                ]
                                expression (stdlib/format.ml[948,31846+2]..[977,32755+3])
                                  Pexp_record
                                  [
                                    "pp_scan_stack" (stdlib/format.ml[949,31850+4]..[949,31850+17])
                                      expression (stdlib/format.ml[949,31850+20]..[949,31850+30])
                                        Pexp_ident "scan_stack" (stdlib/format.ml[949,31850+20]..[949,31850+30])
                                    "pp_format_stack" (stdlib/format.ml[950,31882+4]..[950,31882+19])
                                      expression (stdlib/format.ml[950,31882+22]..[950,31882+37])
                                        Pexp_apply
                                        expression (stdlib/format.ml[950,31882+22]..[950,31882+34])
                                          Pexp_ident "Stack.create" (stdlib/format.ml[950,31882+22]..[950,31882+34])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[950,31882+35]..[950,31882+37])
                                              Pexp_construct "()" (stdlib/format.ml[950,31882+35]..[950,31882+37])
                                              None
                                        ]
                                    "pp_tbox_stack" (stdlib/format.ml[951,31921+4]..[951,31921+17])
                                      expression (stdlib/format.ml[951,31921+20]..[951,31921+35])
                                        Pexp_apply
                                        expression (stdlib/format.ml[951,31921+20]..[951,31921+32])
                                          Pexp_ident "Stack.create" (stdlib/format.ml[951,31921+20]..[951,31921+32])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[951,31921+33]..[951,31921+35])
                                              Pexp_construct "()" (stdlib/format.ml[951,31921+33]..[951,31921+35])
                                              None
                                        ]
                                    "pp_tag_stack" (stdlib/format.ml[952,31958+4]..[952,31958+16])
                                      expression (stdlib/format.ml[952,31958+19]..[952,31958+34])
                                        Pexp_apply
                                        expression (stdlib/format.ml[952,31958+19]..[952,31958+31])
                                          Pexp_ident "Stack.create" (stdlib/format.ml[952,31958+19]..[952,31958+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[952,31958+32]..[952,31958+34])
                                              Pexp_construct "()" (stdlib/format.ml[952,31958+32]..[952,31958+34])
                                              None
                                        ]
                                    "pp_mark_stack" (stdlib/format.ml[953,31994+4]..[953,31994+17])
                                      expression (stdlib/format.ml[953,31994+20]..[953,31994+35])
                                        Pexp_apply
                                        expression (stdlib/format.ml[953,31994+20]..[953,31994+32])
                                          Pexp_ident "Stack.create" (stdlib/format.ml[953,31994+20]..[953,31994+32])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[953,31994+33]..[953,31994+35])
                                              Pexp_construct "()" (stdlib/format.ml[953,31994+33]..[953,31994+35])
                                              None
                                        ]
                                    "pp_margin" (stdlib/format.ml[954,32031+4]..[954,32031+13])
                                      expression (stdlib/format.ml[954,32031+16]..[954,32031+25])
                                        Pexp_ident "pp_margin" (stdlib/format.ml[954,32031+16]..[954,32031+25])
                                    "pp_min_space_left" (stdlib/format.ml[955,32058+4]..[955,32058+21])
                                      expression (stdlib/format.ml[955,32058+24]..[955,32058+41])
                                        Pexp_ident "pp_min_space_left" (stdlib/format.ml[955,32058+24]..[955,32058+41])
                                    "pp_max_indent" (stdlib/format.ml[956,32101+4]..[956,32101+17])
                                      expression (stdlib/format.ml[956,32101+20]..[956,32101+49])
                                        Pexp_apply
                                        expression (stdlib/format.ml[956,32101+30]..[956,32101+31])
                                          Pexp_ident "-" (stdlib/format.ml[956,32101+30]..[956,32101+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[956,32101+20]..[956,32101+29])
                                              Pexp_ident "pp_margin" (stdlib/format.ml[956,32101+20]..[956,32101+29])
                                          <arg>
                                          Nolabel
                                            expression (stdlib/format.ml[956,32101+32]..[956,32101+49])
                                              Pexp_ident "pp_min_space_left" (stdlib/format.ml[956,32101+32]..[956,32101+49])
                                        ]
                                    "pp_space_left" (stdlib/format.ml[957,32152+4]..[957,32152+17])
                                      expression (stdlib/format.ml[957,32152+20]..[957,32152+29])
                                        Pexp_ident "pp_margin" (stdlib/format.ml[957,32152+20]..[957,32152+29])
                                    "pp_current_indent" (stdlib/format.ml[958,32183+4]..[958,32183+21])
                                      expression (stdlib/format.ml[958,32183+24]..[958,32183+25])
                                        Pexp_constant PConst_int (0,None)
                                    "pp_is_new_line" (stdlib/format.ml[959,32210+4]..[959,32210+18])
                                      expression (stdlib/format.ml[959,32210+21]..[959,32210+25])
                                        Pexp_construct "true" (stdlib/format.ml[959,32210+21]..[959,32210+25])
                                        None
                                    "pp_left_total" (stdlib/format.ml[960,32237+4]..[960,32237+17])
                                      expression (stdlib/format.ml[960,32237+20]..[960,32237+21])
                                        Pexp_constant PConst_int (1,None)
                                    "pp_right_total" (stdlib/format.ml[961,32260+4]..[961,32260+18])
                                      expression (stdlib/format.ml[961,32260+21]..[961,32260+22])
                                        Pexp_constant PConst_int (1,None)
                                    "pp_curr_depth" (stdlib/format.ml[962,32284+4]..[962,32284+17])
                                      expression (stdlib/format.ml[962,32284+20]..[962,32284+21])
                                        Pexp_constant PConst_int (1,None)
                                    "pp_max_boxes" (stdlib/format.ml[963,32307+4]..[963,32307+16])
                                      expression (stdlib/format.ml[963,32307+19]..[963,32307+26])
                                        Pexp_ident "max_int" (stdlib/format.ml[963,32307+19]..[963,32307+26])
                                    "pp_ellipsis" (stdlib/format.ml[964,32335+4]..[964,32335+15])
                                      expression (stdlib/format.ml[964,32335+18]..[964,32335+21])
                                        Pexp_constant PConst_string(".",(stdlib/format.ml[964,32335+19]..[964,32335+20]),None)
                                    "pp_out_string" (stdlib/format.ml[965,32358+4]..[965,32358+17])
                                      expression (stdlib/format.ml[965,32358+20]..[965,32358+21])
                                        Pexp_ident "f" (stdlib/format.ml[965,32358+20]..[965,32358+21])
                                    "pp_out_flush" (stdlib/format.ml[966,32381+4]..[966,32381+16])
                                      expression (stdlib/format.ml[966,32381+19]..[966,32381+20])
                                        Pexp_ident "g" (stdlib/format.ml[966,32381+19]..[966,32381+20])
                                    "pp_out_newline" (stdlib/format.ml[967,32403+4]..[967,32403+18])
                                      expression (stdlib/format.ml[967,32403+21]..[967,32403+22])
                                        Pexp_ident "h" (stdlib/format.ml[967,32403+21]..[967,32403+22])
                                    "pp_out_spaces" (stdlib/format.ml[968,32427+4]..[968,32427+17])
                                      expression (stdlib/format.ml[968,32427+20]..[968,32427+21])
                                        Pexp_ident "i" (stdlib/format.ml[968,32427+20]..[968,32427+21])
                                    "pp_out_indent" (stdlib/format.ml[969,32450+4]..[969,32450+17])
                                      expression (stdlib/format.ml[969,32450+20]..[969,32450+21])
                                        Pexp_ident "j" (stdlib/format.ml[969,32450+20]..[969,32450+21])
                                    "pp_print_tags" (stdlib/format.ml[970,32473+4]..[970,32473+17])
                                      expression (stdlib/format.ml[970,32473+20]..[970,32473+25])
                                        Pexp_construct "false" (stdlib/format.ml[970,32473+20]..[970,32473+25])
                                        None
                                    "pp_mark_tags" (stdlib/format.ml[971,32500+4]..[971,32500+16])
                                      expression (stdlib/format.ml[971,32500+19]..[971,32500+24])
                                        Pexp_construct "false" (stdlib/format.ml[971,32500+19]..[971,32500+24])
                                        None
                                    "pp_mark_open_tag" (stdlib/format.ml[972,32526+4]..[972,32526+20])
                                      expression (stdlib/format.ml[972,32526+23]..[972,32526+47])
                                        Pexp_ident "default_pp_mark_open_tag" (stdlib/format.ml[972,32526+23]..[972,32526+47])
                                    "pp_mark_close_tag" (stdlib/format.ml[973,32575+4]..[973,32575+21])
                                      expression (stdlib/format.ml[973,32575+24]..[973,32575+49])
                                        Pexp_ident "default_pp_mark_close_tag" (stdlib/format.ml[973,32575+24]..[973,32575+49])
                                    "pp_print_open_tag" (stdlib/format.ml[974,32626+4]..[974,32626+21])
                                      expression (stdlib/format.ml[974,32626+24]..[974,32626+49])
                                        Pexp_ident "default_pp_print_open_tag" (stdlib/format.ml[974,32626+24]..[974,32626+49])
                                    "pp_print_close_tag" (stdlib/format.ml[975,32677+4]..[975,32677+22])
                                      expression (stdlib/format.ml[975,32677+25]..[975,32677+51])
                                        Pexp_ident "default_pp_print_close_tag" (stdlib/format.ml[975,32677+25]..[975,32677+51])
                                    "pp_queue" (stdlib/format.ml[976,32730+4]..[976,32730+12])
                                      expression (stdlib/format.ml[976,32730+15]..[976,32730+23])
                                        Pexp_ident "pp_queue" (stdlib/format.ml[976,32730+15]..[976,32730+23])
                                  ]
                                  None
    ]
  structure_item (stdlib/format.ml[981,32811+0]..[987,32969+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[981,32811+4]..[981,32811+30])
          Ppat_var "formatter_of_out_functions" (stdlib/format.ml[981,32811+4]..[981,32811+30])
        expression (stdlib/format.ml[981,32811+31]..[987,32969+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[981,32811+31]..[981,32811+39])
            Ppat_var "out_funs" (stdlib/format.ml[981,32811+31]..[981,32811+39])
          expression (stdlib/format.ml[982,32853+2]..[987,32969+23])
            Pexp_apply
            expression (stdlib/format.ml[982,32853+2]..[982,32853+19])
              Pexp_ident "pp_make_formatter" (stdlib/format.ml[982,32853+2]..[982,32853+19])
            [
              <arg>
              Nolabel
                expression (stdlib/format.ml[983,32873+4]..[983,32873+23])
                  Pexp_field
                  expression (stdlib/format.ml[983,32873+4]..[983,32873+12])
                    Pexp_ident "out_funs" (stdlib/format.ml[983,32873+4]..[983,32873+12])
                  "out_string" (stdlib/format.ml[983,32873+13]..[983,32873+23])
              <arg>
              Nolabel
                expression (stdlib/format.ml[984,32897+4]..[984,32897+22])
                  Pexp_field
                  expression (stdlib/format.ml[984,32897+4]..[984,32897+12])
                    Pexp_ident "out_funs" (stdlib/format.ml[984,32897+4]..[984,32897+12])
                  "out_flush" (stdlib/format.ml[984,32897+13]..[984,32897+22])
              <arg>
              Nolabel
                expression (stdlib/format.ml[985,32920+4]..[985,32920+24])
                  Pexp_field
                  expression (stdlib/format.ml[985,32920+4]..[985,32920+12])
                    Pexp_ident "out_funs" (stdlib/format.ml[985,32920+4]..[985,32920+12])
                  "out_newline" (stdlib/format.ml[985,32920+13]..[985,32920+24])
              <arg>
              Nolabel
                expression (stdlib/format.ml[986,32945+4]..[986,32945+23])
                  Pexp_field
                  expression (stdlib/format.ml[986,32945+4]..[986,32945+12])
                    Pexp_ident "out_funs" (stdlib/format.ml[986,32945+4]..[986,32945+12])
                  "out_spaces" (stdlib/format.ml[986,32945+13]..[986,32945+23])
              <arg>
              Nolabel
                expression (stdlib/format.ml[987,32969+4]..[987,32969+23])
                  Pexp_field
                  expression (stdlib/format.ml[987,32969+4]..[987,32969+12])
                    Pexp_ident "out_funs" (stdlib/format.ml[987,32969+4]..[987,32969+12])
                  "out_indent" (stdlib/format.ml[987,32969+13]..[987,32969+23])
            ]
    ]
  structure_item (stdlib/format.ml[992,33089+0]..[997,33321+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[992,33089+4]..[992,33089+18])
          Ppat_var "make_formatter" (stdlib/format.ml[992,33089+4]..[992,33089+18])
        expression (stdlib/format.ml[992,33089+19]..[997,33321+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[992,33089+19]..[992,33089+25])
            Ppat_var "output" (stdlib/format.ml[992,33089+19]..[992,33089+25])
          expression (stdlib/format.ml[992,33089+26]..[997,33321+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[992,33089+26]..[992,33089+31])
              Ppat_var "flush" (stdlib/format.ml[992,33089+26]..[992,33089+31])
            expression (stdlib/format.ml[993,33123+2]..[997,33321+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (stdlib/format.ml[993,33123+6]..[993,33123+9])
                    Ppat_var "ppf" (stdlib/format.ml[993,33123+6]..[993,33123+9])
                  expression (stdlib/format.ml[993,33123+12]..[993,33123+63])
                    Pexp_apply
                    expression (stdlib/format.ml[993,33123+12]..[993,33123+29])
                      Pexp_ident "pp_make_formatter" (stdlib/format.ml[993,33123+12]..[993,33123+29])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[993,33123+30]..[993,33123+36])
                          Pexp_ident "output" (stdlib/format.ml[993,33123+30]..[993,33123+36])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[993,33123+37]..[993,33123+42])
                          Pexp_ident "flush" (stdlib/format.ml[993,33123+37]..[993,33123+42])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[993,33123+43]..[993,33123+49])
                          Pexp_ident "ignore" (stdlib/format.ml[993,33123+43]..[993,33123+49])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[993,33123+50]..[993,33123+56])
                          Pexp_ident "ignore" (stdlib/format.ml[993,33123+50]..[993,33123+56])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[993,33123+57]..[993,33123+63])
                          Pexp_ident "ignore" (stdlib/format.ml[993,33123+57]..[993,33123+63])
                    ]
              ]
              expression (stdlib/format.ml[994,33190+2]..[997,33321+5])
                Pexp_sequence
                expression (stdlib/format.ml[994,33190+2]..[994,33190+43])
                  Pexp_setfield
                  expression (stdlib/format.ml[994,33190+2]..[994,33190+5])
                    Pexp_ident "ppf" (stdlib/format.ml[994,33190+2]..[994,33190+5])
                  "pp_out_newline" (stdlib/format.ml[994,33190+6]..[994,33190+20])
                  expression (stdlib/format.ml[994,33190+24]..[994,33190+43])
                    Pexp_apply
                    expression (stdlib/format.ml[994,33190+24]..[994,33190+39])
                      Pexp_ident "display_newline" (stdlib/format.ml[994,33190+24]..[994,33190+39])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[994,33190+40]..[994,33190+43])
                          Pexp_ident "ppf" (stdlib/format.ml[994,33190+40]..[994,33190+43])
                    ]
                expression (stdlib/format.ml[995,33235+2]..[997,33321+5])
                  Pexp_sequence
                  expression (stdlib/format.ml[995,33235+2]..[995,33235+41])
                    Pexp_setfield
                    expression (stdlib/format.ml[995,33235+2]..[995,33235+5])
                      Pexp_ident "ppf" (stdlib/format.ml[995,33235+2]..[995,33235+5])
                    "pp_out_spaces" (stdlib/format.ml[995,33235+6]..[995,33235+19])
                    expression (stdlib/format.ml[995,33235+23]..[995,33235+41])
                      Pexp_apply
                      expression (stdlib/format.ml[995,33235+23]..[995,33235+37])
                        Pexp_ident "display_blanks" (stdlib/format.ml[995,33235+23]..[995,33235+37])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[995,33235+38]..[995,33235+41])
                            Pexp_ident "ppf" (stdlib/format.ml[995,33235+38]..[995,33235+41])
                      ]
                  expression (stdlib/format.ml[996,33278+2]..[997,33321+5])
                    Pexp_sequence
                    expression (stdlib/format.ml[996,33278+2]..[996,33278+41])
                      Pexp_setfield
                      expression (stdlib/format.ml[996,33278+2]..[996,33278+5])
                        Pexp_ident "ppf" (stdlib/format.ml[996,33278+2]..[996,33278+5])
                      "pp_out_indent" (stdlib/format.ml[996,33278+6]..[996,33278+19])
                      expression (stdlib/format.ml[996,33278+23]..[996,33278+41])
                        Pexp_apply
                        expression (stdlib/format.ml[996,33278+23]..[996,33278+37])
                          Pexp_ident "display_indent" (stdlib/format.ml[996,33278+23]..[996,33278+37])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[996,33278+38]..[996,33278+41])
                              Pexp_ident "ppf" (stdlib/format.ml[996,33278+38]..[996,33278+41])
                        ]
                    expression (stdlib/format.ml[997,33321+2]..[997,33321+5])
                      Pexp_ident "ppf" (stdlib/format.ml[997,33321+2]..[997,33321+5])
    ]
  structure_item (stdlib/format.ml[1001,33402+0]..[1002,33436+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1001,33402+4]..[1001,33402+28])
          Ppat_var "formatter_of_out_channel" (stdlib/format.ml[1001,33402+4]..[1001,33402+28])
        expression (stdlib/format.ml[1001,33402+29]..[1002,33436+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1001,33402+29]..[1001,33402+31])
            Ppat_var "oc" (stdlib/format.ml[1001,33402+29]..[1001,33402+31])
          expression (stdlib/format.ml[1002,33436+2]..[1002,33436+59])
            Pexp_apply
            expression (stdlib/format.ml[1002,33436+2]..[1002,33436+16])
              Pexp_ident "make_formatter" (stdlib/format.ml[1002,33436+2]..[1002,33436+16])
            [
              <arg>
              Nolabel
                expression (stdlib/format.ml[1002,33436+17]..[1002,33436+38])
                  Pexp_apply
                  expression (stdlib/format.ml[1002,33436+18]..[1002,33436+34])
                    Pexp_ident "output_substring" (stdlib/format.ml[1002,33436+18]..[1002,33436+34])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[1002,33436+35]..[1002,33436+37])
                        Pexp_ident "oc" (stdlib/format.ml[1002,33436+35]..[1002,33436+37])
                  ]
              <arg>
              Nolabel
                expression (stdlib/format.ml[1002,33436+39]..[1002,33436+59])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (stdlib/format.ml[1002,33436+44]..[1002,33436+46])
                    Ppat_construct "()" (stdlib/format.ml[1002,33436+44]..[1002,33436+46])
                    None
                  expression (stdlib/format.ml[1002,33436+50]..[1002,33436+58])
                    Pexp_apply
                    expression (stdlib/format.ml[1002,33436+50]..[1002,33436+55])
                      Pexp_ident "flush" (stdlib/format.ml[1002,33436+50]..[1002,33436+55])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1002,33436+56]..[1002,33436+58])
                          Pexp_ident "oc" (stdlib/format.ml[1002,33436+56]..[1002,33436+58])
                    ]
            ]
    ]
  structure_item (stdlib/format.ml[1006,33558+0]..[1007,33586+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1006,33558+4]..[1006,33558+23])
          Ppat_var "formatter_of_buffer" (stdlib/format.ml[1006,33558+4]..[1006,33558+23])
        expression (stdlib/format.ml[1006,33558+24]..[1007,33586+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1006,33558+24]..[1006,33558+25])
            Ppat_var "b" (stdlib/format.ml[1006,33558+24]..[1006,33558+25])
          expression (stdlib/format.ml[1007,33586+2]..[1007,33586+48])
            Pexp_apply
            expression (stdlib/format.ml[1007,33586+2]..[1007,33586+16])
              Pexp_ident "make_formatter" (stdlib/format.ml[1007,33586+2]..[1007,33586+16])
            [
              <arg>
              Nolabel
                expression (stdlib/format.ml[1007,33586+17]..[1007,33586+41])
                  Pexp_apply
                  expression (stdlib/format.ml[1007,33586+18]..[1007,33586+38])
                    Pexp_ident "Buffer.add_substring" (stdlib/format.ml[1007,33586+18]..[1007,33586+38])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[1007,33586+39]..[1007,33586+40])
                        Pexp_ident "b" (stdlib/format.ml[1007,33586+39]..[1007,33586+40])
                  ]
              <arg>
              Nolabel
                expression (stdlib/format.ml[1007,33586+42]..[1007,33586+48])
                  Pexp_ident "ignore" (stdlib/format.ml[1007,33586+42]..[1007,33586+48])
            ]
    ]
  structure_item (stdlib/format.ml[1013,33740+0]..[1013,33740+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1013,33740+4]..[1013,33740+18])
          Ppat_var "pp_buffer_size" (stdlib/format.ml[1013,33740+4]..[1013,33740+18])
        expression (stdlib/format.ml[1013,33740+21]..[1013,33740+24])
          Pexp_constant PConst_int (512,None)
    ]
  structure_item (stdlib/format.ml[1014,33765+0]..[1014,33765+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1014,33765+4]..[1014,33765+18])
          Ppat_var "pp_make_buffer" (stdlib/format.ml[1014,33765+4]..[1014,33765+18])
        expression (stdlib/format.ml[1014,33765+19]..[1014,33765+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1014,33765+19]..[1014,33765+21])
            Ppat_construct "()" (stdlib/format.ml[1014,33765+19]..[1014,33765+21])
            None
          expression (stdlib/format.ml[1014,33765+24]..[1014,33765+52])
            Pexp_apply
            expression (stdlib/format.ml[1014,33765+24]..[1014,33765+37])
              Pexp_ident "Buffer.create" (stdlib/format.ml[1014,33765+24]..[1014,33765+37])
            [
              <arg>
              Nolabel
                expression (stdlib/format.ml[1014,33765+38]..[1014,33765+52])
                  Pexp_ident "pp_buffer_size" (stdlib/format.ml[1014,33765+38]..[1014,33765+52])
            ]
    ]
  structure_item (stdlib/format.ml[1017,33855+0]..[1017,33855+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1017,33855+4]..[1017,33855+10])
          Ppat_var "stdbuf" (stdlib/format.ml[1017,33855+4]..[1017,33855+10])
        expression (stdlib/format.ml[1017,33855+13]..[1017,33855+30])
          Pexp_apply
          expression (stdlib/format.ml[1017,33855+13]..[1017,33855+27])
            Pexp_ident "pp_make_buffer" (stdlib/format.ml[1017,33855+13]..[1017,33855+27])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1017,33855+28]..[1017,33855+30])
                Pexp_construct "()" (stdlib/format.ml[1017,33855+28]..[1017,33855+30])
                None
          ]
    ]
  structure_item (stdlib/format.ml[1021,33998+0]..[1023,34116+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1021,33998+4]..[1021,33998+17])
          Ppat_var "std_formatter" (stdlib/format.ml[1021,33998+4]..[1021,33998+17])
        expression (stdlib/format.ml[1021,33998+20]..[1021,33998+58])
          Pexp_apply
          expression (stdlib/format.ml[1021,33998+20]..[1021,33998+44])
            Pexp_ident "formatter_of_out_channel" (stdlib/format.ml[1021,33998+20]..[1021,33998+44])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1021,33998+45]..[1021,33998+58])
                Pexp_ident "Stdlib.stdout" (stdlib/format.ml[1021,33998+45]..[1021,33998+58])
          ]
      <def>
        pattern (stdlib/format.ml[1022,34057+4]..[1022,34057+17])
          Ppat_var "err_formatter" (stdlib/format.ml[1022,34057+4]..[1022,34057+17])
        expression (stdlib/format.ml[1022,34057+20]..[1022,34057+58])
          Pexp_apply
          expression (stdlib/format.ml[1022,34057+20]..[1022,34057+44])
            Pexp_ident "formatter_of_out_channel" (stdlib/format.ml[1022,34057+20]..[1022,34057+44])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1022,34057+45]..[1022,34057+58])
                Pexp_ident "Stdlib.stderr" (stdlib/format.ml[1022,34057+45]..[1022,34057+58])
          ]
      <def>
        pattern (stdlib/format.ml[1023,34116+4]..[1023,34116+17])
          Ppat_var "str_formatter" (stdlib/format.ml[1023,34116+4]..[1023,34116+17])
        expression (stdlib/format.ml[1023,34116+20]..[1023,34116+46])
          Pexp_apply
          expression (stdlib/format.ml[1023,34116+20]..[1023,34116+39])
            Pexp_ident "formatter_of_buffer" (stdlib/format.ml[1023,34116+20]..[1023,34116+39])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1023,34116+40]..[1023,34116+46])
                Pexp_ident "stdbuf" (stdlib/format.ml[1023,34116+40]..[1023,34116+46])
          ]
    ]
  structure_item (stdlib/format.ml[1030,34395+0]..[1034,34513+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1030,34395+4]..[1030,34395+26])
          Ppat_var "flush_buffer_formatter" (stdlib/format.ml[1030,34395+4]..[1030,34395+26])
        expression (stdlib/format.ml[1030,34395+27]..[1034,34513+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1030,34395+27]..[1030,34395+30])
            Ppat_var "buf" (stdlib/format.ml[1030,34395+27]..[1030,34395+30])
          expression (stdlib/format.ml[1030,34395+31]..[1034,34513+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1030,34395+31]..[1030,34395+34])
              Ppat_var "ppf" (stdlib/format.ml[1030,34395+31]..[1030,34395+34])
            expression (stdlib/format.ml[1031,34432+2]..[1034,34513+3])
              Pexp_sequence
              expression (stdlib/format.ml[1031,34432+2]..[1031,34432+26])
                Pexp_apply
                expression (stdlib/format.ml[1031,34432+2]..[1031,34432+16])
                  Pexp_ident "pp_flush_queue" (stdlib/format.ml[1031,34432+2]..[1031,34432+16])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[1031,34432+17]..[1031,34432+20])
                      Pexp_ident "ppf" (stdlib/format.ml[1031,34432+17]..[1031,34432+20])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[1031,34432+21]..[1031,34432+26])
                      Pexp_construct "false" (stdlib/format.ml[1031,34432+21]..[1031,34432+26])
                      None
                ]
              expression (stdlib/format.ml[1032,34460+2]..[1034,34513+3])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/format.ml[1032,34460+6]..[1032,34460+7])
                      Ppat_var "s" (stdlib/format.ml[1032,34460+6]..[1032,34460+7])
                    expression (stdlib/format.ml[1032,34460+10]..[1032,34460+29])
                      Pexp_apply
                      expression (stdlib/format.ml[1032,34460+10]..[1032,34460+25])
                        Pexp_ident "Buffer.contents" (stdlib/format.ml[1032,34460+10]..[1032,34460+25])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1032,34460+26]..[1032,34460+29])
                            Pexp_ident "buf" (stdlib/format.ml[1032,34460+26]..[1032,34460+29])
                      ]
                ]
                expression (stdlib/format.ml[1033,34493+2]..[1034,34513+3])
                  Pexp_sequence
                  expression (stdlib/format.ml[1033,34493+2]..[1033,34493+18])
                    Pexp_apply
                    expression (stdlib/format.ml[1033,34493+2]..[1033,34493+14])
                      Pexp_ident "Buffer.reset" (stdlib/format.ml[1033,34493+2]..[1033,34493+14])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1033,34493+15]..[1033,34493+18])
                          Pexp_ident "buf" (stdlib/format.ml[1033,34493+15]..[1033,34493+18])
                    ]
                  expression (stdlib/format.ml[1034,34513+2]..[1034,34513+3])
                    Pexp_ident "s" (stdlib/format.ml[1034,34513+2]..[1034,34513+3])
    ]
  structure_item (stdlib/format.ml[1038,34581+0]..[1038,34581+72])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1038,34581+4]..[1038,34581+23])
          Ppat_var "flush_str_formatter" (stdlib/format.ml[1038,34581+4]..[1038,34581+23])
        expression (stdlib/format.ml[1038,34581+24]..[1038,34581+72]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1038,34581+24]..[1038,34581+26])
            Ppat_construct "()" (stdlib/format.ml[1038,34581+24]..[1038,34581+26])
            None
          expression (stdlib/format.ml[1038,34581+29]..[1038,34581+72])
            Pexp_apply
            expression (stdlib/format.ml[1038,34581+29]..[1038,34581+51])
              Pexp_ident "flush_buffer_formatter" (stdlib/format.ml[1038,34581+29]..[1038,34581+51])
            [
              <arg>
              Nolabel
                expression (stdlib/format.ml[1038,34581+52]..[1038,34581+58])
                  Pexp_ident "stdbuf" (stdlib/format.ml[1038,34581+52]..[1038,34581+58])
              <arg>
              Nolabel
                expression (stdlib/format.ml[1038,34581+59]..[1038,34581+72])
                  Pexp_ident "str_formatter" (stdlib/format.ml[1038,34581+59]..[1038,34581+72])
            ]
    ]
  structure_item (stdlib/format.ml[1053,35063+0]..[1058,35180+24])
    Pstr_type Rec
    [
      type_declaration "symbolic_output_item" (stdlib/format.ml[1053,35063+5]..[1053,35063+25]) (stdlib/format.ml[1053,35063+0]..[1058,35180+24])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (stdlib/format.ml[1054,35091+2]..[1054,35091+16])
                "Output_flush" (stdlib/format.ml[1054,35091+4]..[1054,35091+16])
                []
                None
              (stdlib/format.ml[1055,35108+2]..[1055,35108+18])
                "Output_newline" (stdlib/format.ml[1055,35108+4]..[1055,35108+18])
                []
                None
              (stdlib/format.ml[1056,35127+2]..[1056,35127+27])
                "Output_string" (stdlib/format.ml[1056,35127+4]..[1056,35127+17])
                [
                  core_type (stdlib/format.ml[1056,35127+21]..[1056,35127+27])
                    Ptyp_constr "string" (stdlib/format.ml[1056,35127+21]..[1056,35127+27])
                    []
                ]
                None
              (stdlib/format.ml[1057,35155+2]..[1057,35155+24])
                "Output_spaces" (stdlib/format.ml[1057,35155+4]..[1057,35155+17])
                [
                  core_type (stdlib/format.ml[1057,35155+21]..[1057,35155+24])
                    Ptyp_constr "int" (stdlib/format.ml[1057,35155+21]..[1057,35155+24])
                    []
                ]
                None
              (stdlib/format.ml[1058,35180+2]..[1058,35180+24])
                "Output_indent" (stdlib/format.ml[1058,35180+4]..[1058,35180+17])
                [
                  core_type (stdlib/format.ml[1058,35180+21]..[1058,35180+24])
                    Ptyp_constr "int" (stdlib/format.ml[1058,35180+21]..[1058,35180+24])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (stdlib/format.ml[1060,35206+0]..[1062,35302+1])
    Pstr_type Rec
    [
      type_declaration "symbolic_output_buffer" (stdlib/format.ml[1060,35206+5]..[1060,35206+27]) (stdlib/format.ml[1060,35206+0]..[1062,35302+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (stdlib/format.ml[1061,35238+2]..[1061,35238+63])
                Mutable
                "symbolic_output_contents" (stdlib/format.ml[1061,35238+10]..[1061,35238+34])                core_type (stdlib/format.ml[1061,35238+37]..[1061,35238+62])
                  Ptyp_constr "list" (stdlib/format.ml[1061,35238+58]..[1061,35238+62])
                  [
                    core_type (stdlib/format.ml[1061,35238+37]..[1061,35238+57])
                      Ptyp_constr "symbolic_output_item" (stdlib/format.ml[1061,35238+37]..[1061,35238+57])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (stdlib/format.ml[1064,35305+0]..[1065,35342+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1064,35305+4]..[1064,35305+31])
          Ppat_var "make_symbolic_output_buffer" (stdlib/format.ml[1064,35305+4]..[1064,35305+31])
        expression (stdlib/format.ml[1064,35305+32]..[1065,35342+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1064,35305+32]..[1064,35305+34])
            Ppat_construct "()" (stdlib/format.ml[1064,35305+32]..[1064,35305+34])
            None
          expression (stdlib/format.ml[1065,35342+2]..[1065,35342+35])
            Pexp_record
            [
              "symbolic_output_contents" (stdlib/format.ml[1065,35342+4]..[1065,35342+28])
                expression (stdlib/format.ml[1065,35342+31]..[1065,35342+33])
                  Pexp_construct "[]" (stdlib/format.ml[1065,35342+31]..[1065,35342+33])
                  None
            ]
            None
    ]
  structure_item (stdlib/format.ml[1067,35379+0]..[1068,35418+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1067,35379+4]..[1067,35379+32])
          Ppat_var "clear_symbolic_output_buffer" (stdlib/format.ml[1067,35379+4]..[1067,35379+32])
        expression (stdlib/format.ml[1067,35379+33]..[1068,35418+36]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1067,35379+33]..[1067,35379+36])
            Ppat_var "sob" (stdlib/format.ml[1067,35379+33]..[1067,35379+36])
          expression (stdlib/format.ml[1068,35418+2]..[1068,35418+36])
            Pexp_setfield
            expression (stdlib/format.ml[1068,35418+2]..[1068,35418+5])
              Pexp_ident "sob" (stdlib/format.ml[1068,35418+2]..[1068,35418+5])
            "symbolic_output_contents" (stdlib/format.ml[1068,35418+6]..[1068,35418+30])
            expression (stdlib/format.ml[1068,35418+34]..[1068,35418+36])
              Pexp_construct "[]" (stdlib/format.ml[1068,35418+34]..[1068,35418+36])
              None
    ]
  structure_item (stdlib/format.ml[1070,35456+0]..[1071,35493+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1070,35456+4]..[1070,35456+30])
          Ppat_var "get_symbolic_output_buffer" (stdlib/format.ml[1070,35456+4]..[1070,35456+30])
        expression (stdlib/format.ml[1070,35456+31]..[1071,35493+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1070,35456+31]..[1070,35456+34])
            Ppat_var "sob" (stdlib/format.ml[1070,35456+31]..[1070,35456+34])
          expression (stdlib/format.ml[1071,35493+2]..[1071,35493+39])
            Pexp_apply
            expression (stdlib/format.ml[1071,35493+2]..[1071,35493+10])
              Pexp_ident "List.rev" (stdlib/format.ml[1071,35493+2]..[1071,35493+10])
            [
              <arg>
              Nolabel
                expression (stdlib/format.ml[1071,35493+11]..[1071,35493+39])
                  Pexp_field
                  expression (stdlib/format.ml[1071,35493+11]..[1071,35493+14])
                    Pexp_ident "sob" (stdlib/format.ml[1071,35493+11]..[1071,35493+14])
                  "symbolic_output_contents" (stdlib/format.ml[1071,35493+15]..[1071,35493+39])
            ]
    ]
  structure_item (stdlib/format.ml[1073,35534+0]..[1076,35657+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1073,35534+4]..[1073,35534+32])
          Ppat_var "flush_symbolic_output_buffer" (stdlib/format.ml[1073,35534+4]..[1073,35534+32])
        expression (stdlib/format.ml[1073,35534+33]..[1076,35657+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1073,35534+33]..[1073,35534+36])
            Ppat_var "sob" (stdlib/format.ml[1073,35534+33]..[1073,35534+36])
          expression (stdlib/format.ml[1074,35573+2]..[1076,35657+7])
            Pexp_let Nonrec
            [
              <def>
                pattern (stdlib/format.ml[1074,35573+6]..[1074,35573+11])
                  Ppat_var "items" (stdlib/format.ml[1074,35573+6]..[1074,35573+11])
                expression (stdlib/format.ml[1074,35573+14]..[1074,35573+44])
                  Pexp_apply
                  expression (stdlib/format.ml[1074,35573+14]..[1074,35573+40])
                    Pexp_ident "get_symbolic_output_buffer" (stdlib/format.ml[1074,35573+14]..[1074,35573+40])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[1074,35573+41]..[1074,35573+44])
                        Pexp_ident "sob" (stdlib/format.ml[1074,35573+41]..[1074,35573+44])
                  ]
            ]
            expression (stdlib/format.ml[1075,35621+2]..[1076,35657+7])
              Pexp_sequence
              expression (stdlib/format.ml[1075,35621+2]..[1075,35621+34])
                Pexp_apply
                expression (stdlib/format.ml[1075,35621+2]..[1075,35621+30])
                  Pexp_ident "clear_symbolic_output_buffer" (stdlib/format.ml[1075,35621+2]..[1075,35621+30])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[1075,35621+31]..[1075,35621+34])
                      Pexp_ident "sob" (stdlib/format.ml[1075,35621+31]..[1075,35621+34])
                ]
              expression (stdlib/format.ml[1076,35657+2]..[1076,35657+7])
                Pexp_ident "items" (stdlib/format.ml[1076,35657+2]..[1076,35657+7])
    ]
  structure_item (stdlib/format.ml[1078,35666+0]..[1079,35706+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1078,35666+4]..[1078,35666+28])
          Ppat_var "add_symbolic_output_item" (stdlib/format.ml[1078,35666+4]..[1078,35666+28])
        expression (stdlib/format.ml[1078,35666+29]..[1079,35706+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1078,35666+29]..[1078,35666+32])
            Ppat_var "sob" (stdlib/format.ml[1078,35666+29]..[1078,35666+32])
          expression (stdlib/format.ml[1078,35666+33]..[1079,35706+70]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1078,35666+33]..[1078,35666+37])
              Ppat_var "item" (stdlib/format.ml[1078,35666+33]..[1078,35666+37])
            expression (stdlib/format.ml[1079,35706+2]..[1079,35706+70])
              Pexp_setfield
              expression (stdlib/format.ml[1079,35706+2]..[1079,35706+5])
                Pexp_ident "sob" (stdlib/format.ml[1079,35706+2]..[1079,35706+5])
              "symbolic_output_contents" (stdlib/format.ml[1079,35706+6]..[1079,35706+30])
              expression (stdlib/format.ml[1079,35706+34]..[1079,35706+70])
                Pexp_construct "::" (stdlib/format.ml[1079,35706+39]..[1079,35706+41])
                Some
                  expression (stdlib/format.ml[1079,35706+34]..[1079,35706+70]) ghost
                    Pexp_tuple
                    [
                      expression (stdlib/format.ml[1079,35706+34]..[1079,35706+38])
                        Pexp_ident "item" (stdlib/format.ml[1079,35706+34]..[1079,35706+38])
                      expression (stdlib/format.ml[1079,35706+42]..[1079,35706+70])
                        Pexp_field
                        expression (stdlib/format.ml[1079,35706+42]..[1079,35706+45])
                          Pexp_ident "sob" (stdlib/format.ml[1079,35706+42]..[1079,35706+45])
                        "symbolic_output_contents" (stdlib/format.ml[1079,35706+46]..[1079,35706+70])
                    ]
    ]
  structure_item (stdlib/format.ml[1081,35778+0]..[1098,36401+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1081,35778+4]..[1081,35778+39])
          Ppat_var "formatter_of_symbolic_output_buffer" (stdlib/format.ml[1081,35778+4]..[1081,35778+39])
        expression (stdlib/format.ml[1081,35778+40]..[1098,36401+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1081,35778+40]..[1081,35778+43])
            Ppat_var "sob" (stdlib/format.ml[1081,35778+40]..[1081,35778+43])
          expression (stdlib/format.ml[1082,35824+2]..[1098,36401+29])
            Pexp_let Nonrec
            [
              <def>
                pattern (stdlib/format.ml[1082,35824+6]..[1082,35824+20])
                  Ppat_var "symbolic_flush" (stdlib/format.ml[1082,35824+6]..[1082,35824+20])
                expression (stdlib/format.ml[1082,35824+21]..[1083,35854+45]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (stdlib/format.ml[1082,35824+21]..[1082,35824+24])
                    Ppat_var "sob" (stdlib/format.ml[1082,35824+21]..[1082,35824+24])
                  expression (stdlib/format.ml[1082,35824+25]..[1083,35854+45]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (stdlib/format.ml[1082,35824+25]..[1082,35824+27])
                      Ppat_construct "()" (stdlib/format.ml[1082,35824+25]..[1082,35824+27])
                      None
                    expression (stdlib/format.ml[1083,35854+4]..[1083,35854+45])
                      Pexp_apply
                      expression (stdlib/format.ml[1083,35854+4]..[1083,35854+28])
                        Pexp_ident "add_symbolic_output_item" (stdlib/format.ml[1083,35854+4]..[1083,35854+28])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1083,35854+29]..[1083,35854+32])
                            Pexp_ident "sob" (stdlib/format.ml[1083,35854+29]..[1083,35854+32])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1083,35854+33]..[1083,35854+45])
                            Pexp_construct "Output_flush" (stdlib/format.ml[1083,35854+33]..[1083,35854+45])
                            None
                      ]
              <def>
                pattern (stdlib/format.ml[1084,35900+6]..[1084,35900+22])
                  Ppat_var "symbolic_newline" (stdlib/format.ml[1084,35900+6]..[1084,35900+22])
                expression (stdlib/format.ml[1084,35900+23]..[1085,35932+47]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (stdlib/format.ml[1084,35900+23]..[1084,35900+26])
                    Ppat_var "sob" (stdlib/format.ml[1084,35900+23]..[1084,35900+26])
                  expression (stdlib/format.ml[1084,35900+27]..[1085,35932+47]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (stdlib/format.ml[1084,35900+27]..[1084,35900+29])
                      Ppat_construct "()" (stdlib/format.ml[1084,35900+27]..[1084,35900+29])
                      None
                    expression (stdlib/format.ml[1085,35932+4]..[1085,35932+47])
                      Pexp_apply
                      expression (stdlib/format.ml[1085,35932+4]..[1085,35932+28])
                        Pexp_ident "add_symbolic_output_item" (stdlib/format.ml[1085,35932+4]..[1085,35932+28])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1085,35932+29]..[1085,35932+32])
                            Pexp_ident "sob" (stdlib/format.ml[1085,35932+29]..[1085,35932+32])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1085,35932+33]..[1085,35932+47])
                            Pexp_construct "Output_newline" (stdlib/format.ml[1085,35932+33]..[1085,35932+47])
                            None
                      ]
              <def>
                pattern (stdlib/format.ml[1086,35980+6]..[1086,35980+21])
                  Ppat_var "symbolic_string" (stdlib/format.ml[1086,35980+6]..[1086,35980+21])
                expression (stdlib/format.ml[1086,35980+22]..[1087,36014+67]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (stdlib/format.ml[1086,35980+22]..[1086,35980+25])
                    Ppat_var "sob" (stdlib/format.ml[1086,35980+22]..[1086,35980+25])
                  expression (stdlib/format.ml[1086,35980+26]..[1087,36014+67]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (stdlib/format.ml[1086,35980+26]..[1086,35980+27])
                      Ppat_var "s" (stdlib/format.ml[1086,35980+26]..[1086,35980+27])
                    expression (stdlib/format.ml[1086,35980+28]..[1087,36014+67]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (stdlib/format.ml[1086,35980+28]..[1086,35980+29])
                        Ppat_var "i" (stdlib/format.ml[1086,35980+28]..[1086,35980+29])
                      expression (stdlib/format.ml[1086,35980+30]..[1087,36014+67]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/format.ml[1086,35980+30]..[1086,35980+31])
                          Ppat_var "n" (stdlib/format.ml[1086,35980+30]..[1086,35980+31])
                        expression (stdlib/format.ml[1087,36014+4]..[1087,36014+67])
                          Pexp_apply
                          expression (stdlib/format.ml[1087,36014+4]..[1087,36014+28])
                            Pexp_ident "add_symbolic_output_item" (stdlib/format.ml[1087,36014+4]..[1087,36014+28])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1087,36014+29]..[1087,36014+32])
                                Pexp_ident "sob" (stdlib/format.ml[1087,36014+29]..[1087,36014+32])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1087,36014+33]..[1087,36014+67])
                                Pexp_construct "Output_string" (stdlib/format.ml[1087,36014+34]..[1087,36014+47])
                                Some
                                  expression (stdlib/format.ml[1087,36014+48]..[1087,36014+66])
                                    Pexp_apply
                                    expression (stdlib/format.ml[1087,36014+49]..[1087,36014+59])
                                      Pexp_ident "String.sub" (stdlib/format.ml[1087,36014+49]..[1087,36014+59])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[1087,36014+60]..[1087,36014+61])
                                          Pexp_ident "s" (stdlib/format.ml[1087,36014+60]..[1087,36014+61])
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[1087,36014+62]..[1087,36014+63])
                                          Pexp_ident "i" (stdlib/format.ml[1087,36014+62]..[1087,36014+63])
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[1087,36014+64]..[1087,36014+65])
                                          Pexp_ident "n" (stdlib/format.ml[1087,36014+64]..[1087,36014+65])
                                    ]
                          ]
              <def>
                pattern (stdlib/format.ml[1088,36082+6]..[1088,36082+21])
                  Ppat_var "symbolic_spaces" (stdlib/format.ml[1088,36082+6]..[1088,36082+21])
                expression (stdlib/format.ml[1088,36082+22]..[1089,36112+50]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (stdlib/format.ml[1088,36082+22]..[1088,36082+25])
                    Ppat_var "sob" (stdlib/format.ml[1088,36082+22]..[1088,36082+25])
                  expression (stdlib/format.ml[1088,36082+26]..[1089,36112+50]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (stdlib/format.ml[1088,36082+26]..[1088,36082+27])
                      Ppat_var "n" (stdlib/format.ml[1088,36082+26]..[1088,36082+27])
                    expression (stdlib/format.ml[1089,36112+4]..[1089,36112+50])
                      Pexp_apply
                      expression (stdlib/format.ml[1089,36112+4]..[1089,36112+28])
                        Pexp_ident "add_symbolic_output_item" (stdlib/format.ml[1089,36112+4]..[1089,36112+28])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1089,36112+29]..[1089,36112+32])
                            Pexp_ident "sob" (stdlib/format.ml[1089,36112+29]..[1089,36112+32])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1089,36112+33]..[1089,36112+50])
                            Pexp_construct "Output_spaces" (stdlib/format.ml[1089,36112+34]..[1089,36112+47])
                            Some
                              expression (stdlib/format.ml[1089,36112+48]..[1089,36112+49])
                                Pexp_ident "n" (stdlib/format.ml[1089,36112+48]..[1089,36112+49])
                      ]
              <def>
                pattern (stdlib/format.ml[1090,36163+6]..[1090,36163+21])
                  Ppat_var "symbolic_indent" (stdlib/format.ml[1090,36163+6]..[1090,36163+21])
                expression (stdlib/format.ml[1090,36163+22]..[1091,36193+50]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (stdlib/format.ml[1090,36163+22]..[1090,36163+25])
                    Ppat_var "sob" (stdlib/format.ml[1090,36163+22]..[1090,36163+25])
                  expression (stdlib/format.ml[1090,36163+26]..[1091,36193+50]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (stdlib/format.ml[1090,36163+26]..[1090,36163+27])
                      Ppat_var "n" (stdlib/format.ml[1090,36163+26]..[1090,36163+27])
                    expression (stdlib/format.ml[1091,36193+4]..[1091,36193+50])
                      Pexp_apply
                      expression (stdlib/format.ml[1091,36193+4]..[1091,36193+28])
                        Pexp_ident "add_symbolic_output_item" (stdlib/format.ml[1091,36193+4]..[1091,36193+28])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1091,36193+29]..[1091,36193+32])
                            Pexp_ident "sob" (stdlib/format.ml[1091,36193+29]..[1091,36193+32])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1091,36193+33]..[1091,36193+50])
                            Pexp_construct "Output_indent" (stdlib/format.ml[1091,36193+34]..[1091,36193+47])
                            Some
                              expression (stdlib/format.ml[1091,36193+48]..[1091,36193+49])
                                Pexp_ident "n" (stdlib/format.ml[1091,36193+48]..[1091,36193+49])
                      ]
            ]
            expression (stdlib/format.ml[1093,36248+2]..[1098,36401+29])
              Pexp_let Nonrec
              [
                <def>
                  pattern (stdlib/format.ml[1093,36248+6]..[1093,36248+7])
                    Ppat_var "f" (stdlib/format.ml[1093,36248+6]..[1093,36248+7])
                  expression (stdlib/format.ml[1093,36248+10]..[1093,36248+29])
                    Pexp_apply
                    expression (stdlib/format.ml[1093,36248+10]..[1093,36248+25])
                      Pexp_ident "symbolic_string" (stdlib/format.ml[1093,36248+10]..[1093,36248+25])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1093,36248+26]..[1093,36248+29])
                          Pexp_ident "sob" (stdlib/format.ml[1093,36248+26]..[1093,36248+29])
                    ]
                <def>
                  pattern (stdlib/format.ml[1094,36278+6]..[1094,36278+7])
                    Ppat_var "g" (stdlib/format.ml[1094,36278+6]..[1094,36278+7])
                  expression (stdlib/format.ml[1094,36278+10]..[1094,36278+28])
                    Pexp_apply
                    expression (stdlib/format.ml[1094,36278+10]..[1094,36278+24])
                      Pexp_ident "symbolic_flush" (stdlib/format.ml[1094,36278+10]..[1094,36278+24])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1094,36278+25]..[1094,36278+28])
                          Pexp_ident "sob" (stdlib/format.ml[1094,36278+25]..[1094,36278+28])
                    ]
                <def>
                  pattern (stdlib/format.ml[1095,36307+6]..[1095,36307+7])
                    Ppat_var "h" (stdlib/format.ml[1095,36307+6]..[1095,36307+7])
                  expression (stdlib/format.ml[1095,36307+10]..[1095,36307+30])
                    Pexp_apply
                    expression (stdlib/format.ml[1095,36307+10]..[1095,36307+26])
                      Pexp_ident "symbolic_newline" (stdlib/format.ml[1095,36307+10]..[1095,36307+26])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1095,36307+27]..[1095,36307+30])
                          Pexp_ident "sob" (stdlib/format.ml[1095,36307+27]..[1095,36307+30])
                    ]
                <def>
                  pattern (stdlib/format.ml[1096,36338+6]..[1096,36338+7])
                    Ppat_var "i" (stdlib/format.ml[1096,36338+6]..[1096,36338+7])
                  expression (stdlib/format.ml[1096,36338+10]..[1096,36338+29])
                    Pexp_apply
                    expression (stdlib/format.ml[1096,36338+10]..[1096,36338+25])
                      Pexp_ident "symbolic_spaces" (stdlib/format.ml[1096,36338+10]..[1096,36338+25])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1096,36338+26]..[1096,36338+29])
                          Pexp_ident "sob" (stdlib/format.ml[1096,36338+26]..[1096,36338+29])
                    ]
                <def>
                  pattern (stdlib/format.ml[1097,36368+6]..[1097,36368+7])
                    Ppat_var "j" (stdlib/format.ml[1097,36368+6]..[1097,36368+7])
                  expression (stdlib/format.ml[1097,36368+10]..[1097,36368+29])
                    Pexp_apply
                    expression (stdlib/format.ml[1097,36368+10]..[1097,36368+25])
                      Pexp_ident "symbolic_indent" (stdlib/format.ml[1097,36368+10]..[1097,36368+25])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1097,36368+26]..[1097,36368+29])
                          Pexp_ident "sob" (stdlib/format.ml[1097,36368+26]..[1097,36368+29])
                    ]
              ]
              expression (stdlib/format.ml[1098,36401+2]..[1098,36401+29])
                Pexp_apply
                expression (stdlib/format.ml[1098,36401+2]..[1098,36401+19])
                  Pexp_ident "pp_make_formatter" (stdlib/format.ml[1098,36401+2]..[1098,36401+19])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[1098,36401+20]..[1098,36401+21])
                      Pexp_ident "f" (stdlib/format.ml[1098,36401+20]..[1098,36401+21])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[1098,36401+22]..[1098,36401+23])
                      Pexp_ident "g" (stdlib/format.ml[1098,36401+22]..[1098,36401+23])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[1098,36401+24]..[1098,36401+25])
                      Pexp_ident "h" (stdlib/format.ml[1098,36401+24]..[1098,36401+25])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[1098,36401+26]..[1098,36401+27])
                      Pexp_ident "i" (stdlib/format.ml[1098,36401+26]..[1098,36401+27])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[1098,36401+28]..[1098,36401+29])
                      Pexp_ident "j" (stdlib/format.ml[1098,36401+28]..[1098,36401+29])
                ]
    ]
  structure_item (stdlib/format.ml[1107,36537+0]..[1183,39352+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1107,36537+4]..[1107,36537+13])
          Ppat_var "open_hbox" (stdlib/format.ml[1107,36537+4]..[1107,36537+13])
        expression (stdlib/format.ml[1107,36537+16]..[1107,36537+42])
          Pexp_apply
          expression (stdlib/format.ml[1107,36537+16]..[1107,36537+28])
            Pexp_ident "pp_open_hbox" (stdlib/format.ml[1107,36537+16]..[1107,36537+28])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1107,36537+29]..[1107,36537+42])
                Pexp_ident "std_formatter" (stdlib/format.ml[1107,36537+29]..[1107,36537+42])
          ]
      <def>
        pattern (stdlib/format.ml[1108,36580+4]..[1108,36580+13])
          Ppat_var "open_vbox" (stdlib/format.ml[1108,36580+4]..[1108,36580+13])
        expression (stdlib/format.ml[1108,36580+16]..[1108,36580+42])
          Pexp_apply
          expression (stdlib/format.ml[1108,36580+16]..[1108,36580+28])
            Pexp_ident "pp_open_vbox" (stdlib/format.ml[1108,36580+16]..[1108,36580+28])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1108,36580+29]..[1108,36580+42])
                Pexp_ident "std_formatter" (stdlib/format.ml[1108,36580+29]..[1108,36580+42])
          ]
      <def>
        pattern (stdlib/format.ml[1109,36623+4]..[1109,36623+14])
          Ppat_var "open_hvbox" (stdlib/format.ml[1109,36623+4]..[1109,36623+14])
        expression (stdlib/format.ml[1109,36623+17]..[1109,36623+44])
          Pexp_apply
          expression (stdlib/format.ml[1109,36623+17]..[1109,36623+30])
            Pexp_ident "pp_open_hvbox" (stdlib/format.ml[1109,36623+17]..[1109,36623+30])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1109,36623+31]..[1109,36623+44])
                Pexp_ident "std_formatter" (stdlib/format.ml[1109,36623+31]..[1109,36623+44])
          ]
      <def>
        pattern (stdlib/format.ml[1110,36668+4]..[1110,36668+15])
          Ppat_var "open_hovbox" (stdlib/format.ml[1110,36668+4]..[1110,36668+15])
        expression (stdlib/format.ml[1110,36668+18]..[1110,36668+46])
          Pexp_apply
          expression (stdlib/format.ml[1110,36668+18]..[1110,36668+32])
            Pexp_ident "pp_open_hovbox" (stdlib/format.ml[1110,36668+18]..[1110,36668+32])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1110,36668+33]..[1110,36668+46])
                Pexp_ident "std_formatter" (stdlib/format.ml[1110,36668+33]..[1110,36668+46])
          ]
      <def>
        pattern (stdlib/format.ml[1111,36715+4]..[1111,36715+12])
          Ppat_var "open_box" (stdlib/format.ml[1111,36715+4]..[1111,36715+12])
        expression (stdlib/format.ml[1111,36715+15]..[1111,36715+40])
          Pexp_apply
          expression (stdlib/format.ml[1111,36715+15]..[1111,36715+26])
            Pexp_ident "pp_open_box" (stdlib/format.ml[1111,36715+15]..[1111,36715+26])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1111,36715+27]..[1111,36715+40])
                Pexp_ident "std_formatter" (stdlib/format.ml[1111,36715+27]..[1111,36715+40])
          ]
      <def>
        pattern (stdlib/format.ml[1112,36756+4]..[1112,36756+13])
          Ppat_var "close_box" (stdlib/format.ml[1112,36756+4]..[1112,36756+13])
        expression (stdlib/format.ml[1112,36756+16]..[1112,36756+42])
          Pexp_apply
          expression (stdlib/format.ml[1112,36756+16]..[1112,36756+28])
            Pexp_ident "pp_close_box" (stdlib/format.ml[1112,36756+16]..[1112,36756+28])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1112,36756+29]..[1112,36756+42])
                Pexp_ident "std_formatter" (stdlib/format.ml[1112,36756+29]..[1112,36756+42])
          ]
      <def>
        pattern (stdlib/format.ml[1113,36799+4]..[1113,36799+12])
          Ppat_var "open_tag" (stdlib/format.ml[1113,36799+4]..[1113,36799+12])
        expression (stdlib/format.ml[1113,36799+15]..[1113,36799+40])
          Pexp_apply
          expression (stdlib/format.ml[1113,36799+15]..[1113,36799+26])
            Pexp_ident "pp_open_tag" (stdlib/format.ml[1113,36799+15]..[1113,36799+26])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1113,36799+27]..[1113,36799+40])
                Pexp_ident "std_formatter" (stdlib/format.ml[1113,36799+27]..[1113,36799+40])
          ]
      <def>
        pattern (stdlib/format.ml[1114,36840+4]..[1114,36840+13])
          Ppat_var "close_tag" (stdlib/format.ml[1114,36840+4]..[1114,36840+13])
        expression (stdlib/format.ml[1114,36840+16]..[1114,36840+42])
          Pexp_apply
          expression (stdlib/format.ml[1114,36840+16]..[1114,36840+28])
            Pexp_ident "pp_close_tag" (stdlib/format.ml[1114,36840+16]..[1114,36840+28])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1114,36840+29]..[1114,36840+42])
                Pexp_ident "std_formatter" (stdlib/format.ml[1114,36840+29]..[1114,36840+42])
          ]
      <def>
        pattern (stdlib/format.ml[1115,36883+4]..[1115,36883+13])
          Ppat_var "open_stag" (stdlib/format.ml[1115,36883+4]..[1115,36883+13])
        expression (stdlib/format.ml[1115,36883+16]..[1115,36883+42])
          Pexp_apply
          expression (stdlib/format.ml[1115,36883+16]..[1115,36883+28])
            Pexp_ident "pp_open_stag" (stdlib/format.ml[1115,36883+16]..[1115,36883+28])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1115,36883+29]..[1115,36883+42])
                Pexp_ident "std_formatter" (stdlib/format.ml[1115,36883+29]..[1115,36883+42])
          ]
      <def>
        pattern (stdlib/format.ml[1116,36926+4]..[1116,36926+14])
          Ppat_var "close_stag" (stdlib/format.ml[1116,36926+4]..[1116,36926+14])
        expression (stdlib/format.ml[1116,36926+17]..[1116,36926+44])
          Pexp_apply
          expression (stdlib/format.ml[1116,36926+17]..[1116,36926+30])
            Pexp_ident "pp_close_stag" (stdlib/format.ml[1116,36926+17]..[1116,36926+30])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1116,36926+31]..[1116,36926+44])
                Pexp_ident "std_formatter" (stdlib/format.ml[1116,36926+31]..[1116,36926+44])
          ]
      <def>
        pattern (stdlib/format.ml[1117,36971+4]..[1117,36971+12])
          Ppat_var "print_as" (stdlib/format.ml[1117,36971+4]..[1117,36971+12])
        expression (stdlib/format.ml[1117,36971+15]..[1117,36971+40])
          Pexp_apply
          expression (stdlib/format.ml[1117,36971+15]..[1117,36971+26])
            Pexp_ident "pp_print_as" (stdlib/format.ml[1117,36971+15]..[1117,36971+26])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1117,36971+27]..[1117,36971+40])
                Pexp_ident "std_formatter" (stdlib/format.ml[1117,36971+27]..[1117,36971+40])
          ]
      <def>
        pattern (stdlib/format.ml[1118,37012+4]..[1118,37012+16])
          Ppat_var "print_string" (stdlib/format.ml[1118,37012+4]..[1118,37012+16])
        expression (stdlib/format.ml[1118,37012+19]..[1118,37012+48])
          Pexp_apply
          expression (stdlib/format.ml[1118,37012+19]..[1118,37012+34])
            Pexp_ident "pp_print_string" (stdlib/format.ml[1118,37012+19]..[1118,37012+34])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1118,37012+35]..[1118,37012+48])
                Pexp_ident "std_formatter" (stdlib/format.ml[1118,37012+35]..[1118,37012+48])
          ]
      <def>
        pattern (stdlib/format.ml[1119,37061+4]..[1119,37061+15])
          Ppat_var "print_bytes" (stdlib/format.ml[1119,37061+4]..[1119,37061+15])
        expression (stdlib/format.ml[1119,37061+18]..[1119,37061+46])
          Pexp_apply
          expression (stdlib/format.ml[1119,37061+18]..[1119,37061+32])
            Pexp_ident "pp_print_bytes" (stdlib/format.ml[1119,37061+18]..[1119,37061+32])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1119,37061+33]..[1119,37061+46])
                Pexp_ident "std_formatter" (stdlib/format.ml[1119,37061+33]..[1119,37061+46])
          ]
      <def>
        pattern (stdlib/format.ml[1120,37108+4]..[1120,37108+13])
          Ppat_var "print_int" (stdlib/format.ml[1120,37108+4]..[1120,37108+13])
        expression (stdlib/format.ml[1120,37108+16]..[1120,37108+42])
          Pexp_apply
          expression (stdlib/format.ml[1120,37108+16]..[1120,37108+28])
            Pexp_ident "pp_print_int" (stdlib/format.ml[1120,37108+16]..[1120,37108+28])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1120,37108+29]..[1120,37108+42])
                Pexp_ident "std_formatter" (stdlib/format.ml[1120,37108+29]..[1120,37108+42])
          ]
      <def>
        pattern (stdlib/format.ml[1121,37151+4]..[1121,37151+15])
          Ppat_var "print_float" (stdlib/format.ml[1121,37151+4]..[1121,37151+15])
        expression (stdlib/format.ml[1121,37151+18]..[1121,37151+46])
          Pexp_apply
          expression (stdlib/format.ml[1121,37151+18]..[1121,37151+32])
            Pexp_ident "pp_print_float" (stdlib/format.ml[1121,37151+18]..[1121,37151+32])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1121,37151+33]..[1121,37151+46])
                Pexp_ident "std_formatter" (stdlib/format.ml[1121,37151+33]..[1121,37151+46])
          ]
      <def>
        pattern (stdlib/format.ml[1122,37198+4]..[1122,37198+14])
          Ppat_var "print_char" (stdlib/format.ml[1122,37198+4]..[1122,37198+14])
        expression (stdlib/format.ml[1122,37198+17]..[1122,37198+44])
          Pexp_apply
          expression (stdlib/format.ml[1122,37198+17]..[1122,37198+30])
            Pexp_ident "pp_print_char" (stdlib/format.ml[1122,37198+17]..[1122,37198+30])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1122,37198+31]..[1122,37198+44])
                Pexp_ident "std_formatter" (stdlib/format.ml[1122,37198+31]..[1122,37198+44])
          ]
      <def>
        pattern (stdlib/format.ml[1123,37243+4]..[1123,37243+14])
          Ppat_var "print_bool" (stdlib/format.ml[1123,37243+4]..[1123,37243+14])
        expression (stdlib/format.ml[1123,37243+17]..[1123,37243+44])
          Pexp_apply
          expression (stdlib/format.ml[1123,37243+17]..[1123,37243+30])
            Pexp_ident "pp_print_bool" (stdlib/format.ml[1123,37243+17]..[1123,37243+30])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1123,37243+31]..[1123,37243+44])
                Pexp_ident "std_formatter" (stdlib/format.ml[1123,37243+31]..[1123,37243+44])
          ]
      <def>
        pattern (stdlib/format.ml[1124,37288+4]..[1124,37288+15])
          Ppat_var "print_break" (stdlib/format.ml[1124,37288+4]..[1124,37288+15])
        expression (stdlib/format.ml[1124,37288+18]..[1124,37288+46])
          Pexp_apply
          expression (stdlib/format.ml[1124,37288+18]..[1124,37288+32])
            Pexp_ident "pp_print_break" (stdlib/format.ml[1124,37288+18]..[1124,37288+32])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1124,37288+33]..[1124,37288+46])
                Pexp_ident "std_formatter" (stdlib/format.ml[1124,37288+33]..[1124,37288+46])
          ]
      <def>
        pattern (stdlib/format.ml[1125,37335+4]..[1125,37335+13])
          Ppat_var "print_cut" (stdlib/format.ml[1125,37335+4]..[1125,37335+13])
        expression (stdlib/format.ml[1125,37335+16]..[1125,37335+42])
          Pexp_apply
          expression (stdlib/format.ml[1125,37335+16]..[1125,37335+28])
            Pexp_ident "pp_print_cut" (stdlib/format.ml[1125,37335+16]..[1125,37335+28])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1125,37335+29]..[1125,37335+42])
                Pexp_ident "std_formatter" (stdlib/format.ml[1125,37335+29]..[1125,37335+42])
          ]
      <def>
        pattern (stdlib/format.ml[1126,37378+4]..[1126,37378+15])
          Ppat_var "print_space" (stdlib/format.ml[1126,37378+4]..[1126,37378+15])
        expression (stdlib/format.ml[1126,37378+18]..[1126,37378+46])
          Pexp_apply
          expression (stdlib/format.ml[1126,37378+18]..[1126,37378+32])
            Pexp_ident "pp_print_space" (stdlib/format.ml[1126,37378+18]..[1126,37378+32])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1126,37378+33]..[1126,37378+46])
                Pexp_ident "std_formatter" (stdlib/format.ml[1126,37378+33]..[1126,37378+46])
          ]
      <def>
        pattern (stdlib/format.ml[1127,37425+4]..[1127,37425+17])
          Ppat_var "force_newline" (stdlib/format.ml[1127,37425+4]..[1127,37425+17])
        expression (stdlib/format.ml[1127,37425+20]..[1127,37425+50])
          Pexp_apply
          expression (stdlib/format.ml[1127,37425+20]..[1127,37425+36])
            Pexp_ident "pp_force_newline" (stdlib/format.ml[1127,37425+20]..[1127,37425+36])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1127,37425+37]..[1127,37425+50])
                Pexp_ident "std_formatter" (stdlib/format.ml[1127,37425+37]..[1127,37425+50])
          ]
      <def>
        pattern (stdlib/format.ml[1128,37476+4]..[1128,37476+15])
          Ppat_var "print_flush" (stdlib/format.ml[1128,37476+4]..[1128,37476+15])
        expression (stdlib/format.ml[1128,37476+18]..[1128,37476+46])
          Pexp_apply
          expression (stdlib/format.ml[1128,37476+18]..[1128,37476+32])
            Pexp_ident "pp_print_flush" (stdlib/format.ml[1128,37476+18]..[1128,37476+32])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1128,37476+33]..[1128,37476+46])
                Pexp_ident "std_formatter" (stdlib/format.ml[1128,37476+33]..[1128,37476+46])
          ]
      <def>
        pattern (stdlib/format.ml[1129,37523+4]..[1129,37523+17])
          Ppat_var "print_newline" (stdlib/format.ml[1129,37523+4]..[1129,37523+17])
        expression (stdlib/format.ml[1129,37523+20]..[1129,37523+50])
          Pexp_apply
          expression (stdlib/format.ml[1129,37523+20]..[1129,37523+36])
            Pexp_ident "pp_print_newline" (stdlib/format.ml[1129,37523+20]..[1129,37523+36])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1129,37523+37]..[1129,37523+50])
                Pexp_ident "std_formatter" (stdlib/format.ml[1129,37523+37]..[1129,37523+50])
          ]
      <def>
        pattern (stdlib/format.ml[1130,37574+4]..[1130,37574+20])
          Ppat_var "print_if_newline" (stdlib/format.ml[1130,37574+4]..[1130,37574+20])
        expression (stdlib/format.ml[1130,37574+23]..[1130,37574+56])
          Pexp_apply
          expression (stdlib/format.ml[1130,37574+23]..[1130,37574+42])
            Pexp_ident "pp_print_if_newline" (stdlib/format.ml[1130,37574+23]..[1130,37574+42])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1130,37574+43]..[1130,37574+56])
                Pexp_ident "std_formatter" (stdlib/format.ml[1130,37574+43]..[1130,37574+56])
          ]
      <def>
        pattern (stdlib/format.ml[1132,37632+4]..[1132,37632+13])
          Ppat_var "open_tbox" (stdlib/format.ml[1132,37632+4]..[1132,37632+13])
        expression (stdlib/format.ml[1132,37632+16]..[1132,37632+42])
          Pexp_apply
          expression (stdlib/format.ml[1132,37632+16]..[1132,37632+28])
            Pexp_ident "pp_open_tbox" (stdlib/format.ml[1132,37632+16]..[1132,37632+28])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1132,37632+29]..[1132,37632+42])
                Pexp_ident "std_formatter" (stdlib/format.ml[1132,37632+29]..[1132,37632+42])
          ]
      <def>
        pattern (stdlib/format.ml[1133,37675+4]..[1133,37675+14])
          Ppat_var "close_tbox" (stdlib/format.ml[1133,37675+4]..[1133,37675+14])
        expression (stdlib/format.ml[1133,37675+17]..[1133,37675+44])
          Pexp_apply
          expression (stdlib/format.ml[1133,37675+17]..[1133,37675+30])
            Pexp_ident "pp_close_tbox" (stdlib/format.ml[1133,37675+17]..[1133,37675+30])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1133,37675+31]..[1133,37675+44])
                Pexp_ident "std_formatter" (stdlib/format.ml[1133,37675+31]..[1133,37675+44])
          ]
      <def>
        pattern (stdlib/format.ml[1134,37720+4]..[1134,37720+16])
          Ppat_var "print_tbreak" (stdlib/format.ml[1134,37720+4]..[1134,37720+16])
        expression (stdlib/format.ml[1134,37720+19]..[1134,37720+48])
          Pexp_apply
          expression (stdlib/format.ml[1134,37720+19]..[1134,37720+34])
            Pexp_ident "pp_print_tbreak" (stdlib/format.ml[1134,37720+19]..[1134,37720+34])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1134,37720+35]..[1134,37720+48])
                Pexp_ident "std_formatter" (stdlib/format.ml[1134,37720+35]..[1134,37720+48])
          ]
      <def>
        pattern (stdlib/format.ml[1136,37770+4]..[1136,37770+11])
          Ppat_var "set_tab" (stdlib/format.ml[1136,37770+4]..[1136,37770+11])
        expression (stdlib/format.ml[1136,37770+14]..[1136,37770+38])
          Pexp_apply
          expression (stdlib/format.ml[1136,37770+14]..[1136,37770+24])
            Pexp_ident "pp_set_tab" (stdlib/format.ml[1136,37770+14]..[1136,37770+24])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1136,37770+25]..[1136,37770+38])
                Pexp_ident "std_formatter" (stdlib/format.ml[1136,37770+25]..[1136,37770+38])
          ]
      <def>
        pattern (stdlib/format.ml[1137,37809+4]..[1137,37809+13])
          Ppat_var "print_tab" (stdlib/format.ml[1137,37809+4]..[1137,37809+13])
        expression (stdlib/format.ml[1137,37809+16]..[1137,37809+42])
          Pexp_apply
          expression (stdlib/format.ml[1137,37809+16]..[1137,37809+28])
            Pexp_ident "pp_print_tab" (stdlib/format.ml[1137,37809+16]..[1137,37809+28])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1137,37809+29]..[1137,37809+42])
                Pexp_ident "std_formatter" (stdlib/format.ml[1137,37809+29]..[1137,37809+42])
          ]
      <def>
        pattern (stdlib/format.ml[1139,37853+4]..[1139,37853+14])
          Ppat_var "set_margin" (stdlib/format.ml[1139,37853+4]..[1139,37853+14])
        expression (stdlib/format.ml[1139,37853+17]..[1139,37853+44])
          Pexp_apply
          expression (stdlib/format.ml[1139,37853+17]..[1139,37853+30])
            Pexp_ident "pp_set_margin" (stdlib/format.ml[1139,37853+17]..[1139,37853+30])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1139,37853+31]..[1139,37853+44])
                Pexp_ident "std_formatter" (stdlib/format.ml[1139,37853+31]..[1139,37853+44])
          ]
      <def>
        pattern (stdlib/format.ml[1140,37898+4]..[1140,37898+14])
          Ppat_var "get_margin" (stdlib/format.ml[1140,37898+4]..[1140,37898+14])
        expression (stdlib/format.ml[1140,37898+17]..[1140,37898+44])
          Pexp_apply
          expression (stdlib/format.ml[1140,37898+17]..[1140,37898+30])
            Pexp_ident "pp_get_margin" (stdlib/format.ml[1140,37898+17]..[1140,37898+30])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1140,37898+31]..[1140,37898+44])
                Pexp_ident "std_formatter" (stdlib/format.ml[1140,37898+31]..[1140,37898+44])
          ]
      <def>
        pattern (stdlib/format.ml[1142,37944+4]..[1142,37944+18])
          Ppat_var "set_max_indent" (stdlib/format.ml[1142,37944+4]..[1142,37944+18])
        expression (stdlib/format.ml[1142,37944+21]..[1142,37944+52])
          Pexp_apply
          expression (stdlib/format.ml[1142,37944+21]..[1142,37944+38])
            Pexp_ident "pp_set_max_indent" (stdlib/format.ml[1142,37944+21]..[1142,37944+38])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1142,37944+39]..[1142,37944+52])
                Pexp_ident "std_formatter" (stdlib/format.ml[1142,37944+39]..[1142,37944+52])
          ]
      <def>
        pattern (stdlib/format.ml[1143,37997+4]..[1143,37997+18])
          Ppat_var "get_max_indent" (stdlib/format.ml[1143,37997+4]..[1143,37997+18])
        expression (stdlib/format.ml[1143,37997+21]..[1143,37997+52])
          Pexp_apply
          expression (stdlib/format.ml[1143,37997+21]..[1143,37997+38])
            Pexp_ident "pp_get_max_indent" (stdlib/format.ml[1143,37997+21]..[1143,37997+38])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1143,37997+39]..[1143,37997+52])
                Pexp_ident "std_formatter" (stdlib/format.ml[1143,37997+39]..[1143,37997+52])
          ]
      <def>
        pattern (stdlib/format.ml[1145,38051+4]..[1145,38051+16])
          Ppat_var "set_geometry" (stdlib/format.ml[1145,38051+4]..[1145,38051+16])
        expression (stdlib/format.ml[1145,38051+19]..[1145,38051+48])
          Pexp_apply
          expression (stdlib/format.ml[1145,38051+19]..[1145,38051+34])
            Pexp_ident "pp_set_geometry" (stdlib/format.ml[1145,38051+19]..[1145,38051+34])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1145,38051+35]..[1145,38051+48])
                Pexp_ident "std_formatter" (stdlib/format.ml[1145,38051+35]..[1145,38051+48])
          ]
      <def>
        pattern (stdlib/format.ml[1146,38100+4]..[1146,38100+21])
          Ppat_var "safe_set_geometry" (stdlib/format.ml[1146,38100+4]..[1146,38100+21])
        expression (stdlib/format.ml[1146,38100+24]..[1146,38100+58])
          Pexp_apply
          expression (stdlib/format.ml[1146,38100+24]..[1146,38100+44])
            Pexp_ident "pp_safe_set_geometry" (stdlib/format.ml[1146,38100+24]..[1146,38100+44])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1146,38100+45]..[1146,38100+58])
                Pexp_ident "std_formatter" (stdlib/format.ml[1146,38100+45]..[1146,38100+58])
          ]
      <def>
        pattern (stdlib/format.ml[1147,38159+4]..[1147,38159+16])
          Ppat_var "get_geometry" (stdlib/format.ml[1147,38159+4]..[1147,38159+16])
        expression (stdlib/format.ml[1147,38159+19]..[1147,38159+48])
          Pexp_apply
          expression (stdlib/format.ml[1147,38159+19]..[1147,38159+34])
            Pexp_ident "pp_get_geometry" (stdlib/format.ml[1147,38159+19]..[1147,38159+34])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1147,38159+35]..[1147,38159+48])
                Pexp_ident "std_formatter" (stdlib/format.ml[1147,38159+35]..[1147,38159+48])
          ]
      <def>
        pattern (stdlib/format.ml[1148,38208+4]..[1148,38208+19])
          Ppat_var "update_geometry" (stdlib/format.ml[1148,38208+4]..[1148,38208+19])
        expression (stdlib/format.ml[1148,38208+22]..[1148,38208+54])
          Pexp_apply
          expression (stdlib/format.ml[1148,38208+22]..[1148,38208+40])
            Pexp_ident "pp_update_geometry" (stdlib/format.ml[1148,38208+22]..[1148,38208+40])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1148,38208+41]..[1148,38208+54])
                Pexp_ident "std_formatter" (stdlib/format.ml[1148,38208+41]..[1148,38208+54])
          ]
      <def>
        pattern (stdlib/format.ml[1150,38264+4]..[1150,38264+17])
          Ppat_var "set_max_boxes" (stdlib/format.ml[1150,38264+4]..[1150,38264+17])
        expression (stdlib/format.ml[1150,38264+20]..[1150,38264+50])
          Pexp_apply
          expression (stdlib/format.ml[1150,38264+20]..[1150,38264+36])
            Pexp_ident "pp_set_max_boxes" (stdlib/format.ml[1150,38264+20]..[1150,38264+36])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1150,38264+37]..[1150,38264+50])
                Pexp_ident "std_formatter" (stdlib/format.ml[1150,38264+37]..[1150,38264+50])
          ]
      <def>
        pattern (stdlib/format.ml[1151,38315+4]..[1151,38315+17])
          Ppat_var "get_max_boxes" (stdlib/format.ml[1151,38315+4]..[1151,38315+17])
        expression (stdlib/format.ml[1151,38315+20]..[1151,38315+50])
          Pexp_apply
          expression (stdlib/format.ml[1151,38315+20]..[1151,38315+36])
            Pexp_ident "pp_get_max_boxes" (stdlib/format.ml[1151,38315+20]..[1151,38315+36])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1151,38315+37]..[1151,38315+50])
                Pexp_ident "std_formatter" (stdlib/format.ml[1151,38315+37]..[1151,38315+50])
          ]
      <def>
        pattern (stdlib/format.ml[1152,38366+4]..[1152,38366+18])
          Ppat_var "over_max_boxes" (stdlib/format.ml[1152,38366+4]..[1152,38366+18])
        expression (stdlib/format.ml[1152,38366+21]..[1152,38366+52])
          Pexp_apply
          expression (stdlib/format.ml[1152,38366+21]..[1152,38366+38])
            Pexp_ident "pp_over_max_boxes" (stdlib/format.ml[1152,38366+21]..[1152,38366+38])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1152,38366+39]..[1152,38366+52])
                Pexp_ident "std_formatter" (stdlib/format.ml[1152,38366+39]..[1152,38366+52])
          ]
      <def>
        pattern (stdlib/format.ml[1154,38420+4]..[1154,38420+21])
          Ppat_var "set_ellipsis_text" (stdlib/format.ml[1154,38420+4]..[1154,38420+21])
        expression (stdlib/format.ml[1154,38420+24]..[1154,38420+58])
          Pexp_apply
          expression (stdlib/format.ml[1154,38420+24]..[1154,38420+44])
            Pexp_ident "pp_set_ellipsis_text" (stdlib/format.ml[1154,38420+24]..[1154,38420+44])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1154,38420+45]..[1154,38420+58])
                Pexp_ident "std_formatter" (stdlib/format.ml[1154,38420+45]..[1154,38420+58])
          ]
      <def>
        pattern (stdlib/format.ml[1155,38479+4]..[1155,38479+21])
          Ppat_var "get_ellipsis_text" (stdlib/format.ml[1155,38479+4]..[1155,38479+21])
        expression (stdlib/format.ml[1155,38479+24]..[1155,38479+58])
          Pexp_apply
          expression (stdlib/format.ml[1155,38479+24]..[1155,38479+44])
            Pexp_ident "pp_get_ellipsis_text" (stdlib/format.ml[1155,38479+24]..[1155,38479+44])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1155,38479+45]..[1155,38479+58])
                Pexp_ident "std_formatter" (stdlib/format.ml[1155,38479+45]..[1155,38479+58])
          ]
      <def>
        pattern (stdlib/format.ml[1157,38539+4]..[1157,38539+29])
          Ppat_var "set_formatter_out_channel" (stdlib/format.ml[1157,38539+4]..[1157,38539+29])
        expression (stdlib/format.ml[1158,38571+2]..[1158,38571+44])
          Pexp_apply
          expression (stdlib/format.ml[1158,38571+2]..[1158,38571+30])
            Pexp_ident "pp_set_formatter_out_channel" (stdlib/format.ml[1158,38571+2]..[1158,38571+30])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1158,38571+31]..[1158,38571+44])
                Pexp_ident "std_formatter" (stdlib/format.ml[1158,38571+31]..[1158,38571+44])
          ]
      <def>
        pattern (stdlib/format.ml[1160,38617+4]..[1160,38617+31])
          Ppat_var "set_formatter_out_functions" (stdlib/format.ml[1160,38617+4]..[1160,38617+31])
        expression (stdlib/format.ml[1161,38651+2]..[1161,38651+46])
          Pexp_apply
          expression (stdlib/format.ml[1161,38651+2]..[1161,38651+32])
            Pexp_ident "pp_set_formatter_out_functions" (stdlib/format.ml[1161,38651+2]..[1161,38651+32])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1161,38651+33]..[1161,38651+46])
                Pexp_ident "std_formatter" (stdlib/format.ml[1161,38651+33]..[1161,38651+46])
          ]
      <def>
        pattern (stdlib/format.ml[1162,38698+4]..[1162,38698+31])
          Ppat_var "get_formatter_out_functions" (stdlib/format.ml[1162,38698+4]..[1162,38698+31])
        expression (stdlib/format.ml[1163,38732+2]..[1163,38732+46])
          Pexp_apply
          expression (stdlib/format.ml[1163,38732+2]..[1163,38732+32])
            Pexp_ident "pp_get_formatter_out_functions" (stdlib/format.ml[1163,38732+2]..[1163,38732+32])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1163,38732+33]..[1163,38732+46])
                Pexp_ident "std_formatter" (stdlib/format.ml[1163,38732+33]..[1163,38732+46])
          ]
      <def>
        pattern (stdlib/format.ml[1165,38780+4]..[1165,38780+34])
          Ppat_var "set_formatter_output_functions" (stdlib/format.ml[1165,38780+4]..[1165,38780+34])
        expression (stdlib/format.ml[1166,38817+2]..[1166,38817+49])
          Pexp_apply
          expression (stdlib/format.ml[1166,38817+2]..[1166,38817+35])
            Pexp_ident "pp_set_formatter_output_functions" (stdlib/format.ml[1166,38817+2]..[1166,38817+35])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1166,38817+36]..[1166,38817+49])
                Pexp_ident "std_formatter" (stdlib/format.ml[1166,38817+36]..[1166,38817+49])
          ]
      <def>
        pattern (stdlib/format.ml[1167,38867+4]..[1167,38867+34])
          Ppat_var "get_formatter_output_functions" (stdlib/format.ml[1167,38867+4]..[1167,38867+34])
        expression (stdlib/format.ml[1168,38904+2]..[1168,38904+49])
          Pexp_apply
          expression (stdlib/format.ml[1168,38904+2]..[1168,38904+35])
            Pexp_ident "pp_get_formatter_output_functions" (stdlib/format.ml[1168,38904+2]..[1168,38904+35])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1168,38904+36]..[1168,38904+49])
                Pexp_ident "std_formatter" (stdlib/format.ml[1168,38904+36]..[1168,38904+49])
          ]
      <def>
        pattern (stdlib/format.ml[1170,38955+4]..[1170,38955+32])
          Ppat_var "set_formatter_stag_functions" (stdlib/format.ml[1170,38955+4]..[1170,38955+32])
        expression (stdlib/format.ml[1171,38990+2]..[1171,38990+47])
          Pexp_apply
          expression (stdlib/format.ml[1171,38990+2]..[1171,38990+33])
            Pexp_ident "pp_set_formatter_stag_functions" (stdlib/format.ml[1171,38990+2]..[1171,38990+33])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1171,38990+34]..[1171,38990+47])
                Pexp_ident "std_formatter" (stdlib/format.ml[1171,38990+34]..[1171,38990+47])
          ]
      <def>
        pattern (stdlib/format.ml[1172,39038+4]..[1172,39038+32])
          Ppat_var "get_formatter_stag_functions" (stdlib/format.ml[1172,39038+4]..[1172,39038+32])
        expression (stdlib/format.ml[1173,39073+2]..[1173,39073+47])
          Pexp_apply
          expression (stdlib/format.ml[1173,39073+2]..[1173,39073+33])
            Pexp_ident "pp_get_formatter_stag_functions" (stdlib/format.ml[1173,39073+2]..[1173,39073+33])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1173,39073+34]..[1173,39073+47])
                Pexp_ident "std_formatter" (stdlib/format.ml[1173,39073+34]..[1173,39073+47])
          ]
      <def>
        pattern (stdlib/format.ml[1174,39121+4]..[1174,39121+18])
          Ppat_var "set_print_tags" (stdlib/format.ml[1174,39121+4]..[1174,39121+18])
        expression (stdlib/format.ml[1175,39142+2]..[1175,39142+33])
          Pexp_apply
          expression (stdlib/format.ml[1175,39142+2]..[1175,39142+19])
            Pexp_ident "pp_set_print_tags" (stdlib/format.ml[1175,39142+2]..[1175,39142+19])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1175,39142+20]..[1175,39142+33])
                Pexp_ident "std_formatter" (stdlib/format.ml[1175,39142+20]..[1175,39142+33])
          ]
      <def>
        pattern (stdlib/format.ml[1176,39176+4]..[1176,39176+18])
          Ppat_var "get_print_tags" (stdlib/format.ml[1176,39176+4]..[1176,39176+18])
        expression (stdlib/format.ml[1177,39197+2]..[1177,39197+33])
          Pexp_apply
          expression (stdlib/format.ml[1177,39197+2]..[1177,39197+19])
            Pexp_ident "pp_get_print_tags" (stdlib/format.ml[1177,39197+2]..[1177,39197+19])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1177,39197+20]..[1177,39197+33])
                Pexp_ident "std_formatter" (stdlib/format.ml[1177,39197+20]..[1177,39197+33])
          ]
      <def>
        pattern (stdlib/format.ml[1178,39231+4]..[1178,39231+17])
          Ppat_var "set_mark_tags" (stdlib/format.ml[1178,39231+4]..[1178,39231+17])
        expression (stdlib/format.ml[1179,39251+2]..[1179,39251+32])
          Pexp_apply
          expression (stdlib/format.ml[1179,39251+2]..[1179,39251+18])
            Pexp_ident "pp_set_mark_tags" (stdlib/format.ml[1179,39251+2]..[1179,39251+18])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1179,39251+19]..[1179,39251+32])
                Pexp_ident "std_formatter" (stdlib/format.ml[1179,39251+19]..[1179,39251+32])
          ]
      <def>
        pattern (stdlib/format.ml[1180,39284+4]..[1180,39284+17])
          Ppat_var "get_mark_tags" (stdlib/format.ml[1180,39284+4]..[1180,39284+17])
        expression (stdlib/format.ml[1181,39304+2]..[1181,39304+32])
          Pexp_apply
          expression (stdlib/format.ml[1181,39304+2]..[1181,39304+18])
            Pexp_ident "pp_get_mark_tags" (stdlib/format.ml[1181,39304+2]..[1181,39304+18])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1181,39304+19]..[1181,39304+32])
                Pexp_ident "std_formatter" (stdlib/format.ml[1181,39304+19]..[1181,39304+32])
          ]
      <def>
        pattern (stdlib/format.ml[1182,39337+4]..[1182,39337+12])
          Ppat_var "set_tags" (stdlib/format.ml[1182,39337+4]..[1182,39337+12])
        expression (stdlib/format.ml[1183,39352+2]..[1183,39352+27])
          Pexp_apply
          expression (stdlib/format.ml[1183,39352+2]..[1183,39352+13])
            Pexp_ident "pp_set_tags" (stdlib/format.ml[1183,39352+2]..[1183,39352+13])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1183,39352+14]..[1183,39352+27])
                Pexp_ident "std_formatter" (stdlib/format.ml[1183,39352+14]..[1183,39352+27])
          ]
    ]
  structure_item (stdlib/format.ml[1189,39434+0]..[1195,39586+37])
    Pstr_value Rec
    [
      <def>
        pattern (stdlib/format.ml[1189,39434+8]..[1189,39434+21])
          Ppat_var "pp_print_list" (stdlib/format.ml[1189,39434+8]..[1189,39434+21])
        expression (stdlib/format.ml[1189,39434+22]..[1195,39586+37]) ghost
          Pexp_fun
          Optional "pp_sep"
          Some
            expression (stdlib/format.ml[1189,39434+33]..[1189,39434+45])
              Pexp_ident "pp_print_cut" (stdlib/format.ml[1189,39434+33]..[1189,39434+45])
          pattern (stdlib/format.ml[1189,39434+24]..[1189,39434+30])
            Ppat_var "pp_sep" (stdlib/format.ml[1189,39434+24]..[1189,39434+30])
          expression (stdlib/format.ml[1189,39434+47]..[1195,39586+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1189,39434+47]..[1189,39434+51])
              Ppat_var "pp_v" (stdlib/format.ml[1189,39434+47]..[1189,39434+51])
            expression (stdlib/format.ml[1189,39434+52]..[1195,39586+37]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[1189,39434+52]..[1189,39434+55])
                Ppat_var "ppf" (stdlib/format.ml[1189,39434+52]..[1189,39434+55])
              expression (stdlib/format.ml[1189,39434+58]..[1195,39586+37])
                Pexp_function
                [
                  <case>
                    pattern (stdlib/format.ml[1190,39501+4]..[1190,39501+6])
                      Ppat_construct "[]" (stdlib/format.ml[1190,39501+4]..[1190,39501+6])
                      None
                    expression (stdlib/format.ml[1190,39501+10]..[1190,39501+12])
                      Pexp_construct "()" (stdlib/format.ml[1190,39501+10]..[1190,39501+12])
                      None
                  <case>
                    pattern (stdlib/format.ml[1191,39514+4]..[1191,39514+7])
                      Ppat_construct "::" (stdlib/format.ml[1191,39514+5]..[1191,39514+7]) ghost
                      Some
                        []
                        pattern (stdlib/format.ml[1191,39514+5]..[1191,39514+7]) ghost
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1191,39514+5]..[1191,39514+6])
                              Ppat_var "v" (stdlib/format.ml[1191,39514+5]..[1191,39514+6])
                            pattern (stdlib/format.ml[1191,39514+6]..[1191,39514+7]) ghost
                              Ppat_construct "[]" (stdlib/format.ml[1191,39514+6]..[1191,39514+7]) ghost
                              None
                          ]
                    expression (stdlib/format.ml[1191,39514+11]..[1191,39514+21])
                      Pexp_apply
                      expression (stdlib/format.ml[1191,39514+11]..[1191,39514+15])
                        Pexp_ident "pp_v" (stdlib/format.ml[1191,39514+11]..[1191,39514+15])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1191,39514+16]..[1191,39514+19])
                            Pexp_ident "ppf" (stdlib/format.ml[1191,39514+16]..[1191,39514+19])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1191,39514+20]..[1191,39514+21])
                            Pexp_ident "v" (stdlib/format.ml[1191,39514+20]..[1191,39514+21])
                      ]
                  <case>
                    pattern (stdlib/format.ml[1192,39536+4]..[1192,39536+11])
                      Ppat_construct "::" (stdlib/format.ml[1192,39536+6]..[1192,39536+8])
                      Some
                        []
                        pattern (stdlib/format.ml[1192,39536+4]..[1192,39536+11]) ghost
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1192,39536+4]..[1192,39536+5])
                              Ppat_var "v" (stdlib/format.ml[1192,39536+4]..[1192,39536+5])
                            pattern (stdlib/format.ml[1192,39536+9]..[1192,39536+11])
                              Ppat_var "vs" (stdlib/format.ml[1192,39536+9]..[1192,39536+11])
                          ]
                    expression (stdlib/format.ml[1193,39551+4]..[1195,39586+37])
                      Pexp_sequence
                      expression (stdlib/format.ml[1193,39551+4]..[1193,39551+14])
                        Pexp_apply
                        expression (stdlib/format.ml[1193,39551+4]..[1193,39551+8])
                          Pexp_ident "pp_v" (stdlib/format.ml[1193,39551+4]..[1193,39551+8])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[1193,39551+9]..[1193,39551+12])
                              Pexp_ident "ppf" (stdlib/format.ml[1193,39551+9]..[1193,39551+12])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[1193,39551+13]..[1193,39551+14])
                              Pexp_ident "v" (stdlib/format.ml[1193,39551+13]..[1193,39551+14])
                        ]
                      expression (stdlib/format.ml[1194,39567+4]..[1195,39586+37])
                        Pexp_sequence
                        expression (stdlib/format.ml[1194,39567+4]..[1194,39567+17])
                          Pexp_apply
                          expression (stdlib/format.ml[1194,39567+4]..[1194,39567+10])
                            Pexp_ident "pp_sep" (stdlib/format.ml[1194,39567+4]..[1194,39567+10])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1194,39567+11]..[1194,39567+14])
                                Pexp_ident "ppf" (stdlib/format.ml[1194,39567+11]..[1194,39567+14])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1194,39567+15]..[1194,39567+17])
                                Pexp_construct "()" (stdlib/format.ml[1194,39567+15]..[1194,39567+17])
                                None
                          ]
                        expression (stdlib/format.ml[1195,39586+4]..[1195,39586+37])
                          Pexp_apply
                          expression (stdlib/format.ml[1195,39586+4]..[1195,39586+17])
                            Pexp_ident "pp_print_list" (stdlib/format.ml[1195,39586+4]..[1195,39586+17])
                          [
                            <arg>
                            Labelled "pp_sep"
                              expression (stdlib/format.ml[1195,39586+19]..[1195,39586+25])
                                Pexp_ident "pp_sep" (stdlib/format.ml[1195,39586+19]..[1195,39586+25])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1195,39586+26]..[1195,39586+30])
                                Pexp_ident "pp_v" (stdlib/format.ml[1195,39586+26]..[1195,39586+30])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1195,39586+31]..[1195,39586+34])
                                Pexp_ident "ppf" (stdlib/format.ml[1195,39586+31]..[1195,39586+34])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1195,39586+35]..[1195,39586+37])
                                Pexp_ident "vs" (stdlib/format.ml[1195,39586+35]..[1195,39586+37])
                          ]
                ]
    ]
  structure_item (stdlib/format.ml[1198,39652+0]..[1204,39797+40])
    Pstr_value Rec
    [
      <def>
        pattern (stdlib/format.ml[1198,39652+8]..[1198,39652+23])
          Ppat_var "pp_print_seq_in" (stdlib/format.ml[1198,39652+8]..[1198,39652+23])
        expression (stdlib/format.ml[1198,39652+24]..[1204,39797+40]) ghost
          Pexp_fun
          Labelled "pp_sep"
          None
          pattern (stdlib/format.ml[1198,39652+25]..[1198,39652+31])
            Ppat_var "pp_sep" (stdlib/format.ml[1198,39652+25]..[1198,39652+31])
          expression (stdlib/format.ml[1198,39652+32]..[1204,39797+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1198,39652+32]..[1198,39652+36])
              Ppat_var "pp_v" (stdlib/format.ml[1198,39652+32]..[1198,39652+36])
            expression (stdlib/format.ml[1198,39652+37]..[1204,39797+40]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[1198,39652+37]..[1198,39652+40])
                Ppat_var "ppf" (stdlib/format.ml[1198,39652+37]..[1198,39652+40])
              expression (stdlib/format.ml[1198,39652+41]..[1204,39797+40]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (stdlib/format.ml[1198,39652+41]..[1198,39652+44])
                  Ppat_var "seq" (stdlib/format.ml[1198,39652+41]..[1198,39652+44])
                expression (stdlib/format.ml[1199,39699+2]..[1204,39797+40])
                  Pexp_match
                  expression (stdlib/format.ml[1199,39699+8]..[1199,39699+14])
                    Pexp_apply
                    expression (stdlib/format.ml[1199,39699+8]..[1199,39699+11])
                      Pexp_ident "seq" (stdlib/format.ml[1199,39699+8]..[1199,39699+11])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1199,39699+12]..[1199,39699+14])
                          Pexp_construct "()" (stdlib/format.ml[1199,39699+12]..[1199,39699+14])
                          None
                    ]
                  [
                    <case>
                      pattern (stdlib/format.ml[1200,39719+4]..[1200,39719+11])
                        Ppat_construct "Seq.Nil" (stdlib/format.ml[1200,39719+4]..[1200,39719+11])
                        None
                      expression (stdlib/format.ml[1200,39719+15]..[1200,39719+17])
                        Pexp_construct "()" (stdlib/format.ml[1200,39719+15]..[1200,39719+17])
                        None
                    <case>
                      pattern (stdlib/format.ml[1201,39737+4]..[1201,39737+21])
                        Ppat_construct "Seq.Cons" (stdlib/format.ml[1201,39737+4]..[1201,39737+12])
                        Some
                          []
                          pattern (stdlib/format.ml[1201,39737+13]..[1201,39737+21])
                            Ppat_tuple
                            [
                              pattern (stdlib/format.ml[1201,39737+14]..[1201,39737+15])
                                Ppat_var "v" (stdlib/format.ml[1201,39737+14]..[1201,39737+15])
                              pattern (stdlib/format.ml[1201,39737+17]..[1201,39737+20])
                                Ppat_var "seq" (stdlib/format.ml[1201,39737+17]..[1201,39737+20])
                            ]
                      expression (stdlib/format.ml[1202,39762+4]..[1204,39797+40])
                        Pexp_sequence
                        expression (stdlib/format.ml[1202,39762+4]..[1202,39762+17])
                          Pexp_apply
                          expression (stdlib/format.ml[1202,39762+4]..[1202,39762+10])
                            Pexp_ident "pp_sep" (stdlib/format.ml[1202,39762+4]..[1202,39762+10])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1202,39762+11]..[1202,39762+14])
                                Pexp_ident "ppf" (stdlib/format.ml[1202,39762+11]..[1202,39762+14])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1202,39762+15]..[1202,39762+17])
                                Pexp_construct "()" (stdlib/format.ml[1202,39762+15]..[1202,39762+17])
                                None
                          ]
                        expression (stdlib/format.ml[1203,39781+4]..[1204,39797+40])
                          Pexp_sequence
                          expression (stdlib/format.ml[1203,39781+4]..[1203,39781+14])
                            Pexp_apply
                            expression (stdlib/format.ml[1203,39781+4]..[1203,39781+8])
                              Pexp_ident "pp_v" (stdlib/format.ml[1203,39781+4]..[1203,39781+8])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1203,39781+9]..[1203,39781+12])
                                  Pexp_ident "ppf" (stdlib/format.ml[1203,39781+9]..[1203,39781+12])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1203,39781+13]..[1203,39781+14])
                                  Pexp_ident "v" (stdlib/format.ml[1203,39781+13]..[1203,39781+14])
                            ]
                          expression (stdlib/format.ml[1204,39797+4]..[1204,39797+40])
                            Pexp_apply
                            expression (stdlib/format.ml[1204,39797+4]..[1204,39797+19])
                              Pexp_ident "pp_print_seq_in" (stdlib/format.ml[1204,39797+4]..[1204,39797+19])
                            [
                              <arg>
                              Labelled "pp_sep"
                                expression (stdlib/format.ml[1204,39797+21]..[1204,39797+27])
                                  Pexp_ident "pp_sep" (stdlib/format.ml[1204,39797+21]..[1204,39797+27])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1204,39797+28]..[1204,39797+32])
                                  Pexp_ident "pp_v" (stdlib/format.ml[1204,39797+28]..[1204,39797+32])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1204,39797+33]..[1204,39797+36])
                                  Pexp_ident "ppf" (stdlib/format.ml[1204,39797+33]..[1204,39797+36])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1204,39797+37]..[1204,39797+40])
                                  Pexp_ident "seq" (stdlib/format.ml[1204,39797+37]..[1204,39797+40])
                            ]
                  ]
    ]
  structure_item (stdlib/format.ml[1206,39839+0]..[1211,39975+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1206,39839+4]..[1206,39839+16])
          Ppat_var "pp_print_seq" (stdlib/format.ml[1206,39839+4]..[1206,39839+16])
        expression (stdlib/format.ml[1206,39839+17]..[1211,39975+40]) ghost
          Pexp_fun
          Optional "pp_sep"
          Some
            expression (stdlib/format.ml[1206,39839+28]..[1206,39839+40])
              Pexp_ident "pp_print_cut" (stdlib/format.ml[1206,39839+28]..[1206,39839+40])
          pattern (stdlib/format.ml[1206,39839+19]..[1206,39839+25])
            Ppat_var "pp_sep" (stdlib/format.ml[1206,39839+19]..[1206,39839+25])
          expression (stdlib/format.ml[1206,39839+42]..[1211,39975+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1206,39839+42]..[1206,39839+46])
              Ppat_var "pp_v" (stdlib/format.ml[1206,39839+42]..[1206,39839+46])
            expression (stdlib/format.ml[1206,39839+47]..[1211,39975+40]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[1206,39839+47]..[1206,39839+50])
                Ppat_var "ppf" (stdlib/format.ml[1206,39839+47]..[1206,39839+50])
              expression (stdlib/format.ml[1206,39839+51]..[1211,39975+40]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (stdlib/format.ml[1206,39839+51]..[1206,39839+54])
                  Ppat_var "seq" (stdlib/format.ml[1206,39839+51]..[1206,39839+54])
                expression (stdlib/format.ml[1207,39896+2]..[1211,39975+40])
                  Pexp_match
                  expression (stdlib/format.ml[1207,39896+8]..[1207,39896+14])
                    Pexp_apply
                    expression (stdlib/format.ml[1207,39896+8]..[1207,39896+11])
                      Pexp_ident "seq" (stdlib/format.ml[1207,39896+8]..[1207,39896+11])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1207,39896+12]..[1207,39896+14])
                          Pexp_construct "()" (stdlib/format.ml[1207,39896+12]..[1207,39896+14])
                          None
                    ]
                  [
                    <case>
                      pattern (stdlib/format.ml[1208,39916+4]..[1208,39916+11])
                        Ppat_construct "Seq.Nil" (stdlib/format.ml[1208,39916+4]..[1208,39916+11])
                        None
                      expression (stdlib/format.ml[1208,39916+15]..[1208,39916+17])
                        Pexp_construct "()" (stdlib/format.ml[1208,39916+15]..[1208,39916+17])
                        None
                    <case>
                      pattern (stdlib/format.ml[1209,39934+4]..[1209,39934+21])
                        Ppat_construct "Seq.Cons" (stdlib/format.ml[1209,39934+4]..[1209,39934+12])
                        Some
                          []
                          pattern (stdlib/format.ml[1209,39934+13]..[1209,39934+21])
                            Ppat_tuple
                            [
                              pattern (stdlib/format.ml[1209,39934+14]..[1209,39934+15])
                                Ppat_var "v" (stdlib/format.ml[1209,39934+14]..[1209,39934+15])
                              pattern (stdlib/format.ml[1209,39934+17]..[1209,39934+20])
                                Ppat_var "seq" (stdlib/format.ml[1209,39934+17]..[1209,39934+20])
                            ]
                      expression (stdlib/format.ml[1210,39959+4]..[1211,39975+40])
                        Pexp_sequence
                        expression (stdlib/format.ml[1210,39959+4]..[1210,39959+14])
                          Pexp_apply
                          expression (stdlib/format.ml[1210,39959+4]..[1210,39959+8])
                            Pexp_ident "pp_v" (stdlib/format.ml[1210,39959+4]..[1210,39959+8])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1210,39959+9]..[1210,39959+12])
                                Pexp_ident "ppf" (stdlib/format.ml[1210,39959+9]..[1210,39959+12])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1210,39959+13]..[1210,39959+14])
                                Pexp_ident "v" (stdlib/format.ml[1210,39959+13]..[1210,39959+14])
                          ]
                        expression (stdlib/format.ml[1211,39975+4]..[1211,39975+40])
                          Pexp_apply
                          expression (stdlib/format.ml[1211,39975+4]..[1211,39975+19])
                            Pexp_ident "pp_print_seq_in" (stdlib/format.ml[1211,39975+4]..[1211,39975+19])
                          [
                            <arg>
                            Labelled "pp_sep"
                              expression (stdlib/format.ml[1211,39975+21]..[1211,39975+27])
                                Pexp_ident "pp_sep" (stdlib/format.ml[1211,39975+21]..[1211,39975+27])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1211,39975+28]..[1211,39975+32])
                                Pexp_ident "pp_v" (stdlib/format.ml[1211,39975+28]..[1211,39975+32])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1211,39975+33]..[1211,39975+36])
                                Pexp_ident "ppf" (stdlib/format.ml[1211,39975+33]..[1211,39975+36])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1211,39975+37]..[1211,39975+40])
                                Pexp_ident "seq" (stdlib/format.ml[1211,39975+37]..[1211,39975+40])
                          ]
                  ]
    ]
  structure_item (stdlib/format.ml[1214,40051+0]..[1233,40584+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1214,40051+4]..[1214,40051+17])
          Ppat_var "pp_print_text" (stdlib/format.ml[1214,40051+4]..[1214,40051+17])
        expression (stdlib/format.ml[1214,40051+18]..[1233,40584+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1214,40051+18]..[1214,40051+21])
            Ppat_var "ppf" (stdlib/format.ml[1214,40051+18]..[1214,40051+21])
          expression (stdlib/format.ml[1214,40051+22]..[1233,40584+31]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1214,40051+22]..[1214,40051+23])
              Ppat_var "s" (stdlib/format.ml[1214,40051+22]..[1214,40051+23])
            expression (stdlib/format.ml[1215,40077+2]..[1233,40584+31])
              Pexp_let Nonrec
              [
                <def>
                  pattern (stdlib/format.ml[1215,40077+6]..[1215,40077+9])
                    Ppat_var "len" (stdlib/format.ml[1215,40077+6]..[1215,40077+9])
                  expression (stdlib/format.ml[1215,40077+12]..[1215,40077+27])
                    Pexp_apply
                    expression (stdlib/format.ml[1215,40077+12]..[1215,40077+25])
                      Pexp_ident "String.length" (stdlib/format.ml[1215,40077+12]..[1215,40077+25])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1215,40077+26]..[1215,40077+27])
                          Pexp_ident "s" (stdlib/format.ml[1215,40077+26]..[1215,40077+27])
                    ]
              ]
              expression (stdlib/format.ml[1216,40108+2]..[1233,40584+31])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/format.ml[1216,40108+6]..[1216,40108+10])
                      Ppat_var "left" (stdlib/format.ml[1216,40108+6]..[1216,40108+10])
                    expression (stdlib/format.ml[1216,40108+13]..[1216,40108+18])
                      Pexp_apply
                      expression (stdlib/format.ml[1216,40108+13]..[1216,40108+16])
                        Pexp_ident "ref" (stdlib/format.ml[1216,40108+13]..[1216,40108+16])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1216,40108+17]..[1216,40108+18])
                            Pexp_constant PConst_int (0,None)
                      ]
                ]
                expression (stdlib/format.ml[1217,40130+2]..[1233,40584+31])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (stdlib/format.ml[1217,40130+6]..[1217,40130+11])
                        Ppat_var "right" (stdlib/format.ml[1217,40130+6]..[1217,40130+11])
                      expression (stdlib/format.ml[1217,40130+14]..[1217,40130+19])
                        Pexp_apply
                        expression (stdlib/format.ml[1217,40130+14]..[1217,40130+17])
                          Pexp_ident "ref" (stdlib/format.ml[1217,40130+14]..[1217,40130+17])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[1217,40130+18]..[1217,40130+19])
                              Pexp_constant PConst_int (0,None)
                        ]
                  ]
                  expression (stdlib/format.ml[1218,40153+2]..[1233,40584+31])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/format.ml[1218,40153+6]..[1218,40153+11])
                          Ppat_var "flush" (stdlib/format.ml[1218,40153+6]..[1218,40153+11])
                        expression (stdlib/format.ml[1218,40153+12]..[1220,40233+31]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (stdlib/format.ml[1218,40153+12]..[1218,40153+14])
                            Ppat_construct "()" (stdlib/format.ml[1218,40153+12]..[1218,40153+14])
                            None
                          expression (stdlib/format.ml[1219,40170+4]..[1220,40233+31])
                            Pexp_sequence
                            expression (stdlib/format.ml[1219,40170+4]..[1219,40170+61])
                              Pexp_apply
                              expression (stdlib/format.ml[1219,40170+4]..[1219,40170+19])
                                Pexp_ident "pp_print_string" (stdlib/format.ml[1219,40170+4]..[1219,40170+19])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[1219,40170+20]..[1219,40170+23])
                                    Pexp_ident "ppf" (stdlib/format.ml[1219,40170+20]..[1219,40170+23])
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[1219,40170+24]..[1219,40170+61])
                                    Pexp_apply
                                    expression (stdlib/format.ml[1219,40170+25]..[1219,40170+35])
                                      Pexp_ident "String.sub" (stdlib/format.ml[1219,40170+25]..[1219,40170+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[1219,40170+36]..[1219,40170+37])
                                          Pexp_ident "s" (stdlib/format.ml[1219,40170+36]..[1219,40170+37])
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[1219,40170+38]..[1219,40170+43])
                                          Pexp_apply
                                          expression (stdlib/format.ml[1219,40170+38]..[1219,40170+39])
                                            Pexp_ident "!" (stdlib/format.ml[1219,40170+38]..[1219,40170+39])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/format.ml[1219,40170+39]..[1219,40170+43])
                                                Pexp_ident "left" (stdlib/format.ml[1219,40170+39]..[1219,40170+43])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (stdlib/format.ml[1219,40170+44]..[1219,40170+60])
                                          Pexp_apply
                                          expression (stdlib/format.ml[1219,40170+52]..[1219,40170+53])
                                            Pexp_ident "-" (stdlib/format.ml[1219,40170+52]..[1219,40170+53])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/format.ml[1219,40170+45]..[1219,40170+51])
                                                Pexp_apply
                                                expression (stdlib/format.ml[1219,40170+45]..[1219,40170+46])
                                                  Pexp_ident "!" (stdlib/format.ml[1219,40170+45]..[1219,40170+46])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (stdlib/format.ml[1219,40170+46]..[1219,40170+51])
                                                      Pexp_ident "right" (stdlib/format.ml[1219,40170+46]..[1219,40170+51])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (stdlib/format.ml[1219,40170+54]..[1219,40170+59])
                                                Pexp_apply
                                                expression (stdlib/format.ml[1219,40170+54]..[1219,40170+55])
                                                  Pexp_ident "!" (stdlib/format.ml[1219,40170+54]..[1219,40170+55])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (stdlib/format.ml[1219,40170+55]..[1219,40170+59])
                                                      Pexp_ident "left" (stdlib/format.ml[1219,40170+55]..[1219,40170+59])
                                                ]
                                          ]
                                    ]
                              ]
                            expression (stdlib/format.ml[1220,40233+4]..[1220,40233+31])
                              Pexp_sequence
                              expression (stdlib/format.ml[1220,40233+4]..[1220,40233+14])
                                Pexp_apply
                                expression (stdlib/format.ml[1220,40233+4]..[1220,40233+8])
                                  Pexp_ident "incr" (stdlib/format.ml[1220,40233+4]..[1220,40233+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[1220,40233+9]..[1220,40233+14])
                                      Pexp_ident "right" (stdlib/format.ml[1220,40233+9]..[1220,40233+14])
                                ]
                              expression (stdlib/format.ml[1220,40233+16]..[1220,40233+30])
                                Pexp_apply
                                expression (stdlib/format.ml[1220,40233+21]..[1220,40233+23])
                                  Pexp_ident ":=" (stdlib/format.ml[1220,40233+21]..[1220,40233+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[1220,40233+16]..[1220,40233+20])
                                      Pexp_ident "left" (stdlib/format.ml[1220,40233+16]..[1220,40233+20])
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[1220,40233+24]..[1220,40233+30])
                                      Pexp_apply
                                      expression (stdlib/format.ml[1220,40233+24]..[1220,40233+25])
                                        Pexp_ident "!" (stdlib/format.ml[1220,40233+24]..[1220,40233+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/format.ml[1220,40233+25]..[1220,40233+30])
                                            Pexp_ident "right" (stdlib/format.ml[1220,40233+25]..[1220,40233+30])
                                      ]
                                ]
                    ]
                    expression (stdlib/format.ml[1222,40270+2]..[1233,40584+31])
                      Pexp_sequence
                      expression (stdlib/format.ml[1222,40270+2]..[1232,40576+6])
                        Pexp_while
                        expression (stdlib/format.ml[1222,40270+8]..[1222,40270+23])
                          Pexp_apply
                          expression (stdlib/format.ml[1222,40270+16]..[1222,40270+18])
                            Pexp_ident "<>" (stdlib/format.ml[1222,40270+16]..[1222,40270+18])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1222,40270+9]..[1222,40270+15])
                                Pexp_apply
                                expression (stdlib/format.ml[1222,40270+9]..[1222,40270+10])
                                  Pexp_ident "!" (stdlib/format.ml[1222,40270+9]..[1222,40270+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[1222,40270+10]..[1222,40270+15])
                                      Pexp_ident "right" (stdlib/format.ml[1222,40270+10]..[1222,40270+15])
                                ]
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1222,40270+19]..[1222,40270+22])
                                Pexp_ident "len" (stdlib/format.ml[1222,40270+19]..[1222,40270+22])
                          ]
                        expression (stdlib/format.ml[1223,40297+4]..[1231,40552+23])
                          Pexp_match
                          expression (stdlib/format.ml[1223,40297+10]..[1223,40297+20])
                            Pexp_apply
                            expression (stdlib/format.ml[1223,40297+10]..[1223,40297+20]) ghost
                              Pexp_ident "String.get" (stdlib/format.ml[1223,40297+10]..[1223,40297+20]) ghost
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1223,40297+10]..[1223,40297+11])
                                  Pexp_ident "s" (stdlib/format.ml[1223,40297+10]..[1223,40297+11])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1223,40297+13]..[1223,40297+19])
                                  Pexp_apply
                                  expression (stdlib/format.ml[1223,40297+13]..[1223,40297+14])
                                    Pexp_ident "!" (stdlib/format.ml[1223,40297+13]..[1223,40297+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1223,40297+14]..[1223,40297+19])
                                        Pexp_ident "right" (stdlib/format.ml[1223,40297+14]..[1223,40297+19])
                                  ]
                            ]
                          [
                            <case>
                              pattern (stdlib/format.ml[1224,40323+8]..[1224,40323+12])
                                Ppat_constant PConst_char 0a
                              expression (stdlib/format.ml[1225,40339+8]..[1226,40357+31])
                                Pexp_sequence
                                expression (stdlib/format.ml[1225,40339+8]..[1225,40339+16])
                                  Pexp_apply
                                  expression (stdlib/format.ml[1225,40339+8]..[1225,40339+13])
                                    Pexp_ident "flush" (stdlib/format.ml[1225,40339+8]..[1225,40339+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1225,40339+14]..[1225,40339+16])
                                        Pexp_construct "()" (stdlib/format.ml[1225,40339+14]..[1225,40339+16])
                                        None
                                  ]
                                expression (stdlib/format.ml[1226,40357+8]..[1226,40357+31])
                                  Pexp_apply
                                  expression (stdlib/format.ml[1226,40357+8]..[1226,40357+24])
                                    Pexp_ident "pp_force_newline" (stdlib/format.ml[1226,40357+8]..[1226,40357+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1226,40357+25]..[1226,40357+28])
                                        Pexp_ident "ppf" (stdlib/format.ml[1226,40357+25]..[1226,40357+28])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1226,40357+29]..[1226,40357+31])
                                        Pexp_construct "()" (stdlib/format.ml[1226,40357+29]..[1226,40357+31])
                                        None
                                  ]
                            <case>
                              pattern (stdlib/format.ml[1227,40389+8]..[1227,40389+11])
                                Ppat_constant PConst_char 20
                              expression (stdlib/format.ml[1228,40404+8]..[1228,40404+39])
                                Pexp_sequence
                                expression (stdlib/format.ml[1228,40404+8]..[1228,40404+16])
                                  Pexp_apply
                                  expression (stdlib/format.ml[1228,40404+8]..[1228,40404+13])
                                    Pexp_ident "flush" (stdlib/format.ml[1228,40404+8]..[1228,40404+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1228,40404+14]..[1228,40404+16])
                                        Pexp_construct "()" (stdlib/format.ml[1228,40404+14]..[1228,40404+16])
                                        None
                                  ]
                                expression (stdlib/format.ml[1228,40404+18]..[1228,40404+39])
                                  Pexp_apply
                                  expression (stdlib/format.ml[1228,40404+18]..[1228,40404+32])
                                    Pexp_ident "pp_print_space" (stdlib/format.ml[1228,40404+18]..[1228,40404+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1228,40404+33]..[1228,40404+36])
                                        Pexp_ident "ppf" (stdlib/format.ml[1228,40404+33]..[1228,40404+36])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1228,40404+37]..[1228,40404+39])
                                        Pexp_construct "()" (stdlib/format.ml[1228,40404+37]..[1228,40404+39])
                                        None
                                  ]
                            <case>
                              pattern (stdlib/format.ml[1231,40552+8]..[1231,40552+9])
                                Ppat_any
                              expression (stdlib/format.ml[1231,40552+13]..[1231,40552+23])
                                Pexp_apply
                                expression (stdlib/format.ml[1231,40552+13]..[1231,40552+17])
                                  Pexp_ident "incr" (stdlib/format.ml[1231,40552+13]..[1231,40552+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[1231,40552+18]..[1231,40552+23])
                                      Pexp_ident "right" (stdlib/format.ml[1231,40552+18]..[1231,40552+23])
                                ]
                          ]
                      expression (stdlib/format.ml[1233,40584+2]..[1233,40584+31])
                        Pexp_ifthenelse
                        expression (stdlib/format.ml[1233,40584+5]..[1233,40584+17])
                          Pexp_apply
                          expression (stdlib/format.ml[1233,40584+11]..[1233,40584+13])
                            Pexp_ident "<>" (stdlib/format.ml[1233,40584+11]..[1233,40584+13])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1233,40584+5]..[1233,40584+10])
                                Pexp_apply
                                expression (stdlib/format.ml[1233,40584+5]..[1233,40584+6])
                                  Pexp_ident "!" (stdlib/format.ml[1233,40584+5]..[1233,40584+6])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[1233,40584+6]..[1233,40584+10])
                                      Pexp_ident "left" (stdlib/format.ml[1233,40584+6]..[1233,40584+10])
                                ]
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1233,40584+14]..[1233,40584+17])
                                Pexp_ident "len" (stdlib/format.ml[1233,40584+14]..[1233,40584+17])
                          ]
                        expression (stdlib/format.ml[1233,40584+23]..[1233,40584+31])
                          Pexp_apply
                          expression (stdlib/format.ml[1233,40584+23]..[1233,40584+28])
                            Pexp_ident "flush" (stdlib/format.ml[1233,40584+23]..[1233,40584+28])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1233,40584+29]..[1233,40584+31])
                                Pexp_construct "()" (stdlib/format.ml[1233,40584+29]..[1233,40584+31])
                                None
                          ]
                        None
    ]
  structure_item (stdlib/format.ml[1235,40617+0]..[1237,40704+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1235,40617+4]..[1235,40617+19])
          Ppat_var "pp_print_option" (stdlib/format.ml[1235,40617+4]..[1235,40617+19])
        expression (stdlib/format.ml[1235,40617+20]..[1237,40704+22]) ghost
          Pexp_fun
          Optional "none"
          Some
            expression (stdlib/format.ml[1235,40617+29]..[1235,40617+43])
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[1235,40617+33]..[1235,40617+34])
                Ppat_any
              expression (stdlib/format.ml[1235,40617+35]..[1235,40617+43]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (stdlib/format.ml[1235,40617+35]..[1235,40617+37])
                  Ppat_construct "()" (stdlib/format.ml[1235,40617+35]..[1235,40617+37])
                  None
                expression (stdlib/format.ml[1235,40617+41]..[1235,40617+43])
                  Pexp_construct "()" (stdlib/format.ml[1235,40617+41]..[1235,40617+43])
                  None
          pattern (stdlib/format.ml[1235,40617+22]..[1235,40617+26])
            Ppat_var "none" (stdlib/format.ml[1235,40617+22]..[1235,40617+26])
          expression (stdlib/format.ml[1235,40617+45]..[1237,40704+22]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1235,40617+45]..[1235,40617+49])
              Ppat_var "pp_v" (stdlib/format.ml[1235,40617+45]..[1235,40617+49])
            expression (stdlib/format.ml[1235,40617+50]..[1237,40704+22]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[1235,40617+50]..[1235,40617+53])
                Ppat_var "ppf" (stdlib/format.ml[1235,40617+50]..[1235,40617+53])
              expression (stdlib/format.ml[1235,40617+56]..[1237,40704+22])
                Pexp_function
                [
                  <case>
                    pattern (stdlib/format.ml[1236,40682+2]..[1236,40682+6])
                      Ppat_construct "None" (stdlib/format.ml[1236,40682+2]..[1236,40682+6])
                      None
                    expression (stdlib/format.ml[1236,40682+10]..[1236,40682+21])
                      Pexp_apply
                      expression (stdlib/format.ml[1236,40682+10]..[1236,40682+14])
                        Pexp_ident "none" (stdlib/format.ml[1236,40682+10]..[1236,40682+14])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1236,40682+15]..[1236,40682+18])
                            Pexp_ident "ppf" (stdlib/format.ml[1236,40682+15]..[1236,40682+18])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1236,40682+19]..[1236,40682+21])
                            Pexp_construct "()" (stdlib/format.ml[1236,40682+19]..[1236,40682+21])
                            None
                      ]
                  <case>
                    pattern (stdlib/format.ml[1237,40704+2]..[1237,40704+8])
                      Ppat_construct "Some" (stdlib/format.ml[1237,40704+2]..[1237,40704+6])
                      Some
                        []
                        pattern (stdlib/format.ml[1237,40704+7]..[1237,40704+8])
                          Ppat_var "v" (stdlib/format.ml[1237,40704+7]..[1237,40704+8])
                    expression (stdlib/format.ml[1237,40704+12]..[1237,40704+22])
                      Pexp_apply
                      expression (stdlib/format.ml[1237,40704+12]..[1237,40704+16])
                        Pexp_ident "pp_v" (stdlib/format.ml[1237,40704+12]..[1237,40704+16])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1237,40704+17]..[1237,40704+20])
                            Pexp_ident "ppf" (stdlib/format.ml[1237,40704+17]..[1237,40704+20])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1237,40704+21]..[1237,40704+22])
                            Pexp_ident "v" (stdlib/format.ml[1237,40704+21]..[1237,40704+22])
                      ]
                ]
    ]
  structure_item (stdlib/format.ml[1239,40728+0]..[1241,40793+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1239,40728+4]..[1239,40728+19])
          Ppat_var "pp_print_result" (stdlib/format.ml[1239,40728+4]..[1239,40728+19])
        expression (stdlib/format.ml[1239,40728+20]..[1241,40793+24]) ghost
          Pexp_fun
          Labelled "ok"
          None
          pattern (stdlib/format.ml[1239,40728+21]..[1239,40728+23])
            Ppat_var "ok" (stdlib/format.ml[1239,40728+21]..[1239,40728+23])
          expression (stdlib/format.ml[1239,40728+24]..[1241,40793+24]) ghost
            Pexp_fun
            Labelled "error"
            None
            pattern (stdlib/format.ml[1239,40728+25]..[1239,40728+30])
              Ppat_var "error" (stdlib/format.ml[1239,40728+25]..[1239,40728+30])
            expression (stdlib/format.ml[1239,40728+31]..[1241,40793+24]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[1239,40728+31]..[1239,40728+34])
                Ppat_var "ppf" (stdlib/format.ml[1239,40728+31]..[1239,40728+34])
              expression (stdlib/format.ml[1239,40728+37]..[1241,40793+24])
                Pexp_function
                [
                  <case>
                    pattern (stdlib/format.ml[1240,40774+2]..[1240,40774+6])
                      Ppat_construct "Ok" (stdlib/format.ml[1240,40774+2]..[1240,40774+4])
                      Some
                        []
                        pattern (stdlib/format.ml[1240,40774+5]..[1240,40774+6])
                          Ppat_var "v" (stdlib/format.ml[1240,40774+5]..[1240,40774+6])
                    expression (stdlib/format.ml[1240,40774+10]..[1240,40774+18])
                      Pexp_apply
                      expression (stdlib/format.ml[1240,40774+10]..[1240,40774+12])
                        Pexp_ident "ok" (stdlib/format.ml[1240,40774+10]..[1240,40774+12])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1240,40774+13]..[1240,40774+16])
                            Pexp_ident "ppf" (stdlib/format.ml[1240,40774+13]..[1240,40774+16])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1240,40774+17]..[1240,40774+18])
                            Pexp_ident "v" (stdlib/format.ml[1240,40774+17]..[1240,40774+18])
                      ]
                  <case>
                    pattern (stdlib/format.ml[1241,40793+2]..[1241,40793+9])
                      Ppat_construct "Error" (stdlib/format.ml[1241,40793+2]..[1241,40793+7])
                      Some
                        []
                        pattern (stdlib/format.ml[1241,40793+8]..[1241,40793+9])
                          Ppat_var "e" (stdlib/format.ml[1241,40793+8]..[1241,40793+9])
                    expression (stdlib/format.ml[1241,40793+13]..[1241,40793+24])
                      Pexp_apply
                      expression (stdlib/format.ml[1241,40793+13]..[1241,40793+18])
                        Pexp_ident "error" (stdlib/format.ml[1241,40793+13]..[1241,40793+18])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1241,40793+19]..[1241,40793+22])
                            Pexp_ident "ppf" (stdlib/format.ml[1241,40793+19]..[1241,40793+22])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1241,40793+23]..[1241,40793+24])
                            Pexp_ident "e" (stdlib/format.ml[1241,40793+23]..[1241,40793+24])
                      ]
                ]
    ]
  structure_item (stdlib/format.ml[1243,40819+0]..[1245,40897+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1243,40819+4]..[1243,40819+19])
          Ppat_var "pp_print_either" (stdlib/format.ml[1243,40819+4]..[1243,40819+19])
        expression (stdlib/format.ml[1243,40819+20]..[1245,40897+31]) ghost
          Pexp_fun
          Labelled "left"
          None
          pattern (stdlib/format.ml[1243,40819+21]..[1243,40819+25])
            Ppat_var "left" (stdlib/format.ml[1243,40819+21]..[1243,40819+25])
          expression (stdlib/format.ml[1243,40819+26]..[1245,40897+31]) ghost
            Pexp_fun
            Labelled "right"
            None
            pattern (stdlib/format.ml[1243,40819+27]..[1243,40819+32])
              Ppat_var "right" (stdlib/format.ml[1243,40819+27]..[1243,40819+32])
            expression (stdlib/format.ml[1243,40819+33]..[1245,40897+31]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[1243,40819+33]..[1243,40819+36])
                Ppat_var "ppf" (stdlib/format.ml[1243,40819+33]..[1243,40819+36])
              expression (stdlib/format.ml[1243,40819+39]..[1245,40897+31])
                Pexp_function
                [
                  <case>
                    pattern (stdlib/format.ml[1244,40867+2]..[1244,40867+15])
                      Ppat_construct "Either.Left" (stdlib/format.ml[1244,40867+2]..[1244,40867+13])
                      Some
                        []
                        pattern (stdlib/format.ml[1244,40867+14]..[1244,40867+15])
                          Ppat_var "l" (stdlib/format.ml[1244,40867+14]..[1244,40867+15])
                    expression (stdlib/format.ml[1244,40867+19]..[1244,40867+29])
                      Pexp_apply
                      expression (stdlib/format.ml[1244,40867+19]..[1244,40867+23])
                        Pexp_ident "left" (stdlib/format.ml[1244,40867+19]..[1244,40867+23])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1244,40867+24]..[1244,40867+27])
                            Pexp_ident "ppf" (stdlib/format.ml[1244,40867+24]..[1244,40867+27])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1244,40867+28]..[1244,40867+29])
                            Pexp_ident "l" (stdlib/format.ml[1244,40867+28]..[1244,40867+29])
                      ]
                  <case>
                    pattern (stdlib/format.ml[1245,40897+2]..[1245,40897+16])
                      Ppat_construct "Either.Right" (stdlib/format.ml[1245,40897+2]..[1245,40897+14])
                      Some
                        []
                        pattern (stdlib/format.ml[1245,40897+15]..[1245,40897+16])
                          Ppat_var "r" (stdlib/format.ml[1245,40897+15]..[1245,40897+16])
                    expression (stdlib/format.ml[1245,40897+20]..[1245,40897+31])
                      Pexp_apply
                      expression (stdlib/format.ml[1245,40897+20]..[1245,40897+25])
                        Pexp_ident "right" (stdlib/format.ml[1245,40897+20]..[1245,40897+25])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1245,40897+26]..[1245,40897+29])
                            Pexp_ident "ppf" (stdlib/format.ml[1245,40897+26]..[1245,40897+29])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1245,40897+30]..[1245,40897+31])
                            Pexp_ident "r" (stdlib/format.ml[1245,40897+30]..[1245,40897+31])
                      ]
                ]
    ]
  structure_item (stdlib/format.ml[1249,40997+0]..[1256,41219+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1249,40997+4]..[1249,40997+15])
          Ppat_var "compute_tag" (stdlib/format.ml[1249,40997+4]..[1249,40997+15])
        expression (stdlib/format.ml[1249,40997+16]..[1256,41219+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1249,40997+16]..[1249,40997+22])
            Ppat_var "output" (stdlib/format.ml[1249,40997+16]..[1249,40997+22])
          expression (stdlib/format.ml[1249,40997+23]..[1256,41219+33]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1249,40997+23]..[1249,40997+30])
              Ppat_var "tag_acc" (stdlib/format.ml[1249,40997+23]..[1249,40997+30])
            expression (stdlib/format.ml[1250,41030+2]..[1256,41219+33])
              Pexp_let Nonrec
              [
                <def>
                  pattern (stdlib/format.ml[1250,41030+6]..[1250,41030+9])
                    Ppat_var "buf" (stdlib/format.ml[1250,41030+6]..[1250,41030+9])
                  expression (stdlib/format.ml[1250,41030+12]..[1250,41030+28])
                    Pexp_apply
                    expression (stdlib/format.ml[1250,41030+12]..[1250,41030+25])
                      Pexp_ident "Buffer.create" (stdlib/format.ml[1250,41030+12]..[1250,41030+25])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1250,41030+26]..[1250,41030+28])
                          Pexp_constant PConst_int (16,None)
                    ]
              ]
              expression (stdlib/format.ml[1251,41062+2]..[1256,41219+33])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/format.ml[1251,41062+6]..[1251,41062+9])
                      Ppat_var "ppf" (stdlib/format.ml[1251,41062+6]..[1251,41062+9])
                    expression (stdlib/format.ml[1251,41062+12]..[1251,41062+35])
                      Pexp_apply
                      expression (stdlib/format.ml[1251,41062+12]..[1251,41062+31])
                        Pexp_ident "formatter_of_buffer" (stdlib/format.ml[1251,41062+12]..[1251,41062+31])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1251,41062+32]..[1251,41062+35])
                            Pexp_ident "buf" (stdlib/format.ml[1251,41062+32]..[1251,41062+35])
                      ]
                ]
                expression (stdlib/format.ml[1252,41101+2]..[1256,41219+33])
                  Pexp_sequence
                  expression (stdlib/format.ml[1252,41101+2]..[1252,41101+20])
                    Pexp_apply
                    expression (stdlib/format.ml[1252,41101+2]..[1252,41101+8])
                      Pexp_ident "output" (stdlib/format.ml[1252,41101+2]..[1252,41101+8])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1252,41101+9]..[1252,41101+12])
                          Pexp_ident "ppf" (stdlib/format.ml[1252,41101+9]..[1252,41101+12])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1252,41101+13]..[1252,41101+20])
                          Pexp_ident "tag_acc" (stdlib/format.ml[1252,41101+13]..[1252,41101+20])
                    ]
                  expression (stdlib/format.ml[1253,41123+2]..[1256,41219+33])
                    Pexp_sequence
                    expression (stdlib/format.ml[1253,41123+2]..[1253,41123+23])
                      Pexp_apply
                      expression (stdlib/format.ml[1253,41123+2]..[1253,41123+16])
                        Pexp_ident "pp_print_flush" (stdlib/format.ml[1253,41123+2]..[1253,41123+16])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1253,41123+17]..[1253,41123+20])
                            Pexp_ident "ppf" (stdlib/format.ml[1253,41123+17]..[1253,41123+20])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1253,41123+21]..[1253,41123+23])
                            Pexp_construct "()" (stdlib/format.ml[1253,41123+21]..[1253,41123+23])
                            None
                      ]
                    expression (stdlib/format.ml[1254,41148+2]..[1256,41219+33])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (stdlib/format.ml[1254,41148+6]..[1254,41148+9])
                            Ppat_var "len" (stdlib/format.ml[1254,41148+6]..[1254,41148+9])
                          expression (stdlib/format.ml[1254,41148+12]..[1254,41148+29])
                            Pexp_apply
                            expression (stdlib/format.ml[1254,41148+12]..[1254,41148+25])
                              Pexp_ident "Buffer.length" (stdlib/format.ml[1254,41148+12]..[1254,41148+25])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1254,41148+26]..[1254,41148+29])
                                  Pexp_ident "buf" (stdlib/format.ml[1254,41148+26]..[1254,41148+29])
                            ]
                      ]
                      expression (stdlib/format.ml[1255,41181+2]..[1256,41219+33])
                        Pexp_ifthenelse
                        expression (stdlib/format.ml[1255,41181+5]..[1255,41181+12])
                          Pexp_apply
                          expression (stdlib/format.ml[1255,41181+9]..[1255,41181+10])
                            Pexp_ident "<" (stdlib/format.ml[1255,41181+9]..[1255,41181+10])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1255,41181+5]..[1255,41181+8])
                                Pexp_ident "len" (stdlib/format.ml[1255,41181+5]..[1255,41181+8])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1255,41181+11]..[1255,41181+12])
                                Pexp_constant PConst_int (2,None)
                          ]
                        expression (stdlib/format.ml[1255,41181+18]..[1255,41181+37])
                          Pexp_apply
                          expression (stdlib/format.ml[1255,41181+18]..[1255,41181+33])
                            Pexp_ident "Buffer.contents" (stdlib/format.ml[1255,41181+18]..[1255,41181+33])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1255,41181+34]..[1255,41181+37])
                                Pexp_ident "buf" (stdlib/format.ml[1255,41181+34]..[1255,41181+37])
                          ]
                        Some
                          expression (stdlib/format.ml[1256,41219+7]..[1256,41219+33])
                            Pexp_apply
                            expression (stdlib/format.ml[1256,41219+7]..[1256,41219+17])
                              Pexp_ident "Buffer.sub" (stdlib/format.ml[1256,41219+7]..[1256,41219+17])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1256,41219+18]..[1256,41219+21])
                                  Pexp_ident "buf" (stdlib/format.ml[1256,41219+18]..[1256,41219+21])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1256,41219+22]..[1256,41219+23])
                                  Pexp_constant PConst_int (1,None)
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1256,41219+24]..[1256,41219+33])
                                  Pexp_apply
                                  expression (stdlib/format.ml[1256,41219+29]..[1256,41219+30])
                                    Pexp_ident "-" (stdlib/format.ml[1256,41219+29]..[1256,41219+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1256,41219+25]..[1256,41219+28])
                                        Pexp_ident "len" (stdlib/format.ml[1256,41219+25]..[1256,41219+28])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1256,41219+31]..[1256,41219+32])
                                        Pexp_constant PConst_int (2,None)
                                  ]
                            ]
    ]
  structure_item (stdlib/format.ml[1265,41476+0]..[1265,41476+29])
    Pstr_open Fresh
    module_expr (stdlib/format.ml[1265,41476+5]..[1265,41476+29])
      Pmod_ident "CamlinternalFormatBasics" (stdlib/format.ml[1265,41476+5]..[1265,41476+29])
  structure_item (stdlib/format.ml[1266,41506+0]..[1266,41506+23])
    Pstr_open Fresh
    module_expr (stdlib/format.ml[1266,41506+5]..[1266,41506+23])
      Pmod_ident "CamlinternalFormat" (stdlib/format.ml[1266,41506+5]..[1266,41506+23])
  structure_item (stdlib/format.ml[1269,41583+0]..[1279,42134+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1269,41583+4]..[1269,41583+25])
          Ppat_var "output_formatting_lit" (stdlib/format.ml[1269,41583+4]..[1269,41583+25])
        expression (stdlib/format.ml[1269,41583+26]..[1279,42134+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1269,41583+26]..[1269,41583+29])
            Ppat_var "ppf" (stdlib/format.ml[1269,41583+26]..[1269,41583+29])
          expression (stdlib/format.ml[1269,41583+30]..[1279,42134+75]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1269,41583+30]..[1269,41583+40])
              Ppat_var "fmting_lit" (stdlib/format.ml[1269,41583+30]..[1269,41583+40])
            expression (stdlib/format.ml[1269,41583+43]..[1279,42134+75])
              Pexp_match
              expression (stdlib/format.ml[1269,41583+49]..[1269,41583+59])
                Pexp_ident "fmting_lit" (stdlib/format.ml[1269,41583+49]..[1269,41583+59])
              [
                <case>
                  pattern (stdlib/format.ml[1270,41648+4]..[1270,41648+13])
                    Ppat_construct "Close_box" (stdlib/format.ml[1270,41648+4]..[1270,41648+13])
                    None
                  expression (stdlib/format.ml[1270,41648+33]..[1270,41648+52])
                    Pexp_apply
                    expression (stdlib/format.ml[1270,41648+33]..[1270,41648+45])
                      Pexp_ident "pp_close_box" (stdlib/format.ml[1270,41648+33]..[1270,41648+45])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1270,41648+46]..[1270,41648+49])
                          Pexp_ident "ppf" (stdlib/format.ml[1270,41648+46]..[1270,41648+49])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1270,41648+50]..[1270,41648+52])
                          Pexp_construct "()" (stdlib/format.ml[1270,41648+50]..[1270,41648+52])
                          None
                    ]
                <case>
                  pattern (stdlib/format.ml[1271,41701+4]..[1271,41701+13])
                    Ppat_construct "Close_tag" (stdlib/format.ml[1271,41701+4]..[1271,41701+13])
                    None
                  expression (stdlib/format.ml[1271,41701+33]..[1271,41701+52])
                    Pexp_apply
                    expression (stdlib/format.ml[1271,41701+33]..[1271,41701+45])
                      Pexp_ident "pp_close_tag" (stdlib/format.ml[1271,41701+33]..[1271,41701+45])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1271,41701+46]..[1271,41701+49])
                          Pexp_ident "ppf" (stdlib/format.ml[1271,41701+46]..[1271,41701+49])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1271,41701+50]..[1271,41701+52])
                          Pexp_construct "()" (stdlib/format.ml[1271,41701+50]..[1271,41701+52])
                          None
                    ]
                <case>
                  pattern (stdlib/format.ml[1272,41754+4]..[1272,41754+28])
                    Ppat_construct "Break" (stdlib/format.ml[1272,41754+4]..[1272,41754+9])
                    Some
                      []
                      pattern (stdlib/format.ml[1272,41754+10]..[1272,41754+28])
                        Ppat_tuple
                        [
                          pattern (stdlib/format.ml[1272,41754+11]..[1272,41754+12])
                            Ppat_any
                          pattern (stdlib/format.ml[1272,41754+14]..[1272,41754+19])
                            Ppat_var "width" (stdlib/format.ml[1272,41754+14]..[1272,41754+19])
                          pattern (stdlib/format.ml[1272,41754+21]..[1272,41754+27])
                            Ppat_var "offset" (stdlib/format.ml[1272,41754+21]..[1272,41754+27])
                        ]
                  expression (stdlib/format.ml[1272,41754+33]..[1272,41754+64])
                    Pexp_apply
                    expression (stdlib/format.ml[1272,41754+33]..[1272,41754+47])
                      Pexp_ident "pp_print_break" (stdlib/format.ml[1272,41754+33]..[1272,41754+47])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1272,41754+48]..[1272,41754+51])
                          Pexp_ident "ppf" (stdlib/format.ml[1272,41754+48]..[1272,41754+51])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1272,41754+52]..[1272,41754+57])
                          Pexp_ident "width" (stdlib/format.ml[1272,41754+52]..[1272,41754+57])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1272,41754+58]..[1272,41754+64])
                          Pexp_ident "offset" (stdlib/format.ml[1272,41754+58]..[1272,41754+64])
                    ]
                <case>
                  pattern (stdlib/format.ml[1273,41819+4]..[1273,41819+10])
                    Ppat_construct "FFlush" (stdlib/format.ml[1273,41819+4]..[1273,41819+10])
                    None
                  expression (stdlib/format.ml[1273,41819+33]..[1273,41819+54])
                    Pexp_apply
                    expression (stdlib/format.ml[1273,41819+33]..[1273,41819+47])
                      Pexp_ident "pp_print_flush" (stdlib/format.ml[1273,41819+33]..[1273,41819+47])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1273,41819+48]..[1273,41819+51])
                          Pexp_ident "ppf" (stdlib/format.ml[1273,41819+48]..[1273,41819+51])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1273,41819+52]..[1273,41819+54])
                          Pexp_construct "()" (stdlib/format.ml[1273,41819+52]..[1273,41819+54])
                          None
                    ]
                <case>
                  pattern (stdlib/format.ml[1274,41874+4]..[1274,41874+17])
                    Ppat_construct "Force_newline" (stdlib/format.ml[1274,41874+4]..[1274,41874+17])
                    None
                  expression (stdlib/format.ml[1274,41874+33]..[1274,41874+56])
                    Pexp_apply
                    expression (stdlib/format.ml[1274,41874+33]..[1274,41874+49])
                      Pexp_ident "pp_force_newline" (stdlib/format.ml[1274,41874+33]..[1274,41874+49])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1274,41874+50]..[1274,41874+53])
                          Pexp_ident "ppf" (stdlib/format.ml[1274,41874+50]..[1274,41874+53])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1274,41874+54]..[1274,41874+56])
                          Pexp_construct "()" (stdlib/format.ml[1274,41874+54]..[1274,41874+56])
                          None
                    ]
                <case>
                  pattern (stdlib/format.ml[1275,41931+4]..[1275,41931+17])
                    Ppat_construct "Flush_newline" (stdlib/format.ml[1275,41931+4]..[1275,41931+17])
                    None
                  expression (stdlib/format.ml[1275,41931+33]..[1275,41931+56])
                    Pexp_apply
                    expression (stdlib/format.ml[1275,41931+33]..[1275,41931+49])
                      Pexp_ident "pp_print_newline" (stdlib/format.ml[1275,41931+33]..[1275,41931+49])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1275,41931+50]..[1275,41931+53])
                          Pexp_ident "ppf" (stdlib/format.ml[1275,41931+50]..[1275,41931+53])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1275,41931+54]..[1275,41931+56])
                          Pexp_construct "()" (stdlib/format.ml[1275,41931+54]..[1275,41931+56])
                          None
                    ]
                <case>
                  pattern (stdlib/format.ml[1276,41988+4]..[1276,41988+21])
                    Ppat_construct "Magic_size" (stdlib/format.ml[1276,41988+4]..[1276,41988+14])
                    Some
                      []
                      pattern (stdlib/format.ml[1276,41988+15]..[1276,41988+21])
                        Ppat_tuple
                        [
                          pattern (stdlib/format.ml[1276,41988+16]..[1276,41988+17])
                            Ppat_any
                          pattern (stdlib/format.ml[1276,41988+19]..[1276,41988+20])
                            Ppat_any
                        ]
                  expression (stdlib/format.ml[1276,41988+33]..[1276,41988+35])
                    Pexp_construct "()" (stdlib/format.ml[1276,41988+33]..[1276,41988+35])
                    None
                <case>
                  pattern (stdlib/format.ml[1277,42024+4]..[1277,42024+14])
                    Ppat_construct "Escaped_at" (stdlib/format.ml[1277,42024+4]..[1277,42024+14])
                    None
                  expression (stdlib/format.ml[1277,42024+33]..[1277,42024+54])
                    Pexp_apply
                    expression (stdlib/format.ml[1277,42024+33]..[1277,42024+46])
                      Pexp_ident "pp_print_char" (stdlib/format.ml[1277,42024+33]..[1277,42024+46])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1277,42024+47]..[1277,42024+50])
                          Pexp_ident "ppf" (stdlib/format.ml[1277,42024+47]..[1277,42024+50])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1277,42024+51]..[1277,42024+54])
                          Pexp_constant PConst_char 40
                    ]
                <case>
                  pattern (stdlib/format.ml[1278,42079+4]..[1278,42079+19])
                    Ppat_construct "Escaped_percent" (stdlib/format.ml[1278,42079+4]..[1278,42079+19])
                    None
                  expression (stdlib/format.ml[1278,42079+33]..[1278,42079+54])
                    Pexp_apply
                    expression (stdlib/format.ml[1278,42079+33]..[1278,42079+46])
                      Pexp_ident "pp_print_char" (stdlib/format.ml[1278,42079+33]..[1278,42079+46])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1278,42079+47]..[1278,42079+50])
                          Pexp_ident "ppf" (stdlib/format.ml[1278,42079+47]..[1278,42079+50])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1278,42079+51]..[1278,42079+54])
                          Pexp_constant PConst_char 25
                    ]
                <case>
                  pattern (stdlib/format.ml[1279,42134+4]..[1279,42134+16])
                    Ppat_construct "Scan_indic" (stdlib/format.ml[1279,42134+4]..[1279,42134+14])
                    Some
                      []
                      pattern (stdlib/format.ml[1279,42134+15]..[1279,42134+16])
                        Ppat_var "c" (stdlib/format.ml[1279,42134+15]..[1279,42134+16])
                  expression (stdlib/format.ml[1279,42134+33]..[1279,42134+75])
                    Pexp_sequence
                    expression (stdlib/format.ml[1279,42134+33]..[1279,42134+54])
                      Pexp_apply
                      expression (stdlib/format.ml[1279,42134+33]..[1279,42134+46])
                        Pexp_ident "pp_print_char" (stdlib/format.ml[1279,42134+33]..[1279,42134+46])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1279,42134+47]..[1279,42134+50])
                            Pexp_ident "ppf" (stdlib/format.ml[1279,42134+47]..[1279,42134+50])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1279,42134+51]..[1279,42134+54])
                            Pexp_constant PConst_char 40
                      ]
                    expression (stdlib/format.ml[1279,42134+56]..[1279,42134+75])
                      Pexp_apply
                      expression (stdlib/format.ml[1279,42134+56]..[1279,42134+69])
                        Pexp_ident "pp_print_char" (stdlib/format.ml[1279,42134+56]..[1279,42134+69])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1279,42134+70]..[1279,42134+73])
                            Pexp_ident "ppf" (stdlib/format.ml[1279,42134+70]..[1279,42134+73])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1279,42134+74]..[1279,42134+75])
                            Pexp_ident "c" (stdlib/format.ml[1279,42134+74]..[1279,42134+75])
                      ]
              ]
    ]
  structure_item (stdlib/format.ml[1285,42488+0]..[1311,43778+34])
    Pstr_value Rec
    [
      <def>
        pattern (stdlib/format.ml[1285,42488+8]..[1285,42488+18])
          Ppat_var "output_acc" (stdlib/format.ml[1285,42488+8]..[1285,42488+18])
        expression (stdlib/format.ml[1285,42488+19]..[1311,43778+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1285,42488+19]..[1285,42488+22])
            Ppat_var "ppf" (stdlib/format.ml[1285,42488+19]..[1285,42488+22])
          expression (stdlib/format.ml[1285,42488+23]..[1311,43778+34]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1285,42488+23]..[1285,42488+26])
              Ppat_var "acc" (stdlib/format.ml[1285,42488+23]..[1285,42488+26])
            expression (stdlib/format.ml[1285,42488+29]..[1311,43778+34])
              Pexp_match
              expression (stdlib/format.ml[1285,42488+35]..[1285,42488+38])
                Pexp_ident "acc" (stdlib/format.ml[1285,42488+35]..[1285,42488+38])
              [
                <case>
                  pattern (stdlib/format.ml[1286,42532+4]..[1287,42605+69])
                    Ppat_or
                    pattern (stdlib/format.ml[1286,42532+4]..[1286,42532+72])
                      Ppat_construct "Acc_string_literal" (stdlib/format.ml[1286,42532+4]..[1286,42532+22])
                      Some
                        []
                        pattern (stdlib/format.ml[1286,42532+23]..[1286,42532+72])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1286,42532+24]..[1286,42532+68])
                              Ppat_construct "Acc_formatting_lit" (stdlib/format.ml[1286,42532+24]..[1286,42532+42])
                              Some
                                []
                                pattern (stdlib/format.ml[1286,42532+43]..[1286,42532+68])
                                  Ppat_tuple
                                  [
                                    pattern (stdlib/format.ml[1286,42532+44]..[1286,42532+45])
                                      Ppat_var "p" (stdlib/format.ml[1286,42532+44]..[1286,42532+45])
                                    pattern (stdlib/format.ml[1286,42532+47]..[1286,42532+67])
                                      Ppat_construct "Magic_size" (stdlib/format.ml[1286,42532+47]..[1286,42532+57])
                                      Some
                                        []
                                        pattern (stdlib/format.ml[1286,42532+58]..[1286,42532+67])
                                          Ppat_tuple
                                          [
                                            pattern (stdlib/format.ml[1286,42532+59]..[1286,42532+60])
                                              Ppat_any
                                            pattern (stdlib/format.ml[1286,42532+62]..[1286,42532+66])
                                              Ppat_var "size" (stdlib/format.ml[1286,42532+62]..[1286,42532+66])
                                          ]
                                  ]
                            pattern (stdlib/format.ml[1286,42532+70]..[1286,42532+71])
                              Ppat_var "s" (stdlib/format.ml[1286,42532+70]..[1286,42532+71])
                          ]
                    pattern (stdlib/format.ml[1287,42605+4]..[1287,42605+69])
                      Ppat_construct "Acc_data_string" (stdlib/format.ml[1287,42605+4]..[1287,42605+19])
                      Some
                        []
                        pattern (stdlib/format.ml[1287,42605+20]..[1287,42605+69])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1287,42605+21]..[1287,42605+65])
                              Ppat_construct "Acc_formatting_lit" (stdlib/format.ml[1287,42605+21]..[1287,42605+39])
                              Some
                                []
                                pattern (stdlib/format.ml[1287,42605+40]..[1287,42605+65])
                                  Ppat_tuple
                                  [
                                    pattern (stdlib/format.ml[1287,42605+41]..[1287,42605+42])
                                      Ppat_var "p" (stdlib/format.ml[1287,42605+41]..[1287,42605+42])
                                    pattern (stdlib/format.ml[1287,42605+44]..[1287,42605+64])
                                      Ppat_construct "Magic_size" (stdlib/format.ml[1287,42605+44]..[1287,42605+54])
                                      Some
                                        []
                                        pattern (stdlib/format.ml[1287,42605+55]..[1287,42605+64])
                                          Ppat_tuple
                                          [
                                            pattern (stdlib/format.ml[1287,42605+56]..[1287,42605+57])
                                              Ppat_any
                                            pattern (stdlib/format.ml[1287,42605+59]..[1287,42605+63])
                                              Ppat_var "size" (stdlib/format.ml[1287,42605+59]..[1287,42605+63])
                                          ]
                                  ]
                            pattern (stdlib/format.ml[1287,42605+67]..[1287,42605+68])
                              Ppat_var "s" (stdlib/format.ml[1287,42605+67]..[1287,42605+68])
                          ]
                  expression (stdlib/format.ml[1288,42678+4]..[1289,42700+46])
                    Pexp_sequence
                    expression (stdlib/format.ml[1288,42678+4]..[1288,42678+20])
                      Pexp_apply
                      expression (stdlib/format.ml[1288,42678+4]..[1288,42678+14])
                        Pexp_ident "output_acc" (stdlib/format.ml[1288,42678+4]..[1288,42678+14])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1288,42678+15]..[1288,42678+18])
                            Pexp_ident "ppf" (stdlib/format.ml[1288,42678+15]..[1288,42678+18])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1288,42678+19]..[1288,42678+20])
                            Pexp_ident "p" (stdlib/format.ml[1288,42678+19]..[1288,42678+20])
                      ]
                    expression (stdlib/format.ml[1289,42700+4]..[1289,42700+45])
                      Pexp_apply
                      expression (stdlib/format.ml[1289,42700+4]..[1289,42700+20])
                        Pexp_ident "pp_print_as_size" (stdlib/format.ml[1289,42700+4]..[1289,42700+20])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1289,42700+21]..[1289,42700+24])
                            Pexp_ident "ppf" (stdlib/format.ml[1289,42700+21]..[1289,42700+24])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1289,42700+25]..[1289,42700+43])
                            Pexp_apply
                            expression (stdlib/format.ml[1289,42700+26]..[1289,42700+37])
                              Pexp_ident "Size.of_int" (stdlib/format.ml[1289,42700+26]..[1289,42700+37])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1289,42700+38]..[1289,42700+42])
                                  Pexp_ident "size" (stdlib/format.ml[1289,42700+38]..[1289,42700+42])
                            ]
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1289,42700+44]..[1289,42700+45])
                            Pexp_ident "s" (stdlib/format.ml[1289,42700+44]..[1289,42700+45])
                      ]
                <case>
                  pattern (stdlib/format.ml[1290,42747+4]..[1291,42818+67])
                    Ppat_or
                    pattern (stdlib/format.ml[1290,42747+4]..[1290,42747+70])
                      Ppat_construct "Acc_char_literal" (stdlib/format.ml[1290,42747+4]..[1290,42747+20])
                      Some
                        []
                        pattern (stdlib/format.ml[1290,42747+21]..[1290,42747+70])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1290,42747+22]..[1290,42747+66])
                              Ppat_construct "Acc_formatting_lit" (stdlib/format.ml[1290,42747+22]..[1290,42747+40])
                              Some
                                []
                                pattern (stdlib/format.ml[1290,42747+41]..[1290,42747+66])
                                  Ppat_tuple
                                  [
                                    pattern (stdlib/format.ml[1290,42747+42]..[1290,42747+43])
                                      Ppat_var "p" (stdlib/format.ml[1290,42747+42]..[1290,42747+43])
                                    pattern (stdlib/format.ml[1290,42747+45]..[1290,42747+65])
                                      Ppat_construct "Magic_size" (stdlib/format.ml[1290,42747+45]..[1290,42747+55])
                                      Some
                                        []
                                        pattern (stdlib/format.ml[1290,42747+56]..[1290,42747+65])
                                          Ppat_tuple
                                          [
                                            pattern (stdlib/format.ml[1290,42747+57]..[1290,42747+58])
                                              Ppat_any
                                            pattern (stdlib/format.ml[1290,42747+60]..[1290,42747+64])
                                              Ppat_var "size" (stdlib/format.ml[1290,42747+60]..[1290,42747+64])
                                          ]
                                  ]
                            pattern (stdlib/format.ml[1290,42747+68]..[1290,42747+69])
                              Ppat_var "c" (stdlib/format.ml[1290,42747+68]..[1290,42747+69])
                          ]
                    pattern (stdlib/format.ml[1291,42818+4]..[1291,42818+67])
                      Ppat_construct "Acc_data_char" (stdlib/format.ml[1291,42818+4]..[1291,42818+17])
                      Some
                        []
                        pattern (stdlib/format.ml[1291,42818+18]..[1291,42818+67])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1291,42818+19]..[1291,42818+63])
                              Ppat_construct "Acc_formatting_lit" (stdlib/format.ml[1291,42818+19]..[1291,42818+37])
                              Some
                                []
                                pattern (stdlib/format.ml[1291,42818+38]..[1291,42818+63])
                                  Ppat_tuple
                                  [
                                    pattern (stdlib/format.ml[1291,42818+39]..[1291,42818+40])
                                      Ppat_var "p" (stdlib/format.ml[1291,42818+39]..[1291,42818+40])
                                    pattern (stdlib/format.ml[1291,42818+42]..[1291,42818+62])
                                      Ppat_construct "Magic_size" (stdlib/format.ml[1291,42818+42]..[1291,42818+52])
                                      Some
                                        []
                                        pattern (stdlib/format.ml[1291,42818+53]..[1291,42818+62])
                                          Ppat_tuple
                                          [
                                            pattern (stdlib/format.ml[1291,42818+54]..[1291,42818+55])
                                              Ppat_any
                                            pattern (stdlib/format.ml[1291,42818+57]..[1291,42818+61])
                                              Ppat_var "size" (stdlib/format.ml[1291,42818+57]..[1291,42818+61])
                                          ]
                                  ]
                            pattern (stdlib/format.ml[1291,42818+65]..[1291,42818+66])
                              Ppat_var "c" (stdlib/format.ml[1291,42818+65]..[1291,42818+66])
                          ]
                  expression (stdlib/format.ml[1292,42889+4]..[1293,42911+62])
                    Pexp_sequence
                    expression (stdlib/format.ml[1292,42889+4]..[1292,42889+20])
                      Pexp_apply
                      expression (stdlib/format.ml[1292,42889+4]..[1292,42889+14])
                        Pexp_ident "output_acc" (stdlib/format.ml[1292,42889+4]..[1292,42889+14])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1292,42889+15]..[1292,42889+18])
                            Pexp_ident "ppf" (stdlib/format.ml[1292,42889+15]..[1292,42889+18])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1292,42889+19]..[1292,42889+20])
                            Pexp_ident "p" (stdlib/format.ml[1292,42889+19]..[1292,42889+20])
                      ]
                    expression (stdlib/format.ml[1293,42911+4]..[1293,42911+61])
                      Pexp_apply
                      expression (stdlib/format.ml[1293,42911+4]..[1293,42911+20])
                        Pexp_ident "pp_print_as_size" (stdlib/format.ml[1293,42911+4]..[1293,42911+20])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1293,42911+21]..[1293,42911+24])
                            Pexp_ident "ppf" (stdlib/format.ml[1293,42911+21]..[1293,42911+24])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1293,42911+25]..[1293,42911+43])
                            Pexp_apply
                            expression (stdlib/format.ml[1293,42911+26]..[1293,42911+37])
                              Pexp_ident "Size.of_int" (stdlib/format.ml[1293,42911+26]..[1293,42911+37])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1293,42911+38]..[1293,42911+42])
                                  Pexp_ident "size" (stdlib/format.ml[1293,42911+38]..[1293,42911+42])
                            ]
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1293,42911+44]..[1293,42911+61])
                            Pexp_apply
                            expression (stdlib/format.ml[1293,42911+45]..[1293,42911+56])
                              Pexp_ident "String.make" (stdlib/format.ml[1293,42911+45]..[1293,42911+56])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1293,42911+57]..[1293,42911+58])
                                  Pexp_constant PConst_int (1,None)
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1293,42911+59]..[1293,42911+60])
                                  Pexp_ident "c" (stdlib/format.ml[1293,42911+59]..[1293,42911+60])
                            ]
                      ]
                <case>
                  pattern (stdlib/format.ml[1294,42974+4]..[1294,42974+29])
                    Ppat_construct "Acc_formatting_lit" (stdlib/format.ml[1294,42974+4]..[1294,42974+22])
                    Some
                      []
                      pattern (stdlib/format.ml[1294,42974+23]..[1294,42974+29])
                        Ppat_tuple
                        [
                          pattern (stdlib/format.ml[1294,42974+24]..[1294,42974+25])
                            Ppat_var "p" (stdlib/format.ml[1294,42974+24]..[1294,42974+25])
                          pattern (stdlib/format.ml[1294,42974+27]..[1294,42974+28])
                            Ppat_var "f" (stdlib/format.ml[1294,42974+27]..[1294,42974+28])
                        ]
                  expression (stdlib/format.ml[1295,43007+4]..[1296,43029+32])
                    Pexp_sequence
                    expression (stdlib/format.ml[1295,43007+4]..[1295,43007+20])
                      Pexp_apply
                      expression (stdlib/format.ml[1295,43007+4]..[1295,43007+14])
                        Pexp_ident "output_acc" (stdlib/format.ml[1295,43007+4]..[1295,43007+14])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1295,43007+15]..[1295,43007+18])
                            Pexp_ident "ppf" (stdlib/format.ml[1295,43007+15]..[1295,43007+18])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1295,43007+19]..[1295,43007+20])
                            Pexp_ident "p" (stdlib/format.ml[1295,43007+19]..[1295,43007+20])
                      ]
                    expression (stdlib/format.ml[1296,43029+4]..[1296,43029+31])
                      Pexp_apply
                      expression (stdlib/format.ml[1296,43029+4]..[1296,43029+25])
                        Pexp_ident "output_formatting_lit" (stdlib/format.ml[1296,43029+4]..[1296,43029+25])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1296,43029+26]..[1296,43029+29])
                            Pexp_ident "ppf" (stdlib/format.ml[1296,43029+26]..[1296,43029+29])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1296,43029+30]..[1296,43029+31])
                            Pexp_ident "f" (stdlib/format.ml[1296,43029+30]..[1296,43029+31])
                      ]
                <case>
                  pattern (stdlib/format.ml[1297,43062+4]..[1297,43062+45])
                    Ppat_construct "Acc_formatting_gen" (stdlib/format.ml[1297,43062+4]..[1297,43062+22])
                    Some
                      []
                      pattern (stdlib/format.ml[1297,43062+23]..[1297,43062+45])
                        Ppat_tuple
                        [
                          pattern (stdlib/format.ml[1297,43062+24]..[1297,43062+25])
                            Ppat_var "p" (stdlib/format.ml[1297,43062+24]..[1297,43062+25])
                          pattern (stdlib/format.ml[1297,43062+27]..[1297,43062+44])
                            Ppat_construct "Acc_open_tag" (stdlib/format.ml[1297,43062+27]..[1297,43062+39])
                            Some
                              []
                              pattern (stdlib/format.ml[1297,43062+40]..[1297,43062+44])
                                Ppat_var "acc'" (stdlib/format.ml[1297,43062+40]..[1297,43062+44])
                        ]
                  expression (stdlib/format.ml[1298,43111+4]..[1299,43133+63])
                    Pexp_sequence
                    expression (stdlib/format.ml[1298,43111+4]..[1298,43111+20])
                      Pexp_apply
                      expression (stdlib/format.ml[1298,43111+4]..[1298,43111+14])
                        Pexp_ident "output_acc" (stdlib/format.ml[1298,43111+4]..[1298,43111+14])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1298,43111+15]..[1298,43111+18])
                            Pexp_ident "ppf" (stdlib/format.ml[1298,43111+15]..[1298,43111+18])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1298,43111+19]..[1298,43111+20])
                            Pexp_ident "p" (stdlib/format.ml[1298,43111+19]..[1298,43111+20])
                      ]
                    expression (stdlib/format.ml[1299,43133+4]..[1299,43133+63])
                      Pexp_apply
                      expression (stdlib/format.ml[1299,43133+4]..[1299,43133+16])
                        Pexp_ident "pp_open_stag" (stdlib/format.ml[1299,43133+4]..[1299,43133+16])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1299,43133+17]..[1299,43133+20])
                            Pexp_ident "ppf" (stdlib/format.ml[1299,43133+17]..[1299,43133+20])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1299,43133+21]..[1299,43133+63])
                            Pexp_construct "String_tag" (stdlib/format.ml[1299,43133+22]..[1299,43133+32])
                            Some
                              expression (stdlib/format.ml[1299,43133+33]..[1299,43133+62])
                                Pexp_apply
                                expression (stdlib/format.ml[1299,43133+34]..[1299,43133+45])
                                  Pexp_ident "compute_tag" (stdlib/format.ml[1299,43133+34]..[1299,43133+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[1299,43133+46]..[1299,43133+56])
                                      Pexp_ident "output_acc" (stdlib/format.ml[1299,43133+46]..[1299,43133+56])
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[1299,43133+57]..[1299,43133+61])
                                      Pexp_ident "acc'" (stdlib/format.ml[1299,43133+57]..[1299,43133+61])
                                ]
                      ]
                <case>
                  pattern (stdlib/format.ml[1300,43197+4]..[1300,43197+45])
                    Ppat_construct "Acc_formatting_gen" (stdlib/format.ml[1300,43197+4]..[1300,43197+22])
                    Some
                      []
                      pattern (stdlib/format.ml[1300,43197+23]..[1300,43197+45])
                        Ppat_tuple
                        [
                          pattern (stdlib/format.ml[1300,43197+24]..[1300,43197+25])
                            Ppat_var "p" (stdlib/format.ml[1300,43197+24]..[1300,43197+25])
                          pattern (stdlib/format.ml[1300,43197+27]..[1300,43197+44])
                            Ppat_construct "Acc_open_box" (stdlib/format.ml[1300,43197+27]..[1300,43197+39])
                            Some
                              []
                              pattern (stdlib/format.ml[1300,43197+40]..[1300,43197+44])
                                Ppat_var "acc'" (stdlib/format.ml[1300,43197+40]..[1300,43197+44])
                        ]
                  expression (stdlib/format.ml[1301,43246+4]..[1303,43344+34])
                    Pexp_sequence
                    expression (stdlib/format.ml[1301,43246+4]..[1301,43246+20])
                      Pexp_apply
                      expression (stdlib/format.ml[1301,43246+4]..[1301,43246+14])
                        Pexp_ident "output_acc" (stdlib/format.ml[1301,43246+4]..[1301,43246+14])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1301,43246+15]..[1301,43246+18])
                            Pexp_ident "ppf" (stdlib/format.ml[1301,43246+15]..[1301,43246+18])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1301,43246+19]..[1301,43246+20])
                            Pexp_ident "p" (stdlib/format.ml[1301,43246+19]..[1301,43246+20])
                      ]
                    expression (stdlib/format.ml[1302,43268+4]..[1303,43344+34])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (stdlib/format.ml[1302,43268+8]..[1302,43268+21])
                            Ppat_tuple
                            [
                              pattern (stdlib/format.ml[1302,43268+9]..[1302,43268+15])
                                Ppat_var "indent" (stdlib/format.ml[1302,43268+9]..[1302,43268+15])
                              pattern (stdlib/format.ml[1302,43268+17]..[1302,43268+20])
                                Ppat_var "bty" (stdlib/format.ml[1302,43268+17]..[1302,43268+20])
                            ]
                          expression (stdlib/format.ml[1302,43268+24]..[1302,43268+72])
                            Pexp_apply
                            expression (stdlib/format.ml[1302,43268+24]..[1302,43268+42])
                              Pexp_ident "open_box_of_string" (stdlib/format.ml[1302,43268+24]..[1302,43268+42])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1302,43268+43]..[1302,43268+72])
                                  Pexp_apply
                                  expression (stdlib/format.ml[1302,43268+44]..[1302,43268+55])
                                    Pexp_ident "compute_tag" (stdlib/format.ml[1302,43268+44]..[1302,43268+55])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1302,43268+56]..[1302,43268+66])
                                        Pexp_ident "output_acc" (stdlib/format.ml[1302,43268+56]..[1302,43268+66])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1302,43268+67]..[1302,43268+71])
                                        Pexp_ident "acc'" (stdlib/format.ml[1302,43268+67]..[1302,43268+71])
                                  ]
                            ]
                      ]
                      expression (stdlib/format.ml[1303,43344+4]..[1303,43344+34])
                        Pexp_apply
                        expression (stdlib/format.ml[1303,43344+4]..[1303,43344+19])
                          Pexp_ident "pp_open_box_gen" (stdlib/format.ml[1303,43344+4]..[1303,43344+19])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[1303,43344+20]..[1303,43344+23])
                              Pexp_ident "ppf" (stdlib/format.ml[1303,43344+20]..[1303,43344+23])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[1303,43344+24]..[1303,43344+30])
                              Pexp_ident "indent" (stdlib/format.ml[1303,43344+24]..[1303,43344+30])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[1303,43344+31]..[1303,43344+34])
                              Pexp_ident "bty" (stdlib/format.ml[1303,43344+31]..[1303,43344+34])
                        ]
                <case>
                  pattern (stdlib/format.ml[1304,43379+4]..[1305,43409+26])
                    Ppat_or
                    pattern (stdlib/format.ml[1304,43379+4]..[1304,43379+29])
                      Ppat_construct "Acc_string_literal" (stdlib/format.ml[1304,43379+4]..[1304,43379+22])
                      Some
                        []
                        pattern (stdlib/format.ml[1304,43379+23]..[1304,43379+29])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1304,43379+24]..[1304,43379+25])
                              Ppat_var "p" (stdlib/format.ml[1304,43379+24]..[1304,43379+25])
                            pattern (stdlib/format.ml[1304,43379+27]..[1304,43379+28])
                              Ppat_var "s" (stdlib/format.ml[1304,43379+27]..[1304,43379+28])
                          ]
                    pattern (stdlib/format.ml[1305,43409+4]..[1305,43409+26])
                      Ppat_construct "Acc_data_string" (stdlib/format.ml[1305,43409+4]..[1305,43409+19])
                      Some
                        []
                        pattern (stdlib/format.ml[1305,43409+20]..[1305,43409+26])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1305,43409+21]..[1305,43409+22])
                              Ppat_var "p" (stdlib/format.ml[1305,43409+21]..[1305,43409+22])
                            pattern (stdlib/format.ml[1305,43409+24]..[1305,43409+25])
                              Ppat_var "s" (stdlib/format.ml[1305,43409+24]..[1305,43409+25])
                          ]
                  expression (stdlib/format.ml[1305,43409+32]..[1305,43409+72])
                    Pexp_sequence
                    expression (stdlib/format.ml[1305,43409+32]..[1305,43409+48])
                      Pexp_apply
                      expression (stdlib/format.ml[1305,43409+32]..[1305,43409+42])
                        Pexp_ident "output_acc" (stdlib/format.ml[1305,43409+32]..[1305,43409+42])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1305,43409+43]..[1305,43409+46])
                            Pexp_ident "ppf" (stdlib/format.ml[1305,43409+43]..[1305,43409+46])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1305,43409+47]..[1305,43409+48])
                            Pexp_ident "p" (stdlib/format.ml[1305,43409+47]..[1305,43409+48])
                      ]
                    expression (stdlib/format.ml[1305,43409+50]..[1305,43409+71])
                      Pexp_apply
                      expression (stdlib/format.ml[1305,43409+50]..[1305,43409+65])
                        Pexp_ident "pp_print_string" (stdlib/format.ml[1305,43409+50]..[1305,43409+65])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1305,43409+66]..[1305,43409+69])
                            Pexp_ident "ppf" (stdlib/format.ml[1305,43409+66]..[1305,43409+69])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1305,43409+70]..[1305,43409+71])
                            Pexp_ident "s" (stdlib/format.ml[1305,43409+70]..[1305,43409+71])
                      ]
                <case>
                  pattern (stdlib/format.ml[1306,43482+4]..[1307,43510+24])
                    Ppat_or
                    pattern (stdlib/format.ml[1306,43482+4]..[1306,43482+27])
                      Ppat_construct "Acc_char_literal" (stdlib/format.ml[1306,43482+4]..[1306,43482+20])
                      Some
                        []
                        pattern (stdlib/format.ml[1306,43482+21]..[1306,43482+27])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1306,43482+22]..[1306,43482+23])
                              Ppat_var "p" (stdlib/format.ml[1306,43482+22]..[1306,43482+23])
                            pattern (stdlib/format.ml[1306,43482+25]..[1306,43482+26])
                              Ppat_var "c" (stdlib/format.ml[1306,43482+25]..[1306,43482+26])
                          ]
                    pattern (stdlib/format.ml[1307,43510+4]..[1307,43510+24])
                      Ppat_construct "Acc_data_char" (stdlib/format.ml[1307,43510+4]..[1307,43510+17])
                      Some
                        []
                        pattern (stdlib/format.ml[1307,43510+18]..[1307,43510+24])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1307,43510+19]..[1307,43510+20])
                              Ppat_var "p" (stdlib/format.ml[1307,43510+19]..[1307,43510+20])
                            pattern (stdlib/format.ml[1307,43510+22]..[1307,43510+23])
                              Ppat_var "c" (stdlib/format.ml[1307,43510+22]..[1307,43510+23])
                          ]
                  expression (stdlib/format.ml[1307,43510+32]..[1307,43510+70])
                    Pexp_sequence
                    expression (stdlib/format.ml[1307,43510+32]..[1307,43510+48])
                      Pexp_apply
                      expression (stdlib/format.ml[1307,43510+32]..[1307,43510+42])
                        Pexp_ident "output_acc" (stdlib/format.ml[1307,43510+32]..[1307,43510+42])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1307,43510+43]..[1307,43510+46])
                            Pexp_ident "ppf" (stdlib/format.ml[1307,43510+43]..[1307,43510+46])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1307,43510+47]..[1307,43510+48])
                            Pexp_ident "p" (stdlib/format.ml[1307,43510+47]..[1307,43510+48])
                      ]
                    expression (stdlib/format.ml[1307,43510+50]..[1307,43510+69])
                      Pexp_apply
                      expression (stdlib/format.ml[1307,43510+50]..[1307,43510+63])
                        Pexp_ident "pp_print_char" (stdlib/format.ml[1307,43510+50]..[1307,43510+63])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1307,43510+64]..[1307,43510+67])
                            Pexp_ident "ppf" (stdlib/format.ml[1307,43510+64]..[1307,43510+67])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1307,43510+68]..[1307,43510+69])
                            Pexp_ident "c" (stdlib/format.ml[1307,43510+68]..[1307,43510+69])
                      ]
                <case>
                  pattern (stdlib/format.ml[1308,43581+4]..[1308,43581+20])
                    Ppat_construct "Acc_delay" (stdlib/format.ml[1308,43581+4]..[1308,43581+13])
                    Some
                      []
                      pattern (stdlib/format.ml[1308,43581+14]..[1308,43581+20])
                        Ppat_tuple
                        [
                          pattern (stdlib/format.ml[1308,43581+15]..[1308,43581+16])
                            Ppat_var "p" (stdlib/format.ml[1308,43581+15]..[1308,43581+16])
                          pattern (stdlib/format.ml[1308,43581+18]..[1308,43581+19])
                            Ppat_var "f" (stdlib/format.ml[1308,43581+18]..[1308,43581+19])
                        ]
                  expression (stdlib/format.ml[1308,43581+32]..[1308,43581+56])
                    Pexp_sequence
                    expression (stdlib/format.ml[1308,43581+32]..[1308,43581+48])
                      Pexp_apply
                      expression (stdlib/format.ml[1308,43581+32]..[1308,43581+42])
                        Pexp_ident "output_acc" (stdlib/format.ml[1308,43581+32]..[1308,43581+42])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1308,43581+43]..[1308,43581+46])
                            Pexp_ident "ppf" (stdlib/format.ml[1308,43581+43]..[1308,43581+46])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1308,43581+47]..[1308,43581+48])
                            Pexp_ident "p" (stdlib/format.ml[1308,43581+47]..[1308,43581+48])
                      ]
                    expression (stdlib/format.ml[1308,43581+50]..[1308,43581+55])
                      Pexp_apply
                      expression (stdlib/format.ml[1308,43581+50]..[1308,43581+51])
                        Pexp_ident "f" (stdlib/format.ml[1308,43581+50]..[1308,43581+51])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1308,43581+52]..[1308,43581+55])
                            Pexp_ident "ppf" (stdlib/format.ml[1308,43581+52]..[1308,43581+55])
                      ]
                <case>
                  pattern (stdlib/format.ml[1309,43638+4]..[1309,43638+15])
                    Ppat_construct "Acc_flush" (stdlib/format.ml[1309,43638+4]..[1309,43638+13])
                    Some
                      []
                      pattern (stdlib/format.ml[1309,43638+14]..[1309,43638+15])
                        Ppat_var "p" (stdlib/format.ml[1309,43638+14]..[1309,43638+15])
                  expression (stdlib/format.ml[1309,43638+32]..[1309,43638+72])
                    Pexp_sequence
                    expression (stdlib/format.ml[1309,43638+32]..[1309,43638+48])
                      Pexp_apply
                      expression (stdlib/format.ml[1309,43638+32]..[1309,43638+42])
                        Pexp_ident "output_acc" (stdlib/format.ml[1309,43638+32]..[1309,43638+42])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1309,43638+43]..[1309,43638+46])
                            Pexp_ident "ppf" (stdlib/format.ml[1309,43638+43]..[1309,43638+46])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1309,43638+47]..[1309,43638+48])
                            Pexp_ident "p" (stdlib/format.ml[1309,43638+47]..[1309,43638+48])
                      ]
                    expression (stdlib/format.ml[1309,43638+50]..[1309,43638+71])
                      Pexp_apply
                      expression (stdlib/format.ml[1309,43638+50]..[1309,43638+64])
                        Pexp_ident "pp_print_flush" (stdlib/format.ml[1309,43638+50]..[1309,43638+64])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1309,43638+65]..[1309,43638+68])
                            Pexp_ident "ppf" (stdlib/format.ml[1309,43638+65]..[1309,43638+68])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1309,43638+69]..[1309,43638+71])
                            Pexp_construct "()" (stdlib/format.ml[1309,43638+69]..[1309,43638+71])
                            None
                      ]
                <case>
                  pattern (stdlib/format.ml[1310,43711+4]..[1310,43711+28])
                    Ppat_construct "Acc_invalid_arg" (stdlib/format.ml[1310,43711+4]..[1310,43711+19])
                    Some
                      []
                      pattern (stdlib/format.ml[1310,43711+20]..[1310,43711+28])
                        Ppat_tuple
                        [
                          pattern (stdlib/format.ml[1310,43711+21]..[1310,43711+22])
                            Ppat_var "p" (stdlib/format.ml[1310,43711+21]..[1310,43711+22])
                          pattern (stdlib/format.ml[1310,43711+24]..[1310,43711+27])
                            Ppat_var "msg" (stdlib/format.ml[1310,43711+24]..[1310,43711+27])
                        ]
                  expression (stdlib/format.ml[1310,43711+32]..[1310,43711+66])
                    Pexp_sequence
                    expression (stdlib/format.ml[1310,43711+32]..[1310,43711+48])
                      Pexp_apply
                      expression (stdlib/format.ml[1310,43711+32]..[1310,43711+42])
                        Pexp_ident "output_acc" (stdlib/format.ml[1310,43711+32]..[1310,43711+42])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1310,43711+43]..[1310,43711+46])
                            Pexp_ident "ppf" (stdlib/format.ml[1310,43711+43]..[1310,43711+46])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1310,43711+47]..[1310,43711+48])
                            Pexp_ident "p" (stdlib/format.ml[1310,43711+47]..[1310,43711+48])
                      ]
                    expression (stdlib/format.ml[1310,43711+50]..[1310,43711+65])
                      Pexp_apply
                      expression (stdlib/format.ml[1310,43711+50]..[1310,43711+61])
                        Pexp_ident "invalid_arg" (stdlib/format.ml[1310,43711+50]..[1310,43711+61])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1310,43711+62]..[1310,43711+65])
                            Pexp_ident "msg" (stdlib/format.ml[1310,43711+62]..[1310,43711+65])
                      ]
                <case>
                  pattern (stdlib/format.ml[1311,43778+4]..[1311,43778+14])
                    Ppat_construct "End_of_acc" (stdlib/format.ml[1311,43778+4]..[1311,43778+14])
                    None
                  expression (stdlib/format.ml[1311,43778+32]..[1311,43778+34])
                    Pexp_construct "()" (stdlib/format.ml[1311,43778+32]..[1311,43778+34])
                    None
              ]
    ]
  structure_item (stdlib/format.ml[1317,44083+0]..[1346,45535+34])
    Pstr_value Rec
    [
      <def>
        pattern (stdlib/format.ml[1317,44083+8]..[1317,44083+18])
          Ppat_var "strput_acc" (stdlib/format.ml[1317,44083+8]..[1317,44083+18])
        expression (stdlib/format.ml[1317,44083+19]..[1346,45535+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1317,44083+19]..[1317,44083+22])
            Ppat_var "ppf" (stdlib/format.ml[1317,44083+19]..[1317,44083+22])
          expression (stdlib/format.ml[1317,44083+23]..[1346,45535+34]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1317,44083+23]..[1317,44083+26])
              Ppat_var "acc" (stdlib/format.ml[1317,44083+23]..[1317,44083+26])
            expression (stdlib/format.ml[1317,44083+29]..[1346,45535+34])
              Pexp_match
              expression (stdlib/format.ml[1317,44083+35]..[1317,44083+38])
                Pexp_ident "acc" (stdlib/format.ml[1317,44083+35]..[1317,44083+38])
              [
                <case>
                  pattern (stdlib/format.ml[1318,44127+4]..[1319,44200+69])
                    Ppat_or
                    pattern (stdlib/format.ml[1318,44127+4]..[1318,44127+72])
                      Ppat_construct "Acc_string_literal" (stdlib/format.ml[1318,44127+4]..[1318,44127+22])
                      Some
                        []
                        pattern (stdlib/format.ml[1318,44127+23]..[1318,44127+72])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1318,44127+24]..[1318,44127+68])
                              Ppat_construct "Acc_formatting_lit" (stdlib/format.ml[1318,44127+24]..[1318,44127+42])
                              Some
                                []
                                pattern (stdlib/format.ml[1318,44127+43]..[1318,44127+68])
                                  Ppat_tuple
                                  [
                                    pattern (stdlib/format.ml[1318,44127+44]..[1318,44127+45])
                                      Ppat_var "p" (stdlib/format.ml[1318,44127+44]..[1318,44127+45])
                                    pattern (stdlib/format.ml[1318,44127+47]..[1318,44127+67])
                                      Ppat_construct "Magic_size" (stdlib/format.ml[1318,44127+47]..[1318,44127+57])
                                      Some
                                        []
                                        pattern (stdlib/format.ml[1318,44127+58]..[1318,44127+67])
                                          Ppat_tuple
                                          [
                                            pattern (stdlib/format.ml[1318,44127+59]..[1318,44127+60])
                                              Ppat_any
                                            pattern (stdlib/format.ml[1318,44127+62]..[1318,44127+66])
                                              Ppat_var "size" (stdlib/format.ml[1318,44127+62]..[1318,44127+66])
                                          ]
                                  ]
                            pattern (stdlib/format.ml[1318,44127+70]..[1318,44127+71])
                              Ppat_var "s" (stdlib/format.ml[1318,44127+70]..[1318,44127+71])
                          ]
                    pattern (stdlib/format.ml[1319,44200+4]..[1319,44200+69])
                      Ppat_construct "Acc_data_string" (stdlib/format.ml[1319,44200+4]..[1319,44200+19])
                      Some
                        []
                        pattern (stdlib/format.ml[1319,44200+20]..[1319,44200+69])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1319,44200+21]..[1319,44200+65])
                              Ppat_construct "Acc_formatting_lit" (stdlib/format.ml[1319,44200+21]..[1319,44200+39])
                              Some
                                []
                                pattern (stdlib/format.ml[1319,44200+40]..[1319,44200+65])
                                  Ppat_tuple
                                  [
                                    pattern (stdlib/format.ml[1319,44200+41]..[1319,44200+42])
                                      Ppat_var "p" (stdlib/format.ml[1319,44200+41]..[1319,44200+42])
                                    pattern (stdlib/format.ml[1319,44200+44]..[1319,44200+64])
                                      Ppat_construct "Magic_size" (stdlib/format.ml[1319,44200+44]..[1319,44200+54])
                                      Some
                                        []
                                        pattern (stdlib/format.ml[1319,44200+55]..[1319,44200+64])
                                          Ppat_tuple
                                          [
                                            pattern (stdlib/format.ml[1319,44200+56]..[1319,44200+57])
                                              Ppat_any
                                            pattern (stdlib/format.ml[1319,44200+59]..[1319,44200+63])
                                              Ppat_var "size" (stdlib/format.ml[1319,44200+59]..[1319,44200+63])
                                          ]
                                  ]
                            pattern (stdlib/format.ml[1319,44200+67]..[1319,44200+68])
                              Ppat_var "s" (stdlib/format.ml[1319,44200+67]..[1319,44200+68])
                          ]
                  expression (stdlib/format.ml[1320,44273+4]..[1321,44295+46])
                    Pexp_sequence
                    expression (stdlib/format.ml[1320,44273+4]..[1320,44273+20])
                      Pexp_apply
                      expression (stdlib/format.ml[1320,44273+4]..[1320,44273+14])
                        Pexp_ident "strput_acc" (stdlib/format.ml[1320,44273+4]..[1320,44273+14])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1320,44273+15]..[1320,44273+18])
                            Pexp_ident "ppf" (stdlib/format.ml[1320,44273+15]..[1320,44273+18])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1320,44273+19]..[1320,44273+20])
                            Pexp_ident "p" (stdlib/format.ml[1320,44273+19]..[1320,44273+20])
                      ]
                    expression (stdlib/format.ml[1321,44295+4]..[1321,44295+45])
                      Pexp_apply
                      expression (stdlib/format.ml[1321,44295+4]..[1321,44295+20])
                        Pexp_ident "pp_print_as_size" (stdlib/format.ml[1321,44295+4]..[1321,44295+20])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1321,44295+21]..[1321,44295+24])
                            Pexp_ident "ppf" (stdlib/format.ml[1321,44295+21]..[1321,44295+24])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1321,44295+25]..[1321,44295+43])
                            Pexp_apply
                            expression (stdlib/format.ml[1321,44295+26]..[1321,44295+37])
                              Pexp_ident "Size.of_int" (stdlib/format.ml[1321,44295+26]..[1321,44295+37])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1321,44295+38]..[1321,44295+42])
                                  Pexp_ident "size" (stdlib/format.ml[1321,44295+38]..[1321,44295+42])
                            ]
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1321,44295+44]..[1321,44295+45])
                            Pexp_ident "s" (stdlib/format.ml[1321,44295+44]..[1321,44295+45])
                      ]
                <case>
                  pattern (stdlib/format.ml[1322,44342+4]..[1323,44413+67])
                    Ppat_or
                    pattern (stdlib/format.ml[1322,44342+4]..[1322,44342+70])
                      Ppat_construct "Acc_char_literal" (stdlib/format.ml[1322,44342+4]..[1322,44342+20])
                      Some
                        []
                        pattern (stdlib/format.ml[1322,44342+21]..[1322,44342+70])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1322,44342+22]..[1322,44342+66])
                              Ppat_construct "Acc_formatting_lit" (stdlib/format.ml[1322,44342+22]..[1322,44342+40])
                              Some
                                []
                                pattern (stdlib/format.ml[1322,44342+41]..[1322,44342+66])
                                  Ppat_tuple
                                  [
                                    pattern (stdlib/format.ml[1322,44342+42]..[1322,44342+43])
                                      Ppat_var "p" (stdlib/format.ml[1322,44342+42]..[1322,44342+43])
                                    pattern (stdlib/format.ml[1322,44342+45]..[1322,44342+65])
                                      Ppat_construct "Magic_size" (stdlib/format.ml[1322,44342+45]..[1322,44342+55])
                                      Some
                                        []
                                        pattern (stdlib/format.ml[1322,44342+56]..[1322,44342+65])
                                          Ppat_tuple
                                          [
                                            pattern (stdlib/format.ml[1322,44342+57]..[1322,44342+58])
                                              Ppat_any
                                            pattern (stdlib/format.ml[1322,44342+60]..[1322,44342+64])
                                              Ppat_var "size" (stdlib/format.ml[1322,44342+60]..[1322,44342+64])
                                          ]
                                  ]
                            pattern (stdlib/format.ml[1322,44342+68]..[1322,44342+69])
                              Ppat_var "c" (stdlib/format.ml[1322,44342+68]..[1322,44342+69])
                          ]
                    pattern (stdlib/format.ml[1323,44413+4]..[1323,44413+67])
                      Ppat_construct "Acc_data_char" (stdlib/format.ml[1323,44413+4]..[1323,44413+17])
                      Some
                        []
                        pattern (stdlib/format.ml[1323,44413+18]..[1323,44413+67])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1323,44413+19]..[1323,44413+63])
                              Ppat_construct "Acc_formatting_lit" (stdlib/format.ml[1323,44413+19]..[1323,44413+37])
                              Some
                                []
                                pattern (stdlib/format.ml[1323,44413+38]..[1323,44413+63])
                                  Ppat_tuple
                                  [
                                    pattern (stdlib/format.ml[1323,44413+39]..[1323,44413+40])
                                      Ppat_var "p" (stdlib/format.ml[1323,44413+39]..[1323,44413+40])
                                    pattern (stdlib/format.ml[1323,44413+42]..[1323,44413+62])
                                      Ppat_construct "Magic_size" (stdlib/format.ml[1323,44413+42]..[1323,44413+52])
                                      Some
                                        []
                                        pattern (stdlib/format.ml[1323,44413+53]..[1323,44413+62])
                                          Ppat_tuple
                                          [
                                            pattern (stdlib/format.ml[1323,44413+54]..[1323,44413+55])
                                              Ppat_any
                                            pattern (stdlib/format.ml[1323,44413+57]..[1323,44413+61])
                                              Ppat_var "size" (stdlib/format.ml[1323,44413+57]..[1323,44413+61])
                                          ]
                                  ]
                            pattern (stdlib/format.ml[1323,44413+65]..[1323,44413+66])
                              Ppat_var "c" (stdlib/format.ml[1323,44413+65]..[1323,44413+66])
                          ]
                  expression (stdlib/format.ml[1324,44484+4]..[1325,44506+62])
                    Pexp_sequence
                    expression (stdlib/format.ml[1324,44484+4]..[1324,44484+20])
                      Pexp_apply
                      expression (stdlib/format.ml[1324,44484+4]..[1324,44484+14])
                        Pexp_ident "strput_acc" (stdlib/format.ml[1324,44484+4]..[1324,44484+14])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1324,44484+15]..[1324,44484+18])
                            Pexp_ident "ppf" (stdlib/format.ml[1324,44484+15]..[1324,44484+18])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1324,44484+19]..[1324,44484+20])
                            Pexp_ident "p" (stdlib/format.ml[1324,44484+19]..[1324,44484+20])
                      ]
                    expression (stdlib/format.ml[1325,44506+4]..[1325,44506+61])
                      Pexp_apply
                      expression (stdlib/format.ml[1325,44506+4]..[1325,44506+20])
                        Pexp_ident "pp_print_as_size" (stdlib/format.ml[1325,44506+4]..[1325,44506+20])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1325,44506+21]..[1325,44506+24])
                            Pexp_ident "ppf" (stdlib/format.ml[1325,44506+21]..[1325,44506+24])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1325,44506+25]..[1325,44506+43])
                            Pexp_apply
                            expression (stdlib/format.ml[1325,44506+26]..[1325,44506+37])
                              Pexp_ident "Size.of_int" (stdlib/format.ml[1325,44506+26]..[1325,44506+37])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1325,44506+38]..[1325,44506+42])
                                  Pexp_ident "size" (stdlib/format.ml[1325,44506+38]..[1325,44506+42])
                            ]
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1325,44506+44]..[1325,44506+61])
                            Pexp_apply
                            expression (stdlib/format.ml[1325,44506+45]..[1325,44506+56])
                              Pexp_ident "String.make" (stdlib/format.ml[1325,44506+45]..[1325,44506+56])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1325,44506+57]..[1325,44506+58])
                                  Pexp_constant PConst_int (1,None)
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1325,44506+59]..[1325,44506+60])
                                  Pexp_ident "c" (stdlib/format.ml[1325,44506+59]..[1325,44506+60])
                            ]
                      ]
                <case>
                  pattern (stdlib/format.ml[1326,44569+4]..[1326,44569+63])
                    Ppat_construct "Acc_delay" (stdlib/format.ml[1326,44569+4]..[1326,44569+13])
                    Some
                      []
                      pattern (stdlib/format.ml[1326,44569+14]..[1326,44569+63])
                        Ppat_tuple
                        [
                          pattern (stdlib/format.ml[1326,44569+15]..[1326,44569+59])
                            Ppat_construct "Acc_formatting_lit" (stdlib/format.ml[1326,44569+15]..[1326,44569+33])
                            Some
                              []
                              pattern (stdlib/format.ml[1326,44569+34]..[1326,44569+59])
                                Ppat_tuple
                                [
                                  pattern (stdlib/format.ml[1326,44569+35]..[1326,44569+36])
                                    Ppat_var "p" (stdlib/format.ml[1326,44569+35]..[1326,44569+36])
                                  pattern (stdlib/format.ml[1326,44569+38]..[1326,44569+58])
                                    Ppat_construct "Magic_size" (stdlib/format.ml[1326,44569+38]..[1326,44569+48])
                                    Some
                                      []
                                      pattern (stdlib/format.ml[1326,44569+49]..[1326,44569+58])
                                        Ppat_tuple
                                        [
                                          pattern (stdlib/format.ml[1326,44569+50]..[1326,44569+51])
                                            Ppat_any
                                          pattern (stdlib/format.ml[1326,44569+53]..[1326,44569+57])
                                            Ppat_var "size" (stdlib/format.ml[1326,44569+53]..[1326,44569+57])
                                        ]
                                ]
                          pattern (stdlib/format.ml[1326,44569+61]..[1326,44569+62])
                            Ppat_var "f" (stdlib/format.ml[1326,44569+61]..[1326,44569+62])
                        ]
                  expression (stdlib/format.ml[1327,44636+4]..[1328,44658+51])
                    Pexp_sequence
                    expression (stdlib/format.ml[1327,44636+4]..[1327,44636+20])
                      Pexp_apply
                      expression (stdlib/format.ml[1327,44636+4]..[1327,44636+14])
                        Pexp_ident "strput_acc" (stdlib/format.ml[1327,44636+4]..[1327,44636+14])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1327,44636+15]..[1327,44636+18])
                            Pexp_ident "ppf" (stdlib/format.ml[1327,44636+15]..[1327,44636+18])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1327,44636+19]..[1327,44636+20])
                            Pexp_ident "p" (stdlib/format.ml[1327,44636+19]..[1327,44636+20])
                      ]
                    expression (stdlib/format.ml[1328,44658+4]..[1328,44658+50])
                      Pexp_apply
                      expression (stdlib/format.ml[1328,44658+4]..[1328,44658+20])
                        Pexp_ident "pp_print_as_size" (stdlib/format.ml[1328,44658+4]..[1328,44658+20])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1328,44658+21]..[1328,44658+24])
                            Pexp_ident "ppf" (stdlib/format.ml[1328,44658+21]..[1328,44658+24])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1328,44658+25]..[1328,44658+43])
                            Pexp_apply
                            expression (stdlib/format.ml[1328,44658+26]..[1328,44658+37])
                              Pexp_ident "Size.of_int" (stdlib/format.ml[1328,44658+26]..[1328,44658+37])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1328,44658+38]..[1328,44658+42])
                                  Pexp_ident "size" (stdlib/format.ml[1328,44658+38]..[1328,44658+42])
                            ]
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1328,44658+44]..[1328,44658+50])
                            Pexp_apply
                            expression (stdlib/format.ml[1328,44658+45]..[1328,44658+46])
                              Pexp_ident "f" (stdlib/format.ml[1328,44658+45]..[1328,44658+46])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1328,44658+47]..[1328,44658+49])
                                  Pexp_construct "()" (stdlib/format.ml[1328,44658+47]..[1328,44658+49])
                                  None
                            ]
                      ]
                <case>
                  pattern (stdlib/format.ml[1329,44710+4]..[1329,44710+29])
                    Ppat_construct "Acc_formatting_lit" (stdlib/format.ml[1329,44710+4]..[1329,44710+22])
                    Some
                      []
                      pattern (stdlib/format.ml[1329,44710+23]..[1329,44710+29])
                        Ppat_tuple
                        [
                          pattern (stdlib/format.ml[1329,44710+24]..[1329,44710+25])
                            Ppat_var "p" (stdlib/format.ml[1329,44710+24]..[1329,44710+25])
                          pattern (stdlib/format.ml[1329,44710+27]..[1329,44710+28])
                            Ppat_var "f" (stdlib/format.ml[1329,44710+27]..[1329,44710+28])
                        ]
                  expression (stdlib/format.ml[1330,44743+4]..[1331,44765+32])
                    Pexp_sequence
                    expression (stdlib/format.ml[1330,44743+4]..[1330,44743+20])
                      Pexp_apply
                      expression (stdlib/format.ml[1330,44743+4]..[1330,44743+14])
                        Pexp_ident "strput_acc" (stdlib/format.ml[1330,44743+4]..[1330,44743+14])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1330,44743+15]..[1330,44743+18])
                            Pexp_ident "ppf" (stdlib/format.ml[1330,44743+15]..[1330,44743+18])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1330,44743+19]..[1330,44743+20])
                            Pexp_ident "p" (stdlib/format.ml[1330,44743+19]..[1330,44743+20])
                      ]
                    expression (stdlib/format.ml[1331,44765+4]..[1331,44765+31])
                      Pexp_apply
                      expression (stdlib/format.ml[1331,44765+4]..[1331,44765+25])
                        Pexp_ident "output_formatting_lit" (stdlib/format.ml[1331,44765+4]..[1331,44765+25])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1331,44765+26]..[1331,44765+29])
                            Pexp_ident "ppf" (stdlib/format.ml[1331,44765+26]..[1331,44765+29])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1331,44765+30]..[1331,44765+31])
                            Pexp_ident "f" (stdlib/format.ml[1331,44765+30]..[1331,44765+31])
                      ]
                <case>
                  pattern (stdlib/format.ml[1332,44798+4]..[1332,44798+45])
                    Ppat_construct "Acc_formatting_gen" (stdlib/format.ml[1332,44798+4]..[1332,44798+22])
                    Some
                      []
                      pattern (stdlib/format.ml[1332,44798+23]..[1332,44798+45])
                        Ppat_tuple
                        [
                          pattern (stdlib/format.ml[1332,44798+24]..[1332,44798+25])
                            Ppat_var "p" (stdlib/format.ml[1332,44798+24]..[1332,44798+25])
                          pattern (stdlib/format.ml[1332,44798+27]..[1332,44798+44])
                            Ppat_construct "Acc_open_tag" (stdlib/format.ml[1332,44798+27]..[1332,44798+39])
                            Some
                              []
                              pattern (stdlib/format.ml[1332,44798+40]..[1332,44798+44])
                                Ppat_var "acc'" (stdlib/format.ml[1332,44798+40]..[1332,44798+44])
                        ]
                  expression (stdlib/format.ml[1333,44847+4]..[1334,44869+63])
                    Pexp_sequence
                    expression (stdlib/format.ml[1333,44847+4]..[1333,44847+20])
                      Pexp_apply
                      expression (stdlib/format.ml[1333,44847+4]..[1333,44847+14])
                        Pexp_ident "strput_acc" (stdlib/format.ml[1333,44847+4]..[1333,44847+14])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1333,44847+15]..[1333,44847+18])
                            Pexp_ident "ppf" (stdlib/format.ml[1333,44847+15]..[1333,44847+18])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1333,44847+19]..[1333,44847+20])
                            Pexp_ident "p" (stdlib/format.ml[1333,44847+19]..[1333,44847+20])
                      ]
                    expression (stdlib/format.ml[1334,44869+4]..[1334,44869+63])
                      Pexp_apply
                      expression (stdlib/format.ml[1334,44869+4]..[1334,44869+16])
                        Pexp_ident "pp_open_stag" (stdlib/format.ml[1334,44869+4]..[1334,44869+16])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1334,44869+17]..[1334,44869+20])
                            Pexp_ident "ppf" (stdlib/format.ml[1334,44869+17]..[1334,44869+20])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1334,44869+21]..[1334,44869+63])
                            Pexp_construct "String_tag" (stdlib/format.ml[1334,44869+22]..[1334,44869+32])
                            Some
                              expression (stdlib/format.ml[1334,44869+33]..[1334,44869+62])
                                Pexp_apply
                                expression (stdlib/format.ml[1334,44869+34]..[1334,44869+45])
                                  Pexp_ident "compute_tag" (stdlib/format.ml[1334,44869+34]..[1334,44869+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[1334,44869+46]..[1334,44869+56])
                                      Pexp_ident "strput_acc" (stdlib/format.ml[1334,44869+46]..[1334,44869+56])
                                  <arg>
                                  Nolabel
                                    expression (stdlib/format.ml[1334,44869+57]..[1334,44869+61])
                                      Pexp_ident "acc'" (stdlib/format.ml[1334,44869+57]..[1334,44869+61])
                                ]
                      ]
                <case>
                  pattern (stdlib/format.ml[1335,44933+4]..[1335,44933+45])
                    Ppat_construct "Acc_formatting_gen" (stdlib/format.ml[1335,44933+4]..[1335,44933+22])
                    Some
                      []
                      pattern (stdlib/format.ml[1335,44933+23]..[1335,44933+45])
                        Ppat_tuple
                        [
                          pattern (stdlib/format.ml[1335,44933+24]..[1335,44933+25])
                            Ppat_var "p" (stdlib/format.ml[1335,44933+24]..[1335,44933+25])
                          pattern (stdlib/format.ml[1335,44933+27]..[1335,44933+44])
                            Ppat_construct "Acc_open_box" (stdlib/format.ml[1335,44933+27]..[1335,44933+39])
                            Some
                              []
                              pattern (stdlib/format.ml[1335,44933+40]..[1335,44933+44])
                                Ppat_var "acc'" (stdlib/format.ml[1335,44933+40]..[1335,44933+44])
                        ]
                  expression (stdlib/format.ml[1336,44982+4]..[1338,45080+34])
                    Pexp_sequence
                    expression (stdlib/format.ml[1336,44982+4]..[1336,44982+20])
                      Pexp_apply
                      expression (stdlib/format.ml[1336,44982+4]..[1336,44982+14])
                        Pexp_ident "strput_acc" (stdlib/format.ml[1336,44982+4]..[1336,44982+14])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1336,44982+15]..[1336,44982+18])
                            Pexp_ident "ppf" (stdlib/format.ml[1336,44982+15]..[1336,44982+18])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1336,44982+19]..[1336,44982+20])
                            Pexp_ident "p" (stdlib/format.ml[1336,44982+19]..[1336,44982+20])
                      ]
                    expression (stdlib/format.ml[1337,45004+4]..[1338,45080+34])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (stdlib/format.ml[1337,45004+8]..[1337,45004+21])
                            Ppat_tuple
                            [
                              pattern (stdlib/format.ml[1337,45004+9]..[1337,45004+15])
                                Ppat_var "indent" (stdlib/format.ml[1337,45004+9]..[1337,45004+15])
                              pattern (stdlib/format.ml[1337,45004+17]..[1337,45004+20])
                                Ppat_var "bty" (stdlib/format.ml[1337,45004+17]..[1337,45004+20])
                            ]
                          expression (stdlib/format.ml[1337,45004+24]..[1337,45004+72])
                            Pexp_apply
                            expression (stdlib/format.ml[1337,45004+24]..[1337,45004+42])
                              Pexp_ident "open_box_of_string" (stdlib/format.ml[1337,45004+24]..[1337,45004+42])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1337,45004+43]..[1337,45004+72])
                                  Pexp_apply
                                  expression (stdlib/format.ml[1337,45004+44]..[1337,45004+55])
                                    Pexp_ident "compute_tag" (stdlib/format.ml[1337,45004+44]..[1337,45004+55])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1337,45004+56]..[1337,45004+66])
                                        Pexp_ident "strput_acc" (stdlib/format.ml[1337,45004+56]..[1337,45004+66])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1337,45004+67]..[1337,45004+71])
                                        Pexp_ident "acc'" (stdlib/format.ml[1337,45004+67]..[1337,45004+71])
                                  ]
                            ]
                      ]
                      expression (stdlib/format.ml[1338,45080+4]..[1338,45080+34])
                        Pexp_apply
                        expression (stdlib/format.ml[1338,45080+4]..[1338,45080+19])
                          Pexp_ident "pp_open_box_gen" (stdlib/format.ml[1338,45080+4]..[1338,45080+19])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[1338,45080+20]..[1338,45080+23])
                              Pexp_ident "ppf" (stdlib/format.ml[1338,45080+20]..[1338,45080+23])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[1338,45080+24]..[1338,45080+30])
                              Pexp_ident "indent" (stdlib/format.ml[1338,45080+24]..[1338,45080+30])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[1338,45080+31]..[1338,45080+34])
                              Pexp_ident "bty" (stdlib/format.ml[1338,45080+31]..[1338,45080+34])
                        ]
                <case>
                  pattern (stdlib/format.ml[1339,45115+4]..[1340,45145+26])
                    Ppat_or
                    pattern (stdlib/format.ml[1339,45115+4]..[1339,45115+29])
                      Ppat_construct "Acc_string_literal" (stdlib/format.ml[1339,45115+4]..[1339,45115+22])
                      Some
                        []
                        pattern (stdlib/format.ml[1339,45115+23]..[1339,45115+29])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1339,45115+24]..[1339,45115+25])
                              Ppat_var "p" (stdlib/format.ml[1339,45115+24]..[1339,45115+25])
                            pattern (stdlib/format.ml[1339,45115+27]..[1339,45115+28])
                              Ppat_var "s" (stdlib/format.ml[1339,45115+27]..[1339,45115+28])
                          ]
                    pattern (stdlib/format.ml[1340,45145+4]..[1340,45145+26])
                      Ppat_construct "Acc_data_string" (stdlib/format.ml[1340,45145+4]..[1340,45145+19])
                      Some
                        []
                        pattern (stdlib/format.ml[1340,45145+20]..[1340,45145+26])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1340,45145+21]..[1340,45145+22])
                              Ppat_var "p" (stdlib/format.ml[1340,45145+21]..[1340,45145+22])
                            pattern (stdlib/format.ml[1340,45145+24]..[1340,45145+25])
                              Ppat_var "s" (stdlib/format.ml[1340,45145+24]..[1340,45145+25])
                          ]
                  expression (stdlib/format.ml[1340,45145+32]..[1340,45145+72])
                    Pexp_sequence
                    expression (stdlib/format.ml[1340,45145+32]..[1340,45145+48])
                      Pexp_apply
                      expression (stdlib/format.ml[1340,45145+32]..[1340,45145+42])
                        Pexp_ident "strput_acc" (stdlib/format.ml[1340,45145+32]..[1340,45145+42])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1340,45145+43]..[1340,45145+46])
                            Pexp_ident "ppf" (stdlib/format.ml[1340,45145+43]..[1340,45145+46])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1340,45145+47]..[1340,45145+48])
                            Pexp_ident "p" (stdlib/format.ml[1340,45145+47]..[1340,45145+48])
                      ]
                    expression (stdlib/format.ml[1340,45145+50]..[1340,45145+71])
                      Pexp_apply
                      expression (stdlib/format.ml[1340,45145+50]..[1340,45145+65])
                        Pexp_ident "pp_print_string" (stdlib/format.ml[1340,45145+50]..[1340,45145+65])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1340,45145+66]..[1340,45145+69])
                            Pexp_ident "ppf" (stdlib/format.ml[1340,45145+66]..[1340,45145+69])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1340,45145+70]..[1340,45145+71])
                            Pexp_ident "s" (stdlib/format.ml[1340,45145+70]..[1340,45145+71])
                      ]
                <case>
                  pattern (stdlib/format.ml[1341,45218+4]..[1342,45246+24])
                    Ppat_or
                    pattern (stdlib/format.ml[1341,45218+4]..[1341,45218+27])
                      Ppat_construct "Acc_char_literal" (stdlib/format.ml[1341,45218+4]..[1341,45218+20])
                      Some
                        []
                        pattern (stdlib/format.ml[1341,45218+21]..[1341,45218+27])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1341,45218+22]..[1341,45218+23])
                              Ppat_var "p" (stdlib/format.ml[1341,45218+22]..[1341,45218+23])
                            pattern (stdlib/format.ml[1341,45218+25]..[1341,45218+26])
                              Ppat_var "c" (stdlib/format.ml[1341,45218+25]..[1341,45218+26])
                          ]
                    pattern (stdlib/format.ml[1342,45246+4]..[1342,45246+24])
                      Ppat_construct "Acc_data_char" (stdlib/format.ml[1342,45246+4]..[1342,45246+17])
                      Some
                        []
                        pattern (stdlib/format.ml[1342,45246+18]..[1342,45246+24])
                          Ppat_tuple
                          [
                            pattern (stdlib/format.ml[1342,45246+19]..[1342,45246+20])
                              Ppat_var "p" (stdlib/format.ml[1342,45246+19]..[1342,45246+20])
                            pattern (stdlib/format.ml[1342,45246+22]..[1342,45246+23])
                              Ppat_var "c" (stdlib/format.ml[1342,45246+22]..[1342,45246+23])
                          ]
                  expression (stdlib/format.ml[1342,45246+32]..[1342,45246+70])
                    Pexp_sequence
                    expression (stdlib/format.ml[1342,45246+32]..[1342,45246+48])
                      Pexp_apply
                      expression (stdlib/format.ml[1342,45246+32]..[1342,45246+42])
                        Pexp_ident "strput_acc" (stdlib/format.ml[1342,45246+32]..[1342,45246+42])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1342,45246+43]..[1342,45246+46])
                            Pexp_ident "ppf" (stdlib/format.ml[1342,45246+43]..[1342,45246+46])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1342,45246+47]..[1342,45246+48])
                            Pexp_ident "p" (stdlib/format.ml[1342,45246+47]..[1342,45246+48])
                      ]
                    expression (stdlib/format.ml[1342,45246+50]..[1342,45246+69])
                      Pexp_apply
                      expression (stdlib/format.ml[1342,45246+50]..[1342,45246+63])
                        Pexp_ident "pp_print_char" (stdlib/format.ml[1342,45246+50]..[1342,45246+63])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1342,45246+64]..[1342,45246+67])
                            Pexp_ident "ppf" (stdlib/format.ml[1342,45246+64]..[1342,45246+67])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1342,45246+68]..[1342,45246+69])
                            Pexp_ident "c" (stdlib/format.ml[1342,45246+68]..[1342,45246+69])
                      ]
                <case>
                  pattern (stdlib/format.ml[1343,45317+4]..[1343,45317+20])
                    Ppat_construct "Acc_delay" (stdlib/format.ml[1343,45317+4]..[1343,45317+13])
                    Some
                      []
                      pattern (stdlib/format.ml[1343,45317+14]..[1343,45317+20])
                        Ppat_tuple
                        [
                          pattern (stdlib/format.ml[1343,45317+15]..[1343,45317+16])
                            Ppat_var "p" (stdlib/format.ml[1343,45317+15]..[1343,45317+16])
                          pattern (stdlib/format.ml[1343,45317+18]..[1343,45317+19])
                            Ppat_var "f" (stdlib/format.ml[1343,45317+18]..[1343,45317+19])
                        ]
                  expression (stdlib/format.ml[1343,45317+32]..[1343,45317+77])
                    Pexp_sequence
                    expression (stdlib/format.ml[1343,45317+32]..[1343,45317+48])
                      Pexp_apply
                      expression (stdlib/format.ml[1343,45317+32]..[1343,45317+42])
                        Pexp_ident "strput_acc" (stdlib/format.ml[1343,45317+32]..[1343,45317+42])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1343,45317+43]..[1343,45317+46])
                            Pexp_ident "ppf" (stdlib/format.ml[1343,45317+43]..[1343,45317+46])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1343,45317+47]..[1343,45317+48])
                            Pexp_ident "p" (stdlib/format.ml[1343,45317+47]..[1343,45317+48])
                      ]
                    expression (stdlib/format.ml[1343,45317+50]..[1343,45317+76])
                      Pexp_apply
                      expression (stdlib/format.ml[1343,45317+50]..[1343,45317+65])
                        Pexp_ident "pp_print_string" (stdlib/format.ml[1343,45317+50]..[1343,45317+65])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1343,45317+66]..[1343,45317+69])
                            Pexp_ident "ppf" (stdlib/format.ml[1343,45317+66]..[1343,45317+69])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1343,45317+70]..[1343,45317+76])
                            Pexp_apply
                            expression (stdlib/format.ml[1343,45317+71]..[1343,45317+72])
                              Pexp_ident "f" (stdlib/format.ml[1343,45317+71]..[1343,45317+72])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1343,45317+73]..[1343,45317+75])
                                  Pexp_construct "()" (stdlib/format.ml[1343,45317+73]..[1343,45317+75])
                                  None
                            ]
                      ]
                <case>
                  pattern (stdlib/format.ml[1344,45395+4]..[1344,45395+15])
                    Ppat_construct "Acc_flush" (stdlib/format.ml[1344,45395+4]..[1344,45395+13])
                    Some
                      []
                      pattern (stdlib/format.ml[1344,45395+14]..[1344,45395+15])
                        Ppat_var "p" (stdlib/format.ml[1344,45395+14]..[1344,45395+15])
                  expression (stdlib/format.ml[1344,45395+32]..[1344,45395+72])
                    Pexp_sequence
                    expression (stdlib/format.ml[1344,45395+32]..[1344,45395+48])
                      Pexp_apply
                      expression (stdlib/format.ml[1344,45395+32]..[1344,45395+42])
                        Pexp_ident "strput_acc" (stdlib/format.ml[1344,45395+32]..[1344,45395+42])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1344,45395+43]..[1344,45395+46])
                            Pexp_ident "ppf" (stdlib/format.ml[1344,45395+43]..[1344,45395+46])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1344,45395+47]..[1344,45395+48])
                            Pexp_ident "p" (stdlib/format.ml[1344,45395+47]..[1344,45395+48])
                      ]
                    expression (stdlib/format.ml[1344,45395+50]..[1344,45395+71])
                      Pexp_apply
                      expression (stdlib/format.ml[1344,45395+50]..[1344,45395+64])
                        Pexp_ident "pp_print_flush" (stdlib/format.ml[1344,45395+50]..[1344,45395+64])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1344,45395+65]..[1344,45395+68])
                            Pexp_ident "ppf" (stdlib/format.ml[1344,45395+65]..[1344,45395+68])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1344,45395+69]..[1344,45395+71])
                            Pexp_construct "()" (stdlib/format.ml[1344,45395+69]..[1344,45395+71])
                            None
                      ]
                <case>
                  pattern (stdlib/format.ml[1345,45468+4]..[1345,45468+28])
                    Ppat_construct "Acc_invalid_arg" (stdlib/format.ml[1345,45468+4]..[1345,45468+19])
                    Some
                      []
                      pattern (stdlib/format.ml[1345,45468+20]..[1345,45468+28])
                        Ppat_tuple
                        [
                          pattern (stdlib/format.ml[1345,45468+21]..[1345,45468+22])
                            Ppat_var "p" (stdlib/format.ml[1345,45468+21]..[1345,45468+22])
                          pattern (stdlib/format.ml[1345,45468+24]..[1345,45468+27])
                            Ppat_var "msg" (stdlib/format.ml[1345,45468+24]..[1345,45468+27])
                        ]
                  expression (stdlib/format.ml[1345,45468+32]..[1345,45468+66])
                    Pexp_sequence
                    expression (stdlib/format.ml[1345,45468+32]..[1345,45468+48])
                      Pexp_apply
                      expression (stdlib/format.ml[1345,45468+32]..[1345,45468+42])
                        Pexp_ident "strput_acc" (stdlib/format.ml[1345,45468+32]..[1345,45468+42])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1345,45468+43]..[1345,45468+46])
                            Pexp_ident "ppf" (stdlib/format.ml[1345,45468+43]..[1345,45468+46])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1345,45468+47]..[1345,45468+48])
                            Pexp_ident "p" (stdlib/format.ml[1345,45468+47]..[1345,45468+48])
                      ]
                    expression (stdlib/format.ml[1345,45468+50]..[1345,45468+65])
                      Pexp_apply
                      expression (stdlib/format.ml[1345,45468+50]..[1345,45468+61])
                        Pexp_ident "invalid_arg" (stdlib/format.ml[1345,45468+50]..[1345,45468+61])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1345,45468+62]..[1345,45468+65])
                            Pexp_ident "msg" (stdlib/format.ml[1345,45468+62]..[1345,45468+65])
                      ]
                <case>
                  pattern (stdlib/format.ml[1346,45535+4]..[1346,45535+14])
                    Ppat_construct "End_of_acc" (stdlib/format.ml[1346,45535+4]..[1346,45535+14])
                    None
                  expression (stdlib/format.ml[1346,45535+32]..[1346,45535+34])
                    Pexp_construct "()" (stdlib/format.ml[1346,45535+32]..[1346,45535+34])
                    None
              ]
    ]
  structure_item (stdlib/format.ml[1354,45635+0]..[1360,45791+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1354,45635+4]..[1354,45635+12])
          Ppat_var "kfprintf" (stdlib/format.ml[1354,45635+4]..[1354,45635+12])
        expression (stdlib/format.ml[1354,45635+13]..[1357,45731+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1354,45635+13]..[1354,45635+14])
            Ppat_var "k" (stdlib/format.ml[1354,45635+13]..[1354,45635+14])
          expression (stdlib/format.ml[1354,45635+15]..[1357,45731+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1354,45635+15]..[1354,45635+18])
              Ppat_var "ppf" (stdlib/format.ml[1354,45635+15]..[1354,45635+18])
            expression (stdlib/format.ml[1354,45635+19]..[1357,45731+18]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[1354,45635+19]..[1354,45635+36])
                Ppat_construct "Format" (stdlib/format.ml[1354,45635+20]..[1354,45635+26])
                Some
                  []
                  pattern (stdlib/format.ml[1354,45635+27]..[1354,45635+35])
                    Ppat_tuple
                    [
                      pattern (stdlib/format.ml[1354,45635+28]..[1354,45635+31])
                        Ppat_var "fmt" (stdlib/format.ml[1354,45635+28]..[1354,45635+31])
                      pattern (stdlib/format.ml[1354,45635+33]..[1354,45635+34])
                        Ppat_any
                    ]
              expression (stdlib/format.ml[1355,45674+2]..[1357,45731+18])
                Pexp_apply
                expression (stdlib/format.ml[1355,45674+2]..[1355,45674+13])
                  Pexp_ident "make_printf" (stdlib/format.ml[1355,45674+2]..[1355,45674+13])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[1356,45688+4]..[1356,45688+42])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (stdlib/format.ml[1356,45688+9]..[1356,45688+12])
                        Ppat_var "acc" (stdlib/format.ml[1356,45688+9]..[1356,45688+12])
                      expression (stdlib/format.ml[1356,45688+16]..[1356,45688+41])
                        Pexp_sequence
                        expression (stdlib/format.ml[1356,45688+16]..[1356,45688+34])
                          Pexp_apply
                          expression (stdlib/format.ml[1356,45688+16]..[1356,45688+26])
                            Pexp_ident "output_acc" (stdlib/format.ml[1356,45688+16]..[1356,45688+26])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1356,45688+27]..[1356,45688+30])
                                Pexp_ident "ppf" (stdlib/format.ml[1356,45688+27]..[1356,45688+30])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1356,45688+31]..[1356,45688+34])
                                Pexp_ident "acc" (stdlib/format.ml[1356,45688+31]..[1356,45688+34])
                          ]
                        expression (stdlib/format.ml[1356,45688+36]..[1356,45688+41])
                          Pexp_apply
                          expression (stdlib/format.ml[1356,45688+36]..[1356,45688+37])
                            Pexp_ident "k" (stdlib/format.ml[1356,45688+36]..[1356,45688+37])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1356,45688+38]..[1356,45688+41])
                                Pexp_ident "ppf" (stdlib/format.ml[1356,45688+38]..[1356,45688+41])
                          ]
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[1357,45731+4]..[1357,45731+14])
                      Pexp_construct "End_of_acc" (stdlib/format.ml[1357,45731+4]..[1357,45731+14])
                      None
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[1357,45731+15]..[1357,45731+18])
                      Pexp_ident "fmt" (stdlib/format.ml[1357,45731+15]..[1357,45731+18])
                ]
      <def>
        pattern (stdlib/format.ml[1359,45751+4]..[1359,45751+13])
          Ppat_var "ikfprintf" (stdlib/format.ml[1359,45751+4]..[1359,45751+13])
        expression (stdlib/format.ml[1359,45751+14]..[1360,45791+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1359,45751+14]..[1359,45751+15])
            Ppat_var "k" (stdlib/format.ml[1359,45751+14]..[1359,45751+15])
          expression (stdlib/format.ml[1359,45751+16]..[1360,45791+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1359,45751+16]..[1359,45751+19])
              Ppat_var "ppf" (stdlib/format.ml[1359,45751+16]..[1359,45751+19])
            expression (stdlib/format.ml[1359,45751+20]..[1360,45791+24]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/format.ml[1359,45751+20]..[1359,45751+37])
                Ppat_construct "Format" (stdlib/format.ml[1359,45751+21]..[1359,45751+27])
                Some
                  []
                  pattern (stdlib/format.ml[1359,45751+28]..[1359,45751+36])
                    Ppat_tuple
                    [
                      pattern (stdlib/format.ml[1359,45751+29]..[1359,45751+32])
                        Ppat_var "fmt" (stdlib/format.ml[1359,45751+29]..[1359,45751+32])
                      pattern (stdlib/format.ml[1359,45751+34]..[1359,45751+35])
                        Ppat_any
                    ]
              expression (stdlib/format.ml[1360,45791+2]..[1360,45791+24])
                Pexp_apply
                expression (stdlib/format.ml[1360,45791+2]..[1360,45791+14])
                  Pexp_ident "make_iprintf" (stdlib/format.ml[1360,45791+2]..[1360,45791+14])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[1360,45791+15]..[1360,45791+16])
                      Pexp_ident "k" (stdlib/format.ml[1360,45791+15]..[1360,45791+16])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[1360,45791+17]..[1360,45791+20])
                      Pexp_ident "ppf" (stdlib/format.ml[1360,45791+17]..[1360,45791+20])
                  <arg>
                  Nolabel
                    expression (stdlib/format.ml[1360,45791+21]..[1360,45791+24])
                      Pexp_ident "fmt" (stdlib/format.ml[1360,45791+21]..[1360,45791+24])
                ]
    ]
  structure_item (stdlib/format.ml[1362,45817+0]..[1363,45855+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1362,45817+4]..[1362,45817+12])
          Ppat_var "ifprintf" (stdlib/format.ml[1362,45817+4]..[1362,45817+12])
        expression (stdlib/format.ml[1362,45817+13]..[1363,45855+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1362,45817+13]..[1362,45817+17])
            Ppat_var "_ppf" (stdlib/format.ml[1362,45817+13]..[1362,45817+17])
          expression (stdlib/format.ml[1362,45817+18]..[1363,45855+28]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1362,45817+18]..[1362,45817+35])
              Ppat_construct "Format" (stdlib/format.ml[1362,45817+19]..[1362,45817+25])
              Some
                []
                pattern (stdlib/format.ml[1362,45817+26]..[1362,45817+34])
                  Ppat_tuple
                  [
                    pattern (stdlib/format.ml[1362,45817+27]..[1362,45817+30])
                      Ppat_var "fmt" (stdlib/format.ml[1362,45817+27]..[1362,45817+30])
                    pattern (stdlib/format.ml[1362,45817+32]..[1362,45817+33])
                      Ppat_any
                  ]
            expression (stdlib/format.ml[1363,45855+2]..[1363,45855+28])
              Pexp_apply
              expression (stdlib/format.ml[1363,45855+2]..[1363,45855+14])
                Pexp_ident "make_iprintf" (stdlib/format.ml[1363,45855+2]..[1363,45855+14])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[1363,45855+15]..[1363,45855+21])
                    Pexp_ident "ignore" (stdlib/format.ml[1363,45855+15]..[1363,45855+21])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[1363,45855+22]..[1363,45855+24])
                    Pexp_construct "()" (stdlib/format.ml[1363,45855+22]..[1363,45855+24])
                    None
                <arg>
                Nolabel
                  expression (stdlib/format.ml[1363,45855+25]..[1363,45855+28])
                    Pexp_ident "fmt" (stdlib/format.ml[1363,45855+25]..[1363,45855+28])
              ]
    ]
  structure_item (stdlib/format.ml[1365,45885+0]..[1365,45885+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1365,45885+4]..[1365,45885+11])
          Ppat_var "fprintf" (stdlib/format.ml[1365,45885+4]..[1365,45885+11])
        expression (stdlib/format.ml[1365,45885+12]..[1365,45885+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1365,45885+12]..[1365,45885+15])
            Ppat_var "ppf" (stdlib/format.ml[1365,45885+12]..[1365,45885+15])
          expression (stdlib/format.ml[1365,45885+18]..[1365,45885+37])
            Pexp_apply
            expression (stdlib/format.ml[1365,45885+18]..[1365,45885+26])
              Pexp_ident "kfprintf" (stdlib/format.ml[1365,45885+18]..[1365,45885+26])
            [
              <arg>
              Nolabel
                expression (stdlib/format.ml[1365,45885+27]..[1365,45885+33])
                  Pexp_ident "ignore" (stdlib/format.ml[1365,45885+27]..[1365,45885+33])
              <arg>
              Nolabel
                expression (stdlib/format.ml[1365,45885+34]..[1365,45885+37])
                  Pexp_ident "ppf" (stdlib/format.ml[1365,45885+34]..[1365,45885+37])
            ]
    ]
  structure_item (stdlib/format.ml[1366,45923+0]..[1366,45923+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1366,45923+4]..[1366,45923+10])
          Ppat_var "printf" (stdlib/format.ml[1366,45923+4]..[1366,45923+10])
        expression (stdlib/format.ml[1366,45923+11]..[1366,45923+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1366,45923+11]..[1366,45923+14])
            Ppat_var "fmt" (stdlib/format.ml[1366,45923+11]..[1366,45923+14])
          expression (stdlib/format.ml[1366,45923+17]..[1366,45923+42])
            Pexp_apply
            expression (stdlib/format.ml[1366,45923+17]..[1366,45923+24])
              Pexp_ident "fprintf" (stdlib/format.ml[1366,45923+17]..[1366,45923+24])
            [
              <arg>
              Nolabel
                expression (stdlib/format.ml[1366,45923+25]..[1366,45923+38])
                  Pexp_ident "std_formatter" (stdlib/format.ml[1366,45923+25]..[1366,45923+38])
              <arg>
              Nolabel
                expression (stdlib/format.ml[1366,45923+39]..[1366,45923+42])
                  Pexp_ident "fmt" (stdlib/format.ml[1366,45923+39]..[1366,45923+42])
            ]
    ]
  structure_item (stdlib/format.ml[1367,45966+0]..[1367,45966+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1367,45966+4]..[1367,45966+11])
          Ppat_var "eprintf" (stdlib/format.ml[1367,45966+4]..[1367,45966+11])
        expression (stdlib/format.ml[1367,45966+12]..[1367,45966+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1367,45966+12]..[1367,45966+15])
            Ppat_var "fmt" (stdlib/format.ml[1367,45966+12]..[1367,45966+15])
          expression (stdlib/format.ml[1367,45966+18]..[1367,45966+43])
            Pexp_apply
            expression (stdlib/format.ml[1367,45966+18]..[1367,45966+25])
              Pexp_ident "fprintf" (stdlib/format.ml[1367,45966+18]..[1367,45966+25])
            [
              <arg>
              Nolabel
                expression (stdlib/format.ml[1367,45966+26]..[1367,45966+39])
                  Pexp_ident "err_formatter" (stdlib/format.ml[1367,45966+26]..[1367,45966+39])
              <arg>
              Nolabel
                expression (stdlib/format.ml[1367,45966+40]..[1367,45966+43])
                  Pexp_ident "fmt" (stdlib/format.ml[1367,45966+40]..[1367,45966+43])
            ]
    ]
  structure_item (stdlib/format.ml[1369,46011+0]..[1372,46111+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1369,46011+4]..[1369,46011+12])
          Ppat_var "kdprintf" (stdlib/format.ml[1369,46011+4]..[1369,46011+12])
        expression (stdlib/format.ml[1369,46011+13]..[1372,46111+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1369,46011+13]..[1369,46011+14])
            Ppat_var "k" (stdlib/format.ml[1369,46011+13]..[1369,46011+14])
          expression (stdlib/format.ml[1369,46011+15]..[1372,46111+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1369,46011+15]..[1369,46011+32])
              Ppat_construct "Format" (stdlib/format.ml[1369,46011+16]..[1369,46011+22])
              Some
                []
                pattern (stdlib/format.ml[1369,46011+23]..[1369,46011+31])
                  Ppat_tuple
                  [
                    pattern (stdlib/format.ml[1369,46011+24]..[1369,46011+27])
                      Ppat_var "fmt" (stdlib/format.ml[1369,46011+24]..[1369,46011+27])
                    pattern (stdlib/format.ml[1369,46011+29]..[1369,46011+30])
                      Ppat_any
                  ]
            expression (stdlib/format.ml[1370,46046+2]..[1372,46111+18])
              Pexp_apply
              expression (stdlib/format.ml[1370,46046+2]..[1370,46046+13])
                Pexp_ident "make_printf" (stdlib/format.ml[1370,46046+2]..[1370,46046+13])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[1371,46060+4]..[1371,46060+50])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (stdlib/format.ml[1371,46060+9]..[1371,46060+12])
                      Ppat_var "acc" (stdlib/format.ml[1371,46060+9]..[1371,46060+12])
                    expression (stdlib/format.ml[1371,46060+16]..[1371,46060+49])
                      Pexp_apply
                      expression (stdlib/format.ml[1371,46060+16]..[1371,46060+17])
                        Pexp_ident "k" (stdlib/format.ml[1371,46060+16]..[1371,46060+17])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1371,46060+18]..[1371,46060+49])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (stdlib/format.ml[1371,46060+23]..[1371,46060+26])
                              Ppat_var "ppf" (stdlib/format.ml[1371,46060+23]..[1371,46060+26])
                            expression (stdlib/format.ml[1371,46060+30]..[1371,46060+48])
                              Pexp_apply
                              expression (stdlib/format.ml[1371,46060+30]..[1371,46060+40])
                                Pexp_ident "output_acc" (stdlib/format.ml[1371,46060+30]..[1371,46060+40])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[1371,46060+41]..[1371,46060+44])
                                    Pexp_ident "ppf" (stdlib/format.ml[1371,46060+41]..[1371,46060+44])
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[1371,46060+45]..[1371,46060+48])
                                    Pexp_ident "acc" (stdlib/format.ml[1371,46060+45]..[1371,46060+48])
                              ]
                      ]
                <arg>
                Nolabel
                  expression (stdlib/format.ml[1372,46111+4]..[1372,46111+14])
                    Pexp_construct "End_of_acc" (stdlib/format.ml[1372,46111+4]..[1372,46111+14])
                    None
                <arg>
                Nolabel
                  expression (stdlib/format.ml[1372,46111+15]..[1372,46111+18])
                    Pexp_ident "fmt" (stdlib/format.ml[1372,46111+15]..[1372,46111+18])
              ]
    ]
  structure_item (stdlib/format.ml[1374,46131+0]..[1374,46131+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1374,46131+4]..[1374,46131+11])
          Ppat_var "dprintf" (stdlib/format.ml[1374,46131+4]..[1374,46131+11])
        expression (stdlib/format.ml[1374,46131+12]..[1374,46131+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1374,46131+12]..[1374,46131+15])
            Ppat_var "fmt" (stdlib/format.ml[1374,46131+12]..[1374,46131+15])
          expression (stdlib/format.ml[1374,46131+18]..[1374,46131+43])
            Pexp_apply
            expression (stdlib/format.ml[1374,46131+18]..[1374,46131+26])
              Pexp_ident "kdprintf" (stdlib/format.ml[1374,46131+18]..[1374,46131+26])
            [
              <arg>
              Nolabel
                expression (stdlib/format.ml[1374,46131+27]..[1374,46131+39])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (stdlib/format.ml[1374,46131+32]..[1374,46131+33])
                    Ppat_var "i" (stdlib/format.ml[1374,46131+32]..[1374,46131+33])
                  expression (stdlib/format.ml[1374,46131+37]..[1374,46131+38])
                    Pexp_ident "i" (stdlib/format.ml[1374,46131+37]..[1374,46131+38])
              <arg>
              Nolabel
                expression (stdlib/format.ml[1374,46131+40]..[1374,46131+43])
                  Pexp_ident "fmt" (stdlib/format.ml[1374,46131+40]..[1374,46131+43])
            ]
    ]
  structure_item (stdlib/format.ml[1376,46176+0]..[1382,46357+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1376,46176+4]..[1376,46176+12])
          Ppat_var "ksprintf" (stdlib/format.ml[1376,46176+4]..[1376,46176+12])
        expression (stdlib/format.ml[1376,46176+13]..[1382,46357+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1376,46176+13]..[1376,46176+14])
            Ppat_var "k" (stdlib/format.ml[1376,46176+13]..[1376,46176+14])
          expression (stdlib/format.ml[1376,46176+15]..[1382,46357+30]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1376,46176+15]..[1376,46176+32])
              Ppat_construct "Format" (stdlib/format.ml[1376,46176+16]..[1376,46176+22])
              Some
                []
                pattern (stdlib/format.ml[1376,46176+23]..[1376,46176+31])
                  Ppat_tuple
                  [
                    pattern (stdlib/format.ml[1376,46176+24]..[1376,46176+27])
                      Ppat_var "fmt" (stdlib/format.ml[1376,46176+24]..[1376,46176+27])
                    pattern (stdlib/format.ml[1376,46176+29]..[1376,46176+30])
                      Ppat_any
                  ]
            expression (stdlib/format.ml[1377,46211+2]..[1382,46357+30])
              Pexp_let Nonrec
              [
                <def>
                  pattern (stdlib/format.ml[1377,46211+6]..[1377,46211+7])
                    Ppat_var "b" (stdlib/format.ml[1377,46211+6]..[1377,46211+7])
                  expression (stdlib/format.ml[1377,46211+10]..[1377,46211+27])
                    Pexp_apply
                    expression (stdlib/format.ml[1377,46211+10]..[1377,46211+24])
                      Pexp_ident "pp_make_buffer" (stdlib/format.ml[1377,46211+10]..[1377,46211+24])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1377,46211+25]..[1377,46211+27])
                          Pexp_construct "()" (stdlib/format.ml[1377,46211+25]..[1377,46211+27])
                          None
                    ]
              ]
              expression (stdlib/format.ml[1378,46242+2]..[1382,46357+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/format.ml[1378,46242+6]..[1378,46242+9])
                      Ppat_var "ppf" (stdlib/format.ml[1378,46242+6]..[1378,46242+9])
                    expression (stdlib/format.ml[1378,46242+12]..[1378,46242+33])
                      Pexp_apply
                      expression (stdlib/format.ml[1378,46242+12]..[1378,46242+31])
                        Pexp_ident "formatter_of_buffer" (stdlib/format.ml[1378,46242+12]..[1378,46242+31])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1378,46242+32]..[1378,46242+33])
                            Pexp_ident "b" (stdlib/format.ml[1378,46242+32]..[1378,46242+33])
                      ]
                ]
                expression (stdlib/format.ml[1379,46279+2]..[1382,46357+30])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (stdlib/format.ml[1379,46279+6]..[1379,46279+7])
                        Ppat_var "k" (stdlib/format.ml[1379,46279+6]..[1379,46279+7])
                      expression (stdlib/format.ml[1379,46279+8]..[1381,46317+36]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/format.ml[1379,46279+8]..[1379,46279+11])
                          Ppat_var "acc" (stdlib/format.ml[1379,46279+8]..[1379,46279+11])
                        expression (stdlib/format.ml[1380,46293+4]..[1381,46317+36])
                          Pexp_sequence
                          expression (stdlib/format.ml[1380,46293+4]..[1380,46293+22])
                            Pexp_apply
                            expression (stdlib/format.ml[1380,46293+4]..[1380,46293+14])
                              Pexp_ident "strput_acc" (stdlib/format.ml[1380,46293+4]..[1380,46293+14])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1380,46293+15]..[1380,46293+18])
                                  Pexp_ident "ppf" (stdlib/format.ml[1380,46293+15]..[1380,46293+18])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1380,46293+19]..[1380,46293+22])
                                  Pexp_ident "acc" (stdlib/format.ml[1380,46293+19]..[1380,46293+22])
                            ]
                          expression (stdlib/format.ml[1381,46317+4]..[1381,46317+36])
                            Pexp_apply
                            expression (stdlib/format.ml[1381,46317+4]..[1381,46317+5])
                              Pexp_ident "k" (stdlib/format.ml[1381,46317+4]..[1381,46317+5])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1381,46317+6]..[1381,46317+36])
                                  Pexp_apply
                                  expression (stdlib/format.ml[1381,46317+7]..[1381,46317+29])
                                    Pexp_ident "flush_buffer_formatter" (stdlib/format.ml[1381,46317+7]..[1381,46317+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1381,46317+30]..[1381,46317+31])
                                        Pexp_ident "b" (stdlib/format.ml[1381,46317+30]..[1381,46317+31])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1381,46317+32]..[1381,46317+35])
                                        Pexp_ident "ppf" (stdlib/format.ml[1381,46317+32]..[1381,46317+35])
                                  ]
                            ]
                  ]
                  expression (stdlib/format.ml[1382,46357+2]..[1382,46357+30])
                    Pexp_apply
                    expression (stdlib/format.ml[1382,46357+2]..[1382,46357+13])
                      Pexp_ident "make_printf" (stdlib/format.ml[1382,46357+2]..[1382,46357+13])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1382,46357+14]..[1382,46357+15])
                          Pexp_ident "k" (stdlib/format.ml[1382,46357+14]..[1382,46357+15])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1382,46357+16]..[1382,46357+26])
                          Pexp_construct "End_of_acc" (stdlib/format.ml[1382,46357+16]..[1382,46357+26])
                          None
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1382,46357+27]..[1382,46357+30])
                          Pexp_ident "fmt" (stdlib/format.ml[1382,46357+27]..[1382,46357+30])
                    ]
    ]
  structure_item (stdlib/format.ml[1385,46390+0]..[1385,46390+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1385,46390+4]..[1385,46390+11])
          Ppat_var "sprintf" (stdlib/format.ml[1385,46390+4]..[1385,46390+11])
        expression (stdlib/format.ml[1385,46390+12]..[1385,46390+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1385,46390+12]..[1385,46390+15])
            Ppat_var "fmt" (stdlib/format.ml[1385,46390+12]..[1385,46390+15])
          expression (stdlib/format.ml[1385,46390+18]..[1385,46390+33])
            Pexp_apply
            expression (stdlib/format.ml[1385,46390+18]..[1385,46390+26])
              Pexp_ident "ksprintf" (stdlib/format.ml[1385,46390+18]..[1385,46390+26])
            [
              <arg>
              Nolabel
                expression (stdlib/format.ml[1385,46390+27]..[1385,46390+29])
                  Pexp_ident "id" (stdlib/format.ml[1385,46390+27]..[1385,46390+29])
              <arg>
              Nolabel
                expression (stdlib/format.ml[1385,46390+30]..[1385,46390+33])
                  Pexp_ident "fmt" (stdlib/format.ml[1385,46390+30]..[1385,46390+33])
            ]
    ]
  structure_item (stdlib/format.ml[1387,46425+0]..[1393,46607+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1387,46425+4]..[1387,46425+13])
          Ppat_var "kasprintf" (stdlib/format.ml[1387,46425+4]..[1387,46425+13])
        expression (stdlib/format.ml[1387,46425+14]..[1393,46607+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1387,46425+14]..[1387,46425+15])
            Ppat_var "k" (stdlib/format.ml[1387,46425+14]..[1387,46425+15])
          expression (stdlib/format.ml[1387,46425+16]..[1393,46607+30]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1387,46425+16]..[1387,46425+33])
              Ppat_construct "Format" (stdlib/format.ml[1387,46425+17]..[1387,46425+23])
              Some
                []
                pattern (stdlib/format.ml[1387,46425+24]..[1387,46425+32])
                  Ppat_tuple
                  [
                    pattern (stdlib/format.ml[1387,46425+25]..[1387,46425+28])
                      Ppat_var "fmt" (stdlib/format.ml[1387,46425+25]..[1387,46425+28])
                    pattern (stdlib/format.ml[1387,46425+30]..[1387,46425+31])
                      Ppat_any
                  ]
            expression (stdlib/format.ml[1388,46461+2]..[1393,46607+30])
              Pexp_let Nonrec
              [
                <def>
                  pattern (stdlib/format.ml[1388,46461+6]..[1388,46461+7])
                    Ppat_var "b" (stdlib/format.ml[1388,46461+6]..[1388,46461+7])
                  expression (stdlib/format.ml[1388,46461+10]..[1388,46461+27])
                    Pexp_apply
                    expression (stdlib/format.ml[1388,46461+10]..[1388,46461+24])
                      Pexp_ident "pp_make_buffer" (stdlib/format.ml[1388,46461+10]..[1388,46461+24])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1388,46461+25]..[1388,46461+27])
                          Pexp_construct "()" (stdlib/format.ml[1388,46461+25]..[1388,46461+27])
                          None
                    ]
              ]
              expression (stdlib/format.ml[1389,46492+2]..[1393,46607+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/format.ml[1389,46492+6]..[1389,46492+9])
                      Ppat_var "ppf" (stdlib/format.ml[1389,46492+6]..[1389,46492+9])
                    expression (stdlib/format.ml[1389,46492+12]..[1389,46492+33])
                      Pexp_apply
                      expression (stdlib/format.ml[1389,46492+12]..[1389,46492+31])
                        Pexp_ident "formatter_of_buffer" (stdlib/format.ml[1389,46492+12]..[1389,46492+31])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1389,46492+32]..[1389,46492+33])
                            Pexp_ident "b" (stdlib/format.ml[1389,46492+32]..[1389,46492+33])
                      ]
                ]
                expression (stdlib/format.ml[1390,46529+2]..[1393,46607+30])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (stdlib/format.ml[1390,46529+6]..[1390,46529+7])
                        Ppat_var "k" (stdlib/format.ml[1390,46529+6]..[1390,46529+7])
                      expression (stdlib/format.ml[1390,46529+8]..[1392,46567+36]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/format.ml[1390,46529+8]..[1390,46529+11])
                          Ppat_var "acc" (stdlib/format.ml[1390,46529+8]..[1390,46529+11])
                        expression (stdlib/format.ml[1391,46543+4]..[1392,46567+36])
                          Pexp_sequence
                          expression (stdlib/format.ml[1391,46543+4]..[1391,46543+22])
                            Pexp_apply
                            expression (stdlib/format.ml[1391,46543+4]..[1391,46543+14])
                              Pexp_ident "output_acc" (stdlib/format.ml[1391,46543+4]..[1391,46543+14])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1391,46543+15]..[1391,46543+18])
                                  Pexp_ident "ppf" (stdlib/format.ml[1391,46543+15]..[1391,46543+18])
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1391,46543+19]..[1391,46543+22])
                                  Pexp_ident "acc" (stdlib/format.ml[1391,46543+19]..[1391,46543+22])
                            ]
                          expression (stdlib/format.ml[1392,46567+4]..[1392,46567+36])
                            Pexp_apply
                            expression (stdlib/format.ml[1392,46567+4]..[1392,46567+5])
                              Pexp_ident "k" (stdlib/format.ml[1392,46567+4]..[1392,46567+5])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1392,46567+6]..[1392,46567+36])
                                  Pexp_apply
                                  expression (stdlib/format.ml[1392,46567+7]..[1392,46567+29])
                                    Pexp_ident "flush_buffer_formatter" (stdlib/format.ml[1392,46567+7]..[1392,46567+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1392,46567+30]..[1392,46567+31])
                                        Pexp_ident "b" (stdlib/format.ml[1392,46567+30]..[1392,46567+31])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/format.ml[1392,46567+32]..[1392,46567+35])
                                        Pexp_ident "ppf" (stdlib/format.ml[1392,46567+32]..[1392,46567+35])
                                  ]
                            ]
                  ]
                  expression (stdlib/format.ml[1393,46607+2]..[1393,46607+30])
                    Pexp_apply
                    expression (stdlib/format.ml[1393,46607+2]..[1393,46607+13])
                      Pexp_ident "make_printf" (stdlib/format.ml[1393,46607+2]..[1393,46607+13])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1393,46607+14]..[1393,46607+15])
                          Pexp_ident "k" (stdlib/format.ml[1393,46607+14]..[1393,46607+15])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1393,46607+16]..[1393,46607+26])
                          Pexp_construct "End_of_acc" (stdlib/format.ml[1393,46607+16]..[1393,46607+26])
                          None
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1393,46607+27]..[1393,46607+30])
                          Pexp_ident "fmt" (stdlib/format.ml[1393,46607+27]..[1393,46607+30])
                    ]
    ]
  structure_item (stdlib/format.ml[1396,46640+0]..[1396,46640+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1396,46640+4]..[1396,46640+12])
          Ppat_var "asprintf" (stdlib/format.ml[1396,46640+4]..[1396,46640+12])
        expression (stdlib/format.ml[1396,46640+13]..[1396,46640+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1396,46640+13]..[1396,46640+16])
            Ppat_var "fmt" (stdlib/format.ml[1396,46640+13]..[1396,46640+16])
          expression (stdlib/format.ml[1396,46640+19]..[1396,46640+35])
            Pexp_apply
            expression (stdlib/format.ml[1396,46640+19]..[1396,46640+28])
              Pexp_ident "kasprintf" (stdlib/format.ml[1396,46640+19]..[1396,46640+28])
            [
              <arg>
              Nolabel
                expression (stdlib/format.ml[1396,46640+29]..[1396,46640+31])
                  Pexp_ident "id" (stdlib/format.ml[1396,46640+29]..[1396,46640+31])
              <arg>
              Nolabel
                expression (stdlib/format.ml[1396,46640+32]..[1396,46640+35])
                  Pexp_ident "fmt" (stdlib/format.ml[1396,46640+32]..[1396,46640+35])
            ]
    ]
  structure_item (stdlib/format.ml[1400,46734+0]..[1402,46804+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1400,46734+4]..[1400,46734+29])
          Ppat_var "flush_standard_formatters" (stdlib/format.ml[1400,46734+4]..[1400,46734+29])
        expression (stdlib/format.ml[1400,46734+30]..[1402,46804+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1400,46734+30]..[1400,46734+32])
            Ppat_construct "()" (stdlib/format.ml[1400,46734+30]..[1400,46734+32])
            None
          expression (stdlib/format.ml[1401,46769+2]..[1402,46804+33])
            Pexp_sequence
            expression (stdlib/format.ml[1401,46769+2]..[1401,46769+33])
              Pexp_apply
              expression (stdlib/format.ml[1401,46769+2]..[1401,46769+16])
                Pexp_ident "pp_print_flush" (stdlib/format.ml[1401,46769+2]..[1401,46769+16])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[1401,46769+17]..[1401,46769+30])
                    Pexp_ident "std_formatter" (stdlib/format.ml[1401,46769+17]..[1401,46769+30])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[1401,46769+31]..[1401,46769+33])
                    Pexp_construct "()" (stdlib/format.ml[1401,46769+31]..[1401,46769+33])
                    None
              ]
            expression (stdlib/format.ml[1402,46804+2]..[1402,46804+33])
              Pexp_apply
              expression (stdlib/format.ml[1402,46804+2]..[1402,46804+16])
                Pexp_ident "pp_print_flush" (stdlib/format.ml[1402,46804+2]..[1402,46804+16])
              [
                <arg>
                Nolabel
                  expression (stdlib/format.ml[1402,46804+17]..[1402,46804+30])
                    Pexp_ident "err_formatter" (stdlib/format.ml[1402,46804+17]..[1402,46804+30])
                <arg>
                Nolabel
                  expression (stdlib/format.ml[1402,46804+31]..[1402,46804+33])
                    Pexp_construct "()" (stdlib/format.ml[1402,46804+31]..[1402,46804+33])
                    None
              ]
    ]
  structure_item (stdlib/format.ml[1404,46839+0]..[1404,46839+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1404,46839+4]..[1404,46839+6])
          Ppat_construct "()" (stdlib/format.ml[1404,46839+4]..[1404,46839+6])
          None
        expression (stdlib/format.ml[1404,46839+9]..[1404,46839+42])
          Pexp_apply
          expression (stdlib/format.ml[1404,46839+9]..[1404,46839+16])
            Pexp_ident "at_exit" (stdlib/format.ml[1404,46839+9]..[1404,46839+16])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1404,46839+17]..[1404,46839+42])
                Pexp_ident "flush_standard_formatters" (stdlib/format.ml[1404,46839+17]..[1404,46839+42])
          ]
    ]
  structure_item (stdlib/format.ml[1413,46974+0]..[1417,47141+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1413,46974+4]..[1413,46974+41])
          Ppat_var "pp_set_all_formatter_output_functions" (stdlib/format.ml[1413,46974+4]..[1413,46974+41])
        expression (stdlib/format.ml[1413,46974+42]..[1417,47141+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1413,46974+42]..[1413,46974+47])
            Ppat_var "state" (stdlib/format.ml[1413,46974+42]..[1413,46974+47])
          expression (stdlib/format.ml[1414,47022+4]..[1417,47141+26]) ghost
            Pexp_fun
            Labelled "out"
            None
            pattern (stdlib/format.ml[1414,47022+9]..[1414,47022+10])
              Ppat_var "f" (stdlib/format.ml[1414,47022+9]..[1414,47022+10])
            expression (stdlib/format.ml[1414,47022+11]..[1417,47141+26]) ghost
              Pexp_fun
              Labelled "flush"
              None
              pattern (stdlib/format.ml[1414,47022+18]..[1414,47022+19])
                Ppat_var "g" (stdlib/format.ml[1414,47022+18]..[1414,47022+19])
              expression (stdlib/format.ml[1414,47022+20]..[1417,47141+26]) ghost
                Pexp_fun
                Labelled "newline"
                None
                pattern (stdlib/format.ml[1414,47022+29]..[1414,47022+30])
                  Ppat_var "h" (stdlib/format.ml[1414,47022+29]..[1414,47022+30])
                expression (stdlib/format.ml[1414,47022+31]..[1417,47141+26]) ghost
                  Pexp_fun
                  Labelled "spaces"
                  None
                  pattern (stdlib/format.ml[1414,47022+39]..[1414,47022+40])
                    Ppat_var "i" (stdlib/format.ml[1414,47022+39]..[1414,47022+40])
                  expression (stdlib/format.ml[1415,47065+2]..[1417,47141+26])
                    Pexp_sequence
                    expression (stdlib/format.ml[1415,47065+2]..[1415,47065+45])
                      Pexp_apply
                      expression (stdlib/format.ml[1415,47065+2]..[1415,47065+35])
                        Pexp_ident "pp_set_formatter_output_functions" (stdlib/format.ml[1415,47065+2]..[1415,47065+35])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1415,47065+36]..[1415,47065+41])
                            Pexp_ident "state" (stdlib/format.ml[1415,47065+36]..[1415,47065+41])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1415,47065+42]..[1415,47065+43])
                            Pexp_ident "f" (stdlib/format.ml[1415,47065+42]..[1415,47065+43])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1415,47065+44]..[1415,47065+45])
                            Pexp_ident "g" (stdlib/format.ml[1415,47065+44]..[1415,47065+45])
                      ]
                    expression (stdlib/format.ml[1416,47112+2]..[1417,47141+26])
                      Pexp_sequence
                      expression (stdlib/format.ml[1416,47112+2]..[1416,47112+27])
                        Pexp_setfield
                        expression (stdlib/format.ml[1416,47112+2]..[1416,47112+7])
                          Pexp_ident "state" (stdlib/format.ml[1416,47112+2]..[1416,47112+7])
                        "pp_out_newline" (stdlib/format.ml[1416,47112+8]..[1416,47112+22])
                        expression (stdlib/format.ml[1416,47112+26]..[1416,47112+27])
                          Pexp_ident "h" (stdlib/format.ml[1416,47112+26]..[1416,47112+27])
                      expression (stdlib/format.ml[1417,47141+2]..[1417,47141+26])
                        Pexp_setfield
                        expression (stdlib/format.ml[1417,47141+2]..[1417,47141+7])
                          Pexp_ident "state" (stdlib/format.ml[1417,47141+2]..[1417,47141+7])
                        "pp_out_spaces" (stdlib/format.ml[1417,47141+8]..[1417,47141+21])
                        expression (stdlib/format.ml[1417,47141+25]..[1417,47141+26])
                          Pexp_ident "i" (stdlib/format.ml[1417,47141+25]..[1417,47141+26])
    ]
  structure_item (stdlib/format.ml[1420,47231+0]..[1422,47328+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1420,47231+4]..[1420,47231+41])
          Ppat_var "pp_get_all_formatter_output_functions" (stdlib/format.ml[1420,47231+4]..[1420,47231+41])
        expression (stdlib/format.ml[1420,47231+42]..[1422,47328+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1420,47231+42]..[1420,47231+47])
            Ppat_var "state" (stdlib/format.ml[1420,47231+42]..[1420,47231+47])
          expression (stdlib/format.ml[1420,47231+48]..[1422,47328+45]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1420,47231+48]..[1420,47231+50])
              Ppat_construct "()" (stdlib/format.ml[1420,47231+48]..[1420,47231+50])
              None
            expression (stdlib/format.ml[1421,47284+2]..[1422,47328+45])
              Pexp_tuple
              [
                expression (stdlib/format.ml[1421,47284+3]..[1421,47284+22])
                  Pexp_field
                  expression (stdlib/format.ml[1421,47284+3]..[1421,47284+8])
                    Pexp_ident "state" (stdlib/format.ml[1421,47284+3]..[1421,47284+8])
                  "pp_out_string" (stdlib/format.ml[1421,47284+9]..[1421,47284+22])
                expression (stdlib/format.ml[1421,47284+24]..[1421,47284+42])
                  Pexp_field
                  expression (stdlib/format.ml[1421,47284+24]..[1421,47284+29])
                    Pexp_ident "state" (stdlib/format.ml[1421,47284+24]..[1421,47284+29])
                  "pp_out_flush" (stdlib/format.ml[1421,47284+30]..[1421,47284+42])
                expression (stdlib/format.ml[1422,47328+3]..[1422,47328+23])
                  Pexp_field
                  expression (stdlib/format.ml[1422,47328+3]..[1422,47328+8])
                    Pexp_ident "state" (stdlib/format.ml[1422,47328+3]..[1422,47328+8])
                  "pp_out_newline" (stdlib/format.ml[1422,47328+9]..[1422,47328+23])
                expression (stdlib/format.ml[1422,47328+25]..[1422,47328+44])
                  Pexp_field
                  expression (stdlib/format.ml[1422,47328+25]..[1422,47328+30])
                    Pexp_ident "state" (stdlib/format.ml[1422,47328+25]..[1422,47328+30])
                  "pp_out_spaces" (stdlib/format.ml[1422,47328+31]..[1422,47328+44])
              ]
    ]
  structure_item (stdlib/format.ml[1426,47435+0]..[1427,47476+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1426,47435+4]..[1426,47435+38])
          Ppat_var "set_all_formatter_output_functions" (stdlib/format.ml[1426,47435+4]..[1426,47435+38])
        expression (stdlib/format.ml[1427,47476+2]..[1427,47476+53])
          Pexp_apply
          expression (stdlib/format.ml[1427,47476+2]..[1427,47476+39])
            Pexp_ident "pp_set_all_formatter_output_functions" (stdlib/format.ml[1427,47476+2]..[1427,47476+39])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1427,47476+40]..[1427,47476+53])
                Pexp_ident "std_formatter" (stdlib/format.ml[1427,47476+40]..[1427,47476+53])
          ]
    ]
  structure_item (stdlib/format.ml[1431,47591+0]..[1432,47632+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1431,47591+4]..[1431,47591+38])
          Ppat_var "get_all_formatter_output_functions" (stdlib/format.ml[1431,47591+4]..[1431,47591+38])
        expression (stdlib/format.ml[1432,47632+2]..[1432,47632+53])
          Pexp_apply
          expression (stdlib/format.ml[1432,47632+2]..[1432,47632+39])
            Pexp_ident "pp_get_all_formatter_output_functions" (stdlib/format.ml[1432,47632+2]..[1432,47632+39])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1432,47632+40]..[1432,47632+53])
                Pexp_ident "std_formatter" (stdlib/format.ml[1432,47632+40]..[1432,47632+53])
          ]
    ]
  structure_item (stdlib/format.ml[1442,48040+0]..[1445,48204+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1442,48040+4]..[1442,48040+11])
          Ppat_var "bprintf" (stdlib/format.ml[1442,48040+4]..[1442,48040+11])
        expression (stdlib/format.ml[1442,48040+12]..[1445,48204+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1442,48040+12]..[1442,48040+13])
            Ppat_var "b" (stdlib/format.ml[1442,48040+12]..[1442,48040+13])
          expression (stdlib/format.ml[1442,48040+14]..[1445,48204+30]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1442,48040+14]..[1442,48040+62])
              Ppat_constraint
              pattern (stdlib/format.ml[1442,48040+15]..[1442,48040+30])
                Ppat_construct "Format" (stdlib/format.ml[1442,48040+15]..[1442,48040+21])
                Some
                  []
                  pattern (stdlib/format.ml[1442,48040+22]..[1442,48040+30])
                    Ppat_tuple
                    [
                      pattern (stdlib/format.ml[1442,48040+23]..[1442,48040+26])
                        Ppat_var "fmt" (stdlib/format.ml[1442,48040+23]..[1442,48040+26])
                      pattern (stdlib/format.ml[1442,48040+28]..[1442,48040+29])
                        Ppat_any
                    ]
              core_type (stdlib/format.ml[1442,48040+33]..[1442,48040+61])
                Ptyp_constr "format" (stdlib/format.ml[1442,48040+55]..[1442,48040+61])
                [
                  core_type (stdlib/format.ml[1442,48040+34]..[1442,48040+36])
                    Ptyp_var a
                  core_type (stdlib/format.ml[1442,48040+38]..[1442,48040+47])
                    Ptyp_constr "formatter" (stdlib/format.ml[1442,48040+38]..[1442,48040+47])
                    []
                  core_type (stdlib/format.ml[1442,48040+49]..[1442,48040+53])
                    Ptyp_constr "unit" (stdlib/format.ml[1442,48040+49]..[1442,48040+53])
                    []
                ]
            expression (stdlib/format.ml[1443,48105+2]..[1445,48204+30])
              Pexp_let Nonrec
              [
                <def>
                  pattern (stdlib/format.ml[1443,48105+6]..[1443,48105+9])
                    Ppat_var "ppf" (stdlib/format.ml[1443,48105+6]..[1443,48105+9])
                  expression (stdlib/format.ml[1443,48105+12]..[1443,48105+33])
                    Pexp_apply
                    expression (stdlib/format.ml[1443,48105+12]..[1443,48105+31])
                      Pexp_ident "formatter_of_buffer" (stdlib/format.ml[1443,48105+12]..[1443,48105+31])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1443,48105+32]..[1443,48105+33])
                          Pexp_ident "b" (stdlib/format.ml[1443,48105+32]..[1443,48105+33])
                    ]
              ]
              expression (stdlib/format.ml[1444,48142+2]..[1445,48204+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/format.ml[1444,48142+6]..[1444,48142+7])
                      Ppat_var "k" (stdlib/format.ml[1444,48142+6]..[1444,48142+7])
                    expression (stdlib/format.ml[1444,48142+8]..[1444,48142+58]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (stdlib/format.ml[1444,48142+8]..[1444,48142+11])
                        Ppat_var "acc" (stdlib/format.ml[1444,48142+8]..[1444,48142+11])
                      expression (stdlib/format.ml[1444,48142+14]..[1444,48142+58])
                        Pexp_sequence
                        expression (stdlib/format.ml[1444,48142+14]..[1444,48142+32])
                          Pexp_apply
                          expression (stdlib/format.ml[1444,48142+14]..[1444,48142+24])
                            Pexp_ident "output_acc" (stdlib/format.ml[1444,48142+14]..[1444,48142+24])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1444,48142+25]..[1444,48142+28])
                                Pexp_ident "ppf" (stdlib/format.ml[1444,48142+25]..[1444,48142+28])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1444,48142+29]..[1444,48142+32])
                                Pexp_ident "acc" (stdlib/format.ml[1444,48142+29]..[1444,48142+32])
                          ]
                        expression (stdlib/format.ml[1444,48142+34]..[1444,48142+58])
                          Pexp_apply
                          expression (stdlib/format.ml[1444,48142+34]..[1444,48142+48])
                            Pexp_ident "pp_flush_queue" (stdlib/format.ml[1444,48142+34]..[1444,48142+48])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1444,48142+49]..[1444,48142+52])
                                Pexp_ident "ppf" (stdlib/format.ml[1444,48142+49]..[1444,48142+52])
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1444,48142+53]..[1444,48142+58])
                                Pexp_construct "false" (stdlib/format.ml[1444,48142+53]..[1444,48142+58])
                                None
                          ]
                ]
                expression (stdlib/format.ml[1445,48204+2]..[1445,48204+30])
                  Pexp_apply
                  expression (stdlib/format.ml[1445,48204+2]..[1445,48204+13])
                    Pexp_ident "make_printf" (stdlib/format.ml[1445,48204+2]..[1445,48204+13])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[1445,48204+14]..[1445,48204+15])
                        Pexp_ident "k" (stdlib/format.ml[1445,48204+14]..[1445,48204+15])
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[1445,48204+16]..[1445,48204+26])
                        Pexp_construct "End_of_acc" (stdlib/format.ml[1445,48204+16]..[1445,48204+26])
                        None
                    <arg>
                    Nolabel
                      expression (stdlib/format.ml[1445,48204+27]..[1445,48204+30])
                        Pexp_ident "fmt" (stdlib/format.ml[1445,48204+27]..[1445,48204+30])
                  ]
    ]
  structure_item (stdlib/format.ml[1449,48276+0]..[1449,48276+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1449,48276+4]..[1449,48276+11])
          Ppat_var "kprintf" (stdlib/format.ml[1449,48276+4]..[1449,48276+11])
        expression (stdlib/format.ml[1449,48276+14]..[1449,48276+22])
          Pexp_ident "ksprintf" (stdlib/format.ml[1449,48276+14]..[1449,48276+22])
    ]
  structure_item (stdlib/format.ml[1455,48334+0]..[1460,48499+1])
    Pstr_type Rec
    [
      type_declaration "formatter_tag_functions" (stdlib/format.ml[1455,48334+5]..[1455,48334+28]) (stdlib/format.ml[1455,48334+0]..[1460,48499+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (stdlib/format.ml[1456,48367+2]..[1456,48367+32])
                Immutable
                "mark_open_tag" (stdlib/format.ml[1456,48367+2]..[1456,48367+15])                core_type (stdlib/format.ml[1456,48367+18]..[1456,48367+31])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[1456,48367+18]..[1456,48367+21])
                    Ptyp_constr "tag" (stdlib/format.ml[1456,48367+18]..[1456,48367+21])
                    []
                  core_type (stdlib/format.ml[1456,48367+25]..[1456,48367+31])
                    Ptyp_constr "string" (stdlib/format.ml[1456,48367+25]..[1456,48367+31])
                    []
              (stdlib/format.ml[1457,48400+2]..[1457,48400+33])
                Immutable
                "mark_close_tag" (stdlib/format.ml[1457,48400+2]..[1457,48400+16])                core_type (stdlib/format.ml[1457,48400+19]..[1457,48400+32])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[1457,48400+19]..[1457,48400+22])
                    Ptyp_constr "tag" (stdlib/format.ml[1457,48400+19]..[1457,48400+22])
                    []
                  core_type (stdlib/format.ml[1457,48400+26]..[1457,48400+32])
                    Ptyp_constr "string" (stdlib/format.ml[1457,48400+26]..[1457,48400+32])
                    []
              (stdlib/format.ml[1458,48434+2]..[1458,48434+31])
                Immutable
                "print_open_tag" (stdlib/format.ml[1458,48434+2]..[1458,48434+16])                core_type (stdlib/format.ml[1458,48434+19]..[1458,48434+30])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[1458,48434+19]..[1458,48434+22])
                    Ptyp_constr "tag" (stdlib/format.ml[1458,48434+19]..[1458,48434+22])
                    []
                  core_type (stdlib/format.ml[1458,48434+26]..[1458,48434+30])
                    Ptyp_constr "unit" (stdlib/format.ml[1458,48434+26]..[1458,48434+30])
                    []
              (stdlib/format.ml[1459,48466+2]..[1459,48466+32])
                Immutable
                "print_close_tag" (stdlib/format.ml[1459,48466+2]..[1459,48466+17])                core_type (stdlib/format.ml[1459,48466+20]..[1459,48466+31])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/format.ml[1459,48466+20]..[1459,48466+23])
                    Ptyp_constr "tag" (stdlib/format.ml[1459,48466+20]..[1459,48466+23])
                    []
                  core_type (stdlib/format.ml[1459,48466+27]..[1459,48466+31])
                    Ptyp_constr "unit" (stdlib/format.ml[1459,48466+27]..[1459,48466+31])
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (stdlib/format.ml[1463,48503+0]..[1473,48864+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1463,48503+4]..[1463,48503+34])
          Ppat_var "pp_set_formatter_tag_functions" (stdlib/format.ml[1463,48503+4]..[1463,48503+34])
        expression (stdlib/format.ml[1463,48503+35]..[1473,48864+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1463,48503+35]..[1463,48503+40])
            Ppat_var "state" (stdlib/format.ml[1463,48503+35]..[1463,48503+40])
          expression (stdlib/format.ml[1463,48503+41]..[1473,48864+46]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1463,48503+41]..[1468,48654+4])
              Ppat_record Closed
              [
                "mark_open_tag" (stdlib/format.ml[1464,48546+5]..[1464,48546+18])
                  pattern (stdlib/format.ml[1464,48546+21]..[1464,48546+24])
                    Ppat_var "mot" (stdlib/format.ml[1464,48546+21]..[1464,48546+24])
                "mark_close_tag" (stdlib/format.ml[1465,48572+5]..[1465,48572+19])
                  pattern (stdlib/format.ml[1465,48572+22]..[1465,48572+25])
                    Ppat_var "mct" (stdlib/format.ml[1465,48572+22]..[1465,48572+25])
                "print_open_tag" (stdlib/format.ml[1466,48599+5]..[1466,48599+19])
                  pattern (stdlib/format.ml[1466,48599+22]..[1466,48599+25])
                    Ppat_var "pot" (stdlib/format.ml[1466,48599+22]..[1466,48599+25])
                "print_close_tag" (stdlib/format.ml[1467,48626+5]..[1467,48626+20])
                  pattern (stdlib/format.ml[1467,48626+23]..[1467,48626+26])
                    Ppat_var "pct" (stdlib/format.ml[1467,48626+23]..[1467,48626+26])
              ]
            expression (stdlib/format.ml[1469,48661+2]..[1473,48864+46])
              Pexp_let Nonrec
              [
                <def>
                  pattern (stdlib/format.ml[1469,48661+6]..[1469,48661+15])
                    Ppat_var "stringify" (stdlib/format.ml[1469,48661+6]..[1469,48661+15])
                  expression (stdlib/format.ml[1469,48661+16]..[1469,48661+59]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (stdlib/format.ml[1469,48661+16]..[1469,48661+17])
                      Ppat_var "f" (stdlib/format.ml[1469,48661+16]..[1469,48661+17])
                    expression (stdlib/format.ml[1469,48661+18]..[1469,48661+59]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (stdlib/format.ml[1469,48661+18]..[1469,48661+19])
                        Ppat_var "e" (stdlib/format.ml[1469,48661+18]..[1469,48661+19])
                      expression (stdlib/format.ml[1469,48661+22]..[1469,48661+59])
                        Pexp_function
                        [
                          <case>
                            pattern (stdlib/format.ml[1469,48661+31]..[1469,48661+43])
                              Ppat_construct "String_tag" (stdlib/format.ml[1469,48661+31]..[1469,48661+41])
                              Some
                                []
                                pattern (stdlib/format.ml[1469,48661+42]..[1469,48661+43])
                                  Ppat_var "s" (stdlib/format.ml[1469,48661+42]..[1469,48661+43])
                            expression (stdlib/format.ml[1469,48661+47]..[1469,48661+50])
                              Pexp_apply
                              expression (stdlib/format.ml[1469,48661+47]..[1469,48661+48])
                                Pexp_ident "f" (stdlib/format.ml[1469,48661+47]..[1469,48661+48])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[1469,48661+49]..[1469,48661+50])
                                    Pexp_ident "s" (stdlib/format.ml[1469,48661+49]..[1469,48661+50])
                              ]
                          <case>
                            pattern (stdlib/format.ml[1469,48661+53]..[1469,48661+54])
                              Ppat_any
                            expression (stdlib/format.ml[1469,48661+58]..[1469,48661+59])
                              Pexp_ident "e" (stdlib/format.ml[1469,48661+58]..[1469,48661+59])
                        ]
              ]
              expression (stdlib/format.ml[1470,48724+2]..[1473,48864+46])
                Pexp_sequence
                expression (stdlib/format.ml[1470,48724+2]..[1470,48724+44])
                  Pexp_setfield
                  expression (stdlib/format.ml[1470,48724+2]..[1470,48724+7])
                    Pexp_ident "state" (stdlib/format.ml[1470,48724+2]..[1470,48724+7])
                  "pp_mark_open_tag" (stdlib/format.ml[1470,48724+8]..[1470,48724+24])
                  expression (stdlib/format.ml[1470,48724+28]..[1470,48724+44])
                    Pexp_apply
                    expression (stdlib/format.ml[1470,48724+28]..[1470,48724+37])
                      Pexp_ident "stringify" (stdlib/format.ml[1470,48724+28]..[1470,48724+37])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1470,48724+38]..[1470,48724+41])
                          Pexp_ident "mot" (stdlib/format.ml[1470,48724+38]..[1470,48724+41])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1470,48724+42]..[1470,48724+44])
                          Pexp_constant PConst_string("",(stdlib/format.ml[1470,48724+43]..[1470,48724+43]),None)
                    ]
                expression (stdlib/format.ml[1471,48770+2]..[1473,48864+46])
                  Pexp_sequence
                  expression (stdlib/format.ml[1471,48770+2]..[1471,48770+45])
                    Pexp_setfield
                    expression (stdlib/format.ml[1471,48770+2]..[1471,48770+7])
                      Pexp_ident "state" (stdlib/format.ml[1471,48770+2]..[1471,48770+7])
                    "pp_mark_close_tag" (stdlib/format.ml[1471,48770+8]..[1471,48770+25])
                    expression (stdlib/format.ml[1471,48770+29]..[1471,48770+45])
                      Pexp_apply
                      expression (stdlib/format.ml[1471,48770+29]..[1471,48770+38])
                        Pexp_ident "stringify" (stdlib/format.ml[1471,48770+29]..[1471,48770+38])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1471,48770+39]..[1471,48770+42])
                            Pexp_ident "mct" (stdlib/format.ml[1471,48770+39]..[1471,48770+42])
                        <arg>
                        Nolabel
                          expression (stdlib/format.ml[1471,48770+43]..[1471,48770+45])
                            Pexp_constant PConst_string("",(stdlib/format.ml[1471,48770+44]..[1471,48770+44]),None)
                      ]
                  expression (stdlib/format.ml[1472,48817+2]..[1473,48864+46])
                    Pexp_sequence
                    expression (stdlib/format.ml[1472,48817+2]..[1472,48817+45])
                      Pexp_setfield
                      expression (stdlib/format.ml[1472,48817+2]..[1472,48817+7])
                        Pexp_ident "state" (stdlib/format.ml[1472,48817+2]..[1472,48817+7])
                      "pp_print_open_tag" (stdlib/format.ml[1472,48817+8]..[1472,48817+25])
                      expression (stdlib/format.ml[1472,48817+29]..[1472,48817+45])
                        Pexp_apply
                        expression (stdlib/format.ml[1472,48817+29]..[1472,48817+38])
                          Pexp_ident "stringify" (stdlib/format.ml[1472,48817+29]..[1472,48817+38])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[1472,48817+39]..[1472,48817+42])
                              Pexp_ident "pot" (stdlib/format.ml[1472,48817+39]..[1472,48817+42])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[1472,48817+43]..[1472,48817+45])
                              Pexp_construct "()" (stdlib/format.ml[1472,48817+43]..[1472,48817+45])
                              None
                        ]
                    expression (stdlib/format.ml[1473,48864+2]..[1473,48864+46])
                      Pexp_setfield
                      expression (stdlib/format.ml[1473,48864+2]..[1473,48864+7])
                        Pexp_ident "state" (stdlib/format.ml[1473,48864+2]..[1473,48864+7])
                      "pp_print_close_tag" (stdlib/format.ml[1473,48864+8]..[1473,48864+26])
                      expression (stdlib/format.ml[1473,48864+30]..[1473,48864+46])
                        Pexp_apply
                        expression (stdlib/format.ml[1473,48864+30]..[1473,48864+39])
                          Pexp_ident "stringify" (stdlib/format.ml[1473,48864+30]..[1473,48864+39])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[1473,48864+40]..[1473,48864+43])
                              Pexp_ident "pct" (stdlib/format.ml[1473,48864+40]..[1473,48864+43])
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[1473,48864+44]..[1473,48864+46])
                              Pexp_construct "()" (stdlib/format.ml[1473,48864+44]..[1473,48864+46])
                              None
                        ]
    ]
  structure_item (stdlib/format.ml[1475,48912+0]..[1481,49267+66])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1475,48912+4]..[1475,48912+34])
          Ppat_var "pp_get_formatter_tag_functions" (stdlib/format.ml[1475,48912+4]..[1475,48912+34])
        expression (stdlib/format.ml[1475,48912+35]..[1481,49267+66]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/format.ml[1475,48912+35]..[1475,48912+38])
            Ppat_var "fmt" (stdlib/format.ml[1475,48912+35]..[1475,48912+38])
          expression (stdlib/format.ml[1475,48912+39]..[1481,49267+66]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/format.ml[1475,48912+39]..[1475,48912+41])
              Ppat_construct "()" (stdlib/format.ml[1475,48912+39]..[1475,48912+41])
              None
            expression (stdlib/format.ml[1476,48956+2]..[1481,49267+66])
              Pexp_let Nonrec
              [
                <def>
                  pattern (stdlib/format.ml[1476,48956+6]..[1476,48956+10])
                    Ppat_var "funs" (stdlib/format.ml[1476,48956+6]..[1476,48956+10])
                  expression (stdlib/format.ml[1476,48956+13]..[1476,48956+51])
                    Pexp_apply
                    expression (stdlib/format.ml[1476,48956+13]..[1476,48956+44])
                      Pexp_ident "pp_get_formatter_stag_functions" (stdlib/format.ml[1476,48956+13]..[1476,48956+44])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1476,48956+45]..[1476,48956+48])
                          Pexp_ident "fmt" (stdlib/format.ml[1476,48956+45]..[1476,48956+48])
                      <arg>
                      Nolabel
                        expression (stdlib/format.ml[1476,48956+49]..[1476,48956+51])
                          Pexp_construct "()" (stdlib/format.ml[1476,48956+49]..[1476,48956+51])
                          None
                    ]
              ]
              expression (stdlib/format.ml[1477,49011+2]..[1481,49267+66])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/format.ml[1477,49011+6]..[1477,49011+19])
                      Ppat_var "mark_open_tag" (stdlib/format.ml[1477,49011+6]..[1477,49011+19])
                    expression (stdlib/format.ml[1477,49011+20]..[1477,49011+58]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (stdlib/format.ml[1477,49011+20]..[1477,49011+21])
                        Ppat_var "s" (stdlib/format.ml[1477,49011+20]..[1477,49011+21])
                      expression (stdlib/format.ml[1477,49011+24]..[1477,49011+58])
                        Pexp_apply
                        expression (stdlib/format.ml[1477,49011+24]..[1477,49011+43])
                          Pexp_field
                          expression (stdlib/format.ml[1477,49011+24]..[1477,49011+28])
                            Pexp_ident "funs" (stdlib/format.ml[1477,49011+24]..[1477,49011+28])
                          "mark_open_stag" (stdlib/format.ml[1477,49011+29]..[1477,49011+43])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/format.ml[1477,49011+44]..[1477,49011+58])
                              Pexp_construct "String_tag" (stdlib/format.ml[1477,49011+45]..[1477,49011+55])
                              Some
                                expression (stdlib/format.ml[1477,49011+56]..[1477,49011+57])
                                  Pexp_ident "s" (stdlib/format.ml[1477,49011+56]..[1477,49011+57])
                        ]
                ]
                expression (stdlib/format.ml[1478,49073+2]..[1481,49267+66])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (stdlib/format.ml[1478,49073+6]..[1478,49073+20])
                        Ppat_var "mark_close_tag" (stdlib/format.ml[1478,49073+6]..[1478,49073+20])
                      expression (stdlib/format.ml[1478,49073+21]..[1478,49073+60]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/format.ml[1478,49073+21]..[1478,49073+22])
                          Ppat_var "s" (stdlib/format.ml[1478,49073+21]..[1478,49073+22])
                        expression (stdlib/format.ml[1478,49073+25]..[1478,49073+60])
                          Pexp_apply
                          expression (stdlib/format.ml[1478,49073+25]..[1478,49073+45])
                            Pexp_field
                            expression (stdlib/format.ml[1478,49073+25]..[1478,49073+29])
                              Pexp_ident "funs" (stdlib/format.ml[1478,49073+25]..[1478,49073+29])
                            "mark_close_stag" (stdlib/format.ml[1478,49073+30]..[1478,49073+45])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/format.ml[1478,49073+46]..[1478,49073+60])
                                Pexp_construct "String_tag" (stdlib/format.ml[1478,49073+47]..[1478,49073+57])
                                Some
                                  expression (stdlib/format.ml[1478,49073+58]..[1478,49073+59])
                                    Pexp_ident "s" (stdlib/format.ml[1478,49073+58]..[1478,49073+59])
                          ]
                  ]
                  expression (stdlib/format.ml[1479,49137+2]..[1481,49267+66])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/format.ml[1479,49137+6]..[1479,49137+20])
                          Ppat_var "print_open_tag" (stdlib/format.ml[1479,49137+6]..[1479,49137+20])
                        expression (stdlib/format.ml[1479,49137+21]..[1479,49137+60]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (stdlib/format.ml[1479,49137+21]..[1479,49137+22])
                            Ppat_var "s" (stdlib/format.ml[1479,49137+21]..[1479,49137+22])
                          expression (stdlib/format.ml[1479,49137+25]..[1479,49137+60])
                            Pexp_apply
                            expression (stdlib/format.ml[1479,49137+25]..[1479,49137+45])
                              Pexp_field
                              expression (stdlib/format.ml[1479,49137+25]..[1479,49137+29])
                                Pexp_ident "funs" (stdlib/format.ml[1479,49137+25]..[1479,49137+29])
                              "print_open_stag" (stdlib/format.ml[1479,49137+30]..[1479,49137+45])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/format.ml[1479,49137+46]..[1479,49137+60])
                                  Pexp_construct "String_tag" (stdlib/format.ml[1479,49137+47]..[1479,49137+57])
                                  Some
                                    expression (stdlib/format.ml[1479,49137+58]..[1479,49137+59])
                                      Pexp_ident "s" (stdlib/format.ml[1479,49137+58]..[1479,49137+59])
                            ]
                    ]
                    expression (stdlib/format.ml[1480,49201+2]..[1481,49267+66])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (stdlib/format.ml[1480,49201+6]..[1480,49201+21])
                            Ppat_var "print_close_tag" (stdlib/format.ml[1480,49201+6]..[1480,49201+21])
                          expression (stdlib/format.ml[1480,49201+22]..[1480,49201+62]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (stdlib/format.ml[1480,49201+22]..[1480,49201+23])
                              Ppat_var "s" (stdlib/format.ml[1480,49201+22]..[1480,49201+23])
                            expression (stdlib/format.ml[1480,49201+26]..[1480,49201+62])
                              Pexp_apply
                              expression (stdlib/format.ml[1480,49201+26]..[1480,49201+47])
                                Pexp_field
                                expression (stdlib/format.ml[1480,49201+26]..[1480,49201+30])
                                  Pexp_ident "funs" (stdlib/format.ml[1480,49201+26]..[1480,49201+30])
                                "print_close_stag" (stdlib/format.ml[1480,49201+31]..[1480,49201+47])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/format.ml[1480,49201+48]..[1480,49201+62])
                                    Pexp_construct "String_tag" (stdlib/format.ml[1480,49201+49]..[1480,49201+59])
                                    Some
                                      expression (stdlib/format.ml[1480,49201+60]..[1480,49201+61])
                                        Pexp_ident "s" (stdlib/format.ml[1480,49201+60]..[1480,49201+61])
                              ]
                      ]
                      expression (stdlib/format.ml[1481,49267+2]..[1481,49267+66])
                        Pexp_record
                        [
                          "mark_open_tag" (stdlib/format.ml[1481,49267+3]..[1481,49267+16]) ghost
                            expression (stdlib/format.ml[1481,49267+3]..[1481,49267+16])
                              Pexp_ident "mark_open_tag" (stdlib/format.ml[1481,49267+3]..[1481,49267+16])
                          "mark_close_tag" (stdlib/format.ml[1481,49267+18]..[1481,49267+32]) ghost
                            expression (stdlib/format.ml[1481,49267+18]..[1481,49267+32])
                              Pexp_ident "mark_close_tag" (stdlib/format.ml[1481,49267+18]..[1481,49267+32])
                          "print_open_tag" (stdlib/format.ml[1481,49267+34]..[1481,49267+48]) ghost
                            expression (stdlib/format.ml[1481,49267+34]..[1481,49267+48])
                              Pexp_ident "print_open_tag" (stdlib/format.ml[1481,49267+34]..[1481,49267+48])
                          "print_close_tag" (stdlib/format.ml[1481,49267+50]..[1481,49267+65]) ghost
                            expression (stdlib/format.ml[1481,49267+50]..[1481,49267+65])
                              Pexp_ident "print_close_tag" (stdlib/format.ml[1481,49267+50]..[1481,49267+65])
                        ]
                        None
    ]
  structure_item (stdlib/format.ml[1483,49335+0]..[1486,49450+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/format.ml[1483,49335+4]..[1483,49335+31])
          Ppat_var "set_formatter_tag_functions" (stdlib/format.ml[1483,49335+4]..[1483,49335+31])
        expression (stdlib/format.ml[1484,49369+2]..[1484,49369+46])
          Pexp_apply
          expression (stdlib/format.ml[1484,49369+2]..[1484,49369+32])
            Pexp_ident "pp_set_formatter_tag_functions" (stdlib/format.ml[1484,49369+2]..[1484,49369+32])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1484,49369+33]..[1484,49369+46])
                Pexp_ident "std_formatter" (stdlib/format.ml[1484,49369+33]..[1484,49369+46])
          ]
      <def>
        pattern (stdlib/format.ml[1485,49416+4]..[1485,49416+31])
          Ppat_var "get_formatter_tag_functions" (stdlib/format.ml[1485,49416+4]..[1485,49416+31])
        expression (stdlib/format.ml[1486,49450+2]..[1486,49450+46])
          Pexp_apply
          expression (stdlib/format.ml[1486,49450+2]..[1486,49450+32])
            Pexp_ident "pp_get_formatter_tag_functions" (stdlib/format.ml[1486,49450+2]..[1486,49450+32])
          [
            <arg>
            Nolabel
              expression (stdlib/format.ml[1486,49450+33]..[1486,49450+46])
                Pexp_ident "std_formatter" (stdlib/format.ml[1486,49450+33]..[1486,49450+46])
          ]
    ]
]

