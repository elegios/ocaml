[
  structure_item (middle_end/flambda/closure_conversion.ml[17,1156+0]..[17,1156+42])
    Pstr_attribute "ocaml.warning"
    [
      structure_item (middle_end/flambda/closure_conversion.ml[17,1156+18]..[17,1156+41])
        Pstr_eval
        expression (middle_end/flambda/closure_conversion.ml[17,1156+18]..[17,1156+41])
          Pexp_constant PConst_string("+a-4-9-30-40-41-42-66",(middle_end/flambda/closure_conversion.ml[17,1156+19]..[17,1156+40]),None)
    ]
  structure_item (middle_end/flambda/closure_conversion.ml[18,1199+0]..[18,1199+37])
    Pstr_open Override
    module_expr (middle_end/flambda/closure_conversion.ml[18,1199+6]..[18,1199+37])
      Pmod_ident "Int_replace_polymorphic_compare" (middle_end/flambda/closure_conversion.ml[18,1199+6]..[18,1199+37])
  structure_item (middle_end/flambda/closure_conversion.ml[20,1238+0]..[20,1238+39])
    Pstr_module
    "Env" (middle_end/flambda/closure_conversion.ml[20,1238+7]..[20,1238+10])
      module_expr (middle_end/flambda/closure_conversion.ml[20,1238+13]..[20,1238+39])
        Pmod_ident "Closure_conversion_aux.Env" (middle_end/flambda/closure_conversion.ml[20,1238+13]..[20,1238+39])
  structure_item (middle_end/flambda/closure_conversion.ml[21,1278+0]..[21,1278+61])
    Pstr_module
    "Function_decls" (middle_end/flambda/closure_conversion.ml[21,1278+7]..[21,1278+21])
      module_expr (middle_end/flambda/closure_conversion.ml[21,1278+24]..[21,1278+61])
        Pmod_ident "Closure_conversion_aux.Function_decls" (middle_end/flambda/closure_conversion.ml[21,1278+24]..[21,1278+61])
  structure_item (middle_end/flambda/closure_conversion.ml[22,1340+0]..[22,1340+51])
    Pstr_module
    "Function_decl" (middle_end/flambda/closure_conversion.ml[22,1340+7]..[22,1340+20])
      module_expr (middle_end/flambda/closure_conversion.ml[22,1340+23]..[22,1340+51])
        Pmod_ident "Function_decls.Function_decl" (middle_end/flambda/closure_conversion.ml[22,1340+23]..[22,1340+51])
  structure_item (middle_end/flambda/closure_conversion.ml[23,1392+0]..[23,1392+38])
    Pstr_module
    "Names" (middle_end/flambda/closure_conversion.ml[23,1392+7]..[23,1392+12])
      module_expr (middle_end/flambda/closure_conversion.ml[23,1392+15]..[23,1392+38])
        Pmod_ident "Internal_variable_names" (middle_end/flambda/closure_conversion.ml[23,1392+15]..[23,1392+38])
  structure_item (middle_end/flambda/closure_conversion.ml[25,1432+0]..[25,1432+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/closure_conversion.ml[25,1432+4]..[25,1432+13])
          Ppat_var "name_expr" (middle_end/flambda/closure_conversion.ml[25,1432+4]..[25,1432+13])
        expression (middle_end/flambda/closure_conversion.ml[25,1432+16]..[25,1432+39])
          Pexp_ident "Flambda_utils.name_expr" (middle_end/flambda/closure_conversion.ml[25,1432+16]..[25,1432+39])
    ]
  structure_item (middle_end/flambda/closure_conversion.ml[26,1472+0]..[26,1472+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/closure_conversion.ml[26,1472+4]..[26,1472+22])
          Ppat_var "name_expr_from_var" (middle_end/flambda/closure_conversion.ml[26,1472+4]..[26,1472+22])
        expression (middle_end/flambda/closure_conversion.ml[26,1472+25]..[26,1472+57])
          Pexp_ident "Flambda_utils.name_expr_from_var" (middle_end/flambda/closure_conversion.ml[26,1472+25]..[26,1472+57])
    ]
  structure_item (middle_end/flambda/closure_conversion.ml[28,1531+0]..[34,1777+1])
    Pstr_type Rec
    [
      type_declaration "t" (middle_end/flambda/closure_conversion.ml[28,1531+5]..[28,1531+6]) (middle_end/flambda/closure_conversion.ml[28,1531+0]..[34,1777+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (middle_end/flambda/closure_conversion.ml[29,1542+2]..[29,1542+28])
                Immutable
                "current_unit_id" (middle_end/flambda/closure_conversion.ml[29,1542+2]..[29,1542+17])                core_type (middle_end/flambda/closure_conversion.ml[29,1542+20]..[29,1542+27])
                  Ptyp_constr "Ident.t" (middle_end/flambda/closure_conversion.ml[29,1542+20]..[29,1542+27])
                  []
              (middle_end/flambda/closure_conversion.ml[30,1571+2]..[30,1571+45])
                Immutable
                "symbol_for_global'" (middle_end/flambda/closure_conversion.ml[30,1571+2]..[30,1571+20])                core_type (middle_end/flambda/closure_conversion.ml[30,1571+24]..[30,1571+43])
                  Ptyp_arrow
                  Nolabel
                  core_type (middle_end/flambda/closure_conversion.ml[30,1571+24]..[30,1571+31])
                    Ptyp_constr "Ident.t" (middle_end/flambda/closure_conversion.ml[30,1571+24]..[30,1571+31])
                    []
                  core_type (middle_end/flambda/closure_conversion.ml[30,1571+35]..[30,1571+43])
                    Ptyp_constr "Symbol.t" (middle_end/flambda/closure_conversion.ml[30,1571+35]..[30,1571+43])
                    []
              (middle_end/flambda/closure_conversion.ml[31,1617+2]..[31,1617+36])
                Immutable
                "backend" (middle_end/flambda/closure_conversion.ml[31,1617+2]..[31,1617+9])                core_type (middle_end/flambda/closure_conversion.ml[31,1617+12]..[31,1617+35])
                  Ptyp_package "Backend_intf.S" (middle_end/flambda/closure_conversion.ml[31,1617+20]..[31,1617+34])
                  []
              (middle_end/flambda/closure_conversion.ml[32,1654+2]..[32,1654+42])
                Mutable
                "imported_symbols" (middle_end/flambda/closure_conversion.ml[32,1654+10]..[32,1654+26])                core_type (middle_end/flambda/closure_conversion.ml[32,1654+29]..[32,1654+41])
                  Ptyp_constr "Symbol.Set.t" (middle_end/flambda/closure_conversion.ml[32,1654+29]..[32,1654+41])
                  []
              (middle_end/flambda/closure_conversion.ml[33,1697+2]..[33,1697+79])
                Mutable
                "declared_symbols" (middle_end/flambda/closure_conversion.ml[33,1697+10]..[33,1697+26])                core_type (middle_end/flambda/closure_conversion.ml[33,1697+29]..[33,1697+78])
                  Ptyp_constr "list" (middle_end/flambda/closure_conversion.ml[33,1697+74]..[33,1697+78])
                  [
                    core_type (middle_end/flambda/closure_conversion.ml[33,1697+30]..[33,1697+72])
                      Ptyp_tuple
                      [
                        core_type (middle_end/flambda/closure_conversion.ml[33,1697+30]..[33,1697+38])
                          Ptyp_constr "Symbol.t" (middle_end/flambda/closure_conversion.ml[33,1697+30]..[33,1697+38])
                          []
                        core_type (middle_end/flambda/closure_conversion.ml[33,1697+41]..[33,1697+72])
                          Ptyp_constr "Flambda.constant_defining_value" (middle_end/flambda/closure_conversion.ml[33,1697+41]..[33,1697+72])
                          []
                      ]
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (middle_end/flambda/closure_conversion.ml[36,1780+0]..[70,3053+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/closure_conversion.ml[36,1780+4]..[36,1780+33])
          Ppat_var "add_default_argument_wrappers" (middle_end/flambda/closure_conversion.ml[36,1780+4]..[36,1780+33])
        expression (middle_end/flambda/closure_conversion.ml[36,1780+34]..[70,3053+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/closure_conversion.ml[36,1780+34]..[36,1780+37])
            Ppat_var "lam" (middle_end/flambda/closure_conversion.ml[36,1780+34]..[36,1780+37])
          expression (middle_end/flambda/closure_conversion.ml[37,1820+2]..[70,3053+18])
            Pexp_let Nonrec
            [
              <def>
                pattern (middle_end/flambda/closure_conversion.ml[37,1820+6]..[37,1820+28])
                  Ppat_var "defs_are_all_functions" (middle_end/flambda/closure_conversion.ml[37,1820+6]..[37,1820+28])
                expression (middle_end/flambda/closure_conversion.ml[37,1820+29]..[38,1885+77]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/closure_conversion.ml[37,1820+29]..[37,1820+62])
                    Ppat_constraint
                    pattern (middle_end/flambda/closure_conversion.ml[37,1820+30]..[37,1820+34])
                      Ppat_var "defs" (middle_end/flambda/closure_conversion.ml[37,1820+30]..[37,1820+34])
                    core_type (middle_end/flambda/closure_conversion.ml[37,1820+37]..[37,1820+61])
                      Ptyp_constr "list" (middle_end/flambda/closure_conversion.ml[37,1820+57]..[37,1820+61])
                      [
                        core_type (middle_end/flambda/closure_conversion.ml[37,1820+38]..[37,1820+55])
                          Ptyp_tuple
                          [
                            core_type (middle_end/flambda/closure_conversion.ml[37,1820+38]..[37,1820+39])
                              Ptyp_any
                            core_type (middle_end/flambda/closure_conversion.ml[37,1820+42]..[37,1820+55])
                              Ptyp_constr "Lambda.lambda" (middle_end/flambda/closure_conversion.ml[37,1820+42]..[37,1820+55])
                              []
                          ]
                      ]
                  expression (middle_end/flambda/closure_conversion.ml[38,1885+4]..[38,1885+77])
                    Pexp_apply
                    expression (middle_end/flambda/closure_conversion.ml[38,1885+4]..[38,1885+16])
                      Pexp_ident "List.for_all" (middle_end/flambda/closure_conversion.ml[38,1885+4]..[38,1885+16])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/closure_conversion.ml[38,1885+17]..[38,1885+72])
                          Pexp_function
                          [
                            <case>
                              pattern (middle_end/flambda/closure_conversion.ml[38,1885+27]..[38,1885+50])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/closure_conversion.ml[38,1885+28]..[38,1885+29])
                                    Ppat_any
                                  pattern (middle_end/flambda/closure_conversion.ml[38,1885+31]..[38,1885+49])
                                    Ppat_construct "Lambda.Lfunction" (middle_end/flambda/closure_conversion.ml[38,1885+31]..[38,1885+47])
                                    Some
                                      []
                                      pattern (middle_end/flambda/closure_conversion.ml[38,1885+48]..[38,1885+49])
                                        Ppat_any
                                ]
                              expression (middle_end/flambda/closure_conversion.ml[38,1885+54]..[38,1885+58])
                                Pexp_construct "true" (middle_end/flambda/closure_conversion.ml[38,1885+54]..[38,1885+58])
                                None
                            <case>
                              pattern (middle_end/flambda/closure_conversion.ml[38,1885+61]..[38,1885+62])
                                Ppat_any
                              expression (middle_end/flambda/closure_conversion.ml[38,1885+66]..[38,1885+71])
                                Pexp_construct "false" (middle_end/flambda/closure_conversion.ml[38,1885+66]..[38,1885+71])
                                None
                          ]
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/closure_conversion.ml[38,1885+73]..[38,1885+77])
                          Pexp_ident "defs" (middle_end/flambda/closure_conversion.ml[38,1885+73]..[38,1885+77])
                    ]
            ]
            expression (middle_end/flambda/closure_conversion.ml[40,1968+2]..[70,3053+18])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/closure_conversion.ml[40,1968+6]..[40,1968+7])
                    Ppat_var "f" (middle_end/flambda/closure_conversion.ml[40,1968+6]..[40,1968+7])
                  expression (middle_end/flambda/closure_conversion.ml[40,1968+8]..[68,3031+16]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/closure_conversion.ml[40,1968+8]..[40,1968+29])
                      Ppat_constraint
                      pattern (middle_end/flambda/closure_conversion.ml[40,1968+9]..[40,1968+12])
                        Ppat_var "lam" (middle_end/flambda/closure_conversion.ml[40,1968+9]..[40,1968+12])
                      core_type (middle_end/flambda/closure_conversion.ml[40,1968+15]..[40,1968+28])
                        Ptyp_constr "Lambda.lambda" (middle_end/flambda/closure_conversion.ml[40,1968+15]..[40,1968+28])
                        []
                    expression (middle_end/flambda/closure_conversion.ml[40,1968+30]..[68,3031+16])
                      Pexp_constraint
                      expression (middle_end/flambda/closure_conversion.ml[41,2016+4]..[68,3031+16])
                        Pexp_match
                        expression (middle_end/flambda/closure_conversion.ml[41,2016+10]..[41,2016+13])
                          Pexp_ident "lam" (middle_end/flambda/closure_conversion.ml[41,2016+10]..[41,2016+13])
                        [
                          <case>
                            pattern (middle_end/flambda/closure_conversion.ml[42,2035+6]..[43,2086+64])
                              Ppat_construct "Llet" (middle_end/flambda/closure_conversion.ml[42,2035+6]..[42,2035+10])
                              Some
                                []
                                pattern (middle_end/flambda/closure_conversion.ml[42,2035+11]..[43,2086+64])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/closure_conversion.ml[42,2035+12]..[42,2035+41])
                                      Ppat_or
                                      pattern (middle_end/flambda/closure_conversion.ml[42,2035+14]..[42,2035+28])
                                        Ppat_or
                                        pattern (middle_end/flambda/closure_conversion.ml[42,2035+14]..[42,2035+20])
                                          Ppat_construct "Strict" (middle_end/flambda/closure_conversion.ml[42,2035+14]..[42,2035+20])
                                          None
                                        pattern (middle_end/flambda/closure_conversion.ml[42,2035+23]..[42,2035+28])
                                          Ppat_construct "Alias" (middle_end/flambda/closure_conversion.ml[42,2035+23]..[42,2035+28])
                                          None
                                      pattern (middle_end/flambda/closure_conversion.ml[42,2035+31]..[42,2035+40])
                                        Ppat_construct "StrictOpt" (middle_end/flambda/closure_conversion.ml[42,2035+31]..[42,2035+40])
                                        None
                                    pattern (middle_end/flambda/closure_conversion.ml[42,2035+43]..[42,2035+45])
                                      Ppat_var "_k" (middle_end/flambda/closure_conversion.ml[42,2035+43]..[42,2035+45])
                                    pattern (middle_end/flambda/closure_conversion.ml[42,2035+47]..[42,2035+49])
                                      Ppat_var "id" (middle_end/flambda/closure_conversion.ml[42,2035+47]..[42,2035+49])
                                    pattern (middle_end/flambda/closure_conversion.ml[43,2086+8]..[43,2086+57])
                                      Ppat_construct "Lfunction" (middle_end/flambda/closure_conversion.ml[43,2086+8]..[43,2086+17])
                                      Some
                                        []
                                        pattern (middle_end/flambda/closure_conversion.ml[43,2086+18]..[43,2086+57])
                                          Ppat_record Closed
                                          [
                                            "kind" (middle_end/flambda/closure_conversion.ml[43,2086+19]..[43,2086+23]) ghost
                                              pattern (middle_end/flambda/closure_conversion.ml[43,2086+19]..[43,2086+23])
                                                Ppat_var "kind" (middle_end/flambda/closure_conversion.ml[43,2086+19]..[43,2086+23])
                                            "params" (middle_end/flambda/closure_conversion.ml[43,2086+25]..[43,2086+31]) ghost
                                              pattern (middle_end/flambda/closure_conversion.ml[43,2086+25]..[43,2086+31])
                                                Ppat_var "params" (middle_end/flambda/closure_conversion.ml[43,2086+25]..[43,2086+31])
                                            "body" (middle_end/flambda/closure_conversion.ml[43,2086+33]..[43,2086+37])
                                              pattern (middle_end/flambda/closure_conversion.ml[43,2086+40]..[43,2086+45])
                                                Ppat_var "fbody" (middle_end/flambda/closure_conversion.ml[43,2086+40]..[43,2086+45])
                                            "attr" (middle_end/flambda/closure_conversion.ml[43,2086+47]..[43,2086+51]) ghost
                                              pattern (middle_end/flambda/closure_conversion.ml[43,2086+47]..[43,2086+51])
                                                Ppat_var "attr" (middle_end/flambda/closure_conversion.ml[43,2086+47]..[43,2086+51])
                                            "loc" (middle_end/flambda/closure_conversion.ml[43,2086+53]..[43,2086+56]) ghost
                                              pattern (middle_end/flambda/closure_conversion.ml[43,2086+53]..[43,2086+56])
                                                Ppat_var "loc" (middle_end/flambda/closure_conversion.ml[43,2086+53]..[43,2086+56])
                                          ]
                                    pattern (middle_end/flambda/closure_conversion.ml[43,2086+59]..[43,2086+63])
                                      Ppat_var "body" (middle_end/flambda/closure_conversion.ml[43,2086+59]..[43,2086+63])
                                  ]
                            expression (middle_end/flambda/closure_conversion.ml[44,2154+6]..[53,2541+9])
                              Pexp_match
                              expression (middle_end/flambda/closure_conversion.ml[45,2172+8]..[46,2228+48])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[45,2172+8]..[45,2172+37])
                                  Pexp_ident "Simplif.split_default_wrapper" (middle_end/flambda/closure_conversion.ml[45,2172+8]..[45,2172+37])
                                [
                                  <arg>
                                  Labelled "id"
                                    expression (middle_end/flambda/closure_conversion.ml[45,2172+39]..[45,2172+41])
                                      Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[45,2172+39]..[45,2172+41])
                                  <arg>
                                  Labelled "kind"
                                    expression (middle_end/flambda/closure_conversion.ml[45,2172+43]..[45,2172+47])
                                      Pexp_ident "kind" (middle_end/flambda/closure_conversion.ml[45,2172+43]..[45,2172+47])
                                  <arg>
                                  Labelled "params"
                                    expression (middle_end/flambda/closure_conversion.ml[45,2172+49]..[45,2172+55])
                                      Pexp_ident "params" (middle_end/flambda/closure_conversion.ml[45,2172+49]..[45,2172+55])
                                  <arg>
                                  Labelled "body"
                                    expression (middle_end/flambda/closure_conversion.ml[46,2228+16]..[46,2228+21])
                                      Pexp_ident "fbody" (middle_end/flambda/closure_conversion.ml[46,2228+16]..[46,2228+21])
                                  <arg>
                                  Labelled "return"
                                    expression (middle_end/flambda/closure_conversion.ml[46,2228+30]..[46,2228+37])
                                      Pexp_construct "Pgenval" (middle_end/flambda/closure_conversion.ml[46,2228+30]..[46,2228+37])
                                      None
                                  <arg>
                                  Labelled "attr"
                                    expression (middle_end/flambda/closure_conversion.ml[46,2228+39]..[46,2228+43])
                                      Pexp_ident "attr" (middle_end/flambda/closure_conversion.ml[46,2228+39]..[46,2228+43])
                                  <arg>
                                  Labelled "loc"
                                    expression (middle_end/flambda/closure_conversion.ml[46,2228+45]..[46,2228+48])
                                      Pexp_ident "loc" (middle_end/flambda/closure_conversion.ml[46,2228+45]..[46,2228+48])
                                ]
                              [
                                <case>
                                  pattern (middle_end/flambda/closure_conversion.ml[48,2288+8]..[48,2288+21])
                                    Ppat_construct "::" (middle_end/flambda/closure_conversion.ml[48,2288+9]..[48,2288+21]) ghost
                                    Some
                                      []
                                      pattern (middle_end/flambda/closure_conversion.ml[48,2288+9]..[48,2288+21]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/closure_conversion.ml[48,2288+9]..[48,2288+20])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/closure_conversion.ml[48,2288+9]..[48,2288+15])
                                                Ppat_var "fun_id" (middle_end/flambda/closure_conversion.ml[48,2288+9]..[48,2288+15])
                                              pattern (middle_end/flambda/closure_conversion.ml[48,2288+17]..[48,2288+20])
                                                Ppat_var "def" (middle_end/flambda/closure_conversion.ml[48,2288+17]..[48,2288+20])
                                            ]
                                          pattern (middle_end/flambda/closure_conversion.ml[48,2288+20]..[48,2288+21]) ghost
                                            Ppat_construct "[]" (middle_end/flambda/closure_conversion.ml[48,2288+20]..[48,2288+21]) ghost
                                            None
                                        ]
                                  expression (middle_end/flambda/closure_conversion.ml[48,2288+25]..[48,2288+65])
                                    Pexp_construct "Llet" (middle_end/flambda/closure_conversion.ml[48,2288+25]..[48,2288+29])
                                    Some
                                      expression (middle_end/flambda/closure_conversion.ml[48,2288+30]..[48,2288+65])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/flambda/closure_conversion.ml[48,2288+31]..[48,2288+36])
                                            Pexp_construct "Alias" (middle_end/flambda/closure_conversion.ml[48,2288+31]..[48,2288+36])
                                            None
                                          expression (middle_end/flambda/closure_conversion.ml[48,2288+38]..[48,2288+45])
                                            Pexp_construct "Pgenval" (middle_end/flambda/closure_conversion.ml[48,2288+38]..[48,2288+45])
                                            None
                                          expression (middle_end/flambda/closure_conversion.ml[48,2288+47]..[48,2288+53])
                                            Pexp_ident "fun_id" (middle_end/flambda/closure_conversion.ml[48,2288+47]..[48,2288+53])
                                          expression (middle_end/flambda/closure_conversion.ml[48,2288+55]..[48,2288+58])
                                            Pexp_ident "def" (middle_end/flambda/closure_conversion.ml[48,2288+55]..[48,2288+58])
                                          expression (middle_end/flambda/closure_conversion.ml[48,2288+60]..[48,2288+64])
                                            Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[48,2288+60]..[48,2288+64])
                                        ]
                                <case>
                                  pattern (middle_end/flambda/closure_conversion.ml[49,2354+8]..[49,2354+46])
                                    Ppat_construct "::" (middle_end/flambda/closure_conversion.ml[49,2354+9]..[49,2354+46]) ghost
                                    Some
                                      []
                                      pattern (middle_end/flambda/closure_conversion.ml[49,2354+9]..[49,2354+46]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/closure_conversion.ml[49,2354+9]..[49,2354+20])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/closure_conversion.ml[49,2354+9]..[49,2354+15])
                                                Ppat_var "fun_id" (middle_end/flambda/closure_conversion.ml[49,2354+9]..[49,2354+15])
                                              pattern (middle_end/flambda/closure_conversion.ml[49,2354+17]..[49,2354+20])
                                                Ppat_var "def" (middle_end/flambda/closure_conversion.ml[49,2354+17]..[49,2354+20])
                                            ]
                                          pattern (middle_end/flambda/closure_conversion.ml[49,2354+22]..[49,2354+46]) ghost
                                            Ppat_construct "::" (middle_end/flambda/closure_conversion.ml[49,2354+22]..[49,2354+46]) ghost
                                            Some
                                              []
                                              pattern (middle_end/flambda/closure_conversion.ml[49,2354+22]..[49,2354+46]) ghost
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/flambda/closure_conversion.ml[49,2354+22]..[49,2354+45])
                                                    Ppat_tuple
                                                    [
                                                      pattern (middle_end/flambda/closure_conversion.ml[49,2354+22]..[49,2354+34])
                                                        Ppat_var "inner_fun_id" (middle_end/flambda/closure_conversion.ml[49,2354+22]..[49,2354+34])
                                                      pattern (middle_end/flambda/closure_conversion.ml[49,2354+36]..[49,2354+45])
                                                        Ppat_var "def_inner" (middle_end/flambda/closure_conversion.ml[49,2354+36]..[49,2354+45])
                                                    ]
                                                  pattern (middle_end/flambda/closure_conversion.ml[49,2354+45]..[49,2354+46]) ghost
                                                    Ppat_construct "[]" (middle_end/flambda/closure_conversion.ml[49,2354+45]..[49,2354+46]) ghost
                                                    None
                                                ]
                                        ]
                                  expression (middle_end/flambda/closure_conversion.ml[50,2404+8]..[51,2459+55])
                                    Pexp_construct "Llet" (middle_end/flambda/closure_conversion.ml[50,2404+8]..[50,2404+12])
                                    Some
                                      expression (middle_end/flambda/closure_conversion.ml[50,2404+13]..[51,2459+55])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/flambda/closure_conversion.ml[50,2404+14]..[50,2404+19])
                                            Pexp_construct "Alias" (middle_end/flambda/closure_conversion.ml[50,2404+14]..[50,2404+19])
                                            None
                                          expression (middle_end/flambda/closure_conversion.ml[50,2404+21]..[50,2404+28])
                                            Pexp_construct "Pgenval" (middle_end/flambda/closure_conversion.ml[50,2404+21]..[50,2404+28])
                                            None
                                          expression (middle_end/flambda/closure_conversion.ml[50,2404+30]..[50,2404+42])
                                            Pexp_ident "inner_fun_id" (middle_end/flambda/closure_conversion.ml[50,2404+30]..[50,2404+42])
                                          expression (middle_end/flambda/closure_conversion.ml[50,2404+44]..[50,2404+53])
                                            Pexp_ident "def_inner" (middle_end/flambda/closure_conversion.ml[50,2404+44]..[50,2404+53])
                                          expression (middle_end/flambda/closure_conversion.ml[51,2459+14]..[51,2459+54])
                                            Pexp_construct "Llet" (middle_end/flambda/closure_conversion.ml[51,2459+14]..[51,2459+18])
                                            Some
                                              expression (middle_end/flambda/closure_conversion.ml[51,2459+19]..[51,2459+54])
                                                Pexp_tuple
                                                [
                                                  expression (middle_end/flambda/closure_conversion.ml[51,2459+20]..[51,2459+25])
                                                    Pexp_construct "Alias" (middle_end/flambda/closure_conversion.ml[51,2459+20]..[51,2459+25])
                                                    None
                                                  expression (middle_end/flambda/closure_conversion.ml[51,2459+27]..[51,2459+34])
                                                    Pexp_construct "Pgenval" (middle_end/flambda/closure_conversion.ml[51,2459+27]..[51,2459+34])
                                                    None
                                                  expression (middle_end/flambda/closure_conversion.ml[51,2459+36]..[51,2459+42])
                                                    Pexp_ident "fun_id" (middle_end/flambda/closure_conversion.ml[51,2459+36]..[51,2459+42])
                                                  expression (middle_end/flambda/closure_conversion.ml[51,2459+44]..[51,2459+47])
                                                    Pexp_ident "def" (middle_end/flambda/closure_conversion.ml[51,2459+44]..[51,2459+47])
                                                  expression (middle_end/flambda/closure_conversion.ml[51,2459+49]..[51,2459+53])
                                                    Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[51,2459+49]..[51,2459+53])
                                                ]
                                        ]
                                <case>
                                  pattern (middle_end/flambda/closure_conversion.ml[52,2515+8]..[52,2515+9])
                                    Ppat_any
                                  expression (middle_end/flambda/closure_conversion.ml[52,2515+13]..[52,2515+25])
                                    Pexp_assert
                                    expression (middle_end/flambda/closure_conversion.ml[52,2515+20]..[52,2515+25])
                                      Pexp_construct "false" (middle_end/flambda/closure_conversion.ml[52,2515+20]..[52,2515+25])
                                      None
                              ]
                          <case>
                            pattern (middle_end/flambda/closure_conversion.ml[54,2551+6]..[54,2551+33])
                              Ppat_alias "lam" (middle_end/flambda/closure_conversion.ml[54,2551+30]..[54,2551+33])
                              pattern (middle_end/flambda/closure_conversion.ml[54,2551+6]..[54,2551+26])
                                Ppat_construct "Lletrec" (middle_end/flambda/closure_conversion.ml[54,2551+6]..[54,2551+13])
                                Some
                                  []
                                  pattern (middle_end/flambda/closure_conversion.ml[54,2551+14]..[54,2551+26])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/closure_conversion.ml[54,2551+15]..[54,2551+19])
                                        Ppat_var "defs" (middle_end/flambda/closure_conversion.ml[54,2551+15]..[54,2551+19])
                                      pattern (middle_end/flambda/closure_conversion.ml[54,2551+21]..[54,2551+25])
                                        Ppat_var "body" (middle_end/flambda/closure_conversion.ml[54,2551+21]..[54,2551+25])
                                    ]
                            expression (middle_end/flambda/closure_conversion.ml[55,2588+6]..[67,3016+14])
                              Pexp_ifthenelse
                              expression (middle_end/flambda/closure_conversion.ml[55,2588+9]..[55,2588+36])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[55,2588+9]..[55,2588+31])
                                  Pexp_ident "defs_are_all_functions" (middle_end/flambda/closure_conversion.ml[55,2588+9]..[55,2588+31])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[55,2588+32]..[55,2588+36])
                                      Pexp_ident "defs" (middle_end/flambda/closure_conversion.ml[55,2588+32]..[55,2588+36])
                                ]
                              expression (middle_end/flambda/closure_conversion.ml[56,2630+8]..[66,2987+28])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/closure_conversion.ml[56,2630+12]..[56,2630+16])
                                      Ppat_var "defs" (middle_end/flambda/closure_conversion.ml[56,2630+12]..[56,2630+16])
                                    expression (middle_end/flambda/closure_conversion.ml[57,2649+10]..[64,2955+20])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[57,2649+10]..[57,2649+22])
                                        Pexp_ident "List.flatten" (middle_end/flambda/closure_conversion.ml[57,2649+10]..[57,2649+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[58,2672+12]..[64,2955+20])
                                            Pexp_apply
                                            expression (middle_end/flambda/closure_conversion.ml[58,2672+13]..[58,2672+21])
                                              Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[58,2672+13]..[58,2672+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[59,2694+15]..[63,2917+37])
                                                  Pexp_function
                                                  [
                                                    <case>
                                                      pattern (middle_end/flambda/closure_conversion.ml[60,2719+19]..[60,2719+73])
                                                        Ppat_tuple
                                                        [
                                                          pattern (middle_end/flambda/closure_conversion.ml[60,2719+20]..[60,2719+22])
                                                            Ppat_var "id" (middle_end/flambda/closure_conversion.ml[60,2719+20]..[60,2719+22])
                                                          pattern (middle_end/flambda/closure_conversion.ml[60,2719+24]..[60,2719+72])
                                                            Ppat_construct "Lambda.Lfunction" (middle_end/flambda/closure_conversion.ml[60,2719+24]..[60,2719+40])
                                                            Some
                                                              []
                                                              pattern (middle_end/flambda/closure_conversion.ml[60,2719+41]..[60,2719+72])
                                                                Ppat_record Closed
                                                                [
                                                                  "kind" (middle_end/flambda/closure_conversion.ml[60,2719+42]..[60,2719+46]) ghost
                                                                    pattern (middle_end/flambda/closure_conversion.ml[60,2719+42]..[60,2719+46])
                                                                      Ppat_var "kind" (middle_end/flambda/closure_conversion.ml[60,2719+42]..[60,2719+46])
                                                                  "params" (middle_end/flambda/closure_conversion.ml[60,2719+48]..[60,2719+54]) ghost
                                                                    pattern (middle_end/flambda/closure_conversion.ml[60,2719+48]..[60,2719+54])
                                                                      Ppat_var "params" (middle_end/flambda/closure_conversion.ml[60,2719+48]..[60,2719+54])
                                                                  "body" (middle_end/flambda/closure_conversion.ml[60,2719+56]..[60,2719+60]) ghost
                                                                    pattern (middle_end/flambda/closure_conversion.ml[60,2719+56]..[60,2719+60])
                                                                      Ppat_var "body" (middle_end/flambda/closure_conversion.ml[60,2719+56]..[60,2719+60])
                                                                  "attr" (middle_end/flambda/closure_conversion.ml[60,2719+62]..[60,2719+66]) ghost
                                                                    pattern (middle_end/flambda/closure_conversion.ml[60,2719+62]..[60,2719+66])
                                                                      Ppat_var "attr" (middle_end/flambda/closure_conversion.ml[60,2719+62]..[60,2719+66])
                                                                  "loc" (middle_end/flambda/closure_conversion.ml[60,2719+68]..[60,2719+71]) ghost
                                                                    pattern (middle_end/flambda/closure_conversion.ml[60,2719+68]..[60,2719+71])
                                                                      Ppat_var "loc" (middle_end/flambda/closure_conversion.ml[60,2719+68]..[60,2719+71])
                                                                ]
                                                        ]
                                                      expression (middle_end/flambda/closure_conversion.ml[61,2796+19]..[62,2869+47])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/closure_conversion.ml[61,2796+19]..[61,2796+48])
                                                          Pexp_ident "Simplif.split_default_wrapper" (middle_end/flambda/closure_conversion.ml[61,2796+19]..[61,2796+48])
                                                        [
                                                          <arg>
                                                          Labelled "id"
                                                            expression (middle_end/flambda/closure_conversion.ml[61,2796+50]..[61,2796+52])
                                                              Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[61,2796+50]..[61,2796+52])
                                                          <arg>
                                                          Labelled "kind"
                                                            expression (middle_end/flambda/closure_conversion.ml[61,2796+54]..[61,2796+58])
                                                              Pexp_ident "kind" (middle_end/flambda/closure_conversion.ml[61,2796+54]..[61,2796+58])
                                                          <arg>
                                                          Labelled "params"
                                                            expression (middle_end/flambda/closure_conversion.ml[61,2796+60]..[61,2796+66])
                                                              Pexp_ident "params" (middle_end/flambda/closure_conversion.ml[61,2796+60]..[61,2796+66])
                                                          <arg>
                                                          Labelled "body"
                                                            expression (middle_end/flambda/closure_conversion.ml[61,2796+68]..[61,2796+72])
                                                              Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[61,2796+68]..[61,2796+72])
                                                          <arg>
                                                          Labelled "return"
                                                            expression (middle_end/flambda/closure_conversion.ml[62,2869+29]..[62,2869+36])
                                                              Pexp_construct "Pgenval" (middle_end/flambda/closure_conversion.ml[62,2869+29]..[62,2869+36])
                                                              None
                                                          <arg>
                                                          Labelled "attr"
                                                            expression (middle_end/flambda/closure_conversion.ml[62,2869+38]..[62,2869+42])
                                                              Pexp_ident "attr" (middle_end/flambda/closure_conversion.ml[62,2869+38]..[62,2869+42])
                                                          <arg>
                                                          Labelled "loc"
                                                            expression (middle_end/flambda/closure_conversion.ml[62,2869+44]..[62,2869+47])
                                                              Pexp_ident "loc" (middle_end/flambda/closure_conversion.ml[62,2869+44]..[62,2869+47])
                                                        ]
                                                    <case>
                                                      pattern (middle_end/flambda/closure_conversion.ml[63,2917+19]..[63,2917+20])
                                                        Ppat_any
                                                      expression (middle_end/flambda/closure_conversion.ml[63,2917+24]..[63,2917+36])
                                                        Pexp_assert
                                                        expression (middle_end/flambda/closure_conversion.ml[63,2917+31]..[63,2917+36])
                                                          Pexp_construct "false" (middle_end/flambda/closure_conversion.ml[63,2917+31]..[63,2917+36])
                                                          None
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[64,2955+15]..[64,2955+19])
                                                  Pexp_ident "defs" (middle_end/flambda/closure_conversion.ml[64,2955+15]..[64,2955+19])
                                            ]
                                      ]
                                ]
                                expression (middle_end/flambda/closure_conversion.ml[66,2987+8]..[66,2987+28])
                                  Pexp_construct "Lletrec" (middle_end/flambda/closure_conversion.ml[66,2987+8]..[66,2987+15])
                                  Some
                                    expression (middle_end/flambda/closure_conversion.ml[66,2987+16]..[66,2987+28])
                                      Pexp_tuple
                                      [
                                        expression (middle_end/flambda/closure_conversion.ml[66,2987+17]..[66,2987+21])
                                          Pexp_ident "defs" (middle_end/flambda/closure_conversion.ml[66,2987+17]..[66,2987+21])
                                        expression (middle_end/flambda/closure_conversion.ml[66,2987+23]..[66,2987+27])
                                          Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[66,2987+23]..[66,2987+27])
                                      ]
                              Some
                                expression (middle_end/flambda/closure_conversion.ml[67,3016+11]..[67,3016+14])
                                  Pexp_ident "lam" (middle_end/flambda/closure_conversion.ml[67,3016+11]..[67,3016+14])
                          <case>
                            pattern (middle_end/flambda/closure_conversion.ml[68,3031+6]..[68,3031+9])
                              Ppat_var "lam" (middle_end/flambda/closure_conversion.ml[68,3031+6]..[68,3031+9])
                            expression (middle_end/flambda/closure_conversion.ml[68,3031+13]..[68,3031+16])
                              Pexp_ident "lam" (middle_end/flambda/closure_conversion.ml[68,3031+13]..[68,3031+16])
                        ]
                      core_type (middle_end/flambda/closure_conversion.ml[40,1968+32]..[40,1968+45])
                        Ptyp_constr "Lambda.lambda" (middle_end/flambda/closure_conversion.ml[40,1968+32]..[40,1968+45])
                        []
              ]
              expression (middle_end/flambda/closure_conversion.ml[70,3053+2]..[70,3053+18])
                Pexp_apply
                expression (middle_end/flambda/closure_conversion.ml[70,3053+2]..[70,3053+12])
                  Pexp_ident "Lambda.map" (middle_end/flambda/closure_conversion.ml[70,3053+2]..[70,3053+12])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/closure_conversion.ml[70,3053+13]..[70,3053+14])
                      Pexp_ident "f" (middle_end/flambda/closure_conversion.ml[70,3053+13]..[70,3053+14])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/closure_conversion.ml[70,3053+15]..[70,3053+18])
                      Pexp_ident "lam" (middle_end/flambda/closure_conversion.ml[70,3053+15]..[70,3053+18])
                ]
    ]
  structure_item (middle_end/flambda/closure_conversion.ml[75,3245+0]..[103,4383+79])
    Pstr_value Nonrec
    [
      <def>
          attribute "ocaml.doc"
            [
              structure_item (middle_end/flambda/closure_conversion.ml[72,3073+0]..[74,3215+29])
                Pstr_eval
                expression (middle_end/flambda/closure_conversion.ml[72,3073+0]..[74,3215+29])
                  Pexp_constant PConst_string(" Generate a wrapper (\"stub\") function that accepts a tuple argument and\n    calls another function with arguments extracted in the obvious\n    manner from the tuple. ",(middle_end/flambda/closure_conversion.ml[72,3073+0]..[74,3215+29]),None)
            ]
        pattern (middle_end/flambda/closure_conversion.ml[75,3245+4]..[75,3245+29])
          Ppat_var "tupled_function_call_stub" (middle_end/flambda/closure_conversion.ml[75,3245+4]..[75,3245+29])
        expression (middle_end/flambda/closure_conversion.ml[75,3245+30]..[103,4383+79]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/closure_conversion.ml[75,3245+30]..[75,3245+45])
            Ppat_var "original_params" (middle_end/flambda/closure_conversion.ml[75,3245+30]..[75,3245+45])
          expression (middle_end/flambda/closure_conversion.ml[75,3245+46]..[103,4383+79]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/closure_conversion.ml[75,3245+46]..[75,3245+61])
              Ppat_var "unboxed_version" (middle_end/flambda/closure_conversion.ml[75,3245+46]..[75,3245+61])
            expression (middle_end/flambda/closure_conversion.ml[75,3245+62]..[103,4383+79]) ghost
              Pexp_fun
              Labelled "closure_bound_var"
              None
              pattern (middle_end/flambda/closure_conversion.ml[75,3245+63]..[75,3245+80])
                Ppat_var "closure_bound_var" (middle_end/flambda/closure_conversion.ml[75,3245+63]..[75,3245+80])
              expression (middle_end/flambda/closure_conversion.ml[76,3326+6]..[103,4383+79])
                Pexp_constraint
                expression (middle_end/flambda/closure_conversion.ml[77,3365+2]..[103,4383+79])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/closure_conversion.ml[77,3365+6]..[77,3365+21])
                        Ppat_var "tuple_param_var" (middle_end/flambda/closure_conversion.ml[77,3365+6]..[77,3365+21])
                      expression (middle_end/flambda/closure_conversion.ml[77,3365+24]..[77,3365+55])
                        Pexp_apply
                        expression (middle_end/flambda/closure_conversion.ml[77,3365+24]..[77,3365+39])
                          Pexp_ident "Variable.rename" (middle_end/flambda/closure_conversion.ml[77,3365+24]..[77,3365+39])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[77,3365+40]..[77,3365+55])
                              Pexp_ident "unboxed_version" (middle_end/flambda/closure_conversion.ml[77,3365+40]..[77,3365+55])
                        ]
                  ]
                  expression (middle_end/flambda/closure_conversion.ml[78,3424+2]..[103,4383+79])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/closure_conversion.ml[78,3424+6]..[78,3424+12])
                          Ppat_var "params" (middle_end/flambda/closure_conversion.ml[78,3424+6]..[78,3424+12])
                        expression (middle_end/flambda/closure_conversion.ml[78,3424+15]..[78,3424+68])
                          Pexp_apply
                          expression (middle_end/flambda/closure_conversion.ml[78,3424+15]..[78,3424+23])
                            Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[78,3424+15]..[78,3424+23])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[78,3424+24]..[78,3424+52])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/closure_conversion.ml[78,3424+29]..[78,3424+30])
                                  Ppat_var "p" (middle_end/flambda/closure_conversion.ml[78,3424+29]..[78,3424+30])
                                expression (middle_end/flambda/closure_conversion.ml[78,3424+34]..[78,3424+51])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[78,3424+34]..[78,3424+49])
                                    Pexp_ident "Variable.rename" (middle_end/flambda/closure_conversion.ml[78,3424+34]..[78,3424+49])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[78,3424+50]..[78,3424+51])
                                        Pexp_ident "p" (middle_end/flambda/closure_conversion.ml[78,3424+50]..[78,3424+51])
                                  ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[78,3424+53]..[78,3424+68])
                                Pexp_ident "original_params" (middle_end/flambda/closure_conversion.ml[78,3424+53]..[78,3424+68])
                          ]
                    ]
                    expression (middle_end/flambda/closure_conversion.ml[79,3496+2]..[103,4383+79])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/closure_conversion.ml[79,3496+6]..[79,3496+22]) ghost
                            Ppat_constraint
                            pattern (middle_end/flambda/closure_conversion.ml[79,3496+6]..[79,3496+10])
                              Ppat_var "call" (middle_end/flambda/closure_conversion.ml[79,3496+6]..[79,3496+10])
                            core_type (middle_end/flambda/closure_conversion.ml[79,3496+13]..[79,3496+22]) ghost
                              Ptyp_poly
                              core_type (middle_end/flambda/closure_conversion.ml[79,3496+13]..[79,3496+22])
                                Ptyp_constr "Flambda.t" (middle_end/flambda/closure_conversion.ml[79,3496+13]..[79,3496+22])
                                []
                          expression (middle_end/flambda/closure_conversion.ml[79,3496+6]..[89,3887+8])
                            Pexp_constraint
                            expression (middle_end/flambda/closure_conversion.ml[80,3521+4]..[89,3887+8])
                              Pexp_construct "Apply" (middle_end/flambda/closure_conversion.ml[80,3521+4]..[80,3521+9])
                              Some
                                expression (middle_end/flambda/closure_conversion.ml[80,3521+10]..[89,3887+8])
                                  Pexp_record
                                  [
                                    "func" (middle_end/flambda/closure_conversion.ml[81,3534+8]..[81,3534+12])
                                      expression (middle_end/flambda/closure_conversion.ml[81,3534+15]..[81,3534+30])
                                        Pexp_ident "unboxed_version" (middle_end/flambda/closure_conversion.ml[81,3534+15]..[81,3534+30])
                                    "args" (middle_end/flambda/closure_conversion.ml[82,3566+8]..[82,3566+12])
                                      expression (middle_end/flambda/closure_conversion.ml[82,3566+15]..[82,3566+21])
                                        Pexp_ident "params" (middle_end/flambda/closure_conversion.ml[82,3566+15]..[82,3566+21])
                                    "kind" (middle_end/flambda/closure_conversion.ml[85,3726+8]..[85,3726+12])
                                      expression (middle_end/flambda/closure_conversion.ml[85,3726+15]..[85,3726+55])
                                        Pexp_construct "Direct" (middle_end/flambda/closure_conversion.ml[85,3726+15]..[85,3726+21])
                                        Some
                                          expression (middle_end/flambda/closure_conversion.ml[85,3726+22]..[85,3726+55])
                                            Pexp_apply
                                            expression (middle_end/flambda/closure_conversion.ml[85,3726+23]..[85,3726+38])
                                              Pexp_ident "Closure_id.wrap" (middle_end/flambda/closure_conversion.ml[85,3726+23]..[85,3726+38])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[85,3726+39]..[85,3726+54])
                                                  Pexp_ident "unboxed_version" (middle_end/flambda/closure_conversion.ml[85,3726+39]..[85,3726+54])
                                            ]
                                    "dbg" (middle_end/flambda/closure_conversion.ml[86,3783+8]..[86,3783+11])
                                      expression (middle_end/flambda/closure_conversion.ml[86,3783+14]..[86,3783+28])
                                        Pexp_ident "Debuginfo.none" (middle_end/flambda/closure_conversion.ml[86,3783+14]..[86,3783+28])
                                    "inline" (middle_end/flambda/closure_conversion.ml[87,3813+8]..[87,3813+14])
                                      expression (middle_end/flambda/closure_conversion.ml[87,3813+17]..[87,3813+31])
                                        Pexp_construct "Default_inline" (middle_end/flambda/closure_conversion.ml[87,3813+17]..[87,3813+31])
                                        None
                                    "specialise" (middle_end/flambda/closure_conversion.ml[88,3846+8]..[88,3846+18])
                                      expression (middle_end/flambda/closure_conversion.ml[88,3846+21]..[88,3846+39])
                                        Pexp_construct "Default_specialise" (middle_end/flambda/closure_conversion.ml[88,3846+21]..[88,3846+39])
                                        None
                                  ]
                                  None
                            core_type (middle_end/flambda/closure_conversion.ml[79,3496+13]..[79,3496+22])
                              Ptyp_constr "Flambda.t" (middle_end/flambda/closure_conversion.ml[79,3496+13]..[79,3496+22])
                              []
                      ]
                      expression (middle_end/flambda/closure_conversion.ml[91,3901+2]..[103,4383+79])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[91,3901+6]..[91,3901+13])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/closure_conversion.ml[91,3901+6]..[91,3901+7])
                                  Ppat_any
                                pattern (middle_end/flambda/closure_conversion.ml[91,3901+9]..[91,3901+13])
                                  Ppat_var "body" (middle_end/flambda/closure_conversion.ml[91,3901+9]..[91,3901+13])
                              ]
                            expression (middle_end/flambda/closure_conversion.ml[92,3917+4]..[97,4122+22])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[92,3917+4]..[92,3917+18])
                                Pexp_ident "List.fold_left" (middle_end/flambda/closure_conversion.ml[92,3917+4]..[92,3917+18])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[92,3917+19]..[96,4070+51])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/closure_conversion.ml[92,3917+24]..[92,3917+35])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/flambda/closure_conversion.ml[92,3917+25]..[92,3917+28])
                                          Ppat_var "pos" (middle_end/flambda/closure_conversion.ml[92,3917+25]..[92,3917+28])
                                        pattern (middle_end/flambda/closure_conversion.ml[92,3917+30]..[92,3917+34])
                                          Ppat_var "body" (middle_end/flambda/closure_conversion.ml[92,3917+30]..[92,3917+34])
                                      ]
                                    expression (middle_end/flambda/closure_conversion.ml[92,3917+36]..[96,4070+50]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/closure_conversion.ml[92,3917+36]..[92,3917+41])
                                        Ppat_var "param" (middle_end/flambda/closure_conversion.ml[92,3917+36]..[92,3917+41])
                                      expression (middle_end/flambda/closure_conversion.ml[93,3962+8]..[96,4070+50])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/closure_conversion.ml[93,3962+12]..[93,3962+31]) ghost
                                              Ppat_constraint
                                              pattern (middle_end/flambda/closure_conversion.ml[93,3962+12]..[93,3962+15])
                                                Ppat_var "lam" (middle_end/flambda/closure_conversion.ml[93,3962+12]..[93,3962+15])
                                              core_type (middle_end/flambda/closure_conversion.ml[93,3962+18]..[93,3962+31]) ghost
                                                Ptyp_poly
                                                core_type (middle_end/flambda/closure_conversion.ml[93,3962+18]..[93,3962+31])
                                                  Ptyp_constr "Flambda.named" (middle_end/flambda/closure_conversion.ml[93,3962+18]..[93,3962+31])
                                                  []
                                            expression (middle_end/flambda/closure_conversion.ml[93,3962+12]..[94,3996+62])
                                              Pexp_constraint
                                              expression (middle_end/flambda/closure_conversion.ml[94,3996+10]..[94,3996+62])
                                                Pexp_construct "Prim" (middle_end/flambda/closure_conversion.ml[94,3996+10]..[94,3996+14])
                                                Some
                                                  expression (middle_end/flambda/closure_conversion.ml[94,3996+15]..[94,3996+62])
                                                    Pexp_tuple
                                                    [
                                                      expression (middle_end/flambda/closure_conversion.ml[94,3996+16]..[94,3996+26])
                                                        Pexp_construct "Pfield" (middle_end/flambda/closure_conversion.ml[94,3996+16]..[94,3996+22])
                                                        Some
                                                          expression (middle_end/flambda/closure_conversion.ml[94,3996+23]..[94,3996+26])
                                                            Pexp_ident "pos" (middle_end/flambda/closure_conversion.ml[94,3996+23]..[94,3996+26])
                                                      expression (middle_end/flambda/closure_conversion.ml[94,3996+28]..[94,3996+45])
                                                        Pexp_construct "::" (middle_end/flambda/closure_conversion.ml[94,3996+29]..[94,3996+45]) ghost
                                                        Some
                                                          expression (middle_end/flambda/closure_conversion.ml[94,3996+29]..[94,3996+45]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (middle_end/flambda/closure_conversion.ml[94,3996+29]..[94,3996+44])
                                                                Pexp_ident "tuple_param_var" (middle_end/flambda/closure_conversion.ml[94,3996+29]..[94,3996+44])
                                                              expression (middle_end/flambda/closure_conversion.ml[94,3996+44]..[94,3996+45]) ghost
                                                                Pexp_construct "[]" (middle_end/flambda/closure_conversion.ml[94,3996+44]..[94,3996+45]) ghost
                                                                None
                                                            ]
                                                      expression (middle_end/flambda/closure_conversion.ml[94,3996+47]..[94,3996+61])
                                                        Pexp_ident "Debuginfo.none" (middle_end/flambda/closure_conversion.ml[94,3996+47]..[94,3996+61])
                                                    ]
                                              core_type (middle_end/flambda/closure_conversion.ml[93,3962+18]..[93,3962+31])
                                                Ptyp_constr "Flambda.named" (middle_end/flambda/closure_conversion.ml[93,3962+18]..[93,3962+31])
                                                []
                                        ]
                                        expression (middle_end/flambda/closure_conversion.ml[96,4070+8]..[96,4070+50])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/closure_conversion.ml[96,4070+8]..[96,4070+15])
                                              Pexp_apply
                                              expression (middle_end/flambda/closure_conversion.ml[96,4070+12]..[96,4070+13])
                                                Pexp_ident "+" (middle_end/flambda/closure_conversion.ml[96,4070+12]..[96,4070+13])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[96,4070+8]..[96,4070+11])
                                                    Pexp_ident "pos" (middle_end/flambda/closure_conversion.ml[96,4070+8]..[96,4070+11])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[96,4070+14]..[96,4070+15])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                            expression (middle_end/flambda/closure_conversion.ml[96,4070+17]..[96,4070+50])
                                              Pexp_apply
                                              expression (middle_end/flambda/closure_conversion.ml[96,4070+17]..[96,4070+35])
                                                Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[96,4070+17]..[96,4070+35])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[96,4070+36]..[96,4070+41])
                                                    Pexp_ident "param" (middle_end/flambda/closure_conversion.ml[96,4070+36]..[96,4070+41])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[96,4070+42]..[96,4070+45])
                                                    Pexp_ident "lam" (middle_end/flambda/closure_conversion.ml[96,4070+42]..[96,4070+45])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[96,4070+46]..[96,4070+50])
                                                    Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[96,4070+46]..[96,4070+50])
                                              ]
                                          ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[97,4122+6]..[97,4122+15])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/closure_conversion.ml[97,4122+7]..[97,4122+8])
                                        Pexp_constant PConst_int (0,None)
                                      expression (middle_end/flambda/closure_conversion.ml[97,4122+10]..[97,4122+14])
                                        Pexp_ident "call" (middle_end/flambda/closure_conversion.ml[97,4122+10]..[97,4122+14])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[97,4122+16]..[97,4122+22])
                                    Pexp_ident "params" (middle_end/flambda/closure_conversion.ml[97,4122+16]..[97,4122+22])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[99,4150+2]..[103,4383+79])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[99,4150+6]..[99,4150+17])
                                Ppat_var "tuple_param" (middle_end/flambda/closure_conversion.ml[99,4150+6]..[99,4150+17])
                              expression (middle_end/flambda/closure_conversion.ml[99,4150+20]..[99,4150+50])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[99,4150+20]..[99,4150+34])
                                  Pexp_ident "Parameter.wrap" (middle_end/flambda/closure_conversion.ml[99,4150+20]..[99,4150+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[99,4150+35]..[99,4150+50])
                                      Pexp_ident "tuple_param_var" (middle_end/flambda/closure_conversion.ml[99,4150+35]..[99,4150+50])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[100,4204+2]..[103,4383+79])
                            Pexp_apply
                            expression (middle_end/flambda/closure_conversion.ml[100,4204+2]..[100,4204+37])
                              Pexp_ident "Flambda.create_function_declaration" (middle_end/flambda/closure_conversion.ml[100,4204+2]..[100,4204+37])
                            [
                              <arg>
                              Labelled "params"
                                expression (middle_end/flambda/closure_conversion.ml[100,4204+46]..[100,4204+59])
                                  Pexp_construct "::" (middle_end/flambda/closure_conversion.ml[100,4204+47]..[100,4204+59]) ghost
                                  Some
                                    expression (middle_end/flambda/closure_conversion.ml[100,4204+47]..[100,4204+59]) ghost
                                      Pexp_tuple
                                      [
                                        expression (middle_end/flambda/closure_conversion.ml[100,4204+47]..[100,4204+58])
                                          Pexp_ident "tuple_param" (middle_end/flambda/closure_conversion.ml[100,4204+47]..[100,4204+58])
                                        expression (middle_end/flambda/closure_conversion.ml[100,4204+58]..[100,4204+59]) ghost
                                          Pexp_construct "[]" (middle_end/flambda/closure_conversion.ml[100,4204+58]..[100,4204+59]) ghost
                                          None
                                      ]
                              <arg>
                              Labelled "body"
                                expression (middle_end/flambda/closure_conversion.ml[101,4264+5]..[101,4264+9])
                                  Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[101,4264+5]..[101,4264+9])
                              <arg>
                              Labelled "stub"
                                expression (middle_end/flambda/closure_conversion.ml[101,4264+16]..[101,4264+20])
                                  Pexp_construct "true" (middle_end/flambda/closure_conversion.ml[101,4264+16]..[101,4264+20])
                                  None
                              <arg>
                              Labelled "dbg"
                                expression (middle_end/flambda/closure_conversion.ml[101,4264+26]..[101,4264+40])
                                  Pexp_ident "Debuginfo.none" (middle_end/flambda/closure_conversion.ml[101,4264+26]..[101,4264+40])
                              <arg>
                              Labelled "inline"
                                expression (middle_end/flambda/closure_conversion.ml[101,4264+49]..[101,4264+63])
                                  Pexp_construct "Default_inline" (middle_end/flambda/closure_conversion.ml[101,4264+49]..[101,4264+63])
                                  None
                              <arg>
                              Labelled "specialise"
                                expression (middle_end/flambda/closure_conversion.ml[102,4328+16]..[102,4328+34])
                                  Pexp_construct "Default_specialise" (middle_end/flambda/closure_conversion.ml[102,4328+16]..[102,4328+34])
                                  None
                              <arg>
                              Labelled "is_a_functor"
                                expression (middle_end/flambda/closure_conversion.ml[102,4328+49]..[102,4328+54])
                                  Pexp_construct "false" (middle_end/flambda/closure_conversion.ml[102,4328+49]..[102,4328+54])
                                  None
                              <arg>
                              Labelled "closure_origin"
                                expression (middle_end/flambda/closure_conversion.ml[103,4383+20]..[103,4383+79])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[103,4383+21]..[103,4383+42])
                                    Pexp_ident "Closure_origin.create" (middle_end/flambda/closure_conversion.ml[103,4383+21]..[103,4383+42])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[103,4383+43]..[103,4383+78])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[103,4383+44]..[103,4383+59])
                                          Pexp_ident "Closure_id.wrap" (middle_end/flambda/closure_conversion.ml[103,4383+44]..[103,4383+59])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[103,4383+60]..[103,4383+77])
                                              Pexp_ident "closure_bound_var" (middle_end/flambda/closure_conversion.ml[103,4383+60]..[103,4383+77])
                                        ]
                                  ]
                            ]
                core_type (middle_end/flambda/closure_conversion.ml[76,3326+8]..[76,3326+36])
                  Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/closure_conversion.ml[76,3326+8]..[76,3326+36])
                  []
    ]
  structure_item (middle_end/flambda/closure_conversion.ml[105,4464+0]..[110,4756+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/closure_conversion.ml[105,4464+4]..[105,4464+18])
          Ppat_var "register_const" (middle_end/flambda/closure_conversion.ml[105,4464+4]..[105,4464+18])
        expression (middle_end/flambda/closure_conversion.ml[105,4464+19]..[110,4756+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/closure_conversion.ml[105,4464+19]..[105,4464+20])
            Ppat_var "t" (middle_end/flambda/closure_conversion.ml[105,4464+19]..[105,4464+20])
          expression (middle_end/flambda/closure_conversion.ml[105,4464+21]..[110,4756+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/closure_conversion.ml[105,4464+21]..[105,4464+63])
              Ppat_constraint
              pattern (middle_end/flambda/closure_conversion.ml[105,4464+22]..[105,4464+30])
                Ppat_var "constant" (middle_end/flambda/closure_conversion.ml[105,4464+22]..[105,4464+30])
              core_type (middle_end/flambda/closure_conversion.ml[105,4464+31]..[105,4464+62])
                Ptyp_constr "Flambda.constant_defining_value" (middle_end/flambda/closure_conversion.ml[105,4464+31]..[105,4464+62])
                []
            expression (middle_end/flambda/closure_conversion.ml[105,4464+64]..[110,4756+21]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/closure_conversion.ml[105,4464+64]..[105,4464+68])
                Ppat_var "name" (middle_end/flambda/closure_conversion.ml[105,4464+64]..[105,4464+68])
              expression (middle_end/flambda/closure_conversion.ml[106,4533+4]..[110,4756+21])
                Pexp_constraint
                expression (middle_end/flambda/closure_conversion.ml[107,4613+2]..[110,4756+21])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/closure_conversion.ml[107,4613+6]..[107,4613+9])
                        Ppat_var "var" (middle_end/flambda/closure_conversion.ml[107,4613+6]..[107,4613+9])
                      expression (middle_end/flambda/closure_conversion.ml[107,4613+12]..[107,4613+32])
                        Pexp_apply
                        expression (middle_end/flambda/closure_conversion.ml[107,4613+12]..[107,4613+27])
                          Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[107,4613+12]..[107,4613+27])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[107,4613+28]..[107,4613+32])
                              Pexp_ident "name" (middle_end/flambda/closure_conversion.ml[107,4613+28]..[107,4613+32])
                        ]
                  ]
                  expression (middle_end/flambda/closure_conversion.ml[108,4649+2]..[110,4756+21])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/closure_conversion.ml[108,4649+6]..[108,4649+12])
                          Ppat_var "symbol" (middle_end/flambda/closure_conversion.ml[108,4649+6]..[108,4649+12])
                        expression (middle_end/flambda/closure_conversion.ml[108,4649+15]..[108,4649+37])
                          Pexp_apply
                          expression (middle_end/flambda/closure_conversion.ml[108,4649+15]..[108,4649+33])
                            Pexp_ident "Symbol.of_variable" (middle_end/flambda/closure_conversion.ml[108,4649+15]..[108,4649+33])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[108,4649+34]..[108,4649+37])
                                Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[108,4649+34]..[108,4649+37])
                          ]
                    ]
                    expression (middle_end/flambda/closure_conversion.ml[109,4690+2]..[110,4756+21])
                      Pexp_sequence
                      expression (middle_end/flambda/closure_conversion.ml[109,4690+2]..[109,4690+64])
                        Pexp_setfield
                        expression (middle_end/flambda/closure_conversion.ml[109,4690+2]..[109,4690+3])
                          Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[109,4690+2]..[109,4690+3])
                        "declared_symbols" (middle_end/flambda/closure_conversion.ml[109,4690+4]..[109,4690+20])
                        expression (middle_end/flambda/closure_conversion.ml[109,4690+24]..[109,4690+64])
                          Pexp_construct "::" (middle_end/flambda/closure_conversion.ml[109,4690+43]..[109,4690+45])
                          Some
                            expression (middle_end/flambda/closure_conversion.ml[109,4690+24]..[109,4690+64]) ghost
                              Pexp_tuple
                              [
                                expression (middle_end/flambda/closure_conversion.ml[109,4690+24]..[109,4690+42])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/closure_conversion.ml[109,4690+25]..[109,4690+31])
                                      Pexp_ident "symbol" (middle_end/flambda/closure_conversion.ml[109,4690+25]..[109,4690+31])
                                    expression (middle_end/flambda/closure_conversion.ml[109,4690+33]..[109,4690+41])
                                      Pexp_ident "constant" (middle_end/flambda/closure_conversion.ml[109,4690+33]..[109,4690+41])
                                  ]
                                expression (middle_end/flambda/closure_conversion.ml[109,4690+46]..[109,4690+64])
                                  Pexp_field
                                  expression (middle_end/flambda/closure_conversion.ml[109,4690+46]..[109,4690+47])
                                    Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[109,4690+46]..[109,4690+47])
                                  "declared_symbols" (middle_end/flambda/closure_conversion.ml[109,4690+48]..[109,4690+64])
                              ]
                      expression (middle_end/flambda/closure_conversion.ml[110,4756+2]..[110,4756+21])
                        Pexp_tuple
                        [
                          expression (middle_end/flambda/closure_conversion.ml[110,4756+2]..[110,4756+15])
                            Pexp_construct "Symbol" (middle_end/flambda/closure_conversion.ml[110,4756+2]..[110,4756+8])
                            Some
                              expression (middle_end/flambda/closure_conversion.ml[110,4756+9]..[110,4756+15])
                                Pexp_ident "symbol" (middle_end/flambda/closure_conversion.ml[110,4756+9]..[110,4756+15])
                          expression (middle_end/flambda/closure_conversion.ml[110,4756+17]..[110,4756+21])
                            Pexp_ident "name" (middle_end/flambda/closure_conversion.ml[110,4756+17]..[110,4756+21])
                        ]
                core_type (middle_end/flambda/closure_conversion.ml[106,4533+6]..[106,4533+77])
                  Ptyp_tuple
                  [
                    core_type (middle_end/flambda/closure_conversion.ml[106,4533+6]..[106,4533+49])
                      Ptyp_constr "Flambda.constant_defining_value_block_field" (middle_end/flambda/closure_conversion.ml[106,4533+6]..[106,4533+49])
                      []
                    core_type (middle_end/flambda/closure_conversion.ml[106,4533+52]..[106,4533+77])
                      Ptyp_constr "Internal_variable_names.t" (middle_end/flambda/closure_conversion.ml[106,4533+52]..[106,4533+77])
                      []
                  ]
    ]
  structure_item (middle_end/flambda/closure_conversion.ml[112,4779+0]..[151,6295+44])
    Pstr_value Rec
    [
      <def>
        pattern (middle_end/flambda/closure_conversion.ml[112,4779+8]..[112,4779+21])
          Ppat_var "declare_const" (middle_end/flambda/closure_conversion.ml[112,4779+8]..[112,4779+21])
        expression (middle_end/flambda/closure_conversion.ml[112,4779+22]..[151,6295+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/closure_conversion.ml[112,4779+22]..[112,4779+23])
            Ppat_var "t" (middle_end/flambda/closure_conversion.ml[112,4779+22]..[112,4779+23])
          expression (middle_end/flambda/closure_conversion.ml[112,4779+24]..[151,6295+44]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/closure_conversion.ml[112,4779+24]..[112,4779+60])
              Ppat_constraint
              pattern (middle_end/flambda/closure_conversion.ml[112,4779+25]..[112,4779+30])
                Ppat_var "const" (middle_end/flambda/closure_conversion.ml[112,4779+25]..[112,4779+30])
              core_type (middle_end/flambda/closure_conversion.ml[112,4779+33]..[112,4779+59])
                Ptyp_constr "Lambda.structured_constant" (middle_end/flambda/closure_conversion.ml[112,4779+33]..[112,4779+59])
                []
            expression (middle_end/flambda/closure_conversion.ml[113,4840+4]..[151,6295+44])
              Pexp_constraint
              expression (middle_end/flambda/closure_conversion.ml[114,4920+2]..[151,6295+44])
                Pexp_match
                expression (middle_end/flambda/closure_conversion.ml[114,4920+8]..[114,4920+13])
                  Pexp_ident "const" (middle_end/flambda/closure_conversion.ml[114,4920+8]..[114,4920+13])
                [
                  <case>
                    pattern (middle_end/flambda/closure_conversion.ml[115,4939+4]..[115,4939+28])
                      Ppat_construct "Const_base" (middle_end/flambda/closure_conversion.ml[115,4939+4]..[115,4939+14])
                      Some
                        []
                        pattern (middle_end/flambda/closure_conversion.ml[115,4939+15]..[115,4939+28])
                          Ppat_construct "Const_int" (middle_end/flambda/closure_conversion.ml[115,4939+16]..[115,4939+25])
                          Some
                            []
                            pattern (middle_end/flambda/closure_conversion.ml[115,4939+26]..[115,4939+27])
                              Ppat_var "c" (middle_end/flambda/closure_conversion.ml[115,4939+26]..[115,4939+27])
                    expression (middle_end/flambda/closure_conversion.ml[115,4939+32]..[115,4939+64])
                      Pexp_tuple
                      [
                        expression (middle_end/flambda/closure_conversion.ml[115,4939+33]..[115,4939+46])
                          Pexp_construct "Const" (middle_end/flambda/closure_conversion.ml[115,4939+33]..[115,4939+38])
                          Some
                            expression (middle_end/flambda/closure_conversion.ml[115,4939+39]..[115,4939+46])
                              Pexp_construct "Int" (middle_end/flambda/closure_conversion.ml[115,4939+40]..[115,4939+43])
                              Some
                                expression (middle_end/flambda/closure_conversion.ml[115,4939+44]..[115,4939+45])
                                  Pexp_ident "c" (middle_end/flambda/closure_conversion.ml[115,4939+44]..[115,4939+45])
                        expression (middle_end/flambda/closure_conversion.ml[115,4939+48]..[115,4939+63])
                          Pexp_ident "Names.const_int" (middle_end/flambda/closure_conversion.ml[115,4939+48]..[115,4939+63])
                      ]
                  <case>
                    pattern (middle_end/flambda/closure_conversion.ml[116,5004+4]..[116,5004+29])
                      Ppat_construct "Const_base" (middle_end/flambda/closure_conversion.ml[116,5004+4]..[116,5004+14])
                      Some
                        []
                        pattern (middle_end/flambda/closure_conversion.ml[116,5004+15]..[116,5004+29])
                          Ppat_construct "Const_char" (middle_end/flambda/closure_conversion.ml[116,5004+16]..[116,5004+26])
                          Some
                            []
                            pattern (middle_end/flambda/closure_conversion.ml[116,5004+27]..[116,5004+28])
                              Ppat_var "c" (middle_end/flambda/closure_conversion.ml[116,5004+27]..[116,5004+28])
                    expression (middle_end/flambda/closure_conversion.ml[116,5004+33]..[116,5004+67])
                      Pexp_tuple
                      [
                        expression (middle_end/flambda/closure_conversion.ml[116,5004+34]..[116,5004+48])
                          Pexp_construct "Const" (middle_end/flambda/closure_conversion.ml[116,5004+34]..[116,5004+39])
                          Some
                            expression (middle_end/flambda/closure_conversion.ml[116,5004+40]..[116,5004+48])
                              Pexp_construct "Char" (middle_end/flambda/closure_conversion.ml[116,5004+41]..[116,5004+45])
                              Some
                                expression (middle_end/flambda/closure_conversion.ml[116,5004+46]..[116,5004+47])
                                  Pexp_ident "c" (middle_end/flambda/closure_conversion.ml[116,5004+46]..[116,5004+47])
                        expression (middle_end/flambda/closure_conversion.ml[116,5004+50]..[116,5004+66])
                          Pexp_ident "Names.const_char" (middle_end/flambda/closure_conversion.ml[116,5004+50]..[116,5004+66])
                      ]
                  <case>
                    pattern (middle_end/flambda/closure_conversion.ml[117,5072+4]..[117,5072+39])
                      Ppat_construct "Const_base" (middle_end/flambda/closure_conversion.ml[117,5072+4]..[117,5072+14])
                      Some
                        []
                        pattern (middle_end/flambda/closure_conversion.ml[117,5072+15]..[117,5072+39])
                          Ppat_construct "Const_string" (middle_end/flambda/closure_conversion.ml[117,5072+16]..[117,5072+28])
                          Some
                            []
                            pattern (middle_end/flambda/closure_conversion.ml[117,5072+29]..[117,5072+38])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/closure_conversion.ml[117,5072+30]..[117,5072+31])
                                  Ppat_var "s" (middle_end/flambda/closure_conversion.ml[117,5072+30]..[117,5072+31])
                                pattern (middle_end/flambda/closure_conversion.ml[117,5072+33]..[117,5072+34])
                                  Ppat_any
                                pattern (middle_end/flambda/closure_conversion.ml[117,5072+36]..[117,5072+37])
                                  Ppat_any
                              ]
                    expression (middle_end/flambda/closure_conversion.ml[118,5115+4]..[126,5349+31])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/closure_conversion.ml[118,5115+8]..[118,5115+19])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[118,5115+8]..[118,5115+13])
                                Ppat_var "const" (middle_end/flambda/closure_conversion.ml[118,5115+8]..[118,5115+13])
                              pattern (middle_end/flambda/closure_conversion.ml[118,5115+15]..[118,5115+19])
                                Ppat_var "name" (middle_end/flambda/closure_conversion.ml[118,5115+15]..[118,5115+19])
                            ]
                          expression (middle_end/flambda/closure_conversion.ml[119,5137+6]..[124,5313+28])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/closure_conversion.ml[119,5137+9]..[119,5137+27])
                              Pexp_ident "Config.safe_string" (middle_end/flambda/closure_conversion.ml[119,5137+9]..[119,5137+27])
                            expression (middle_end/flambda/closure_conversion.ml[120,5170+8]..[121,5225+31])
                              Pexp_tuple
                              [
                                expression (middle_end/flambda/closure_conversion.ml[120,5170+9]..[120,5170+53])
                                  Pexp_construct "Flambda.Allocated_const" (middle_end/flambda/closure_conversion.ml[120,5170+9]..[120,5170+32])
                                  Some
                                    expression (middle_end/flambda/closure_conversion.ml[120,5170+33]..[120,5170+53])
                                      Pexp_construct "Immutable_string" (middle_end/flambda/closure_conversion.ml[120,5170+34]..[120,5170+50])
                                      Some
                                        expression (middle_end/flambda/closure_conversion.ml[120,5170+51]..[120,5170+52])
                                          Pexp_ident "s" (middle_end/flambda/closure_conversion.ml[120,5170+51]..[120,5170+52])
                                expression (middle_end/flambda/closure_conversion.ml[121,5225+9]..[121,5225+30])
                                  Pexp_ident "Names.const_immstring" (middle_end/flambda/closure_conversion.ml[121,5225+9]..[121,5225+30])
                              ]
                            Some
                              expression (middle_end/flambda/closure_conversion.ml[123,5268+8]..[124,5313+28])
                                Pexp_tuple
                                [
                                  expression (middle_end/flambda/closure_conversion.ml[123,5268+9]..[123,5268+43])
                                    Pexp_construct "Flambda.Allocated_const" (middle_end/flambda/closure_conversion.ml[123,5268+9]..[123,5268+32])
                                    Some
                                      expression (middle_end/flambda/closure_conversion.ml[123,5268+33]..[123,5268+43])
                                        Pexp_construct "String" (middle_end/flambda/closure_conversion.ml[123,5268+34]..[123,5268+40])
                                        Some
                                          expression (middle_end/flambda/closure_conversion.ml[123,5268+41]..[123,5268+42])
                                            Pexp_ident "s" (middle_end/flambda/closure_conversion.ml[123,5268+41]..[123,5268+42])
                                  expression (middle_end/flambda/closure_conversion.ml[124,5313+9]..[124,5313+27])
                                    Pexp_ident "Names.const_string" (middle_end/flambda/closure_conversion.ml[124,5313+9]..[124,5313+27])
                                ]
                      ]
                      expression (middle_end/flambda/closure_conversion.ml[126,5349+4]..[126,5349+31])
                        Pexp_apply
                        expression (middle_end/flambda/closure_conversion.ml[126,5349+4]..[126,5349+18])
                          Pexp_ident "register_const" (middle_end/flambda/closure_conversion.ml[126,5349+4]..[126,5349+18])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[126,5349+19]..[126,5349+20])
                              Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[126,5349+19]..[126,5349+20])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[126,5349+21]..[126,5349+26])
                              Pexp_ident "const" (middle_end/flambda/closure_conversion.ml[126,5349+21]..[126,5349+26])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[126,5349+27]..[126,5349+31])
                              Pexp_ident "name" (middle_end/flambda/closure_conversion.ml[126,5349+27]..[126,5349+31])
                        ]
                  <case>
                    pattern (middle_end/flambda/closure_conversion.ml[127,5381+4]..[127,5381+30])
                      Ppat_construct "Const_base" (middle_end/flambda/closure_conversion.ml[127,5381+4]..[127,5381+14])
                      Some
                        []
                        pattern (middle_end/flambda/closure_conversion.ml[127,5381+15]..[127,5381+30])
                          Ppat_construct "Const_float" (middle_end/flambda/closure_conversion.ml[127,5381+16]..[127,5381+27])
                          Some
                            []
                            pattern (middle_end/flambda/closure_conversion.ml[127,5381+28]..[127,5381+29])
                              Ppat_var "c" (middle_end/flambda/closure_conversion.ml[127,5381+28]..[127,5381+29])
                    expression (middle_end/flambda/closure_conversion.ml[128,5415+4]..[130,5488+23])
                      Pexp_apply
                      expression (middle_end/flambda/closure_conversion.ml[128,5415+4]..[128,5415+18])
                        Pexp_ident "register_const" (middle_end/flambda/closure_conversion.ml[128,5415+4]..[128,5415+18])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[128,5415+19]..[128,5415+20])
                            Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[128,5415+19]..[128,5415+20])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[129,5436+6]..[129,5436+51])
                            Pexp_construct "Allocated_const" (middle_end/flambda/closure_conversion.ml[129,5436+7]..[129,5436+22])
                            Some
                              expression (middle_end/flambda/closure_conversion.ml[129,5436+23]..[129,5436+50])
                                Pexp_construct "Float" (middle_end/flambda/closure_conversion.ml[129,5436+24]..[129,5436+29])
                                Some
                                  expression (middle_end/flambda/closure_conversion.ml[129,5436+30]..[129,5436+49])
                                    Pexp_apply
                                    expression (middle_end/flambda/closure_conversion.ml[129,5436+31]..[129,5436+46])
                                      Pexp_ident "float_of_string" (middle_end/flambda/closure_conversion.ml[129,5436+31]..[129,5436+46])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[129,5436+47]..[129,5436+48])
                                          Pexp_ident "c" (middle_end/flambda/closure_conversion.ml[129,5436+47]..[129,5436+48])
                                    ]
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[130,5488+6]..[130,5488+23])
                            Pexp_ident "Names.const_float" (middle_end/flambda/closure_conversion.ml[130,5488+6]..[130,5488+23])
                      ]
                  <case>
                    pattern (middle_end/flambda/closure_conversion.ml[131,5512+4]..[131,5512+30])
                      Ppat_construct "Const_base" (middle_end/flambda/closure_conversion.ml[131,5512+4]..[131,5512+14])
                      Some
                        []
                        pattern (middle_end/flambda/closure_conversion.ml[131,5512+15]..[131,5512+30])
                          Ppat_construct "Const_int32" (middle_end/flambda/closure_conversion.ml[131,5512+16]..[131,5512+27])
                          Some
                            []
                            pattern (middle_end/flambda/closure_conversion.ml[131,5512+28]..[131,5512+29])
                              Ppat_var "c" (middle_end/flambda/closure_conversion.ml[131,5512+28]..[131,5512+29])
                    expression (middle_end/flambda/closure_conversion.ml[132,5546+4]..[133,5595+23])
                      Pexp_apply
                      expression (middle_end/flambda/closure_conversion.ml[132,5546+4]..[132,5546+18])
                        Pexp_ident "register_const" (middle_end/flambda/closure_conversion.ml[132,5546+4]..[132,5546+18])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[132,5546+19]..[132,5546+20])
                            Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[132,5546+19]..[132,5546+20])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[132,5546+21]..[132,5546+48])
                            Pexp_construct "Allocated_const" (middle_end/flambda/closure_conversion.ml[132,5546+22]..[132,5546+37])
                            Some
                              expression (middle_end/flambda/closure_conversion.ml[132,5546+38]..[132,5546+47])
                                Pexp_construct "Int32" (middle_end/flambda/closure_conversion.ml[132,5546+39]..[132,5546+44])
                                Some
                                  expression (middle_end/flambda/closure_conversion.ml[132,5546+45]..[132,5546+46])
                                    Pexp_ident "c" (middle_end/flambda/closure_conversion.ml[132,5546+45]..[132,5546+46])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[133,5595+6]..[133,5595+23])
                            Pexp_ident "Names.const_int32" (middle_end/flambda/closure_conversion.ml[133,5595+6]..[133,5595+23])
                      ]
                  <case>
                    pattern (middle_end/flambda/closure_conversion.ml[134,5619+4]..[134,5619+30])
                      Ppat_construct "Const_base" (middle_end/flambda/closure_conversion.ml[134,5619+4]..[134,5619+14])
                      Some
                        []
                        pattern (middle_end/flambda/closure_conversion.ml[134,5619+15]..[134,5619+30])
                          Ppat_construct "Const_int64" (middle_end/flambda/closure_conversion.ml[134,5619+16]..[134,5619+27])
                          Some
                            []
                            pattern (middle_end/flambda/closure_conversion.ml[134,5619+28]..[134,5619+29])
                              Ppat_var "c" (middle_end/flambda/closure_conversion.ml[134,5619+28]..[134,5619+29])
                    expression (middle_end/flambda/closure_conversion.ml[135,5653+4]..[136,5702+23])
                      Pexp_apply
                      expression (middle_end/flambda/closure_conversion.ml[135,5653+4]..[135,5653+18])
                        Pexp_ident "register_const" (middle_end/flambda/closure_conversion.ml[135,5653+4]..[135,5653+18])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[135,5653+19]..[135,5653+20])
                            Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[135,5653+19]..[135,5653+20])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[135,5653+21]..[135,5653+48])
                            Pexp_construct "Allocated_const" (middle_end/flambda/closure_conversion.ml[135,5653+22]..[135,5653+37])
                            Some
                              expression (middle_end/flambda/closure_conversion.ml[135,5653+38]..[135,5653+47])
                                Pexp_construct "Int64" (middle_end/flambda/closure_conversion.ml[135,5653+39]..[135,5653+44])
                                Some
                                  expression (middle_end/flambda/closure_conversion.ml[135,5653+45]..[135,5653+46])
                                    Pexp_ident "c" (middle_end/flambda/closure_conversion.ml[135,5653+45]..[135,5653+46])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[136,5702+6]..[136,5702+23])
                            Pexp_ident "Names.const_int64" (middle_end/flambda/closure_conversion.ml[136,5702+6]..[136,5702+23])
                      ]
                  <case>
                    pattern (middle_end/flambda/closure_conversion.ml[137,5726+4]..[137,5726+34])
                      Ppat_construct "Const_base" (middle_end/flambda/closure_conversion.ml[137,5726+4]..[137,5726+14])
                      Some
                        []
                        pattern (middle_end/flambda/closure_conversion.ml[137,5726+15]..[137,5726+34])
                          Ppat_construct "Const_nativeint" (middle_end/flambda/closure_conversion.ml[137,5726+16]..[137,5726+31])
                          Some
                            []
                            pattern (middle_end/flambda/closure_conversion.ml[137,5726+32]..[137,5726+33])
                              Ppat_var "c" (middle_end/flambda/closure_conversion.ml[137,5726+32]..[137,5726+33])
                    expression (middle_end/flambda/closure_conversion.ml[138,5764+4]..[138,5764+74])
                      Pexp_apply
                      expression (middle_end/flambda/closure_conversion.ml[138,5764+4]..[138,5764+18])
                        Pexp_ident "register_const" (middle_end/flambda/closure_conversion.ml[138,5764+4]..[138,5764+18])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[138,5764+19]..[138,5764+20])
                            Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[138,5764+19]..[138,5764+20])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[138,5764+21]..[138,5764+52])
                            Pexp_construct "Allocated_const" (middle_end/flambda/closure_conversion.ml[138,5764+22]..[138,5764+37])
                            Some
                              expression (middle_end/flambda/closure_conversion.ml[138,5764+38]..[138,5764+51])
                                Pexp_construct "Nativeint" (middle_end/flambda/closure_conversion.ml[138,5764+39]..[138,5764+48])
                                Some
                                  expression (middle_end/flambda/closure_conversion.ml[138,5764+49]..[138,5764+50])
                                    Pexp_ident "c" (middle_end/flambda/closure_conversion.ml[138,5764+49]..[138,5764+50])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[138,5764+53]..[138,5764+74])
                            Pexp_ident "Names.const_nativeint" (middle_end/flambda/closure_conversion.ml[138,5764+53]..[138,5764+74])
                      ]
                  <case>
                    pattern (middle_end/flambda/closure_conversion.ml[139,5839+4]..[139,5839+21])
                      Ppat_construct "Const_immstring" (middle_end/flambda/closure_conversion.ml[139,5839+4]..[139,5839+19])
                      Some
                        []
                        pattern (middle_end/flambda/closure_conversion.ml[139,5839+20]..[139,5839+21])
                          Ppat_var "c" (middle_end/flambda/closure_conversion.ml[139,5839+20]..[139,5839+21])
                    expression (middle_end/flambda/closure_conversion.ml[140,5864+4]..[141,5924+27])
                      Pexp_apply
                      expression (middle_end/flambda/closure_conversion.ml[140,5864+4]..[140,5864+18])
                        Pexp_ident "register_const" (middle_end/flambda/closure_conversion.ml[140,5864+4]..[140,5864+18])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[140,5864+19]..[140,5864+20])
                            Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[140,5864+19]..[140,5864+20])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[140,5864+21]..[140,5864+59])
                            Pexp_construct "Allocated_const" (middle_end/flambda/closure_conversion.ml[140,5864+22]..[140,5864+37])
                            Some
                              expression (middle_end/flambda/closure_conversion.ml[140,5864+38]..[140,5864+58])
                                Pexp_construct "Immutable_string" (middle_end/flambda/closure_conversion.ml[140,5864+39]..[140,5864+55])
                                Some
                                  expression (middle_end/flambda/closure_conversion.ml[140,5864+56]..[140,5864+57])
                                    Pexp_ident "c" (middle_end/flambda/closure_conversion.ml[140,5864+56]..[140,5864+57])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[141,5924+6]..[141,5924+27])
                            Pexp_ident "Names.const_immstring" (middle_end/flambda/closure_conversion.ml[141,5924+6]..[141,5924+27])
                      ]
                  <case>
                    pattern (middle_end/flambda/closure_conversion.ml[142,5952+4]..[142,5952+23])
                      Ppat_construct "Const_float_array" (middle_end/flambda/closure_conversion.ml[142,5952+4]..[142,5952+21])
                      Some
                        []
                        pattern (middle_end/flambda/closure_conversion.ml[142,5952+22]..[142,5952+23])
                          Ppat_var "c" (middle_end/flambda/closure_conversion.ml[142,5952+22]..[142,5952+23])
                    expression (middle_end/flambda/closure_conversion.ml[143,5979+4]..[145,6077+29])
                      Pexp_apply
                      expression (middle_end/flambda/closure_conversion.ml[143,5979+4]..[143,5979+18])
                        Pexp_ident "register_const" (middle_end/flambda/closure_conversion.ml[143,5979+4]..[143,5979+18])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[143,5979+19]..[143,5979+20])
                            Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[143,5979+19]..[143,5979+20])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[144,6000+6]..[144,6000+76])
                            Pexp_construct "Allocated_const" (middle_end/flambda/closure_conversion.ml[144,6000+7]..[144,6000+22])
                            Some
                              expression (middle_end/flambda/closure_conversion.ml[144,6000+23]..[144,6000+75])
                                Pexp_construct "Immutable_float_array" (middle_end/flambda/closure_conversion.ml[144,6000+24]..[144,6000+45])
                                Some
                                  expression (middle_end/flambda/closure_conversion.ml[144,6000+46]..[144,6000+74])
                                    Pexp_apply
                                    expression (middle_end/flambda/closure_conversion.ml[144,6000+47]..[144,6000+55])
                                      Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[144,6000+47]..[144,6000+55])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[144,6000+56]..[144,6000+71])
                                          Pexp_ident "float_of_string" (middle_end/flambda/closure_conversion.ml[144,6000+56]..[144,6000+71])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[144,6000+72]..[144,6000+73])
                                          Pexp_ident "c" (middle_end/flambda/closure_conversion.ml[144,6000+72]..[144,6000+73])
                                    ]
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[145,6077+6]..[145,6077+29])
                            Pexp_ident "Names.const_float_array" (middle_end/flambda/closure_conversion.ml[145,6077+6]..[145,6077+29])
                      ]
                  <case>
                    pattern (middle_end/flambda/closure_conversion.ml[146,6107+4]..[146,6107+29])
                      Ppat_construct "Const_block" (middle_end/flambda/closure_conversion.ml[146,6107+4]..[146,6107+15])
                      Some
                        []
                        pattern (middle_end/flambda/closure_conversion.ml[146,6107+16]..[146,6107+29])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/closure_conversion.ml[146,6107+17]..[146,6107+20])
                              Ppat_var "tag" (middle_end/flambda/closure_conversion.ml[146,6107+17]..[146,6107+20])
                            pattern (middle_end/flambda/closure_conversion.ml[146,6107+22]..[146,6107+28])
                              Ppat_var "consts" (middle_end/flambda/closure_conversion.ml[146,6107+22]..[146,6107+28])
                          ]
                    expression (middle_end/flambda/closure_conversion.ml[147,6140+4]..[151,6295+44])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/closure_conversion.ml[147,6140+8]..[147,6140+47]) ghost
                            Ppat_constraint
                            pattern (middle_end/flambda/closure_conversion.ml[147,6140+8]..[147,6140+13])
                              Ppat_var "const" (middle_end/flambda/closure_conversion.ml[147,6140+8]..[147,6140+13])
                            core_type (middle_end/flambda/closure_conversion.ml[147,6140+16]..[147,6140+47]) ghost
                              Ptyp_poly
                              core_type (middle_end/flambda/closure_conversion.ml[147,6140+16]..[147,6140+47])
                                Ptyp_constr "Flambda.constant_defining_value" (middle_end/flambda/closure_conversion.ml[147,6140+16]..[147,6140+47])
                                []
                          expression (middle_end/flambda/closure_conversion.ml[147,6140+8]..[149,6223+64])
                            Pexp_constraint
                            expression (middle_end/flambda/closure_conversion.ml[148,6190+6]..[149,6223+64])
                              Pexp_construct "Block" (middle_end/flambda/closure_conversion.ml[148,6190+6]..[148,6190+11])
                              Some
                                expression (middle_end/flambda/closure_conversion.ml[148,6190+12]..[149,6223+64])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/closure_conversion.ml[148,6190+13]..[148,6190+31])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[148,6190+13]..[148,6190+27])
                                        Pexp_ident "Tag.create_exn" (middle_end/flambda/closure_conversion.ml[148,6190+13]..[148,6190+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[148,6190+28]..[148,6190+31])
                                            Pexp_ident "tag" (middle_end/flambda/closure_conversion.ml[148,6190+28]..[148,6190+31])
                                      ]
                                    expression (middle_end/flambda/closure_conversion.ml[149,6223+13]..[149,6223+63])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[149,6223+13]..[149,6223+21])
                                        Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[149,6223+13]..[149,6223+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[149,6223+22]..[149,6223+56])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/flambda/closure_conversion.ml[149,6223+27]..[149,6223+28])
                                              Ppat_var "c" (middle_end/flambda/closure_conversion.ml[149,6223+27]..[149,6223+28])
                                            expression (middle_end/flambda/closure_conversion.ml[149,6223+32]..[149,6223+55])
                                              Pexp_apply
                                              expression (middle_end/flambda/closure_conversion.ml[149,6223+32]..[149,6223+35])
                                                Pexp_ident "fst" (middle_end/flambda/closure_conversion.ml[149,6223+32]..[149,6223+35])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[149,6223+36]..[149,6223+55])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/closure_conversion.ml[149,6223+37]..[149,6223+50])
                                                      Pexp_ident "declare_const" (middle_end/flambda/closure_conversion.ml[149,6223+37]..[149,6223+50])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[149,6223+51]..[149,6223+52])
                                                          Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[149,6223+51]..[149,6223+52])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[149,6223+53]..[149,6223+54])
                                                          Pexp_ident "c" (middle_end/flambda/closure_conversion.ml[149,6223+53]..[149,6223+54])
                                                    ]
                                              ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[149,6223+57]..[149,6223+63])
                                            Pexp_ident "consts" (middle_end/flambda/closure_conversion.ml[149,6223+57]..[149,6223+63])
                                      ]
                                  ]
                            core_type (middle_end/flambda/closure_conversion.ml[147,6140+16]..[147,6140+47])
                              Ptyp_constr "Flambda.constant_defining_value" (middle_end/flambda/closure_conversion.ml[147,6140+16]..[147,6140+47])
                              []
                      ]
                      expression (middle_end/flambda/closure_conversion.ml[151,6295+4]..[151,6295+44])
                        Pexp_apply
                        expression (middle_end/flambda/closure_conversion.ml[151,6295+4]..[151,6295+18])
                          Pexp_ident "register_const" (middle_end/flambda/closure_conversion.ml[151,6295+4]..[151,6295+18])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[151,6295+19]..[151,6295+20])
                              Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[151,6295+19]..[151,6295+20])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[151,6295+21]..[151,6295+26])
                              Pexp_ident "const" (middle_end/flambda/closure_conversion.ml[151,6295+21]..[151,6295+26])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[151,6295+27]..[151,6295+44])
                              Pexp_ident "Names.const_block" (middle_end/flambda/closure_conversion.ml[151,6295+27]..[151,6295+44])
                        ]
                ]
              core_type (middle_end/flambda/closure_conversion.ml[113,4840+6]..[113,4840+77])
                Ptyp_tuple
                [
                  core_type (middle_end/flambda/closure_conversion.ml[113,4840+6]..[113,4840+49])
                    Ptyp_constr "Flambda.constant_defining_value_block_field" (middle_end/flambda/closure_conversion.ml[113,4840+6]..[113,4840+49])
                    []
                  core_type (middle_end/flambda/closure_conversion.ml[113,4840+52]..[113,4840+77])
                    Ptyp_constr "Internal_variable_names.t" (middle_end/flambda/closure_conversion.ml[113,4840+52]..[113,4840+77])
                    []
                ]
    ]
  structure_item (middle_end/flambda/closure_conversion.ml[153,6341+0]..[159,6544+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/closure_conversion.ml[153,6341+4]..[153,6341+15])
          Ppat_var "close_const" (middle_end/flambda/closure_conversion.ml[153,6341+4]..[153,6341+15])
        expression (middle_end/flambda/closure_conversion.ml[153,6341+16]..[159,6544+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/closure_conversion.ml[153,6341+16]..[153,6341+17])
            Ppat_var "t" (middle_end/flambda/closure_conversion.ml[153,6341+16]..[153,6341+17])
          expression (middle_end/flambda/closure_conversion.ml[153,6341+18]..[159,6544+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/closure_conversion.ml[153,6341+18]..[153,6341+54])
              Ppat_constraint
              pattern (middle_end/flambda/closure_conversion.ml[153,6341+19]..[153,6341+24])
                Ppat_var "const" (middle_end/flambda/closure_conversion.ml[153,6341+19]..[153,6341+24])
              core_type (middle_end/flambda/closure_conversion.ml[153,6341+27]..[153,6341+53])
                Ptyp_constr "Lambda.structured_constant" (middle_end/flambda/closure_conversion.ml[153,6341+27]..[153,6341+53])
                []
            expression (middle_end/flambda/closure_conversion.ml[154,6396+6]..[159,6544+18])
              Pexp_constraint
              expression (middle_end/flambda/closure_conversion.ml[155,6448+2]..[159,6544+18])
                Pexp_match
                expression (middle_end/flambda/closure_conversion.ml[155,6448+8]..[155,6448+29])
                  Pexp_apply
                  expression (middle_end/flambda/closure_conversion.ml[155,6448+8]..[155,6448+21])
                    Pexp_ident "declare_const" (middle_end/flambda/closure_conversion.ml[155,6448+8]..[155,6448+21])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/closure_conversion.ml[155,6448+22]..[155,6448+23])
                        Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[155,6448+22]..[155,6448+23])
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/closure_conversion.ml[155,6448+24]..[155,6448+29])
                        Pexp_ident "const" (middle_end/flambda/closure_conversion.ml[155,6448+24]..[155,6448+29])
                  ]
                [
                  <case>
                    pattern (middle_end/flambda/closure_conversion.ml[156,6483+4]..[156,6483+17])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/closure_conversion.ml[156,6483+4]..[156,6483+11])
                          Ppat_construct "Const" (middle_end/flambda/closure_conversion.ml[156,6483+4]..[156,6483+9])
                          Some
                            []
                            pattern (middle_end/flambda/closure_conversion.ml[156,6483+10]..[156,6483+11])
                              Ppat_var "c" (middle_end/flambda/closure_conversion.ml[156,6483+10]..[156,6483+11])
                        pattern (middle_end/flambda/closure_conversion.ml[156,6483+13]..[156,6483+17])
                          Ppat_var "name" (middle_end/flambda/closure_conversion.ml[156,6483+13]..[156,6483+17])
                      ]
                    expression (middle_end/flambda/closure_conversion.ml[157,6504+4]..[157,6504+17])
                      Pexp_tuple
                      [
                        expression (middle_end/flambda/closure_conversion.ml[157,6504+4]..[157,6504+11])
                          Pexp_construct "Const" (middle_end/flambda/closure_conversion.ml[157,6504+4]..[157,6504+9])
                          Some
                            expression (middle_end/flambda/closure_conversion.ml[157,6504+10]..[157,6504+11])
                              Pexp_ident "c" (middle_end/flambda/closure_conversion.ml[157,6504+10]..[157,6504+11])
                        expression (middle_end/flambda/closure_conversion.ml[157,6504+13]..[157,6504+17])
                          Pexp_ident "name" (middle_end/flambda/closure_conversion.ml[157,6504+13]..[157,6504+17])
                      ]
                  <case>
                    pattern (middle_end/flambda/closure_conversion.ml[158,6522+4]..[158,6522+18])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/closure_conversion.ml[158,6522+4]..[158,6522+12])
                          Ppat_construct "Symbol" (middle_end/flambda/closure_conversion.ml[158,6522+4]..[158,6522+10])
                          Some
                            []
                            pattern (middle_end/flambda/closure_conversion.ml[158,6522+11]..[158,6522+12])
                              Ppat_var "s" (middle_end/flambda/closure_conversion.ml[158,6522+11]..[158,6522+12])
                        pattern (middle_end/flambda/closure_conversion.ml[158,6522+14]..[158,6522+18])
                          Ppat_var "name" (middle_end/flambda/closure_conversion.ml[158,6522+14]..[158,6522+18])
                      ]
                    expression (middle_end/flambda/closure_conversion.ml[159,6544+4]..[159,6544+18])
                      Pexp_tuple
                      [
                        expression (middle_end/flambda/closure_conversion.ml[159,6544+4]..[159,6544+12])
                          Pexp_construct "Symbol" (middle_end/flambda/closure_conversion.ml[159,6544+4]..[159,6544+10])
                          Some
                            expression (middle_end/flambda/closure_conversion.ml[159,6544+11]..[159,6544+12])
                              Pexp_ident "s" (middle_end/flambda/closure_conversion.ml[159,6544+11]..[159,6544+12])
                        expression (middle_end/flambda/closure_conversion.ml[159,6544+14]..[159,6544+18])
                          Pexp_ident "name" (middle_end/flambda/closure_conversion.ml[159,6544+14]..[159,6544+18])
                      ]
                ]
              core_type (middle_end/flambda/closure_conversion.ml[154,6396+8]..[154,6396+49])
                Ptyp_tuple
                [
                  core_type (middle_end/flambda/closure_conversion.ml[154,6396+8]..[154,6396+21])
                    Ptyp_constr "Flambda.named" (middle_end/flambda/closure_conversion.ml[154,6396+8]..[154,6396+21])
                    []
                  core_type (middle_end/flambda/closure_conversion.ml[154,6396+24]..[154,6396+49])
                    Ptyp_constr "Internal_variable_names.t" (middle_end/flambda/closure_conversion.ml[154,6396+24]..[154,6396+49])
                    []
                ]
    ]
  structure_item (middle_end/flambda/closure_conversion.ml[161,6564+0]..[165,6661+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/closure_conversion.ml[161,6564+4]..[161,6564+21])
          Ppat_var "lambda_const_bool" (middle_end/flambda/closure_conversion.ml[161,6564+4]..[161,6564+21])
        expression (middle_end/flambda/closure_conversion.ml[161,6564+22]..[165,6661+22]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/closure_conversion.ml[161,6564+22]..[161,6564+23])
            Ppat_var "b" (middle_end/flambda/closure_conversion.ml[161,6564+22]..[161,6564+23])
          expression (middle_end/flambda/closure_conversion.ml[161,6564+24]..[165,6661+22])
            Pexp_constraint
            expression (middle_end/flambda/closure_conversion.ml[162,6619+2]..[165,6661+22])
              Pexp_ifthenelse
              expression (middle_end/flambda/closure_conversion.ml[162,6619+5]..[162,6619+6])
                Pexp_ident "b" (middle_end/flambda/closure_conversion.ml[162,6619+5]..[162,6619+6])
              expression (middle_end/flambda/closure_conversion.ml[163,6631+4]..[163,6631+22])
                Pexp_apply
                expression (middle_end/flambda/closure_conversion.ml[163,6631+4]..[163,6631+20])
                  Pexp_ident "Lambda.const_int" (middle_end/flambda/closure_conversion.ml[163,6631+4]..[163,6631+20])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/closure_conversion.ml[163,6631+21]..[163,6631+22])
                      Pexp_constant PConst_int (1,None)
                ]
              Some
                expression (middle_end/flambda/closure_conversion.ml[165,6661+4]..[165,6661+22])
                  Pexp_apply
                  expression (middle_end/flambda/closure_conversion.ml[165,6661+4]..[165,6661+20])
                    Pexp_ident "Lambda.const_int" (middle_end/flambda/closure_conversion.ml[165,6661+4]..[165,6661+20])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/closure_conversion.ml[165,6661+21]..[165,6661+22])
                        Pexp_constant PConst_int (0,None)
                  ]
            core_type (middle_end/flambda/closure_conversion.ml[161,6564+26]..[161,6564+52])
              Ptyp_constr "Lambda.structured_constant" (middle_end/flambda/closure_conversion.ml[161,6564+26]..[161,6564+52])
              []
    ]
  structure_item (middle_end/flambda/closure_conversion.ml[167,6685+0]..[168,6739+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/closure_conversion.ml[167,6685+4]..[167,6685+20])
          Ppat_var "lambda_const_int" (middle_end/flambda/closure_conversion.ml[167,6685+4]..[167,6685+20])
        expression (middle_end/flambda/closure_conversion.ml[167,6685+21]..[168,6739+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/closure_conversion.ml[167,6685+21]..[167,6685+22])
            Ppat_var "i" (middle_end/flambda/closure_conversion.ml[167,6685+21]..[167,6685+22])
          expression (middle_end/flambda/closure_conversion.ml[167,6685+23]..[168,6739+26])
            Pexp_constraint
            expression (middle_end/flambda/closure_conversion.ml[168,6739+2]..[168,6739+26])
              Pexp_construct "Const_base" (middle_end/flambda/closure_conversion.ml[168,6739+2]..[168,6739+12])
              Some
                expression (middle_end/flambda/closure_conversion.ml[168,6739+13]..[168,6739+26])
                  Pexp_construct "Const_int" (middle_end/flambda/closure_conversion.ml[168,6739+14]..[168,6739+23])
                  Some
                    expression (middle_end/flambda/closure_conversion.ml[168,6739+24]..[168,6739+25])
                      Pexp_ident "i" (middle_end/flambda/closure_conversion.ml[168,6739+24]..[168,6739+25])
            core_type (middle_end/flambda/closure_conversion.ml[167,6685+25]..[167,6685+51])
              Ptyp_constr "Lambda.structured_constant" (middle_end/flambda/closure_conversion.ml[167,6685+25]..[167,6685+51])
              []
    ]
  structure_item (middle_end/flambda/closure_conversion.ml[170,6767+0]..[667,28752+33])
    Pstr_value Rec
    [
      <def>
        pattern (middle_end/flambda/closure_conversion.ml[170,6767+8]..[170,6767+13])
          Ppat_var "close" (middle_end/flambda/closure_conversion.ml[170,6767+8]..[170,6767+13])
        expression (middle_end/flambda/closure_conversion.ml[170,6767+14]..[556,24007+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/closure_conversion.ml[170,6767+14]..[170,6767+15])
            Ppat_var "t" (middle_end/flambda/closure_conversion.ml[170,6767+14]..[170,6767+15])
          expression (middle_end/flambda/closure_conversion.ml[170,6767+16]..[556,24007+32]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/closure_conversion.ml[170,6767+16]..[170,6767+19])
              Ppat_var "env" (middle_end/flambda/closure_conversion.ml[170,6767+16]..[170,6767+19])
            expression (middle_end/flambda/closure_conversion.ml[170,6767+20]..[556,24007+32]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/closure_conversion.ml[170,6767+20]..[170,6767+41])
                Ppat_constraint
                pattern (middle_end/flambda/closure_conversion.ml[170,6767+21]..[170,6767+24])
                  Ppat_var "lam" (middle_end/flambda/closure_conversion.ml[170,6767+21]..[170,6767+24])
                core_type (middle_end/flambda/closure_conversion.ml[170,6767+27]..[170,6767+40])
                  Ptyp_constr "Lambda.lambda" (middle_end/flambda/closure_conversion.ml[170,6767+27]..[170,6767+40])
                  []
              expression (middle_end/flambda/closure_conversion.ml[170,6767+42]..[556,24007+32])
                Pexp_constraint
                expression (middle_end/flambda/closure_conversion.ml[171,6823+2]..[556,24007+32])
                  Pexp_match
                  expression (middle_end/flambda/closure_conversion.ml[171,6823+8]..[171,6823+11])
                    Pexp_ident "lam" (middle_end/flambda/closure_conversion.ml[171,6823+8]..[171,6823+11])
                  [
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[172,6840+4]..[172,6840+11])
                        Ppat_construct "Lvar" (middle_end/flambda/closure_conversion.ml[172,6840+4]..[172,6840+8])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[172,6840+9]..[172,6840+11])
                            Ppat_var "id" (middle_end/flambda/closure_conversion.ml[172,6840+9]..[172,6840+11])
                      expression (middle_end/flambda/closure_conversion.ml[173,6855+5]..[178,7054+8])
                        Pexp_match
                        expression (middle_end/flambda/closure_conversion.ml[173,6855+17]..[173,6855+40])
                          Pexp_apply
                          expression (middle_end/flambda/closure_conversion.ml[173,6855+17]..[173,6855+33])
                            Pexp_ident "Env.find_var_exn" (middle_end/flambda/closure_conversion.ml[173,6855+17]..[173,6855+33])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[173,6855+34]..[173,6855+37])
                                Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[173,6855+34]..[173,6855+37])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[173,6855+38]..[173,6855+40])
                                Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[173,6855+38]..[173,6855+40])
                          ]
                        [
                          <case>
                            pattern (middle_end/flambda/closure_conversion.ml[174,6901+7]..[174,6901+10])
                              Ppat_var "var" (middle_end/flambda/closure_conversion.ml[174,6901+7]..[174,6901+10])
                            expression (middle_end/flambda/closure_conversion.ml[174,6901+14]..[174,6901+21])
                              Pexp_construct "Var" (middle_end/flambda/closure_conversion.ml[174,6901+14]..[174,6901+17])
                              Some
                                expression (middle_end/flambda/closure_conversion.ml[174,6901+18]..[174,6901+21])
                                  Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[174,6901+18]..[174,6901+21])
                          <case>
                            pattern (middle_end/flambda/closure_conversion.ml[175,6923+7]..[175,6923+26])
                              Ppat_exception
                              pattern (middle_end/flambda/closure_conversion.ml[175,6923+17]..[175,6923+26])
                                Ppat_construct "Not_found" (middle_end/flambda/closure_conversion.ml[175,6923+17]..[175,6923+26])
                                None
                            expression (middle_end/flambda/closure_conversion.ml[176,6953+8]..[177,7029+24])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[176,6953+8]..[176,6953+25])
                                Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/closure_conversion.ml[176,6953+8]..[176,6953+25])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[176,6953+26]..[176,6953+75])
                                    Pexp_constant PConst_string("Closure_conversion.close: unbound identifier %a",(middle_end/flambda/closure_conversion.ml[176,6953+27]..[176,6953+74]),None)
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[177,7029+10]..[177,7029+21])
                                    Pexp_ident "Ident.print" (middle_end/flambda/closure_conversion.ml[177,7029+10]..[177,7029+21])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[177,7029+22]..[177,7029+24])
                                    Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[177,7029+22]..[177,7029+24])
                              ]
                        ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[179,7063+4]..[179,7063+14])
                        Ppat_construct "Lmutvar" (middle_end/flambda/closure_conversion.ml[179,7063+4]..[179,7063+11])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[179,7063+12]..[179,7063+14])
                            Ppat_var "id" (middle_end/flambda/closure_conversion.ml[179,7063+12]..[179,7063+14])
                      expression (middle_end/flambda/closure_conversion.ml[180,7081+4]..[187,7361+7])
                        Pexp_match
                        expression (middle_end/flambda/closure_conversion.ml[180,7081+16]..[180,7081+47])
                          Pexp_apply
                          expression (middle_end/flambda/closure_conversion.ml[180,7081+16]..[180,7081+40])
                            Pexp_ident "Env.find_mutable_var_exn" (middle_end/flambda/closure_conversion.ml[180,7081+16]..[180,7081+40])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[180,7081+41]..[180,7081+44])
                                Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[180,7081+41]..[180,7081+44])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[180,7081+45]..[180,7081+47])
                                Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[180,7081+45]..[180,7081+47])
                          ]
                        [
                          <case>
                            pattern (middle_end/flambda/closure_conversion.ml[181,7134+6]..[181,7134+13])
                              Ppat_var "mut_var" (middle_end/flambda/closure_conversion.ml[181,7134+6]..[181,7134+13])
                            expression (middle_end/flambda/closure_conversion.ml[182,7151+7]..[182,7151+64])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[182,7151+7]..[182,7151+16])
                                Pexp_ident "name_expr" (middle_end/flambda/closure_conversion.ml[182,7151+7]..[182,7151+16])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[182,7151+17]..[182,7151+39])
                                    Pexp_construct "Read_mutable" (middle_end/flambda/closure_conversion.ml[182,7151+18]..[182,7151+30])
                                    Some
                                      expression (middle_end/flambda/closure_conversion.ml[182,7151+31]..[182,7151+38])
                                        Pexp_ident "mut_var" (middle_end/flambda/closure_conversion.ml[182,7151+31]..[182,7151+38])
                                <arg>
                                Labelled "name"
                                  expression (middle_end/flambda/closure_conversion.ml[182,7151+46]..[182,7151+64])
                                    Pexp_ident "Names.read_mutable" (middle_end/flambda/closure_conversion.ml[182,7151+46]..[182,7151+64])
                              ]
                          <case>
                            pattern (middle_end/flambda/closure_conversion.ml[183,7216+6]..[183,7216+25])
                              Ppat_exception
                              pattern (middle_end/flambda/closure_conversion.ml[183,7216+16]..[183,7216+25])
                                Ppat_construct "Not_found" (middle_end/flambda/closure_conversion.ml[183,7216+16]..[183,7216+25])
                                None
                            expression (middle_end/flambda/closure_conversion.ml[184,7245+7]..[186,7337+23])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[184,7245+7]..[184,7245+24])
                                Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/closure_conversion.ml[184,7245+7]..[184,7245+24])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[185,7270+9]..[185,7270+66])
                                    Pexp_constant PConst_string("Closure_conversion.close: unbound mutable identifier %a",(middle_end/flambda/closure_conversion.ml[185,7270+10]..[185,7270+65]),None)
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[186,7337+9]..[186,7337+20])
                                    Pexp_ident "Ident.print" (middle_end/flambda/closure_conversion.ml[186,7337+9]..[186,7337+20])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[186,7337+21]..[186,7337+23])
                                    Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[186,7337+21]..[186,7337+23])
                              ]
                        ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[188,7369+4]..[188,7369+14])
                        Ppat_construct "Lconst" (middle_end/flambda/closure_conversion.ml[188,7369+4]..[188,7369+10])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[188,7369+11]..[188,7369+14])
                            Ppat_var "cst" (middle_end/flambda/closure_conversion.ml[188,7369+11]..[188,7369+14])
                      expression (middle_end/flambda/closure_conversion.ml[189,7387+4]..[190,7428+23])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[189,7387+8]..[189,7387+17])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/closure_conversion.ml[189,7387+8]..[189,7387+11])
                                  Ppat_var "cst" (middle_end/flambda/closure_conversion.ml[189,7387+8]..[189,7387+11])
                                pattern (middle_end/flambda/closure_conversion.ml[189,7387+13]..[189,7387+17])
                                  Ppat_var "name" (middle_end/flambda/closure_conversion.ml[189,7387+13]..[189,7387+17])
                              ]
                            expression (middle_end/flambda/closure_conversion.ml[189,7387+20]..[189,7387+37])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[189,7387+20]..[189,7387+31])
                                Pexp_ident "close_const" (middle_end/flambda/closure_conversion.ml[189,7387+20]..[189,7387+31])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[189,7387+32]..[189,7387+33])
                                    Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[189,7387+32]..[189,7387+33])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[189,7387+34]..[189,7387+37])
                                    Pexp_ident "cst" (middle_end/flambda/closure_conversion.ml[189,7387+34]..[189,7387+37])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[190,7428+4]..[190,7428+23])
                          Pexp_apply
                          expression (middle_end/flambda/closure_conversion.ml[190,7428+4]..[190,7428+13])
                            Pexp_ident "name_expr" (middle_end/flambda/closure_conversion.ml[190,7428+4]..[190,7428+13])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[190,7428+14]..[190,7428+17])
                                Pexp_ident "cst" (middle_end/flambda/closure_conversion.ml[190,7428+14]..[190,7428+17])
                            <arg>
                            Labelled "name"
                              expression (middle_end/flambda/closure_conversion.ml[190,7428+19]..[190,7428+23])
                                Pexp_ident "name" (middle_end/flambda/closure_conversion.ml[190,7428+19]..[190,7428+23])
                          ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[191,7452+4]..[191,7452+77])
                        Ppat_construct "Llet" (middle_end/flambda/closure_conversion.ml[191,7452+4]..[191,7452+8])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[191,7452+9]..[191,7452+77])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[191,7452+10]..[191,7452+38])
                                Ppat_or
                                pattern (middle_end/flambda/closure_conversion.ml[191,7452+11]..[191,7452+25])
                                  Ppat_or
                                  pattern (middle_end/flambda/closure_conversion.ml[191,7452+11]..[191,7452+17])
                                    Ppat_construct "Strict" (middle_end/flambda/closure_conversion.ml[191,7452+11]..[191,7452+17])
                                    None
                                  pattern (middle_end/flambda/closure_conversion.ml[191,7452+20]..[191,7452+25])
                                    Ppat_construct "Alias" (middle_end/flambda/closure_conversion.ml[191,7452+20]..[191,7452+25])
                                    None
                                pattern (middle_end/flambda/closure_conversion.ml[191,7452+28]..[191,7452+37])
                                  Ppat_construct "StrictOpt" (middle_end/flambda/closure_conversion.ml[191,7452+28]..[191,7452+37])
                                  None
                              pattern (middle_end/flambda/closure_conversion.ml[191,7452+40]..[191,7452+51])
                                Ppat_var "_value_kind" (middle_end/flambda/closure_conversion.ml[191,7452+40]..[191,7452+51])
                              pattern (middle_end/flambda/closure_conversion.ml[191,7452+53]..[191,7452+55])
                                Ppat_var "id" (middle_end/flambda/closure_conversion.ml[191,7452+53]..[191,7452+55])
                              pattern (middle_end/flambda/closure_conversion.ml[191,7452+57]..[191,7452+70])
                                Ppat_var "defining_expr" (middle_end/flambda/closure_conversion.ml[191,7452+57]..[191,7452+70])
                              pattern (middle_end/flambda/closure_conversion.ml[191,7452+72]..[191,7452+76])
                                Ppat_var "body" (middle_end/flambda/closure_conversion.ml[191,7452+72]..[191,7452+76])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[193,7576+4]..[198,7780+45])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[193,7576+8]..[193,7576+11])
                              Ppat_var "var" (middle_end/flambda/closure_conversion.ml[193,7576+8]..[193,7576+11])
                            expression (middle_end/flambda/closure_conversion.ml[193,7576+14]..[193,7576+56])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[193,7576+14]..[193,7576+53])
                                Pexp_ident "Variable.create_with_same_name_as_ident" (middle_end/flambda/closure_conversion.ml[193,7576+14]..[193,7576+53])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[193,7576+54]..[193,7576+56])
                                    Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[193,7576+54]..[193,7576+56])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[194,7636+4]..[198,7780+45])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[194,7636+8]..[194,7636+21])
                                Ppat_var "defining_expr" (middle_end/flambda/closure_conversion.ml[194,7636+8]..[194,7636+21])
                              expression (middle_end/flambda/closure_conversion.ml[195,7660+6]..[195,7660+56])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[195,7660+6]..[195,7660+32])
                                  Pexp_ident "close_let_bound_expression" (middle_end/flambda/closure_conversion.ml[195,7660+6]..[195,7660+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[195,7660+33]..[195,7660+34])
                                      Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[195,7660+33]..[195,7660+34])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[195,7660+35]..[195,7660+38])
                                      Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[195,7660+35]..[195,7660+38])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[195,7660+39]..[195,7660+42])
                                      Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[195,7660+39]..[195,7660+42])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[195,7660+43]..[195,7660+56])
                                      Pexp_ident "defining_expr" (middle_end/flambda/closure_conversion.ml[195,7660+43]..[195,7660+56])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[197,7724+4]..[198,7780+45])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/closure_conversion.ml[197,7724+8]..[197,7724+12])
                                  Ppat_var "body" (middle_end/flambda/closure_conversion.ml[197,7724+8]..[197,7724+12])
                                expression (middle_end/flambda/closure_conversion.ml[197,7724+15]..[197,7724+52])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[197,7724+15]..[197,7724+20])
                                    Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[197,7724+15]..[197,7724+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[197,7724+21]..[197,7724+22])
                                        Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[197,7724+21]..[197,7724+22])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[197,7724+23]..[197,7724+47])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[197,7724+24]..[197,7724+35])
                                          Pexp_ident "Env.add_var" (middle_end/flambda/closure_conversion.ml[197,7724+24]..[197,7724+35])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[197,7724+36]..[197,7724+39])
                                              Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[197,7724+36]..[197,7724+39])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[197,7724+40]..[197,7724+42])
                                              Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[197,7724+40]..[197,7724+42])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[197,7724+43]..[197,7724+46])
                                              Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[197,7724+43]..[197,7724+46])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[197,7724+48]..[197,7724+52])
                                        Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[197,7724+48]..[197,7724+52])
                                  ]
                            ]
                            expression (middle_end/flambda/closure_conversion.ml[198,7780+4]..[198,7780+45])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[198,7780+4]..[198,7780+22])
                                Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[198,7780+4]..[198,7780+22])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[198,7780+23]..[198,7780+26])
                                    Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[198,7780+23]..[198,7780+26])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[198,7780+27]..[198,7780+40])
                                    Pexp_ident "defining_expr" (middle_end/flambda/closure_conversion.ml[198,7780+27]..[198,7780+40])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[198,7780+41]..[198,7780+45])
                                    Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[198,7780+41]..[198,7780+45])
                              ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[199,7826+4]..[199,7826+49])
                        Ppat_construct "Lmutlet" (middle_end/flambda/closure_conversion.ml[199,7826+4]..[199,7826+11])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[199,7826+12]..[199,7826+49])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[199,7826+13]..[199,7826+23])
                                Ppat_var "block_kind" (middle_end/flambda/closure_conversion.ml[199,7826+13]..[199,7826+23])
                              pattern (middle_end/flambda/closure_conversion.ml[199,7826+25]..[199,7826+27])
                                Ppat_var "id" (middle_end/flambda/closure_conversion.ml[199,7826+25]..[199,7826+27])
                              pattern (middle_end/flambda/closure_conversion.ml[199,7826+29]..[199,7826+42])
                                Ppat_var "defining_expr" (middle_end/flambda/closure_conversion.ml[199,7826+29]..[199,7826+42])
                              pattern (middle_end/flambda/closure_conversion.ml[199,7826+44]..[199,7826+48])
                                Ppat_var "body" (middle_end/flambda/closure_conversion.ml[199,7826+44]..[199,7826+48])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[200,7879+4]..[211,8302+40])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[200,7879+8]..[200,7879+15])
                              Ppat_var "mut_var" (middle_end/flambda/closure_conversion.ml[200,7879+8]..[200,7879+15])
                            expression (middle_end/flambda/closure_conversion.ml[200,7879+18]..[200,7879+68])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[200,7879+18]..[200,7879+65])
                                Pexp_ident "Mutable_variable.create_with_same_name_as_ident" (middle_end/flambda/closure_conversion.ml[200,7879+18]..[200,7879+65])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[200,7879+66]..[200,7879+68])
                                    Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[200,7879+66]..[200,7879+68])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[201,7951+4]..[211,8302+40])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[201,7951+8]..[201,7951+11])
                                Ppat_var "var" (middle_end/flambda/closure_conversion.ml[201,7951+8]..[201,7951+11])
                              expression (middle_end/flambda/closure_conversion.ml[201,7951+14]..[201,7951+56])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[201,7951+14]..[201,7951+53])
                                  Pexp_ident "Variable.create_with_same_name_as_ident" (middle_end/flambda/closure_conversion.ml[201,7951+14]..[201,7951+53])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[201,7951+54]..[201,7951+56])
                                      Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[201,7951+54]..[201,7951+56])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[202,8011+4]..[211,8302+40])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/closure_conversion.ml[202,8011+8]..[202,8011+21])
                                  Ppat_var "defining_expr" (middle_end/flambda/closure_conversion.ml[202,8011+8]..[202,8011+21])
                                expression (middle_end/flambda/closure_conversion.ml[203,8035+6]..[203,8035+56])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[203,8035+6]..[203,8035+32])
                                    Pexp_ident "close_let_bound_expression" (middle_end/flambda/closure_conversion.ml[203,8035+6]..[203,8035+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[203,8035+33]..[203,8035+34])
                                        Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[203,8035+33]..[203,8035+34])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[203,8035+35]..[203,8035+38])
                                        Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[203,8035+35]..[203,8035+38])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[203,8035+39]..[203,8035+42])
                                        Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[203,8035+39]..[203,8035+42])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[203,8035+43]..[203,8035+56])
                                        Pexp_ident "defining_expr" (middle_end/flambda/closure_conversion.ml[203,8035+43]..[203,8035+56])
                                  ]
                            ]
                            expression (middle_end/flambda/closure_conversion.ml[205,8099+4]..[211,8302+40])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/closure_conversion.ml[205,8099+8]..[205,8099+12])
                                    Ppat_var "body" (middle_end/flambda/closure_conversion.ml[205,8099+8]..[205,8099+12])
                                  expression (middle_end/flambda/closure_conversion.ml[205,8099+15]..[205,8099+64])
                                    Pexp_apply
                                    expression (middle_end/flambda/closure_conversion.ml[205,8099+15]..[205,8099+20])
                                      Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[205,8099+15]..[205,8099+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[205,8099+21]..[205,8099+22])
                                          Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[205,8099+21]..[205,8099+22])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[205,8099+23]..[205,8099+59])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[205,8099+24]..[205,8099+43])
                                            Pexp_ident "Env.add_mutable_var" (middle_end/flambda/closure_conversion.ml[205,8099+24]..[205,8099+43])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[205,8099+44]..[205,8099+47])
                                                Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[205,8099+44]..[205,8099+47])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[205,8099+48]..[205,8099+50])
                                                Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[205,8099+48]..[205,8099+50])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[205,8099+51]..[205,8099+58])
                                                Pexp_ident "mut_var" (middle_end/flambda/closure_conversion.ml[205,8099+51]..[205,8099+58])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[205,8099+60]..[205,8099+64])
                                          Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[205,8099+60]..[205,8099+64])
                                    ]
                              ]
                              expression (middle_end/flambda/closure_conversion.ml[206,8167+4]..[211,8302+40])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[206,8167+4]..[206,8167+22])
                                  Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[206,8167+4]..[206,8167+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[206,8167+23]..[206,8167+26])
                                      Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[206,8167+23]..[206,8167+26])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[206,8167+27]..[206,8167+40])
                                      Pexp_ident "defining_expr" (middle_end/flambda/closure_conversion.ml[206,8167+27]..[206,8167+40])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[207,8208+6]..[211,8302+40])
                                      Pexp_construct "Let_mutable" (middle_end/flambda/closure_conversion.ml[207,8208+7]..[207,8208+18])
                                      Some
                                        expression (middle_end/flambda/closure_conversion.ml[208,8227+9]..[211,8302+39])
                                          Pexp_record
                                          [
                                            "var" (middle_end/flambda/closure_conversion.ml[208,8227+11]..[208,8227+14])
                                              expression (middle_end/flambda/closure_conversion.ml[208,8227+17]..[208,8227+24])
                                                Pexp_ident "mut_var" (middle_end/flambda/closure_conversion.ml[208,8227+17]..[208,8227+24])
                                            "initial_value" (middle_end/flambda/closure_conversion.ml[209,8253+11]..[209,8253+24])
                                              expression (middle_end/flambda/closure_conversion.ml[209,8253+27]..[209,8253+30])
                                                Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[209,8253+27]..[209,8253+30])
                                            "body" (middle_end/flambda/closure_conversion.ml[210,8285+11]..[210,8285+15]) ghost
                                              expression (middle_end/flambda/closure_conversion.ml[210,8285+11]..[210,8285+15])
                                                Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[210,8285+11]..[210,8285+15])
                                            "contents_kind" (middle_end/flambda/closure_conversion.ml[211,8302+11]..[211,8302+24])
                                              expression (middle_end/flambda/closure_conversion.ml[211,8302+27]..[211,8302+37])
                                                Pexp_ident "block_kind" (middle_end/flambda/closure_conversion.ml[211,8302+27]..[211,8302+37])
                                          ]
                                          None
                                ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[212,8343+4]..[212,8343+48])
                        Ppat_construct "Lfunction" (middle_end/flambda/closure_conversion.ml[212,8343+4]..[212,8343+13])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[212,8343+14]..[212,8343+48])
                            Ppat_record Closed
                            [
                              "kind" (middle_end/flambda/closure_conversion.ml[212,8343+16]..[212,8343+20]) ghost
                                pattern (middle_end/flambda/closure_conversion.ml[212,8343+16]..[212,8343+20])
                                  Ppat_var "kind" (middle_end/flambda/closure_conversion.ml[212,8343+16]..[212,8343+20])
                              "params" (middle_end/flambda/closure_conversion.ml[212,8343+22]..[212,8343+28]) ghost
                                pattern (middle_end/flambda/closure_conversion.ml[212,8343+22]..[212,8343+28])
                                  Ppat_var "params" (middle_end/flambda/closure_conversion.ml[212,8343+22]..[212,8343+28])
                              "body" (middle_end/flambda/closure_conversion.ml[212,8343+30]..[212,8343+34]) ghost
                                pattern (middle_end/flambda/closure_conversion.ml[212,8343+30]..[212,8343+34])
                                  Ppat_var "body" (middle_end/flambda/closure_conversion.ml[212,8343+30]..[212,8343+34])
                              "attr" (middle_end/flambda/closure_conversion.ml[212,8343+36]..[212,8343+40]) ghost
                                pattern (middle_end/flambda/closure_conversion.ml[212,8343+36]..[212,8343+40])
                                  Ppat_var "attr" (middle_end/flambda/closure_conversion.ml[212,8343+36]..[212,8343+40])
                              "loc" (middle_end/flambda/closure_conversion.ml[212,8343+42]..[212,8343+45]) ghost
                                pattern (middle_end/flambda/closure_conversion.ml[212,8343+42]..[212,8343+45])
                                  Ppat_var "loc" (middle_end/flambda/closure_conversion.ml[212,8343+42]..[212,8343+45])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[213,8395+4]..[231,9136+59])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[213,8395+8]..[213,8395+12])
                              Ppat_var "name" (middle_end/flambda/closure_conversion.ml[213,8395+8]..[213,8395+12])
                            expression (middle_end/flambda/closure_conversion.ml[213,8395+15]..[213,8395+41])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[213,8395+15]..[213,8395+37])
                                Pexp_ident "Names.anon_fn_with_loc" (middle_end/flambda/closure_conversion.ml[213,8395+15]..[213,8395+37])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[213,8395+38]..[213,8395+41])
                                    Pexp_ident "loc" (middle_end/flambda/closure_conversion.ml[213,8395+38]..[213,8395+41])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[214,8440+4]..[231,9136+59])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[214,8440+8]..[214,8440+25])
                                Ppat_var "closure_bound_var" (middle_end/flambda/closure_conversion.ml[214,8440+8]..[214,8440+25])
                              expression (middle_end/flambda/closure_conversion.ml[214,8440+28]..[214,8440+48])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[214,8440+28]..[214,8440+43])
                                  Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[214,8440+28]..[214,8440+43])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[214,8440+44]..[214,8440+48])
                                      Pexp_ident "name" (middle_end/flambda/closure_conversion.ml[214,8440+44]..[214,8440+48])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[217,8587+4]..[231,9136+59])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/closure_conversion.ml[217,8587+8]..[217,8587+27])
                                  Ppat_var "set_of_closures_var" (middle_end/flambda/closure_conversion.ml[217,8587+8]..[217,8587+27])
                                expression (middle_end/flambda/closure_conversion.ml[217,8587+30]..[217,8587+67])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[217,8587+30]..[217,8587+45])
                                    Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[217,8587+30]..[217,8587+45])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[217,8587+46]..[217,8587+67])
                                        Pexp_ident "Names.set_of_closures" (middle_end/flambda/closure_conversion.ml[217,8587+46]..[217,8587+67])
                                  ]
                            ]
                            expression (middle_end/flambda/closure_conversion.ml[218,8658+4]..[231,9136+59])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/closure_conversion.ml[218,8658+8]..[218,8658+23])
                                    Ppat_var "set_of_closures" (middle_end/flambda/closure_conversion.ml[218,8658+8]..[218,8658+23])
                                  expression (middle_end/flambda/closure_conversion.ml[219,8684+6]..[223,8841+58])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/closure_conversion.ml[219,8684+10]..[219,8684+14])
                                          Ppat_var "decl" (middle_end/flambda/closure_conversion.ml[219,8684+10]..[219,8684+14])
                                        expression (middle_end/flambda/closure_conversion.ml[220,8701+8]..[221,8775+56])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[220,8701+8]..[220,8701+28])
                                            Pexp_ident "Function_decl.create" (middle_end/flambda/closure_conversion.ml[220,8701+8]..[220,8701+28])
                                          [
                                            <arg>
                                            Labelled "let_rec_ident"
                                              expression (middle_end/flambda/closure_conversion.ml[220,8701+44]..[220,8701+48])
                                                Pexp_construct "None" (middle_end/flambda/closure_conversion.ml[220,8701+44]..[220,8701+48])
                                                None
                                            <arg>
                                            Labelled "closure_bound_var"
                                              expression (middle_end/flambda/closure_conversion.ml[220,8701+50]..[220,8701+67])
                                                Pexp_ident "closure_bound_var" (middle_end/flambda/closure_conversion.ml[220,8701+50]..[220,8701+67])
                                            <arg>
                                            Labelled "kind"
                                              expression (middle_end/flambda/closure_conversion.ml[220,8701+69]..[220,8701+73])
                                                Pexp_ident "kind" (middle_end/flambda/closure_conversion.ml[220,8701+69]..[220,8701+73])
                                            <arg>
                                            Labelled "params"
                                              expression (middle_end/flambda/closure_conversion.ml[221,8775+18]..[221,8775+39])
                                                Pexp_apply
                                                expression (middle_end/flambda/closure_conversion.ml[221,8775+19]..[221,8775+27])
                                                  Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[221,8775+19]..[221,8775+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/closure_conversion.ml[221,8775+28]..[221,8775+31])
                                                      Pexp_ident "fst" (middle_end/flambda/closure_conversion.ml[221,8775+28]..[221,8775+31])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/closure_conversion.ml[221,8775+32]..[221,8775+38])
                                                      Pexp_ident "params" (middle_end/flambda/closure_conversion.ml[221,8775+32]..[221,8775+38])
                                                ]
                                            <arg>
                                            Labelled "body"
                                              expression (middle_end/flambda/closure_conversion.ml[221,8775+41]..[221,8775+45])
                                                Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[221,8775+41]..[221,8775+45])
                                            <arg>
                                            Labelled "attr"
                                              expression (middle_end/flambda/closure_conversion.ml[221,8775+47]..[221,8775+51])
                                                Pexp_ident "attr" (middle_end/flambda/closure_conversion.ml[221,8775+47]..[221,8775+51])
                                            <arg>
                                            Labelled "loc"
                                              expression (middle_end/flambda/closure_conversion.ml[221,8775+53]..[221,8775+56])
                                                Pexp_ident "loc" (middle_end/flambda/closure_conversion.ml[221,8775+53]..[221,8775+56])
                                          ]
                                    ]
                                    expression (middle_end/flambda/closure_conversion.ml[223,8841+6]..[223,8841+58])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[223,8841+6]..[223,8841+21])
                                        Pexp_ident "close_functions" (middle_end/flambda/closure_conversion.ml[223,8841+6]..[223,8841+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[223,8841+22]..[223,8841+23])
                                            Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[223,8841+22]..[223,8841+23])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[223,8841+24]..[223,8841+27])
                                            Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[223,8841+24]..[223,8841+27])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[223,8841+28]..[223,8841+58])
                                            Pexp_apply
                                            expression (middle_end/flambda/closure_conversion.ml[223,8841+29]..[223,8841+50])
                                              Pexp_ident "Function_decls.create" (middle_end/flambda/closure_conversion.ml[223,8841+29]..[223,8841+50])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[223,8841+51]..[223,8841+57])
                                                  Pexp_construct "::" (middle_end/flambda/closure_conversion.ml[223,8841+52]..[223,8841+57]) ghost
                                                  Some
                                                    expression (middle_end/flambda/closure_conversion.ml[223,8841+52]..[223,8841+57]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (middle_end/flambda/closure_conversion.ml[223,8841+52]..[223,8841+56])
                                                          Pexp_ident "decl" (middle_end/flambda/closure_conversion.ml[223,8841+52]..[223,8841+56])
                                                        expression (middle_end/flambda/closure_conversion.ml[223,8841+56]..[223,8841+57]) ghost
                                                          Pexp_construct "[]" (middle_end/flambda/closure_conversion.ml[223,8841+56]..[223,8841+57]) ghost
                                                          None
                                                      ]
                                            ]
                                      ]
                              ]
                              expression (middle_end/flambda/closure_conversion.ml[225,8907+4]..[231,9136+59])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/closure_conversion.ml[225,8907+8]..[225,8907+49]) ghost
                                      Ppat_constraint
                                      pattern (middle_end/flambda/closure_conversion.ml[225,8907+8]..[225,8907+23])
                                        Ppat_var "project_closure" (middle_end/flambda/closure_conversion.ml[225,8907+8]..[225,8907+23])
                                      core_type (middle_end/flambda/closure_conversion.ml[225,8907+26]..[225,8907+49]) ghost
                                        Ptyp_poly
                                        core_type (middle_end/flambda/closure_conversion.ml[225,8907+26]..[225,8907+49])
                                          Ptyp_constr "Flambda.project_closure" (middle_end/flambda/closure_conversion.ml[225,8907+26]..[225,8907+49])
                                          []
                                    expression (middle_end/flambda/closure_conversion.ml[225,8907+8]..[228,9062+7])
                                      Pexp_constraint
                                      expression (middle_end/flambda/closure_conversion.ml[226,8959+6]..[228,9062+7])
                                        Pexp_record
                                        [
                                          "set_of_closures" (middle_end/flambda/closure_conversion.ml[226,8959+8]..[226,8959+23])
                                            expression (middle_end/flambda/closure_conversion.ml[226,8959+26]..[226,8959+45])
                                              Pexp_ident "set_of_closures_var" (middle_end/flambda/closure_conversion.ml[226,8959+26]..[226,8959+45])
                                          "closure_id" (middle_end/flambda/closure_conversion.ml[227,9006+8]..[227,9006+18])
                                            expression (middle_end/flambda/closure_conversion.ml[227,9006+21]..[227,9006+54])
                                              Pexp_apply
                                              expression (middle_end/flambda/closure_conversion.ml[227,9006+21]..[227,9006+36])
                                                Pexp_ident "Closure_id.wrap" (middle_end/flambda/closure_conversion.ml[227,9006+21]..[227,9006+36])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[227,9006+37]..[227,9006+54])
                                                    Pexp_ident "closure_bound_var" (middle_end/flambda/closure_conversion.ml[227,9006+37]..[227,9006+54])
                                              ]
                                        ]
                                        None
                                      core_type (middle_end/flambda/closure_conversion.ml[225,8907+26]..[225,8907+49])
                                        Ptyp_constr "Flambda.project_closure" (middle_end/flambda/closure_conversion.ml[225,8907+26]..[225,8907+49])
                                        []
                                ]
                                expression (middle_end/flambda/closure_conversion.ml[230,9077+4]..[231,9136+59])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[230,9077+4]..[230,9077+22])
                                    Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[230,9077+4]..[230,9077+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[230,9077+23]..[230,9077+42])
                                        Pexp_ident "set_of_closures_var" (middle_end/flambda/closure_conversion.ml[230,9077+23]..[230,9077+42])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[230,9077+43]..[230,9077+58])
                                        Pexp_ident "set_of_closures" (middle_end/flambda/closure_conversion.ml[230,9077+43]..[230,9077+58])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[231,9136+6]..[231,9136+59])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[231,9136+7]..[231,9136+16])
                                          Pexp_ident "name_expr" (middle_end/flambda/closure_conversion.ml[231,9136+7]..[231,9136+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[231,9136+17]..[231,9136+52])
                                              Pexp_construct "Project_closure" (middle_end/flambda/closure_conversion.ml[231,9136+18]..[231,9136+33])
                                              Some
                                                expression (middle_end/flambda/closure_conversion.ml[231,9136+34]..[231,9136+51])
                                                  Pexp_ident "project_closure" (middle_end/flambda/closure_conversion.ml[231,9136+35]..[231,9136+50])
                                          <arg>
                                          Labelled "name"
                                            expression (middle_end/flambda/closure_conversion.ml[231,9136+54]..[231,9136+58])
                                              Pexp_ident "name" (middle_end/flambda/closure_conversion.ml[231,9136+54]..[231,9136+58])
                                        ]
                                  ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[232,9196+4]..[233,9235+59])
                        Ppat_construct "Lapply" (middle_end/flambda/closure_conversion.ml[232,9196+4]..[232,9196+10])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[232,9196+11]..[233,9235+59])
                            Ppat_record Closed
                            [
                              "ap_func" (middle_end/flambda/closure_conversion.ml[232,9196+13]..[232,9196+20]) ghost
                                pattern (middle_end/flambda/closure_conversion.ml[232,9196+13]..[232,9196+20])
                                  Ppat_var "ap_func" (middle_end/flambda/closure_conversion.ml[232,9196+13]..[232,9196+20])
                              "ap_args" (middle_end/flambda/closure_conversion.ml[232,9196+22]..[232,9196+29]) ghost
                                pattern (middle_end/flambda/closure_conversion.ml[232,9196+22]..[232,9196+29])
                                  Ppat_var "ap_args" (middle_end/flambda/closure_conversion.ml[232,9196+22]..[232,9196+29])
                              "ap_loc" (middle_end/flambda/closure_conversion.ml[232,9196+31]..[232,9196+37]) ghost
                                pattern (middle_end/flambda/closure_conversion.ml[232,9196+31]..[232,9196+37])
                                  Ppat_var "ap_loc" (middle_end/flambda/closure_conversion.ml[232,9196+31]..[232,9196+37])
                              "ap_tailcall" (middle_end/flambda/closure_conversion.ml[233,9235+13]..[233,9235+24])
                                pattern (middle_end/flambda/closure_conversion.ml[233,9235+27]..[233,9235+28])
                                  Ppat_any
                              "ap_inlined" (middle_end/flambda/closure_conversion.ml[233,9235+30]..[233,9235+40]) ghost
                                pattern (middle_end/flambda/closure_conversion.ml[233,9235+30]..[233,9235+40])
                                  Ppat_var "ap_inlined" (middle_end/flambda/closure_conversion.ml[233,9235+30]..[233,9235+40])
                              "ap_specialised" (middle_end/flambda/closure_conversion.ml[233,9235+42]..[233,9235+56]) ghost
                                pattern (middle_end/flambda/closure_conversion.ml[233,9235+42]..[233,9235+56])
                                  Ppat_var "ap_specialised" (middle_end/flambda/closure_conversion.ml[233,9235+42]..[233,9235+56])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[234,9298+4]..[248,9835+16])
                        Pexp_apply
                        expression (middle_end/flambda/closure_conversion.ml[234,9298+4]..[234,9298+28])
                          Pexp_ident "Lift_code.lifting_helper" (middle_end/flambda/closure_conversion.ml[234,9298+4]..[234,9298+28])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[234,9298+29]..[234,9298+55])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[234,9298+30]..[234,9298+40])
                                Pexp_ident "close_list" (middle_end/flambda/closure_conversion.ml[234,9298+30]..[234,9298+40])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[234,9298+41]..[234,9298+42])
                                    Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[234,9298+41]..[234,9298+42])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[234,9298+43]..[234,9298+46])
                                    Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[234,9298+43]..[234,9298+46])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[234,9298+47]..[234,9298+54])
                                    Pexp_ident "ap_args" (middle_end/flambda/closure_conversion.ml[234,9298+47]..[234,9298+54])
                              ]
                          <arg>
                          Labelled "evaluation_order"
                            expression (middle_end/flambda/closure_conversion.ml[235,9354+24]..[235,9354+38])
                              Pexp_variant "Right_to_left"
                              None
                          <arg>
                          Labelled "name"
                            expression (middle_end/flambda/closure_conversion.ml[236,9393+12]..[236,9393+27])
                              Pexp_ident "Names.apply_arg" (middle_end/flambda/closure_conversion.ml[236,9393+12]..[236,9393+27])
                          <arg>
                          Labelled "create_body"
                            expression (middle_end/flambda/closure_conversion.ml[237,9421+19]..[248,9835+16])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/closure_conversion.ml[237,9421+24]..[237,9421+28])
                                Ppat_var "args" (middle_end/flambda/closure_conversion.ml[237,9421+24]..[237,9421+28])
                              expression (middle_end/flambda/closure_conversion.ml[238,9453+8]..[248,9835+15])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/closure_conversion.ml[238,9453+12]..[238,9453+16])
                                      Ppat_var "func" (middle_end/flambda/closure_conversion.ml[238,9453+12]..[238,9453+16])
                                    expression (middle_end/flambda/closure_conversion.ml[238,9453+19]..[238,9453+38])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[238,9453+19]..[238,9453+24])
                                        Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[238,9453+19]..[238,9453+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[238,9453+25]..[238,9453+26])
                                            Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[238,9453+25]..[238,9453+26])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[238,9453+27]..[238,9453+30])
                                            Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[238,9453+27]..[238,9453+30])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[238,9453+31]..[238,9453+38])
                                            Pexp_ident "ap_func" (middle_end/flambda/closure_conversion.ml[238,9453+31]..[238,9453+38])
                                      ]
                                ]
                                expression (middle_end/flambda/closure_conversion.ml[239,9495+8]..[248,9835+15])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/closure_conversion.ml[239,9495+12]..[239,9495+20])
                                        Ppat_var "func_var" (middle_end/flambda/closure_conversion.ml[239,9495+12]..[239,9495+20])
                                      expression (middle_end/flambda/closure_conversion.ml[239,9495+23]..[239,9495+56])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[239,9495+23]..[239,9495+38])
                                          Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[239,9495+23]..[239,9495+38])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[239,9495+39]..[239,9495+56])
                                              Pexp_ident "Names.apply_funct" (middle_end/flambda/closure_conversion.ml[239,9495+39]..[239,9495+56])
                                        ]
                                  ]
                                  expression (middle_end/flambda/closure_conversion.ml[240,9555+8]..[248,9835+15])
                                    Pexp_apply
                                    expression (middle_end/flambda/closure_conversion.ml[240,9555+8]..[240,9555+26])
                                      Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[240,9555+8]..[240,9555+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[240,9555+27]..[240,9555+35])
                                          Pexp_ident "func_var" (middle_end/flambda/closure_conversion.ml[240,9555+27]..[240,9555+35])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[240,9555+36]..[240,9555+47])
                                          Pexp_construct "Expr" (middle_end/flambda/closure_conversion.ml[240,9555+37]..[240,9555+41])
                                          Some
                                            expression (middle_end/flambda/closure_conversion.ml[240,9555+42]..[240,9555+46])
                                              Pexp_ident "func" (middle_end/flambda/closure_conversion.ml[240,9555+42]..[240,9555+46])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[241,9603+10]..[248,9835+15])
                                          Pexp_construct "Apply" (middle_end/flambda/closure_conversion.ml[241,9603+11]..[241,9603+16])
                                          Some
                                            expression (middle_end/flambda/closure_conversion.ml[241,9603+17]..[248,9835+14])
                                              Pexp_record
                                              [
                                                "func" (middle_end/flambda/closure_conversion.ml[242,9623+14]..[242,9623+18])
                                                  expression (middle_end/flambda/closure_conversion.ml[242,9623+21]..[242,9623+29])
                                                    Pexp_ident "func_var" (middle_end/flambda/closure_conversion.ml[242,9623+21]..[242,9623+29])
                                                "args" (middle_end/flambda/closure_conversion.ml[243,9654+14]..[243,9654+18]) ghost
                                                  expression (middle_end/flambda/closure_conversion.ml[243,9654+14]..[243,9654+18])
                                                    Pexp_ident "args" (middle_end/flambda/closure_conversion.ml[243,9654+14]..[243,9654+18])
                                                "kind" (middle_end/flambda/closure_conversion.ml[244,9674+14]..[244,9674+18])
                                                  expression (middle_end/flambda/closure_conversion.ml[244,9674+21]..[244,9674+29])
                                                    Pexp_construct "Indirect" (middle_end/flambda/closure_conversion.ml[244,9674+21]..[244,9674+29])
                                                    None
                                                "dbg" (middle_end/flambda/closure_conversion.ml[245,9705+14]..[245,9705+17])
                                                  expression (middle_end/flambda/closure_conversion.ml[245,9705+20]..[245,9705+50])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/closure_conversion.ml[245,9705+20]..[245,9705+43])
                                                      Pexp_ident "Debuginfo.from_location" (middle_end/flambda/closure_conversion.ml[245,9705+20]..[245,9705+43])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[245,9705+44]..[245,9705+50])
                                                          Pexp_ident "ap_loc" (middle_end/flambda/closure_conversion.ml[245,9705+44]..[245,9705+50])
                                                    ]
                                                "inline" (middle_end/flambda/closure_conversion.ml[246,9757+14]..[246,9757+20])
                                                  expression (middle_end/flambda/closure_conversion.ml[246,9757+23]..[246,9757+33])
                                                    Pexp_ident "ap_inlined" (middle_end/flambda/closure_conversion.ml[246,9757+23]..[246,9757+33])
                                                "specialise" (middle_end/flambda/closure_conversion.ml[247,9792+14]..[247,9792+24])
                                                  expression (middle_end/flambda/closure_conversion.ml[247,9792+27]..[247,9792+41])
                                                    Pexp_ident "ap_specialised" (middle_end/flambda/closure_conversion.ml[247,9792+27]..[247,9792+41])
                                              ]
                                              None
                                    ]
                        ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[249,9852+4]..[249,9852+24])
                        Ppat_construct "Lletrec" (middle_end/flambda/closure_conversion.ml[249,9852+4]..[249,9852+11])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[249,9852+12]..[249,9852+24])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[249,9852+13]..[249,9852+17])
                                Ppat_var "defs" (middle_end/flambda/closure_conversion.ml[249,9852+13]..[249,9852+17])
                              pattern (middle_end/flambda/closure_conversion.ml[249,9852+19]..[249,9852+23])
                                Ppat_var "body" (middle_end/flambda/closure_conversion.ml[249,9852+19]..[249,9852+23])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[250,9880+4]..[316,12748+7])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[250,9880+8]..[250,9880+11])
                              Ppat_var "env" (middle_end/flambda/closure_conversion.ml[250,9880+8]..[250,9880+11])
                            expression (middle_end/flambda/closure_conversion.ml[251,9894+6]..[253,10012+16])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[251,9894+6]..[251,9894+21])
                                Pexp_ident "List.fold_right" (middle_end/flambda/closure_conversion.ml[251,9894+6]..[251,9894+21])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[251,9894+22]..[252,9937+74])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/closure_conversion.ml[251,9894+27]..[251,9894+35])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/flambda/closure_conversion.ml[251,9894+28]..[251,9894+30])
                                          Ppat_var "id" (middle_end/flambda/closure_conversion.ml[251,9894+28]..[251,9894+30])
                                        pattern (middle_end/flambda/closure_conversion.ml[251,9894+33]..[251,9894+34])
                                          Ppat_any
                                      ]
                                    expression (middle_end/flambda/closure_conversion.ml[251,9894+36]..[252,9937+73]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/closure_conversion.ml[251,9894+36]..[251,9894+39])
                                        Ppat_var "env" (middle_end/flambda/closure_conversion.ml[251,9894+36]..[251,9894+39])
                                      expression (middle_end/flambda/closure_conversion.ml[252,9937+10]..[252,9937+73])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[252,9937+10]..[252,9937+21])
                                          Pexp_ident "Env.add_var" (middle_end/flambda/closure_conversion.ml[252,9937+10]..[252,9937+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[252,9937+22]..[252,9937+25])
                                              Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[252,9937+22]..[252,9937+25])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[252,9937+26]..[252,9937+28])
                                              Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[252,9937+26]..[252,9937+28])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[252,9937+29]..[252,9937+73])
                                              Pexp_apply
                                              expression (middle_end/flambda/closure_conversion.ml[252,9937+30]..[252,9937+69])
                                                Pexp_ident "Variable.create_with_same_name_as_ident" (middle_end/flambda/closure_conversion.ml[252,9937+30]..[252,9937+69])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[252,9937+70]..[252,9937+72])
                                                    Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[252,9937+70]..[252,9937+72])
                                              ]
                                        ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[253,10012+8]..[253,10012+12])
                                    Pexp_ident "defs" (middle_end/flambda/closure_conversion.ml[253,10012+8]..[253,10012+12])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[253,10012+13]..[253,10012+16])
                                    Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[253,10012+13]..[253,10012+16])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[255,10036+4]..[316,12748+7])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[255,10036+8]..[255,10036+29])
                                Ppat_var "function_declarations" (middle_end/flambda/closure_conversion.ml[255,10036+8]..[255,10036+29])
                              expression (middle_end/flambda/closure_conversion.ml[258,10222+6]..[271,10752+12])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[258,10222+6]..[258,10222+14])
                                  Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[258,10222+6]..[258,10222+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[258,10222+15]..[270,10729+22])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (middle_end/flambda/closure_conversion.ml[259,10247+12]..[260,10275+64])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/closure_conversion.ml[259,10247+13]..[259,10247+26])
                                                Ppat_var "let_rec_ident" (middle_end/flambda/closure_conversion.ml[259,10247+13]..[259,10247+26])
                                              pattern (middle_end/flambda/closure_conversion.ml[260,10275+13]..[260,10275+63])
                                                Ppat_construct "Lambda.Lfunction" (middle_end/flambda/closure_conversion.ml[260,10275+13]..[260,10275+29])
                                                Some
                                                  []
                                                  pattern (middle_end/flambda/closure_conversion.ml[260,10275+30]..[260,10275+63])
                                                    Ppat_record Closed
                                                    [
                                                      "kind" (middle_end/flambda/closure_conversion.ml[260,10275+32]..[260,10275+36]) ghost
                                                        pattern (middle_end/flambda/closure_conversion.ml[260,10275+32]..[260,10275+36])
                                                          Ppat_var "kind" (middle_end/flambda/closure_conversion.ml[260,10275+32]..[260,10275+36])
                                                      "params" (middle_end/flambda/closure_conversion.ml[260,10275+38]..[260,10275+44]) ghost
                                                        pattern (middle_end/flambda/closure_conversion.ml[260,10275+38]..[260,10275+44])
                                                          Ppat_var "params" (middle_end/flambda/closure_conversion.ml[260,10275+38]..[260,10275+44])
                                                      "body" (middle_end/flambda/closure_conversion.ml[260,10275+46]..[260,10275+50]) ghost
                                                        pattern (middle_end/flambda/closure_conversion.ml[260,10275+46]..[260,10275+50])
                                                          Ppat_var "body" (middle_end/flambda/closure_conversion.ml[260,10275+46]..[260,10275+50])
                                                      "attr" (middle_end/flambda/closure_conversion.ml[260,10275+52]..[260,10275+56]) ghost
                                                        pattern (middle_end/flambda/closure_conversion.ml[260,10275+52]..[260,10275+56])
                                                          Ppat_var "attr" (middle_end/flambda/closure_conversion.ml[260,10275+52]..[260,10275+56])
                                                      "loc" (middle_end/flambda/closure_conversion.ml[260,10275+58]..[260,10275+61]) ghost
                                                        pattern (middle_end/flambda/closure_conversion.ml[260,10275+58]..[260,10275+61])
                                                          Ppat_var "loc" (middle_end/flambda/closure_conversion.ml[260,10275+58]..[260,10275+61])
                                                    ]
                                            ]
                                          expression (middle_end/flambda/closure_conversion.ml[261,10343+12]..[269,10691+37])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/closure_conversion.ml[261,10343+16]..[261,10343+33])
                                                  Ppat_var "closure_bound_var" (middle_end/flambda/closure_conversion.ml[261,10343+16]..[261,10343+33])
                                                expression (middle_end/flambda/closure_conversion.ml[262,10379+14]..[262,10379+67])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/closure_conversion.ml[262,10379+14]..[262,10379+53])
                                                    Pexp_ident "Variable.create_with_same_name_as_ident" (middle_end/flambda/closure_conversion.ml[262,10379+14]..[262,10379+53])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[262,10379+54]..[262,10379+67])
                                                        Pexp_ident "let_rec_ident" (middle_end/flambda/closure_conversion.ml[262,10379+54]..[262,10379+67])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/closure_conversion.ml[264,10462+12]..[269,10691+37])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/closure_conversion.ml[264,10462+16]..[264,10462+36])
                                                    Ppat_var "function_declaration" (middle_end/flambda/closure_conversion.ml[264,10462+16]..[264,10462+36])
                                                  expression (middle_end/flambda/closure_conversion.ml[265,10501+14]..[267,10649+26])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/closure_conversion.ml[265,10501+14]..[265,10501+34])
                                                      Pexp_ident "Function_decl.create" (middle_end/flambda/closure_conversion.ml[265,10501+14]..[265,10501+34])
                                                    [
                                                      <arg>
                                                      Labelled "let_rec_ident"
                                                        expression (middle_end/flambda/closure_conversion.ml[265,10501+50]..[265,10501+70])
                                                          Pexp_construct "Some" (middle_end/flambda/closure_conversion.ml[265,10501+51]..[265,10501+55])
                                                          Some
                                                            expression (middle_end/flambda/closure_conversion.ml[265,10501+56]..[265,10501+69])
                                                              Pexp_ident "let_rec_ident" (middle_end/flambda/closure_conversion.ml[265,10501+56]..[265,10501+69])
                                                      <arg>
                                                      Labelled "closure_bound_var"
                                                        expression (middle_end/flambda/closure_conversion.ml[266,10572+17]..[266,10572+34])
                                                          Pexp_ident "closure_bound_var" (middle_end/flambda/closure_conversion.ml[266,10572+17]..[266,10572+34])
                                                      <arg>
                                                      Labelled "kind"
                                                        expression (middle_end/flambda/closure_conversion.ml[266,10572+36]..[266,10572+40])
                                                          Pexp_ident "kind" (middle_end/flambda/closure_conversion.ml[266,10572+36]..[266,10572+40])
                                                      <arg>
                                                      Labelled "params"
                                                        expression (middle_end/flambda/closure_conversion.ml[266,10572+49]..[266,10572+70])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/closure_conversion.ml[266,10572+50]..[266,10572+58])
                                                            Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[266,10572+50]..[266,10572+58])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/closure_conversion.ml[266,10572+59]..[266,10572+62])
                                                                Pexp_ident "fst" (middle_end/flambda/closure_conversion.ml[266,10572+59]..[266,10572+62])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/closure_conversion.ml[266,10572+63]..[266,10572+69])
                                                                Pexp_ident "params" (middle_end/flambda/closure_conversion.ml[266,10572+63]..[266,10572+69])
                                                          ]
                                                      <arg>
                                                      Labelled "body"
                                                        expression (middle_end/flambda/closure_conversion.ml[266,10572+72]..[266,10572+76])
                                                          Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[266,10572+72]..[266,10572+76])
                                                      <arg>
                                                      Labelled "attr"
                                                        expression (middle_end/flambda/closure_conversion.ml[267,10649+17]..[267,10649+21])
                                                          Pexp_ident "attr" (middle_end/flambda/closure_conversion.ml[267,10649+17]..[267,10649+21])
                                                      <arg>
                                                      Labelled "loc"
                                                        expression (middle_end/flambda/closure_conversion.ml[267,10649+23]..[267,10649+26])
                                                          Pexp_ident "loc" (middle_end/flambda/closure_conversion.ml[267,10649+23]..[267,10649+26])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/closure_conversion.ml[269,10691+12]..[269,10691+37])
                                                Pexp_construct "Some" (middle_end/flambda/closure_conversion.ml[269,10691+12]..[269,10691+16])
                                                Some
                                                  expression (middle_end/flambda/closure_conversion.ml[269,10691+17]..[269,10691+37])
                                                    Pexp_ident "function_declaration" (middle_end/flambda/closure_conversion.ml[269,10691+17]..[269,10691+37])
                                        <case>
                                          pattern (middle_end/flambda/closure_conversion.ml[270,10729+12]..[270,10729+13])
                                            Ppat_any
                                          expression (middle_end/flambda/closure_conversion.ml[270,10729+17]..[270,10729+21])
                                            Pexp_construct "None" (middle_end/flambda/closure_conversion.ml[270,10729+17]..[270,10729+21])
                                            None
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[271,10752+8]..[271,10752+12])
                                      Pexp_ident "defs" (middle_end/flambda/closure_conversion.ml[271,10752+8]..[271,10752+12])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[273,10772+4]..[316,12748+7])
                            Pexp_match
                            expression (middle_end/flambda/closure_conversion.ml[274,10788+6]..[274,10788+74])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[274,10788+6]..[274,10788+52])
                                Pexp_ident "Misc.Stdlib.List.some_if_all_elements_are_some" (middle_end/flambda/closure_conversion.ml[274,10788+6]..[274,10788+52])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[274,10788+53]..[274,10788+74])
                                    Pexp_ident "function_declarations" (middle_end/flambda/closure_conversion.ml[274,10788+53]..[274,10788+74])
                              ]
                            [
                              <case>
                                pattern (middle_end/flambda/closure_conversion.ml[276,10872+6]..[276,10872+32])
                                  Ppat_construct "Some" (middle_end/flambda/closure_conversion.ml[276,10872+6]..[276,10872+10])
                                  Some
                                    []
                                    pattern (middle_end/flambda/closure_conversion.ml[276,10872+11]..[276,10872+32])
                                      Ppat_var "function_declarations" (middle_end/flambda/closure_conversion.ml[276,10872+11]..[276,10872+32])
                                expression (middle_end/flambda/closure_conversion.ml[284,11325+6]..[304,12260+65])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/closure_conversion.ml[284,11325+10]..[284,11325+29])
                                        Ppat_var "set_of_closures_var" (middle_end/flambda/closure_conversion.ml[284,11325+10]..[284,11325+29])
                                      expression (middle_end/flambda/closure_conversion.ml[284,11325+32]..[284,11325+71])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[284,11325+32]..[284,11325+47])
                                          Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[284,11325+32]..[284,11325+47])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[284,11325+48]..[284,11325+71])
                                              Pexp_ident "Names.set_of_closures" (middle_end/flambda/closure_conversion.ml[284,11325+49]..[284,11325+70])
                                        ]
                                  ]
                                  expression (middle_end/flambda/closure_conversion.ml[285,11400+6]..[304,12260+65])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/closure_conversion.ml[285,11400+10]..[285,11400+25])
                                          Ppat_var "set_of_closures" (middle_end/flambda/closure_conversion.ml[285,11400+10]..[285,11400+25])
                                        expression (middle_end/flambda/closure_conversion.ml[286,11428+8]..[286,11428+75])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[286,11428+8]..[286,11428+23])
                                            Pexp_ident "close_functions" (middle_end/flambda/closure_conversion.ml[286,11428+8]..[286,11428+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[286,11428+24]..[286,11428+25])
                                                Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[286,11428+24]..[286,11428+25])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[286,11428+26]..[286,11428+29])
                                                Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[286,11428+26]..[286,11428+29])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[286,11428+30]..[286,11428+75])
                                                Pexp_apply
                                                expression (middle_end/flambda/closure_conversion.ml[286,11428+31]..[286,11428+52])
                                                  Pexp_ident "Function_decls.create" (middle_end/flambda/closure_conversion.ml[286,11428+31]..[286,11428+52])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/closure_conversion.ml[286,11428+53]..[286,11428+74])
                                                      Pexp_ident "function_declarations" (middle_end/flambda/closure_conversion.ml[286,11428+53]..[286,11428+74])
                                                ]
                                          ]
                                    ]
                                    expression (middle_end/flambda/closure_conversion.ml[288,11513+6]..[304,12260+65])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/closure_conversion.ml[288,11513+10]..[288,11513+14])
                                            Ppat_var "body" (middle_end/flambda/closure_conversion.ml[288,11513+10]..[288,11513+14])
                                          expression (middle_end/flambda/closure_conversion.ml[289,11530+8]..[302,12200+50])
                                            Pexp_apply
                                            expression (middle_end/flambda/closure_conversion.ml[289,11530+8]..[289,11530+22])
                                              Pexp_ident "List.fold_left" (middle_end/flambda/closure_conversion.ml[289,11530+8]..[289,11530+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[289,11530+23]..[301,12179+20])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (middle_end/flambda/closure_conversion.ml[289,11530+28]..[289,11530+32])
                                                    Ppat_var "body" (middle_end/flambda/closure_conversion.ml[289,11530+28]..[289,11530+32])
                                                  expression (middle_end/flambda/closure_conversion.ml[289,11530+33]..[301,12179+19]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (middle_end/flambda/closure_conversion.ml[289,11530+33]..[289,11530+37])
                                                      Ppat_var "decl" (middle_end/flambda/closure_conversion.ml[289,11530+33]..[289,11530+37])
                                                    expression (middle_end/flambda/closure_conversion.ml[290,11571+12]..[301,12179+19])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (middle_end/flambda/closure_conversion.ml[290,11571+16]..[290,11571+29])
                                                            Ppat_var "let_rec_ident" (middle_end/flambda/closure_conversion.ml[290,11571+16]..[290,11571+29])
                                                          expression (middle_end/flambda/closure_conversion.ml[290,11571+32]..[290,11571+64])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/closure_conversion.ml[290,11571+32]..[290,11571+59])
                                                              Pexp_ident "Function_decl.let_rec_ident" (middle_end/flambda/closure_conversion.ml[290,11571+32]..[290,11571+59])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/closure_conversion.ml[290,11571+60]..[290,11571+64])
                                                                  Pexp_ident "decl" (middle_end/flambda/closure_conversion.ml[290,11571+60]..[290,11571+64])
                                                            ]
                                                      ]
                                                      expression (middle_end/flambda/closure_conversion.ml[291,11639+12]..[301,12179+19])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (middle_end/flambda/closure_conversion.ml[291,11639+16]..[291,11639+33])
                                                              Ppat_var "closure_bound_var" (middle_end/flambda/closure_conversion.ml[291,11639+16]..[291,11639+33])
                                                            expression (middle_end/flambda/closure_conversion.ml[291,11639+36]..[291,11639+72])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/closure_conversion.ml[291,11639+36]..[291,11639+67])
                                                                Pexp_ident "Function_decl.closure_bound_var" (middle_end/flambda/closure_conversion.ml[291,11639+36]..[291,11639+67])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/closure_conversion.ml[291,11639+68]..[291,11639+72])
                                                                    Pexp_ident "decl" (middle_end/flambda/closure_conversion.ml[291,11639+68]..[291,11639+72])
                                                              ]
                                                        ]
                                                        expression (middle_end/flambda/closure_conversion.ml[292,11715+12]..[301,12179+19])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/flambda/closure_conversion.ml[292,11715+16]..[292,11715+29])
                                                                Ppat_var "let_bound_var" (middle_end/flambda/closure_conversion.ml[292,11715+16]..[292,11715+29])
                                                              expression (middle_end/flambda/closure_conversion.ml[292,11715+32]..[292,11715+62])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/closure_conversion.ml[292,11715+32]..[292,11715+44])
                                                                  Pexp_ident "Env.find_var" (middle_end/flambda/closure_conversion.ml[292,11715+32]..[292,11715+44])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/closure_conversion.ml[292,11715+45]..[292,11715+48])
                                                                      Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[292,11715+45]..[292,11715+48])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/closure_conversion.ml[292,11715+49]..[292,11715+62])
                                                                      Pexp_ident "let_rec_ident" (middle_end/flambda/closure_conversion.ml[292,11715+49]..[292,11715+62])
                                                                ]
                                                          ]
                                                          expression (middle_end/flambda/closure_conversion.ml[296,11964+12]..[301,12179+19])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/closure_conversion.ml[296,11964+13]..[296,11964+31])
                                                              Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[296,11964+13]..[296,11964+31])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/closure_conversion.ml[296,11964+32]..[296,11964+45])
                                                                  Pexp_ident "let_bound_var" (middle_end/flambda/closure_conversion.ml[296,11964+32]..[296,11964+45])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/closure_conversion.ml[297,12010+14]..[300,12162+16])
                                                                  Pexp_construct "Project_closure" (middle_end/flambda/closure_conversion.ml[297,12010+15]..[297,12010+30])
                                                                  Some
                                                                    expression (middle_end/flambda/closure_conversion.ml[297,12010+31]..[300,12162+15])
                                                                      Pexp_record
                                                                      [
"set_of_closures" (middle_end/flambda/closure_conversion.ml[298,12043+16]..[298,12043+31])
  expression (middle_end/flambda/closure_conversion.ml[298,12043+34]..[298,12043+53])
    Pexp_ident "set_of_closures_var" (middle_end/flambda/closure_conversion.ml[298,12043+34]..[298,12043+53])
"closure_id" (middle_end/flambda/closure_conversion.ml[299,12098+16]..[299,12098+26])
  expression (middle_end/flambda/closure_conversion.ml[299,12098+29]..[299,12098+62])
    Pexp_apply
    expression (middle_end/flambda/closure_conversion.ml[299,12098+29]..[299,12098+44])
      Pexp_ident "Closure_id.wrap" (middle_end/flambda/closure_conversion.ml[299,12098+29]..[299,12098+44])
    [
      <arg>
      Nolabel
        expression (middle_end/flambda/closure_conversion.ml[299,12098+45]..[299,12098+62])
          Pexp_ident "closure_bound_var" (middle_end/flambda/closure_conversion.ml[299,12098+45]..[299,12098+62])
    ]
                                                                      ]
                                                                      None
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/closure_conversion.ml[301,12179+14]..[301,12179+18])
                                                                  Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[301,12179+14]..[301,12179+18])
                                                            ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[302,12200+10]..[302,12200+28])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/closure_conversion.ml[302,12200+11]..[302,12200+16])
                                                    Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[302,12200+11]..[302,12200+16])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[302,12200+17]..[302,12200+18])
                                                        Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[302,12200+17]..[302,12200+18])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[302,12200+19]..[302,12200+22])
                                                        Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[302,12200+19]..[302,12200+22])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[302,12200+23]..[302,12200+27])
                                                        Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[302,12200+23]..[302,12200+27])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[302,12200+29]..[302,12200+50])
                                                  Pexp_ident "function_declarations" (middle_end/flambda/closure_conversion.ml[302,12200+29]..[302,12200+50])
                                            ]
                                      ]
                                      expression (middle_end/flambda/closure_conversion.ml[304,12260+6]..[304,12260+65])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[304,12260+6]..[304,12260+24])
                                          Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[304,12260+6]..[304,12260+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[304,12260+25]..[304,12260+44])
                                              Pexp_ident "set_of_closures_var" (middle_end/flambda/closure_conversion.ml[304,12260+25]..[304,12260+44])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[304,12260+45]..[304,12260+60])
                                              Pexp_ident "set_of_closures" (middle_end/flambda/closure_conversion.ml[304,12260+45]..[304,12260+60])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[304,12260+61]..[304,12260+65])
                                              Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[304,12260+61]..[304,12260+65])
                                        ]
                              <case>
                                pattern (middle_end/flambda/closure_conversion.ml[305,12326+6]..[305,12326+10])
                                  Ppat_construct "None" (middle_end/flambda/closure_conversion.ml[305,12326+6]..[305,12326+10])
                                  None
                                expression (middle_end/flambda/closure_conversion.ml[309,12511+6]..[315,12709+38])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/closure_conversion.ml[309,12511+10]..[309,12511+14])
                                        Ppat_var "defs" (middle_end/flambda/closure_conversion.ml[309,12511+10]..[309,12511+14])
                                      expression (middle_end/flambda/closure_conversion.ml[310,12528+8]..[313,12685+14])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[310,12528+8]..[310,12528+16])
                                          Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[310,12528+8]..[310,12528+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[310,12528+17]..[312,12608+76])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/flambda/closure_conversion.ml[310,12528+22]..[310,12528+31])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/flambda/closure_conversion.ml[310,12528+23]..[310,12528+25])
                                                    Ppat_var "id" (middle_end/flambda/closure_conversion.ml[310,12528+23]..[310,12528+25])
                                                  pattern (middle_end/flambda/closure_conversion.ml[310,12528+27]..[310,12528+30])
                                                    Ppat_var "def" (middle_end/flambda/closure_conversion.ml[310,12528+27]..[310,12528+30])
                                                ]
                                              expression (middle_end/flambda/closure_conversion.ml[311,12563+12]..[312,12608+75])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/closure_conversion.ml[311,12563+16]..[311,12563+19])
                                                      Ppat_var "var" (middle_end/flambda/closure_conversion.ml[311,12563+16]..[311,12563+19])
                                                    expression (middle_end/flambda/closure_conversion.ml[311,12563+22]..[311,12563+41])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/closure_conversion.ml[311,12563+22]..[311,12563+34])
                                                        Pexp_ident "Env.find_var" (middle_end/flambda/closure_conversion.ml[311,12563+22]..[311,12563+34])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/closure_conversion.ml[311,12563+35]..[311,12563+38])
                                                            Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[311,12563+35]..[311,12563+38])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/closure_conversion.ml[311,12563+39]..[311,12563+41])
                                                            Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[311,12563+39]..[311,12563+41])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/closure_conversion.ml[312,12608+12]..[312,12608+75])
                                                  Pexp_tuple
                                                  [
                                                    expression (middle_end/flambda/closure_conversion.ml[312,12608+12]..[312,12608+15])
                                                      Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[312,12608+12]..[312,12608+15])
                                                    expression (middle_end/flambda/closure_conversion.ml[312,12608+17]..[312,12608+75])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/closure_conversion.ml[312,12608+17]..[312,12608+43])
                                                        Pexp_ident "close_let_bound_expression" (middle_end/flambda/closure_conversion.ml[312,12608+17]..[312,12608+43])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/closure_conversion.ml[312,12608+44]..[312,12608+45])
                                                            Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[312,12608+44]..[312,12608+45])
                                                        <arg>
                                                        Labelled "let_rec_ident"
                                                          expression (middle_end/flambda/closure_conversion.ml[312,12608+61]..[312,12608+63])
                                                            Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[312,12608+61]..[312,12608+63])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/closure_conversion.ml[312,12608+64]..[312,12608+67])
                                                            Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[312,12608+64]..[312,12608+67])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/closure_conversion.ml[312,12608+68]..[312,12608+71])
                                                            Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[312,12608+68]..[312,12608+71])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/closure_conversion.ml[312,12608+72]..[312,12608+75])
                                                            Pexp_ident "def" (middle_end/flambda/closure_conversion.ml[312,12608+72]..[312,12608+75])
                                                      ]
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[313,12685+10]..[313,12685+14])
                                              Pexp_ident "defs" (middle_end/flambda/closure_conversion.ml[313,12685+10]..[313,12685+14])
                                        ]
                                  ]
                                  expression (middle_end/flambda/closure_conversion.ml[315,12709+6]..[315,12709+38])
                                    Pexp_construct "Let_rec" (middle_end/flambda/closure_conversion.ml[315,12709+6]..[315,12709+13])
                                    Some
                                      expression (middle_end/flambda/closure_conversion.ml[315,12709+14]..[315,12709+38])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/flambda/closure_conversion.ml[315,12709+15]..[315,12709+19])
                                            Pexp_ident "defs" (middle_end/flambda/closure_conversion.ml[315,12709+15]..[315,12709+19])
                                          expression (middle_end/flambda/closure_conversion.ml[315,12709+21]..[315,12709+37])
                                            Pexp_apply
                                            expression (middle_end/flambda/closure_conversion.ml[315,12709+21]..[315,12709+26])
                                              Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[315,12709+21]..[315,12709+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[315,12709+27]..[315,12709+28])
                                                  Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[315,12709+27]..[315,12709+28])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[315,12709+29]..[315,12709+32])
                                                  Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[315,12709+29]..[315,12709+32])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[315,12709+33]..[315,12709+37])
                                                  Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[315,12709+33]..[315,12709+37])
                                            ]
                                        ]
                            ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[317,12756+4]..[317,12756+38])
                        Ppat_construct "Lsend" (middle_end/flambda/closure_conversion.ml[317,12756+4]..[317,12756+9])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[317,12756+10]..[317,12756+38])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[317,12756+11]..[317,12756+15])
                                Ppat_var "kind" (middle_end/flambda/closure_conversion.ml[317,12756+11]..[317,12756+15])
                              pattern (middle_end/flambda/closure_conversion.ml[317,12756+17]..[317,12756+21])
                                Ppat_var "meth" (middle_end/flambda/closure_conversion.ml[317,12756+17]..[317,12756+21])
                              pattern (middle_end/flambda/closure_conversion.ml[317,12756+23]..[317,12756+26])
                                Ppat_var "obj" (middle_end/flambda/closure_conversion.ml[317,12756+23]..[317,12756+26])
                              pattern (middle_end/flambda/closure_conversion.ml[317,12756+28]..[317,12756+32])
                                Ppat_var "args" (middle_end/flambda/closure_conversion.ml[317,12756+28]..[317,12756+32])
                              pattern (middle_end/flambda/closure_conversion.ml[317,12756+34]..[317,12756+37])
                                Ppat_var "loc" (middle_end/flambda/closure_conversion.ml[317,12756+34]..[317,12756+37])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[318,12798+4]..[327,13224+74])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[318,12798+8]..[318,12798+16])
                              Ppat_var "meth_var" (middle_end/flambda/closure_conversion.ml[318,12798+8]..[318,12798+16])
                            expression (middle_end/flambda/closure_conversion.ml[318,12798+19]..[318,12798+45])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[318,12798+19]..[318,12798+34])
                                Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[318,12798+19]..[318,12798+34])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[318,12798+35]..[318,12798+45])
                                    Pexp_ident "Names.meth" (middle_end/flambda/closure_conversion.ml[318,12798+35]..[318,12798+45])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[319,12847+4]..[327,13224+74])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[319,12847+8]..[319,12847+15])
                                Ppat_var "obj_var" (middle_end/flambda/closure_conversion.ml[319,12847+8]..[319,12847+15])
                              expression (middle_end/flambda/closure_conversion.ml[319,12847+18]..[319,12847+43])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[319,12847+18]..[319,12847+33])
                                  Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[319,12847+18]..[319,12847+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[319,12847+34]..[319,12847+43])
                                      Pexp_ident "Names.obj" (middle_end/flambda/closure_conversion.ml[319,12847+34]..[319,12847+43])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[320,12894+4]..[327,13224+74])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/closure_conversion.ml[320,12894+8]..[320,12894+11])
                                  Ppat_var "dbg" (middle_end/flambda/closure_conversion.ml[320,12894+8]..[320,12894+11])
                                expression (middle_end/flambda/closure_conversion.ml[320,12894+14]..[320,12894+41])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[320,12894+14]..[320,12894+37])
                                    Pexp_ident "Debuginfo.from_location" (middle_end/flambda/closure_conversion.ml[320,12894+14]..[320,12894+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[320,12894+38]..[320,12894+41])
                                        Pexp_ident "loc" (middle_end/flambda/closure_conversion.ml[320,12894+38]..[320,12894+41])
                                  ]
                            ]
                            expression (middle_end/flambda/closure_conversion.ml[321,12939+4]..[327,13224+74])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[321,12939+4]..[321,12939+22])
                                Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[321,12939+4]..[321,12939+22])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[321,12939+23]..[321,12939+31])
                                    Pexp_ident "meth_var" (middle_end/flambda/closure_conversion.ml[321,12939+23]..[321,12939+31])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[321,12939+32]..[321,12939+57])
                                    Pexp_construct "Expr" (middle_end/flambda/closure_conversion.ml[321,12939+33]..[321,12939+37])
                                    Some
                                      expression (middle_end/flambda/closure_conversion.ml[321,12939+38]..[321,12939+56])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[321,12939+39]..[321,12939+44])
                                          Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[321,12939+39]..[321,12939+44])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[321,12939+45]..[321,12939+46])
                                              Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[321,12939+45]..[321,12939+46])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[321,12939+47]..[321,12939+50])
                                              Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[321,12939+47]..[321,12939+50])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[321,12939+51]..[321,12939+55])
                                              Pexp_ident "meth" (middle_end/flambda/closure_conversion.ml[321,12939+51]..[321,12939+55])
                                        ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[322,12997+6]..[327,13224+74])
                                    Pexp_apply
                                    expression (middle_end/flambda/closure_conversion.ml[322,12997+7]..[322,12997+25])
                                      Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[322,12997+7]..[322,12997+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[322,12997+26]..[322,12997+33])
                                          Pexp_ident "obj_var" (middle_end/flambda/closure_conversion.ml[322,12997+26]..[322,12997+33])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[322,12997+34]..[322,12997+58])
                                          Pexp_construct "Expr" (middle_end/flambda/closure_conversion.ml[322,12997+35]..[322,12997+39])
                                          Some
                                            expression (middle_end/flambda/closure_conversion.ml[322,12997+40]..[322,12997+57])
                                              Pexp_apply
                                              expression (middle_end/flambda/closure_conversion.ml[322,12997+41]..[322,12997+46])
                                                Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[322,12997+41]..[322,12997+46])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[322,12997+47]..[322,12997+48])
                                                    Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[322,12997+47]..[322,12997+48])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[322,12997+49]..[322,12997+52])
                                                    Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[322,12997+49]..[322,12997+52])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[322,12997+53]..[322,12997+56])
                                                    Pexp_ident "obj" (middle_end/flambda/closure_conversion.ml[322,12997+53]..[322,12997+56])
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[323,13056+8]..[327,13224+73])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[323,13056+9]..[323,13056+33])
                                            Pexp_ident "Lift_code.lifting_helper" (middle_end/flambda/closure_conversion.ml[323,13056+9]..[323,13056+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[323,13056+34]..[323,13056+57])
                                                Pexp_apply
                                                expression (middle_end/flambda/closure_conversion.ml[323,13056+35]..[323,13056+45])
                                                  Pexp_ident "close_list" (middle_end/flambda/closure_conversion.ml[323,13056+35]..[323,13056+45])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/closure_conversion.ml[323,13056+46]..[323,13056+47])
                                                      Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[323,13056+46]..[323,13056+47])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/closure_conversion.ml[323,13056+48]..[323,13056+51])
                                                      Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[323,13056+48]..[323,13056+51])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/closure_conversion.ml[323,13056+52]..[323,13056+56])
                                                      Pexp_ident "args" (middle_end/flambda/closure_conversion.ml[323,13056+52]..[323,13056+56])
                                                ]
                                            <arg>
                                            Labelled "evaluation_order"
                                              expression (middle_end/flambda/closure_conversion.ml[324,13114+28]..[324,13114+42])
                                                Pexp_variant "Right_to_left"
                                                None
                                            <arg>
                                            Labelled "name"
                                              expression (middle_end/flambda/closure_conversion.ml[325,13157+16]..[325,13157+30])
                                                Pexp_ident "Names.send_arg" (middle_end/flambda/closure_conversion.ml[325,13157+16]..[325,13157+30])
                                            <arg>
                                            Labelled "create_body"
                                              expression (middle_end/flambda/closure_conversion.ml[326,13188+23]..[327,13224+72])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (middle_end/flambda/closure_conversion.ml[326,13188+28]..[326,13188+32])
                                                  Ppat_var "args" (middle_end/flambda/closure_conversion.ml[326,13188+28]..[326,13188+32])
                                                expression (middle_end/flambda/closure_conversion.ml[327,13224+14]..[327,13224+71])
                                                  Pexp_construct "Send" (middle_end/flambda/closure_conversion.ml[327,13224+14]..[327,13224+18])
                                                  Some
                                                    expression (middle_end/flambda/closure_conversion.ml[327,13224+19]..[327,13224+71])
                                                      Pexp_record
                                                      [
                                                        "kind" (middle_end/flambda/closure_conversion.ml[327,13224+21]..[327,13224+25]) ghost
                                                          expression (middle_end/flambda/closure_conversion.ml[327,13224+21]..[327,13224+25])
                                                            Pexp_ident "kind" (middle_end/flambda/closure_conversion.ml[327,13224+21]..[327,13224+25])
                                                        "meth" (middle_end/flambda/closure_conversion.ml[327,13224+27]..[327,13224+31])
                                                          expression (middle_end/flambda/closure_conversion.ml[327,13224+34]..[327,13224+42])
                                                            Pexp_ident "meth_var" (middle_end/flambda/closure_conversion.ml[327,13224+34]..[327,13224+42])
                                                        "obj" (middle_end/flambda/closure_conversion.ml[327,13224+44]..[327,13224+47])
                                                          expression (middle_end/flambda/closure_conversion.ml[327,13224+50]..[327,13224+57])
                                                            Pexp_ident "obj_var" (middle_end/flambda/closure_conversion.ml[327,13224+50]..[327,13224+57])
                                                        "args" (middle_end/flambda/closure_conversion.ml[327,13224+59]..[327,13224+63]) ghost
                                                          expression (middle_end/flambda/closure_conversion.ml[327,13224+59]..[327,13224+63])
                                                            Pexp_ident "args" (middle_end/flambda/closure_conversion.ml[327,13224+59]..[327,13224+63])
                                                        "dbg" (middle_end/flambda/closure_conversion.ml[327,13224+65]..[327,13224+68]) ghost
                                                          expression (middle_end/flambda/closure_conversion.ml[327,13224+65]..[327,13224+68])
                                                            Pexp_ident "dbg" (middle_end/flambda/closure_conversion.ml[327,13224+65]..[327,13224+68])
                                                      ]
                                                      None
                                          ]
                                    ]
                              ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[328,13299+4]..[330,13420+29])
                        Ppat_construct "Lprim" (middle_end/flambda/closure_conversion.ml[328,13299+4]..[328,13299+9])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[328,13299+10]..[330,13420+29])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[328,13299+11]..[329,13339+79])
                                Ppat_alias "prim" (middle_end/flambda/closure_conversion.ml[329,13339+75]..[329,13339+79])
                                pattern (middle_end/flambda/closure_conversion.ml[328,13299+11]..[329,13339+71])
                                  Ppat_or
                                  pattern (middle_end/flambda/closure_conversion.ml[328,13299+12]..[329,13339+40])
                                    Ppat_or
                                    pattern (middle_end/flambda/closure_conversion.ml[328,13299+12]..[328,13299+39])
                                      Ppat_or
                                      pattern (middle_end/flambda/closure_conversion.ml[328,13299+12]..[328,13299+24])
                                        Ppat_construct "Pdivint" (middle_end/flambda/closure_conversion.ml[328,13299+12]..[328,13299+19])
                                        Some
                                          []
                                          pattern (middle_end/flambda/closure_conversion.ml[328,13299+20]..[328,13299+24])
                                            Ppat_construct "Safe" (middle_end/flambda/closure_conversion.ml[328,13299+20]..[328,13299+24])
                                            None
                                      pattern (middle_end/flambda/closure_conversion.ml[328,13299+27]..[328,13299+39])
                                        Ppat_construct "Pmodint" (middle_end/flambda/closure_conversion.ml[328,13299+27]..[328,13299+34])
                                        Some
                                          []
                                          pattern (middle_end/flambda/closure_conversion.ml[328,13299+35]..[328,13299+39])
                                            Ppat_construct "Safe" (middle_end/flambda/closure_conversion.ml[328,13299+35]..[328,13299+39])
                                            None
                                    pattern (middle_end/flambda/closure_conversion.ml[329,13339+13]..[329,13339+40])
                                      Ppat_construct "Pdivbint" (middle_end/flambda/closure_conversion.ml[329,13339+13]..[329,13339+21])
                                      Some
                                        []
                                        pattern (middle_end/flambda/closure_conversion.ml[329,13339+22]..[329,13339+40])
                                          Ppat_record Closed
                                          [
                                            "is_safe" (middle_end/flambda/closure_conversion.ml[329,13339+24]..[329,13339+31])
                                              pattern (middle_end/flambda/closure_conversion.ml[329,13339+34]..[329,13339+38])
                                                Ppat_construct "Safe" (middle_end/flambda/closure_conversion.ml[329,13339+34]..[329,13339+38])
                                                None
                                          ]
                                  pattern (middle_end/flambda/closure_conversion.ml[329,13339+43]..[329,13339+70])
                                    Ppat_construct "Pmodbint" (middle_end/flambda/closure_conversion.ml[329,13339+43]..[329,13339+51])
                                    Some
                                      []
                                      pattern (middle_end/flambda/closure_conversion.ml[329,13339+52]..[329,13339+70])
                                        Ppat_record Closed
                                        [
                                          "is_safe" (middle_end/flambda/closure_conversion.ml[329,13339+54]..[329,13339+61])
                                            pattern (middle_end/flambda/closure_conversion.ml[329,13339+64]..[329,13339+68])
                                              Ppat_construct "Safe" (middle_end/flambda/closure_conversion.ml[329,13339+64]..[329,13339+68])
                                              None
                                        ]
                              pattern (middle_end/flambda/closure_conversion.ml[330,13420+11]..[330,13420+23])
                                Ppat_construct "::" (middle_end/flambda/closure_conversion.ml[330,13420+12]..[330,13420+23]) ghost
                                Some
                                  []
                                  pattern (middle_end/flambda/closure_conversion.ml[330,13420+12]..[330,13420+23]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/closure_conversion.ml[330,13420+12]..[330,13420+16])
                                        Ppat_var "arg1" (middle_end/flambda/closure_conversion.ml[330,13420+12]..[330,13420+16])
                                      pattern (middle_end/flambda/closure_conversion.ml[330,13420+18]..[330,13420+23]) ghost
                                        Ppat_construct "::" (middle_end/flambda/closure_conversion.ml[330,13420+18]..[330,13420+23]) ghost
                                        Some
                                          []
                                          pattern (middle_end/flambda/closure_conversion.ml[330,13420+18]..[330,13420+23]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/closure_conversion.ml[330,13420+18]..[330,13420+22])
                                                Ppat_var "arg2" (middle_end/flambda/closure_conversion.ml[330,13420+18]..[330,13420+22])
                                              pattern (middle_end/flambda/closure_conversion.ml[330,13420+22]..[330,13420+23]) ghost
                                                Ppat_construct "[]" (middle_end/flambda/closure_conversion.ml[330,13420+22]..[330,13420+23]) ghost
                                                None
                                            ]
                                    ]
                              pattern (middle_end/flambda/closure_conversion.ml[330,13420+25]..[330,13420+28])
                                Ppat_var "loc" (middle_end/flambda/closure_conversion.ml[330,13420+25]..[330,13420+28])
                            ]
                      <when>
                        expression (middle_end/flambda/closure_conversion.ml[331,13450+11]..[331,13450+30])
                          Pexp_apply
                          expression (middle_end/flambda/closure_conversion.ml[331,13450+11]..[331,13450+14])
                            Pexp_ident "not" (middle_end/flambda/closure_conversion.ml[331,13450+11]..[331,13450+14])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[331,13450+15]..[331,13450+30])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[331,13450+15]..[331,13450+16])
                                  Pexp_ident "!" (middle_end/flambda/closure_conversion.ml[331,13450+15]..[331,13450+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[331,13450+16]..[331,13450+30])
                                      Pexp_ident "Clflags.unsafe" (middle_end/flambda/closure_conversion.ml[331,13450+16]..[331,13450+30])
                                ]
                          ]
                      expression (middle_end/flambda/closure_conversion.ml[332,13484+4]..[387,15919+70])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[332,13484+8]..[332,13484+12])
                              Ppat_var "arg2" (middle_end/flambda/closure_conversion.ml[332,13484+8]..[332,13484+12])
                            expression (middle_end/flambda/closure_conversion.ml[332,13484+15]..[332,13484+31])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[332,13484+15]..[332,13484+20])
                                Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[332,13484+15]..[332,13484+20])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[332,13484+21]..[332,13484+22])
                                    Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[332,13484+21]..[332,13484+22])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[332,13484+23]..[332,13484+26])
                                    Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[332,13484+23]..[332,13484+26])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[332,13484+27]..[332,13484+31])
                                    Pexp_ident "arg2" (middle_end/flambda/closure_conversion.ml[332,13484+27]..[332,13484+31])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[333,13519+4]..[387,15919+70])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[333,13519+8]..[333,13519+12])
                                Ppat_var "arg1" (middle_end/flambda/closure_conversion.ml[333,13519+8]..[333,13519+12])
                              expression (middle_end/flambda/closure_conversion.ml[333,13519+15]..[333,13519+31])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[333,13519+15]..[333,13519+20])
                                  Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[333,13519+15]..[333,13519+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[333,13519+21]..[333,13519+22])
                                      Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[333,13519+21]..[333,13519+22])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[333,13519+23]..[333,13519+26])
                                      Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[333,13519+23]..[333,13519+26])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[333,13519+27]..[333,13519+31])
                                      Pexp_ident "arg1" (middle_end/flambda/closure_conversion.ml[333,13519+27]..[333,13519+31])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[334,13554+4]..[387,15919+70])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/closure_conversion.ml[334,13554+8]..[334,13554+17])
                                  Ppat_var "numerator" (middle_end/flambda/closure_conversion.ml[334,13554+8]..[334,13554+17])
                                expression (middle_end/flambda/closure_conversion.ml[334,13554+20]..[334,13554+51])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[334,13554+20]..[334,13554+35])
                                    Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[334,13554+20]..[334,13554+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[334,13554+36]..[334,13554+51])
                                        Pexp_ident "Names.numerator" (middle_end/flambda/closure_conversion.ml[334,13554+36]..[334,13554+51])
                                  ]
                            ]
                            expression (middle_end/flambda/closure_conversion.ml[335,13609+4]..[387,15919+70])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/closure_conversion.ml[335,13609+8]..[335,13609+19])
                                    Ppat_var "denominator" (middle_end/flambda/closure_conversion.ml[335,13609+8]..[335,13609+19])
                                  expression (middle_end/flambda/closure_conversion.ml[335,13609+22]..[335,13609+55])
                                    Pexp_apply
                                    expression (middle_end/flambda/closure_conversion.ml[335,13609+22]..[335,13609+37])
                                      Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[335,13609+22]..[335,13609+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[335,13609+38]..[335,13609+55])
                                          Pexp_ident "Names.denominator" (middle_end/flambda/closure_conversion.ml[335,13609+38]..[335,13609+55])
                                    ]
                              ]
                              expression (middle_end/flambda/closure_conversion.ml[336,13668+4]..[387,15919+70])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/closure_conversion.ml[336,13668+8]..[336,13668+12])
                                      Ppat_var "zero" (middle_end/flambda/closure_conversion.ml[336,13668+8]..[336,13668+12])
                                    expression (middle_end/flambda/closure_conversion.ml[336,13668+15]..[336,13668+41])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[336,13668+15]..[336,13668+30])
                                        Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[336,13668+15]..[336,13668+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[336,13668+31]..[336,13668+41])
                                            Pexp_ident "Names.zero" (middle_end/flambda/closure_conversion.ml[336,13668+31]..[336,13668+41])
                                      ]
                                ]
                                expression (middle_end/flambda/closure_conversion.ml[337,13713+4]..[387,15919+70])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/closure_conversion.ml[337,13713+8]..[337,13713+15])
                                        Ppat_var "is_zero" (middle_end/flambda/closure_conversion.ml[337,13713+8]..[337,13713+15])
                                      expression (middle_end/flambda/closure_conversion.ml[337,13713+18]..[337,13713+47])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[337,13713+18]..[337,13713+33])
                                          Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[337,13713+18]..[337,13713+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[337,13713+34]..[337,13713+47])
                                              Pexp_ident "Names.is_zero" (middle_end/flambda/closure_conversion.ml[337,13713+34]..[337,13713+47])
                                        ]
                                  ]
                                  expression (middle_end/flambda/closure_conversion.ml[338,13764+4]..[387,15919+70])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/closure_conversion.ml[338,13764+8]..[338,13764+11])
                                          Ppat_var "exn" (middle_end/flambda/closure_conversion.ml[338,13764+8]..[338,13764+11])
                                        expression (middle_end/flambda/closure_conversion.ml[338,13764+14]..[338,13764+52])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[338,13764+14]..[338,13764+29])
                                            Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[338,13764+14]..[338,13764+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[338,13764+30]..[338,13764+52])
                                                Pexp_ident "Names.division_by_zero" (middle_end/flambda/closure_conversion.ml[338,13764+30]..[338,13764+52])
                                          ]
                                    ]
                                    expression (middle_end/flambda/closure_conversion.ml[339,13820+4]..[387,15919+70])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/closure_conversion.ml[339,13820+8]..[339,13820+18])
                                            Ppat_var "exn_symbol" (middle_end/flambda/closure_conversion.ml[339,13820+8]..[339,13820+18])
                                          expression (middle_end/flambda/closure_conversion.ml[340,13841+6]..[340,13841+56])
                                            Pexp_apply
                                            expression (middle_end/flambda/closure_conversion.ml[340,13841+6]..[340,13841+26])
                                              Pexp_field
                                              expression (middle_end/flambda/closure_conversion.ml[340,13841+6]..[340,13841+7])
                                                Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[340,13841+6]..[340,13841+7])
                                              "symbol_for_global'" (middle_end/flambda/closure_conversion.ml[340,13841+8]..[340,13841+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[340,13841+27]..[340,13841+56])
                                                  Pexp_ident "Predef.ident_division_by_zero" (middle_end/flambda/closure_conversion.ml[340,13841+27]..[340,13841+56])
                                            ]
                                      ]
                                      expression (middle_end/flambda/closure_conversion.ml[342,13905+4]..[387,15919+70])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/closure_conversion.ml[342,13905+8]..[342,13905+11])
                                              Ppat_var "dbg" (middle_end/flambda/closure_conversion.ml[342,13905+8]..[342,13905+11])
                                            expression (middle_end/flambda/closure_conversion.ml[342,13905+14]..[342,13905+41])
                                              Pexp_apply
                                              expression (middle_end/flambda/closure_conversion.ml[342,13905+14]..[342,13905+37])
                                                Pexp_ident "Debuginfo.from_location" (middle_end/flambda/closure_conversion.ml[342,13905+14]..[342,13905+37])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[342,13905+38]..[342,13905+41])
                                                    Pexp_ident "loc" (middle_end/flambda/closure_conversion.ml[342,13905+38]..[342,13905+41])
                                              ]
                                        ]
                                        expression (middle_end/flambda/closure_conversion.ml[343,13950+4]..[387,15919+70])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/closure_conversion.ml[343,13950+8]..[343,13950+34]) ghost
                                                Ppat_constraint
                                                pattern (middle_end/flambda/closure_conversion.ml[343,13950+8]..[343,13950+18])
                                                  Ppat_var "zero_const" (middle_end/flambda/closure_conversion.ml[343,13950+8]..[343,13950+18])
                                                core_type (middle_end/flambda/closure_conversion.ml[343,13950+21]..[343,13950+34]) ghost
                                                  Ptyp_poly
                                                  core_type (middle_end/flambda/closure_conversion.ml[343,13950+21]..[343,13950+34])
                                                    Ptyp_constr "Flambda.named" (middle_end/flambda/closure_conversion.ml[343,13950+21]..[343,13950+34])
                                                    []
                                              expression (middle_end/flambda/closure_conversion.ml[343,13950+8]..[353,14382+25])
                                                Pexp_constraint
                                                expression (middle_end/flambda/closure_conversion.ml[344,13987+6]..[353,14382+25])
                                                  Pexp_match
                                                  expression (middle_end/flambda/closure_conversion.ml[344,13987+12]..[344,13987+16])
                                                    Pexp_ident "prim" (middle_end/flambda/closure_conversion.ml[344,13987+12]..[344,13987+16])
                                                  [
                                                    <case>
                                                      pattern (middle_end/flambda/closure_conversion.ml[345,14009+8]..[345,14009+29])
                                                        Ppat_or
                                                        pattern (middle_end/flambda/closure_conversion.ml[345,14009+8]..[345,14009+17])
                                                          Ppat_construct "Pdivint" (middle_end/flambda/closure_conversion.ml[345,14009+8]..[345,14009+15])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/closure_conversion.ml[345,14009+16]..[345,14009+17])
                                                              Ppat_any
                                                        pattern (middle_end/flambda/closure_conversion.ml[345,14009+20]..[345,14009+29])
                                                          Ppat_construct "Pmodint" (middle_end/flambda/closure_conversion.ml[345,14009+20]..[345,14009+27])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/closure_conversion.ml[345,14009+28]..[345,14009+29])
                                                              Ppat_any
                                                      expression (middle_end/flambda/closure_conversion.ml[346,14042+8]..[346,14042+21])
                                                        Pexp_construct "Const" (middle_end/flambda/closure_conversion.ml[346,14042+8]..[346,14042+13])
                                                        Some
                                                          expression (middle_end/flambda/closure_conversion.ml[346,14042+14]..[346,14042+21])
                                                            Pexp_construct "Int" (middle_end/flambda/closure_conversion.ml[346,14042+15]..[346,14042+18])
                                                            Some
                                                              expression (middle_end/flambda/closure_conversion.ml[346,14042+19]..[346,14042+20])
                                                                Pexp_constant PConst_int (0,None)
                                                    <case>
                                                      pattern (middle_end/flambda/closure_conversion.ml[347,14064+8]..[347,14064+63])
                                                        Ppat_or
                                                        pattern (middle_end/flambda/closure_conversion.ml[347,14064+8]..[347,14064+34])
                                                          Ppat_construct "Pdivbint" (middle_end/flambda/closure_conversion.ml[347,14064+8]..[347,14064+16])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/closure_conversion.ml[347,14064+17]..[347,14064+34])
                                                              Ppat_record Closed
                                                              [
                                                                "size" (middle_end/flambda/closure_conversion.ml[347,14064+19]..[347,14064+23])
                                                                  pattern (middle_end/flambda/closure_conversion.ml[347,14064+26]..[347,14064+32])
                                                                    Ppat_construct "Pint32" (middle_end/flambda/closure_conversion.ml[347,14064+26]..[347,14064+32])
                                                                    None
                                                              ]
                                                        pattern (middle_end/flambda/closure_conversion.ml[347,14064+37]..[347,14064+63])
                                                          Ppat_construct "Pmodbint" (middle_end/flambda/closure_conversion.ml[347,14064+37]..[347,14064+45])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/closure_conversion.ml[347,14064+46]..[347,14064+63])
                                                              Ppat_record Closed
                                                              [
                                                                "size" (middle_end/flambda/closure_conversion.ml[347,14064+48]..[347,14064+52])
                                                                  pattern (middle_end/flambda/closure_conversion.ml[347,14064+55]..[347,14064+61])
                                                                    Ppat_construct "Pint32" (middle_end/flambda/closure_conversion.ml[347,14064+55]..[347,14064+61])
                                                                    None
                                                              ]
                                                      expression (middle_end/flambda/closure_conversion.ml[348,14131+8]..[348,14131+34])
                                                        Pexp_construct "Allocated_const" (middle_end/flambda/closure_conversion.ml[348,14131+8]..[348,14131+23])
                                                        Some
                                                          expression (middle_end/flambda/closure_conversion.ml[348,14131+24]..[348,14131+34])
                                                            Pexp_construct "Int32" (middle_end/flambda/closure_conversion.ml[348,14131+25]..[348,14131+30])
                                                            Some
                                                              expression (middle_end/flambda/closure_conversion.ml[348,14131+31]..[348,14131+33])
                                                                Pexp_constant PConst_int (0,Some l)
                                                    <case>
                                                      pattern (middle_end/flambda/closure_conversion.ml[349,14166+8]..[349,14166+63])
                                                        Ppat_or
                                                        pattern (middle_end/flambda/closure_conversion.ml[349,14166+8]..[349,14166+34])
                                                          Ppat_construct "Pdivbint" (middle_end/flambda/closure_conversion.ml[349,14166+8]..[349,14166+16])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/closure_conversion.ml[349,14166+17]..[349,14166+34])
                                                              Ppat_record Closed
                                                              [
                                                                "size" (middle_end/flambda/closure_conversion.ml[349,14166+19]..[349,14166+23])
                                                                  pattern (middle_end/flambda/closure_conversion.ml[349,14166+26]..[349,14166+32])
                                                                    Ppat_construct "Pint64" (middle_end/flambda/closure_conversion.ml[349,14166+26]..[349,14166+32])
                                                                    None
                                                              ]
                                                        pattern (middle_end/flambda/closure_conversion.ml[349,14166+37]..[349,14166+63])
                                                          Ppat_construct "Pmodbint" (middle_end/flambda/closure_conversion.ml[349,14166+37]..[349,14166+45])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/closure_conversion.ml[349,14166+46]..[349,14166+63])
                                                              Ppat_record Closed
                                                              [
                                                                "size" (middle_end/flambda/closure_conversion.ml[349,14166+48]..[349,14166+52])
                                                                  pattern (middle_end/flambda/closure_conversion.ml[349,14166+55]..[349,14166+61])
                                                                    Ppat_construct "Pint64" (middle_end/flambda/closure_conversion.ml[349,14166+55]..[349,14166+61])
                                                                    None
                                                              ]
                                                      expression (middle_end/flambda/closure_conversion.ml[350,14233+8]..[350,14233+34])
                                                        Pexp_construct "Allocated_const" (middle_end/flambda/closure_conversion.ml[350,14233+8]..[350,14233+23])
                                                        Some
                                                          expression (middle_end/flambda/closure_conversion.ml[350,14233+24]..[350,14233+34])
                                                            Pexp_construct "Int64" (middle_end/flambda/closure_conversion.ml[350,14233+25]..[350,14233+30])
                                                            Some
                                                              expression (middle_end/flambda/closure_conversion.ml[350,14233+31]..[350,14233+33])
                                                                Pexp_constant PConst_int (0,Some L)
                                                    <case>
                                                      pattern (middle_end/flambda/closure_conversion.ml[351,14268+8]..[351,14268+71])
                                                        Ppat_or
                                                        pattern (middle_end/flambda/closure_conversion.ml[351,14268+8]..[351,14268+38])
                                                          Ppat_construct "Pdivbint" (middle_end/flambda/closure_conversion.ml[351,14268+8]..[351,14268+16])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/closure_conversion.ml[351,14268+17]..[351,14268+38])
                                                              Ppat_record Closed
                                                              [
                                                                "size" (middle_end/flambda/closure_conversion.ml[351,14268+19]..[351,14268+23])
                                                                  pattern (middle_end/flambda/closure_conversion.ml[351,14268+26]..[351,14268+36])
                                                                    Ppat_construct "Pnativeint" (middle_end/flambda/closure_conversion.ml[351,14268+26]..[351,14268+36])
                                                                    None
                                                              ]
                                                        pattern (middle_end/flambda/closure_conversion.ml[351,14268+41]..[351,14268+71])
                                                          Ppat_construct "Pmodbint" (middle_end/flambda/closure_conversion.ml[351,14268+41]..[351,14268+49])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/closure_conversion.ml[351,14268+50]..[351,14268+71])
                                                              Ppat_record Closed
                                                              [
                                                                "size" (middle_end/flambda/closure_conversion.ml[351,14268+52]..[351,14268+56])
                                                                  pattern (middle_end/flambda/closure_conversion.ml[351,14268+59]..[351,14268+69])
                                                                    Ppat_construct "Pnativeint" (middle_end/flambda/closure_conversion.ml[351,14268+59]..[351,14268+69])
                                                                    None
                                                              ]
                                                      expression (middle_end/flambda/closure_conversion.ml[352,14343+8]..[352,14343+38])
                                                        Pexp_construct "Allocated_const" (middle_end/flambda/closure_conversion.ml[352,14343+8]..[352,14343+23])
                                                        Some
                                                          expression (middle_end/flambda/closure_conversion.ml[352,14343+24]..[352,14343+38])
                                                            Pexp_construct "Nativeint" (middle_end/flambda/closure_conversion.ml[352,14343+25]..[352,14343+34])
                                                            Some
                                                              expression (middle_end/flambda/closure_conversion.ml[352,14343+35]..[352,14343+37])
                                                                Pexp_constant PConst_int (0,Some n)
                                                    <case>
                                                      pattern (middle_end/flambda/closure_conversion.ml[353,14382+8]..[353,14382+9])
                                                        Ppat_any
                                                      expression (middle_end/flambda/closure_conversion.ml[353,14382+13]..[353,14382+25])
                                                        Pexp_assert
                                                        expression (middle_end/flambda/closure_conversion.ml[353,14382+20]..[353,14382+25])
                                                          Pexp_construct "false" (middle_end/flambda/closure_conversion.ml[353,14382+20]..[353,14382+25])
                                                          None
                                                  ]
                                                core_type (middle_end/flambda/closure_conversion.ml[343,13950+21]..[343,13950+34])
                                                  Ptyp_constr "Flambda.named" (middle_end/flambda/closure_conversion.ml[343,13950+21]..[343,13950+34])
                                                  []
                                          ]
                                          expression (middle_end/flambda/closure_conversion.ml[355,14415+4]..[387,15919+70])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/closure_conversion.ml[355,14415+8]..[355,14415+43]) ghost
                                                  Ppat_constraint
                                                  pattern (middle_end/flambda/closure_conversion.ml[355,14415+8]..[355,14415+12])
                                                    Ppat_var "prim" (middle_end/flambda/closure_conversion.ml[355,14415+8]..[355,14415+12])
                                                  core_type (middle_end/flambda/closure_conversion.ml[355,14415+15]..[355,14415+43]) ghost
                                                    Ptyp_poly
                                                    core_type (middle_end/flambda/closure_conversion.ml[355,14415+15]..[355,14415+43])
                                                      Ptyp_constr "Clambda_primitives.primitive" (middle_end/flambda/closure_conversion.ml[355,14415+15]..[355,14415+43])
                                                      []
                                                expression (middle_end/flambda/closure_conversion.ml[355,14415+8]..[361,14685+25])
                                                  Pexp_constraint
                                                  expression (middle_end/flambda/closure_conversion.ml[356,14461+6]..[361,14685+25])
                                                    Pexp_match
                                                    expression (middle_end/flambda/closure_conversion.ml[356,14461+12]..[356,14461+16])
                                                      Pexp_ident "prim" (middle_end/flambda/closure_conversion.ml[356,14461+12]..[356,14461+16])
                                                    [
                                                      <case>
                                                        pattern (middle_end/flambda/closure_conversion.ml[357,14483+8]..[357,14483+17])
                                                          Ppat_construct "Pdivint" (middle_end/flambda/closure_conversion.ml[357,14483+8]..[357,14483+15])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/closure_conversion.ml[357,14483+16]..[357,14483+17])
                                                              Ppat_any
                                                        expression (middle_end/flambda/closure_conversion.ml[357,14483+21]..[357,14483+35])
                                                          Pexp_construct "Pdivint" (middle_end/flambda/closure_conversion.ml[357,14483+21]..[357,14483+28])
                                                          Some
                                                            expression (middle_end/flambda/closure_conversion.ml[357,14483+29]..[357,14483+35])
                                                              Pexp_construct "Unsafe" (middle_end/flambda/closure_conversion.ml[357,14483+29]..[357,14483+35])
                                                              None
                                                      <case>
                                                        pattern (middle_end/flambda/closure_conversion.ml[358,14519+8]..[358,14519+17])
                                                          Ppat_construct "Pmodint" (middle_end/flambda/closure_conversion.ml[358,14519+8]..[358,14519+15])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/closure_conversion.ml[358,14519+16]..[358,14519+17])
                                                              Ppat_any
                                                        expression (middle_end/flambda/closure_conversion.ml[358,14519+21]..[358,14519+35])
                                                          Pexp_construct "Pmodint" (middle_end/flambda/closure_conversion.ml[358,14519+21]..[358,14519+28])
                                                          Some
                                                            expression (middle_end/flambda/closure_conversion.ml[358,14519+29]..[358,14519+35])
                                                              Pexp_construct "Unsafe" (middle_end/flambda/closure_conversion.ml[358,14519+29]..[358,14519+35])
                                                              None
                                                      <case>
                                                        pattern (middle_end/flambda/closure_conversion.ml[359,14555+8]..[359,14555+25])
                                                          Ppat_construct "Pdivbint" (middle_end/flambda/closure_conversion.ml[359,14555+8]..[359,14555+16])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/closure_conversion.ml[359,14555+17]..[359,14555+25])
                                                              Ppat_record Closed
                                                              [
                                                                "size" (middle_end/flambda/closure_conversion.ml[359,14555+19]..[359,14555+23]) ghost
                                                                  pattern (middle_end/flambda/closure_conversion.ml[359,14555+19]..[359,14555+23])
                                                                    Ppat_var "size" (middle_end/flambda/closure_conversion.ml[359,14555+19]..[359,14555+23])
                                                              ]
                                                        expression (middle_end/flambda/closure_conversion.ml[359,14555+29]..[359,14555+64])
                                                          Pexp_construct "Pdivbint" (middle_end/flambda/closure_conversion.ml[359,14555+29]..[359,14555+37])
                                                          Some
                                                            expression (middle_end/flambda/closure_conversion.ml[359,14555+38]..[359,14555+64])
                                                              Pexp_record
                                                              [
                                                                "size" (middle_end/flambda/closure_conversion.ml[359,14555+40]..[359,14555+44]) ghost
                                                                  expression (middle_end/flambda/closure_conversion.ml[359,14555+40]..[359,14555+44])
                                                                    Pexp_ident "size" (middle_end/flambda/closure_conversion.ml[359,14555+40]..[359,14555+44])
                                                                "is_safe" (middle_end/flambda/closure_conversion.ml[359,14555+46]..[359,14555+53])
                                                                  expression (middle_end/flambda/closure_conversion.ml[359,14555+56]..[359,14555+62])
                                                                    Pexp_construct "Unsafe" (middle_end/flambda/closure_conversion.ml[359,14555+56]..[359,14555+62])
                                                                    None
                                                              ]
                                                              None
                                                      <case>
                                                        pattern (middle_end/flambda/closure_conversion.ml[360,14620+8]..[360,14620+25])
                                                          Ppat_construct "Pmodbint" (middle_end/flambda/closure_conversion.ml[360,14620+8]..[360,14620+16])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/closure_conversion.ml[360,14620+17]..[360,14620+25])
                                                              Ppat_record Closed
                                                              [
                                                                "size" (middle_end/flambda/closure_conversion.ml[360,14620+19]..[360,14620+23]) ghost
                                                                  pattern (middle_end/flambda/closure_conversion.ml[360,14620+19]..[360,14620+23])
                                                                    Ppat_var "size" (middle_end/flambda/closure_conversion.ml[360,14620+19]..[360,14620+23])
                                                              ]
                                                        expression (middle_end/flambda/closure_conversion.ml[360,14620+29]..[360,14620+64])
                                                          Pexp_construct "Pmodbint" (middle_end/flambda/closure_conversion.ml[360,14620+29]..[360,14620+37])
                                                          Some
                                                            expression (middle_end/flambda/closure_conversion.ml[360,14620+38]..[360,14620+64])
                                                              Pexp_record
                                                              [
                                                                "size" (middle_end/flambda/closure_conversion.ml[360,14620+40]..[360,14620+44]) ghost
                                                                  expression (middle_end/flambda/closure_conversion.ml[360,14620+40]..[360,14620+44])
                                                                    Pexp_ident "size" (middle_end/flambda/closure_conversion.ml[360,14620+40]..[360,14620+44])
                                                                "is_safe" (middle_end/flambda/closure_conversion.ml[360,14620+46]..[360,14620+53])
                                                                  expression (middle_end/flambda/closure_conversion.ml[360,14620+56]..[360,14620+62])
                                                                    Pexp_construct "Unsafe" (middle_end/flambda/closure_conversion.ml[360,14620+56]..[360,14620+62])
                                                                    None
                                                              ]
                                                              None
                                                      <case>
                                                        pattern (middle_end/flambda/closure_conversion.ml[361,14685+8]..[361,14685+9])
                                                          Ppat_any
                                                        expression (middle_end/flambda/closure_conversion.ml[361,14685+13]..[361,14685+25])
                                                          Pexp_assert
                                                          expression (middle_end/flambda/closure_conversion.ml[361,14685+20]..[361,14685+25])
                                                            Pexp_construct "false" (middle_end/flambda/closure_conversion.ml[361,14685+20]..[361,14685+25])
                                                            None
                                                    ]
                                                  core_type (middle_end/flambda/closure_conversion.ml[355,14415+15]..[355,14415+43])
                                                    Ptyp_constr "Clambda_primitives.primitive" (middle_end/flambda/closure_conversion.ml[355,14415+15]..[355,14415+43])
                                                    []
                                            ]
                                            expression (middle_end/flambda/closure_conversion.ml[363,14718+4]..[387,15919+70])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/closure_conversion.ml[363,14718+8]..[363,14718+49]) ghost
                                                    Ppat_constraint
                                                    pattern (middle_end/flambda/closure_conversion.ml[363,14718+8]..[363,14718+18])
                                                      Ppat_var "comparison" (middle_end/flambda/closure_conversion.ml[363,14718+8]..[363,14718+18])
                                                    core_type (middle_end/flambda/closure_conversion.ml[363,14718+21]..[363,14718+49]) ghost
                                                      Ptyp_poly
                                                      core_type (middle_end/flambda/closure_conversion.ml[363,14718+21]..[363,14718+49])
                                                        Ptyp_constr "Clambda_primitives.primitive" (middle_end/flambda/closure_conversion.ml[363,14718+21]..[363,14718+49])
                                                        []
                                                  expression (middle_end/flambda/closure_conversion.ml[363,14718+8]..[367,14908+25])
                                                    Pexp_constraint
                                                    expression (middle_end/flambda/closure_conversion.ml[364,14770+6]..[367,14908+25])
                                                      Pexp_match
                                                      expression (middle_end/flambda/closure_conversion.ml[364,14770+12]..[364,14770+16])
                                                        Pexp_ident "prim" (middle_end/flambda/closure_conversion.ml[364,14770+12]..[364,14770+16])
                                                      [
                                                        <case>
                                                          pattern (middle_end/flambda/closure_conversion.ml[365,14792+8]..[365,14792+29])
                                                            Ppat_or
                                                            pattern (middle_end/flambda/closure_conversion.ml[365,14792+8]..[365,14792+17])
                                                              Ppat_construct "Pdivint" (middle_end/flambda/closure_conversion.ml[365,14792+8]..[365,14792+15])
                                                              Some
                                                                []
                                                                pattern (middle_end/flambda/closure_conversion.ml[365,14792+16]..[365,14792+17])
                                                                  Ppat_any
                                                            pattern (middle_end/flambda/closure_conversion.ml[365,14792+20]..[365,14792+29])
                                                              Ppat_construct "Pmodint" (middle_end/flambda/closure_conversion.ml[365,14792+20]..[365,14792+27])
                                                              Some
                                                                []
                                                                pattern (middle_end/flambda/closure_conversion.ml[365,14792+28]..[365,14792+29])
                                                                  Ppat_any
                                                          expression (middle_end/flambda/closure_conversion.ml[365,14792+33]..[365,14792+45])
                                                            Pexp_construct "Pintcomp" (middle_end/flambda/closure_conversion.ml[365,14792+33]..[365,14792+41])
                                                            Some
                                                              expression (middle_end/flambda/closure_conversion.ml[365,14792+42]..[365,14792+45])
                                                                Pexp_construct "Ceq" (middle_end/flambda/closure_conversion.ml[365,14792+42]..[365,14792+45])
                                                                None
                                                        <case>
                                                          pattern (middle_end/flambda/closure_conversion.ml[366,14838+8]..[366,14838+45])
                                                            Ppat_or
                                                            pattern (middle_end/flambda/closure_conversion.ml[366,14838+8]..[366,14838+25])
                                                              Ppat_construct "Pdivbint" (middle_end/flambda/closure_conversion.ml[366,14838+8]..[366,14838+16])
                                                              Some
                                                                []
                                                                pattern (middle_end/flambda/closure_conversion.ml[366,14838+17]..[366,14838+25])
                                                                  Ppat_record Closed
                                                                  [
                                                                    "size" (middle_end/flambda/closure_conversion.ml[366,14838+19]..[366,14838+23]) ghost
                                                                      pattern (middle_end/flambda/closure_conversion.ml[366,14838+19]..[366,14838+23])
Ppat_var "size" (middle_end/flambda/closure_conversion.ml[366,14838+19]..[366,14838+23])
                                                                  ]
                                                            pattern (middle_end/flambda/closure_conversion.ml[366,14838+28]..[366,14838+45])
                                                              Ppat_construct "Pmodbint" (middle_end/flambda/closure_conversion.ml[366,14838+28]..[366,14838+36])
                                                              Some
                                                                []
                                                                pattern (middle_end/flambda/closure_conversion.ml[366,14838+37]..[366,14838+45])
                                                                  Ppat_record Closed
                                                                  [
                                                                    "size" (middle_end/flambda/closure_conversion.ml[366,14838+39]..[366,14838+43]) ghost
                                                                      pattern (middle_end/flambda/closure_conversion.ml[366,14838+39]..[366,14838+43])
Ppat_var "size" (middle_end/flambda/closure_conversion.ml[366,14838+39]..[366,14838+43])
                                                                  ]
                                                          expression (middle_end/flambda/closure_conversion.ml[366,14838+49]..[366,14838+69])
                                                            Pexp_construct "Pbintcomp" (middle_end/flambda/closure_conversion.ml[366,14838+49]..[366,14838+58])
                                                            Some
                                                              expression (middle_end/flambda/closure_conversion.ml[366,14838+59]..[366,14838+69])
                                                                Pexp_tuple
                                                                [
                                                                  expression (middle_end/flambda/closure_conversion.ml[366,14838+60]..[366,14838+64])
                                                                    Pexp_ident "size" (middle_end/flambda/closure_conversion.ml[366,14838+60]..[366,14838+64])
                                                                  expression (middle_end/flambda/closure_conversion.ml[366,14838+65]..[366,14838+68])
                                                                    Pexp_construct "Ceq" (middle_end/flambda/closure_conversion.ml[366,14838+65]..[366,14838+68])
                                                                    None
                                                                ]
                                                        <case>
                                                          pattern (middle_end/flambda/closure_conversion.ml[367,14908+8]..[367,14908+9])
                                                            Ppat_any
                                                          expression (middle_end/flambda/closure_conversion.ml[367,14908+13]..[367,14908+25])
                                                            Pexp_assert
                                                            expression (middle_end/flambda/closure_conversion.ml[367,14908+20]..[367,14908+25])
                                                              Pexp_construct "false" (middle_end/flambda/closure_conversion.ml[367,14908+20]..[367,14908+25])
                                                              None
                                                      ]
                                                    core_type (middle_end/flambda/closure_conversion.ml[363,14718+21]..[363,14718+49])
                                                      Ptyp_constr "Clambda_primitives.primitive" (middle_end/flambda/closure_conversion.ml[363,14718+21]..[363,14718+49])
                                                      []
                                              ]
                                              expression (middle_end/flambda/closure_conversion.ml[369,14941+4]..[387,15919+70])
                                                Pexp_sequence
                                                expression (middle_end/flambda/closure_conversion.ml[369,14941+4]..[369,14941+70])
                                                  Pexp_setfield
                                                  expression (middle_end/flambda/closure_conversion.ml[369,14941+4]..[369,14941+5])
                                                    Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[369,14941+4]..[369,14941+5])
                                                  "imported_symbols" (middle_end/flambda/closure_conversion.ml[369,14941+6]..[369,14941+22])
                                                  expression (middle_end/flambda/closure_conversion.ml[369,14941+26]..[369,14941+70])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/closure_conversion.ml[369,14941+26]..[369,14941+40])
                                                      Pexp_ident "Symbol.Set.add" (middle_end/flambda/closure_conversion.ml[369,14941+26]..[369,14941+40])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[369,14941+41]..[369,14941+51])
                                                          Pexp_ident "exn_symbol" (middle_end/flambda/closure_conversion.ml[369,14941+41]..[369,14941+51])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[369,14941+52]..[369,14941+70])
                                                          Pexp_field
                                                          expression (middle_end/flambda/closure_conversion.ml[369,14941+52]..[369,14941+53])
                                                            Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[369,14941+52]..[369,14941+53])
                                                          "imported_symbols" (middle_end/flambda/closure_conversion.ml[369,14941+54]..[369,14941+70])
                                                    ]
                                                expression (middle_end/flambda/closure_conversion.ml[370,15013+4]..[387,15919+70])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/closure_conversion.ml[370,15013+4]..[370,15013+22])
                                                    Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[370,15013+4]..[370,15013+22])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[370,15013+23]..[370,15013+27])
                                                        Pexp_ident "zero" (middle_end/flambda/closure_conversion.ml[370,15013+23]..[370,15013+27])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[370,15013+28]..[370,15013+38])
                                                        Pexp_ident "zero_const" (middle_end/flambda/closure_conversion.ml[370,15013+28]..[370,15013+38])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[371,15052+6]..[387,15919+70])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/closure_conversion.ml[371,15052+7]..[371,15052+25])
                                                          Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[371,15052+7]..[371,15052+25])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/closure_conversion.ml[371,15052+26]..[371,15052+29])
                                                              Pexp_ident "exn" (middle_end/flambda/closure_conversion.ml[371,15052+26]..[371,15052+29])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/closure_conversion.ml[371,15052+30]..[371,15052+49])
                                                              Pexp_construct "Symbol" (middle_end/flambda/closure_conversion.ml[371,15052+31]..[371,15052+37])
                                                              Some
                                                                expression (middle_end/flambda/closure_conversion.ml[371,15052+38]..[371,15052+48])
                                                                  Pexp_ident "exn_symbol" (middle_end/flambda/closure_conversion.ml[371,15052+38]..[371,15052+48])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/closure_conversion.ml[372,15102+8]..[387,15919+69])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/closure_conversion.ml[372,15102+9]..[372,15102+27])
                                                                Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[372,15102+9]..[372,15102+27])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/closure_conversion.ml[372,15102+28]..[372,15102+39])
                                                                    Pexp_ident "denominator" (middle_end/flambda/closure_conversion.ml[372,15102+28]..[372,15102+39])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/closure_conversion.ml[372,15102+40]..[372,15102+51])
                                                                    Pexp_construct "Expr" (middle_end/flambda/closure_conversion.ml[372,15102+41]..[372,15102+45])
                                                                    Some
                                                                      expression (middle_end/flambda/closure_conversion.ml[372,15102+46]..[372,15102+50])
Pexp_ident "arg2" (middle_end/flambda/closure_conversion.ml[372,15102+46]..[372,15102+50])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/closure_conversion.ml[373,15154+10]..[387,15919+68])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/closure_conversion.ml[373,15154+11]..[373,15154+29])
                                                                      Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[373,15154+11]..[373,15154+29])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/closure_conversion.ml[373,15154+30]..[373,15154+39])
  Pexp_ident "numerator" (middle_end/flambda/closure_conversion.ml[373,15154+30]..[373,15154+39])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/closure_conversion.ml[373,15154+40]..[373,15154+51])
  Pexp_construct "Expr" (middle_end/flambda/closure_conversion.ml[373,15154+41]..[373,15154+45])
  Some
    expression (middle_end/flambda/closure_conversion.ml[373,15154+46]..[373,15154+50])
      Pexp_ident "arg1" (middle_end/flambda/closure_conversion.ml[373,15154+46]..[373,15154+50])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/closure_conversion.ml[374,15206+12]..[387,15919+67])
  Pexp_apply
  expression (middle_end/flambda/closure_conversion.ml[374,15206+13]..[374,15206+31])
    Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[374,15206+13]..[374,15206+31])
  [
    <arg>
    Nolabel
      expression (middle_end/flambda/closure_conversion.ml[374,15206+32]..[374,15206+39])
        Pexp_ident "is_zero" (middle_end/flambda/closure_conversion.ml[374,15206+32]..[374,15206+39])
    <arg>
    Nolabel
      expression (middle_end/flambda/closure_conversion.ml[375,15246+14]..[375,15246+59])
        Pexp_construct "Prim" (middle_end/flambda/closure_conversion.ml[375,15246+15]..[375,15246+19])
        Some
          expression (middle_end/flambda/closure_conversion.ml[375,15246+20]..[375,15246+58])
            Pexp_tuple
            [
              expression (middle_end/flambda/closure_conversion.ml[375,15246+21]..[375,15246+31])
                Pexp_ident "comparison" (middle_end/flambda/closure_conversion.ml[375,15246+21]..[375,15246+31])
              expression (middle_end/flambda/closure_conversion.ml[375,15246+33]..[375,15246+52])
                Pexp_construct "::" (middle_end/flambda/closure_conversion.ml[375,15246+34]..[375,15246+52]) ghost
                Some
                  expression (middle_end/flambda/closure_conversion.ml[375,15246+34]..[375,15246+52]) ghost
                    Pexp_tuple
                    [
                      expression (middle_end/flambda/closure_conversion.ml[375,15246+34]..[375,15246+38])
                        Pexp_ident "zero" (middle_end/flambda/closure_conversion.ml[375,15246+34]..[375,15246+38])
                      expression (middle_end/flambda/closure_conversion.ml[375,15246+40]..[375,15246+52]) ghost
                        Pexp_construct "::" (middle_end/flambda/closure_conversion.ml[375,15246+40]..[375,15246+52]) ghost
                        Some
                          expression (middle_end/flambda/closure_conversion.ml[375,15246+40]..[375,15246+52]) ghost
                            Pexp_tuple
                            [
                              expression (middle_end/flambda/closure_conversion.ml[375,15246+40]..[375,15246+51])
                                Pexp_ident "denominator" (middle_end/flambda/closure_conversion.ml[375,15246+40]..[375,15246+51])
                              expression (middle_end/flambda/closure_conversion.ml[375,15246+51]..[375,15246+52]) ghost
                                Pexp_construct "[]" (middle_end/flambda/closure_conversion.ml[375,15246+51]..[375,15246+52]) ghost
                                None
                            ]
                    ]
              expression (middle_end/flambda/closure_conversion.ml[375,15246+54]..[375,15246+57])
                Pexp_ident "dbg" (middle_end/flambda/closure_conversion.ml[375,15246+54]..[375,15246+57])
            ]
    <arg>
    Nolabel
      expression (middle_end/flambda/closure_conversion.ml[376,15306+16]..[387,15919+66])
        Pexp_construct "If_then_else" (middle_end/flambda/closure_conversion.ml[376,15306+17]..[376,15306+29])
        Some
          expression (middle_end/flambda/closure_conversion.ml[376,15306+30]..[387,15919+65])
            Pexp_tuple
            [
              expression (middle_end/flambda/closure_conversion.ml[376,15306+31]..[376,15306+38])
                Pexp_ident "is_zero" (middle_end/flambda/closure_conversion.ml[376,15306+31]..[376,15306+38])
              expression (middle_end/flambda/closure_conversion.ml[377,15346+18]..[378,15416+37])
                Pexp_apply
                expression (middle_end/flambda/closure_conversion.ml[377,15346+18]..[377,15346+27])
                  Pexp_ident "name_expr" (middle_end/flambda/closure_conversion.ml[377,15346+18]..[377,15346+27])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/closure_conversion.ml[377,15346+28]..[377,15346+69])
                      Pexp_construct "Prim" (middle_end/flambda/closure_conversion.ml[377,15346+29]..[377,15346+33])
                      Some
                        expression (middle_end/flambda/closure_conversion.ml[377,15346+34]..[377,15346+68])
                          Pexp_tuple
                          [
                            expression (middle_end/flambda/closure_conversion.ml[377,15346+35]..[377,15346+55])
                              Pexp_construct "Praise" (middle_end/flambda/closure_conversion.ml[377,15346+35]..[377,15346+41])
                              Some
                                expression (middle_end/flambda/closure_conversion.ml[377,15346+42]..[377,15346+55])
                                  Pexp_construct "Raise_regular" (middle_end/flambda/closure_conversion.ml[377,15346+42]..[377,15346+55])
                                  None
                            expression (middle_end/flambda/closure_conversion.ml[377,15346+57]..[377,15346+62])
                              Pexp_construct "::" (middle_end/flambda/closure_conversion.ml[377,15346+58]..[377,15346+62]) ghost
                              Some
                                expression (middle_end/flambda/closure_conversion.ml[377,15346+58]..[377,15346+62]) ghost
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/closure_conversion.ml[377,15346+58]..[377,15346+61])
                                      Pexp_ident "exn" (middle_end/flambda/closure_conversion.ml[377,15346+58]..[377,15346+61])
                                    expression (middle_end/flambda/closure_conversion.ml[377,15346+61]..[377,15346+62]) ghost
                                      Pexp_construct "[]" (middle_end/flambda/closure_conversion.ml[377,15346+61]..[377,15346+62]) ghost
                                      None
                                  ]
                            expression (middle_end/flambda/closure_conversion.ml[377,15346+64]..[377,15346+67])
                              Pexp_ident "dbg" (middle_end/flambda/closure_conversion.ml[377,15346+64]..[377,15346+67])
                          ]
                  <arg>
                  Labelled "name"
                    expression (middle_end/flambda/closure_conversion.ml[378,15416+26]..[378,15416+37])
                      Pexp_ident "Names.dummy" (middle_end/flambda/closure_conversion.ml[378,15416+26]..[378,15416+37])
                ]
              expression (middle_end/flambda/closure_conversion.ml[386,15872+18]..[387,15919+64])
                Pexp_apply
                expression (middle_end/flambda/closure_conversion.ml[386,15872+18]..[386,15872+27])
                  Pexp_ident "name_expr" (middle_end/flambda/closure_conversion.ml[386,15872+18]..[386,15872+27])
                [
                  <arg>
                  Labelled "name"
                    expression (middle_end/flambda/closure_conversion.ml[386,15872+34]..[386,15872+46])
                      Pexp_ident "Names.result" (middle_end/flambda/closure_conversion.ml[386,15872+34]..[386,15872+46])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/closure_conversion.ml[387,15919+20]..[387,15919+64])
                      Pexp_construct "Prim" (middle_end/flambda/closure_conversion.ml[387,15919+21]..[387,15919+25])
                      Some
                        expression (middle_end/flambda/closure_conversion.ml[387,15919+26]..[387,15919+63])
                          Pexp_tuple
                          [
                            expression (middle_end/flambda/closure_conversion.ml[387,15919+27]..[387,15919+31])
                              Pexp_ident "prim" (middle_end/flambda/closure_conversion.ml[387,15919+27]..[387,15919+31])
                            expression (middle_end/flambda/closure_conversion.ml[387,15919+33]..[387,15919+57])
                              Pexp_construct "::" (middle_end/flambda/closure_conversion.ml[387,15919+34]..[387,15919+57]) ghost
                              Some
                                expression (middle_end/flambda/closure_conversion.ml[387,15919+34]..[387,15919+57]) ghost
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/closure_conversion.ml[387,15919+34]..[387,15919+43])
                                      Pexp_ident "numerator" (middle_end/flambda/closure_conversion.ml[387,15919+34]..[387,15919+43])
                                    expression (middle_end/flambda/closure_conversion.ml[387,15919+45]..[387,15919+57]) ghost
                                      Pexp_construct "::" (middle_end/flambda/closure_conversion.ml[387,15919+45]..[387,15919+57]) ghost
                                      Some
                                        expression (middle_end/flambda/closure_conversion.ml[387,15919+45]..[387,15919+57]) ghost
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/closure_conversion.ml[387,15919+45]..[387,15919+56])
                                              Pexp_ident "denominator" (middle_end/flambda/closure_conversion.ml[387,15919+45]..[387,15919+56])
                                            expression (middle_end/flambda/closure_conversion.ml[387,15919+56]..[387,15919+57]) ghost
                                              Pexp_construct "[]" (middle_end/flambda/closure_conversion.ml[387,15919+56]..[387,15919+57]) ghost
                                              None
                                          ]
                                  ]
                            expression (middle_end/flambda/closure_conversion.ml[387,15919+59]..[387,15919+62])
                              Pexp_ident "dbg" (middle_end/flambda/closure_conversion.ml[387,15919+59]..[387,15919+62])
                          ]
                ]
            ]
  ]
                                                                    ]
                                                              ]
                                                        ]
                                                  ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[388,15990+4]..[389,16030+78])
                        Ppat_construct "Lprim" (middle_end/flambda/closure_conversion.ml[388,15990+4]..[388,15990+9])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[388,15990+10]..[389,16030+78])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[388,15990+11]..[389,16030+71])
                                Ppat_or
                                pattern (middle_end/flambda/closure_conversion.ml[388,15990+12]..[389,16030+40])
                                  Ppat_or
                                  pattern (middle_end/flambda/closure_conversion.ml[388,15990+12]..[388,15990+39])
                                    Ppat_or
                                    pattern (middle_end/flambda/closure_conversion.ml[388,15990+12]..[388,15990+24])
                                      Ppat_construct "Pdivint" (middle_end/flambda/closure_conversion.ml[388,15990+12]..[388,15990+19])
                                      Some
                                        []
                                        pattern (middle_end/flambda/closure_conversion.ml[388,15990+20]..[388,15990+24])
                                          Ppat_construct "Safe" (middle_end/flambda/closure_conversion.ml[388,15990+20]..[388,15990+24])
                                          None
                                    pattern (middle_end/flambda/closure_conversion.ml[388,15990+27]..[388,15990+39])
                                      Ppat_construct "Pmodint" (middle_end/flambda/closure_conversion.ml[388,15990+27]..[388,15990+34])
                                      Some
                                        []
                                        pattern (middle_end/flambda/closure_conversion.ml[388,15990+35]..[388,15990+39])
                                          Ppat_construct "Safe" (middle_end/flambda/closure_conversion.ml[388,15990+35]..[388,15990+39])
                                          None
                                  pattern (middle_end/flambda/closure_conversion.ml[389,16030+13]..[389,16030+40])
                                    Ppat_construct "Pdivbint" (middle_end/flambda/closure_conversion.ml[389,16030+13]..[389,16030+21])
                                    Some
                                      []
                                      pattern (middle_end/flambda/closure_conversion.ml[389,16030+22]..[389,16030+40])
                                        Ppat_record Closed
                                        [
                                          "is_safe" (middle_end/flambda/closure_conversion.ml[389,16030+24]..[389,16030+31])
                                            pattern (middle_end/flambda/closure_conversion.ml[389,16030+34]..[389,16030+38])
                                              Ppat_construct "Safe" (middle_end/flambda/closure_conversion.ml[389,16030+34]..[389,16030+38])
                                              None
                                        ]
                                pattern (middle_end/flambda/closure_conversion.ml[389,16030+43]..[389,16030+70])
                                  Ppat_construct "Pmodbint" (middle_end/flambda/closure_conversion.ml[389,16030+43]..[389,16030+51])
                                  Some
                                    []
                                    pattern (middle_end/flambda/closure_conversion.ml[389,16030+52]..[389,16030+70])
                                      Ppat_record Closed
                                      [
                                        "is_safe" (middle_end/flambda/closure_conversion.ml[389,16030+54]..[389,16030+61])
                                          pattern (middle_end/flambda/closure_conversion.ml[389,16030+64]..[389,16030+68])
                                            Ppat_construct "Safe" (middle_end/flambda/closure_conversion.ml[389,16030+64]..[389,16030+68])
                                            None
                                      ]
                              pattern (middle_end/flambda/closure_conversion.ml[389,16030+73]..[389,16030+74])
                                Ppat_any
                              pattern (middle_end/flambda/closure_conversion.ml[389,16030+76]..[389,16030+77])
                                Ppat_any
                            ]
                      <when>
                        expression (middle_end/flambda/closure_conversion.ml[390,16109+11]..[390,16109+30])
                          Pexp_apply
                          expression (middle_end/flambda/closure_conversion.ml[390,16109+11]..[390,16109+14])
                            Pexp_ident "not" (middle_end/flambda/closure_conversion.ml[390,16109+11]..[390,16109+14])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[390,16109+15]..[390,16109+30])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[390,16109+15]..[390,16109+16])
                                  Pexp_ident "!" (middle_end/flambda/closure_conversion.ml[390,16109+15]..[390,16109+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[390,16109+16]..[390,16109+30])
                                      Pexp_ident "Clflags.unsafe" (middle_end/flambda/closure_conversion.ml[390,16109+16]..[390,16109+30])
                                ]
                          ]
                      expression (middle_end/flambda/closure_conversion.ml[391,16143+4]..[391,16143+72])
                        Pexp_apply
                        expression (middle_end/flambda/closure_conversion.ml[391,16143+4]..[391,16143+20])
                          Pexp_ident "Misc.fatal_error" (middle_end/flambda/closure_conversion.ml[391,16143+4]..[391,16143+20])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[391,16143+21]..[391,16143+72])
                              Pexp_constant PConst_string("Pdivint / Pmodint must have exactly two arguments",(middle_end/flambda/closure_conversion.ml[391,16143+22]..[391,16143+71]),None)
                        ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[392,16216+4]..[392,16216+36])
                        Ppat_construct "Lprim" (middle_end/flambda/closure_conversion.ml[392,16216+4]..[392,16216+9])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[392,16216+10]..[392,16216+36])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[392,16216+11]..[392,16216+18])
                                Ppat_construct "Psequor" (middle_end/flambda/closure_conversion.ml[392,16216+11]..[392,16216+18])
                                None
                              pattern (middle_end/flambda/closure_conversion.ml[392,16216+20]..[392,16216+32])
                                Ppat_construct "::" (middle_end/flambda/closure_conversion.ml[392,16216+21]..[392,16216+32]) ghost
                                Some
                                  []
                                  pattern (middle_end/flambda/closure_conversion.ml[392,16216+21]..[392,16216+32]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/closure_conversion.ml[392,16216+21]..[392,16216+25])
                                        Ppat_var "arg1" (middle_end/flambda/closure_conversion.ml[392,16216+21]..[392,16216+25])
                                      pattern (middle_end/flambda/closure_conversion.ml[392,16216+27]..[392,16216+32]) ghost
                                        Ppat_construct "::" (middle_end/flambda/closure_conversion.ml[392,16216+27]..[392,16216+32]) ghost
                                        Some
                                          []
                                          pattern (middle_end/flambda/closure_conversion.ml[392,16216+27]..[392,16216+32]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/closure_conversion.ml[392,16216+27]..[392,16216+31])
                                                Ppat_var "arg2" (middle_end/flambda/closure_conversion.ml[392,16216+27]..[392,16216+31])
                                              pattern (middle_end/flambda/closure_conversion.ml[392,16216+31]..[392,16216+32]) ghost
                                                Ppat_construct "[]" (middle_end/flambda/closure_conversion.ml[392,16216+31]..[392,16216+32]) ghost
                                                None
                                            ]
                                    ]
                              pattern (middle_end/flambda/closure_conversion.ml[392,16216+34]..[392,16216+35])
                                Ppat_any
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[393,16256+4]..[399,16528+52])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[393,16256+8]..[393,16256+12])
                              Ppat_var "arg1" (middle_end/flambda/closure_conversion.ml[393,16256+8]..[393,16256+12])
                            expression (middle_end/flambda/closure_conversion.ml[393,16256+15]..[393,16256+31])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[393,16256+15]..[393,16256+20])
                                Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[393,16256+15]..[393,16256+20])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[393,16256+21]..[393,16256+22])
                                    Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[393,16256+21]..[393,16256+22])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[393,16256+23]..[393,16256+26])
                                    Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[393,16256+23]..[393,16256+26])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[393,16256+27]..[393,16256+31])
                                    Pexp_ident "arg1" (middle_end/flambda/closure_conversion.ml[393,16256+27]..[393,16256+31])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[394,16291+4]..[399,16528+52])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[394,16291+8]..[394,16291+12])
                                Ppat_var "arg2" (middle_end/flambda/closure_conversion.ml[394,16291+8]..[394,16291+12])
                              expression (middle_end/flambda/closure_conversion.ml[394,16291+15]..[394,16291+31])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[394,16291+15]..[394,16291+20])
                                  Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[394,16291+15]..[394,16291+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[394,16291+21]..[394,16291+22])
                                      Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[394,16291+21]..[394,16291+22])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[394,16291+23]..[394,16291+26])
                                      Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[394,16291+23]..[394,16291+26])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[394,16291+27]..[394,16291+31])
                                      Pexp_ident "arg2" (middle_end/flambda/closure_conversion.ml[394,16291+27]..[394,16291+31])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[395,16326+4]..[399,16528+52])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/closure_conversion.ml[395,16326+8]..[395,16326+18])
                                  Ppat_var "const_true" (middle_end/flambda/closure_conversion.ml[395,16326+8]..[395,16326+18])
                                expression (middle_end/flambda/closure_conversion.ml[395,16326+21]..[395,16326+53])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[395,16326+21]..[395,16326+36])
                                    Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[395,16326+21]..[395,16326+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[395,16326+37]..[395,16326+53])
                                        Pexp_ident "Names.const_true" (middle_end/flambda/closure_conversion.ml[395,16326+37]..[395,16326+53])
                                  ]
                            ]
                            expression (middle_end/flambda/closure_conversion.ml[396,16383+4]..[399,16528+52])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/closure_conversion.ml[396,16383+8]..[396,16383+12])
                                    Ppat_var "cond" (middle_end/flambda/closure_conversion.ml[396,16383+8]..[396,16383+12])
                                  expression (middle_end/flambda/closure_conversion.ml[396,16383+15]..[396,16383+48])
                                    Pexp_apply
                                    expression (middle_end/flambda/closure_conversion.ml[396,16383+15]..[396,16383+30])
                                      Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[396,16383+15]..[396,16383+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[396,16383+31]..[396,16383+48])
                                          Pexp_ident "Names.cond_sequor" (middle_end/flambda/closure_conversion.ml[396,16383+31]..[396,16383+48])
                                    ]
                              ]
                              expression (middle_end/flambda/closure_conversion.ml[397,16435+4]..[399,16528+52])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[397,16435+4]..[397,16435+22])
                                  Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[397,16435+4]..[397,16435+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[397,16435+23]..[397,16435+33])
                                      Pexp_ident "const_true" (middle_end/flambda/closure_conversion.ml[397,16435+23]..[397,16435+33])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[397,16435+34]..[397,16435+49])
                                      Pexp_construct "Const" (middle_end/flambda/closure_conversion.ml[397,16435+35]..[397,16435+40])
                                      Some
                                        expression (middle_end/flambda/closure_conversion.ml[397,16435+41]..[397,16435+48])
                                          Pexp_construct "Int" (middle_end/flambda/closure_conversion.ml[397,16435+42]..[397,16435+45])
                                          Some
                                            expression (middle_end/flambda/closure_conversion.ml[397,16435+46]..[397,16435+47])
                                              Pexp_constant PConst_int (1,None)
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[398,16485+6]..[399,16528+52])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[398,16485+7]..[398,16485+25])
                                        Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[398,16485+7]..[398,16485+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[398,16485+26]..[398,16485+30])
                                            Pexp_ident "cond" (middle_end/flambda/closure_conversion.ml[398,16485+26]..[398,16485+30])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[398,16485+31]..[398,16485+42])
                                            Pexp_construct "Expr" (middle_end/flambda/closure_conversion.ml[398,16485+32]..[398,16485+36])
                                            Some
                                              expression (middle_end/flambda/closure_conversion.ml[398,16485+37]..[398,16485+41])
                                                Pexp_ident "arg1" (middle_end/flambda/closure_conversion.ml[398,16485+37]..[398,16485+41])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[399,16528+8]..[399,16528+51])
                                            Pexp_construct "If_then_else" (middle_end/flambda/closure_conversion.ml[399,16528+9]..[399,16528+21])
                                            Some
                                              expression (middle_end/flambda/closure_conversion.ml[399,16528+22]..[399,16528+50])
                                                Pexp_tuple
                                                [
                                                  expression (middle_end/flambda/closure_conversion.ml[399,16528+23]..[399,16528+27])
                                                    Pexp_ident "cond" (middle_end/flambda/closure_conversion.ml[399,16528+23]..[399,16528+27])
                                                  expression (middle_end/flambda/closure_conversion.ml[399,16528+29]..[399,16528+43])
                                                    Pexp_construct "Var" (middle_end/flambda/closure_conversion.ml[399,16528+29]..[399,16528+32])
                                                    Some
                                                      expression (middle_end/flambda/closure_conversion.ml[399,16528+33]..[399,16528+43])
                                                        Pexp_ident "const_true" (middle_end/flambda/closure_conversion.ml[399,16528+33]..[399,16528+43])
                                                  expression (middle_end/flambda/closure_conversion.ml[399,16528+45]..[399,16528+49])
                                                    Pexp_ident "arg2" (middle_end/flambda/closure_conversion.ml[399,16528+45]..[399,16528+49])
                                                ]
                                      ]
                                ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[400,16581+4]..[400,16581+37])
                        Ppat_construct "Lprim" (middle_end/flambda/closure_conversion.ml[400,16581+4]..[400,16581+9])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[400,16581+10]..[400,16581+37])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[400,16581+11]..[400,16581+19])
                                Ppat_construct "Psequand" (middle_end/flambda/closure_conversion.ml[400,16581+11]..[400,16581+19])
                                None
                              pattern (middle_end/flambda/closure_conversion.ml[400,16581+21]..[400,16581+33])
                                Ppat_construct "::" (middle_end/flambda/closure_conversion.ml[400,16581+22]..[400,16581+33]) ghost
                                Some
                                  []
                                  pattern (middle_end/flambda/closure_conversion.ml[400,16581+22]..[400,16581+33]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/closure_conversion.ml[400,16581+22]..[400,16581+26])
                                        Ppat_var "arg1" (middle_end/flambda/closure_conversion.ml[400,16581+22]..[400,16581+26])
                                      pattern (middle_end/flambda/closure_conversion.ml[400,16581+28]..[400,16581+33]) ghost
                                        Ppat_construct "::" (middle_end/flambda/closure_conversion.ml[400,16581+28]..[400,16581+33]) ghost
                                        Some
                                          []
                                          pattern (middle_end/flambda/closure_conversion.ml[400,16581+28]..[400,16581+33]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/closure_conversion.ml[400,16581+28]..[400,16581+32])
                                                Ppat_var "arg2" (middle_end/flambda/closure_conversion.ml[400,16581+28]..[400,16581+32])
                                              pattern (middle_end/flambda/closure_conversion.ml[400,16581+32]..[400,16581+33]) ghost
                                                Ppat_construct "[]" (middle_end/flambda/closure_conversion.ml[400,16581+32]..[400,16581+33]) ghost
                                                None
                                            ]
                                    ]
                              pattern (middle_end/flambda/closure_conversion.ml[400,16581+35]..[400,16581+36])
                                Ppat_any
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[401,16622+4]..[407,16899+53])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[401,16622+8]..[401,16622+12])
                              Ppat_var "arg1" (middle_end/flambda/closure_conversion.ml[401,16622+8]..[401,16622+12])
                            expression (middle_end/flambda/closure_conversion.ml[401,16622+15]..[401,16622+31])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[401,16622+15]..[401,16622+20])
                                Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[401,16622+15]..[401,16622+20])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[401,16622+21]..[401,16622+22])
                                    Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[401,16622+21]..[401,16622+22])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[401,16622+23]..[401,16622+26])
                                    Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[401,16622+23]..[401,16622+26])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[401,16622+27]..[401,16622+31])
                                    Pexp_ident "arg1" (middle_end/flambda/closure_conversion.ml[401,16622+27]..[401,16622+31])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[402,16657+4]..[407,16899+53])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[402,16657+8]..[402,16657+12])
                                Ppat_var "arg2" (middle_end/flambda/closure_conversion.ml[402,16657+8]..[402,16657+12])
                              expression (middle_end/flambda/closure_conversion.ml[402,16657+15]..[402,16657+31])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[402,16657+15]..[402,16657+20])
                                  Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[402,16657+15]..[402,16657+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[402,16657+21]..[402,16657+22])
                                      Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[402,16657+21]..[402,16657+22])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[402,16657+23]..[402,16657+26])
                                      Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[402,16657+23]..[402,16657+26])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[402,16657+27]..[402,16657+31])
                                      Pexp_ident "arg2" (middle_end/flambda/closure_conversion.ml[402,16657+27]..[402,16657+31])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[403,16692+4]..[407,16899+53])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/closure_conversion.ml[403,16692+8]..[403,16692+19])
                                  Ppat_var "const_false" (middle_end/flambda/closure_conversion.ml[403,16692+8]..[403,16692+19])
                                expression (middle_end/flambda/closure_conversion.ml[403,16692+22]..[403,16692+55])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[403,16692+22]..[403,16692+37])
                                    Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[403,16692+22]..[403,16692+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[403,16692+38]..[403,16692+55])
                                        Pexp_ident "Names.const_false" (middle_end/flambda/closure_conversion.ml[403,16692+38]..[403,16692+55])
                                  ]
                            ]
                            expression (middle_end/flambda/closure_conversion.ml[404,16751+4]..[407,16899+53])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/closure_conversion.ml[404,16751+8]..[404,16751+12])
                                    Ppat_var "cond" (middle_end/flambda/closure_conversion.ml[404,16751+8]..[404,16751+12])
                                  expression (middle_end/flambda/closure_conversion.ml[404,16751+15]..[404,16751+50])
                                    Pexp_apply
                                    expression (middle_end/flambda/closure_conversion.ml[404,16751+15]..[404,16751+30])
                                      Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[404,16751+15]..[404,16751+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[404,16751+31]..[404,16751+50])
                                          Pexp_ident "Names.const_sequand" (middle_end/flambda/closure_conversion.ml[404,16751+31]..[404,16751+50])
                                    ]
                              ]
                              expression (middle_end/flambda/closure_conversion.ml[405,16805+4]..[407,16899+53])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[405,16805+4]..[405,16805+22])
                                  Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[405,16805+4]..[405,16805+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[405,16805+23]..[405,16805+34])
                                      Pexp_ident "const_false" (middle_end/flambda/closure_conversion.ml[405,16805+23]..[405,16805+34])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[405,16805+35]..[405,16805+50])
                                      Pexp_construct "Const" (middle_end/flambda/closure_conversion.ml[405,16805+36]..[405,16805+41])
                                      Some
                                        expression (middle_end/flambda/closure_conversion.ml[405,16805+42]..[405,16805+49])
                                          Pexp_construct "Int" (middle_end/flambda/closure_conversion.ml[405,16805+43]..[405,16805+46])
                                          Some
                                            expression (middle_end/flambda/closure_conversion.ml[405,16805+47]..[405,16805+48])
                                              Pexp_constant PConst_int (0,None)
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[406,16856+6]..[407,16899+53])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[406,16856+7]..[406,16856+25])
                                        Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[406,16856+7]..[406,16856+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[406,16856+26]..[406,16856+30])
                                            Pexp_ident "cond" (middle_end/flambda/closure_conversion.ml[406,16856+26]..[406,16856+30])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[406,16856+31]..[406,16856+42])
                                            Pexp_construct "Expr" (middle_end/flambda/closure_conversion.ml[406,16856+32]..[406,16856+36])
                                            Some
                                              expression (middle_end/flambda/closure_conversion.ml[406,16856+37]..[406,16856+41])
                                                Pexp_ident "arg1" (middle_end/flambda/closure_conversion.ml[406,16856+37]..[406,16856+41])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[407,16899+8]..[407,16899+52])
                                            Pexp_construct "If_then_else" (middle_end/flambda/closure_conversion.ml[407,16899+9]..[407,16899+21])
                                            Some
                                              expression (middle_end/flambda/closure_conversion.ml[407,16899+22]..[407,16899+51])
                                                Pexp_tuple
                                                [
                                                  expression (middle_end/flambda/closure_conversion.ml[407,16899+23]..[407,16899+27])
                                                    Pexp_ident "cond" (middle_end/flambda/closure_conversion.ml[407,16899+23]..[407,16899+27])
                                                  expression (middle_end/flambda/closure_conversion.ml[407,16899+29]..[407,16899+33])
                                                    Pexp_ident "arg2" (middle_end/flambda/closure_conversion.ml[407,16899+29]..[407,16899+33])
                                                  expression (middle_end/flambda/closure_conversion.ml[407,16899+35]..[407,16899+50])
                                                    Pexp_construct "Var" (middle_end/flambda/closure_conversion.ml[407,16899+35]..[407,16899+38])
                                                    Some
                                                      expression (middle_end/flambda/closure_conversion.ml[407,16899+39]..[407,16899+50])
                                                        Pexp_ident "const_false" (middle_end/flambda/closure_conversion.ml[407,16899+39]..[407,16899+50])
                                                ]
                                      ]
                                ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[408,16953+4]..[408,16953+38])
                        Ppat_construct "Lprim" (middle_end/flambda/closure_conversion.ml[408,16953+4]..[408,16953+9])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[408,16953+10]..[408,16953+38])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[408,16953+11]..[408,16953+31])
                                Ppat_or
                                pattern (middle_end/flambda/closure_conversion.ml[408,16953+12]..[408,16953+20])
                                  Ppat_construct "Psequand" (middle_end/flambda/closure_conversion.ml[408,16953+12]..[408,16953+20])
                                  None
                                pattern (middle_end/flambda/closure_conversion.ml[408,16953+23]..[408,16953+30])
                                  Ppat_construct "Psequor" (middle_end/flambda/closure_conversion.ml[408,16953+23]..[408,16953+30])
                                  None
                              pattern (middle_end/flambda/closure_conversion.ml[408,16953+33]..[408,16953+34])
                                Ppat_any
                              pattern (middle_end/flambda/closure_conversion.ml[408,16953+36]..[408,16953+37])
                                Ppat_any
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[409,16995+4]..[409,16995+73])
                        Pexp_apply
                        expression (middle_end/flambda/closure_conversion.ml[409,16995+4]..[409,16995+20])
                          Pexp_ident "Misc.fatal_error" (middle_end/flambda/closure_conversion.ml[409,16995+4]..[409,16995+20])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[409,16995+21]..[409,16995+73])
                              Pexp_constant PConst_string("Psequand / Psequor must have exactly two arguments",(middle_end/flambda/closure_conversion.ml[409,16995+22]..[409,16995+72]),None)
                        ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[410,17069+4]..[410,17069+59])
                        Ppat_construct "Lprim" (middle_end/flambda/closure_conversion.ml[410,17069+4]..[410,17069+9])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[410,17069+10]..[410,17069+59])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[410,17069+11]..[410,17069+48])
                                Ppat_or
                                pattern (middle_end/flambda/closure_conversion.ml[410,17069+12]..[410,17069+28])
                                  Ppat_construct "Pbytes_to_string" (middle_end/flambda/closure_conversion.ml[410,17069+12]..[410,17069+28])
                                  None
                                pattern (middle_end/flambda/closure_conversion.ml[410,17069+31]..[410,17069+47])
                                  Ppat_construct "Pbytes_of_string" (middle_end/flambda/closure_conversion.ml[410,17069+31]..[410,17069+47])
                                  None
                              pattern (middle_end/flambda/closure_conversion.ml[410,17069+50]..[410,17069+55])
                                Ppat_construct "::" (middle_end/flambda/closure_conversion.ml[410,17069+51]..[410,17069+55]) ghost
                                Some
                                  []
                                  pattern (middle_end/flambda/closure_conversion.ml[410,17069+51]..[410,17069+55]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/closure_conversion.ml[410,17069+51]..[410,17069+54])
                                        Ppat_var "arg" (middle_end/flambda/closure_conversion.ml[410,17069+51]..[410,17069+54])
                                      pattern (middle_end/flambda/closure_conversion.ml[410,17069+54]..[410,17069+55]) ghost
                                        Ppat_construct "[]" (middle_end/flambda/closure_conversion.ml[410,17069+54]..[410,17069+55]) ghost
                                        None
                                    ]
                              pattern (middle_end/flambda/closure_conversion.ml[410,17069+57]..[410,17069+58])
                                Ppat_any
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[411,17132+4]..[411,17132+19])
                        Pexp_apply
                        expression (middle_end/flambda/closure_conversion.ml[411,17132+4]..[411,17132+9])
                          Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[411,17132+4]..[411,17132+9])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[411,17132+10]..[411,17132+11])
                              Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[411,17132+10]..[411,17132+11])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[411,17132+12]..[411,17132+15])
                              Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[411,17132+12]..[411,17132+15])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[411,17132+16]..[411,17132+19])
                              Pexp_ident "arg" (middle_end/flambda/closure_conversion.ml[411,17132+16]..[411,17132+19])
                        ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[412,17152+4]..[412,17152+29])
                        Ppat_construct "Lprim" (middle_end/flambda/closure_conversion.ml[412,17152+4]..[412,17152+9])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[412,17152+10]..[412,17152+29])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[412,17152+11]..[412,17152+18])
                                Ppat_construct "Pignore" (middle_end/flambda/closure_conversion.ml[412,17152+11]..[412,17152+18])
                                None
                              pattern (middle_end/flambda/closure_conversion.ml[412,17152+20]..[412,17152+25])
                                Ppat_construct "::" (middle_end/flambda/closure_conversion.ml[412,17152+21]..[412,17152+25]) ghost
                                Some
                                  []
                                  pattern (middle_end/flambda/closure_conversion.ml[412,17152+21]..[412,17152+25]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/closure_conversion.ml[412,17152+21]..[412,17152+24])
                                        Ppat_var "arg" (middle_end/flambda/closure_conversion.ml[412,17152+21]..[412,17152+24])
                                      pattern (middle_end/flambda/closure_conversion.ml[412,17152+24]..[412,17152+25]) ghost
                                        Ppat_construct "[]" (middle_end/flambda/closure_conversion.ml[412,17152+24]..[412,17152+25]) ghost
                                        None
                                    ]
                              pattern (middle_end/flambda/closure_conversion.ml[412,17152+27]..[412,17152+28])
                                Ppat_any
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[413,17185+4]..[418,17350+50])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[413,17185+8]..[413,17185+11])
                              Ppat_var "var" (middle_end/flambda/closure_conversion.ml[413,17185+8]..[413,17185+11])
                            expression (middle_end/flambda/closure_conversion.ml[413,17185+14]..[413,17185+42])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[413,17185+14]..[413,17185+29])
                                Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[413,17185+14]..[413,17185+29])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[413,17185+30]..[413,17185+42])
                                    Pexp_ident "Names.ignore" (middle_end/flambda/closure_conversion.ml[413,17185+30]..[413,17185+42])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[414,17231+4]..[418,17350+50])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[414,17231+8]..[414,17231+21])
                                Ppat_var "defining_expr" (middle_end/flambda/closure_conversion.ml[414,17231+8]..[414,17231+21])
                              expression (middle_end/flambda/closure_conversion.ml[415,17255+6]..[415,17255+46])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[415,17255+6]..[415,17255+32])
                                  Pexp_ident "close_let_bound_expression" (middle_end/flambda/closure_conversion.ml[415,17255+6]..[415,17255+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[415,17255+33]..[415,17255+34])
                                      Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[415,17255+33]..[415,17255+34])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[415,17255+35]..[415,17255+38])
                                      Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[415,17255+35]..[415,17255+38])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[415,17255+39]..[415,17255+42])
                                      Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[415,17255+39]..[415,17255+42])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[415,17255+43]..[415,17255+46])
                                      Pexp_ident "arg" (middle_end/flambda/closure_conversion.ml[415,17255+43]..[415,17255+46])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[417,17309+4]..[418,17350+50])
                            Pexp_apply
                            expression (middle_end/flambda/closure_conversion.ml[417,17309+4]..[417,17309+22])
                              Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[417,17309+4]..[417,17309+22])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[417,17309+23]..[417,17309+26])
                                  Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[417,17309+23]..[417,17309+26])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[417,17309+27]..[417,17309+40])
                                  Pexp_ident "defining_expr" (middle_end/flambda/closure_conversion.ml[417,17309+27]..[417,17309+40])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[418,17350+6]..[418,17350+50])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[418,17350+7]..[418,17350+16])
                                    Pexp_ident "name_expr" (middle_end/flambda/closure_conversion.ml[418,17350+7]..[418,17350+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[418,17350+17]..[418,17350+32])
                                        Pexp_construct "Const" (middle_end/flambda/closure_conversion.ml[418,17350+18]..[418,17350+23])
                                        Some
                                          expression (middle_end/flambda/closure_conversion.ml[418,17350+24]..[418,17350+31])
                                            Pexp_construct "Int" (middle_end/flambda/closure_conversion.ml[418,17350+25]..[418,17350+28])
                                            Some
                                              expression (middle_end/flambda/closure_conversion.ml[418,17350+29]..[418,17350+30])
                                                Pexp_constant PConst_int (0,None)
                                    <arg>
                                    Labelled "name"
                                      expression (middle_end/flambda/closure_conversion.ml[418,17350+39]..[418,17350+49])
                                        Pexp_ident "Names.unit" (middle_end/flambda/closure_conversion.ml[418,17350+39]..[418,17350+49])
                                  ]
                            ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[419,17401+4]..[419,17401+35])
                        Ppat_construct "Lprim" (middle_end/flambda/closure_conversion.ml[419,17401+4]..[419,17401+9])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[419,17401+10]..[419,17401+35])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[419,17401+11]..[419,17401+22])
                                Ppat_construct "Praise" (middle_end/flambda/closure_conversion.ml[419,17401+11]..[419,17401+17])
                                Some
                                  []
                                  pattern (middle_end/flambda/closure_conversion.ml[419,17401+18]..[419,17401+22])
                                    Ppat_var "kind" (middle_end/flambda/closure_conversion.ml[419,17401+18]..[419,17401+22])
                              pattern (middle_end/flambda/closure_conversion.ml[419,17401+24]..[419,17401+29])
                                Ppat_construct "::" (middle_end/flambda/closure_conversion.ml[419,17401+25]..[419,17401+29]) ghost
                                Some
                                  []
                                  pattern (middle_end/flambda/closure_conversion.ml[419,17401+25]..[419,17401+29]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/closure_conversion.ml[419,17401+25]..[419,17401+28])
                                        Ppat_var "arg" (middle_end/flambda/closure_conversion.ml[419,17401+25]..[419,17401+28])
                                      pattern (middle_end/flambda/closure_conversion.ml[419,17401+28]..[419,17401+29]) ghost
                                        Ppat_construct "[]" (middle_end/flambda/closure_conversion.ml[419,17401+28]..[419,17401+29]) ghost
                                        None
                                    ]
                              pattern (middle_end/flambda/closure_conversion.ml[419,17401+31]..[419,17401+34])
                                Ppat_var "loc" (middle_end/flambda/closure_conversion.ml[419,17401+31]..[419,17401+34])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[420,17440+4]..[425,17656+26])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[420,17440+8]..[420,17440+15])
                              Ppat_var "arg_var" (middle_end/flambda/closure_conversion.ml[420,17440+8]..[420,17440+15])
                            expression (middle_end/flambda/closure_conversion.ml[420,17440+18]..[420,17440+49])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[420,17440+18]..[420,17440+33])
                                Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[420,17440+18]..[420,17440+33])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[420,17440+34]..[420,17440+49])
                                    Pexp_ident "Names.raise_arg" (middle_end/flambda/closure_conversion.ml[420,17440+34]..[420,17440+49])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[421,17493+4]..[425,17656+26])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[421,17493+8]..[421,17493+11])
                                Ppat_var "dbg" (middle_end/flambda/closure_conversion.ml[421,17493+8]..[421,17493+11])
                              expression (middle_end/flambda/closure_conversion.ml[421,17493+14]..[421,17493+41])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[421,17493+14]..[421,17493+37])
                                  Pexp_ident "Debuginfo.from_location" (middle_end/flambda/closure_conversion.ml[421,17493+14]..[421,17493+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[421,17493+38]..[421,17493+41])
                                      Pexp_ident "loc" (middle_end/flambda/closure_conversion.ml[421,17493+38]..[421,17493+41])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[422,17538+4]..[425,17656+26])
                            Pexp_apply
                            expression (middle_end/flambda/closure_conversion.ml[422,17538+4]..[422,17538+22])
                              Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[422,17538+4]..[422,17538+22])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[422,17538+23]..[422,17538+30])
                                  Pexp_ident "arg_var" (middle_end/flambda/closure_conversion.ml[422,17538+23]..[422,17538+30])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[422,17538+31]..[422,17538+55])
                                  Pexp_construct "Expr" (middle_end/flambda/closure_conversion.ml[422,17538+32]..[422,17538+36])
                                  Some
                                    expression (middle_end/flambda/closure_conversion.ml[422,17538+37]..[422,17538+54])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[422,17538+38]..[422,17538+43])
                                        Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[422,17538+38]..[422,17538+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[422,17538+44]..[422,17538+45])
                                            Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[422,17538+44]..[422,17538+45])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[422,17538+46]..[422,17538+49])
                                            Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[422,17538+46]..[422,17538+49])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[422,17538+50]..[422,17538+53])
                                            Pexp_ident "arg" (middle_end/flambda/closure_conversion.ml[422,17538+50]..[422,17538+53])
                                      ]
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[423,17594+6]..[425,17656+26])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[423,17594+7]..[423,17594+16])
                                    Pexp_ident "name_expr" (middle_end/flambda/closure_conversion.ml[423,17594+7]..[423,17594+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[424,17611+8]..[424,17611+44])
                                        Pexp_construct "Prim" (middle_end/flambda/closure_conversion.ml[424,17611+9]..[424,17611+13])
                                        Some
                                          expression (middle_end/flambda/closure_conversion.ml[424,17611+14]..[424,17611+43])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/flambda/closure_conversion.ml[424,17611+15]..[424,17611+26])
                                                Pexp_construct "Praise" (middle_end/flambda/closure_conversion.ml[424,17611+15]..[424,17611+21])
                                                Some
                                                  expression (middle_end/flambda/closure_conversion.ml[424,17611+22]..[424,17611+26])
                                                    Pexp_ident "kind" (middle_end/flambda/closure_conversion.ml[424,17611+22]..[424,17611+26])
                                              expression (middle_end/flambda/closure_conversion.ml[424,17611+28]..[424,17611+37])
                                                Pexp_construct "::" (middle_end/flambda/closure_conversion.ml[424,17611+29]..[424,17611+37]) ghost
                                                Some
                                                  expression (middle_end/flambda/closure_conversion.ml[424,17611+29]..[424,17611+37]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (middle_end/flambda/closure_conversion.ml[424,17611+29]..[424,17611+36])
                                                        Pexp_ident "arg_var" (middle_end/flambda/closure_conversion.ml[424,17611+29]..[424,17611+36])
                                                      expression (middle_end/flambda/closure_conversion.ml[424,17611+36]..[424,17611+37]) ghost
                                                        Pexp_construct "[]" (middle_end/flambda/closure_conversion.ml[424,17611+36]..[424,17611+37]) ghost
                                                        None
                                                    ]
                                              expression (middle_end/flambda/closure_conversion.ml[424,17611+39]..[424,17611+42])
                                                Pexp_ident "dbg" (middle_end/flambda/closure_conversion.ml[424,17611+39]..[424,17611+42])
                                            ]
                                    <arg>
                                    Labelled "name"
                                      expression (middle_end/flambda/closure_conversion.ml[425,17656+14]..[425,17656+25])
                                        Pexp_ident "Names.raise" (middle_end/flambda/closure_conversion.ml[425,17656+14]..[425,17656+25])
                                  ]
                            ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[426,17683+4]..[426,17683+35])
                        Ppat_construct "Lprim" (middle_end/flambda/closure_conversion.ml[426,17683+4]..[426,17683+9])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[426,17683+10]..[426,17683+35])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[426,17683+11]..[426,17683+21])
                                Ppat_construct "Pctconst" (middle_end/flambda/closure_conversion.ml[426,17683+11]..[426,17683+19])
                                Some
                                  []
                                  pattern (middle_end/flambda/closure_conversion.ml[426,17683+20]..[426,17683+21])
                                    Ppat_var "c" (middle_end/flambda/closure_conversion.ml[426,17683+20]..[426,17683+21])
                              pattern (middle_end/flambda/closure_conversion.ml[426,17683+23]..[426,17683+28])
                                Ppat_construct "::" (middle_end/flambda/closure_conversion.ml[426,17683+24]..[426,17683+28]) ghost
                                Some
                                  []
                                  pattern (middle_end/flambda/closure_conversion.ml[426,17683+24]..[426,17683+28]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/closure_conversion.ml[426,17683+24]..[426,17683+27])
                                        Ppat_var "arg" (middle_end/flambda/closure_conversion.ml[426,17683+24]..[426,17683+27])
                                      pattern (middle_end/flambda/closure_conversion.ml[426,17683+27]..[426,17683+28]) ghost
                                        Ppat_construct "[]" (middle_end/flambda/closure_conversion.ml[426,17683+27]..[426,17683+28]) ghost
                                        None
                                    ]
                              pattern (middle_end/flambda/closure_conversion.ml[426,17683+30]..[426,17683+34])
                                Ppat_var "_loc" (middle_end/flambda/closure_conversion.ml[426,17683+30]..[426,17683+34])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[427,17722+6]..[444,18527+40])
                        Pexp_letmodule "Backend" (middle_end/flambda/closure_conversion.ml[427,17722+17]..[427,17722+24])
                        module_expr (middle_end/flambda/closure_conversion.ml[427,17722+27]..[427,17722+42])
                          Pmod_unpack
                          expression (middle_end/flambda/closure_conversion.ml[427,17722+32]..[427,17722+41])
                            Pexp_field
                            expression (middle_end/flambda/closure_conversion.ml[427,17722+32]..[427,17722+33])
                              Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[427,17722+32]..[427,17722+33])
                            "backend" (middle_end/flambda/closure_conversion.ml[427,17722+34]..[427,17722+41])
                        expression (middle_end/flambda/closure_conversion.ml[428,17768+6]..[444,18527+40])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[428,17768+10]..[428,17768+15])
                                Ppat_var "const" (middle_end/flambda/closure_conversion.ml[428,17768+10]..[428,17768+15])
                              expression (middle_end/flambda/closure_conversion.ml[429,17786+8]..[440,18422+11])
                                Pexp_match
                                expression (middle_end/flambda/closure_conversion.ml[429,17786+20]..[429,17786+21])
                                  Pexp_ident "c" (middle_end/flambda/closure_conversion.ml[429,17786+20]..[429,17786+21])
                                [
                                  <case>
                                    pattern (middle_end/flambda/closure_conversion.ml[430,17813+10]..[430,17813+20])
                                      Ppat_construct "Big_endian" (middle_end/flambda/closure_conversion.ml[430,17813+10]..[430,17813+20])
                                      None
                                    expression (middle_end/flambda/closure_conversion.ml[430,17813+24]..[430,17813+60])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[430,17813+24]..[430,17813+41])
                                        Pexp_ident "lambda_const_bool" (middle_end/flambda/closure_conversion.ml[430,17813+24]..[430,17813+41])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[430,17813+42]..[430,17813+60])
                                            Pexp_ident "Backend.big_endian" (middle_end/flambda/closure_conversion.ml[430,17813+42]..[430,17813+60])
                                      ]
                                  <case>
                                    pattern (middle_end/flambda/closure_conversion.ml[431,17874+10]..[431,17874+19])
                                      Ppat_construct "Word_size" (middle_end/flambda/closure_conversion.ml[431,17874+10]..[431,17874+19])
                                      None
                                    expression (middle_end/flambda/closure_conversion.ml[431,17874+23]..[431,17874+60])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[431,17874+23]..[431,17874+39])
                                        Pexp_ident "lambda_const_int" (middle_end/flambda/closure_conversion.ml[431,17874+23]..[431,17874+39])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[431,17874+40]..[431,17874+60])
                                            Pexp_apply
                                            expression (middle_end/flambda/closure_conversion.ml[431,17874+42]..[431,17874+43])
                                              Pexp_ident "*" (middle_end/flambda/closure_conversion.ml[431,17874+42]..[431,17874+43])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[431,17874+41]..[431,17874+42])
                                                  Pexp_constant PConst_int (8,None)
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[431,17874+43]..[431,17874+59])
                                                  Pexp_ident "Backend.size_int" (middle_end/flambda/closure_conversion.ml[431,17874+43]..[431,17874+59])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/flambda/closure_conversion.ml[432,17935+10]..[432,17935+18])
                                      Ppat_construct "Int_size" (middle_end/flambda/closure_conversion.ml[432,17935+10]..[432,17935+18])
                                      None
                                    expression (middle_end/flambda/closure_conversion.ml[432,17935+22]..[432,17935+63])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[432,17935+22]..[432,17935+38])
                                        Pexp_ident "lambda_const_int" (middle_end/flambda/closure_conversion.ml[432,17935+22]..[432,17935+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[432,17935+39]..[432,17935+63])
                                            Pexp_apply
                                            expression (middle_end/flambda/closure_conversion.ml[432,17935+59]..[432,17935+60])
                                              Pexp_ident "-" (middle_end/flambda/closure_conversion.ml[432,17935+59]..[432,17935+60])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[432,17935+40]..[432,17935+58])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/closure_conversion.ml[432,17935+41]..[432,17935+42])
                                                    Pexp_ident "*" (middle_end/flambda/closure_conversion.ml[432,17935+41]..[432,17935+42])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[432,17935+40]..[432,17935+41])
                                                        Pexp_constant PConst_int (8,None)
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[432,17935+42]..[432,17935+58])
                                                        Pexp_ident "Backend.size_int" (middle_end/flambda/closure_conversion.ml[432,17935+42]..[432,17935+58])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[432,17935+61]..[432,17935+62])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/flambda/closure_conversion.ml[433,17999+10]..[433,17999+20])
                                      Ppat_construct "Max_wosize" (middle_end/flambda/closure_conversion.ml[433,17999+10]..[433,17999+20])
                                      None
                                    expression (middle_end/flambda/closure_conversion.ml[434,18023+12]..[434,18023+70])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[434,18023+12]..[434,18023+28])
                                        Pexp_ident "lambda_const_int" (middle_end/flambda/closure_conversion.ml[434,18023+12]..[434,18023+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[434,18023+29]..[434,18023+70])
                                            Pexp_apply
                                            expression (middle_end/flambda/closure_conversion.ml[434,18023+66]..[434,18023+67])
                                              Pexp_ident "-" (middle_end/flambda/closure_conversion.ml[434,18023+66]..[434,18023+67])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[434,18023+30]..[434,18023+65])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/closure_conversion.ml[434,18023+33]..[434,18023+36])
                                                    Pexp_ident "lsl" (middle_end/flambda/closure_conversion.ml[434,18023+33]..[434,18023+36])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[434,18023+31]..[434,18023+32])
                                                        Pexp_constant PConst_int (1,None)
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[434,18023+37]..[434,18023+64])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/closure_conversion.ml[434,18023+59]..[434,18023+60])
                                                          Pexp_ident "-" (middle_end/flambda/closure_conversion.ml[434,18023+59]..[434,18023+60])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/closure_conversion.ml[434,18023+38]..[434,18023+58])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/closure_conversion.ml[434,18023+40]..[434,18023+41])
                                                                Pexp_ident "*" (middle_end/flambda/closure_conversion.ml[434,18023+40]..[434,18023+41])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/closure_conversion.ml[434,18023+39]..[434,18023+40])
                                                                    Pexp_constant PConst_int (8,None)
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/closure_conversion.ml[434,18023+41]..[434,18023+57])
                                                                    Pexp_ident "Backend.size_int" (middle_end/flambda/closure_conversion.ml[434,18023+41]..[434,18023+57])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/closure_conversion.ml[434,18023+61]..[434,18023+63])
                                                              Pexp_constant PConst_int (10,None)
                                                        ]
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[434,18023+68]..[434,18023+69])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/flambda/closure_conversion.ml[435,18094+10]..[435,18094+21])
                                      Ppat_construct "Ostype_unix" (middle_end/flambda/closure_conversion.ml[435,18094+10]..[435,18094+21])
                                      None
                                    expression (middle_end/flambda/closure_conversion.ml[435,18094+25]..[435,18094+76])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[435,18094+25]..[435,18094+42])
                                        Pexp_ident "lambda_const_bool" (middle_end/flambda/closure_conversion.ml[435,18094+25]..[435,18094+42])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[435,18094+43]..[435,18094+76])
                                            Pexp_apply
                                            expression (middle_end/flambda/closure_conversion.ml[435,18094+44]..[435,18094+56])
                                              Pexp_ident "String.equal" (middle_end/flambda/closure_conversion.ml[435,18094+44]..[435,18094+56])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[435,18094+57]..[435,18094+68])
                                                  Pexp_ident "Sys.os_type" (middle_end/flambda/closure_conversion.ml[435,18094+57]..[435,18094+68])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[435,18094+69]..[435,18094+75])
                                                  Pexp_constant PConst_string("Unix",(middle_end/flambda/closure_conversion.ml[435,18094+70]..[435,18094+74]),None)
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/flambda/closure_conversion.ml[436,18171+10]..[436,18171+22])
                                      Ppat_construct "Ostype_win32" (middle_end/flambda/closure_conversion.ml[436,18171+10]..[436,18171+22])
                                      None
                                    expression (middle_end/flambda/closure_conversion.ml[436,18171+26]..[436,18171+78])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[436,18171+26]..[436,18171+43])
                                        Pexp_ident "lambda_const_bool" (middle_end/flambda/closure_conversion.ml[436,18171+26]..[436,18171+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[436,18171+44]..[436,18171+78])
                                            Pexp_apply
                                            expression (middle_end/flambda/closure_conversion.ml[436,18171+45]..[436,18171+57])
                                              Pexp_ident "String.equal" (middle_end/flambda/closure_conversion.ml[436,18171+45]..[436,18171+57])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[436,18171+58]..[436,18171+69])
                                                  Pexp_ident "Sys.os_type" (middle_end/flambda/closure_conversion.ml[436,18171+58]..[436,18171+69])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[436,18171+70]..[436,18171+77])
                                                  Pexp_constant PConst_string("Win32",(middle_end/flambda/closure_conversion.ml[436,18171+71]..[436,18171+76]),None)
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/flambda/closure_conversion.ml[437,18250+10]..[437,18250+23])
                                      Ppat_construct "Ostype_cygwin" (middle_end/flambda/closure_conversion.ml[437,18250+10]..[437,18250+23])
                                      None
                                    expression (middle_end/flambda/closure_conversion.ml[437,18250+27]..[437,18250+80])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[437,18250+27]..[437,18250+44])
                                        Pexp_ident "lambda_const_bool" (middle_end/flambda/closure_conversion.ml[437,18250+27]..[437,18250+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[437,18250+45]..[437,18250+80])
                                            Pexp_apply
                                            expression (middle_end/flambda/closure_conversion.ml[437,18250+46]..[437,18250+58])
                                              Pexp_ident "String.equal" (middle_end/flambda/closure_conversion.ml[437,18250+46]..[437,18250+58])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[437,18250+59]..[437,18250+70])
                                                  Pexp_ident "Sys.os_type" (middle_end/flambda/closure_conversion.ml[437,18250+59]..[437,18250+70])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[437,18250+71]..[437,18250+79])
                                                  Pexp_constant PConst_string("Cygwin",(middle_end/flambda/closure_conversion.ml[437,18250+72]..[437,18250+78]),None)
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/flambda/closure_conversion.ml[438,18331+10]..[438,18331+22])
                                      Ppat_construct "Backend_type" (middle_end/flambda/closure_conversion.ml[438,18331+10]..[438,18331+22])
                                      None
                                    expression (middle_end/flambda/closure_conversion.ml[439,18357+12]..[439,18357+30])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[439,18357+12]..[439,18357+28])
                                        Pexp_ident "Lambda.const_int" (middle_end/flambda/closure_conversion.ml[439,18357+12]..[439,18357+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[439,18357+29]..[439,18357+30])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[442,18443+6]..[444,18527+40])
                            Pexp_apply
                            expression (middle_end/flambda/closure_conversion.ml[442,18443+6]..[442,18443+11])
                              Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[442,18443+6]..[442,18443+11])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[442,18443+12]..[442,18443+13])
                                  Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[442,18443+12]..[442,18443+13])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[442,18443+14]..[442,18443+17])
                                  Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[442,18443+14]..[442,18443+17])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[443,18461+8]..[444,18527+40])
                                  Pexp_construct "Lambda.Llet" (middle_end/flambda/closure_conversion.ml[443,18461+9]..[443,18461+20])
                                  Some
                                    expression (middle_end/flambda/closure_conversion.ml[443,18461+20]..[444,18527+39])
                                      Pexp_tuple
                                      [
                                        expression (middle_end/flambda/closure_conversion.ml[443,18461+21]..[443,18461+27])
                                          Pexp_construct "Strict" (middle_end/flambda/closure_conversion.ml[443,18461+21]..[443,18461+27])
                                          None
                                        expression (middle_end/flambda/closure_conversion.ml[443,18461+29]..[443,18461+36])
                                          Pexp_construct "Pgenval" (middle_end/flambda/closure_conversion.ml[443,18461+29]..[443,18461+36])
                                          None
                                        expression (middle_end/flambda/closure_conversion.ml[443,18461+38]..[443,18461+64])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[443,18461+38]..[443,18461+56])
                                            Pexp_ident "Ident.create_local" (middle_end/flambda/closure_conversion.ml[443,18461+38]..[443,18461+56])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[443,18461+57]..[443,18461+64])
                                                Pexp_constant PConst_string("dummy",(middle_end/flambda/closure_conversion.ml[443,18461+58]..[443,18461+63]),None)
                                          ]
                                        expression (middle_end/flambda/closure_conversion.ml[444,18527+21]..[444,18527+24])
                                          Pexp_ident "arg" (middle_end/flambda/closure_conversion.ml[444,18527+21]..[444,18527+24])
                                        expression (middle_end/flambda/closure_conversion.ml[444,18527+26]..[444,18527+38])
                                          Pexp_construct "Lconst" (middle_end/flambda/closure_conversion.ml[444,18527+26]..[444,18527+32])
                                          Some
                                            expression (middle_end/flambda/closure_conversion.ml[444,18527+33]..[444,18527+38])
                                              Pexp_ident "const" (middle_end/flambda/closure_conversion.ml[444,18527+33]..[444,18527+38])
                                      ]
                            ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[445,18568+4]..[445,18568+54])
                        Ppat_construct "Lprim" (middle_end/flambda/closure_conversion.ml[445,18568+4]..[445,18568+9])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[445,18568+10]..[445,18568+54])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[445,18568+11]..[445,18568+19])
                                Ppat_construct "Pfield" (middle_end/flambda/closure_conversion.ml[445,18568+11]..[445,18568+17])
                                Some
                                  []
                                  pattern (middle_end/flambda/closure_conversion.ml[445,18568+18]..[445,18568+19])
                                    Ppat_any
                              pattern (middle_end/flambda/closure_conversion.ml[445,18568+21]..[445,18568+50])
                                Ppat_construct "::" (middle_end/flambda/closure_conversion.ml[445,18568+22]..[445,18568+50]) ghost
                                Some
                                  []
                                  pattern (middle_end/flambda/closure_conversion.ml[445,18568+22]..[445,18568+50]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/closure_conversion.ml[445,18568+22]..[445,18568+49])
                                        Ppat_construct "Lprim" (middle_end/flambda/closure_conversion.ml[445,18568+22]..[445,18568+27])
                                        Some
                                          []
                                          pattern (middle_end/flambda/closure_conversion.ml[445,18568+28]..[445,18568+49])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/closure_conversion.ml[445,18568+29]..[445,18568+42])
                                                Ppat_construct "Pgetglobal" (middle_end/flambda/closure_conversion.ml[445,18568+29]..[445,18568+39])
                                                Some
                                                  []
                                                  pattern (middle_end/flambda/closure_conversion.ml[445,18568+40]..[445,18568+42])
                                                    Ppat_var "id" (middle_end/flambda/closure_conversion.ml[445,18568+40]..[445,18568+42])
                                              pattern (middle_end/flambda/closure_conversion.ml[445,18568+44]..[445,18568+46])
                                                Ppat_construct "[]" (middle_end/flambda/closure_conversion.ml[445,18568+44]..[445,18568+46])
                                                None
                                              pattern (middle_end/flambda/closure_conversion.ml[445,18568+47]..[445,18568+48])
                                                Ppat_any
                                            ]
                                      pattern (middle_end/flambda/closure_conversion.ml[445,18568+49]..[445,18568+50]) ghost
                                        Ppat_construct "[]" (middle_end/flambda/closure_conversion.ml[445,18568+49]..[445,18568+50]) ghost
                                        None
                                    ]
                              pattern (middle_end/flambda/closure_conversion.ml[445,18568+52]..[445,18568+53])
                                Ppat_any
                            ]
                      <when>
                        expression (middle_end/flambda/closure_conversion.ml[446,18623+11]..[446,18623+42])
                          Pexp_apply
                          expression (middle_end/flambda/closure_conversion.ml[446,18623+11]..[446,18623+21])
                            Pexp_ident "Ident.same" (middle_end/flambda/closure_conversion.ml[446,18623+11]..[446,18623+21])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[446,18623+22]..[446,18623+24])
                                Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[446,18623+22]..[446,18623+24])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[446,18623+25]..[446,18623+42])
                                Pexp_field
                                expression (middle_end/flambda/closure_conversion.ml[446,18623+25]..[446,18623+26])
                                  Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[446,18623+25]..[446,18623+26])
                                "current_unit_id" (middle_end/flambda/closure_conversion.ml[446,18623+27]..[446,18623+42])
                          ]
                      expression (middle_end/flambda/closure_conversion.ml[447,18669+4]..[448,18748+55])
                        Pexp_apply
                        expression (middle_end/flambda/closure_conversion.ml[447,18669+4]..[447,18669+21])
                          Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/closure_conversion.ml[447,18669+4]..[447,18669+21])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[447,18669+22]..[448,18748+55])
                              Pexp_constant PConst_string("[Pfield (Pgetglobal ...)] for the current compilation unit is forbidden upon entry to the middle end",(middle_end/flambda/closure_conversion.ml[447,18669+23]..[448,18748+54]),None)
                        ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[449,18804+4]..[449,18804+68])
                        Ppat_construct "Lprim" (middle_end/flambda/closure_conversion.ml[449,18804+4]..[449,18804+9])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[449,18804+10]..[449,18804+68])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[449,18804+11]..[449,18804+30])
                                Ppat_construct "Psetfield" (middle_end/flambda/closure_conversion.ml[449,18804+11]..[449,18804+20])
                                Some
                                  []
                                  pattern (middle_end/flambda/closure_conversion.ml[449,18804+21]..[449,18804+30])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/closure_conversion.ml[449,18804+22]..[449,18804+23])
                                        Ppat_any
                                      pattern (middle_end/flambda/closure_conversion.ml[449,18804+25]..[449,18804+26])
                                        Ppat_any
                                      pattern (middle_end/flambda/closure_conversion.ml[449,18804+28]..[449,18804+29])
                                        Ppat_any
                                    ]
                              pattern (middle_end/flambda/closure_conversion.ml[449,18804+32]..[449,18804+64])
                                Ppat_construct "::" (middle_end/flambda/closure_conversion.ml[449,18804+33]..[449,18804+64]) ghost
                                Some
                                  []
                                  pattern (middle_end/flambda/closure_conversion.ml[449,18804+33]..[449,18804+64]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/closure_conversion.ml[449,18804+33]..[449,18804+60])
                                        Ppat_construct "Lprim" (middle_end/flambda/closure_conversion.ml[449,18804+33]..[449,18804+38])
                                        Some
                                          []
                                          pattern (middle_end/flambda/closure_conversion.ml[449,18804+39]..[449,18804+60])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/closure_conversion.ml[449,18804+40]..[449,18804+52])
                                                Ppat_construct "Pgetglobal" (middle_end/flambda/closure_conversion.ml[449,18804+40]..[449,18804+50])
                                                Some
                                                  []
                                                  pattern (middle_end/flambda/closure_conversion.ml[449,18804+51]..[449,18804+52])
                                                    Ppat_any
                                              pattern (middle_end/flambda/closure_conversion.ml[449,18804+54]..[449,18804+56])
                                                Ppat_construct "[]" (middle_end/flambda/closure_conversion.ml[449,18804+54]..[449,18804+56])
                                                None
                                              pattern (middle_end/flambda/closure_conversion.ml[449,18804+58]..[449,18804+59])
                                                Ppat_any
                                            ]
                                      pattern (middle_end/flambda/closure_conversion.ml[449,18804+62]..[449,18804+64]) ghost
                                        Ppat_construct "::" (middle_end/flambda/closure_conversion.ml[449,18804+62]..[449,18804+64]) ghost
                                        Some
                                          []
                                          pattern (middle_end/flambda/closure_conversion.ml[449,18804+62]..[449,18804+64]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/closure_conversion.ml[449,18804+62]..[449,18804+63])
                                                Ppat_any
                                              pattern (middle_end/flambda/closure_conversion.ml[449,18804+63]..[449,18804+64]) ghost
                                                Ppat_construct "[]" (middle_end/flambda/closure_conversion.ml[449,18804+63]..[449,18804+64]) ghost
                                                None
                                            ]
                                    ]
                              pattern (middle_end/flambda/closure_conversion.ml[449,18804+66]..[449,18804+67])
                                Ppat_any
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[450,18876+4]..[451,18933+47])
                        Pexp_apply
                        expression (middle_end/flambda/closure_conversion.ml[450,18876+4]..[450,18876+21])
                          Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/closure_conversion.ml[450,18876+4]..[450,18876+21])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[450,18876+22]..[451,18933+47])
                              Pexp_constant PConst_string("[Psetfield (Pgetglobal ...)] is forbidden upon entry to the middle end",(middle_end/flambda/closure_conversion.ml[450,18876+23]..[451,18933+46]),None)
                        ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[452,18981+4]..[452,18981+32])
                        Ppat_construct "Lprim" (middle_end/flambda/closure_conversion.ml[452,18981+4]..[452,18981+9])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[452,18981+10]..[452,18981+32])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[452,18981+11]..[452,18981+24])
                                Ppat_construct "Pgetglobal" (middle_end/flambda/closure_conversion.ml[452,18981+11]..[452,18981+21])
                                Some
                                  []
                                  pattern (middle_end/flambda/closure_conversion.ml[452,18981+22]..[452,18981+24])
                                    Ppat_var "id" (middle_end/flambda/closure_conversion.ml[452,18981+22]..[452,18981+24])
                              pattern (middle_end/flambda/closure_conversion.ml[452,18981+26]..[452,18981+28])
                                Ppat_construct "[]" (middle_end/flambda/closure_conversion.ml[452,18981+26]..[452,18981+28])
                                None
                              pattern (middle_end/flambda/closure_conversion.ml[452,18981+30]..[452,18981+31])
                                Ppat_any
                            ]
                      <when>
                        expression (middle_end/flambda/closure_conversion.ml[452,18981+38]..[452,18981+56])
                          Pexp_apply
                          expression (middle_end/flambda/closure_conversion.ml[452,18981+38]..[452,18981+53])
                            Pexp_ident "Ident.is_predef" (middle_end/flambda/closure_conversion.ml[452,18981+38]..[452,18981+53])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[452,18981+54]..[452,18981+56])
                                Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[452,18981+54]..[452,18981+56])
                          ]
                      expression (middle_end/flambda/closure_conversion.ml[453,19041+4]..[455,19153+52])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[453,19041+8]..[453,19041+14])
                              Ppat_var "symbol" (middle_end/flambda/closure_conversion.ml[453,19041+8]..[453,19041+14])
                            expression (middle_end/flambda/closure_conversion.ml[453,19041+17]..[453,19041+40])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[453,19041+17]..[453,19041+37])
                                Pexp_field
                                expression (middle_end/flambda/closure_conversion.ml[453,19041+17]..[453,19041+18])
                                  Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[453,19041+17]..[453,19041+18])
                                "symbol_for_global'" (middle_end/flambda/closure_conversion.ml[453,19041+19]..[453,19041+37])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[453,19041+38]..[453,19041+40])
                                    Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[453,19041+38]..[453,19041+40])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[454,19085+4]..[455,19153+52])
                          Pexp_sequence
                          expression (middle_end/flambda/closure_conversion.ml[454,19085+4]..[454,19085+66])
                            Pexp_setfield
                            expression (middle_end/flambda/closure_conversion.ml[454,19085+4]..[454,19085+5])
                              Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[454,19085+4]..[454,19085+5])
                            "imported_symbols" (middle_end/flambda/closure_conversion.ml[454,19085+6]..[454,19085+22])
                            expression (middle_end/flambda/closure_conversion.ml[454,19085+26]..[454,19085+66])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[454,19085+26]..[454,19085+40])
                                Pexp_ident "Symbol.Set.add" (middle_end/flambda/closure_conversion.ml[454,19085+26]..[454,19085+40])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[454,19085+41]..[454,19085+47])
                                    Pexp_ident "symbol" (middle_end/flambda/closure_conversion.ml[454,19085+41]..[454,19085+47])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[454,19085+48]..[454,19085+66])
                                    Pexp_field
                                    expression (middle_end/flambda/closure_conversion.ml[454,19085+48]..[454,19085+49])
                                      Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[454,19085+48]..[454,19085+49])
                                    "imported_symbols" (middle_end/flambda/closure_conversion.ml[454,19085+50]..[454,19085+66])
                              ]
                          expression (middle_end/flambda/closure_conversion.ml[455,19153+4]..[455,19153+52])
                            Pexp_apply
                            expression (middle_end/flambda/closure_conversion.ml[455,19153+4]..[455,19153+13])
                              Pexp_ident "name_expr" (middle_end/flambda/closure_conversion.ml[455,19153+4]..[455,19153+13])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[455,19153+14]..[455,19153+29])
                                  Pexp_construct "Symbol" (middle_end/flambda/closure_conversion.ml[455,19153+15]..[455,19153+21])
                                  Some
                                    expression (middle_end/flambda/closure_conversion.ml[455,19153+22]..[455,19153+28])
                                      Pexp_ident "symbol" (middle_end/flambda/closure_conversion.ml[455,19153+22]..[455,19153+28])
                              <arg>
                              Labelled "name"
                                expression (middle_end/flambda/closure_conversion.ml[455,19153+36]..[455,19153+52])
                                  Pexp_ident "Names.predef_exn" (middle_end/flambda/closure_conversion.ml[455,19153+36]..[455,19153+52])
                            ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[456,19206+4]..[456,19206+32])
                        Ppat_construct "Lprim" (middle_end/flambda/closure_conversion.ml[456,19206+4]..[456,19206+9])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[456,19206+10]..[456,19206+32])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[456,19206+11]..[456,19206+24])
                                Ppat_construct "Pgetglobal" (middle_end/flambda/closure_conversion.ml[456,19206+11]..[456,19206+21])
                                Some
                                  []
                                  pattern (middle_end/flambda/closure_conversion.ml[456,19206+22]..[456,19206+24])
                                    Ppat_var "id" (middle_end/flambda/closure_conversion.ml[456,19206+22]..[456,19206+24])
                              pattern (middle_end/flambda/closure_conversion.ml[456,19206+26]..[456,19206+28])
                                Ppat_construct "[]" (middle_end/flambda/closure_conversion.ml[456,19206+26]..[456,19206+28])
                                None
                              pattern (middle_end/flambda/closure_conversion.ml[456,19206+30]..[456,19206+31])
                                Ppat_any
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[457,19242+4]..[460,19406+52])
                        Pexp_sequence
                        expression (middle_end/flambda/closure_conversion.ml[457,19242+4]..[457,19242+50])
                          Pexp_assert
                          expression (middle_end/flambda/closure_conversion.ml[457,19242+11]..[457,19242+50])
                            Pexp_apply
                            expression (middle_end/flambda/closure_conversion.ml[457,19242+12]..[457,19242+15])
                              Pexp_ident "not" (middle_end/flambda/closure_conversion.ml[457,19242+12]..[457,19242+15])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[457,19242+16]..[457,19242+49])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[457,19242+17]..[457,19242+27])
                                    Pexp_ident "Ident.same" (middle_end/flambda/closure_conversion.ml[457,19242+17]..[457,19242+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[457,19242+28]..[457,19242+30])
                                        Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[457,19242+28]..[457,19242+30])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[457,19242+31]..[457,19242+48])
                                        Pexp_field
                                        expression (middle_end/flambda/closure_conversion.ml[457,19242+31]..[457,19242+32])
                                          Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[457,19242+31]..[457,19242+32])
                                        "current_unit_id" (middle_end/flambda/closure_conversion.ml[457,19242+33]..[457,19242+48])
                                  ]
                            ]
                        expression (middle_end/flambda/closure_conversion.ml[458,19294+4]..[460,19406+52])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[458,19294+8]..[458,19294+14])
                                Ppat_var "symbol" (middle_end/flambda/closure_conversion.ml[458,19294+8]..[458,19294+14])
                              expression (middle_end/flambda/closure_conversion.ml[458,19294+17]..[458,19294+40])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[458,19294+17]..[458,19294+37])
                                  Pexp_field
                                  expression (middle_end/flambda/closure_conversion.ml[458,19294+17]..[458,19294+18])
                                    Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[458,19294+17]..[458,19294+18])
                                  "symbol_for_global'" (middle_end/flambda/closure_conversion.ml[458,19294+19]..[458,19294+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[458,19294+38]..[458,19294+40])
                                      Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[458,19294+38]..[458,19294+40])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[459,19338+4]..[460,19406+52])
                            Pexp_sequence
                            expression (middle_end/flambda/closure_conversion.ml[459,19338+4]..[459,19338+66])
                              Pexp_setfield
                              expression (middle_end/flambda/closure_conversion.ml[459,19338+4]..[459,19338+5])
                                Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[459,19338+4]..[459,19338+5])
                              "imported_symbols" (middle_end/flambda/closure_conversion.ml[459,19338+6]..[459,19338+22])
                              expression (middle_end/flambda/closure_conversion.ml[459,19338+26]..[459,19338+66])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[459,19338+26]..[459,19338+40])
                                  Pexp_ident "Symbol.Set.add" (middle_end/flambda/closure_conversion.ml[459,19338+26]..[459,19338+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[459,19338+41]..[459,19338+47])
                                      Pexp_ident "symbol" (middle_end/flambda/closure_conversion.ml[459,19338+41]..[459,19338+47])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[459,19338+48]..[459,19338+66])
                                      Pexp_field
                                      expression (middle_end/flambda/closure_conversion.ml[459,19338+48]..[459,19338+49])
                                        Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[459,19338+48]..[459,19338+49])
                                      "imported_symbols" (middle_end/flambda/closure_conversion.ml[459,19338+50]..[459,19338+66])
                                ]
                            expression (middle_end/flambda/closure_conversion.ml[460,19406+4]..[460,19406+52])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[460,19406+4]..[460,19406+13])
                                Pexp_ident "name_expr" (middle_end/flambda/closure_conversion.ml[460,19406+4]..[460,19406+13])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[460,19406+14]..[460,19406+29])
                                    Pexp_construct "Symbol" (middle_end/flambda/closure_conversion.ml[460,19406+15]..[460,19406+21])
                                    Some
                                      expression (middle_end/flambda/closure_conversion.ml[460,19406+22]..[460,19406+28])
                                        Pexp_ident "symbol" (middle_end/flambda/closure_conversion.ml[460,19406+22]..[460,19406+28])
                                <arg>
                                Labelled "name"
                                  expression (middle_end/flambda/closure_conversion.ml[460,19406+36]..[460,19406+52])
                                    Pexp_ident "Names.pgetglobal" (middle_end/flambda/closure_conversion.ml[460,19406+36]..[460,19406+52])
                              ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[461,19459+4]..[461,19459+31])
                        Ppat_construct "Lprim" (middle_end/flambda/closure_conversion.ml[461,19459+4]..[461,19459+9])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[461,19459+10]..[461,19459+31])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[461,19459+11]..[461,19459+19])
                                Ppat_var "lambda_p" (middle_end/flambda/closure_conversion.ml[461,19459+11]..[461,19459+19])
                              pattern (middle_end/flambda/closure_conversion.ml[461,19459+21]..[461,19459+25])
                                Ppat_var "args" (middle_end/flambda/closure_conversion.ml[461,19459+21]..[461,19459+25])
                              pattern (middle_end/flambda/closure_conversion.ml[461,19459+27]..[461,19459+30])
                                Ppat_var "loc" (middle_end/flambda/closure_conversion.ml[461,19459+27]..[461,19459+30])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[468,19891+4]..[475,20197+46])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[468,19891+8]..[468,19891+11])
                              Ppat_var "dbg" (middle_end/flambda/closure_conversion.ml[468,19891+8]..[468,19891+11])
                            expression (middle_end/flambda/closure_conversion.ml[468,19891+14]..[468,19891+41])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[468,19891+14]..[468,19891+37])
                                Pexp_ident "Debuginfo.from_location" (middle_end/flambda/closure_conversion.ml[468,19891+14]..[468,19891+37])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[468,19891+38]..[468,19891+41])
                                    Pexp_ident "loc" (middle_end/flambda/closure_conversion.ml[468,19891+38]..[468,19891+41])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[469,19936+4]..[475,20197+46])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[469,19936+8]..[469,19936+9])
                                Ppat_var "p" (middle_end/flambda/closure_conversion.ml[469,19936+8]..[469,19936+9])
                              expression (middle_end/flambda/closure_conversion.ml[469,19936+12]..[469,19936+47])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[469,19936+12]..[469,19936+38])
                                  Pexp_ident "Convert_primitives.convert" (middle_end/flambda/closure_conversion.ml[469,19936+12]..[469,19936+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[469,19936+39]..[469,19936+47])
                                      Pexp_ident "lambda_p" (middle_end/flambda/closure_conversion.ml[469,19936+39]..[469,19936+47])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[470,19987+4]..[475,20197+46])
                            Pexp_apply
                            expression (middle_end/flambda/closure_conversion.ml[470,19987+4]..[470,19987+28])
                              Pexp_ident "Lift_code.lifting_helper" (middle_end/flambda/closure_conversion.ml[470,19987+4]..[470,19987+28])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[470,19987+29]..[470,19987+52])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[470,19987+30]..[470,19987+40])
                                    Pexp_ident "close_list" (middle_end/flambda/closure_conversion.ml[470,19987+30]..[470,19987+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[470,19987+41]..[470,19987+42])
                                        Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[470,19987+41]..[470,19987+42])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[470,19987+43]..[470,19987+46])
                                        Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[470,19987+43]..[470,19987+46])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[470,19987+47]..[470,19987+51])
                                        Pexp_ident "args" (middle_end/flambda/closure_conversion.ml[470,19987+47]..[470,19987+51])
                                  ]
                              <arg>
                              Labelled "evaluation_order"
                                expression (middle_end/flambda/closure_conversion.ml[471,20040+24]..[471,20040+38])
                                  Pexp_variant "Right_to_left"
                                  None
                              <arg>
                              Labelled "name"
                                expression (middle_end/flambda/closure_conversion.ml[472,20079+12]..[472,20079+45])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[472,20079+13]..[472,20079+35])
                                    Pexp_ident "Names.of_primitive_arg" (middle_end/flambda/closure_conversion.ml[472,20079+13]..[472,20079+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[472,20079+36]..[472,20079+44])
                                        Pexp_ident "lambda_p" (middle_end/flambda/closure_conversion.ml[472,20079+36]..[472,20079+44])
                                  ]
                              <arg>
                              Labelled "create_body"
                                expression (middle_end/flambda/closure_conversion.ml[473,20125+19]..[475,20197+46])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/closure_conversion.ml[473,20125+24]..[473,20125+28])
                                    Ppat_var "args" (middle_end/flambda/closure_conversion.ml[473,20125+24]..[473,20125+28])
                                  expression (middle_end/flambda/closure_conversion.ml[474,20157+8]..[475,20197+45])
                                    Pexp_apply
                                    expression (middle_end/flambda/closure_conversion.ml[474,20157+8]..[474,20157+17])
                                      Pexp_ident "name_expr" (middle_end/flambda/closure_conversion.ml[474,20157+8]..[474,20157+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[474,20157+18]..[474,20157+39])
                                          Pexp_construct "Prim" (middle_end/flambda/closure_conversion.ml[474,20157+19]..[474,20157+23])
                                          Some
                                            expression (middle_end/flambda/closure_conversion.ml[474,20157+24]..[474,20157+38])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/flambda/closure_conversion.ml[474,20157+25]..[474,20157+26])
                                                  Pexp_ident "p" (middle_end/flambda/closure_conversion.ml[474,20157+25]..[474,20157+26])
                                                expression (middle_end/flambda/closure_conversion.ml[474,20157+28]..[474,20157+32])
                                                  Pexp_ident "args" (middle_end/flambda/closure_conversion.ml[474,20157+28]..[474,20157+32])
                                                expression (middle_end/flambda/closure_conversion.ml[474,20157+34]..[474,20157+37])
                                                  Pexp_ident "dbg" (middle_end/flambda/closure_conversion.ml[474,20157+34]..[474,20157+37])
                                              ]
                                      <arg>
                                      Labelled "name"
                                        expression (middle_end/flambda/closure_conversion.ml[475,20197+16]..[475,20197+45])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[475,20197+17]..[475,20197+35])
                                            Pexp_ident "Names.of_primitive" (middle_end/flambda/closure_conversion.ml[475,20197+17]..[475,20197+35])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[475,20197+36]..[475,20197+44])
                                                Pexp_ident "lambda_p" (middle_end/flambda/closure_conversion.ml[475,20197+36]..[475,20197+44])
                                          ]
                                    ]
                            ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[476,20244+4]..[476,20244+27])
                        Ppat_construct "Lswitch" (middle_end/flambda/closure_conversion.ml[476,20244+4]..[476,20244+11])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[476,20244+12]..[476,20244+27])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[476,20244+13]..[476,20244+16])
                                Ppat_var "arg" (middle_end/flambda/closure_conversion.ml[476,20244+13]..[476,20244+16])
                              pattern (middle_end/flambda/closure_conversion.ml[476,20244+18]..[476,20244+20])
                                Ppat_var "sw" (middle_end/flambda/closure_conversion.ml[476,20244+18]..[476,20244+20])
                              pattern (middle_end/flambda/closure_conversion.ml[476,20244+22]..[476,20244+26])
                                Ppat_var "_loc" (middle_end/flambda/closure_conversion.ml[476,20244+22]..[476,20244+26])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[477,20275+4]..[494,21014+11])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[477,20275+8]..[477,20275+17])
                              Ppat_var "scrutinee" (middle_end/flambda/closure_conversion.ml[477,20275+8]..[477,20275+17])
                            expression (middle_end/flambda/closure_conversion.ml[477,20275+20]..[477,20275+48])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[477,20275+20]..[477,20275+35])
                                Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[477,20275+20]..[477,20275+35])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[477,20275+36]..[477,20275+48])
                                    Pexp_ident "Names.switch" (middle_end/flambda/closure_conversion.ml[477,20275+36]..[477,20275+48])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[478,20327+4]..[494,21014+11])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[478,20327+8]..[478,20327+11])
                                Ppat_var "aux" (middle_end/flambda/closure_conversion.ml[478,20327+8]..[478,20327+11])
                              expression (middle_end/flambda/closure_conversion.ml[478,20327+12]..[478,20327+41]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/closure_conversion.ml[478,20327+12]..[478,20327+20])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/closure_conversion.ml[478,20327+13]..[478,20327+14])
                                      Ppat_var "i" (middle_end/flambda/closure_conversion.ml[478,20327+13]..[478,20327+14])
                                    pattern (middle_end/flambda/closure_conversion.ml[478,20327+16]..[478,20327+19])
                                      Ppat_var "lam" (middle_end/flambda/closure_conversion.ml[478,20327+16]..[478,20327+19])
                                  ]
                                expression (middle_end/flambda/closure_conversion.ml[478,20327+23]..[478,20327+41])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/closure_conversion.ml[478,20327+23]..[478,20327+24])
                                      Pexp_ident "i" (middle_end/flambda/closure_conversion.ml[478,20327+23]..[478,20327+24])
                                    expression (middle_end/flambda/closure_conversion.ml[478,20327+26]..[478,20327+41])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[478,20327+26]..[478,20327+31])
                                        Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[478,20327+26]..[478,20327+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[478,20327+32]..[478,20327+33])
                                            Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[478,20327+32]..[478,20327+33])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[478,20327+34]..[478,20327+37])
                                            Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[478,20327+34]..[478,20327+37])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[478,20327+38]..[478,20327+41])
                                            Pexp_ident "lam" (middle_end/flambda/closure_conversion.ml[478,20327+38]..[478,20327+41])
                                      ]
                                  ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[479,20372+4]..[494,21014+11])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/closure_conversion.ml[479,20372+8]..[479,20372+12])
                                  Ppat_var "nums" (middle_end/flambda/closure_conversion.ml[479,20372+8]..[479,20372+12])
                                expression (middle_end/flambda/closure_conversion.ml[479,20372+13]..[485,20538+78]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/closure_conversion.ml[479,20372+13]..[479,20372+19])
                                    Ppat_var "sw_num" (middle_end/flambda/closure_conversion.ml[479,20372+13]..[479,20372+19])
                                  expression (middle_end/flambda/closure_conversion.ml[479,20372+20]..[485,20538+78]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/closure_conversion.ml[479,20372+20]..[479,20372+25])
                                      Ppat_var "cases" (middle_end/flambda/closure_conversion.ml[479,20372+20]..[479,20372+25])
                                    expression (middle_end/flambda/closure_conversion.ml[479,20372+26]..[485,20538+78]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/closure_conversion.ml[479,20372+26]..[479,20372+33])
                                        Ppat_var "default" (middle_end/flambda/closure_conversion.ml[479,20372+26]..[479,20372+33])
                                      expression (middle_end/flambda/closure_conversion.ml[480,20408+6]..[485,20538+78])
                                        Pexp_letmodule "I" (middle_end/flambda/closure_conversion.ml[480,20408+17]..[480,20408+18])
                                        module_expr (middle_end/flambda/closure_conversion.ml[480,20408+21]..[480,20408+32])
                                          Pmod_ident "Numbers.Int" (middle_end/flambda/closure_conversion.ml[480,20408+21]..[480,20408+32])
                                        expression (middle_end/flambda/closure_conversion.ml[481,20444+6]..[485,20538+78])
                                          Pexp_match
                                          expression (middle_end/flambda/closure_conversion.ml[481,20444+12]..[481,20444+19])
                                            Pexp_ident "default" (middle_end/flambda/closure_conversion.ml[481,20444+12]..[481,20444+19])
                                          [
                                            <case>
                                              pattern (middle_end/flambda/closure_conversion.ml[482,20469+8]..[482,20469+14])
                                                Ppat_construct "Some" (middle_end/flambda/closure_conversion.ml[482,20469+8]..[482,20469+12])
                                                Some
                                                  []
                                                  pattern (middle_end/flambda/closure_conversion.ml[482,20469+13]..[482,20469+14])
                                                    Ppat_any
                                              expression (middle_end/flambda/closure_conversion.ml[483,20487+10]..[483,20487+34])
                                                Pexp_apply
                                                expression (middle_end/flambda/closure_conversion.ml[483,20487+10]..[483,20487+21])
                                                  Pexp_ident "I.zero_to_n" (middle_end/flambda/closure_conversion.ml[483,20487+10]..[483,20487+21])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/closure_conversion.ml[483,20487+22]..[483,20487+34])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/closure_conversion.ml[483,20487+30]..[483,20487+31])
                                                        Pexp_ident "-" (middle_end/flambda/closure_conversion.ml[483,20487+30]..[483,20487+31])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/closure_conversion.ml[483,20487+23]..[483,20487+29])
                                                            Pexp_ident "sw_num" (middle_end/flambda/closure_conversion.ml[483,20487+23]..[483,20487+29])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/closure_conversion.ml[483,20487+32]..[483,20487+33])
                                                            Pexp_constant PConst_int (1,None)
                                                      ]
                                                ]
                                            <case>
                                              pattern (middle_end/flambda/closure_conversion.ml[484,20522+8]..[484,20522+12])
                                                Ppat_construct "None" (middle_end/flambda/closure_conversion.ml[484,20522+8]..[484,20522+12])
                                                None
                                              expression (middle_end/flambda/closure_conversion.ml[485,20538+10]..[485,20538+78])
                                                Pexp_apply
                                                expression (middle_end/flambda/closure_conversion.ml[485,20538+10]..[485,20538+24])
                                                  Pexp_ident "List.fold_left" (middle_end/flambda/closure_conversion.ml[485,20538+10]..[485,20538+24])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/closure_conversion.ml[485,20538+25]..[485,20538+60])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (middle_end/flambda/closure_conversion.ml[485,20538+30]..[485,20538+33])
                                                        Ppat_var "set" (middle_end/flambda/closure_conversion.ml[485,20538+30]..[485,20538+33])
                                                      expression (middle_end/flambda/closure_conversion.ml[485,20538+34]..[485,20538+59]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/flambda/closure_conversion.ml[485,20538+34]..[485,20538+40])
                                                          Ppat_tuple
                                                          [
                                                            pattern (middle_end/flambda/closure_conversion.ml[485,20538+35]..[485,20538+36])
                                                              Ppat_var "i" (middle_end/flambda/closure_conversion.ml[485,20538+35]..[485,20538+36])
                                                            pattern (middle_end/flambda/closure_conversion.ml[485,20538+38]..[485,20538+39])
                                                              Ppat_any
                                                          ]
                                                        expression (middle_end/flambda/closure_conversion.ml[485,20538+44]..[485,20538+59])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/closure_conversion.ml[485,20538+44]..[485,20538+53])
                                                            Pexp_ident "I.Set.add" (middle_end/flambda/closure_conversion.ml[485,20538+44]..[485,20538+53])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/closure_conversion.ml[485,20538+54]..[485,20538+55])
                                                                Pexp_ident "i" (middle_end/flambda/closure_conversion.ml[485,20538+54]..[485,20538+55])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/closure_conversion.ml[485,20538+56]..[485,20538+59])
                                                                Pexp_ident "set" (middle_end/flambda/closure_conversion.ml[485,20538+56]..[485,20538+59])
                                                          ]
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/closure_conversion.ml[485,20538+61]..[485,20538+72])
                                                      Pexp_ident "I.Set.empty" (middle_end/flambda/closure_conversion.ml[485,20538+61]..[485,20538+72])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/closure_conversion.ml[485,20538+73]..[485,20538+78])
                                                      Pexp_ident "cases" (middle_end/flambda/closure_conversion.ml[485,20538+73]..[485,20538+78])
                                                ]
                                          ]
                            ]
                            expression (middle_end/flambda/closure_conversion.ml[487,20624+4]..[494,21014+11])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[487,20624+4]..[487,20624+22])
                                Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[487,20624+4]..[487,20624+22])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[487,20624+23]..[487,20624+32])
                                    Pexp_ident "scrutinee" (middle_end/flambda/closure_conversion.ml[487,20624+23]..[487,20624+32])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[487,20624+33]..[487,20624+57])
                                    Pexp_construct "Expr" (middle_end/flambda/closure_conversion.ml[487,20624+34]..[487,20624+38])
                                    Some
                                      expression (middle_end/flambda/closure_conversion.ml[487,20624+39]..[487,20624+56])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[487,20624+40]..[487,20624+45])
                                          Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[487,20624+40]..[487,20624+45])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[487,20624+46]..[487,20624+47])
                                              Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[487,20624+46]..[487,20624+47])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[487,20624+48]..[487,20624+51])
                                              Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[487,20624+48]..[487,20624+51])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[487,20624+52]..[487,20624+55])
                                              Pexp_ident "arg" (middle_end/flambda/closure_conversion.ml[487,20624+52]..[487,20624+55])
                                        ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[488,20682+6]..[494,21014+11])
                                    Pexp_construct "Switch" (middle_end/flambda/closure_conversion.ml[488,20682+7]..[488,20682+13])
                                    Some
                                      expression (middle_end/flambda/closure_conversion.ml[488,20682+14]..[494,21014+10])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/flambda/closure_conversion.ml[488,20682+15]..[488,20682+24])
                                            Pexp_ident "scrutinee" (middle_end/flambda/closure_conversion.ml[488,20682+15]..[488,20682+24])
                                          expression (middle_end/flambda/closure_conversion.ml[489,20708+8]..[494,21014+9])
                                            Pexp_record
                                            [
                                              "numconsts" (middle_end/flambda/closure_conversion.ml[489,20708+10]..[489,20708+19])
                                                expression (middle_end/flambda/closure_conversion.ml[489,20708+22]..[489,20708+72])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/closure_conversion.ml[489,20708+22]..[489,20708+26])
                                                    Pexp_ident "nums" (middle_end/flambda/closure_conversion.ml[489,20708+22]..[489,20708+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[489,20708+27]..[489,20708+42])
                                                        Pexp_field
                                                        expression (middle_end/flambda/closure_conversion.ml[489,20708+27]..[489,20708+29])
                                                          Pexp_ident "sw" (middle_end/flambda/closure_conversion.ml[489,20708+27]..[489,20708+29])
                                                        "sw_numconsts" (middle_end/flambda/closure_conversion.ml[489,20708+30]..[489,20708+42])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[489,20708+43]..[489,20708+55])
                                                        Pexp_field
                                                        expression (middle_end/flambda/closure_conversion.ml[489,20708+43]..[489,20708+45])
                                                          Pexp_ident "sw" (middle_end/flambda/closure_conversion.ml[489,20708+43]..[489,20708+45])
                                                        "sw_consts" (middle_end/flambda/closure_conversion.ml[489,20708+46]..[489,20708+55])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[489,20708+56]..[489,20708+72])
                                                        Pexp_field
                                                        expression (middle_end/flambda/closure_conversion.ml[489,20708+56]..[489,20708+58])
                                                          Pexp_ident "sw" (middle_end/flambda/closure_conversion.ml[489,20708+56]..[489,20708+58])
                                                        "sw_failaction" (middle_end/flambda/closure_conversion.ml[489,20708+59]..[489,20708+72])
                                                  ]
                                              "consts" (middle_end/flambda/closure_conversion.ml[490,20782+10]..[490,20782+16])
                                                expression (middle_end/flambda/closure_conversion.ml[490,20782+19]..[490,20782+44])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/closure_conversion.ml[490,20782+19]..[490,20782+27])
                                                    Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[490,20782+19]..[490,20782+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[490,20782+28]..[490,20782+31])
                                                        Pexp_ident "aux" (middle_end/flambda/closure_conversion.ml[490,20782+28]..[490,20782+31])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[490,20782+32]..[490,20782+44])
                                                        Pexp_field
                                                        expression (middle_end/flambda/closure_conversion.ml[490,20782+32]..[490,20782+34])
                                                          Pexp_ident "sw" (middle_end/flambda/closure_conversion.ml[490,20782+32]..[490,20782+34])
                                                        "sw_consts" (middle_end/flambda/closure_conversion.ml[490,20782+35]..[490,20782+44])
                                                  ]
                                              "numblocks" (middle_end/flambda/closure_conversion.ml[491,20828+10]..[491,20828+19])
                                                expression (middle_end/flambda/closure_conversion.ml[491,20828+22]..[491,20828+72])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/closure_conversion.ml[491,20828+22]..[491,20828+26])
                                                    Pexp_ident "nums" (middle_end/flambda/closure_conversion.ml[491,20828+22]..[491,20828+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[491,20828+27]..[491,20828+42])
                                                        Pexp_field
                                                        expression (middle_end/flambda/closure_conversion.ml[491,20828+27]..[491,20828+29])
                                                          Pexp_ident "sw" (middle_end/flambda/closure_conversion.ml[491,20828+27]..[491,20828+29])
                                                        "sw_numblocks" (middle_end/flambda/closure_conversion.ml[491,20828+30]..[491,20828+42])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[491,20828+43]..[491,20828+55])
                                                        Pexp_field
                                                        expression (middle_end/flambda/closure_conversion.ml[491,20828+43]..[491,20828+45])
                                                          Pexp_ident "sw" (middle_end/flambda/closure_conversion.ml[491,20828+43]..[491,20828+45])
                                                        "sw_blocks" (middle_end/flambda/closure_conversion.ml[491,20828+46]..[491,20828+55])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[491,20828+56]..[491,20828+72])
                                                        Pexp_field
                                                        expression (middle_end/flambda/closure_conversion.ml[491,20828+56]..[491,20828+58])
                                                          Pexp_ident "sw" (middle_end/flambda/closure_conversion.ml[491,20828+56]..[491,20828+58])
                                                        "sw_failaction" (middle_end/flambda/closure_conversion.ml[491,20828+59]..[491,20828+72])
                                                  ]
                                              "blocks" (middle_end/flambda/closure_conversion.ml[492,20902+10]..[492,20902+16])
                                                expression (middle_end/flambda/closure_conversion.ml[492,20902+19]..[492,20902+44])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/closure_conversion.ml[492,20902+19]..[492,20902+27])
                                                    Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[492,20902+19]..[492,20902+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[492,20902+28]..[492,20902+31])
                                                        Pexp_ident "aux" (middle_end/flambda/closure_conversion.ml[492,20902+28]..[492,20902+31])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[492,20902+32]..[492,20902+44])
                                                        Pexp_field
                                                        expression (middle_end/flambda/closure_conversion.ml[492,20902+32]..[492,20902+34])
                                                          Pexp_ident "sw" (middle_end/flambda/closure_conversion.ml[492,20902+32]..[492,20902+34])
                                                        "sw_blocks" (middle_end/flambda/closure_conversion.ml[492,20902+35]..[492,20902+44])
                                                  ]
                                              "failaction" (middle_end/flambda/closure_conversion.ml[493,20948+10]..[493,20948+20])
                                                expression (middle_end/flambda/closure_conversion.ml[493,20948+23]..[493,20948+64])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/closure_conversion.ml[493,20948+23]..[493,20948+33])
                                                    Pexp_ident "Option.map" (middle_end/flambda/closure_conversion.ml[493,20948+23]..[493,20948+33])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[493,20948+34]..[493,20948+47])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/closure_conversion.ml[493,20948+35]..[493,20948+40])
                                                          Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[493,20948+35]..[493,20948+40])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/closure_conversion.ml[493,20948+41]..[493,20948+42])
                                                              Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[493,20948+41]..[493,20948+42])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/closure_conversion.ml[493,20948+43]..[493,20948+46])
                                                              Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[493,20948+43]..[493,20948+46])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[493,20948+48]..[493,20948+64])
                                                        Pexp_field
                                                        expression (middle_end/flambda/closure_conversion.ml[493,20948+48]..[493,20948+50])
                                                          Pexp_ident "sw" (middle_end/flambda/closure_conversion.ml[493,20948+48]..[493,20948+50])
                                                        "sw_failaction" (middle_end/flambda/closure_conversion.ml[493,20948+51]..[493,20948+64])
                                                  ]
                                            ]
                                            None
                                        ]
                              ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[495,21026+4]..[495,21026+35])
                        Ppat_construct "Lstringswitch" (middle_end/flambda/closure_conversion.ml[495,21026+4]..[495,21026+17])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[495,21026+18]..[495,21026+35])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[495,21026+19]..[495,21026+22])
                                Ppat_var "arg" (middle_end/flambda/closure_conversion.ml[495,21026+19]..[495,21026+22])
                              pattern (middle_end/flambda/closure_conversion.ml[495,21026+24]..[495,21026+26])
                                Ppat_var "sw" (middle_end/flambda/closure_conversion.ml[495,21026+24]..[495,21026+26])
                              pattern (middle_end/flambda/closure_conversion.ml[495,21026+28]..[495,21026+31])
                                Ppat_var "def" (middle_end/flambda/closure_conversion.ml[495,21026+28]..[495,21026+31])
                              pattern (middle_end/flambda/closure_conversion.ml[495,21026+33]..[495,21026+34])
                                Ppat_any
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[496,21065+4]..[500,21269+38])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[496,21065+8]..[496,21065+17])
                              Ppat_var "scrutinee" (middle_end/flambda/closure_conversion.ml[496,21065+8]..[496,21065+17])
                            expression (middle_end/flambda/closure_conversion.ml[496,21065+20]..[496,21065+55])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[496,21065+20]..[496,21065+35])
                                Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[496,21065+20]..[496,21065+35])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[496,21065+36]..[496,21065+55])
                                    Pexp_ident "Names.string_switch" (middle_end/flambda/closure_conversion.ml[496,21065+36]..[496,21065+55])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[497,21124+4]..[500,21269+38])
                          Pexp_apply
                          expression (middle_end/flambda/closure_conversion.ml[497,21124+4]..[497,21124+22])
                            Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[497,21124+4]..[497,21124+22])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[497,21124+23]..[497,21124+32])
                                Pexp_ident "scrutinee" (middle_end/flambda/closure_conversion.ml[497,21124+23]..[497,21124+32])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[497,21124+33]..[497,21124+57])
                                Pexp_construct "Expr" (middle_end/flambda/closure_conversion.ml[497,21124+34]..[497,21124+38])
                                Some
                                  expression (middle_end/flambda/closure_conversion.ml[497,21124+39]..[497,21124+56])
                                    Pexp_apply
                                    expression (middle_end/flambda/closure_conversion.ml[497,21124+40]..[497,21124+45])
                                      Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[497,21124+40]..[497,21124+45])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[497,21124+46]..[497,21124+47])
                                          Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[497,21124+46]..[497,21124+47])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[497,21124+48]..[497,21124+51])
                                          Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[497,21124+48]..[497,21124+51])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[497,21124+52]..[497,21124+55])
                                          Pexp_ident "arg" (middle_end/flambda/closure_conversion.ml[497,21124+52]..[497,21124+55])
                                    ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[498,21182+6]..[500,21269+38])
                                Pexp_construct "String_switch" (middle_end/flambda/closure_conversion.ml[498,21182+7]..[498,21182+20])
                                Some
                                  expression (middle_end/flambda/closure_conversion.ml[498,21182+21]..[500,21269+37])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/closure_conversion.ml[498,21182+22]..[498,21182+31])
                                        Pexp_ident "scrutinee" (middle_end/flambda/closure_conversion.ml[498,21182+22]..[498,21182+31])
                                      expression (middle_end/flambda/closure_conversion.ml[499,21215+8]..[499,21215+52])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[499,21215+8]..[499,21215+16])
                                          Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[499,21215+8]..[499,21215+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[499,21215+17]..[499,21215+49])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/flambda/closure_conversion.ml[499,21215+22]..[499,21215+28])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/flambda/closure_conversion.ml[499,21215+23]..[499,21215+24])
                                                    Ppat_var "s" (middle_end/flambda/closure_conversion.ml[499,21215+23]..[499,21215+24])
                                                  pattern (middle_end/flambda/closure_conversion.ml[499,21215+26]..[499,21215+27])
                                                    Ppat_var "e" (middle_end/flambda/closure_conversion.ml[499,21215+26]..[499,21215+27])
                                                ]
                                              expression (middle_end/flambda/closure_conversion.ml[499,21215+32]..[499,21215+48])
                                                Pexp_tuple
                                                [
                                                  expression (middle_end/flambda/closure_conversion.ml[499,21215+32]..[499,21215+33])
                                                    Pexp_ident "s" (middle_end/flambda/closure_conversion.ml[499,21215+32]..[499,21215+33])
                                                  expression (middle_end/flambda/closure_conversion.ml[499,21215+35]..[499,21215+48])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/closure_conversion.ml[499,21215+35]..[499,21215+40])
                                                      Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[499,21215+35]..[499,21215+40])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[499,21215+41]..[499,21215+42])
                                                          Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[499,21215+41]..[499,21215+42])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[499,21215+43]..[499,21215+46])
                                                          Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[499,21215+43]..[499,21215+46])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[499,21215+47]..[499,21215+48])
                                                          Pexp_ident "e" (middle_end/flambda/closure_conversion.ml[499,21215+47]..[499,21215+48])
                                                    ]
                                                ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[499,21215+50]..[499,21215+52])
                                              Pexp_ident "sw" (middle_end/flambda/closure_conversion.ml[499,21215+50]..[499,21215+52])
                                        ]
                                      expression (middle_end/flambda/closure_conversion.ml[500,21269+8]..[500,21269+36])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[500,21269+8]..[500,21269+18])
                                          Pexp_ident "Option.map" (middle_end/flambda/closure_conversion.ml[500,21269+8]..[500,21269+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[500,21269+19]..[500,21269+32])
                                              Pexp_apply
                                              expression (middle_end/flambda/closure_conversion.ml[500,21269+20]..[500,21269+25])
                                                Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[500,21269+20]..[500,21269+25])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[500,21269+26]..[500,21269+27])
                                                    Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[500,21269+26]..[500,21269+27])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[500,21269+28]..[500,21269+31])
                                                    Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[500,21269+28]..[500,21269+31])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[500,21269+33]..[500,21269+36])
                                              Pexp_ident "def" (middle_end/flambda/closure_conversion.ml[500,21269+33]..[500,21269+36])
                                        ]
                                    ]
                          ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[501,21308+4]..[501,21308+26])
                        Ppat_construct "Lstaticraise" (middle_end/flambda/closure_conversion.ml[501,21308+4]..[501,21308+16])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[501,21308+17]..[501,21308+26])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[501,21308+18]..[501,21308+19])
                                Ppat_var "i" (middle_end/flambda/closure_conversion.ml[501,21308+18]..[501,21308+19])
                              pattern (middle_end/flambda/closure_conversion.ml[501,21308+21]..[501,21308+25])
                                Ppat_var "args" (middle_end/flambda/closure_conversion.ml[501,21308+21]..[501,21308+25])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[502,21338+4]..[507,21556+40])
                        Pexp_apply
                        expression (middle_end/flambda/closure_conversion.ml[502,21338+4]..[502,21338+28])
                          Pexp_ident "Lift_code.lifting_helper" (middle_end/flambda/closure_conversion.ml[502,21338+4]..[502,21338+28])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[502,21338+29]..[502,21338+52])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[502,21338+30]..[502,21338+40])
                                Pexp_ident "close_list" (middle_end/flambda/closure_conversion.ml[502,21338+30]..[502,21338+40])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[502,21338+41]..[502,21338+42])
                                    Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[502,21338+41]..[502,21338+42])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[502,21338+43]..[502,21338+46])
                                    Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[502,21338+43]..[502,21338+46])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[502,21338+47]..[502,21338+51])
                                    Pexp_ident "args" (middle_end/flambda/closure_conversion.ml[502,21338+47]..[502,21338+51])
                              ]
                          <arg>
                          Labelled "evaluation_order"
                            expression (middle_end/flambda/closure_conversion.ml[503,21391+24]..[503,21391+38])
                              Pexp_variant "Right_to_left"
                              None
                          <arg>
                          Labelled "name"
                            expression (middle_end/flambda/closure_conversion.ml[504,21430+12]..[504,21430+33])
                              Pexp_ident "Names.staticraise_arg" (middle_end/flambda/closure_conversion.ml[504,21430+12]..[504,21430+33])
                          <arg>
                          Labelled "create_body"
                            expression (middle_end/flambda/closure_conversion.ml[505,21464+19]..[507,21556+40])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/closure_conversion.ml[505,21464+24]..[505,21464+28])
                                Ppat_var "args" (middle_end/flambda/closure_conversion.ml[505,21464+24]..[505,21464+28])
                              expression (middle_end/flambda/closure_conversion.ml[506,21496+8]..[507,21556+39])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/closure_conversion.ml[506,21496+12]..[506,21496+22])
                                      Ppat_var "static_exn" (middle_end/flambda/closure_conversion.ml[506,21496+12]..[506,21496+22])
                                    expression (middle_end/flambda/closure_conversion.ml[506,21496+25]..[506,21496+56])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[506,21496+25]..[506,21496+50])
                                        Pexp_ident "Env.find_static_exception" (middle_end/flambda/closure_conversion.ml[506,21496+25]..[506,21496+50])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[506,21496+51]..[506,21496+54])
                                            Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[506,21496+51]..[506,21496+54])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[506,21496+55]..[506,21496+56])
                                            Pexp_ident "i" (middle_end/flambda/closure_conversion.ml[506,21496+55]..[506,21496+56])
                                      ]
                                ]
                                expression (middle_end/flambda/closure_conversion.ml[507,21556+8]..[507,21556+39])
                                  Pexp_construct "Static_raise" (middle_end/flambda/closure_conversion.ml[507,21556+8]..[507,21556+20])
                                  Some
                                    expression (middle_end/flambda/closure_conversion.ml[507,21556+21]..[507,21556+39])
                                      Pexp_tuple
                                      [
                                        expression (middle_end/flambda/closure_conversion.ml[507,21556+22]..[507,21556+32])
                                          Pexp_ident "static_exn" (middle_end/flambda/closure_conversion.ml[507,21556+22]..[507,21556+32])
                                        expression (middle_end/flambda/closure_conversion.ml[507,21556+34]..[507,21556+38])
                                          Pexp_ident "args" (middle_end/flambda/closure_conversion.ml[507,21556+34]..[507,21556+38])
                                      ]
                        ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[508,21597+4]..[508,21597+42])
                        Ppat_construct "Lstaticcatch" (middle_end/flambda/closure_conversion.ml[508,21597+4]..[508,21597+16])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[508,21597+17]..[508,21597+42])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[508,21597+18]..[508,21597+22])
                                Ppat_var "body" (middle_end/flambda/closure_conversion.ml[508,21597+18]..[508,21597+22])
                              pattern (middle_end/flambda/closure_conversion.ml[508,21597+24]..[508,21597+32])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/closure_conversion.ml[508,21597+25]..[508,21597+26])
                                    Ppat_var "i" (middle_end/flambda/closure_conversion.ml[508,21597+25]..[508,21597+26])
                                  pattern (middle_end/flambda/closure_conversion.ml[508,21597+28]..[508,21597+31])
                                    Ppat_var "ids" (middle_end/flambda/closure_conversion.ml[508,21597+28]..[508,21597+31])
                                ]
                              pattern (middle_end/flambda/closure_conversion.ml[508,21597+34]..[508,21597+41])
                                Ppat_var "handler" (middle_end/flambda/closure_conversion.ml[508,21597+34]..[508,21597+41])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[509,21643+4]..[514,21900+50])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[509,21643+8]..[509,21643+14])
                              Ppat_var "st_exn" (middle_end/flambda/closure_conversion.ml[509,21643+8]..[509,21643+14])
                            expression (middle_end/flambda/closure_conversion.ml[509,21643+17]..[509,21643+43])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[509,21643+17]..[509,21643+40])
                                Pexp_ident "Static_exception.create" (middle_end/flambda/closure_conversion.ml[509,21643+17]..[509,21643+40])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[509,21643+41]..[509,21643+43])
                                    Pexp_construct "()" (middle_end/flambda/closure_conversion.ml[509,21643+41]..[509,21643+43])
                                    None
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[510,21690+4]..[514,21900+50])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[510,21690+8]..[510,21690+11])
                                Ppat_var "env" (middle_end/flambda/closure_conversion.ml[510,21690+8]..[510,21690+11])
                              expression (middle_end/flambda/closure_conversion.ml[510,21690+14]..[510,21690+51])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[510,21690+14]..[510,21690+38])
                                  Pexp_ident "Env.add_static_exception" (middle_end/flambda/closure_conversion.ml[510,21690+14]..[510,21690+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[510,21690+39]..[510,21690+42])
                                      Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[510,21690+39]..[510,21690+42])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[510,21690+43]..[510,21690+44])
                                      Pexp_ident "i" (middle_end/flambda/closure_conversion.ml[510,21690+43]..[510,21690+44])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[510,21690+45]..[510,21690+51])
                                      Pexp_ident "st_exn" (middle_end/flambda/closure_conversion.ml[510,21690+45]..[510,21690+51])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[511,21745+4]..[514,21900+50])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/closure_conversion.ml[511,21745+8]..[511,21745+11])
                                  Ppat_var "ids" (middle_end/flambda/closure_conversion.ml[511,21745+8]..[511,21745+11])
                                expression (middle_end/flambda/closure_conversion.ml[511,21745+14]..[511,21745+30])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[511,21745+14]..[511,21745+22])
                                    Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[511,21745+14]..[511,21745+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[511,21745+23]..[511,21745+26])
                                        Pexp_ident "fst" (middle_end/flambda/closure_conversion.ml[511,21745+23]..[511,21745+26])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[511,21745+27]..[511,21745+30])
                                        Pexp_ident "ids" (middle_end/flambda/closure_conversion.ml[511,21745+27]..[511,21745+30])
                                  ]
                            ]
                            expression (middle_end/flambda/closure_conversion.ml[512,21779+4]..[514,21900+50])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/closure_conversion.ml[512,21779+8]..[512,21779+12])
                                    Ppat_var "vars" (middle_end/flambda/closure_conversion.ml[512,21779+8]..[512,21779+12])
                                  expression (middle_end/flambda/closure_conversion.ml[512,21779+15]..[512,21779+67])
                                    Pexp_apply
                                    expression (middle_end/flambda/closure_conversion.ml[512,21779+15]..[512,21779+23])
                                      Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[512,21779+15]..[512,21779+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[512,21779+24]..[512,21779+63])
                                          Pexp_ident "Variable.create_with_same_name_as_ident" (middle_end/flambda/closure_conversion.ml[512,21779+24]..[512,21779+63])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[512,21779+64]..[512,21779+67])
                                          Pexp_ident "ids" (middle_end/flambda/closure_conversion.ml[512,21779+64]..[512,21779+67])
                                    ]
                              ]
                              expression (middle_end/flambda/closure_conversion.ml[513,21850+4]..[514,21900+50])
                                Pexp_construct "Static_catch" (middle_end/flambda/closure_conversion.ml[513,21850+4]..[513,21850+16])
                                Some
                                  expression (middle_end/flambda/closure_conversion.ml[513,21850+17]..[514,21900+50])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/closure_conversion.ml[513,21850+18]..[513,21850+24])
                                        Pexp_ident "st_exn" (middle_end/flambda/closure_conversion.ml[513,21850+18]..[513,21850+24])
                                      expression (middle_end/flambda/closure_conversion.ml[513,21850+26]..[513,21850+30])
                                        Pexp_ident "vars" (middle_end/flambda/closure_conversion.ml[513,21850+26]..[513,21850+30])
                                      expression (middle_end/flambda/closure_conversion.ml[513,21850+32]..[513,21850+48])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[513,21850+32]..[513,21850+37])
                                          Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[513,21850+32]..[513,21850+37])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[513,21850+38]..[513,21850+39])
                                              Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[513,21850+38]..[513,21850+39])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[513,21850+40]..[513,21850+43])
                                              Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[513,21850+40]..[513,21850+43])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[513,21850+44]..[513,21850+48])
                                              Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[513,21850+44]..[513,21850+48])
                                        ]
                                      expression (middle_end/flambda/closure_conversion.ml[514,21900+6]..[514,21900+49])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[514,21900+6]..[514,21900+11])
                                          Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[514,21900+6]..[514,21900+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[514,21900+12]..[514,21900+13])
                                              Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[514,21900+12]..[514,21900+13])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[514,21900+14]..[514,21900+41])
                                              Pexp_apply
                                              expression (middle_end/flambda/closure_conversion.ml[514,21900+15]..[514,21900+27])
                                                Pexp_ident "Env.add_vars" (middle_end/flambda/closure_conversion.ml[514,21900+15]..[514,21900+27])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[514,21900+28]..[514,21900+31])
                                                    Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[514,21900+28]..[514,21900+31])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[514,21900+32]..[514,21900+35])
                                                    Pexp_ident "ids" (middle_end/flambda/closure_conversion.ml[514,21900+32]..[514,21900+35])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[514,21900+36]..[514,21900+40])
                                                    Pexp_ident "vars" (middle_end/flambda/closure_conversion.ml[514,21900+36]..[514,21900+40])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[514,21900+42]..[514,21900+49])
                                              Pexp_ident "handler" (middle_end/flambda/closure_conversion.ml[514,21900+42]..[514,21900+49])
                                        ]
                                    ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[515,21951+4]..[515,21951+32])
                        Ppat_construct "Ltrywith" (middle_end/flambda/closure_conversion.ml[515,21951+4]..[515,21951+12])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[515,21951+13]..[515,21951+32])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[515,21951+14]..[515,21951+18])
                                Ppat_var "body" (middle_end/flambda/closure_conversion.ml[515,21951+14]..[515,21951+18])
                              pattern (middle_end/flambda/closure_conversion.ml[515,21951+20]..[515,21951+22])
                                Ppat_var "id" (middle_end/flambda/closure_conversion.ml[515,21951+20]..[515,21951+22])
                              pattern (middle_end/flambda/closure_conversion.ml[515,21951+24]..[515,21951+31])
                                Ppat_var "handler" (middle_end/flambda/closure_conversion.ml[515,21951+24]..[515,21951+31])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[516,21987+4]..[517,22047+78])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[516,21987+8]..[516,21987+11])
                              Ppat_var "var" (middle_end/flambda/closure_conversion.ml[516,21987+8]..[516,21987+11])
                            expression (middle_end/flambda/closure_conversion.ml[516,21987+14]..[516,21987+56])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[516,21987+14]..[516,21987+53])
                                Pexp_ident "Variable.create_with_same_name_as_ident" (middle_end/flambda/closure_conversion.ml[516,21987+14]..[516,21987+53])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[516,21987+54]..[516,21987+56])
                                    Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[516,21987+54]..[516,21987+56])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[517,22047+4]..[517,22047+78])
                          Pexp_construct "Try_with" (middle_end/flambda/closure_conversion.ml[517,22047+4]..[517,22047+12])
                          Some
                            expression (middle_end/flambda/closure_conversion.ml[517,22047+13]..[517,22047+78])
                              Pexp_tuple
                              [
                                expression (middle_end/flambda/closure_conversion.ml[517,22047+14]..[517,22047+30])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[517,22047+14]..[517,22047+19])
                                    Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[517,22047+14]..[517,22047+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[517,22047+20]..[517,22047+21])
                                        Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[517,22047+20]..[517,22047+21])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[517,22047+22]..[517,22047+25])
                                        Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[517,22047+22]..[517,22047+25])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[517,22047+26]..[517,22047+30])
                                        Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[517,22047+26]..[517,22047+30])
                                  ]
                                expression (middle_end/flambda/closure_conversion.ml[517,22047+32]..[517,22047+35])
                                  Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[517,22047+32]..[517,22047+35])
                                expression (middle_end/flambda/closure_conversion.ml[517,22047+37]..[517,22047+77])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[517,22047+37]..[517,22047+42])
                                    Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[517,22047+37]..[517,22047+42])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[517,22047+43]..[517,22047+44])
                                        Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[517,22047+43]..[517,22047+44])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[517,22047+45]..[517,22047+69])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[517,22047+46]..[517,22047+57])
                                          Pexp_ident "Env.add_var" (middle_end/flambda/closure_conversion.ml[517,22047+46]..[517,22047+57])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[517,22047+58]..[517,22047+61])
                                              Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[517,22047+58]..[517,22047+61])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[517,22047+62]..[517,22047+64])
                                              Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[517,22047+62]..[517,22047+64])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[517,22047+65]..[517,22047+68])
                                              Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[517,22047+65]..[517,22047+68])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[517,22047+70]..[517,22047+77])
                                        Pexp_ident "handler" (middle_end/flambda/closure_conversion.ml[517,22047+70]..[517,22047+77])
                                  ]
                              ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[518,22126+4]..[518,22126+35])
                        Ppat_construct "Lifthenelse" (middle_end/flambda/closure_conversion.ml[518,22126+4]..[518,22126+15])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[518,22126+16]..[518,22126+35])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[518,22126+17]..[518,22126+21])
                                Ppat_var "cond" (middle_end/flambda/closure_conversion.ml[518,22126+17]..[518,22126+21])
                              pattern (middle_end/flambda/closure_conversion.ml[518,22126+23]..[518,22126+27])
                                Ppat_var "ifso" (middle_end/flambda/closure_conversion.ml[518,22126+23]..[518,22126+27])
                              pattern (middle_end/flambda/closure_conversion.ml[518,22126+29]..[518,22126+34])
                                Ppat_var "ifnot" (middle_end/flambda/closure_conversion.ml[518,22126+29]..[518,22126+34])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[519,22165+4]..[522,22293+68])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[519,22165+8]..[519,22165+12])
                              Ppat_var "cond" (middle_end/flambda/closure_conversion.ml[519,22165+8]..[519,22165+12])
                            expression (middle_end/flambda/closure_conversion.ml[519,22165+15]..[519,22165+31])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[519,22165+15]..[519,22165+20])
                                Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[519,22165+15]..[519,22165+20])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[519,22165+21]..[519,22165+22])
                                    Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[519,22165+21]..[519,22165+22])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[519,22165+23]..[519,22165+26])
                                    Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[519,22165+23]..[519,22165+26])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[519,22165+27]..[519,22165+31])
                                    Pexp_ident "cond" (middle_end/flambda/closure_conversion.ml[519,22165+27]..[519,22165+31])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[520,22200+4]..[522,22293+68])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[520,22200+8]..[520,22200+16])
                                Ppat_var "cond_var" (middle_end/flambda/closure_conversion.ml[520,22200+8]..[520,22200+16])
                              expression (middle_end/flambda/closure_conversion.ml[520,22200+19]..[520,22200+45])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[520,22200+19]..[520,22200+34])
                                  Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[520,22200+19]..[520,22200+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[520,22200+35]..[520,22200+45])
                                      Pexp_ident "Names.cond" (middle_end/flambda/closure_conversion.ml[520,22200+35]..[520,22200+45])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[521,22249+4]..[522,22293+68])
                            Pexp_apply
                            expression (middle_end/flambda/closure_conversion.ml[521,22249+4]..[521,22249+22])
                              Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[521,22249+4]..[521,22249+22])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[521,22249+23]..[521,22249+31])
                                  Pexp_ident "cond_var" (middle_end/flambda/closure_conversion.ml[521,22249+23]..[521,22249+31])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[521,22249+32]..[521,22249+43])
                                  Pexp_construct "Expr" (middle_end/flambda/closure_conversion.ml[521,22249+33]..[521,22249+37])
                                  Some
                                    expression (middle_end/flambda/closure_conversion.ml[521,22249+38]..[521,22249+42])
                                      Pexp_ident "cond" (middle_end/flambda/closure_conversion.ml[521,22249+38]..[521,22249+42])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[522,22293+6]..[522,22293+68])
                                  Pexp_construct "If_then_else" (middle_end/flambda/closure_conversion.ml[522,22293+7]..[522,22293+19])
                                  Some
                                    expression (middle_end/flambda/closure_conversion.ml[522,22293+20]..[522,22293+67])
                                      Pexp_tuple
                                      [
                                        expression (middle_end/flambda/closure_conversion.ml[522,22293+21]..[522,22293+29])
                                          Pexp_ident "cond_var" (middle_end/flambda/closure_conversion.ml[522,22293+21]..[522,22293+29])
                                        expression (middle_end/flambda/closure_conversion.ml[522,22293+31]..[522,22293+47])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[522,22293+31]..[522,22293+36])
                                            Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[522,22293+31]..[522,22293+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[522,22293+37]..[522,22293+38])
                                                Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[522,22293+37]..[522,22293+38])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[522,22293+39]..[522,22293+42])
                                                Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[522,22293+39]..[522,22293+42])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[522,22293+43]..[522,22293+47])
                                                Pexp_ident "ifso" (middle_end/flambda/closure_conversion.ml[522,22293+43]..[522,22293+47])
                                          ]
                                        expression (middle_end/flambda/closure_conversion.ml[522,22293+49]..[522,22293+66])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[522,22293+49]..[522,22293+54])
                                            Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[522,22293+49]..[522,22293+54])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[522,22293+55]..[522,22293+56])
                                                Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[522,22293+55]..[522,22293+56])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[522,22293+57]..[522,22293+60])
                                                Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[522,22293+57]..[522,22293+60])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[522,22293+61]..[522,22293+66])
                                                Pexp_ident "ifnot" (middle_end/flambda/closure_conversion.ml[522,22293+61]..[522,22293+66])
                                          ]
                                      ]
                            ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[523,22362+4]..[523,22362+26])
                        Ppat_construct "Lsequence" (middle_end/flambda/closure_conversion.ml[523,22362+4]..[523,22362+13])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[523,22362+14]..[523,22362+26])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[523,22362+15]..[523,22362+19])
                                Ppat_var "lam1" (middle_end/flambda/closure_conversion.ml[523,22362+15]..[523,22362+19])
                              pattern (middle_end/flambda/closure_conversion.ml[523,22362+21]..[523,22362+25])
                                Ppat_var "lam2" (middle_end/flambda/closure_conversion.ml[523,22362+21]..[523,22362+25])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[524,22392+4]..[527,22525+36])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[524,22392+8]..[524,22392+11])
                              Ppat_var "var" (middle_end/flambda/closure_conversion.ml[524,22392+8]..[524,22392+11])
                            expression (middle_end/flambda/closure_conversion.ml[524,22392+14]..[524,22392+44])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[524,22392+14]..[524,22392+29])
                                Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[524,22392+14]..[524,22392+29])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[524,22392+30]..[524,22392+44])
                                    Pexp_ident "Names.sequence" (middle_end/flambda/closure_conversion.ml[524,22392+30]..[524,22392+44])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[525,22440+4]..[527,22525+36])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[525,22440+8]..[525,22440+12])
                                Ppat_var "lam1" (middle_end/flambda/closure_conversion.ml[525,22440+8]..[525,22440+12])
                              expression (middle_end/flambda/closure_conversion.ml[525,22440+15]..[525,22440+46])
                                Pexp_construct "Flambda.Expr" (middle_end/flambda/closure_conversion.ml[525,22440+15]..[525,22440+27])
                                Some
                                  expression (middle_end/flambda/closure_conversion.ml[525,22440+28]..[525,22440+46])
                                    Pexp_apply
                                    expression (middle_end/flambda/closure_conversion.ml[525,22440+29]..[525,22440+34])
                                      Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[525,22440+29]..[525,22440+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[525,22440+35]..[525,22440+36])
                                          Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[525,22440+35]..[525,22440+36])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[525,22440+37]..[525,22440+40])
                                          Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[525,22440+37]..[525,22440+40])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[525,22440+41]..[525,22440+45])
                                          Pexp_ident "lam1" (middle_end/flambda/closure_conversion.ml[525,22440+41]..[525,22440+45])
                                    ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[526,22490+4]..[527,22525+36])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/closure_conversion.ml[526,22490+8]..[526,22490+12])
                                  Ppat_var "lam2" (middle_end/flambda/closure_conversion.ml[526,22490+8]..[526,22490+12])
                                expression (middle_end/flambda/closure_conversion.ml[526,22490+15]..[526,22490+31])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[526,22490+15]..[526,22490+20])
                                    Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[526,22490+15]..[526,22490+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[526,22490+21]..[526,22490+22])
                                        Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[526,22490+21]..[526,22490+22])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[526,22490+23]..[526,22490+26])
                                        Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[526,22490+23]..[526,22490+26])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[526,22490+27]..[526,22490+31])
                                        Pexp_ident "lam2" (middle_end/flambda/closure_conversion.ml[526,22490+27]..[526,22490+31])
                                  ]
                            ]
                            expression (middle_end/flambda/closure_conversion.ml[527,22525+4]..[527,22525+36])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[527,22525+4]..[527,22525+22])
                                Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[527,22525+4]..[527,22525+22])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[527,22525+23]..[527,22525+26])
                                    Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[527,22525+23]..[527,22525+26])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[527,22525+27]..[527,22525+31])
                                    Pexp_ident "lam1" (middle_end/flambda/closure_conversion.ml[527,22525+27]..[527,22525+31])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[527,22525+32]..[527,22525+36])
                                    Pexp_ident "lam2" (middle_end/flambda/closure_conversion.ml[527,22525+32]..[527,22525+36])
                              ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[528,22562+4]..[528,22562+23])
                        Ppat_construct "Lwhile" (middle_end/flambda/closure_conversion.ml[528,22562+4]..[528,22562+10])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[528,22562+11]..[528,22562+23])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[528,22562+12]..[528,22562+16])
                                Ppat_var "cond" (middle_end/flambda/closure_conversion.ml[528,22562+12]..[528,22562+16])
                              pattern (middle_end/flambda/closure_conversion.ml[528,22562+18]..[528,22562+22])
                                Ppat_var "body" (middle_end/flambda/closure_conversion.ml[528,22562+18]..[528,22562+22])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[528,22562+27]..[528,22562+69])
                        Pexp_construct "While" (middle_end/flambda/closure_conversion.ml[528,22562+27]..[528,22562+32])
                        Some
                          expression (middle_end/flambda/closure_conversion.ml[528,22562+33]..[528,22562+69])
                            Pexp_tuple
                            [
                              expression (middle_end/flambda/closure_conversion.ml[528,22562+34]..[528,22562+50])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[528,22562+34]..[528,22562+39])
                                  Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[528,22562+34]..[528,22562+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[528,22562+40]..[528,22562+41])
                                      Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[528,22562+40]..[528,22562+41])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[528,22562+42]..[528,22562+45])
                                      Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[528,22562+42]..[528,22562+45])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[528,22562+46]..[528,22562+50])
                                      Pexp_ident "cond" (middle_end/flambda/closure_conversion.ml[528,22562+46]..[528,22562+50])
                                ]
                              expression (middle_end/flambda/closure_conversion.ml[528,22562+52]..[528,22562+68])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[528,22562+52]..[528,22562+57])
                                  Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[528,22562+52]..[528,22562+57])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[528,22562+58]..[528,22562+59])
                                      Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[528,22562+58]..[528,22562+59])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[528,22562+60]..[528,22562+63])
                                      Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[528,22562+60]..[528,22562+63])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[528,22562+64]..[528,22562+68])
                                      Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[528,22562+64]..[528,22562+68])
                                ]
                            ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[529,22632+4]..[529,22632+38])
                        Ppat_construct "Lfor" (middle_end/flambda/closure_conversion.ml[529,22632+4]..[529,22632+8])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[529,22632+9]..[529,22632+38])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[529,22632+10]..[529,22632+12])
                                Ppat_var "id" (middle_end/flambda/closure_conversion.ml[529,22632+10]..[529,22632+12])
                              pattern (middle_end/flambda/closure_conversion.ml[529,22632+14]..[529,22632+16])
                                Ppat_var "lo" (middle_end/flambda/closure_conversion.ml[529,22632+14]..[529,22632+16])
                              pattern (middle_end/flambda/closure_conversion.ml[529,22632+18]..[529,22632+20])
                                Ppat_var "hi" (middle_end/flambda/closure_conversion.ml[529,22632+18]..[529,22632+20])
                              pattern (middle_end/flambda/closure_conversion.ml[529,22632+22]..[529,22632+31])
                                Ppat_var "direction" (middle_end/flambda/closure_conversion.ml[529,22632+22]..[529,22632+31])
                              pattern (middle_end/flambda/closure_conversion.ml[529,22632+33]..[529,22632+37])
                                Ppat_var "body" (middle_end/flambda/closure_conversion.ml[529,22632+33]..[529,22632+37])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[530,22674+4]..[536,23025+68])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[530,22674+8]..[530,22674+17])
                              Ppat_var "bound_var" (middle_end/flambda/closure_conversion.ml[530,22674+8]..[530,22674+17])
                            expression (middle_end/flambda/closure_conversion.ml[530,22674+20]..[530,22674+62])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[530,22674+20]..[530,22674+59])
                                Pexp_ident "Variable.create_with_same_name_as_ident" (middle_end/flambda/closure_conversion.ml[530,22674+20]..[530,22674+59])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[530,22674+60]..[530,22674+62])
                                    Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[530,22674+60]..[530,22674+62])
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[531,22740+4]..[536,23025+68])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[531,22740+8]..[531,22740+18])
                                Ppat_var "from_value" (middle_end/flambda/closure_conversion.ml[531,22740+8]..[531,22740+18])
                              expression (middle_end/flambda/closure_conversion.ml[531,22740+21]..[531,22740+51])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[531,22740+21]..[531,22740+36])
                                  Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[531,22740+21]..[531,22740+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[531,22740+37]..[531,22740+51])
                                      Pexp_ident "Names.for_from" (middle_end/flambda/closure_conversion.ml[531,22740+37]..[531,22740+51])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[532,22795+4]..[536,23025+68])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/closure_conversion.ml[532,22795+8]..[532,22795+16])
                                  Ppat_var "to_value" (middle_end/flambda/closure_conversion.ml[532,22795+8]..[532,22795+16])
                                expression (middle_end/flambda/closure_conversion.ml[532,22795+19]..[532,22795+47])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[532,22795+19]..[532,22795+34])
                                    Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[532,22795+19]..[532,22795+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[532,22795+35]..[532,22795+47])
                                        Pexp_ident "Names.for_to" (middle_end/flambda/closure_conversion.ml[532,22795+35]..[532,22795+47])
                                  ]
                            ]
                            expression (middle_end/flambda/closure_conversion.ml[533,22846+4]..[536,23025+68])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/closure_conversion.ml[533,22846+8]..[533,22846+12])
                                    Ppat_var "body" (middle_end/flambda/closure_conversion.ml[533,22846+8]..[533,22846+12])
                                  expression (middle_end/flambda/closure_conversion.ml[533,22846+15]..[533,22846+58])
                                    Pexp_apply
                                    expression (middle_end/flambda/closure_conversion.ml[533,22846+15]..[533,22846+20])
                                      Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[533,22846+15]..[533,22846+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[533,22846+21]..[533,22846+22])
                                          Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[533,22846+21]..[533,22846+22])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[533,22846+23]..[533,22846+53])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[533,22846+24]..[533,22846+35])
                                            Pexp_ident "Env.add_var" (middle_end/flambda/closure_conversion.ml[533,22846+24]..[533,22846+35])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[533,22846+36]..[533,22846+39])
                                                Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[533,22846+36]..[533,22846+39])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[533,22846+40]..[533,22846+42])
                                                Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[533,22846+40]..[533,22846+42])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[533,22846+43]..[533,22846+52])
                                                Pexp_ident "bound_var" (middle_end/flambda/closure_conversion.ml[533,22846+43]..[533,22846+52])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[533,22846+54]..[533,22846+58])
                                          Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[533,22846+54]..[533,22846+58])
                                    ]
                              ]
                              expression (middle_end/flambda/closure_conversion.ml[534,22908+4]..[536,23025+68])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[534,22908+4]..[534,22908+22])
                                  Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[534,22908+4]..[534,22908+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[534,22908+23]..[534,22908+33])
                                      Pexp_ident "from_value" (middle_end/flambda/closure_conversion.ml[534,22908+23]..[534,22908+33])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[534,22908+34]..[534,22908+57])
                                      Pexp_construct "Expr" (middle_end/flambda/closure_conversion.ml[534,22908+35]..[534,22908+39])
                                      Some
                                        expression (middle_end/flambda/closure_conversion.ml[534,22908+40]..[534,22908+56])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[534,22908+41]..[534,22908+46])
                                            Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[534,22908+41]..[534,22908+46])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[534,22908+47]..[534,22908+48])
                                                Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[534,22908+47]..[534,22908+48])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[534,22908+49]..[534,22908+52])
                                                Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[534,22908+49]..[534,22908+52])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[534,22908+53]..[534,22908+55])
                                                Pexp_ident "lo" (middle_end/flambda/closure_conversion.ml[534,22908+53]..[534,22908+55])
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[535,22966+6]..[536,23025+68])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[535,22966+7]..[535,22966+25])
                                        Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[535,22966+7]..[535,22966+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[535,22966+26]..[535,22966+34])
                                            Pexp_ident "to_value" (middle_end/flambda/closure_conversion.ml[535,22966+26]..[535,22966+34])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[535,22966+35]..[535,22966+58])
                                            Pexp_construct "Expr" (middle_end/flambda/closure_conversion.ml[535,22966+36]..[535,22966+40])
                                            Some
                                              expression (middle_end/flambda/closure_conversion.ml[535,22966+41]..[535,22966+57])
                                                Pexp_apply
                                                expression (middle_end/flambda/closure_conversion.ml[535,22966+42]..[535,22966+47])
                                                  Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[535,22966+42]..[535,22966+47])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/closure_conversion.ml[535,22966+48]..[535,22966+49])
                                                      Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[535,22966+48]..[535,22966+49])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/closure_conversion.ml[535,22966+50]..[535,22966+53])
                                                      Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[535,22966+50]..[535,22966+53])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/closure_conversion.ml[535,22966+54]..[535,22966+56])
                                                      Pexp_ident "hi" (middle_end/flambda/closure_conversion.ml[535,22966+54]..[535,22966+56])
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[536,23025+8]..[536,23025+67])
                                            Pexp_construct "For" (middle_end/flambda/closure_conversion.ml[536,23025+9]..[536,23025+12])
                                            Some
                                              expression (middle_end/flambda/closure_conversion.ml[536,23025+13]..[536,23025+66])
                                                Pexp_record
                                                [
                                                  "bound_var" (middle_end/flambda/closure_conversion.ml[536,23025+15]..[536,23025+24]) ghost
                                                    expression (middle_end/flambda/closure_conversion.ml[536,23025+15]..[536,23025+24])
                                                      Pexp_ident "bound_var" (middle_end/flambda/closure_conversion.ml[536,23025+15]..[536,23025+24])
                                                  "from_value" (middle_end/flambda/closure_conversion.ml[536,23025+26]..[536,23025+36]) ghost
                                                    expression (middle_end/flambda/closure_conversion.ml[536,23025+26]..[536,23025+36])
                                                      Pexp_ident "from_value" (middle_end/flambda/closure_conversion.ml[536,23025+26]..[536,23025+36])
                                                  "to_value" (middle_end/flambda/closure_conversion.ml[536,23025+38]..[536,23025+46]) ghost
                                                    expression (middle_end/flambda/closure_conversion.ml[536,23025+38]..[536,23025+46])
                                                      Pexp_ident "to_value" (middle_end/flambda/closure_conversion.ml[536,23025+38]..[536,23025+46])
                                                  "direction" (middle_end/flambda/closure_conversion.ml[536,23025+48]..[536,23025+57]) ghost
                                                    expression (middle_end/flambda/closure_conversion.ml[536,23025+48]..[536,23025+57])
                                                      Pexp_ident "direction" (middle_end/flambda/closure_conversion.ml[536,23025+48]..[536,23025+57])
                                                  "body" (middle_end/flambda/closure_conversion.ml[536,23025+59]..[536,23025+63]) ghost
                                                    expression (middle_end/flambda/closure_conversion.ml[536,23025+59]..[536,23025+63])
                                                      Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[536,23025+59]..[536,23025+63])
                                                ]
                                                None
                                      ]
                                ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[537,23094+4]..[537,23094+27])
                        Ppat_construct "Lassign" (middle_end/flambda/closure_conversion.ml[537,23094+4]..[537,23094+11])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[537,23094+12]..[537,23094+27])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[537,23094+13]..[537,23094+15])
                                Ppat_var "id" (middle_end/flambda/closure_conversion.ml[537,23094+13]..[537,23094+15])
                              pattern (middle_end/flambda/closure_conversion.ml[537,23094+17]..[537,23094+26])
                                Ppat_var "new_value" (middle_end/flambda/closure_conversion.ml[537,23094+17]..[537,23094+26])
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[538,23125+4]..[548,23548+61])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[538,23125+8]..[538,23125+22])
                              Ppat_var "being_assigned" (middle_end/flambda/closure_conversion.ml[538,23125+8]..[538,23125+22])
                            expression (middle_end/flambda/closure_conversion.ml[539,23150+6]..[544,23381+32])
                              Pexp_match
                              expression (middle_end/flambda/closure_conversion.ml[539,23150+12]..[539,23150+43])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[539,23150+12]..[539,23150+36])
                                  Pexp_ident "Env.find_mutable_var_exn" (middle_end/flambda/closure_conversion.ml[539,23150+12]..[539,23150+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[539,23150+37]..[539,23150+40])
                                      Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[539,23150+37]..[539,23150+40])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[539,23150+41]..[539,23150+43])
                                      Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[539,23150+41]..[539,23150+43])
                                ]
                              [
                                <case>
                                  pattern (middle_end/flambda/closure_conversion.ml[540,23199+8]..[540,23199+22])
                                    Ppat_var "being_assigned" (middle_end/flambda/closure_conversion.ml[540,23199+8]..[540,23199+22])
                                  expression (middle_end/flambda/closure_conversion.ml[540,23199+26]..[540,23199+40])
                                    Pexp_ident "being_assigned" (middle_end/flambda/closure_conversion.ml[540,23199+26]..[540,23199+40])
                                <case>
                                  pattern (middle_end/flambda/closure_conversion.ml[541,23240+8]..[541,23240+27])
                                    Ppat_exception
                                    pattern (middle_end/flambda/closure_conversion.ml[541,23240+18]..[541,23240+27])
                                      Ppat_construct "Not_found" (middle_end/flambda/closure_conversion.ml[541,23240+18]..[541,23240+27])
                                      None
                                  expression (middle_end/flambda/closure_conversion.ml[542,23271+8]..[544,23381+32])
                                    Pexp_apply
                                    expression (middle_end/flambda/closure_conversion.ml[542,23271+8]..[542,23271+25])
                                      Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/closure_conversion.ml[542,23271+8]..[542,23271+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[542,23271+26]..[543,23342+38])
                                          Pexp_constant PConst_string("Closure_conversion.close: unbound mutable variable %s in assignment",(middle_end/flambda/closure_conversion.ml[542,23271+27]..[543,23342+37]),None)
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[544,23381+10]..[544,23381+32])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[544,23381+11]..[544,23381+28])
                                            Pexp_ident "Ident.unique_name" (middle_end/flambda/closure_conversion.ml[544,23381+11]..[544,23381+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[544,23381+29]..[544,23381+31])
                                                Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[544,23381+29]..[544,23381+31])
                                          ]
                                    ]
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[546,23421+4]..[548,23548+61])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[546,23421+8]..[546,23421+21])
                                Ppat_var "new_value_var" (middle_end/flambda/closure_conversion.ml[546,23421+8]..[546,23421+21])
                              expression (middle_end/flambda/closure_conversion.ml[546,23421+24]..[546,23421+55])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[546,23421+24]..[546,23421+39])
                                  Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[546,23421+24]..[546,23421+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[546,23421+40]..[546,23421+55])
                                      Pexp_ident "Names.new_value" (middle_end/flambda/closure_conversion.ml[546,23421+40]..[546,23421+55])
                                ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[547,23480+4]..[548,23548+61])
                            Pexp_apply
                            expression (middle_end/flambda/closure_conversion.ml[547,23480+4]..[547,23480+22])
                              Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[547,23480+4]..[547,23480+22])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[547,23480+23]..[547,23480+36])
                                  Pexp_ident "new_value_var" (middle_end/flambda/closure_conversion.ml[547,23480+23]..[547,23480+36])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[547,23480+37]..[547,23480+67])
                                  Pexp_construct "Expr" (middle_end/flambda/closure_conversion.ml[547,23480+38]..[547,23480+42])
                                  Some
                                    expression (middle_end/flambda/closure_conversion.ml[547,23480+43]..[547,23480+66])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[547,23480+44]..[547,23480+49])
                                        Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[547,23480+44]..[547,23480+49])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[547,23480+50]..[547,23480+51])
                                            Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[547,23480+50]..[547,23480+51])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[547,23480+52]..[547,23480+55])
                                            Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[547,23480+52]..[547,23480+55])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[547,23480+56]..[547,23480+65])
                                            Pexp_ident "new_value" (middle_end/flambda/closure_conversion.ml[547,23480+56]..[547,23480+65])
                                      ]
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/closure_conversion.ml[548,23548+6]..[548,23548+61])
                                  Pexp_construct "Assign" (middle_end/flambda/closure_conversion.ml[548,23548+7]..[548,23548+13])
                                  Some
                                    expression (middle_end/flambda/closure_conversion.ml[548,23548+14]..[548,23548+60])
                                      Pexp_record
                                      [
                                        "being_assigned" (middle_end/flambda/closure_conversion.ml[548,23548+16]..[548,23548+30]) ghost
                                          expression (middle_end/flambda/closure_conversion.ml[548,23548+16]..[548,23548+30])
                                            Pexp_ident "being_assigned" (middle_end/flambda/closure_conversion.ml[548,23548+16]..[548,23548+30])
                                        "new_value" (middle_end/flambda/closure_conversion.ml[548,23548+32]..[548,23548+41])
                                          expression (middle_end/flambda/closure_conversion.ml[548,23548+44]..[548,23548+57])
                                            Pexp_ident "new_value_var" (middle_end/flambda/closure_conversion.ml[548,23548+44]..[548,23548+57])
                                      ]
                                      None
                            ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[549,23610+4]..[549,23610+19])
                        Ppat_construct "Levent" (middle_end/flambda/closure_conversion.ml[549,23610+4]..[549,23610+10])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[549,23610+11]..[549,23610+19])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/closure_conversion.ml[549,23610+12]..[549,23610+15])
                                Ppat_var "lam" (middle_end/flambda/closure_conversion.ml[549,23610+12]..[549,23610+15])
                              pattern (middle_end/flambda/closure_conversion.ml[549,23610+17]..[549,23610+18])
                                Ppat_any
                            ]
                      expression (middle_end/flambda/closure_conversion.ml[549,23610+23]..[549,23610+38])
                        Pexp_apply
                        expression (middle_end/flambda/closure_conversion.ml[549,23610+23]..[549,23610+28])
                          Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[549,23610+23]..[549,23610+28])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[549,23610+29]..[549,23610+30])
                              Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[549,23610+29]..[549,23610+30])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[549,23610+31]..[549,23610+34])
                              Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[549,23610+31]..[549,23610+34])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[549,23610+35]..[549,23610+38])
                              Pexp_ident "lam" (middle_end/flambda/closure_conversion.ml[549,23610+35]..[549,23610+38])
                        ]
                    <case>
                      pattern (middle_end/flambda/closure_conversion.ml[550,23649+4]..[550,23649+13])
                        Ppat_construct "Lifused" (middle_end/flambda/closure_conversion.ml[550,23649+4]..[550,23649+11])
                        Some
                          []
                          pattern (middle_end/flambda/closure_conversion.ml[550,23649+12]..[550,23649+13])
                            Ppat_any
                      expression (middle_end/flambda/closure_conversion.ml[555,23945+4]..[556,24007+32])
                        Pexp_apply
                        expression (middle_end/flambda/closure_conversion.ml[555,23945+4]..[555,23945+20])
                          Pexp_ident "Misc.fatal_error" (middle_end/flambda/closure_conversion.ml[555,23945+4]..[555,23945+20])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[555,23945+21]..[556,24007+32])
                              Pexp_constant PConst_string("[Lifused] should have been removed by [Simplif.simplify_lets]",(middle_end/flambda/closure_conversion.ml[555,23945+22]..[556,24007+31]),None)
                        ]
                  ]
                core_type (middle_end/flambda/closure_conversion.ml[170,6767+44]..[170,6767+53])
                  Ptyp_constr "Flambda.t" (middle_end/flambda/closure_conversion.ml[170,6767+44]..[170,6767+53])
                  []
      <def>
          attribute "ocaml.doc"
            [
              structure_item (middle_end/flambda/closure_conversion.ml[558,24041+0]..[560,24193+55])
                Pstr_eval
                expression (middle_end/flambda/closure_conversion.ml[558,24041+0]..[560,24193+55])
                  Pexp_constant PConst_string(" Perform closure conversion on a set of function declarations, returning a\n    set of closures.  (The set will often only contain a single function;\n    the only case where it cannot is for \"let rec\".) ",(middle_end/flambda/closure_conversion.ml[558,24041+0]..[560,24193+55]),None)
            ]
        pattern (middle_end/flambda/closure_conversion.ml[561,24249+4]..[561,24249+19])
          Ppat_var "close_functions" (middle_end/flambda/closure_conversion.ml[561,24249+4]..[561,24249+19])
        expression (middle_end/flambda/closure_conversion.ml[561,24249+20]..[640,27712+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/closure_conversion.ml[561,24249+20]..[561,24249+21])
            Ppat_var "t" (middle_end/flambda/closure_conversion.ml[561,24249+20]..[561,24249+21])
          expression (middle_end/flambda/closure_conversion.ml[561,24249+22]..[640,27712+33]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/closure_conversion.ml[561,24249+22]..[561,24249+34])
              Ppat_var "external_env" (middle_end/flambda/closure_conversion.ml[561,24249+22]..[561,24249+34])
            expression (middle_end/flambda/closure_conversion.ml[561,24249+35]..[640,27712+33]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/closure_conversion.ml[561,24249+35]..[561,24249+56])
                Ppat_var "function_declarations" (middle_end/flambda/closure_conversion.ml[561,24249+35]..[561,24249+56])
              expression (middle_end/flambda/closure_conversion.ml[561,24249+57]..[640,27712+33])
                Pexp_constraint
                expression (middle_end/flambda/closure_conversion.ml[562,24324+2]..[640,27712+33])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/closure_conversion.ml[562,24324+6]..[562,24324+36])
                        Ppat_var "closure_env_without_parameters" (middle_end/flambda/closure_conversion.ml[562,24324+6]..[562,24324+36])
                      expression (middle_end/flambda/closure_conversion.ml[563,24363+4]..[564,24413+40])
                        Pexp_apply
                        expression (middle_end/flambda/closure_conversion.ml[563,24363+4]..[563,24363+49])
                          Pexp_ident "Function_decls.closure_env_without_parameters" (middle_end/flambda/closure_conversion.ml[563,24363+4]..[563,24363+49])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[564,24413+6]..[564,24413+18])
                              Pexp_ident "external_env" (middle_end/flambda/closure_conversion.ml[564,24413+6]..[564,24413+18])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/closure_conversion.ml[564,24413+19]..[564,24413+40])
                              Pexp_ident "function_declarations" (middle_end/flambda/closure_conversion.ml[564,24413+19]..[564,24413+40])
                        ]
                  ]
                  expression (middle_end/flambda/closure_conversion.ml[566,24459+2]..[640,27712+33])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/closure_conversion.ml[566,24459+6]..[566,24459+21])
                          Ppat_var "all_free_idents" (middle_end/flambda/closure_conversion.ml[566,24459+6]..[566,24459+21])
                        expression (middle_end/flambda/closure_conversion.ml[566,24459+24]..[566,24459+76])
                          Pexp_apply
                          expression (middle_end/flambda/closure_conversion.ml[566,24459+24]..[566,24459+54])
                            Pexp_ident "Function_decls.all_free_idents" (middle_end/flambda/closure_conversion.ml[566,24459+24]..[566,24459+54])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[566,24459+55]..[566,24459+76])
                                Pexp_ident "function_declarations" (middle_end/flambda/closure_conversion.ml[566,24459+55]..[566,24459+76])
                          ]
                    ]
                    expression (middle_end/flambda/closure_conversion.ml[567,24539+2]..[640,27712+33])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/closure_conversion.ml[567,24539+6]..[567,24539+24])
                            Ppat_var "close_one_function" (middle_end/flambda/closure_conversion.ml[567,24539+6]..[567,24539+24])
                          expression (middle_end/flambda/closure_conversion.ml[567,24539+25]..[609,26534+70]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/closure_conversion.ml[567,24539+25]..[567,24539+28])
                              Ppat_var "map" (middle_end/flambda/closure_conversion.ml[567,24539+25]..[567,24539+28])
                            expression (middle_end/flambda/closure_conversion.ml[567,24539+29]..[609,26534+70]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/closure_conversion.ml[567,24539+29]..[567,24539+33])
                                Ppat_var "decl" (middle_end/flambda/closure_conversion.ml[567,24539+29]..[567,24539+33])
                              expression (middle_end/flambda/closure_conversion.ml[568,24575+4]..[609,26534+70])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/closure_conversion.ml[568,24575+8]..[568,24575+12])
                                      Ppat_var "body" (middle_end/flambda/closure_conversion.ml[568,24575+8]..[568,24575+12])
                                    expression (middle_end/flambda/closure_conversion.ml[568,24575+15]..[568,24575+38])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[568,24575+15]..[568,24575+33])
                                        Pexp_ident "Function_decl.body" (middle_end/flambda/closure_conversion.ml[568,24575+15]..[568,24575+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[568,24575+34]..[568,24575+38])
                                            Pexp_ident "decl" (middle_end/flambda/closure_conversion.ml[568,24575+34]..[568,24575+38])
                                      ]
                                ]
                                expression (middle_end/flambda/closure_conversion.ml[569,24617+4]..[609,26534+70])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/closure_conversion.ml[569,24617+8]..[569,24617+11])
                                        Ppat_var "loc" (middle_end/flambda/closure_conversion.ml[569,24617+8]..[569,24617+11])
                                      expression (middle_end/flambda/closure_conversion.ml[569,24617+14]..[569,24617+36])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[569,24617+14]..[569,24617+31])
                                          Pexp_ident "Function_decl.loc" (middle_end/flambda/closure_conversion.ml[569,24617+14]..[569,24617+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[569,24617+32]..[569,24617+36])
                                              Pexp_ident "decl" (middle_end/flambda/closure_conversion.ml[569,24617+32]..[569,24617+36])
                                        ]
                                  ]
                                  expression (middle_end/flambda/closure_conversion.ml[570,24657+4]..[609,26534+70])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/closure_conversion.ml[570,24657+8]..[570,24657+11])
                                          Ppat_var "dbg" (middle_end/flambda/closure_conversion.ml[570,24657+8]..[570,24657+11])
                                        expression (middle_end/flambda/closure_conversion.ml[570,24657+14]..[570,24657+41])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[570,24657+14]..[570,24657+37])
                                            Pexp_ident "Debuginfo.from_location" (middle_end/flambda/closure_conversion.ml[570,24657+14]..[570,24657+37])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[570,24657+38]..[570,24657+41])
                                                Pexp_ident "loc" (middle_end/flambda/closure_conversion.ml[570,24657+38]..[570,24657+41])
                                          ]
                                    ]
                                    expression (middle_end/flambda/closure_conversion.ml[571,24702+4]..[609,26534+70])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/closure_conversion.ml[571,24702+8]..[571,24702+14])
                                            Ppat_var "params" (middle_end/flambda/closure_conversion.ml[571,24702+8]..[571,24702+14])
                                          expression (middle_end/flambda/closure_conversion.ml[571,24702+17]..[571,24702+42])
                                            Pexp_apply
                                            expression (middle_end/flambda/closure_conversion.ml[571,24702+17]..[571,24702+37])
                                              Pexp_ident "Function_decl.params" (middle_end/flambda/closure_conversion.ml[571,24702+17]..[571,24702+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[571,24702+38]..[571,24702+42])
                                                  Pexp_ident "decl" (middle_end/flambda/closure_conversion.ml[571,24702+38]..[571,24702+42])
                                            ]
                                      ]
                                      expression (middle_end/flambda/closure_conversion.ml[576,25027+4]..[609,26534+70])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/closure_conversion.ml[576,25027+8]..[576,25027+19])
                                              Ppat_var "closure_env" (middle_end/flambda/closure_conversion.ml[576,25027+8]..[576,25027+19])
                                            expression (middle_end/flambda/closure_conversion.ml[577,25049+6]..[579,25161+45])
                                              Pexp_apply
                                              expression (middle_end/flambda/closure_conversion.ml[577,25049+6]..[577,25049+21])
                                                Pexp_ident "List.fold_right" (middle_end/flambda/closure_conversion.ml[577,25049+6]..[577,25049+21])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[577,25049+22]..[578,25086+74])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (middle_end/flambda/closure_conversion.ml[577,25049+27]..[577,25049+29])
                                                      Ppat_var "id" (middle_end/flambda/closure_conversion.ml[577,25049+27]..[577,25049+29])
                                                    expression (middle_end/flambda/closure_conversion.ml[577,25049+30]..[578,25086+73]) ghost
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (middle_end/flambda/closure_conversion.ml[577,25049+30]..[577,25049+33])
                                                        Ppat_var "env" (middle_end/flambda/closure_conversion.ml[577,25049+30]..[577,25049+33])
                                                      expression (middle_end/flambda/closure_conversion.ml[578,25086+10]..[578,25086+73])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/closure_conversion.ml[578,25086+10]..[578,25086+21])
                                                          Pexp_ident "Env.add_var" (middle_end/flambda/closure_conversion.ml[578,25086+10]..[578,25086+21])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/closure_conversion.ml[578,25086+22]..[578,25086+25])
                                                              Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[578,25086+22]..[578,25086+25])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/closure_conversion.ml[578,25086+26]..[578,25086+28])
                                                              Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[578,25086+26]..[578,25086+28])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/closure_conversion.ml[578,25086+29]..[578,25086+73])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/closure_conversion.ml[578,25086+30]..[578,25086+69])
                                                                Pexp_ident "Variable.create_with_same_name_as_ident" (middle_end/flambda/closure_conversion.ml[578,25086+30]..[578,25086+69])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/closure_conversion.ml[578,25086+70]..[578,25086+72])
                                                                    Pexp_ident "id" (middle_end/flambda/closure_conversion.ml[578,25086+70]..[578,25086+72])
                                                              ]
                                                        ]
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[579,25161+8]..[579,25161+14])
                                                    Pexp_ident "params" (middle_end/flambda/closure_conversion.ml[579,25161+8]..[579,25161+14])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[579,25161+15]..[579,25161+45])
                                                    Pexp_ident "closure_env_without_parameters" (middle_end/flambda/closure_conversion.ml[579,25161+15]..[579,25161+45])
                                              ]
                                        ]
                                        expression (middle_end/flambda/closure_conversion.ml[585,25477+4]..[609,26534+70])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/closure_conversion.ml[585,25477+8]..[585,25477+12])
                                                Ppat_var "stub" (middle_end/flambda/closure_conversion.ml[585,25477+8]..[585,25477+12])
                                              expression (middle_end/flambda/closure_conversion.ml[585,25477+15]..[585,25477+38])
                                                Pexp_apply
                                                expression (middle_end/flambda/closure_conversion.ml[585,25477+15]..[585,25477+33])
                                                  Pexp_ident "Function_decl.stub" (middle_end/flambda/closure_conversion.ml[585,25477+15]..[585,25477+33])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/closure_conversion.ml[585,25477+34]..[585,25477+38])
                                                      Pexp_ident "decl" (middle_end/flambda/closure_conversion.ml[585,25477+34]..[585,25477+38])
                                                ]
                                          ]
                                          expression (middle_end/flambda/closure_conversion.ml[586,25519+4]..[609,26534+70])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/closure_conversion.ml[586,25519+8]..[586,25519+18])
                                                  Ppat_var "param_vars" (middle_end/flambda/closure_conversion.ml[586,25519+8]..[586,25519+18])
                                                expression (middle_end/flambda/closure_conversion.ml[586,25519+21]..[586,25519+63])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/closure_conversion.ml[586,25519+21]..[586,25519+29])
                                                    Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[586,25519+21]..[586,25519+29])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[586,25519+30]..[586,25519+56])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/closure_conversion.ml[586,25519+31]..[586,25519+43])
                                                          Pexp_ident "Env.find_var" (middle_end/flambda/closure_conversion.ml[586,25519+31]..[586,25519+43])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/closure_conversion.ml[586,25519+44]..[586,25519+55])
                                                              Pexp_ident "closure_env" (middle_end/flambda/closure_conversion.ml[586,25519+44]..[586,25519+55])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[586,25519+57]..[586,25519+63])
                                                        Pexp_ident "params" (middle_end/flambda/closure_conversion.ml[586,25519+57]..[586,25519+63])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/closure_conversion.ml[587,25586+4]..[609,26534+70])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/closure_conversion.ml[587,25586+8]..[587,25586+14])
                                                    Ppat_var "params" (middle_end/flambda/closure_conversion.ml[587,25586+8]..[587,25586+14])
                                                  expression (middle_end/flambda/closure_conversion.ml[587,25586+17]..[587,25586+51])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/closure_conversion.ml[587,25586+17]..[587,25586+25])
                                                      Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[587,25586+17]..[587,25586+25])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[587,25586+26]..[587,25586+40])
                                                          Pexp_ident "Parameter.wrap" (middle_end/flambda/closure_conversion.ml[587,25586+26]..[587,25586+40])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[587,25586+41]..[587,25586+51])
                                                          Pexp_ident "param_vars" (middle_end/flambda/closure_conversion.ml[587,25586+41]..[587,25586+51])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/closure_conversion.ml[588,25641+4]..[609,26534+70])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/closure_conversion.ml[588,25641+8]..[588,25641+25])
                                                      Ppat_var "closure_bound_var" (middle_end/flambda/closure_conversion.ml[588,25641+8]..[588,25641+25])
                                                    expression (middle_end/flambda/closure_conversion.ml[588,25641+28]..[588,25641+64])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/closure_conversion.ml[588,25641+28]..[588,25641+59])
                                                        Pexp_ident "Function_decl.closure_bound_var" (middle_end/flambda/closure_conversion.ml[588,25641+28]..[588,25641+59])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/closure_conversion.ml[588,25641+60]..[588,25641+64])
                                                            Pexp_ident "decl" (middle_end/flambda/closure_conversion.ml[588,25641+60]..[588,25641+64])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/closure_conversion.ml[589,25709+4]..[609,26534+70])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/closure_conversion.ml[589,25709+8]..[589,25709+23])
                                                        Ppat_var "unboxed_version" (middle_end/flambda/closure_conversion.ml[589,25709+8]..[589,25709+23])
                                                      expression (middle_end/flambda/closure_conversion.ml[589,25709+26]..[589,25709+59])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/closure_conversion.ml[589,25709+26]..[589,25709+41])
                                                          Pexp_ident "Variable.rename" (middle_end/flambda/closure_conversion.ml[589,25709+26]..[589,25709+41])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/closure_conversion.ml[589,25709+42]..[589,25709+59])
                                                              Pexp_ident "closure_bound_var" (middle_end/flambda/closure_conversion.ml[589,25709+42]..[589,25709+59])
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/closure_conversion.ml[590,25772+4]..[609,26534+70])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/flambda/closure_conversion.ml[590,25772+8]..[590,25772+12])
                                                          Ppat_var "body" (middle_end/flambda/closure_conversion.ml[590,25772+8]..[590,25772+12])
                                                        expression (middle_end/flambda/closure_conversion.ml[590,25772+15]..[590,25772+39])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/closure_conversion.ml[590,25772+15]..[590,25772+20])
                                                            Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[590,25772+15]..[590,25772+20])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/closure_conversion.ml[590,25772+21]..[590,25772+22])
                                                                Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[590,25772+21]..[590,25772+22])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/closure_conversion.ml[590,25772+23]..[590,25772+34])
                                                                Pexp_ident "closure_env" (middle_end/flambda/closure_conversion.ml[590,25772+23]..[590,25772+34])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/closure_conversion.ml[590,25772+35]..[590,25772+39])
                                                                Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[590,25772+35]..[590,25772+39])
                                                          ]
                                                    ]
                                                    expression (middle_end/flambda/closure_conversion.ml[591,25815+4]..[609,26534+70])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (middle_end/flambda/closure_conversion.ml[591,25815+8]..[591,25815+22])
                                                            Ppat_var "closure_origin" (middle_end/flambda/closure_conversion.ml[591,25815+8]..[591,25815+22])
                                                          expression (middle_end/flambda/closure_conversion.ml[592,25840+6]..[592,25840+61])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/closure_conversion.ml[592,25840+6]..[592,25840+27])
                                                              Pexp_ident "Closure_origin.create" (middle_end/flambda/closure_conversion.ml[592,25840+6]..[592,25840+27])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/closure_conversion.ml[592,25840+28]..[592,25840+61])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/closure_conversion.ml[592,25840+29]..[592,25840+44])
                                                                    Pexp_ident "Closure_id.wrap" (middle_end/flambda/closure_conversion.ml[592,25840+29]..[592,25840+44])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/closure_conversion.ml[592,25840+45]..[592,25840+60])
Pexp_ident "unboxed_version" (middle_end/flambda/closure_conversion.ml[592,25840+45]..[592,25840+60])
                                                                  ]
                                                            ]
                                                      ]
                                                      expression (middle_end/flambda/closure_conversion.ml[594,25909+4]..[609,26534+70])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (middle_end/flambda/closure_conversion.ml[594,25909+8]..[594,25909+16])
                                                              Ppat_var "fun_decl" (middle_end/flambda/closure_conversion.ml[594,25909+8]..[594,25909+16])
                                                            expression (middle_end/flambda/closure_conversion.ml[595,25928+6]..[599,26147+23])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/closure_conversion.ml[595,25928+6]..[595,25928+41])
                                                                Pexp_ident "Flambda.create_function_declaration" (middle_end/flambda/closure_conversion.ml[595,25928+6]..[595,25928+41])
                                                              [
                                                                <arg>
                                                                Labelled "params"
                                                                  expression (middle_end/flambda/closure_conversion.ml[595,25928+43]..[595,25928+49])
                                                                    Pexp_ident "params" (middle_end/flambda/closure_conversion.ml[595,25928+43]..[595,25928+49])
                                                                <arg>
                                                                Labelled "body"
                                                                  expression (middle_end/flambda/closure_conversion.ml[595,25928+51]..[595,25928+55])
                                                                    Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[595,25928+51]..[595,25928+55])
                                                                <arg>
                                                                Labelled "stub"
                                                                  expression (middle_end/flambda/closure_conversion.ml[595,25928+57]..[595,25928+61])
                                                                    Pexp_ident "stub" (middle_end/flambda/closure_conversion.ml[595,25928+57]..[595,25928+61])
                                                                <arg>
                                                                Labelled "dbg"
                                                                  expression (middle_end/flambda/closure_conversion.ml[595,25928+63]..[595,25928+66])
                                                                    Pexp_ident "dbg" (middle_end/flambda/closure_conversion.ml[595,25928+63]..[595,25928+66])
                                                                <arg>
                                                                Labelled "inline"
                                                                  expression (middle_end/flambda/closure_conversion.ml[596,25995+16]..[596,25995+43])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/closure_conversion.ml[596,25995+17]..[596,25995+37])
                                                                      Pexp_ident "Function_decl.inline" (middle_end/flambda/closure_conversion.ml[596,25995+17]..[596,25995+37])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/closure_conversion.ml[596,25995+38]..[596,25995+42])
  Pexp_ident "decl" (middle_end/flambda/closure_conversion.ml[596,25995+38]..[596,25995+42])
                                                                    ]
                                                                <arg>
                                                                Labelled "specialise"
                                                                  expression (middle_end/flambda/closure_conversion.ml[597,26039+20]..[597,26039+51])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/closure_conversion.ml[597,26039+21]..[597,26039+45])
                                                                      Pexp_ident "Function_decl.specialise" (middle_end/flambda/closure_conversion.ml[597,26039+21]..[597,26039+45])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/closure_conversion.ml[597,26039+46]..[597,26039+50])
  Pexp_ident "decl" (middle_end/flambda/closure_conversion.ml[597,26039+46]..[597,26039+50])
                                                                    ]
                                                                <arg>
                                                                Labelled "is_a_functor"
                                                                  expression (middle_end/flambda/closure_conversion.ml[598,26091+22]..[598,26091+55])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/closure_conversion.ml[598,26091+23]..[598,26091+49])
                                                                      Pexp_ident "Function_decl.is_a_functor" (middle_end/flambda/closure_conversion.ml[598,26091+23]..[598,26091+49])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/closure_conversion.ml[598,26091+50]..[598,26091+54])
  Pexp_ident "decl" (middle_end/flambda/closure_conversion.ml[598,26091+50]..[598,26091+54])
                                                                    ]
                                                                <arg>
                                                                Labelled "closure_origin"
                                                                  expression (middle_end/flambda/closure_conversion.ml[599,26147+9]..[599,26147+23])
                                                                    Pexp_ident "closure_origin" (middle_end/flambda/closure_conversion.ml[599,26147+9]..[599,26147+23])
                                                              ]
                                                        ]
                                                        expression (middle_end/flambda/closure_conversion.ml[601,26178+4]..[609,26534+70])
                                                          Pexp_match
                                                          expression (middle_end/flambda/closure_conversion.ml[601,26178+10]..[601,26178+33])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/closure_conversion.ml[601,26178+10]..[601,26178+28])
                                                              Pexp_ident "Function_decl.kind" (middle_end/flambda/closure_conversion.ml[601,26178+10]..[601,26178+28])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/closure_conversion.ml[601,26178+29]..[601,26178+33])
                                                                  Pexp_ident "decl" (middle_end/flambda/closure_conversion.ml[601,26178+29]..[601,26178+33])
                                                            ]
                                                          [
                                                            <case>
                                                              pattern (middle_end/flambda/closure_conversion.ml[602,26217+6]..[602,26217+13])
                                                                Ppat_construct "Curried" (middle_end/flambda/closure_conversion.ml[602,26217+6]..[602,26217+13])
                                                                None
                                                              expression (middle_end/flambda/closure_conversion.ml[602,26217+17]..[602,26217+64])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/closure_conversion.ml[602,26217+17]..[602,26217+33])
                                                                  Pexp_ident "Variable.Map.add" (middle_end/flambda/closure_conversion.ml[602,26217+17]..[602,26217+33])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/closure_conversion.ml[602,26217+34]..[602,26217+51])
                                                                      Pexp_ident "closure_bound_var" (middle_end/flambda/closure_conversion.ml[602,26217+34]..[602,26217+51])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/closure_conversion.ml[602,26217+52]..[602,26217+60])
                                                                      Pexp_ident "fun_decl" (middle_end/flambda/closure_conversion.ml[602,26217+52]..[602,26217+60])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/closure_conversion.ml[602,26217+61]..[602,26217+64])
                                                                      Pexp_ident "map" (middle_end/flambda/closure_conversion.ml[602,26217+61]..[602,26217+64])
                                                                ]
                                                            <case>
                                                              pattern (middle_end/flambda/closure_conversion.ml[603,26282+6]..[603,26282+12])
                                                                Ppat_construct "Tupled" (middle_end/flambda/closure_conversion.ml[603,26282+6]..[603,26282+12])
                                                                None
                                                              expression (middle_end/flambda/closure_conversion.ml[604,26298+6]..[609,26534+70])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (middle_end/flambda/closure_conversion.ml[604,26298+10]..[604,26298+25])
                                                                      Ppat_var "unboxed_version" (middle_end/flambda/closure_conversion.ml[604,26298+10]..[604,26298+25])
                                                                    expression (middle_end/flambda/closure_conversion.ml[604,26298+28]..[604,26298+61])
                                                                      Pexp_apply
                                                                      expression (middle_end/flambda/closure_conversion.ml[604,26298+28]..[604,26298+43])
Pexp_ident "Variable.rename" (middle_end/flambda/closure_conversion.ml[604,26298+28]..[604,26298+43])
                                                                      [
<arg>
Nolabel
  expression (middle_end/flambda/closure_conversion.ml[604,26298+44]..[604,26298+61])
    Pexp_ident "closure_bound_var" (middle_end/flambda/closure_conversion.ml[604,26298+44]..[604,26298+61])
                                                                      ]
                                                                ]
                                                                expression (middle_end/flambda/closure_conversion.ml[605,26363+6]..[609,26534+70])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (middle_end/flambda/closure_conversion.ml[605,26363+10]..[605,26363+31])
Ppat_var "generic_function_stub" (middle_end/flambda/closure_conversion.ml[605,26363+10]..[605,26363+31])
                                                                      expression (middle_end/flambda/closure_conversion.ml[606,26397+8]..[606,26397+79])
Pexp_apply
expression (middle_end/flambda/closure_conversion.ml[606,26397+8]..[606,26397+33])
  Pexp_ident "tupled_function_call_stub" (middle_end/flambda/closure_conversion.ml[606,26397+8]..[606,26397+33])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/closure_conversion.ml[606,26397+34]..[606,26397+44])
      Pexp_ident "param_vars" (middle_end/flambda/closure_conversion.ml[606,26397+34]..[606,26397+44])
  <arg>
  Nolabel
    expression (middle_end/flambda/closure_conversion.ml[606,26397+45]..[606,26397+60])
      Pexp_ident "unboxed_version" (middle_end/flambda/closure_conversion.ml[606,26397+45]..[606,26397+60])
  <arg>
  Labelled "closure_bound_var"
    expression (middle_end/flambda/closure_conversion.ml[606,26397+62]..[606,26397+79])
      Pexp_ident "closure_bound_var" (middle_end/flambda/closure_conversion.ml[606,26397+62]..[606,26397+79])
]
                                                                  ]
                                                                  expression (middle_end/flambda/closure_conversion.ml[608,26486+6]..[609,26534+70])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/closure_conversion.ml[608,26486+6]..[608,26486+22])
                                                                      Pexp_ident "Variable.Map.add" (middle_end/flambda/closure_conversion.ml[608,26486+6]..[608,26486+22])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/closure_conversion.ml[608,26486+23]..[608,26486+38])
  Pexp_ident "unboxed_version" (middle_end/flambda/closure_conversion.ml[608,26486+23]..[608,26486+38])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/closure_conversion.ml[608,26486+39]..[608,26486+47])
  Pexp_ident "fun_decl" (middle_end/flambda/closure_conversion.ml[608,26486+39]..[608,26486+47])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/closure_conversion.ml[609,26534+8]..[609,26534+70])
  Pexp_apply
  expression (middle_end/flambda/closure_conversion.ml[609,26534+9]..[609,26534+25])
    Pexp_ident "Variable.Map.add" (middle_end/flambda/closure_conversion.ml[609,26534+9]..[609,26534+25])
  [
    <arg>
    Nolabel
      expression (middle_end/flambda/closure_conversion.ml[609,26534+26]..[609,26534+43])
        Pexp_ident "closure_bound_var" (middle_end/flambda/closure_conversion.ml[609,26534+26]..[609,26534+43])
    <arg>
    Nolabel
      expression (middle_end/flambda/closure_conversion.ml[609,26534+44]..[609,26534+65])
        Pexp_ident "generic_function_stub" (middle_end/flambda/closure_conversion.ml[609,26534+44]..[609,26534+65])
    <arg>
    Nolabel
      expression (middle_end/flambda/closure_conversion.ml[609,26534+66]..[609,26534+69])
        Pexp_ident "map" (middle_end/flambda/closure_conversion.ml[609,26534+66]..[609,26534+69])
  ]
                                                                    ]
                                                          ]
                      ]
                      expression (middle_end/flambda/closure_conversion.ml[611,26610+2]..[640,27712+33])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[611,26610+6]..[611,26610+20])
                              Ppat_var "function_decls" (middle_end/flambda/closure_conversion.ml[611,26610+6]..[611,26610+20])
                            expression (middle_end/flambda/closure_conversion.ml[612,26633+4]..[617,26824+63])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/closure_conversion.ml[612,26633+8]..[612,26633+23])
                                    Ppat_var "is_classic_mode" (middle_end/flambda/closure_conversion.ml[612,26633+8]..[612,26633+23])
                                  expression (middle_end/flambda/closure_conversion.ml[612,26633+26]..[612,26633+51])
                                    Pexp_apply
                                    expression (middle_end/flambda/closure_conversion.ml[612,26633+26]..[612,26633+27])
                                      Pexp_ident "!" (middle_end/flambda/closure_conversion.ml[612,26633+26]..[612,26633+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/closure_conversion.ml[612,26633+27]..[612,26633+51])
                                          Pexp_ident "Clflags.classic_inlining" (middle_end/flambda/closure_conversion.ml[612,26633+27]..[612,26633+51])
                                    ]
                              ]
                              expression (middle_end/flambda/closure_conversion.ml[613,26688+4]..[617,26824+63])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/closure_conversion.ml[613,26688+8]..[613,26688+12])
                                      Ppat_var "funs" (middle_end/flambda/closure_conversion.ml[613,26688+8]..[613,26688+12])
                                    expression (middle_end/flambda/closure_conversion.ml[614,26703+6]..[615,26762+54])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[614,26703+6]..[614,26703+20])
                                        Pexp_ident "List.fold_left" (middle_end/flambda/closure_conversion.ml[614,26703+6]..[614,26703+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[614,26703+21]..[614,26703+39])
                                            Pexp_ident "close_one_function" (middle_end/flambda/closure_conversion.ml[614,26703+21]..[614,26703+39])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[614,26703+40]..[614,26703+58])
                                            Pexp_ident "Variable.Map.empty" (middle_end/flambda/closure_conversion.ml[614,26703+40]..[614,26703+58])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[615,26762+8]..[615,26762+54])
                                            Pexp_apply
                                            expression (middle_end/flambda/closure_conversion.ml[615,26762+9]..[615,26762+31])
                                              Pexp_ident "Function_decls.to_list" (middle_end/flambda/closure_conversion.ml[615,26762+9]..[615,26762+31])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/closure_conversion.ml[615,26762+32]..[615,26762+53])
                                                  Pexp_ident "function_declarations" (middle_end/flambda/closure_conversion.ml[615,26762+32]..[615,26762+53])
                                            ]
                                      ]
                                ]
                                expression (middle_end/flambda/closure_conversion.ml[617,26824+4]..[617,26824+63])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[617,26824+4]..[617,26824+40])
                                    Pexp_ident "Flambda.create_function_declarations" (middle_end/flambda/closure_conversion.ml[617,26824+4]..[617,26824+40])
                                  [
                                    <arg>
                                    Labelled "is_classic_mode"
                                      expression (middle_end/flambda/closure_conversion.ml[617,26824+42]..[617,26824+57])
                                        Pexp_ident "is_classic_mode" (middle_end/flambda/closure_conversion.ml[617,26824+42]..[617,26824+57])
                                    <arg>
                                    Labelled "funs"
                                      expression (middle_end/flambda/closure_conversion.ml[617,26824+59]..[617,26824+63])
                                        Pexp_ident "funs" (middle_end/flambda/closure_conversion.ml[617,26824+59]..[617,26824+63])
                                  ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[622,27097+2]..[640,27712+33])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[622,27097+6]..[622,27097+21])
                                Ppat_var "set_of_closures" (middle_end/flambda/closure_conversion.ml[622,27097+6]..[622,27097+21])
                              expression (middle_end/flambda/closure_conversion.ml[623,27121+4]..[638,27658+48])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/closure_conversion.ml[623,27121+8]..[623,27121+17])
                                      Ppat_var "free_vars" (middle_end/flambda/closure_conversion.ml[623,27121+8]..[623,27121+17])
                                    expression (middle_end/flambda/closure_conversion.ml[624,27141+6]..[634,27503+42])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[624,27141+6]..[624,27141+20])
                                        Pexp_ident "Ident.Set.fold" (middle_end/flambda/closure_conversion.ml[624,27141+6]..[624,27141+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[624,27141+21]..[633,27445+57])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/flambda/closure_conversion.ml[624,27141+26]..[624,27141+29])
                                              Ppat_var "var" (middle_end/flambda/closure_conversion.ml[624,27141+26]..[624,27141+29])
                                            expression (middle_end/flambda/closure_conversion.ml[624,27141+30]..[633,27445+56]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/flambda/closure_conversion.ml[624,27141+30]..[624,27141+33])
                                                Ppat_var "map" (middle_end/flambda/closure_conversion.ml[624,27141+30]..[624,27141+33])
                                              expression (middle_end/flambda/closure_conversion.ml[625,27178+10]..[633,27445+56])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/closure_conversion.ml[625,27178+14]..[625,27178+26])
                                                      Ppat_var "internal_var" (middle_end/flambda/closure_conversion.ml[625,27178+14]..[625,27178+26])
                                                    expression (middle_end/flambda/closure_conversion.ml[626,27207+12]..[626,27207+59])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/closure_conversion.ml[626,27207+12]..[626,27207+24])
                                                        Pexp_ident "Env.find_var" (middle_end/flambda/closure_conversion.ml[626,27207+12]..[626,27207+24])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/closure_conversion.ml[626,27207+25]..[626,27207+55])
                                                            Pexp_ident "closure_env_without_parameters" (middle_end/flambda/closure_conversion.ml[626,27207+25]..[626,27207+55])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/closure_conversion.ml[626,27207+56]..[626,27207+59])
                                                            Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[626,27207+56]..[626,27207+59])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/closure_conversion.ml[628,27280+10]..[633,27445+56])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/closure_conversion.ml[628,27280+14]..[628,27280+51]) ghost
                                                        Ppat_constraint
                                                        pattern (middle_end/flambda/closure_conversion.ml[628,27280+14]..[628,27280+26])
                                                          Ppat_var "external_var" (middle_end/flambda/closure_conversion.ml[628,27280+14]..[628,27280+26])
                                                        core_type (middle_end/flambda/closure_conversion.ml[628,27280+29]..[628,27280+51]) ghost
                                                          Ptyp_poly
                                                          core_type (middle_end/flambda/closure_conversion.ml[628,27280+29]..[628,27280+51])
                                                            Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/closure_conversion.ml[628,27280+29]..[628,27280+51])
                                                            []
                                                      expression (middle_end/flambda/closure_conversion.ml[628,27280+14]..[631,27418+13])
                                                        Pexp_constraint
                                                        expression (middle_end/flambda/closure_conversion.ml[629,27334+12]..[631,27418+13])
                                                          Pexp_record
                                                          [
                                                            "var" (middle_end/flambda/closure_conversion.ml[629,27334+14]..[629,27334+17])
                                                              expression (middle_end/flambda/closure_conversion.ml[629,27334+20]..[629,27334+49])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/closure_conversion.ml[629,27334+20]..[629,27334+32])
                                                                  Pexp_ident "Env.find_var" (middle_end/flambda/closure_conversion.ml[629,27334+20]..[629,27334+32])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/closure_conversion.ml[629,27334+33]..[629,27334+45])
                                                                      Pexp_ident "external_env" (middle_end/flambda/closure_conversion.ml[629,27334+33]..[629,27334+45])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/closure_conversion.ml[629,27334+46]..[629,27334+49])
                                                                      Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[629,27334+46]..[629,27334+49])
                                                                ]
                                                            "projection" (middle_end/flambda/closure_conversion.ml[630,27385+14]..[630,27385+24])
                                                              expression (middle_end/flambda/closure_conversion.ml[630,27385+27]..[630,27385+31])
                                                                Pexp_construct "None" (middle_end/flambda/closure_conversion.ml[630,27385+27]..[630,27385+31])
                                                                None
                                                          ]
                                                          None
                                                        core_type (middle_end/flambda/closure_conversion.ml[628,27280+29]..[628,27280+51])
                                                          Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/closure_conversion.ml[628,27280+29]..[628,27280+51])
                                                          []
                                                  ]
                                                  expression (middle_end/flambda/closure_conversion.ml[633,27445+10]..[633,27445+56])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/closure_conversion.ml[633,27445+10]..[633,27445+26])
                                                      Pexp_ident "Variable.Map.add" (middle_end/flambda/closure_conversion.ml[633,27445+10]..[633,27445+26])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[633,27445+27]..[633,27445+39])
                                                          Pexp_ident "internal_var" (middle_end/flambda/closure_conversion.ml[633,27445+27]..[633,27445+39])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[633,27445+40]..[633,27445+52])
                                                          Pexp_ident "external_var" (middle_end/flambda/closure_conversion.ml[633,27445+40]..[633,27445+52])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[633,27445+53]..[633,27445+56])
                                                          Pexp_ident "map" (middle_end/flambda/closure_conversion.ml[633,27445+53]..[633,27445+56])
                                                    ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[634,27503+8]..[634,27503+23])
                                            Pexp_ident "all_free_idents" (middle_end/flambda/closure_conversion.ml[634,27503+8]..[634,27503+23])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[634,27503+24]..[634,27503+42])
                                            Pexp_ident "Variable.Map.empty" (middle_end/flambda/closure_conversion.ml[634,27503+24]..[634,27503+42])
                                      ]
                                ]
                                expression (middle_end/flambda/closure_conversion.ml[636,27553+4]..[638,27658+48])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[636,27553+4]..[636,27553+34])
                                    Pexp_ident "Flambda.create_set_of_closures" (middle_end/flambda/closure_conversion.ml[636,27553+4]..[636,27553+34])
                                  [
                                    <arg>
                                    Labelled "function_decls"
                                      expression (middle_end/flambda/closure_conversion.ml[636,27553+36]..[636,27553+50])
                                        Pexp_ident "function_decls" (middle_end/flambda/closure_conversion.ml[636,27553+36]..[636,27553+50])
                                    <arg>
                                    Labelled "free_vars"
                                      expression (middle_end/flambda/closure_conversion.ml[636,27553+52]..[636,27553+61])
                                        Pexp_ident "free_vars" (middle_end/flambda/closure_conversion.ml[636,27553+52]..[636,27553+61])
                                    <arg>
                                    Labelled "specialised_args"
                                      expression (middle_end/flambda/closure_conversion.ml[637,27615+24]..[637,27615+42])
                                        Pexp_ident "Variable.Map.empty" (middle_end/flambda/closure_conversion.ml[637,27615+24]..[637,27615+42])
                                    <arg>
                                    Labelled "direct_call_surrogates"
                                      expression (middle_end/flambda/closure_conversion.ml[638,27658+30]..[638,27658+48])
                                        Pexp_ident "Variable.Map.empty" (middle_end/flambda/closure_conversion.ml[638,27658+30]..[638,27658+48])
                                  ]
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[640,27712+2]..[640,27712+33])
                            Pexp_construct "Set_of_closures" (middle_end/flambda/closure_conversion.ml[640,27712+2]..[640,27712+17])
                            Some
                              expression (middle_end/flambda/closure_conversion.ml[640,27712+18]..[640,27712+33])
                                Pexp_ident "set_of_closures" (middle_end/flambda/closure_conversion.ml[640,27712+18]..[640,27712+33])
                core_type (middle_end/flambda/closure_conversion.ml[561,24249+59]..[561,24249+72])
                  Ptyp_constr "Flambda.named" (middle_end/flambda/closure_conversion.ml[561,24249+59]..[561,24249+72])
                  []
      <def>
        pattern (middle_end/flambda/closure_conversion.ml[642,27747+4]..[642,27747+14])
          Ppat_var "close_list" (middle_end/flambda/closure_conversion.ml[642,27747+4]..[642,27747+14])
        expression (middle_end/flambda/closure_conversion.ml[642,27747+15]..[642,27747+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/closure_conversion.ml[642,27747+15]..[642,27747+16])
            Ppat_var "t" (middle_end/flambda/closure_conversion.ml[642,27747+15]..[642,27747+16])
          expression (middle_end/flambda/closure_conversion.ml[642,27747+17]..[642,27747+47]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/closure_conversion.ml[642,27747+17]..[642,27747+19])
              Ppat_var "sb" (middle_end/flambda/closure_conversion.ml[642,27747+17]..[642,27747+19])
            expression (middle_end/flambda/closure_conversion.ml[642,27747+20]..[642,27747+47]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/closure_conversion.ml[642,27747+20]..[642,27747+21])
                Ppat_var "l" (middle_end/flambda/closure_conversion.ml[642,27747+20]..[642,27747+21])
              expression (middle_end/flambda/closure_conversion.ml[642,27747+24]..[642,27747+47])
                Pexp_apply
                expression (middle_end/flambda/closure_conversion.ml[642,27747+24]..[642,27747+32])
                  Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[642,27747+24]..[642,27747+32])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/closure_conversion.ml[642,27747+33]..[642,27747+45])
                      Pexp_apply
                      expression (middle_end/flambda/closure_conversion.ml[642,27747+34]..[642,27747+39])
                        Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[642,27747+34]..[642,27747+39])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[642,27747+40]..[642,27747+41])
                            Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[642,27747+40]..[642,27747+41])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/closure_conversion.ml[642,27747+42]..[642,27747+44])
                            Pexp_ident "sb" (middle_end/flambda/closure_conversion.ml[642,27747+42]..[642,27747+44])
                      ]
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/closure_conversion.ml[642,27747+46]..[642,27747+47])
                      Pexp_ident "l" (middle_end/flambda/closure_conversion.ml[642,27747+46]..[642,27747+47])
                ]
      <def>
        pattern (middle_end/flambda/closure_conversion.ml[644,27796+4]..[644,27796+30])
          Ppat_var "close_let_bound_expression" (middle_end/flambda/closure_conversion.ml[644,27796+4]..[644,27796+30])
        expression (middle_end/flambda/closure_conversion.ml[644,27796+31]..[667,28752+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/closure_conversion.ml[644,27796+31]..[644,27796+32])
            Ppat_var "t" (middle_end/flambda/closure_conversion.ml[644,27796+31]..[644,27796+32])
          expression (middle_end/flambda/closure_conversion.ml[644,27796+33]..[667,28752+33]) ghost
            Pexp_fun
            Optional "let_rec_ident"
            None
            pattern (middle_end/flambda/closure_conversion.ml[644,27796+34]..[644,27796+47])
              Ppat_var "let_rec_ident" (middle_end/flambda/closure_conversion.ml[644,27796+34]..[644,27796+47])
            expression (middle_end/flambda/closure_conversion.ml[644,27796+48]..[667,28752+33]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/closure_conversion.ml[644,27796+48]..[644,27796+61])
                Ppat_var "let_bound_var" (middle_end/flambda/closure_conversion.ml[644,27796+48]..[644,27796+61])
              expression (middle_end/flambda/closure_conversion.ml[644,27796+62]..[667,28752+33]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (middle_end/flambda/closure_conversion.ml[644,27796+62]..[644,27796+65])
                  Ppat_var "env" (middle_end/flambda/closure_conversion.ml[644,27796+62]..[644,27796+65])
                expression (middle_end/flambda/closure_conversion.ml[645,27862+6]..[667,28752+33]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/closure_conversion.ml[645,27862+6]..[645,27862+27])
                    Ppat_constraint
                    pattern (middle_end/flambda/closure_conversion.ml[645,27862+7]..[645,27862+10])
                      Ppat_var "lam" (middle_end/flambda/closure_conversion.ml[645,27862+7]..[645,27862+10])
                    core_type (middle_end/flambda/closure_conversion.ml[645,27862+13]..[645,27862+26])
                      Ptyp_constr "Lambda.lambda" (middle_end/flambda/closure_conversion.ml[645,27862+13]..[645,27862+26])
                      []
                  expression (middle_end/flambda/closure_conversion.ml[645,27862+28]..[667,28752+33])
                    Pexp_constraint
                    expression (middle_end/flambda/closure_conversion.ml[646,27908+2]..[667,28752+33])
                      Pexp_match
                      expression (middle_end/flambda/closure_conversion.ml[646,27908+8]..[646,27908+11])
                        Pexp_ident "lam" (middle_end/flambda/closure_conversion.ml[646,27908+8]..[646,27908+11])
                      [
                        <case>
                          pattern (middle_end/flambda/closure_conversion.ml[647,27925+4]..[647,27925+48])
                            Ppat_construct "Lfunction" (middle_end/flambda/closure_conversion.ml[647,27925+4]..[647,27925+13])
                            Some
                              []
                              pattern (middle_end/flambda/closure_conversion.ml[647,27925+14]..[647,27925+48])
                                Ppat_record Closed
                                [
                                  "kind" (middle_end/flambda/closure_conversion.ml[647,27925+16]..[647,27925+20]) ghost
                                    pattern (middle_end/flambda/closure_conversion.ml[647,27925+16]..[647,27925+20])
                                      Ppat_var "kind" (middle_end/flambda/closure_conversion.ml[647,27925+16]..[647,27925+20])
                                  "params" (middle_end/flambda/closure_conversion.ml[647,27925+22]..[647,27925+28]) ghost
                                    pattern (middle_end/flambda/closure_conversion.ml[647,27925+22]..[647,27925+28])
                                      Ppat_var "params" (middle_end/flambda/closure_conversion.ml[647,27925+22]..[647,27925+28])
                                  "body" (middle_end/flambda/closure_conversion.ml[647,27925+30]..[647,27925+34]) ghost
                                    pattern (middle_end/flambda/closure_conversion.ml[647,27925+30]..[647,27925+34])
                                      Ppat_var "body" (middle_end/flambda/closure_conversion.ml[647,27925+30]..[647,27925+34])
                                  "attr" (middle_end/flambda/closure_conversion.ml[647,27925+36]..[647,27925+40]) ghost
                                    pattern (middle_end/flambda/closure_conversion.ml[647,27925+36]..[647,27925+40])
                                      Ppat_var "attr" (middle_end/flambda/closure_conversion.ml[647,27925+36]..[647,27925+40])
                                  "loc" (middle_end/flambda/closure_conversion.ml[647,27925+42]..[647,27925+45]) ghost
                                    pattern (middle_end/flambda/closure_conversion.ml[647,27925+42]..[647,27925+45])
                                      Ppat_var "loc" (middle_end/flambda/closure_conversion.ml[647,27925+42]..[647,27925+45])
                                ]
                          expression (middle_end/flambda/closure_conversion.ml[650,28066+4]..[666,28723+28])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/closure_conversion.ml[650,28066+8]..[650,28066+25])
                                  Ppat_var "closure_bound_var" (middle_end/flambda/closure_conversion.ml[650,28066+8]..[650,28066+25])
                                expression (middle_end/flambda/closure_conversion.ml[650,28066+28]..[650,28066+57])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[650,28066+28]..[650,28066+43])
                                    Pexp_ident "Variable.rename" (middle_end/flambda/closure_conversion.ml[650,28066+28]..[650,28066+43])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[650,28066+44]..[650,28066+57])
                                        Pexp_ident "let_bound_var" (middle_end/flambda/closure_conversion.ml[650,28066+44]..[650,28066+57])
                                  ]
                            ]
                            expression (middle_end/flambda/closure_conversion.ml[651,28127+4]..[666,28723+28])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/closure_conversion.ml[651,28127+8]..[651,28127+12])
                                    Ppat_var "decl" (middle_end/flambda/closure_conversion.ml[651,28127+8]..[651,28127+12])
                                  expression (middle_end/flambda/closure_conversion.ml[652,28142+6]..[653,28209+54])
                                    Pexp_apply
                                    expression (middle_end/flambda/closure_conversion.ml[652,28142+6]..[652,28142+26])
                                      Pexp_ident "Function_decl.create" (middle_end/flambda/closure_conversion.ml[652,28142+6]..[652,28142+26])
                                    [
                                      <arg>
                                      Labelled "let_rec_ident"
                                        expression (middle_end/flambda/closure_conversion.ml[652,28142+28]..[652,28142+41])
                                          Pexp_ident "let_rec_ident" (middle_end/flambda/closure_conversion.ml[652,28142+28]..[652,28142+41])
                                      <arg>
                                      Labelled "closure_bound_var"
                                        expression (middle_end/flambda/closure_conversion.ml[652,28142+43]..[652,28142+60])
                                          Pexp_ident "closure_bound_var" (middle_end/flambda/closure_conversion.ml[652,28142+43]..[652,28142+60])
                                      <arg>
                                      Labelled "kind"
                                        expression (middle_end/flambda/closure_conversion.ml[652,28142+62]..[652,28142+66])
                                          Pexp_ident "kind" (middle_end/flambda/closure_conversion.ml[652,28142+62]..[652,28142+66])
                                      <arg>
                                      Labelled "params"
                                        expression (middle_end/flambda/closure_conversion.ml[653,28209+16]..[653,28209+37])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[653,28209+17]..[653,28209+25])
                                            Pexp_ident "List.map" (middle_end/flambda/closure_conversion.ml[653,28209+17]..[653,28209+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[653,28209+26]..[653,28209+29])
                                                Pexp_ident "fst" (middle_end/flambda/closure_conversion.ml[653,28209+26]..[653,28209+29])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[653,28209+30]..[653,28209+36])
                                                Pexp_ident "params" (middle_end/flambda/closure_conversion.ml[653,28209+30]..[653,28209+36])
                                          ]
                                      <arg>
                                      Labelled "body"
                                        expression (middle_end/flambda/closure_conversion.ml[653,28209+39]..[653,28209+43])
                                          Pexp_ident "body" (middle_end/flambda/closure_conversion.ml[653,28209+39]..[653,28209+43])
                                      <arg>
                                      Labelled "attr"
                                        expression (middle_end/flambda/closure_conversion.ml[653,28209+45]..[653,28209+49])
                                          Pexp_ident "attr" (middle_end/flambda/closure_conversion.ml[653,28209+45]..[653,28209+49])
                                      <arg>
                                      Labelled "loc"
                                        expression (middle_end/flambda/closure_conversion.ml[653,28209+51]..[653,28209+54])
                                          Pexp_ident "loc" (middle_end/flambda/closure_conversion.ml[653,28209+51]..[653,28209+54])
                                    ]
                              ]
                              expression (middle_end/flambda/closure_conversion.ml[655,28271+4]..[666,28723+28])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/closure_conversion.ml[655,28271+8]..[655,28271+27])
                                      Ppat_var "set_of_closures_var" (middle_end/flambda/closure_conversion.ml[655,28271+8]..[655,28271+27])
                                    expression (middle_end/flambda/closure_conversion.ml[655,28271+30]..[655,28271+59])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[655,28271+30]..[655,28271+45])
                                        Pexp_ident "Variable.rename" (middle_end/flambda/closure_conversion.ml[655,28271+30]..[655,28271+45])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[655,28271+46]..[655,28271+59])
                                            Pexp_ident "let_bound_var" (middle_end/flambda/closure_conversion.ml[655,28271+46]..[655,28271+59])
                                      ]
                                ]
                                expression (middle_end/flambda/closure_conversion.ml[656,28334+4]..[666,28723+28])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/closure_conversion.ml[656,28334+8]..[656,28334+23])
                                        Ppat_var "set_of_closures" (middle_end/flambda/closure_conversion.ml[656,28334+8]..[656,28334+23])
                                      expression (middle_end/flambda/closure_conversion.ml[657,28360+6]..[657,28360+58])
                                        Pexp_apply
                                        expression (middle_end/flambda/closure_conversion.ml[657,28360+6]..[657,28360+21])
                                          Pexp_ident "close_functions" (middle_end/flambda/closure_conversion.ml[657,28360+6]..[657,28360+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[657,28360+22]..[657,28360+23])
                                              Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[657,28360+22]..[657,28360+23])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[657,28360+24]..[657,28360+27])
                                              Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[657,28360+24]..[657,28360+27])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/closure_conversion.ml[657,28360+28]..[657,28360+58])
                                              Pexp_apply
                                              expression (middle_end/flambda/closure_conversion.ml[657,28360+29]..[657,28360+50])
                                                Pexp_ident "Function_decls.create" (middle_end/flambda/closure_conversion.ml[657,28360+29]..[657,28360+50])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/closure_conversion.ml[657,28360+51]..[657,28360+57])
                                                    Pexp_construct "::" (middle_end/flambda/closure_conversion.ml[657,28360+52]..[657,28360+57]) ghost
                                                    Some
                                                      expression (middle_end/flambda/closure_conversion.ml[657,28360+52]..[657,28360+57]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/closure_conversion.ml[657,28360+52]..[657,28360+56])
                                                            Pexp_ident "decl" (middle_end/flambda/closure_conversion.ml[657,28360+52]..[657,28360+56])
                                                          expression (middle_end/flambda/closure_conversion.ml[657,28360+56]..[657,28360+57]) ghost
                                                            Pexp_construct "[]" (middle_end/flambda/closure_conversion.ml[657,28360+56]..[657,28360+57]) ghost
                                                            None
                                                        ]
                                              ]
                                        ]
                                  ]
                                  expression (middle_end/flambda/closure_conversion.ml[659,28426+4]..[666,28723+28])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/closure_conversion.ml[659,28426+8]..[659,28426+49]) ghost
                                          Ppat_constraint
                                          pattern (middle_end/flambda/closure_conversion.ml[659,28426+8]..[659,28426+23])
                                            Ppat_var "project_closure" (middle_end/flambda/closure_conversion.ml[659,28426+8]..[659,28426+23])
                                          core_type (middle_end/flambda/closure_conversion.ml[659,28426+26]..[659,28426+49]) ghost
                                            Ptyp_poly
                                            core_type (middle_end/flambda/closure_conversion.ml[659,28426+26]..[659,28426+49])
                                              Ptyp_constr "Flambda.project_closure" (middle_end/flambda/closure_conversion.ml[659,28426+26]..[659,28426+49])
                                              []
                                        expression (middle_end/flambda/closure_conversion.ml[659,28426+8]..[662,28581+7])
                                          Pexp_constraint
                                          expression (middle_end/flambda/closure_conversion.ml[660,28478+6]..[662,28581+7])
                                            Pexp_record
                                            [
                                              "set_of_closures" (middle_end/flambda/closure_conversion.ml[660,28478+8]..[660,28478+23])
                                                expression (middle_end/flambda/closure_conversion.ml[660,28478+26]..[660,28478+45])
                                                  Pexp_ident "set_of_closures_var" (middle_end/flambda/closure_conversion.ml[660,28478+26]..[660,28478+45])
                                              "closure_id" (middle_end/flambda/closure_conversion.ml[661,28525+8]..[661,28525+18])
                                                expression (middle_end/flambda/closure_conversion.ml[661,28525+21]..[661,28525+54])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/closure_conversion.ml[661,28525+21]..[661,28525+36])
                                                    Pexp_ident "Closure_id.wrap" (middle_end/flambda/closure_conversion.ml[661,28525+21]..[661,28525+36])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[661,28525+37]..[661,28525+54])
                                                        Pexp_ident "closure_bound_var" (middle_end/flambda/closure_conversion.ml[661,28525+37]..[661,28525+54])
                                                  ]
                                            ]
                                            None
                                          core_type (middle_end/flambda/closure_conversion.ml[659,28426+26]..[659,28426+49])
                                            Ptyp_constr "Flambda.project_closure" (middle_end/flambda/closure_conversion.ml[659,28426+26]..[659,28426+49])
                                            []
                                    ]
                                    expression (middle_end/flambda/closure_conversion.ml[664,28596+4]..[666,28723+28])
                                      Pexp_construct "Expr" (middle_end/flambda/closure_conversion.ml[664,28596+4]..[664,28596+8])
                                      Some
                                        expression (middle_end/flambda/closure_conversion.ml[664,28596+9]..[666,28723+28])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[664,28596+10]..[664,28596+28])
                                            Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[664,28596+10]..[664,28596+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[664,28596+29]..[664,28596+48])
                                                Pexp_ident "set_of_closures_var" (middle_end/flambda/closure_conversion.ml[664,28596+29]..[664,28596+48])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[664,28596+49]..[664,28596+64])
                                                Pexp_ident "set_of_closures" (middle_end/flambda/closure_conversion.ml[664,28596+49]..[664,28596+64])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[665,28661+6]..[666,28723+27])
                                                Pexp_apply
                                                expression (middle_end/flambda/closure_conversion.ml[665,28661+7]..[665,28661+25])
                                                  Pexp_ident "name_expr_from_var" (middle_end/flambda/closure_conversion.ml[665,28661+7]..[665,28661+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/closure_conversion.ml[665,28661+26]..[665,28661+61])
                                                      Pexp_construct "Project_closure" (middle_end/flambda/closure_conversion.ml[665,28661+27]..[665,28661+42])
                                                      Some
                                                        expression (middle_end/flambda/closure_conversion.ml[665,28661+43]..[665,28661+60])
                                                          Pexp_ident "project_closure" (middle_end/flambda/closure_conversion.ml[665,28661+44]..[665,28661+59])
                                                  <arg>
                                                  Labelled "var"
                                                    expression (middle_end/flambda/closure_conversion.ml[666,28723+13]..[666,28723+26])
                                                      Pexp_ident "let_bound_var" (middle_end/flambda/closure_conversion.ml[666,28723+13]..[666,28723+26])
                                                ]
                                          ]
                        <case>
                          pattern (middle_end/flambda/closure_conversion.ml[667,28752+4]..[667,28752+7])
                            Ppat_var "lam" (middle_end/flambda/closure_conversion.ml[667,28752+4]..[667,28752+7])
                          expression (middle_end/flambda/closure_conversion.ml[667,28752+11]..[667,28752+33])
                            Pexp_construct "Expr" (middle_end/flambda/closure_conversion.ml[667,28752+11]..[667,28752+15])
                            Some
                              expression (middle_end/flambda/closure_conversion.ml[667,28752+16]..[667,28752+33])
                                Pexp_apply
                                expression (middle_end/flambda/closure_conversion.ml[667,28752+17]..[667,28752+22])
                                  Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[667,28752+17]..[667,28752+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[667,28752+23]..[667,28752+24])
                                      Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[667,28752+23]..[667,28752+24])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[667,28752+25]..[667,28752+28])
                                      Pexp_ident "env" (middle_end/flambda/closure_conversion.ml[667,28752+25]..[667,28752+28])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/closure_conversion.ml[667,28752+29]..[667,28752+32])
                                      Pexp_ident "lam" (middle_end/flambda/closure_conversion.ml[667,28752+29]..[667,28752+32])
                                ]
                      ]
                    core_type (middle_end/flambda/closure_conversion.ml[645,27862+30]..[645,27862+43])
                      Ptyp_constr "Flambda.named" (middle_end/flambda/closure_conversion.ml[645,27862+30]..[645,27862+43])
                      []
    ]
  structure_item (middle_end/flambda/closure_conversion.ml[669,28787+0]..[724,30762+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/closure_conversion.ml[669,28787+4]..[669,28787+21])
          Ppat_var "lambda_to_flambda" (middle_end/flambda/closure_conversion.ml[669,28787+4]..[669,28787+21])
        expression (middle_end/flambda/closure_conversion.ml[669,28787+22]..[724,30762+3]) ghost
          Pexp_fun
          Labelled "backend"
          None
          pattern (middle_end/flambda/closure_conversion.ml[669,28787+23]..[669,28787+30])
            Ppat_var "backend" (middle_end/flambda/closure_conversion.ml[669,28787+23]..[669,28787+30])
          expression (middle_end/flambda/closure_conversion.ml[669,28787+31]..[724,30762+3]) ghost
            Pexp_fun
            Labelled "module_ident"
            None
            pattern (middle_end/flambda/closure_conversion.ml[669,28787+32]..[669,28787+44])
              Ppat_var "module_ident" (middle_end/flambda/closure_conversion.ml[669,28787+32]..[669,28787+44])
            expression (middle_end/flambda/closure_conversion.ml[669,28787+45]..[724,30762+3]) ghost
              Pexp_fun
              Labelled "size"
              None
              pattern (middle_end/flambda/closure_conversion.ml[669,28787+46]..[669,28787+50])
                Ppat_var "size" (middle_end/flambda/closure_conversion.ml[669,28787+46]..[669,28787+50])
              expression (middle_end/flambda/closure_conversion.ml[669,28787+51]..[724,30762+3]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (middle_end/flambda/closure_conversion.ml[669,28787+51]..[669,28787+54])
                  Ppat_var "lam" (middle_end/flambda/closure_conversion.ml[669,28787+51]..[669,28787+54])
                expression (middle_end/flambda/closure_conversion.ml[670,28842+6]..[724,30762+3])
                  Pexp_constraint
                  expression (middle_end/flambda/closure_conversion.ml[671,28868+2]..[724,30762+3])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/closure_conversion.ml[671,28868+6]..[671,28868+9])
                          Ppat_var "lam" (middle_end/flambda/closure_conversion.ml[671,28868+6]..[671,28868+9])
                        expression (middle_end/flambda/closure_conversion.ml[671,28868+12]..[671,28868+45])
                          Pexp_apply
                          expression (middle_end/flambda/closure_conversion.ml[671,28868+12]..[671,28868+41])
                            Pexp_ident "add_default_argument_wrappers" (middle_end/flambda/closure_conversion.ml[671,28868+12]..[671,28868+41])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/closure_conversion.ml[671,28868+42]..[671,28868+45])
                                Pexp_ident "lam" (middle_end/flambda/closure_conversion.ml[671,28868+42]..[671,28868+45])
                          ]
                    ]
                    expression (middle_end/flambda/closure_conversion.ml[672,28917+2]..[724,30762+3])
                      Pexp_letmodule "Backend" (middle_end/flambda/closure_conversion.ml[672,28917+13]..[672,28917+20])
                      module_expr (middle_end/flambda/closure_conversion.ml[672,28917+23]..[672,28917+53])
                        Pmod_unpack
                        expression (middle_end/flambda/closure_conversion.ml[672,28917+28]..[672,28917+52]) ghost
                          Pexp_constraint
                          expression (middle_end/flambda/closure_conversion.ml[672,28917+28]..[672,28917+35])
                            Pexp_ident "backend" (middle_end/flambda/closure_conversion.ml[672,28917+28]..[672,28917+35])
                          core_type (middle_end/flambda/closure_conversion.ml[672,28917+38]..[672,28917+52])
                            Ptyp_package "Backend_intf.S" (middle_end/flambda/closure_conversion.ml[672,28917+38]..[672,28917+52])
                            []
                      expression (middle_end/flambda/closure_conversion.ml[673,28974+2]..[724,30762+3])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/closure_conversion.ml[673,28974+6]..[673,28974+22])
                              Ppat_var "compilation_unit" (middle_end/flambda/closure_conversion.ml[673,28974+6]..[673,28974+22])
                            expression (middle_end/flambda/closure_conversion.ml[673,28974+25]..[673,28974+60])
                              Pexp_apply
                              expression (middle_end/flambda/closure_conversion.ml[673,28974+25]..[673,28974+57])
                                Pexp_ident "Compilation_unit.get_current_exn" (middle_end/flambda/closure_conversion.ml[673,28974+25]..[673,28974+57])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/closure_conversion.ml[673,28974+58]..[673,28974+60])
                                    Pexp_construct "()" (middle_end/flambda/closure_conversion.ml[673,28974+58]..[673,28974+60])
                                    None
                              ]
                        ]
                        expression (middle_end/flambda/closure_conversion.ml[674,29038+2]..[724,30762+3])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/closure_conversion.ml[674,29038+6]..[674,29038+7])
                                Ppat_var "t" (middle_end/flambda/closure_conversion.ml[674,29038+6]..[674,29038+7])
                              expression (middle_end/flambda/closure_conversion.ml[675,29048+4]..[680,29270+5])
                                Pexp_record
                                [
                                  "current_unit_id" (middle_end/flambda/closure_conversion.ml[675,29048+6]..[675,29048+21])
                                    expression (middle_end/flambda/closure_conversion.ml[675,29048+24]..[675,29048+78])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[675,29048+24]..[675,29048+61])
                                        Pexp_ident "Compilation_unit.get_persistent_ident" (middle_end/flambda/closure_conversion.ml[675,29048+24]..[675,29048+61])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[675,29048+62]..[675,29048+78])
                                            Pexp_ident "compilation_unit" (middle_end/flambda/closure_conversion.ml[675,29048+62]..[675,29048+78])
                                      ]
                                  "symbol_for_global'" (middle_end/flambda/closure_conversion.ml[676,29128+6]..[676,29128+24])
                                    expression (middle_end/flambda/closure_conversion.ml[676,29128+27]..[676,29128+53])
                                      Pexp_ident "Backend.symbol_for_global'" (middle_end/flambda/closure_conversion.ml[676,29128+27]..[676,29128+53])
                                  "backend" (middle_end/flambda/closure_conversion.ml[677,29183+6]..[677,29183+13]) ghost
                                    expression (middle_end/flambda/closure_conversion.ml[677,29183+6]..[677,29183+13])
                                      Pexp_ident "backend" (middle_end/flambda/closure_conversion.ml[677,29183+6]..[677,29183+13])
                                  "imported_symbols" (middle_end/flambda/closure_conversion.ml[678,29198+6]..[678,29198+22])
                                    expression (middle_end/flambda/closure_conversion.ml[678,29198+25]..[678,29198+41])
                                      Pexp_ident "Symbol.Set.empty" (middle_end/flambda/closure_conversion.ml[678,29198+25]..[678,29198+41])
                                  "declared_symbols" (middle_end/flambda/closure_conversion.ml[679,29241+6]..[679,29241+22])
                                    expression (middle_end/flambda/closure_conversion.ml[679,29241+25]..[679,29241+27])
                                      Pexp_construct "[]" (middle_end/flambda/closure_conversion.ml[679,29241+25]..[679,29241+27])
                                      None
                                ]
                                None
                          ]
                          expression (middle_end/flambda/closure_conversion.ml[682,29281+2]..[724,30762+3])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/closure_conversion.ml[682,29281+6]..[682,29281+19])
                                  Ppat_var "module_symbol" (middle_end/flambda/closure_conversion.ml[682,29281+6]..[682,29281+19])
                                expression (middle_end/flambda/closure_conversion.ml[682,29281+22]..[682,29281+61])
                                  Pexp_apply
                                  expression (middle_end/flambda/closure_conversion.ml[682,29281+22]..[682,29281+48])
                                    Pexp_ident "Backend.symbol_for_global'" (middle_end/flambda/closure_conversion.ml[682,29281+22]..[682,29281+48])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/closure_conversion.ml[682,29281+49]..[682,29281+61])
                                        Pexp_ident "module_ident" (middle_end/flambda/closure_conversion.ml[682,29281+49]..[682,29281+61])
                                  ]
                            ]
                            expression (middle_end/flambda/closure_conversion.ml[683,29346+2]..[724,30762+3])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/closure_conversion.ml[683,29346+6]..[683,29346+18])
                                    Ppat_var "block_symbol" (middle_end/flambda/closure_conversion.ml[683,29346+6]..[683,29346+18])
                                  expression (middle_end/flambda/closure_conversion.ml[684,29367+4]..[685,29440+26])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/closure_conversion.ml[684,29367+8]..[684,29367+11])
                                          Ppat_var "var" (middle_end/flambda/closure_conversion.ml[684,29367+8]..[684,29367+11])
                                        expression (middle_end/flambda/closure_conversion.ml[684,29367+14]..[684,29367+69])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[684,29367+14]..[684,29367+29])
                                            Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[684,29367+14]..[684,29367+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[684,29367+30]..[684,29367+69])
                                                Pexp_ident "Internal_variable_names.module_as_block" (middle_end/flambda/closure_conversion.ml[684,29367+30]..[684,29367+69])
                                          ]
                                    ]
                                    expression (middle_end/flambda/closure_conversion.ml[685,29440+4]..[685,29440+26])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[685,29440+4]..[685,29440+22])
                                        Pexp_ident "Symbol.of_variable" (middle_end/flambda/closure_conversion.ml[685,29440+4]..[685,29440+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[685,29440+23]..[685,29440+26])
                                            Pexp_ident "var" (middle_end/flambda/closure_conversion.ml[685,29440+23]..[685,29440+26])
                                      ]
                              ]
                              expression (middle_end/flambda/closure_conversion.ml[691,29670+2]..[724,30762+3])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/closure_conversion.ml[691,29670+6]..[691,29670+12])
                                      Ppat_var "fields" (middle_end/flambda/closure_conversion.ml[691,29670+6]..[691,29670+12])
                                    expression (middle_end/flambda/closure_conversion.ml[692,29685+4]..[702,30160+30])
                                      Pexp_apply
                                      expression (middle_end/flambda/closure_conversion.ml[692,29685+4]..[692,29685+14])
                                        Pexp_ident "Array.init" (middle_end/flambda/closure_conversion.ml[692,29685+4]..[692,29685+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[692,29685+15]..[692,29685+19])
                                            Pexp_ident "size" (middle_end/flambda/closure_conversion.ml[692,29685+15]..[692,29685+19])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/closure_conversion.ml[692,29685+20]..[702,30160+30])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/flambda/closure_conversion.ml[692,29685+25]..[692,29685+28])
                                              Ppat_var "pos" (middle_end/flambda/closure_conversion.ml[692,29685+25]..[692,29685+28])
                                            expression (middle_end/flambda/closure_conversion.ml[693,29717+6]..[702,30160+29])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/closure_conversion.ml[693,29717+10]..[693,29717+15])
                                                    Ppat_var "sym_v" (middle_end/flambda/closure_conversion.ml[693,29717+10]..[693,29717+15])
                                                  expression (middle_end/flambda/closure_conversion.ml[693,29717+18]..[693,29717+52])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/closure_conversion.ml[693,29717+18]..[693,29717+33])
                                                      Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[693,29717+18]..[693,29717+33])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[693,29717+34]..[693,29717+52])
                                                          Pexp_ident "Names.block_symbol" (middle_end/flambda/closure_conversion.ml[693,29717+34]..[693,29717+52])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/closure_conversion.ml[694,29773+6]..[702,30160+29])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/closure_conversion.ml[694,29773+10]..[694,29773+18])
                                                      Ppat_var "result_v" (middle_end/flambda/closure_conversion.ml[694,29773+10]..[694,29773+18])
                                                    expression (middle_end/flambda/closure_conversion.ml[694,29773+21]..[694,29773+59])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/closure_conversion.ml[694,29773+21]..[694,29773+36])
                                                        Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[694,29773+21]..[694,29773+36])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/closure_conversion.ml[694,29773+37]..[694,29773+59])
                                                            Pexp_ident "Names.block_symbol_get" (middle_end/flambda/closure_conversion.ml[694,29773+37]..[694,29773+59])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/closure_conversion.ml[695,29836+6]..[702,30160+29])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/closure_conversion.ml[695,29836+10]..[695,29836+17])
                                                        Ppat_var "value_v" (middle_end/flambda/closure_conversion.ml[695,29836+10]..[695,29836+17])
                                                      expression (middle_end/flambda/closure_conversion.ml[695,29836+20]..[695,29836+64])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/closure_conversion.ml[695,29836+20]..[695,29836+35])
                                                          Pexp_ident "Variable.create" (middle_end/flambda/closure_conversion.ml[695,29836+20]..[695,29836+35])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/closure_conversion.ml[695,29836+36]..[695,29836+64])
                                                              Pexp_ident "Names.block_symbol_get_field" (middle_end/flambda/closure_conversion.ml[695,29836+36]..[695,29836+64])
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/closure_conversion.ml[696,29904+6]..[702,30160+29])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/closure_conversion.ml[696,29904+6]..[696,29904+24])
                                                      Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[696,29904+6]..[696,29904+24])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[697,29929+8]..[697,29929+13])
                                                          Pexp_ident "sym_v" (middle_end/flambda/closure_conversion.ml[697,29929+8]..[697,29929+13])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[697,29929+14]..[697,29929+35])
                                                          Pexp_construct "Symbol" (middle_end/flambda/closure_conversion.ml[697,29929+15]..[697,29929+21])
                                                          Some
                                                            expression (middle_end/flambda/closure_conversion.ml[697,29929+22]..[697,29929+34])
                                                              Pexp_ident "block_symbol" (middle_end/flambda/closure_conversion.ml[697,29929+22]..[697,29929+34])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/closure_conversion.ml[698,29965+9]..[702,30160+29])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/closure_conversion.ml[698,29965+10]..[698,29965+28])
                                                            Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[698,29965+10]..[698,29965+28])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/closure_conversion.ml[698,29965+29]..[698,29965+37])
                                                                Pexp_ident "result_v" (middle_end/flambda/closure_conversion.ml[698,29965+29]..[698,29965+37])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/closure_conversion.ml[699,30003+12]..[699,30003+54])
                                                                Pexp_construct "Prim" (middle_end/flambda/closure_conversion.ml[699,30003+13]..[699,30003+17])
                                                                Some
                                                                  expression (middle_end/flambda/closure_conversion.ml[699,30003+18]..[699,30003+53])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/flambda/closure_conversion.ml[699,30003+19]..[699,30003+27])
Pexp_construct "Pfield" (middle_end/flambda/closure_conversion.ml[699,30003+19]..[699,30003+25])
Some
  expression (middle_end/flambda/closure_conversion.ml[699,30003+26]..[699,30003+27])
    Pexp_constant PConst_int (0,None)
                                                                      expression (middle_end/flambda/closure_conversion.ml[699,30003+29]..[699,30003+36])
Pexp_construct "::" (middle_end/flambda/closure_conversion.ml[699,30003+30]..[699,30003+36]) ghost
Some
  expression (middle_end/flambda/closure_conversion.ml[699,30003+30]..[699,30003+36]) ghost
    Pexp_tuple
    [
      expression (middle_end/flambda/closure_conversion.ml[699,30003+30]..[699,30003+35])
        Pexp_ident "sym_v" (middle_end/flambda/closure_conversion.ml[699,30003+30]..[699,30003+35])
      expression (middle_end/flambda/closure_conversion.ml[699,30003+35]..[699,30003+36]) ghost
        Pexp_construct "[]" (middle_end/flambda/closure_conversion.ml[699,30003+35]..[699,30003+36]) ghost
        None
    ]
                                                                      expression (middle_end/flambda/closure_conversion.ml[699,30003+38]..[699,30003+52])
Pexp_ident "Debuginfo.none" (middle_end/flambda/closure_conversion.ml[699,30003+38]..[699,30003+52])
                                                                    ]
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/closure_conversion.ml[700,30058+12]..[702,30160+28])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/closure_conversion.ml[700,30058+13]..[700,30058+31])
                                                                  Pexp_ident "Flambda.create_let" (middle_end/flambda/closure_conversion.ml[700,30058+13]..[700,30058+31])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/closure_conversion.ml[700,30058+32]..[700,30058+39])
                                                                      Pexp_ident "value_v" (middle_end/flambda/closure_conversion.ml[700,30058+32]..[700,30058+39])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/closure_conversion.ml[701,30098+14]..[701,30098+61])
                                                                      Pexp_construct "Prim" (middle_end/flambda/closure_conversion.ml[701,30098+15]..[701,30098+19])
                                                                      Some
expression (middle_end/flambda/closure_conversion.ml[701,30098+20]..[701,30098+60])
  Pexp_tuple
  [
    expression (middle_end/flambda/closure_conversion.ml[701,30098+21]..[701,30098+31])
      Pexp_construct "Pfield" (middle_end/flambda/closure_conversion.ml[701,30098+21]..[701,30098+27])
      Some
        expression (middle_end/flambda/closure_conversion.ml[701,30098+28]..[701,30098+31])
          Pexp_ident "pos" (middle_end/flambda/closure_conversion.ml[701,30098+28]..[701,30098+31])
    expression (middle_end/flambda/closure_conversion.ml[701,30098+33]..[701,30098+43])
      Pexp_construct "::" (middle_end/flambda/closure_conversion.ml[701,30098+34]..[701,30098+43]) ghost
      Some
        expression (middle_end/flambda/closure_conversion.ml[701,30098+34]..[701,30098+43]) ghost
          Pexp_tuple
          [
            expression (middle_end/flambda/closure_conversion.ml[701,30098+34]..[701,30098+42])
              Pexp_ident "result_v" (middle_end/flambda/closure_conversion.ml[701,30098+34]..[701,30098+42])
            expression (middle_end/flambda/closure_conversion.ml[701,30098+42]..[701,30098+43]) ghost
              Pexp_construct "[]" (middle_end/flambda/closure_conversion.ml[701,30098+42]..[701,30098+43]) ghost
              None
          ]
    expression (middle_end/flambda/closure_conversion.ml[701,30098+45]..[701,30098+59])
      Pexp_ident "Debuginfo.none" (middle_end/flambda/closure_conversion.ml[701,30098+45]..[701,30098+59])
  ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/closure_conversion.ml[702,30160+14]..[702,30160+27])
                                                                      Pexp_construct "Var" (middle_end/flambda/closure_conversion.ml[702,30160+15]..[702,30160+18])
                                                                      Some
expression (middle_end/flambda/closure_conversion.ml[702,30160+19]..[702,30160+26])
  Pexp_ident "value_v" (middle_end/flambda/closure_conversion.ml[702,30160+19]..[702,30160+26])
                                                                ]
                                                          ]
                                                    ]
                                      ]
                                ]
                                expression (middle_end/flambda/closure_conversion.ml[704,30196+2]..[724,30762+3])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/closure_conversion.ml[704,30196+6]..[704,30196+47]) ghost
                                        Ppat_constraint
                                        pattern (middle_end/flambda/closure_conversion.ml[704,30196+6]..[704,30196+24])
                                          Ppat_var "module_initializer" (middle_end/flambda/closure_conversion.ml[704,30196+6]..[704,30196+24])
                                        core_type (middle_end/flambda/closure_conversion.ml[704,30196+27]..[704,30196+47]) ghost
                                          Ptyp_poly
                                          core_type (middle_end/flambda/closure_conversion.ml[704,30196+27]..[704,30196+47])
                                            Ptyp_constr "Flambda.program_body" (middle_end/flambda/closure_conversion.ml[704,30196+27]..[704,30196+47])
                                            []
                                      expression (middle_end/flambda/closure_conversion.ml[704,30196+6]..[713,30450+27])
                                        Pexp_constraint
                                        expression (middle_end/flambda/closure_conversion.ml[705,30246+4]..[713,30450+27])
                                          Pexp_construct "Initialize_symbol" (middle_end/flambda/closure_conversion.ml[705,30246+4]..[705,30246+21])
                                          Some
                                            expression (middle_end/flambda/closure_conversion.ml[705,30246+22]..[713,30450+27])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/flambda/closure_conversion.ml[706,30270+6]..[706,30270+18])
                                                  Pexp_ident "block_symbol" (middle_end/flambda/closure_conversion.ml[706,30270+6]..[706,30270+18])
                                                expression (middle_end/flambda/closure_conversion.ml[707,30290+6]..[707,30290+22])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/closure_conversion.ml[707,30290+6]..[707,30290+20])
                                                    Pexp_ident "Tag.create_exn" (middle_end/flambda/closure_conversion.ml[707,30290+6]..[707,30290+20])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/closure_conversion.ml[707,30290+21]..[707,30290+22])
                                                        Pexp_constant PConst_int (0,None)
                                                  ]
                                                expression (middle_end/flambda/closure_conversion.ml[708,30314+6]..[708,30314+29])
                                                  Pexp_construct "::" (middle_end/flambda/closure_conversion.ml[708,30314+7]..[708,30314+29]) ghost
                                                  Some
                                                    expression (middle_end/flambda/closure_conversion.ml[708,30314+7]..[708,30314+29]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (middle_end/flambda/closure_conversion.ml[708,30314+7]..[708,30314+28])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/closure_conversion.ml[708,30314+7]..[708,30314+12])
                                                            Pexp_ident "close" (middle_end/flambda/closure_conversion.ml[708,30314+7]..[708,30314+12])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/closure_conversion.ml[708,30314+13]..[708,30314+14])
                                                                Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[708,30314+13]..[708,30314+14])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/closure_conversion.ml[708,30314+15]..[708,30314+24])
                                                                Pexp_ident "Env.empty" (middle_end/flambda/closure_conversion.ml[708,30314+15]..[708,30314+24])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/closure_conversion.ml[708,30314+25]..[708,30314+28])
                                                                Pexp_ident "lam" (middle_end/flambda/closure_conversion.ml[708,30314+25]..[708,30314+28])
                                                          ]
                                                        expression (middle_end/flambda/closure_conversion.ml[708,30314+28]..[708,30314+29]) ghost
                                                          Pexp_construct "[]" (middle_end/flambda/closure_conversion.ml[708,30314+28]..[708,30314+29]) ghost
                                                          None
                                                      ]
                                                expression (middle_end/flambda/closure_conversion.ml[709,30345+6]..[713,30450+26])
                                                  Pexp_construct "Initialize_symbol" (middle_end/flambda/closure_conversion.ml[709,30345+6]..[709,30345+23])
                                                  Some
                                                    expression (middle_end/flambda/closure_conversion.ml[709,30345+24]..[713,30450+26])
                                                      Pexp_tuple
                                                      [
                                                        expression (middle_end/flambda/closure_conversion.ml[710,30371+8]..[710,30371+21])
                                                          Pexp_ident "module_symbol" (middle_end/flambda/closure_conversion.ml[710,30371+8]..[710,30371+21])
                                                        expression (middle_end/flambda/closure_conversion.ml[711,30394+8]..[711,30394+24])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/closure_conversion.ml[711,30394+8]..[711,30394+22])
                                                            Pexp_ident "Tag.create_exn" (middle_end/flambda/closure_conversion.ml[711,30394+8]..[711,30394+22])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/closure_conversion.ml[711,30394+23]..[711,30394+24])
                                                                Pexp_constant PConst_int (0,None)
                                                          ]
                                                        expression (middle_end/flambda/closure_conversion.ml[712,30420+8]..[712,30420+28])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/closure_conversion.ml[712,30420+8]..[712,30420+21])
                                                            Pexp_ident "Array.to_list" (middle_end/flambda/closure_conversion.ml[712,30420+8]..[712,30420+21])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/closure_conversion.ml[712,30420+22]..[712,30420+28])
                                                                Pexp_ident "fields" (middle_end/flambda/closure_conversion.ml[712,30420+22]..[712,30420+28])
                                                          ]
                                                        expression (middle_end/flambda/closure_conversion.ml[713,30450+8]..[713,30450+25])
                                                          Pexp_construct "End" (middle_end/flambda/closure_conversion.ml[713,30450+8]..[713,30450+11])
                                                          Some
                                                            expression (middle_end/flambda/closure_conversion.ml[713,30450+12]..[713,30450+25])
                                                              Pexp_ident "module_symbol" (middle_end/flambda/closure_conversion.ml[713,30450+12]..[713,30450+25])
                                                      ]
                                              ]
                                        core_type (middle_end/flambda/closure_conversion.ml[704,30196+27]..[704,30196+47])
                                          Ptyp_constr "Flambda.program_body" (middle_end/flambda/closure_conversion.ml[704,30196+27]..[704,30196+47])
                                          []
                                  ]
                                  expression (middle_end/flambda/closure_conversion.ml[715,30483+2]..[724,30762+3])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/closure_conversion.ml[715,30483+6]..[715,30483+18])
                                          Ppat_var "program_body" (middle_end/flambda/closure_conversion.ml[715,30483+6]..[715,30483+18])
                                        expression (middle_end/flambda/closure_conversion.ml[716,30504+4]..[720,30671+24])
                                          Pexp_apply
                                          expression (middle_end/flambda/closure_conversion.ml[716,30504+4]..[716,30504+18])
                                            Pexp_ident "List.fold_left" (middle_end/flambda/closure_conversion.ml[716,30504+4]..[716,30504+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[717,30523+6]..[718,30592+53])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (middle_end/flambda/closure_conversion.ml[717,30523+11]..[717,30523+23])
                                                  Ppat_var "program_body" (middle_end/flambda/closure_conversion.ml[717,30523+11]..[717,30523+23])
                                                expression (middle_end/flambda/closure_conversion.ml[717,30523+24]..[718,30592+52]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (middle_end/flambda/closure_conversion.ml[717,30523+24]..[717,30523+42])
                                                    Ppat_tuple
                                                    [
                                                      pattern (middle_end/flambda/closure_conversion.ml[717,30523+25]..[717,30523+31])
                                                        Ppat_var "symbol" (middle_end/flambda/closure_conversion.ml[717,30523+25]..[717,30523+31])
                                                      pattern (middle_end/flambda/closure_conversion.ml[717,30523+33]..[717,30523+41])
                                                        Ppat_var "constant" (middle_end/flambda/closure_conversion.ml[717,30523+33]..[717,30523+41])
                                                    ]
                                                  expression (middle_end/flambda/closure_conversion.ml[717,30523+43]..[718,30592+52])
                                                    Pexp_constraint
                                                    expression (middle_end/flambda/closure_conversion.ml[718,30592+9]..[718,30592+52])
                                                      Pexp_construct "Let_symbol" (middle_end/flambda/closure_conversion.ml[718,30592+9]..[718,30592+19])
                                                      Some
                                                        expression (middle_end/flambda/closure_conversion.ml[718,30592+20]..[718,30592+52])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/closure_conversion.ml[718,30592+21]..[718,30592+27])
                                                              Pexp_ident "symbol" (middle_end/flambda/closure_conversion.ml[718,30592+21]..[718,30592+27])
                                                            expression (middle_end/flambda/closure_conversion.ml[718,30592+29]..[718,30592+37])
                                                              Pexp_ident "constant" (middle_end/flambda/closure_conversion.ml[718,30592+29]..[718,30592+37])
                                                            expression (middle_end/flambda/closure_conversion.ml[718,30592+39]..[718,30592+51])
                                                              Pexp_ident "program_body" (middle_end/flambda/closure_conversion.ml[718,30592+39]..[718,30592+51])
                                                          ]
                                                    core_type (middle_end/flambda/closure_conversion.ml[717,30523+45]..[717,30523+65])
                                                      Ptyp_constr "Flambda.program_body" (middle_end/flambda/closure_conversion.ml[717,30523+45]..[717,30523+65])
                                                      []
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[719,30646+6]..[719,30646+24])
                                                Pexp_ident "module_initializer" (middle_end/flambda/closure_conversion.ml[719,30646+6]..[719,30646+24])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/closure_conversion.ml[720,30671+6]..[720,30671+24])
                                                Pexp_field
                                                expression (middle_end/flambda/closure_conversion.ml[720,30671+6]..[720,30671+7])
                                                  Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[720,30671+6]..[720,30671+7])
                                                "declared_symbols" (middle_end/flambda/closure_conversion.ml[720,30671+8]..[720,30671+24])
                                          ]
                                    ]
                                    expression (middle_end/flambda/closure_conversion.ml[722,30701+2]..[724,30762+3])
                                      Pexp_record
                                      [
                                        "imported_symbols" (middle_end/flambda/closure_conversion.ml[722,30701+4]..[722,30701+20])
                                          expression (middle_end/flambda/closure_conversion.ml[722,30701+23]..[722,30701+41])
                                            Pexp_field
                                            expression (middle_end/flambda/closure_conversion.ml[722,30701+23]..[722,30701+24])
                                              Pexp_ident "t" (middle_end/flambda/closure_conversion.ml[722,30701+23]..[722,30701+24])
                                            "imported_symbols" (middle_end/flambda/closure_conversion.ml[722,30701+25]..[722,30701+41])
                                        "program_body" (middle_end/flambda/closure_conversion.ml[723,30744+4]..[723,30744+16]) ghost
                                          expression (middle_end/flambda/closure_conversion.ml[723,30744+4]..[723,30744+16])
                                            Pexp_ident "program_body" (middle_end/flambda/closure_conversion.ml[723,30744+4]..[723,30744+16])
                                      ]
                                      None
                  core_type (middle_end/flambda/closure_conversion.ml[670,28842+8]..[670,28842+23])
                    Ptyp_constr "Flambda.program" (middle_end/flambda/closure_conversion.ml[670,28842+8]..[670,28842+23])
                    []
    ]
]

