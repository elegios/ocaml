[
  structure_item (asmcomp/arm/reload.ml[16,1079+0]..[16,1079+9])
    Pstr_open Fresh
    module_expr (asmcomp/arm/reload.ml[16,1079+5]..[16,1079+9])
      Pmod_ident "Arch" (asmcomp/arm/reload.ml[16,1079+5]..[16,1079+9])
  structure_item (asmcomp/arm/reload.ml[17,1089+0]..[17,1089+9])
    Pstr_open Fresh
    module_expr (asmcomp/arm/reload.ml[17,1089+5]..[17,1089+9])
      Pmod_ident "Mach" (asmcomp/arm/reload.ml[17,1089+5]..[17,1089+9])
  structure_item (asmcomp/arm/reload.ml[21,1129+0]..[54,2632+3])
    Pstr_class
    [
      class_declaration (asmcomp/arm/reload.ml[21,1129+0]..[54,2632+3])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "reload" (asmcomp/arm/reload.ml[21,1129+6]..[21,1129+12])
        pci_expr =
          class_expr (asmcomp/arm/reload.ml[21,1129+15]..[54,2632+3])
            Pcl_structure
            class_structure
              pattern (asmcomp/arm/reload.ml[21,1129+21]..[21,1129+21]) ghost
                Ppat_any
              [
                class_field (asmcomp/arm/reload.ml[23,1152+0]..[23,1152+41])
                  Pcf_inherit Fresh
                    class_expr (asmcomp/arm/reload.ml[23,1152+8]..[23,1152+32])
                      Pcl_constr "Reloadgen.reload_generic" (asmcomp/arm/reload.ml[23,1152+8]..[23,1152+32])
                      []
                    Some
                      "super" (asmcomp/arm/reload.ml[23,1152+36]..[23,1152+41])
                class_field (asmcomp/arm/reload.ml[25,1195+0]..[53,2618+13])
                  Pcf_method Public
                    "reload_operation" (asmcomp/arm/reload.ml[25,1195+8]..[25,1195+24])
                    Concrete Override
                    expression (asmcomp/arm/reload.ml[25,1195+25]..[53,2618+13]) ghost
                      Pexp_poly
                      expression (asmcomp/arm/reload.ml[25,1195+25]..[53,2618+13]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (asmcomp/arm/reload.ml[25,1195+25]..[25,1195+27])
                          Ppat_var "op" (asmcomp/arm/reload.ml[25,1195+25]..[25,1195+27])
                        expression (asmcomp/arm/reload.ml[25,1195+28]..[53,2618+13]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (asmcomp/arm/reload.ml[25,1195+28]..[25,1195+31])
                            Ppat_var "arg" (asmcomp/arm/reload.ml[25,1195+28]..[25,1195+31])
                          expression (asmcomp/arm/reload.ml[25,1195+32]..[53,2618+13]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (asmcomp/arm/reload.ml[25,1195+32]..[25,1195+35])
                              Ppat_var "res" (asmcomp/arm/reload.ml[25,1195+32]..[25,1195+35])
                            expression (asmcomp/arm/reload.ml[26,1233+2]..[53,2618+13])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (asmcomp/arm/reload.ml[26,1233+6]..[26,1233+31])
                                    Ppat_alias "argres'" (asmcomp/arm/reload.ml[26,1233+23]..[26,1233+30])
                                    pattern (asmcomp/arm/reload.ml[26,1233+7]..[26,1233+19])
                                      Ppat_tuple
                                      [
                                        pattern (asmcomp/arm/reload.ml[26,1233+8]..[26,1233+12])
                                          Ppat_var "arg'" (asmcomp/arm/reload.ml[26,1233+8]..[26,1233+12])
                                        pattern (asmcomp/arm/reload.ml[26,1233+14]..[26,1233+18])
                                          Ppat_var "res'" (asmcomp/arm/reload.ml[26,1233+14]..[26,1233+18])
                                      ]
                                  expression (asmcomp/arm/reload.ml[26,1233+34]..[26,1233+67])
                                    Pexp_apply
                                    expression (asmcomp/arm/reload.ml[26,1233+34]..[26,1233+56])
                                      Pexp_send "reload_operation"
                                      expression (asmcomp/arm/reload.ml[26,1233+34]..[26,1233+39])
                                        Pexp_ident "super" (asmcomp/arm/reload.ml[26,1233+34]..[26,1233+39])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/arm/reload.ml[26,1233+57]..[26,1233+59])
                                          Pexp_ident "op" (asmcomp/arm/reload.ml[26,1233+57]..[26,1233+59])
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/arm/reload.ml[26,1233+60]..[26,1233+63])
                                          Pexp_ident "arg" (asmcomp/arm/reload.ml[26,1233+60]..[26,1233+63])
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/arm/reload.ml[26,1233+64]..[26,1233+67])
                                          Pexp_ident "res" (asmcomp/arm/reload.ml[26,1233+64]..[26,1233+67])
                                    ]
                              ]
                              expression (asmcomp/arm/reload.ml[27,1304+2]..[53,2618+13])
                                Pexp_match
                                expression (asmcomp/arm/reload.ml[27,1304+8]..[27,1304+10])
                                  Pexp_ident "op" (asmcomp/arm/reload.ml[27,1304+8]..[27,1304+10])
                                [
                                  <case>
                                    pattern (asmcomp/arm/reload.ml[28,1320+4]..[28,1320+35])
                                      Ppat_or
                                      pattern (asmcomp/arm/reload.ml[28,1320+4]..[28,1320+15])
                                        Ppat_construct "Iintop" (asmcomp/arm/reload.ml[28,1320+4]..[28,1320+10])
                                        Some
                                          []
                                          pattern (asmcomp/arm/reload.ml[28,1320+11]..[28,1320+15])
                                            Ppat_construct "Imul" (asmcomp/arm/reload.ml[28,1320+11]..[28,1320+15])
                                            None
                                      pattern (asmcomp/arm/reload.ml[28,1320+18]..[28,1320+35])
                                        Ppat_construct "Ispecific" (asmcomp/arm/reload.ml[28,1320+18]..[28,1320+27])
                                        Some
                                          []
                                          pattern (asmcomp/arm/reload.ml[28,1320+28]..[28,1320+35])
                                            Ppat_construct "Imuladd" (asmcomp/arm/reload.ml[28,1320+28]..[28,1320+35])
                                            None
                                    expression (asmcomp/arm/reload.ml[37,1867+6]..[38,1926+13])
                                      Pexp_sequence
                                      expression (asmcomp/arm/reload.ml[37,1867+6]..[37,1867+57])
                                        Pexp_ifthenelse
                                        expression (asmcomp/arm/reload.ml[37,1867+9]..[37,1867+31])
                                          Pexp_apply
                                          expression (asmcomp/arm/reload.ml[37,1867+27]..[37,1867+29])
                                            Pexp_ident ">=" (asmcomp/arm/reload.ml[37,1867+27]..[37,1867+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/arm/reload.ml[37,1867+9]..[37,1867+26])
                                                Pexp_apply
                                                expression (asmcomp/arm/reload.ml[37,1867+9]..[37,1867+21])
                                                  Pexp_ident "Array.length" (asmcomp/arm/reload.ml[37,1867+9]..[37,1867+21])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (asmcomp/arm/reload.ml[37,1867+22]..[37,1867+26])
                                                      Pexp_ident "res'" (asmcomp/arm/reload.ml[37,1867+22]..[37,1867+26])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/arm/reload.ml[37,1867+30]..[37,1867+31])
                                                Pexp_constant PConst_int (2,None)
                                          ]
                                        expression (asmcomp/arm/reload.ml[37,1867+37]..[37,1867+57])
                                          Pexp_apply
                                          expression (asmcomp/arm/reload.ml[37,1867+37]..[37,1867+57]) ghost
                                            Pexp_ident "Array.set" (asmcomp/arm/reload.ml[37,1867+37]..[37,1867+57]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/arm/reload.ml[37,1867+37]..[37,1867+41])
                                                Pexp_ident "res'" (asmcomp/arm/reload.ml[37,1867+37]..[37,1867+41])
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/arm/reload.ml[37,1867+43]..[37,1867+44])
                                                Pexp_constant PConst_int (1,None)
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/arm/reload.ml[37,1867+49]..[37,1867+57])
                                                Pexp_apply
                                                expression (asmcomp/arm/reload.ml[37,1867+49]..[37,1867+57]) ghost
                                                  Pexp_ident "Array.get" (asmcomp/arm/reload.ml[37,1867+49]..[37,1867+57]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (asmcomp/arm/reload.ml[37,1867+49]..[37,1867+53])
                                                      Pexp_ident "arg'" (asmcomp/arm/reload.ml[37,1867+49]..[37,1867+53])
                                                  <arg>
                                                  Nolabel
                                                    expression (asmcomp/arm/reload.ml[37,1867+55]..[37,1867+56])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                          ]
                                        None
                                      expression (asmcomp/arm/reload.ml[38,1926+6]..[38,1926+13])
                                        Pexp_ident "argres'" (asmcomp/arm/reload.ml[38,1926+6]..[38,1926+13])
                                  <case>
                                    pattern (asmcomp/arm/reload.ml[39,1940+4]..[39,1940+62])
                                      Ppat_construct "Ispecific" (asmcomp/arm/reload.ml[39,1940+4]..[39,1940+13])
                                      Some
                                        []
                                        pattern (asmcomp/arm/reload.ml[39,1940+13]..[39,1940+62])
                                          Ppat_or
                                          pattern (asmcomp/arm/reload.ml[39,1940+14]..[39,1940+47])
                                            Ppat_or
                                            pattern (asmcomp/arm/reload.ml[39,1940+14]..[39,1940+36])
                                              Ppat_or
                                              pattern (asmcomp/arm/reload.ml[39,1940+14]..[39,1940+22])
                                                Ppat_construct "Imuladdf" (asmcomp/arm/reload.ml[39,1940+14]..[39,1940+22])
                                                None
                                              pattern (asmcomp/arm/reload.ml[39,1940+25]..[39,1940+36])
                                                Ppat_construct "Inegmuladdf" (asmcomp/arm/reload.ml[39,1940+25]..[39,1940+36])
                                                None
                                            pattern (asmcomp/arm/reload.ml[39,1940+39]..[39,1940+47])
                                              Ppat_construct "Imulsubf" (asmcomp/arm/reload.ml[39,1940+39]..[39,1940+47])
                                              None
                                          pattern (asmcomp/arm/reload.ml[39,1940+50]..[39,1940+61])
                                            Ppat_construct "Inegmulsubf" (asmcomp/arm/reload.ml[39,1940+50]..[39,1940+61])
                                            None
                                    expression (asmcomp/arm/reload.ml[43,2169+6]..[43,2169+26])
                                      Pexp_tuple
                                      [
                                        expression (asmcomp/arm/reload.ml[43,2169+7]..[43,2169+11])
                                          Pexp_ident "arg'" (asmcomp/arm/reload.ml[43,2169+7]..[43,2169+11])
                                        expression (asmcomp/arm/reload.ml[43,2169+13]..[43,2169+25])
                                          Pexp_array
                                          [
                                            expression (asmcomp/arm/reload.ml[43,2169+15]..[43,2169+23])
                                              Pexp_apply
                                              expression (asmcomp/arm/reload.ml[43,2169+15]..[43,2169+23]) ghost
                                                Pexp_ident "Array.get" (asmcomp/arm/reload.ml[43,2169+15]..[43,2169+23]) ghost
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/arm/reload.ml[43,2169+15]..[43,2169+19])
                                                    Pexp_ident "arg'" (asmcomp/arm/reload.ml[43,2169+15]..[43,2169+19])
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/arm/reload.ml[43,2169+21]..[43,2169+22])
                                                    Pexp_constant PConst_int (0,None)
                                              ]
                                          ]
                                      ]
                                  <case>
                                    pattern (asmcomp/arm/reload.ml[44,2196+4]..[44,2196+17])
                                      Ppat_or
                                      pattern (asmcomp/arm/reload.ml[44,2196+4]..[44,2196+9])
                                        Ppat_construct "Iabsf" (asmcomp/arm/reload.ml[44,2196+4]..[44,2196+9])
                                        None
                                      pattern (asmcomp/arm/reload.ml[44,2196+12]..[44,2196+17])
                                        Ppat_construct "Inegf" (asmcomp/arm/reload.ml[44,2196+12]..[44,2196+17])
                                        None
                                    <when>
                                      expression (asmcomp/arm/reload.ml[44,2196+23]..[44,2196+34])
                                        Pexp_apply
                                        expression (asmcomp/arm/reload.ml[44,2196+28]..[44,2196+29])
                                          Pexp_ident "=" (asmcomp/arm/reload.ml[44,2196+28]..[44,2196+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/arm/reload.ml[44,2196+23]..[44,2196+27])
                                              Pexp_apply
                                              expression (asmcomp/arm/reload.ml[44,2196+23]..[44,2196+24])
                                                Pexp_ident "!" (asmcomp/arm/reload.ml[44,2196+23]..[44,2196+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/arm/reload.ml[44,2196+24]..[44,2196+27])
                                                    Pexp_ident "fpu" (asmcomp/arm/reload.ml[44,2196+24]..[44,2196+27])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/arm/reload.ml[44,2196+30]..[44,2196+34])
                                              Pexp_construct "Soft" (asmcomp/arm/reload.ml[44,2196+30]..[44,2196+34])
                                              None
                                        ]
                                    expression (asmcomp/arm/reload.ml[50,2567+6]..[51,2595+13])
                                      Pexp_sequence
                                      expression (asmcomp/arm/reload.ml[50,2567+6]..[50,2567+26])
                                        Pexp_apply
                                        expression (asmcomp/arm/reload.ml[50,2567+6]..[50,2567+26]) ghost
                                          Pexp_ident "Array.set" (asmcomp/arm/reload.ml[50,2567+6]..[50,2567+26]) ghost
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/arm/reload.ml[50,2567+6]..[50,2567+10])
                                              Pexp_ident "res'" (asmcomp/arm/reload.ml[50,2567+6]..[50,2567+10])
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/arm/reload.ml[50,2567+12]..[50,2567+13])
                                              Pexp_constant PConst_int (0,None)
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/arm/reload.ml[50,2567+18]..[50,2567+26])
                                              Pexp_apply
                                              expression (asmcomp/arm/reload.ml[50,2567+18]..[50,2567+26]) ghost
                                                Pexp_ident "Array.get" (asmcomp/arm/reload.ml[50,2567+18]..[50,2567+26]) ghost
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/arm/reload.ml[50,2567+18]..[50,2567+22])
                                                    Pexp_ident "arg'" (asmcomp/arm/reload.ml[50,2567+18]..[50,2567+22])
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/arm/reload.ml[50,2567+24]..[50,2567+25])
                                                    Pexp_constant PConst_int (0,None)
                                              ]
                                        ]
                                      expression (asmcomp/arm/reload.ml[51,2595+6]..[51,2595+13])
                                        Pexp_ident "argres'" (asmcomp/arm/reload.ml[51,2595+6]..[51,2595+13])
                                  <case>
                                    pattern (asmcomp/arm/reload.ml[52,2609+4]..[52,2609+5])
                                      Ppat_any
                                    expression (asmcomp/arm/reload.ml[53,2618+6]..[53,2618+13])
                                      Pexp_ident "argres'" (asmcomp/arm/reload.ml[53,2618+6]..[53,2618+13])
                                ]
                      None
              ]
    ]
  structure_item (asmcomp/arm/reload.ml[56,2637+0]..[57,2669+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/reload.ml[56,2637+4]..[56,2637+11])
          Ppat_var "fundecl" (asmcomp/arm/reload.ml[56,2637+4]..[56,2637+11])
        expression (asmcomp/arm/reload.ml[56,2637+12]..[57,2669+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/arm/reload.ml[56,2637+12]..[56,2637+13])
            Ppat_var "f" (asmcomp/arm/reload.ml[56,2637+12]..[56,2637+13])
          expression (asmcomp/arm/reload.ml[56,2637+14]..[57,2669+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/arm/reload.ml[56,2637+14]..[56,2637+29])
              Ppat_var "num_stack_slots" (asmcomp/arm/reload.ml[56,2637+14]..[56,2637+29])
            expression (asmcomp/arm/reload.ml[57,2669+2]..[57,2669+40])
              Pexp_apply
              expression (asmcomp/arm/reload.ml[57,2669+2]..[57,2669+22])
                Pexp_send "fundecl"
                expression (asmcomp/arm/reload.ml[57,2669+2]..[57,2669+14])
                  Pexp_new "reload" (asmcomp/arm/reload.ml[57,2669+7]..[57,2669+13])
              [
                <arg>
                Nolabel
                  expression (asmcomp/arm/reload.ml[57,2669+23]..[57,2669+24])
                    Pexp_ident "f" (asmcomp/arm/reload.ml[57,2669+23]..[57,2669+24])
                <arg>
                Nolabel
                  expression (asmcomp/arm/reload.ml[57,2669+25]..[57,2669+40])
                    Pexp_ident "num_stack_slots" (asmcomp/arm/reload.ml[57,2669+25]..[57,2669+40])
              ]
    ]
]

