[
  signature_item (typing/typedtree.mli[16,1079+0]..[16,1079+40])
    Psig_attribute "ocaml.text"
    [
      structure_item (typing/typedtree.mli[16,1079+0]..[16,1079+40])
        Pstr_eval
        expression (typing/typedtree.mli[16,1079+0]..[16,1079+40])
          Pexp_constant PConst_string(" Abstract syntax tree after typing ",(typing/typedtree.mli[16,1079+0]..[16,1079+40]),None)
    ]
  signature_item (typing/typedtree.mli[19,1122+0]..[22,1228+2])
    Psig_attribute "ocaml.text"
    [
      structure_item (typing/typedtree.mli[19,1122+0]..[22,1228+2])
        Pstr_eval
        expression (typing/typedtree.mli[19,1122+0]..[22,1228+2])
          Pexp_constant PConst_string(" By comparison with {!Parsetree}:\n    - Every {!Longindent.t} is accompanied by a resolved {!Path.t}.\n\n",(typing/typedtree.mli[19,1122+0]..[22,1228+2]),None)
    ]
  signature_item (typing/typedtree.mli[24,1232+0]..[24,1232+13])
    Psig_open Fresh "Asttypes" (typing/typedtree.mli[24,1232+5]..[24,1232+13])
  signature_item (typing/typedtree.mli[28,1294+0]..[28,1294+30])
    Psig_type Rec
    [
      type_declaration "partial" (typing/typedtree.mli[28,1294+5]..[28,1294+12]) (typing/typedtree.mli[28,1294+0]..[28,1294+30])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[28,1294+15]..[28,1294+22])
                "Partial" (typing/typedtree.mli[28,1294+15]..[28,1294+22])
                []
                None
              (typing/typedtree.mli[28,1294+23]..[28,1294+30])
                "Total" (typing/typedtree.mli[28,1294+25]..[28,1294+30])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/typedtree.mli[30,1326+0]..[30,1326+27])
    Psig_attribute "ocaml.text"
    [
      structure_item (typing/typedtree.mli[30,1326+0]..[30,1326+27])
        Pstr_eval
        expression (typing/typedtree.mli[30,1326+0]..[30,1326+27])
          Pexp_constant PConst_string(" {1 Extension points} ",(typing/typedtree.mli[30,1326+0]..[30,1326+27]),None)
    ]
  signature_item (typing/typedtree.mli[32,1355+0]..[32,1355+36])
    Psig_type Rec
    [
      type_declaration "attribute" (typing/typedtree.mli[32,1355+5]..[32,1355+14]) (typing/typedtree.mli[32,1355+0]..[32,1355+36])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/typedtree.mli[32,1355+17]..[32,1355+36])
              Ptyp_constr "Parsetree.attribute" (typing/typedtree.mli[32,1355+17]..[32,1355+36])
              []
    ]
  signature_item (typing/typedtree.mli[33,1392+0]..[33,1392+32])
    Psig_type Rec
    [
      type_declaration "attributes" (typing/typedtree.mli[33,1392+5]..[33,1392+15]) (typing/typedtree.mli[33,1392+0]..[33,1392+32])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/typedtree.mli[33,1392+18]..[33,1392+32])
              Ptyp_constr "list" (typing/typedtree.mli[33,1392+28]..[33,1392+32])
              [
                core_type (typing/typedtree.mli[33,1392+18]..[33,1392+27])
                  Ptyp_constr "attribute" (typing/typedtree.mli[33,1392+18]..[33,1392+27])
                  []
              ]
    ]
  signature_item (typing/typedtree.mli[35,1426+0]..[35,1426+24])
    Psig_attribute "ocaml.text"
    [
      structure_item (typing/typedtree.mli[35,1426+0]..[35,1426+24])
        Pstr_eval
        expression (typing/typedtree.mli[35,1426+0]..[35,1426+24])
          Pexp_constant PConst_string(" {1 Core language} ",(typing/typedtree.mli[35,1426+0]..[35,1426+24]),None)
    ]
  signature_item (typing/typedtree.mli[37,1452+0]..[37,1452+26])
    Psig_type Rec
    [
      type_declaration "value" (typing/typedtree.mli[37,1452+5]..[37,1452+10]) (typing/typedtree.mli[37,1452+0]..[37,1452+26])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[37,1452+13]..[37,1452+26])
                "Value_pattern" (typing/typedtree.mli[37,1452+13]..[37,1452+26])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/typedtree.mli[38,1479+0]..[38,1479+38])
    Psig_type Rec
    [
      type_declaration "computation" (typing/typedtree.mli[38,1479+5]..[38,1479+16]) (typing/typedtree.mli[38,1479+0]..[38,1479+38])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[38,1479+19]..[38,1479+38])
                "Computation_pattern" (typing/typedtree.mli[38,1479+19]..[38,1479+38])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/typedtree.mli[40,1519+0]..[42,1578+44])
    Psig_type Rec
    [
      type_declaration "pattern_category" (typing/typedtree.mli[40,1519+7]..[40,1519+23]) (typing/typedtree.mli[40,1519+0]..[42,1578+44])
        ptype_params =
          [
            core_type (typing/typedtree.mli[40,1519+5]..[40,1519+6])
              Ptyp_any
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[41,1545+0]..[41,1545+32])
                "Value" (typing/typedtree.mli[41,1545+2]..[41,1545+7])
                []
                Some
                  core_type (typing/typedtree.mli[41,1545+10]..[41,1545+32])
                    Ptyp_constr "pattern_category" (typing/typedtree.mli[41,1545+16]..[41,1545+32])
                    [
                      core_type (typing/typedtree.mli[41,1545+10]..[41,1545+15])
                        Ptyp_constr "value" (typing/typedtree.mli[41,1545+10]..[41,1545+15])
                        []
                    ]
              (typing/typedtree.mli[42,1578+0]..[42,1578+44])
                "Computation" (typing/typedtree.mli[42,1578+2]..[42,1578+13])
                []
                Some
                  core_type (typing/typedtree.mli[42,1578+16]..[42,1578+44])
                    Ptyp_constr "pattern_category" (typing/typedtree.mli[42,1578+28]..[42,1578+44])
                    [
                      core_type (typing/typedtree.mli[42,1578+16]..[42,1578+27])
                        Ptyp_constr "computation" (typing/typedtree.mli[42,1578+16]..[42,1578+27])
                        []
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/typedtree.mli[44,1624+0]..[763,23386+4])
    Psig_type Rec
    [
      type_declaration "pattern" (typing/typedtree.mli[44,1624+5]..[44,1624+12]) (typing/typedtree.mli[44,1624+0]..[44,1624+36])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/typedtree.mli[44,1624+15]..[44,1624+36])
              Ptyp_constr "general_pattern" (typing/typedtree.mli[44,1624+21]..[44,1624+36])
              [
                core_type (typing/typedtree.mli[44,1624+15]..[44,1624+20])
                  Ptyp_constr "value" (typing/typedtree.mli[44,1624+15]..[44,1624+20])
                  []
              ]
      type_declaration "general_pattern" (typing/typedtree.mli[45,1661+7]..[45,1661+22]) (typing/typedtree.mli[45,1661+0]..[45,1661+53])
        ptype_params =
          [
            core_type (typing/typedtree.mli[45,1661+4]..[45,1661+6])
              Ptyp_var k
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/typedtree.mli[45,1661+25]..[45,1661+53])
              Ptyp_constr "pattern_data" (typing/typedtree.mli[45,1661+41]..[45,1661+53])
              [
                core_type (typing/typedtree.mli[45,1661+25]..[45,1661+40])
                  Ptyp_constr "pattern_desc" (typing/typedtree.mli[45,1661+28]..[45,1661+40])
                  [
                    core_type (typing/typedtree.mli[45,1661+25]..[45,1661+27])
                      Ptyp_var k
                  ]
              ]
      type_declaration "pattern_data" (typing/typedtree.mli[47,1716+7]..[47,1716+19]) (typing/typedtree.mli[47,1716+0]..[54,1924+4])
        ptype_params =
          [
            core_type (typing/typedtree.mli[47,1716+4]..[47,1716+6])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[48,1738+4]..[48,1738+17])
                Immutable
                "pat_desc" (typing/typedtree.mli[48,1738+4]..[48,1738+12])                core_type (typing/typedtree.mli[48,1738+14]..[48,1738+16])
                  Ptyp_var a
              (typing/typedtree.mli[49,1756+4]..[49,1756+24])
                Immutable
                "pat_loc" (typing/typedtree.mli[49,1756+4]..[49,1756+11])                core_type (typing/typedtree.mli[49,1756+13]..[49,1756+23])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[49,1756+13]..[49,1756+23])
                  []
              (typing/typedtree.mli[50,1781+4]..[50,1781+59])
                Immutable
                "pat_extra" (typing/typedtree.mli[50,1781+4]..[50,1781+13])                core_type (typing/typedtree.mli[50,1781+16]..[50,1781+58])
                  Ptyp_constr "list" (typing/typedtree.mli[50,1781+54]..[50,1781+58])
                  [
                    core_type (typing/typedtree.mli[50,1781+17]..[50,1781+52])
                      Ptyp_tuple
                      [
                        core_type (typing/typedtree.mli[50,1781+17]..[50,1781+26])
                          Ptyp_constr "pat_extra" (typing/typedtree.mli[50,1781+17]..[50,1781+26])
                          []
                        core_type (typing/typedtree.mli[50,1781+29]..[50,1781+39])
                          Ptyp_constr "Location.t" (typing/typedtree.mli[50,1781+29]..[50,1781+39])
                          []
                        core_type (typing/typedtree.mli[50,1781+42]..[50,1781+52])
                          Ptyp_constr "attributes" (typing/typedtree.mli[50,1781+42]..[50,1781+52])
                          []
                      ]
                  ]
              (typing/typedtree.mli[51,1841+4]..[51,1841+30])
                Immutable
                "pat_type" (typing/typedtree.mli[51,1841+4]..[51,1841+12])                core_type (typing/typedtree.mli[51,1841+14]..[51,1841+29])
                  Ptyp_constr "Types.type_expr" (typing/typedtree.mli[51,1841+14]..[51,1841+29])
                  []
              (typing/typedtree.mli[52,1872+4]..[52,1872+19])
                Immutable
                "pat_env" (typing/typedtree.mli[52,1872+4]..[52,1872+11])                core_type (typing/typedtree.mli[52,1872+13]..[52,1872+18])
                  Ptyp_constr "Env.t" (typing/typedtree.mli[52,1872+13]..[52,1872+18])
                  []
              (typing/typedtree.mli[53,1892+4]..[53,1892+31])
                Immutable
                "pat_attributes" (typing/typedtree.mli[53,1892+4]..[53,1892+18])                core_type (typing/typedtree.mli[53,1892+20]..[53,1892+30])
                  Ptyp_constr "attributes" (typing/typedtree.mli[53,1892+20]..[53,1892+30])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "pat_extra" (typing/typedtree.mli[56,1930+4]..[56,1930+13]) (typing/typedtree.mli[56,1930+0]..[69,2477+15])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[57,1946+2]..[57,1946+32])
                "Tpat_constraint" (typing/typedtree.mli[57,1946+4]..[57,1946+19])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[58,1979+8]..[60,2097+11])
                      Pstr_eval
                      expression (typing/typedtree.mli[58,1979+8]..[60,2097+11])
                        Pexp_constant PConst_string(" P : T          { pat_desc = P\n                           ; pat_extra = (Tpat_constraint T, _, _) :: ... }\n         ",(typing/typedtree.mli[58,1979+8]..[60,2097+11]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[57,1946+23]..[57,1946+32])
                    Ptyp_constr "core_type" (typing/typedtree.mli[57,1946+23]..[57,1946+32])
                    []
                ]
                None
              (typing/typedtree.mli[61,2109+2]..[61,2109+41])
                "Tpat_type" (typing/typedtree.mli[61,2109+4]..[61,2109+13])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[62,2151+8]..[67,2415+11])
                      Pstr_eval
                      expression (typing/typedtree.mli[62,2151+8]..[67,2415+11])
                        Pexp_constant PConst_string(" #tconst        { pat_desc = disjunction\n                           ; pat_extra = (Tpat_type (P, \"tconst\"), _, _) :: ...}\n\n                           where [disjunction] is a [Tpat_or _] representing the\n                           branches of [tconst].\n         ",(typing/typedtree.mli[62,2151+8]..[67,2415+11]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[61,2109+17]..[61,2109+23])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[61,2109+17]..[61,2109+23])
                    []
                  core_type (typing/typedtree.mli[61,2109+26]..[61,2109+41])
                    Ptyp_constr "loc" (typing/typedtree.mli[61,2109+38]..[61,2109+41])
                    [
                      core_type (typing/typedtree.mli[61,2109+26]..[61,2109+37])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[61,2109+26]..[61,2109+37])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[68,2427+2]..[68,2427+49])
                "Tpat_open" (typing/typedtree.mli[68,2427+4]..[68,2427+13])
                [
                  core_type (typing/typedtree.mli[68,2427+17]..[68,2427+23])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[68,2427+17]..[68,2427+23])
                    []
                  core_type (typing/typedtree.mli[68,2427+26]..[68,2427+41])
                    Ptyp_constr "loc" (typing/typedtree.mli[68,2427+38]..[68,2427+41])
                    [
                      core_type (typing/typedtree.mli[68,2427+26]..[68,2427+37])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[68,2427+26]..[68,2427+37])
                        []
                    ]
                  core_type (typing/typedtree.mli[68,2427+44]..[68,2427+49])
                    Ptyp_constr "Env.t" (typing/typedtree.mli[68,2427+44]..[68,2427+49])
                    []
                ]
                None
              (typing/typedtree.mli[69,2477+2]..[69,2477+15])
                "Tpat_unpack" (typing/typedtree.mli[69,2477+4]..[69,2477+15])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[70,2493+8]..[72,2617+11])
                      Pstr_eval
                      expression (typing/typedtree.mli[70,2493+8]..[72,2617+11])
                        Pexp_constant PConst_string(" (module P)     { pat_desc  = Tpat_var \"P\"\n                           ; pat_extra = (Tpat_unpack, _, _) :: ... }\n         ",(typing/typedtree.mli[70,2493+8]..[72,2617+11]),None)
                  ]
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "pattern_desc" (typing/typedtree.mli[74,2630+7]..[74,2630+19]) (typing/typedtree.mli[74,2630+0]..[143,5448+21])
        ptype_params =
          [
            core_type (typing/typedtree.mli[74,2630+4]..[74,2630+6])
              Ptyp_var k
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[76,2675+2]..[76,2675+33])
                "Tpat_any" (typing/typedtree.mli[76,2675+4]..[76,2675+12])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[77,2709+8]..[77,2709+16])
                      Pstr_eval
                      expression (typing/typedtree.mli[77,2709+8]..[77,2709+16])
                        Pexp_constant PConst_string(" _ ",(typing/typedtree.mli[77,2709+8]..[77,2709+16]),None)
                  ]
                []
                Some
                  core_type (typing/typedtree.mli[76,2675+15]..[76,2675+33])
                    Ptyp_constr "pattern_desc" (typing/typedtree.mli[76,2675+21]..[76,2675+33])
                    [
                      core_type (typing/typedtree.mli[76,2675+15]..[76,2675+20])
                        Ptyp_constr "value" (typing/typedtree.mli[76,2675+15]..[76,2675+20])
                        []
                    ]
              (typing/typedtree.mli[78,2726+2]..[78,2726+57])
                "Tpat_var" (typing/typedtree.mli[78,2726+4]..[78,2726+12])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[79,2784+8]..[79,2784+16])
                      Pstr_eval
                      expression (typing/typedtree.mli[79,2784+8]..[79,2784+16])
                        Pexp_constant PConst_string(" x ",(typing/typedtree.mli[79,2784+8]..[79,2784+16]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[78,2726+15]..[78,2726+22])
                    Ptyp_constr "Ident.t" (typing/typedtree.mli[78,2726+15]..[78,2726+22])
                    []
                  core_type (typing/typedtree.mli[78,2726+25]..[78,2726+35])
                    Ptyp_constr "loc" (typing/typedtree.mli[78,2726+32]..[78,2726+35])
                    [
                      core_type (typing/typedtree.mli[78,2726+25]..[78,2726+31])
                        Ptyp_constr "string" (typing/typedtree.mli[78,2726+25]..[78,2726+31])
                        []
                    ]
                ]
                Some
                  core_type (typing/typedtree.mli[78,2726+39]..[78,2726+57])
                    Ptyp_constr "pattern_desc" (typing/typedtree.mli[78,2726+45]..[78,2726+57])
                    [
                      core_type (typing/typedtree.mli[78,2726+39]..[78,2726+44])
                        Ptyp_constr "value" (typing/typedtree.mli[78,2726+39]..[78,2726+44])
                        []
                    ]
              (typing/typedtree.mli[80,2801+2]..[81,2818+72])
                "Tpat_alias" (typing/typedtree.mli[80,2801+4]..[80,2801+14])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[82,2891+8]..[82,2891+21])
                      Pstr_eval
                      expression (typing/typedtree.mli[82,2891+8]..[82,2891+21])
                        Pexp_constant PConst_string(" P as a ",(typing/typedtree.mli[82,2891+8]..[82,2891+21]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[81,2818+6]..[81,2818+27])
                    Ptyp_constr "general_pattern" (typing/typedtree.mli[81,2818+12]..[81,2818+27])
                    [
                      core_type (typing/typedtree.mli[81,2818+6]..[81,2818+11])
                        Ptyp_constr "value" (typing/typedtree.mli[81,2818+6]..[81,2818+11])
                        []
                    ]
                  core_type (typing/typedtree.mli[81,2818+30]..[81,2818+37])
                    Ptyp_constr "Ident.t" (typing/typedtree.mli[81,2818+30]..[81,2818+37])
                    []
                  core_type (typing/typedtree.mli[81,2818+40]..[81,2818+50])
                    Ptyp_constr "loc" (typing/typedtree.mli[81,2818+47]..[81,2818+50])
                    [
                      core_type (typing/typedtree.mli[81,2818+40]..[81,2818+46])
                        Ptyp_constr "string" (typing/typedtree.mli[81,2818+40]..[81,2818+46])
                        []
                    ]
                ]
                Some
                  core_type (typing/typedtree.mli[81,2818+54]..[81,2818+72])
                    Ptyp_constr "pattern_desc" (typing/typedtree.mli[81,2818+60]..[81,2818+72])
                    [
                      core_type (typing/typedtree.mli[81,2818+54]..[81,2818+59])
                        Ptyp_constr "value" (typing/typedtree.mli[81,2818+54]..[81,2818+59])
                        []
                    ]
              (typing/typedtree.mli[83,2913+2]..[83,2913+50])
                "Tpat_constant" (typing/typedtree.mli[83,2913+4]..[83,2913+17])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[84,2964+8]..[84,2964+46])
                      Pstr_eval
                      expression (typing/typedtree.mli[84,2964+8]..[84,2964+46])
                        Pexp_constant PConst_string(" 1, 'a', \"true\", 1.0, 1l, 1L, 1n ",(typing/typedtree.mli[84,2964+8]..[84,2964+46]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[83,2913+20]..[83,2913+28])
                    Ptyp_constr "constant" (typing/typedtree.mli[83,2913+20]..[83,2913+28])
                    []
                ]
                Some
                  core_type (typing/typedtree.mli[83,2913+32]..[83,2913+50])
                    Ptyp_constr "pattern_desc" (typing/typedtree.mli[83,2913+38]..[83,2913+50])
                    [
                      core_type (typing/typedtree.mli[83,2913+32]..[83,2913+37])
                        Ptyp_constr "value" (typing/typedtree.mli[83,2913+32]..[83,2913+37])
                        []
                    ]
              (typing/typedtree.mli[85,3011+2]..[85,3011+65])
                "Tpat_tuple" (typing/typedtree.mli[85,3011+4]..[85,3011+14])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[86,3077+8]..[89,3134+11])
                      Pstr_eval
                      expression (typing/typedtree.mli[86,3077+8]..[89,3134+11])
                        Pexp_constant PConst_string(" (P1, ..., Pn)\n\n            Invariant: n >= 2\n         ",(typing/typedtree.mli[86,3077+8]..[89,3134+11]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[85,3011+17]..[85,3011+43])
                    Ptyp_constr "list" (typing/typedtree.mli[85,3011+39]..[85,3011+43])
                    [
                      core_type (typing/typedtree.mli[85,3011+17]..[85,3011+38])
                        Ptyp_constr "general_pattern" (typing/typedtree.mli[85,3011+23]..[85,3011+38])
                        [
                          core_type (typing/typedtree.mli[85,3011+17]..[85,3011+22])
                            Ptyp_constr "value" (typing/typedtree.mli[85,3011+17]..[85,3011+22])
                            []
                        ]
                    ]
                ]
                Some
                  core_type (typing/typedtree.mli[85,3011+47]..[85,3011+65])
                    Ptyp_constr "pattern_desc" (typing/typedtree.mli[85,3011+53]..[85,3011+65])
                    [
                      core_type (typing/typedtree.mli[85,3011+47]..[85,3011+52])
                        Ptyp_constr "value" (typing/typedtree.mli[85,3011+47]..[85,3011+52])
                        []
                    ]
              (typing/typedtree.mli[90,3146+2]..[93,3301+24])
                "Tpat_construct" (typing/typedtree.mli[90,3146+4]..[90,3146+18])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[94,3326+8]..[101,3767+12])
                      Pstr_eval
                      expression (typing/typedtree.mli[94,3326+8]..[101,3767+12])
                        Pexp_constant PConst_string(" C                             ([], None)\n            C P                           ([P], None)\n            C (P1, ..., Pn)               ([P1; ...; Pn], None)\n            C (P : t)                     ([P], Some ([], t))\n            C (P1, ..., Pn : t)           ([P1; ...; Pn], Some ([], t))\n            C (type a) (P : t)            ([P], Some ([a], t))\n            C (type a) (P1, ..., Pn : t)  ([P1; ...; Pn], Some ([a], t))\n          ",(typing/typedtree.mli[94,3326+8]..[101,3767+12]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[91,3167+6]..[91,3167+21])
                    Ptyp_constr "loc" (typing/typedtree.mli[91,3167+18]..[91,3167+21])
                    [
                      core_type (typing/typedtree.mli[91,3167+6]..[91,3167+17])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[91,3167+6]..[91,3167+17])
                        []
                    ]
                  core_type (typing/typedtree.mli[91,3167+24]..[91,3167+53])
                    Ptyp_constr "Types.constructor_description" (typing/typedtree.mli[91,3167+24]..[91,3167+53])
                    []
                  core_type (typing/typedtree.mli[92,3223+8]..[92,3223+34])
                    Ptyp_constr "list" (typing/typedtree.mli[92,3223+30]..[92,3223+34])
                    [
                      core_type (typing/typedtree.mli[92,3223+8]..[92,3223+29])
                        Ptyp_constr "general_pattern" (typing/typedtree.mli[92,3223+14]..[92,3223+29])
                        [
                          core_type (typing/typedtree.mli[92,3223+8]..[92,3223+13])
                            Ptyp_constr "value" (typing/typedtree.mli[92,3223+8]..[92,3223+13])
                            []
                        ]
                    ]
                  core_type (typing/typedtree.mli[92,3223+37]..[92,3223+74])
                    Ptyp_constr "option" (typing/typedtree.mli[92,3223+68]..[92,3223+74])
                    [
                      core_type (typing/typedtree.mli[92,3223+38]..[92,3223+66])
                        Ptyp_tuple
                        [
                          core_type (typing/typedtree.mli[92,3223+38]..[92,3223+54])
                            Ptyp_constr "list" (typing/typedtree.mli[92,3223+50]..[92,3223+54])
                            [
                              core_type (typing/typedtree.mli[92,3223+38]..[92,3223+49])
                                Ptyp_constr "loc" (typing/typedtree.mli[92,3223+46]..[92,3223+49])
                                [
                                  core_type (typing/typedtree.mli[92,3223+38]..[92,3223+45])
                                    Ptyp_constr "Ident.t" (typing/typedtree.mli[92,3223+38]..[92,3223+45])
                                    []
                                ]
                            ]
                          core_type (typing/typedtree.mli[92,3223+57]..[92,3223+66])
                            Ptyp_constr "core_type" (typing/typedtree.mli[92,3223+57]..[92,3223+66])
                            []
                        ]
                    ]
                ]
                Some
                  core_type (typing/typedtree.mli[93,3301+6]..[93,3301+24])
                    Ptyp_constr "pattern_desc" (typing/typedtree.mli[93,3301+12]..[93,3301+24])
                    [
                      core_type (typing/typedtree.mli[93,3301+6]..[93,3301+11])
                        Ptyp_constr "value" (typing/typedtree.mli[93,3301+6]..[93,3301+11])
                        []
                    ]
              (typing/typedtree.mli[102,3780+2]..[104,3866+24])
                "Tpat_variant" (typing/typedtree.mli[102,3780+4]..[102,3780+16])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[105,3891+8]..[109,4038+11])
                      Pstr_eval
                      expression (typing/typedtree.mli[105,3891+8]..[109,4038+11])
                        Pexp_constant PConst_string(" `A             (None)\n            `A P           (Some P)\n\n            See {!Types.row_desc} for an explanation of the last parameter.\n         ",(typing/typedtree.mli[105,3891+8]..[109,4038+11]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[103,3799+6]..[103,3799+11])
                    Ptyp_constr "label" (typing/typedtree.mli[103,3799+6]..[103,3799+11])
                    []
                  core_type (typing/typedtree.mli[103,3799+14]..[103,3799+42])
                    Ptyp_constr "option" (typing/typedtree.mli[103,3799+36]..[103,3799+42])
                    [
                      core_type (typing/typedtree.mli[103,3799+14]..[103,3799+35])
                        Ptyp_constr "general_pattern" (typing/typedtree.mli[103,3799+20]..[103,3799+35])
                        [
                          core_type (typing/typedtree.mli[103,3799+14]..[103,3799+19])
                            Ptyp_constr "value" (typing/typedtree.mli[103,3799+14]..[103,3799+19])
                            []
                        ]
                    ]
                  core_type (typing/typedtree.mli[103,3799+45]..[103,3799+63])
                    Ptyp_constr "ref" (typing/typedtree.mli[103,3799+60]..[103,3799+63])
                    [
                      core_type (typing/typedtree.mli[103,3799+45]..[103,3799+59])
                        Ptyp_constr "Types.row_desc" (typing/typedtree.mli[103,3799+45]..[103,3799+59])
                        []
                    ]
                ]
                Some
                  core_type (typing/typedtree.mli[104,3866+6]..[104,3866+24])
                    Ptyp_constr "pattern_desc" (typing/typedtree.mli[104,3866+12]..[104,3866+24])
                    [
                      core_type (typing/typedtree.mli[104,3866+6]..[104,3866+11])
                        Ptyp_constr "value" (typing/typedtree.mli[104,3866+6]..[104,3866+11])
                        []
                    ]
              (typing/typedtree.mli[110,4050+2]..[113,4172+24])
                "Tpat_record" (typing/typedtree.mli[110,4050+4]..[110,4050+15])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[114,4197+8]..[118,4333+11])
                      Pstr_eval
                      expression (typing/typedtree.mli[114,4197+8]..[118,4333+11])
                        Pexp_constant PConst_string(" { l1=P1; ...; ln=Pn }     (flag = Closed)\n            { l1=P1; ...; ln=Pn; _}   (flag = Open)\n\n            Invariant: n > 0\n         ",(typing/typedtree.mli[114,4197+8]..[118,4333+11]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[111,4068+6]..[111,4068+78])
                    Ptyp_constr "list" (typing/typedtree.mli[111,4068+74]..[111,4068+78])
                    [
                      core_type (typing/typedtree.mli[111,4068+7]..[111,4068+72])
                        Ptyp_tuple
                        [
                          core_type (typing/typedtree.mli[111,4068+7]..[111,4068+22])
                            Ptyp_constr "loc" (typing/typedtree.mli[111,4068+19]..[111,4068+22])
                            [
                              core_type (typing/typedtree.mli[111,4068+7]..[111,4068+18])
                                Ptyp_constr "Longident.t" (typing/typedtree.mli[111,4068+7]..[111,4068+18])
                                []
                            ]
                          core_type (typing/typedtree.mli[111,4068+25]..[111,4068+48])
                            Ptyp_constr "Types.label_description" (typing/typedtree.mli[111,4068+25]..[111,4068+48])
                            []
                          core_type (typing/typedtree.mli[111,4068+51]..[111,4068+72])
                            Ptyp_constr "general_pattern" (typing/typedtree.mli[111,4068+57]..[111,4068+72])
                            [
                              core_type (typing/typedtree.mli[111,4068+51]..[111,4068+56])
                                Ptyp_constr "value" (typing/typedtree.mli[111,4068+51]..[111,4068+56])
                                []
                            ]
                        ]
                    ]
                  core_type (typing/typedtree.mli[112,4149+8]..[112,4149+19])
                    Ptyp_constr "closed_flag" (typing/typedtree.mli[112,4149+8]..[112,4149+19])
                    []
                ]
                Some
                  core_type (typing/typedtree.mli[113,4172+6]..[113,4172+24])
                    Ptyp_constr "pattern_desc" (typing/typedtree.mli[113,4172+12]..[113,4172+24])
                    [
                      core_type (typing/typedtree.mli[113,4172+6]..[113,4172+11])
                        Ptyp_constr "value" (typing/typedtree.mli[113,4172+6]..[113,4172+11])
                        []
                    ]
              (typing/typedtree.mli[119,4345+2]..[119,4345+65])
                "Tpat_array" (typing/typedtree.mli[119,4345+4]..[119,4345+14])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[120,4411+8]..[120,4411+32])
                      Pstr_eval
                      expression (typing/typedtree.mli[120,4411+8]..[120,4411+32])
                        Pexp_constant PConst_string(" [| P1; ...; Pn |] ",(typing/typedtree.mli[120,4411+8]..[120,4411+32]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[119,4345+17]..[119,4345+43])
                    Ptyp_constr "list" (typing/typedtree.mli[119,4345+39]..[119,4345+43])
                    [
                      core_type (typing/typedtree.mli[119,4345+17]..[119,4345+38])
                        Ptyp_constr "general_pattern" (typing/typedtree.mli[119,4345+23]..[119,4345+38])
                        [
                          core_type (typing/typedtree.mli[119,4345+17]..[119,4345+22])
                            Ptyp_constr "value" (typing/typedtree.mli[119,4345+17]..[119,4345+22])
                            []
                        ]
                    ]
                ]
                Some
                  core_type (typing/typedtree.mli[119,4345+47]..[119,4345+65])
                    Ptyp_constr "pattern_desc" (typing/typedtree.mli[119,4345+53]..[119,4345+65])
                    [
                      core_type (typing/typedtree.mli[119,4345+47]..[119,4345+52])
                        Ptyp_constr "value" (typing/typedtree.mli[119,4345+47]..[119,4345+52])
                        []
                    ]
              (typing/typedtree.mli[121,4444+2]..[121,4444+59])
                "Tpat_lazy" (typing/typedtree.mli[121,4444+4]..[121,4444+13])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[122,4504+8]..[122,4504+21])
                      Pstr_eval
                      expression (typing/typedtree.mli[122,4504+8]..[122,4504+21])
                        Pexp_constant PConst_string(" lazy P ",(typing/typedtree.mli[122,4504+8]..[122,4504+21]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[121,4444+16]..[121,4444+37])
                    Ptyp_constr "general_pattern" (typing/typedtree.mli[121,4444+22]..[121,4444+37])
                    [
                      core_type (typing/typedtree.mli[121,4444+16]..[121,4444+21])
                        Ptyp_constr "value" (typing/typedtree.mli[121,4444+16]..[121,4444+21])
                        []
                    ]
                ]
                Some
                  core_type (typing/typedtree.mli[121,4444+41]..[121,4444+59])
                    Ptyp_constr "pattern_desc" (typing/typedtree.mli[121,4444+47]..[121,4444+59])
                    [
                      core_type (typing/typedtree.mli[121,4444+41]..[121,4444+46])
                        Ptyp_constr "value" (typing/typedtree.mli[121,4444+41]..[121,4444+46])
                        []
                    ]
              (typing/typedtree.mli[124,4555+2]..[124,4555+64])
                "Tpat_value" (typing/typedtree.mli[124,4555+4]..[124,4555+14])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[125,4620+8]..[137,5221+11])
                      Pstr_eval
                      expression (typing/typedtree.mli[125,4620+8]..[137,5221+11])
                        Pexp_constant PConst_string(" P\n\n            Invariant: Tpat_value pattern should not carry\n            pat_attributes or pat_extra metadata coming from user\n            syntax, which must be on the inner pattern node -- to\n            facilitate searching for a certain value pattern\n            constructor with a specific attributed.\n\n            To enforce this restriction, we made the argument of\n            the Tpat_value constructor a private synonym of [pattern],\n            requiring you to use the [as_computation_pattern] function\n            below instead of using the [Tpat_value] constructor directly.\n         ",(typing/typedtree.mli[125,4620+8]..[137,5221+11]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[124,4555+17]..[124,4555+36])
                    Ptyp_constr "tpat_value_argument" (typing/typedtree.mli[124,4555+17]..[124,4555+36])
                    []
                ]
                Some
                  core_type (typing/typedtree.mli[124,4555+40]..[124,4555+64])
                    Ptyp_constr "pattern_desc" (typing/typedtree.mli[124,4555+52]..[124,4555+64])
                    [
                      core_type (typing/typedtree.mli[124,4555+40]..[124,4555+51])
                        Ptyp_constr "computation" (typing/typedtree.mli[124,4555+40]..[124,4555+51])
                        []
                    ]
              (typing/typedtree.mli[138,5233+2]..[138,5233+70])
                "Tpat_exception" (typing/typedtree.mli[138,5233+4]..[138,5233+18])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[139,5304+8]..[139,5304+26])
                      Pstr_eval
                      expression (typing/typedtree.mli[139,5304+8]..[139,5304+26])
                        Pexp_constant PConst_string(" exception P ",(typing/typedtree.mli[139,5304+8]..[139,5304+26]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[138,5233+21]..[138,5233+42])
                    Ptyp_constr "general_pattern" (typing/typedtree.mli[138,5233+27]..[138,5233+42])
                    [
                      core_type (typing/typedtree.mli[138,5233+21]..[138,5233+26])
                        Ptyp_constr "value" (typing/typedtree.mli[138,5233+21]..[138,5233+26])
                        []
                    ]
                ]
                Some
                  core_type (typing/typedtree.mli[138,5233+46]..[138,5233+70])
                    Ptyp_constr "pattern_desc" (typing/typedtree.mli[138,5233+58]..[138,5233+70])
                    [
                      core_type (typing/typedtree.mli[138,5233+46]..[138,5233+57])
                        Ptyp_constr "computation" (typing/typedtree.mli[138,5233+46]..[138,5233+57])
                        []
                    ]
              (typing/typedtree.mli[141,5361+2]..[143,5448+21])
                "Tpat_or" (typing/typedtree.mli[141,5361+4]..[141,5361+11])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[144,5470+8]..[148,5600+11])
                      Pstr_eval
                      expression (typing/typedtree.mli[144,5470+8]..[148,5600+11])
                        Pexp_constant PConst_string(" P1 | P2\n\n            [row_desc] = [Some _] when translating [Ppat_type _],\n                         [None] otherwise.\n         ",(typing/typedtree.mli[144,5470+8]..[148,5600+11]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[142,5375+6]..[142,5375+24])
                    Ptyp_constr "general_pattern" (typing/typedtree.mli[142,5375+9]..[142,5375+24])
                    [
                      core_type (typing/typedtree.mli[142,5375+6]..[142,5375+8])
                        Ptyp_var k
                    ]
                  core_type (typing/typedtree.mli[142,5375+27]..[142,5375+45])
                    Ptyp_constr "general_pattern" (typing/typedtree.mli[142,5375+30]..[142,5375+45])
                    [
                      core_type (typing/typedtree.mli[142,5375+27]..[142,5375+29])
                        Ptyp_var k
                    ]
                  core_type (typing/typedtree.mli[142,5375+48]..[142,5375+69])
                    Ptyp_constr "option" (typing/typedtree.mli[142,5375+63]..[142,5375+69])
                    [
                      core_type (typing/typedtree.mli[142,5375+48]..[142,5375+62])
                        Ptyp_constr "Types.row_desc" (typing/typedtree.mli[142,5375+48]..[142,5375+62])
                        []
                    ]
                ]
                Some
                  core_type (typing/typedtree.mli[143,5448+6]..[143,5448+21])
                    Ptyp_constr "pattern_desc" (typing/typedtree.mli[143,5448+9]..[143,5448+21])
                    [
                      core_type (typing/typedtree.mli[143,5448+6]..[143,5448+8])
                        Ptyp_var k
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "tpat_value_argument" (typing/typedtree.mli[150,5613+4]..[150,5613+23]) (typing/typedtree.mli[150,5613+0]..[150,5613+55])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Private
        ptype_manifest =
          Some
            core_type (typing/typedtree.mli[150,5613+34]..[150,5613+55])
              Ptyp_constr "general_pattern" (typing/typedtree.mli[150,5613+40]..[150,5613+55])
              [
                core_type (typing/typedtree.mli[150,5613+34]..[150,5613+39])
                  Ptyp_constr "value" (typing/typedtree.mli[150,5613+34]..[150,5613+39])
                  []
              ]
      type_declaration "expression" (typing/typedtree.mli[152,5670+4]..[152,5670+14]) (typing/typedtree.mli[152,5670+0]..[159,5885+4])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[153,5687+4]..[153,5687+30])
                Immutable
                "exp_desc" (typing/typedtree.mli[153,5687+4]..[153,5687+12])                core_type (typing/typedtree.mli[153,5687+14]..[153,5687+29])
                  Ptyp_constr "expression_desc" (typing/typedtree.mli[153,5687+14]..[153,5687+29])
                  []
              (typing/typedtree.mli[154,5718+4]..[154,5718+24])
                Immutable
                "exp_loc" (typing/typedtree.mli[154,5718+4]..[154,5718+11])                core_type (typing/typedtree.mli[154,5718+13]..[154,5718+23])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[154,5718+13]..[154,5718+23])
                  []
              (typing/typedtree.mli[155,5743+4]..[155,5743+58])
                Immutable
                "exp_extra" (typing/typedtree.mli[155,5743+4]..[155,5743+13])                core_type (typing/typedtree.mli[155,5743+15]..[155,5743+57])
                  Ptyp_constr "list" (typing/typedtree.mli[155,5743+53]..[155,5743+57])
                  [
                    core_type (typing/typedtree.mli[155,5743+16]..[155,5743+51])
                      Ptyp_tuple
                      [
                        core_type (typing/typedtree.mli[155,5743+16]..[155,5743+25])
                          Ptyp_constr "exp_extra" (typing/typedtree.mli[155,5743+16]..[155,5743+25])
                          []
                        core_type (typing/typedtree.mli[155,5743+28]..[155,5743+38])
                          Ptyp_constr "Location.t" (typing/typedtree.mli[155,5743+28]..[155,5743+38])
                          []
                        core_type (typing/typedtree.mli[155,5743+41]..[155,5743+51])
                          Ptyp_constr "attributes" (typing/typedtree.mli[155,5743+41]..[155,5743+51])
                          []
                      ]
                  ]
              (typing/typedtree.mli[156,5802+4]..[156,5802+30])
                Immutable
                "exp_type" (typing/typedtree.mli[156,5802+4]..[156,5802+12])                core_type (typing/typedtree.mli[156,5802+14]..[156,5802+29])
                  Ptyp_constr "Types.type_expr" (typing/typedtree.mli[156,5802+14]..[156,5802+29])
                  []
              (typing/typedtree.mli[157,5833+4]..[157,5833+19])
                Immutable
                "exp_env" (typing/typedtree.mli[157,5833+4]..[157,5833+11])                core_type (typing/typedtree.mli[157,5833+13]..[157,5833+18])
                  Ptyp_constr "Env.t" (typing/typedtree.mli[157,5833+13]..[157,5833+18])
                  []
              (typing/typedtree.mli[158,5853+4]..[158,5853+31])
                Immutable
                "exp_attributes" (typing/typedtree.mli[158,5853+4]..[158,5853+18])                core_type (typing/typedtree.mli[158,5853+20]..[158,5853+30])
                  Ptyp_constr "attributes" (typing/typedtree.mli[158,5853+20]..[158,5853+30])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "exp_extra" (typing/typedtree.mli[161,5891+4]..[161,5891+13]) (typing/typedtree.mli[161,5891+0]..[170,6203+26])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[162,5907+2]..[162,5907+32])
                "Texp_constraint" (typing/typedtree.mli[162,5907+4]..[162,5907+19])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[163,5940+8]..[163,5940+20])
                      Pstr_eval
                      expression (typing/typedtree.mli[163,5940+8]..[163,5940+20])
                        Pexp_constant PConst_string(" E : T ",(typing/typedtree.mli[163,5940+8]..[163,5940+20]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[162,5907+23]..[162,5907+32])
                    Ptyp_constr "core_type" (typing/typedtree.mli[162,5907+23]..[162,5907+32])
                    []
                ]
                None
              (typing/typedtree.mli[164,5961+2]..[164,5961+47])
                "Texp_coerce" (typing/typedtree.mli[164,5961+4]..[164,5961+15])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[165,6009+8]..[167,6118+11])
                      Pstr_eval
                      expression (typing/typedtree.mli[165,6009+8]..[167,6118+11])
                        Pexp_constant PConst_string(" E :> T           [Texp_coerce (None, T)]\n            E : T0 :> T      [Texp_coerce (Some T0, T)]\n         ",(typing/typedtree.mli[165,6009+8]..[167,6118+11]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[164,5961+19]..[164,5961+35])
                    Ptyp_constr "option" (typing/typedtree.mli[164,5961+29]..[164,5961+35])
                    [
                      core_type (typing/typedtree.mli[164,5961+19]..[164,5961+28])
                        Ptyp_constr "core_type" (typing/typedtree.mli[164,5961+19]..[164,5961+28])
                        []
                    ]
                  core_type (typing/typedtree.mli[164,5961+38]..[164,5961+47])
                    Ptyp_constr "core_type" (typing/typedtree.mli[164,5961+38]..[164,5961+47])
                    []
                ]
                None
              (typing/typedtree.mli[168,6130+2]..[168,6130+33])
                "Texp_poly" (typing/typedtree.mli[168,6130+4]..[168,6130+13])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[169,6164+8]..[169,6164+38])
                      Pstr_eval
                      expression (typing/typedtree.mli[169,6164+8]..[169,6164+38])
                        Pexp_constant PConst_string(" Used for method bodies. ",(typing/typedtree.mli[169,6164+8]..[169,6164+38]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[168,6130+17]..[168,6130+33])
                    Ptyp_constr "option" (typing/typedtree.mli[168,6130+27]..[168,6130+33])
                    [
                      core_type (typing/typedtree.mli[168,6130+17]..[168,6130+26])
                        Ptyp_constr "core_type" (typing/typedtree.mli[168,6130+17]..[168,6130+26])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[170,6203+2]..[170,6203+26])
                "Texp_newtype" (typing/typedtree.mli[170,6203+4]..[170,6203+16])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[171,6230+8]..[171,6230+31])
                      Pstr_eval
                      expression (typing/typedtree.mli[171,6230+8]..[171,6230+31])
                        Pexp_constant PConst_string(" fun (type t) ->  ",(typing/typedtree.mli[171,6230+8]..[171,6230+31]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[170,6203+20]..[170,6203+26])
                    Ptyp_constr "string" (typing/typedtree.mli[170,6203+20]..[170,6203+26])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "expression_desc" (typing/typedtree.mli[173,6263+4]..[173,6263+19]) (typing/typedtree.mli[173,6263+0]..[280,10453+46])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[174,6285+4]..[174,6285+68])
                "Texp_ident" (typing/typedtree.mli[174,6285+4]..[174,6285+14])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[175,6354+8]..[177,6384+11])
                      Pstr_eval
                      expression (typing/typedtree.mli[175,6354+8]..[177,6384+11])
                        Pexp_constant PConst_string(" x\n            M.x\n         ",(typing/typedtree.mli[175,6354+8]..[177,6384+11]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[174,6285+18]..[174,6285+24])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[174,6285+18]..[174,6285+24])
                    []
                  core_type (typing/typedtree.mli[174,6285+27]..[174,6285+42])
                    Ptyp_constr "loc" (typing/typedtree.mli[174,6285+39]..[174,6285+42])
                    [
                      core_type (typing/typedtree.mli[174,6285+27]..[174,6285+38])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[174,6285+27]..[174,6285+38])
                        []
                    ]
                  core_type (typing/typedtree.mli[174,6285+45]..[174,6285+68])
                    Ptyp_constr "Types.value_description" (typing/typedtree.mli[174,6285+45]..[174,6285+68])
                    []
                ]
                None
              (typing/typedtree.mli[178,6396+2]..[178,6396+29])
                "Texp_constant" (typing/typedtree.mli[178,6396+4]..[178,6396+17])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[179,6426+8]..[179,6426+46])
                      Pstr_eval
                      expression (typing/typedtree.mli[179,6426+8]..[179,6426+46])
                        Pexp_constant PConst_string(" 1, 'a', \"true\", 1.0, 1l, 1L, 1n ",(typing/typedtree.mli[179,6426+8]..[179,6426+46]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[178,6396+21]..[178,6396+29])
                    Ptyp_constr "constant" (typing/typedtree.mli[178,6396+21]..[178,6396+29])
                    []
                ]
                None
              (typing/typedtree.mli[180,6473+2]..[180,6473+58])
                "Texp_let" (typing/typedtree.mli[180,6473+4]..[180,6473+12])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[181,6532+8]..[183,6683+11])
                      Pstr_eval
                      expression (typing/typedtree.mli[181,6532+8]..[183,6683+11])
                        Pexp_constant PConst_string(" let P1 = E1 and ... and Pn = EN in E       (flag = Nonrecursive)\n            let rec P1 = E1 and ... and Pn = EN in E   (flag = Recursive)\n         ",(typing/typedtree.mli[181,6532+8]..[183,6683+11]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[180,6473+16]..[180,6473+24])
                    Ptyp_constr "rec_flag" (typing/typedtree.mli[180,6473+16]..[180,6473+24])
                    []
                  core_type (typing/typedtree.mli[180,6473+27]..[180,6473+45])
                    Ptyp_constr "list" (typing/typedtree.mli[180,6473+41]..[180,6473+45])
                    [
                      core_type (typing/typedtree.mli[180,6473+27]..[180,6473+40])
                        Ptyp_constr "value_binding" (typing/typedtree.mli[180,6473+27]..[180,6473+40])
                        []
                    ]
                  core_type (typing/typedtree.mli[180,6473+48]..[180,6473+58])
                    Ptyp_constr "expression" (typing/typedtree.mli[180,6473+48]..[180,6473+58])
                    []
                ]
                None
              (typing/typedtree.mli[184,6695+2]..[185,6758+51])
                "Texp_function" (typing/typedtree.mli[184,6695+4]..[184,6695+17])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[186,6810+8]..[195,7156+11])
                      Pstr_eval
                      expression (typing/typedtree.mli[186,6810+8]..[195,7156+11])
                        Pexp_constant PConst_string(" [Pexp_fun] and [Pexp_function] both translate to [Texp_function].\n            See {!Parsetree} for more details.\n\n            [param] is the identifier that is to be used to name the\n            parameter of the function.\n\n            partial =\n              [Partial] if the pattern match is partial\n              [Total] otherwise.\n         ",(typing/typedtree.mli[186,6810+8]..[195,7156+11]),None)
                  ]
                [
                  (typing/typedtree.mli[184,6695+23]..[184,6695+45])
                    Immutable
                    "arg_label" (typing/typedtree.mli[184,6695+23]..[184,6695+32])                    core_type (typing/typedtree.mli[184,6695+35]..[184,6695+44])
                      Ptyp_constr "arg_label" (typing/typedtree.mli[184,6695+35]..[184,6695+44])
                      []
                  (typing/typedtree.mli[184,6695+46]..[184,6695+62])
                    Immutable
                    "param" (typing/typedtree.mli[184,6695+46]..[184,6695+51])                    core_type (typing/typedtree.mli[184,6695+54]..[184,6695+61])
                      Ptyp_constr "Ident.t" (typing/typedtree.mli[184,6695+54]..[184,6695+61])
                      []
                  (typing/typedtree.mli[185,6758+6]..[185,6758+30])
                    Immutable
                    "cases" (typing/typedtree.mli[185,6758+6]..[185,6758+11])                    core_type (typing/typedtree.mli[185,6758+14]..[185,6758+29])
                      Ptyp_constr "list" (typing/typedtree.mli[185,6758+25]..[185,6758+29])
                      [
                        core_type (typing/typedtree.mli[185,6758+14]..[185,6758+24])
                          Ptyp_constr "case" (typing/typedtree.mli[185,6758+20]..[185,6758+24])
                          [
                            core_type (typing/typedtree.mli[185,6758+14]..[185,6758+19])
                              Ptyp_constr "value" (typing/typedtree.mli[185,6758+14]..[185,6758+19])
                              []
                          ]
                      ]
                  (typing/typedtree.mli[185,6758+31]..[185,6758+49])
                    Immutable
                    "partial" (typing/typedtree.mli[185,6758+31]..[185,6758+38])                    core_type (typing/typedtree.mli[185,6758+41]..[185,6758+48])
                      Ptyp_constr "partial" (typing/typedtree.mli[185,6758+41]..[185,6758+48])
                      []
                ]
                None
              (typing/typedtree.mli[196,7168+2]..[196,7168+67])
                "Texp_apply" (typing/typedtree.mli[196,7168+4]..[196,7168+14])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[197,7236+8]..[211,7747+11])
                      Pstr_eval
                      expression (typing/typedtree.mli[197,7236+8]..[211,7747+11])
                        Pexp_constant PConst_string(" E0 ~l1:E1 ... ~ln:En\n\n            The expression can be None if the expression is abstracted over\n            this argument. It currently appears when a label is applied.\n\n            For example:\n            let f x ~y = x + y in\n            f ~y:3\n\n            The resulting typedtree for the application is:\n            Texp_apply (Texp_ident \"f/1037\",\n                        [(Nolabel, None);\n                         (Labelled \"y\", Some (Texp_constant Const_int 3))\n                        ])\n         ",(typing/typedtree.mli[197,7236+8]..[211,7747+11]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[196,7168+18]..[196,7168+28])
                    Ptyp_constr "expression" (typing/typedtree.mli[196,7168+18]..[196,7168+28])
                    []
                  core_type (typing/typedtree.mli[196,7168+31]..[196,7168+67])
                    Ptyp_constr "list" (typing/typedtree.mli[196,7168+63]..[196,7168+67])
                    [
                      core_type (typing/typedtree.mli[196,7168+32]..[196,7168+61])
                        Ptyp_tuple
                        [
                          core_type (typing/typedtree.mli[196,7168+32]..[196,7168+41])
                            Ptyp_constr "arg_label" (typing/typedtree.mli[196,7168+32]..[196,7168+41])
                            []
                          core_type (typing/typedtree.mli[196,7168+44]..[196,7168+61])
                            Ptyp_constr "option" (typing/typedtree.mli[196,7168+55]..[196,7168+61])
                            [
                              core_type (typing/typedtree.mli[196,7168+44]..[196,7168+54])
                                Ptyp_constr "expression" (typing/typedtree.mli[196,7168+44]..[196,7168+54])
                                []
                            ]
                        ]
                    ]
                ]
                None
              (typing/typedtree.mli[212,7759+2]..[212,7759+62])
                "Texp_match" (typing/typedtree.mli[212,7759+4]..[212,7759+14])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[213,7822+8]..[220,8063+11])
                      Pstr_eval
                      expression (typing/typedtree.mli[213,7822+8]..[220,8063+11])
                        Pexp_constant PConst_string(" match E0 with\n            | P1 -> E1\n            | P2 | exception P3 -> E2\n            | exception P4 -> E3\n\n            [Texp_match (E0, [(P1, E1); (P2 | exception P3, E2);\n                              (exception P4, E3)], _)]\n         ",(typing/typedtree.mli[213,7822+8]..[220,8063+11]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[212,7759+18]..[212,7759+28])
                    Ptyp_constr "expression" (typing/typedtree.mli[212,7759+18]..[212,7759+28])
                    []
                  core_type (typing/typedtree.mli[212,7759+31]..[212,7759+52])
                    Ptyp_constr "list" (typing/typedtree.mli[212,7759+48]..[212,7759+52])
                    [
                      core_type (typing/typedtree.mli[212,7759+31]..[212,7759+47])
                        Ptyp_constr "case" (typing/typedtree.mli[212,7759+43]..[212,7759+47])
                        [
                          core_type (typing/typedtree.mli[212,7759+31]..[212,7759+42])
                            Ptyp_constr "computation" (typing/typedtree.mli[212,7759+31]..[212,7759+42])
                            []
                        ]
                    ]
                  core_type (typing/typedtree.mli[212,7759+55]..[212,7759+62])
                    Ptyp_constr "partial" (typing/typedtree.mli[212,7759+55]..[212,7759+62])
                    []
                ]
                None
              (typing/typedtree.mli[221,8075+2]..[221,8075+44])
                "Texp_try" (typing/typedtree.mli[221,8075+4]..[221,8075+12])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[222,8120+8]..[222,8120+51])
                      Pstr_eval
                      expression (typing/typedtree.mli[222,8120+8]..[222,8120+51])
                        Pexp_constant PConst_string(" try E with P1 -> E1 | ... | PN -> EN ",(typing/typedtree.mli[222,8120+8]..[222,8120+51]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[221,8075+16]..[221,8075+26])
                    Ptyp_constr "expression" (typing/typedtree.mli[221,8075+16]..[221,8075+26])
                    []
                  core_type (typing/typedtree.mli[221,8075+29]..[221,8075+44])
                    Ptyp_constr "list" (typing/typedtree.mli[221,8075+40]..[221,8075+44])
                    [
                      core_type (typing/typedtree.mli[221,8075+29]..[221,8075+39])
                        Ptyp_constr "case" (typing/typedtree.mli[221,8075+35]..[221,8075+39])
                        [
                          core_type (typing/typedtree.mli[221,8075+29]..[221,8075+34])
                            Ptyp_constr "value" (typing/typedtree.mli[221,8075+29]..[221,8075+34])
                            []
                        ]
                    ]
                ]
                None
              (typing/typedtree.mli[223,8172+2]..[223,8172+33])
                "Texp_tuple" (typing/typedtree.mli[223,8172+4]..[223,8172+14])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[224,8206+8]..[224,8206+28])
                      Pstr_eval
                      expression (typing/typedtree.mli[224,8206+8]..[224,8206+28])
                        Pexp_constant PConst_string(" (E1, ..., EN) ",(typing/typedtree.mli[224,8206+8]..[224,8206+28]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[223,8172+18]..[223,8172+33])
                    Ptyp_constr "list" (typing/typedtree.mli[223,8172+29]..[223,8172+33])
                    [
                      core_type (typing/typedtree.mli[223,8172+18]..[223,8172+28])
                        Ptyp_constr "expression" (typing/typedtree.mli[223,8172+18]..[223,8172+28])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[225,8235+2]..[226,8257+71])
                "Texp_construct" (typing/typedtree.mli[225,8235+4]..[225,8235+18])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[227,8329+8]..[230,8435+11])
                      Pstr_eval
                      expression (typing/typedtree.mli[227,8329+8]..[230,8435+11])
                        Pexp_constant PConst_string(" C                []\n            C E              [E]\n            C (E1, ..., En)  [E1;...;En]\n         ",(typing/typedtree.mli[227,8329+8]..[230,8435+11]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[226,8257+6]..[226,8257+21])
                    Ptyp_constr "loc" (typing/typedtree.mli[226,8257+18]..[226,8257+21])
                    [
                      core_type (typing/typedtree.mli[226,8257+6]..[226,8257+17])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[226,8257+6]..[226,8257+17])
                        []
                    ]
                  core_type (typing/typedtree.mli[226,8257+24]..[226,8257+53])
                    Ptyp_constr "Types.constructor_description" (typing/typedtree.mli[226,8257+24]..[226,8257+53])
                    []
                  core_type (typing/typedtree.mli[226,8257+56]..[226,8257+71])
                    Ptyp_constr "list" (typing/typedtree.mli[226,8257+67]..[226,8257+71])
                    [
                      core_type (typing/typedtree.mli[226,8257+56]..[226,8257+66])
                        Ptyp_constr "expression" (typing/typedtree.mli[226,8257+56]..[226,8257+66])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[231,8447+2]..[231,8447+45])
                "Texp_variant" (typing/typedtree.mli[231,8447+4]..[231,8447+16])
                [
                  core_type (typing/typedtree.mli[231,8447+20]..[231,8447+25])
                    Ptyp_constr "label" (typing/typedtree.mli[231,8447+20]..[231,8447+25])
                    []
                  core_type (typing/typedtree.mli[231,8447+28]..[231,8447+45])
                    Ptyp_constr "option" (typing/typedtree.mli[231,8447+39]..[231,8447+45])
                    [
                      core_type (typing/typedtree.mli[231,8447+28]..[231,8447+38])
                        Ptyp_constr "expression" (typing/typedtree.mli[231,8447+28]..[231,8447+38])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[232,8493+2]..[236,8689+5])
                "Texp_record" (typing/typedtree.mli[232,8493+4]..[232,8493+15])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[237,8695+8]..[247,9133+10])
                      Pstr_eval
                      expression (typing/typedtree.mli[237,8695+8]..[247,9133+10])
                        Pexp_constant PConst_string(" { l1=P1; ...; ln=Pn }           (extended_expression = None)\n            { E0 with l1=P1; ...; ln=Pn }   (extended_expression = Some E0)\n\n            Invariant: n > 0\n\n            If the type is { l1: t1; l2: t2 }, the expression\n            { E0 with t2=P2 } is represented as\n            Texp_record\n              { fields = [| l1, Kept t1; l2 Override P2 |]; representation;\n                extended_expression = Some E0 }\n        ",(typing/typedtree.mli[237,8695+8]..[247,9133+10]),None)
                  ]
                [
                  (typing/typedtree.mli[233,8514+6]..[233,8514+75])
                    Immutable
                    "fields" (typing/typedtree.mli[233,8514+6]..[233,8514+12])                    core_type (typing/typedtree.mli[233,8514+15]..[233,8514+74])
                      Ptyp_constr "array" (typing/typedtree.mli[233,8514+69]..[233,8514+74])
                      [
                        core_type (typing/typedtree.mli[233,8514+17]..[233,8514+66])
                          Ptyp_tuple
                          [
                            core_type (typing/typedtree.mli[233,8514+17]..[233,8514+40])
                              Ptyp_constr "Types.label_description" (typing/typedtree.mli[233,8514+17]..[233,8514+40])
                              []
                            core_type (typing/typedtree.mli[233,8514+43]..[233,8514+66])
                              Ptyp_constr "record_label_definition" (typing/typedtree.mli[233,8514+43]..[233,8514+66])
                              []
                          ]
                      ]
                  (typing/typedtree.mli[234,8590+6]..[234,8590+51])
                    Immutable
                    "representation" (typing/typedtree.mli[234,8590+6]..[234,8590+20])                    core_type (typing/typedtree.mli[234,8590+23]..[234,8590+50])
                      Ptyp_constr "Types.record_representation" (typing/typedtree.mli[234,8590+23]..[234,8590+50])
                      []
                  (typing/typedtree.mli[235,8642+6]..[235,8642+46])
                    Immutable
                    "extended_expression" (typing/typedtree.mli[235,8642+6]..[235,8642+25])                    core_type (typing/typedtree.mli[235,8642+28]..[235,8642+45])
                      Ptyp_constr "option" (typing/typedtree.mli[235,8642+39]..[235,8642+45])
                      [
                        core_type (typing/typedtree.mli[235,8642+28]..[235,8642+38])
                          Ptyp_constr "expression" (typing/typedtree.mli[235,8642+28]..[235,8642+38])
                          []
                      ]
                ]
                None
              (typing/typedtree.mli[248,9144+2]..[248,9144+72])
                "Texp_field" (typing/typedtree.mli[248,9144+4]..[248,9144+14])
                [
                  core_type (typing/typedtree.mli[248,9144+18]..[248,9144+28])
                    Ptyp_constr "expression" (typing/typedtree.mli[248,9144+18]..[248,9144+28])
                    []
                  core_type (typing/typedtree.mli[248,9144+31]..[248,9144+46])
                    Ptyp_constr "loc" (typing/typedtree.mli[248,9144+43]..[248,9144+46])
                    [
                      core_type (typing/typedtree.mli[248,9144+31]..[248,9144+42])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[248,9144+31]..[248,9144+42])
                        []
                    ]
                  core_type (typing/typedtree.mli[248,9144+49]..[248,9144+72])
                    Ptyp_constr "Types.label_description" (typing/typedtree.mli[248,9144+49]..[248,9144+72])
                    []
                ]
                None
              (typing/typedtree.mli[249,9217+2]..[250,9238+73])
                "Texp_setfield" (typing/typedtree.mli[249,9217+4]..[249,9217+17])
                [
                  core_type (typing/typedtree.mli[250,9238+6]..[250,9238+16])
                    Ptyp_constr "expression" (typing/typedtree.mli[250,9238+6]..[250,9238+16])
                    []
                  core_type (typing/typedtree.mli[250,9238+19]..[250,9238+34])
                    Ptyp_constr "loc" (typing/typedtree.mli[250,9238+31]..[250,9238+34])
                    [
                      core_type (typing/typedtree.mli[250,9238+19]..[250,9238+30])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[250,9238+19]..[250,9238+30])
                        []
                    ]
                  core_type (typing/typedtree.mli[250,9238+37]..[250,9238+60])
                    Ptyp_constr "Types.label_description" (typing/typedtree.mli[250,9238+37]..[250,9238+60])
                    []
                  core_type (typing/typedtree.mli[250,9238+63]..[250,9238+73])
                    Ptyp_constr "expression" (typing/typedtree.mli[250,9238+63]..[250,9238+73])
                    []
                ]
                None
              (typing/typedtree.mli[251,9312+2]..[251,9312+33])
                "Texp_array" (typing/typedtree.mli[251,9312+4]..[251,9312+14])
                [
                  core_type (typing/typedtree.mli[251,9312+18]..[251,9312+33])
                    Ptyp_constr "list" (typing/typedtree.mli[251,9312+29]..[251,9312+33])
                    [
                      core_type (typing/typedtree.mli[251,9312+18]..[251,9312+28])
                        Ptyp_constr "expression" (typing/typedtree.mli[251,9312+18]..[251,9312+28])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[252,9346+2]..[252,9346+66])
                "Texp_ifthenelse" (typing/typedtree.mli[252,9346+4]..[252,9346+19])
                [
                  core_type (typing/typedtree.mli[252,9346+23]..[252,9346+33])
                    Ptyp_constr "expression" (typing/typedtree.mli[252,9346+23]..[252,9346+33])
                    []
                  core_type (typing/typedtree.mli[252,9346+36]..[252,9346+46])
                    Ptyp_constr "expression" (typing/typedtree.mli[252,9346+36]..[252,9346+46])
                    []
                  core_type (typing/typedtree.mli[252,9346+49]..[252,9346+66])
                    Ptyp_constr "option" (typing/typedtree.mli[252,9346+60]..[252,9346+66])
                    [
                      core_type (typing/typedtree.mli[252,9346+49]..[252,9346+59])
                        Ptyp_constr "expression" (typing/typedtree.mli[252,9346+49]..[252,9346+59])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[253,9413+2]..[253,9413+44])
                "Texp_sequence" (typing/typedtree.mli[253,9413+4]..[253,9413+17])
                [
                  core_type (typing/typedtree.mli[253,9413+21]..[253,9413+31])
                    Ptyp_constr "expression" (typing/typedtree.mli[253,9413+21]..[253,9413+31])
                    []
                  core_type (typing/typedtree.mli[253,9413+34]..[253,9413+44])
                    Ptyp_constr "expression" (typing/typedtree.mli[253,9413+34]..[253,9413+44])
                    []
                ]
                None
              (typing/typedtree.mli[254,9458+2]..[254,9458+41])
                "Texp_while" (typing/typedtree.mli[254,9458+4]..[254,9458+14])
                [
                  core_type (typing/typedtree.mli[254,9458+18]..[254,9458+28])
                    Ptyp_constr "expression" (typing/typedtree.mli[254,9458+18]..[254,9458+28])
                    []
                  core_type (typing/typedtree.mli[254,9458+31]..[254,9458+41])
                    Ptyp_constr "expression" (typing/typedtree.mli[254,9458+31]..[254,9458+41])
                    []
                ]
                None
              (typing/typedtree.mli[255,9500+2]..[257,9595+18])
                "Texp_for" (typing/typedtree.mli[255,9500+4]..[255,9500+12])
                [
                  core_type (typing/typedtree.mli[256,9516+6]..[256,9516+13])
                    Ptyp_constr "Ident.t" (typing/typedtree.mli[256,9516+6]..[256,9516+13])
                    []
                  core_type (typing/typedtree.mli[256,9516+16]..[256,9516+33])
                    Ptyp_constr "Parsetree.pattern" (typing/typedtree.mli[256,9516+16]..[256,9516+33])
                    []
                  core_type (typing/typedtree.mli[256,9516+36]..[256,9516+46])
                    Ptyp_constr "expression" (typing/typedtree.mli[256,9516+36]..[256,9516+46])
                    []
                  core_type (typing/typedtree.mli[256,9516+49]..[256,9516+59])
                    Ptyp_constr "expression" (typing/typedtree.mli[256,9516+49]..[256,9516+59])
                    []
                  core_type (typing/typedtree.mli[256,9516+62]..[256,9516+76])
                    Ptyp_constr "direction_flag" (typing/typedtree.mli[256,9516+62]..[256,9516+76])
                    []
                  core_type (typing/typedtree.mli[257,9595+8]..[257,9595+18])
                    Ptyp_constr "expression" (typing/typedtree.mli[257,9595+8]..[257,9595+18])
                    []
                ]
                None
              (typing/typedtree.mli[258,9614+2]..[258,9614+34])
                "Texp_send" (typing/typedtree.mli[258,9614+4]..[258,9614+13])
                [
                  core_type (typing/typedtree.mli[258,9614+17]..[258,9614+27])
                    Ptyp_constr "expression" (typing/typedtree.mli[258,9614+17]..[258,9614+27])
                    []
                  core_type (typing/typedtree.mli[258,9614+30]..[258,9614+34])
                    Ptyp_constr "meth" (typing/typedtree.mli[258,9614+30]..[258,9614+34])
                    []
                ]
                None
              (typing/typedtree.mli[259,9649+2]..[259,9649+66])
                "Texp_new" (typing/typedtree.mli[259,9649+4]..[259,9649+12])
                [
                  core_type (typing/typedtree.mli[259,9649+16]..[259,9649+22])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[259,9649+16]..[259,9649+22])
                    []
                  core_type (typing/typedtree.mli[259,9649+25]..[259,9649+40])
                    Ptyp_constr "loc" (typing/typedtree.mli[259,9649+37]..[259,9649+40])
                    [
                      core_type (typing/typedtree.mli[259,9649+25]..[259,9649+36])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[259,9649+25]..[259,9649+36])
                        []
                    ]
                  core_type (typing/typedtree.mli[259,9649+43]..[259,9649+66])
                    Ptyp_constr "Types.class_declaration" (typing/typedtree.mli[259,9649+43]..[259,9649+66])
                    []
                ]
                None
              (typing/typedtree.mli[260,9716+2]..[260,9716+48])
                "Texp_instvar" (typing/typedtree.mli[260,9716+4]..[260,9716+16])
                [
                  core_type (typing/typedtree.mli[260,9716+20]..[260,9716+26])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[260,9716+20]..[260,9716+26])
                    []
                  core_type (typing/typedtree.mli[260,9716+29]..[260,9716+35])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[260,9716+29]..[260,9716+35])
                    []
                  core_type (typing/typedtree.mli[260,9716+38]..[260,9716+48])
                    Ptyp_constr "loc" (typing/typedtree.mli[260,9716+45]..[260,9716+48])
                    [
                      core_type (typing/typedtree.mli[260,9716+38]..[260,9716+44])
                        Ptyp_constr "string" (typing/typedtree.mli[260,9716+38]..[260,9716+44])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[261,9765+2]..[261,9765+64])
                "Texp_setinstvar" (typing/typedtree.mli[261,9765+4]..[261,9765+19])
                [
                  core_type (typing/typedtree.mli[261,9765+23]..[261,9765+29])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[261,9765+23]..[261,9765+29])
                    []
                  core_type (typing/typedtree.mli[261,9765+32]..[261,9765+38])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[261,9765+32]..[261,9765+38])
                    []
                  core_type (typing/typedtree.mli[261,9765+41]..[261,9765+51])
                    Ptyp_constr "loc" (typing/typedtree.mli[261,9765+48]..[261,9765+51])
                    [
                      core_type (typing/typedtree.mli[261,9765+41]..[261,9765+47])
                        Ptyp_constr "string" (typing/typedtree.mli[261,9765+41]..[261,9765+47])
                        []
                    ]
                  core_type (typing/typedtree.mli[261,9765+54]..[261,9765+64])
                    Ptyp_constr "expression" (typing/typedtree.mli[261,9765+54]..[261,9765+64])
                    []
                ]
                None
              (typing/typedtree.mli[262,9830+2]..[262,9830+70])
                "Texp_override" (typing/typedtree.mli[262,9830+4]..[262,9830+17])
                [
                  core_type (typing/typedtree.mli[262,9830+21]..[262,9830+27])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[262,9830+21]..[262,9830+27])
                    []
                  core_type (typing/typedtree.mli[262,9830+30]..[262,9830+70])
                    Ptyp_constr "list" (typing/typedtree.mli[262,9830+66]..[262,9830+70])
                    [
                      core_type (typing/typedtree.mli[262,9830+31]..[262,9830+64])
                        Ptyp_tuple
                        [
                          core_type (typing/typedtree.mli[262,9830+31]..[262,9830+38])
                            Ptyp_constr "Ident.t" (typing/typedtree.mli[262,9830+31]..[262,9830+38])
                            []
                          core_type (typing/typedtree.mli[262,9830+41]..[262,9830+51])
                            Ptyp_constr "loc" (typing/typedtree.mli[262,9830+48]..[262,9830+51])
                            [
                              core_type (typing/typedtree.mli[262,9830+41]..[262,9830+47])
                                Ptyp_constr "string" (typing/typedtree.mli[262,9830+41]..[262,9830+47])
                                []
                            ]
                          core_type (typing/typedtree.mli[262,9830+54]..[262,9830+64])
                            Ptyp_constr "expression" (typing/typedtree.mli[262,9830+54]..[262,9830+64])
                            []
                        ]
                    ]
                ]
                None
              (typing/typedtree.mli[263,9901+2]..[265,10004+18])
                "Texp_letmodule" (typing/typedtree.mli[263,9901+4]..[263,9901+18])
                [
                  core_type (typing/typedtree.mli[264,9923+6]..[264,9923+20])
                    Ptyp_constr "option" (typing/typedtree.mli[264,9923+14]..[264,9923+20])
                    [
                      core_type (typing/typedtree.mli[264,9923+6]..[264,9923+13])
                        Ptyp_constr "Ident.t" (typing/typedtree.mli[264,9923+6]..[264,9923+13])
                        []
                    ]
                  core_type (typing/typedtree.mli[264,9923+23]..[264,9923+40])
                    Ptyp_constr "loc" (typing/typedtree.mli[264,9923+37]..[264,9923+40])
                    [
                      core_type (typing/typedtree.mli[264,9923+23]..[264,9923+36])
                        Ptyp_constr "option" (typing/typedtree.mli[264,9923+30]..[264,9923+36])
                        [
                          core_type (typing/typedtree.mli[264,9923+23]..[264,9923+29])
                            Ptyp_constr "string" (typing/typedtree.mli[264,9923+23]..[264,9923+29])
                            []
                        ]
                    ]
                  core_type (typing/typedtree.mli[264,9923+43]..[264,9923+64])
                    Ptyp_constr "Types.module_presence" (typing/typedtree.mli[264,9923+43]..[264,9923+64])
                    []
                  core_type (typing/typedtree.mli[264,9923+67]..[264,9923+78])
                    Ptyp_constr "module_expr" (typing/typedtree.mli[264,9923+67]..[264,9923+78])
                    []
                  core_type (typing/typedtree.mli[265,10004+8]..[265,10004+18])
                    Ptyp_constr "expression" (typing/typedtree.mli[265,10004+8]..[265,10004+18])
                    []
                ]
                None
              (typing/typedtree.mli[266,10023+2]..[266,10023+59])
                "Texp_letexception" (typing/typedtree.mli[266,10023+4]..[266,10023+21])
                [
                  core_type (typing/typedtree.mli[266,10023+25]..[266,10023+46])
                    Ptyp_constr "extension_constructor" (typing/typedtree.mli[266,10023+25]..[266,10023+46])
                    []
                  core_type (typing/typedtree.mli[266,10023+49]..[266,10023+59])
                    Ptyp_constr "expression" (typing/typedtree.mli[266,10023+49]..[266,10023+59])
                    []
                ]
                None
              (typing/typedtree.mli[267,10083+2]..[267,10083+29])
                "Texp_assert" (typing/typedtree.mli[267,10083+4]..[267,10083+15])
                [
                  core_type (typing/typedtree.mli[267,10083+19]..[267,10083+29])
                    Ptyp_constr "expression" (typing/typedtree.mli[267,10083+19]..[267,10083+29])
                    []
                ]
                None
              (typing/typedtree.mli[268,10113+2]..[268,10113+27])
                "Texp_lazy" (typing/typedtree.mli[268,10113+4]..[268,10113+13])
                [
                  core_type (typing/typedtree.mli[268,10113+17]..[268,10113+27])
                    Ptyp_constr "expression" (typing/typedtree.mli[268,10113+17]..[268,10113+27])
                    []
                ]
                None
              (typing/typedtree.mli[269,10141+2]..[269,10141+48])
                "Texp_object" (typing/typedtree.mli[269,10141+4]..[269,10141+15])
                [
                  core_type (typing/typedtree.mli[269,10141+19]..[269,10141+34])
                    Ptyp_constr "class_structure" (typing/typedtree.mli[269,10141+19]..[269,10141+34])
                    []
                  core_type (typing/typedtree.mli[269,10141+37]..[269,10141+48])
                    Ptyp_constr "list" (typing/typedtree.mli[269,10141+44]..[269,10141+48])
                    [
                      core_type (typing/typedtree.mli[269,10141+37]..[269,10141+43])
                        Ptyp_constr "string" (typing/typedtree.mli[269,10141+37]..[269,10141+43])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[270,10190+2]..[270,10190+28])
                "Texp_pack" (typing/typedtree.mli[270,10190+4]..[270,10190+13])
                [
                  core_type (typing/typedtree.mli[270,10190+17]..[270,10190+28])
                    Ptyp_constr "module_expr" (typing/typedtree.mli[270,10190+17]..[270,10190+28])
                    []
                ]
                None
              (typing/typedtree.mli[271,10219+2]..[277,10367+5])
                "Texp_letop" (typing/typedtree.mli[271,10219+4]..[271,10219+14])
                [
                  (typing/typedtree.mli[272,10239+6]..[272,10239+24])
                    Immutable
                    "let_" (typing/typedtree.mli[272,10239+6]..[272,10239+10])                    core_type (typing/typedtree.mli[272,10239+13]..[272,10239+23])
                      Ptyp_constr "binding_op" (typing/typedtree.mli[272,10239+13]..[272,10239+23])
                      []
                  (typing/typedtree.mli[273,10264+6]..[273,10264+29])
                    Immutable
                    "ands" (typing/typedtree.mli[273,10264+6]..[273,10264+10])                    core_type (typing/typedtree.mli[273,10264+13]..[273,10264+28])
                      Ptyp_constr "list" (typing/typedtree.mli[273,10264+24]..[273,10264+28])
                      [
                        core_type (typing/typedtree.mli[273,10264+13]..[273,10264+23])
                          Ptyp_constr "binding_op" (typing/typedtree.mli[273,10264+13]..[273,10264+23])
                          []
                      ]
                  (typing/typedtree.mli[274,10294+6]..[274,10294+22])
                    Immutable
                    "param" (typing/typedtree.mli[274,10294+6]..[274,10294+11])                    core_type (typing/typedtree.mli[274,10294+14]..[274,10294+21])
                      Ptyp_constr "Ident.t" (typing/typedtree.mli[274,10294+14]..[274,10294+21])
                      []
                  (typing/typedtree.mli[275,10317+6]..[275,10317+24])
                    Immutable
                    "body" (typing/typedtree.mli[275,10317+6]..[275,10317+10])                    core_type (typing/typedtree.mli[275,10317+13]..[275,10317+23])
                      Ptyp_constr "case" (typing/typedtree.mli[275,10317+19]..[275,10317+23])
                      [
                        core_type (typing/typedtree.mli[275,10317+13]..[275,10317+18])
                          Ptyp_constr "value" (typing/typedtree.mli[275,10317+13]..[275,10317+18])
                          []
                      ]
                  (typing/typedtree.mli[276,10342+6]..[276,10342+24])
                    Immutable
                    "partial" (typing/typedtree.mli[276,10342+6]..[276,10342+13])                    core_type (typing/typedtree.mli[276,10342+16]..[276,10342+23])
                      Ptyp_constr "partial" (typing/typedtree.mli[276,10342+16]..[276,10342+23])
                      []
                ]
                None
              (typing/typedtree.mli[278,10373+2]..[278,10373+20])
                "Texp_unreachable" (typing/typedtree.mli[278,10373+4]..[278,10373+20])
                []
                None
              (typing/typedtree.mli[279,10394+2]..[279,10394+58])
                "Texp_extension_constructor" (typing/typedtree.mli[279,10394+4]..[279,10394+30])
                [
                  core_type (typing/typedtree.mli[279,10394+34]..[279,10394+49])
                    Ptyp_constr "loc" (typing/typedtree.mli[279,10394+46]..[279,10394+49])
                    [
                      core_type (typing/typedtree.mli[279,10394+34]..[279,10394+45])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[279,10394+34]..[279,10394+45])
                        []
                    ]
                  core_type (typing/typedtree.mli[279,10394+52]..[279,10394+58])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[279,10394+52]..[279,10394+58])
                    []
                ]
                None
              (typing/typedtree.mli[280,10453+2]..[280,10453+46])
                "Texp_open" (typing/typedtree.mli[280,10453+4]..[280,10453+13])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[281,10500+8]..[281,10500+33])
                      Pstr_eval
                      expression (typing/typedtree.mli[281,10500+8]..[281,10500+33])
                        Pexp_constant PConst_string(" let open[!] M in e ",(typing/typedtree.mli[281,10500+8]..[281,10500+33]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[280,10453+17]..[280,10453+33])
                    Ptyp_constr "open_declaration" (typing/typedtree.mli[280,10453+17]..[280,10453+33])
                    []
                  core_type (typing/typedtree.mli[280,10453+36]..[280,10453+46])
                    Ptyp_constr "expression" (typing/typedtree.mli[280,10453+36]..[280,10453+46])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "meth" (typing/typedtree.mli[283,10535+4]..[283,10535+8]) (typing/typedtree.mli[283,10535+0]..[286,10596+38])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[284,10546+4]..[284,10546+24])
                "Tmeth_name" (typing/typedtree.mli[284,10546+4]..[284,10546+14])
                [
                  core_type (typing/typedtree.mli[284,10546+18]..[284,10546+24])
                    Ptyp_constr "string" (typing/typedtree.mli[284,10546+18]..[284,10546+24])
                    []
                ]
                None
              (typing/typedtree.mli[285,10571+2]..[285,10571+24])
                "Tmeth_val" (typing/typedtree.mli[285,10571+4]..[285,10571+13])
                [
                  core_type (typing/typedtree.mli[285,10571+17]..[285,10571+24])
                    Ptyp_constr "Ident.t" (typing/typedtree.mli[285,10571+17]..[285,10571+24])
                    []
                ]
                None
              (typing/typedtree.mli[286,10596+2]..[286,10596+38])
                "Tmeth_ancestor" (typing/typedtree.mli[286,10596+4]..[286,10596+18])
                [
                  core_type (typing/typedtree.mli[286,10596+22]..[286,10596+29])
                    Ptyp_constr "Ident.t" (typing/typedtree.mli[286,10596+22]..[286,10596+29])
                    []
                  core_type (typing/typedtree.mli[286,10596+32]..[286,10596+38])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[286,10596+32]..[286,10596+38])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "case" (typing/typedtree.mli[288,10636+7]..[288,10636+11]) (typing/typedtree.mli[288,10636+0]..[293,10745+5])
        ptype_params =
          [
            core_type (typing/typedtree.mli[288,10636+4]..[288,10636+6])
              Ptyp_var k
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[290,10656+5]..[290,10656+31])
                Immutable
                "c_lhs" (typing/typedtree.mli[290,10656+5]..[290,10656+10])                core_type (typing/typedtree.mli[290,10656+12]..[290,10656+30])
                  Ptyp_constr "general_pattern" (typing/typedtree.mli[290,10656+15]..[290,10656+30])
                  [
                    core_type (typing/typedtree.mli[290,10656+12]..[290,10656+14])
                      Ptyp_var k
                  ]
              (typing/typedtree.mli[291,10688+5]..[291,10688+32])
                Immutable
                "c_guard" (typing/typedtree.mli[291,10688+5]..[291,10688+12])                core_type (typing/typedtree.mli[291,10688+14]..[291,10688+31])
                  Ptyp_constr "option" (typing/typedtree.mli[291,10688+25]..[291,10688+31])
                  [
                    core_type (typing/typedtree.mli[291,10688+14]..[291,10688+24])
                      Ptyp_constr "expression" (typing/typedtree.mli[291,10688+14]..[291,10688+24])
                      []
                  ]
              (typing/typedtree.mli[292,10721+5]..[292,10721+23])
                Immutable
                "c_rhs" (typing/typedtree.mli[292,10721+5]..[292,10721+10])                core_type (typing/typedtree.mli[292,10721+12]..[292,10721+22])
                  Ptyp_constr "expression" (typing/typedtree.mli[292,10721+12]..[292,10721+22])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "record_label_definition" (typing/typedtree.mli[295,10752+4]..[295,10752+27]) (typing/typedtree.mli[295,10752+0]..[297,10810+46])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[296,10782+2]..[296,10782+27])
                "Kept" (typing/typedtree.mli[296,10782+4]..[296,10782+8])
                [
                  core_type (typing/typedtree.mli[296,10782+12]..[296,10782+27])
                    Ptyp_constr "Types.type_expr" (typing/typedtree.mli[296,10782+12]..[296,10782+27])
                    []
                ]
                None
              (typing/typedtree.mli[297,10810+2]..[297,10810+46])
                "Overridden" (typing/typedtree.mli[297,10810+4]..[297,10810+14])
                [
                  core_type (typing/typedtree.mli[297,10810+18]..[297,10810+33])
                    Ptyp_constr "loc" (typing/typedtree.mli[297,10810+30]..[297,10810+33])
                    [
                      core_type (typing/typedtree.mli[297,10810+18]..[297,10810+29])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[297,10810+18]..[297,10810+29])
                        []
                    ]
                  core_type (typing/typedtree.mli[297,10810+36]..[297,10810+46])
                    Ptyp_constr "expression" (typing/typedtree.mli[297,10810+36]..[297,10810+46])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "binding_op" (typing/typedtree.mli[299,10858+4]..[299,10858+14]) (typing/typedtree.mli[299,10858+0]..[309,11180+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[301,10879+4]..[301,10879+25])
                Immutable
                "bop_op_path" (typing/typedtree.mli[301,10879+4]..[301,10879+15])                core_type (typing/typedtree.mli[301,10879+18]..[301,10879+24])
                  Ptyp_constr "Path.t" (typing/typedtree.mli[301,10879+18]..[301,10879+24])
                  []
              (typing/typedtree.mli[302,10905+4]..[302,10905+29])
                Immutable
                "bop_op_name" (typing/typedtree.mli[302,10905+4]..[302,10905+15])                core_type (typing/typedtree.mli[302,10905+18]..[302,10905+28])
                  Ptyp_constr "loc" (typing/typedtree.mli[302,10905+25]..[302,10905+28])
                  [
                    core_type (typing/typedtree.mli[302,10905+18]..[302,10905+24])
                      Ptyp_constr "string" (typing/typedtree.mli[302,10905+18]..[302,10905+24])
                      []
                  ]
              (typing/typedtree.mli[303,10935+4]..[303,10935+41])
                Immutable
                "bop_op_val" (typing/typedtree.mli[303,10935+4]..[303,10935+14])                core_type (typing/typedtree.mli[303,10935+17]..[303,10935+40])
                  Ptyp_constr "Types.value_description" (typing/typedtree.mli[303,10935+17]..[303,10935+40])
                  []
              (typing/typedtree.mli[304,10977+4]..[304,10977+34])
                Immutable
                "bop_op_type" (typing/typedtree.mli[304,10977+4]..[304,10977+15])                core_type (typing/typedtree.mli[304,10977+18]..[304,10977+33])
                  Ptyp_constr "Types.type_expr" (typing/typedtree.mli[304,10977+18]..[304,10977+33])
                  []
              (typing/typedtree.mli[307,11128+4]..[307,11128+25])
                Immutable
                "bop_exp" (typing/typedtree.mli[307,11128+4]..[307,11128+11])                core_type (typing/typedtree.mli[307,11128+14]..[307,11128+24])
                  Ptyp_constr "expression" (typing/typedtree.mli[307,11128+14]..[307,11128+24])
                  []
              (typing/typedtree.mli[308,11154+4]..[308,11154+25])
                Immutable
                "bop_loc" (typing/typedtree.mli[308,11154+4]..[308,11154+11])                core_type (typing/typedtree.mli[308,11154+14]..[308,11154+24])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[308,11154+14]..[308,11154+24])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "class_expr" (typing/typedtree.mli[313,11233+4]..[313,11233+14]) (typing/typedtree.mli[313,11233+0]..[320,11396+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[315,11256+5]..[315,11256+30])
                Immutable
                "cl_desc" (typing/typedtree.mli[315,11256+5]..[315,11256+12])                core_type (typing/typedtree.mli[315,11256+14]..[315,11256+29])
                  Ptyp_constr "class_expr_desc" (typing/typedtree.mli[315,11256+14]..[315,11256+29])
                  []
              (typing/typedtree.mli[316,11287+5]..[316,11287+24])
                Immutable
                "cl_loc" (typing/typedtree.mli[316,11287+5]..[316,11287+11])                core_type (typing/typedtree.mli[316,11287+13]..[316,11287+23])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[316,11287+13]..[316,11287+23])
                  []
              (typing/typedtree.mli[317,11312+5]..[317,11312+31])
                Immutable
                "cl_type" (typing/typedtree.mli[317,11312+5]..[317,11312+12])                core_type (typing/typedtree.mli[317,11312+14]..[317,11312+30])
                  Ptyp_constr "Types.class_type" (typing/typedtree.mli[317,11312+14]..[317,11312+30])
                  []
              (typing/typedtree.mli[318,11344+5]..[318,11344+19])
                Immutable
                "cl_env" (typing/typedtree.mli[318,11344+5]..[318,11344+11])                core_type (typing/typedtree.mli[318,11344+13]..[318,11344+18])
                  Ptyp_constr "Env.t" (typing/typedtree.mli[318,11344+13]..[318,11344+18])
                  []
              (typing/typedtree.mli[319,11364+5]..[319,11364+31])
                Immutable
                "cl_attributes" (typing/typedtree.mli[319,11364+5]..[319,11364+18])                core_type (typing/typedtree.mli[319,11364+20]..[319,11364+30])
                  Ptyp_constr "attributes" (typing/typedtree.mli[319,11364+20]..[319,11364+30])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "class_expr_desc" (typing/typedtree.mli[322,11403+4]..[322,11403+19]) (typing/typedtree.mli[322,11403+0]..[335,11970+45])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[323,11425+4]..[323,11425+58])
                "Tcl_ident" (typing/typedtree.mli[323,11425+4]..[323,11425+13])
                [
                  core_type (typing/typedtree.mli[323,11425+17]..[323,11425+23])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[323,11425+17]..[323,11425+23])
                    []
                  core_type (typing/typedtree.mli[323,11425+26]..[323,11425+41])
                    Ptyp_constr "loc" (typing/typedtree.mli[323,11425+38]..[323,11425+41])
                    [
                      core_type (typing/typedtree.mli[323,11425+26]..[323,11425+37])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[323,11425+26]..[323,11425+37])
                        []
                    ]
                  core_type (typing/typedtree.mli[323,11425+44]..[323,11425+58])
                    Ptyp_constr "list" (typing/typedtree.mli[323,11425+54]..[323,11425+58])
                    [
                      core_type (typing/typedtree.mli[323,11425+44]..[323,11425+53])
                        Ptyp_constr "core_type" (typing/typedtree.mli[323,11425+44]..[323,11425+53])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[324,11484+2]..[324,11484+36])
                "Tcl_structure" (typing/typedtree.mli[324,11484+4]..[324,11484+17])
                [
                  core_type (typing/typedtree.mli[324,11484+21]..[324,11484+36])
                    Ptyp_constr "class_structure" (typing/typedtree.mli[324,11484+21]..[324,11484+36])
                    []
                ]
                None
              (typing/typedtree.mli[325,11521+2]..[327,11592+28])
                "Tcl_fun" (typing/typedtree.mli[325,11521+4]..[325,11521+11])
                [
                  core_type (typing/typedtree.mli[326,11536+6]..[326,11536+15])
                    Ptyp_constr "arg_label" (typing/typedtree.mli[326,11536+6]..[326,11536+15])
                    []
                  core_type (typing/typedtree.mli[326,11536+18]..[326,11536+25])
                    Ptyp_constr "pattern" (typing/typedtree.mli[326,11536+18]..[326,11536+25])
                    []
                  core_type (typing/typedtree.mli[326,11536+28]..[326,11536+55])
                    Ptyp_constr "list" (typing/typedtree.mli[326,11536+51]..[326,11536+55])
                    [
                      core_type (typing/typedtree.mli[326,11536+29]..[326,11536+49])
                        Ptyp_tuple
                        [
                          core_type (typing/typedtree.mli[326,11536+29]..[326,11536+36])
                            Ptyp_constr "Ident.t" (typing/typedtree.mli[326,11536+29]..[326,11536+36])
                            []
                          core_type (typing/typedtree.mli[326,11536+39]..[326,11536+49])
                            Ptyp_constr "expression" (typing/typedtree.mli[326,11536+39]..[326,11536+49])
                            []
                        ]
                    ]
                  core_type (typing/typedtree.mli[327,11592+8]..[327,11592+18])
                    Ptyp_constr "class_expr" (typing/typedtree.mli[327,11592+8]..[327,11592+18])
                    []
                  core_type (typing/typedtree.mli[327,11592+21]..[327,11592+28])
                    Ptyp_constr "partial" (typing/typedtree.mli[327,11592+21]..[327,11592+28])
                    []
                ]
                None
              (typing/typedtree.mli[328,11621+2]..[328,11621+66])
                "Tcl_apply" (typing/typedtree.mli[328,11621+4]..[328,11621+13])
                [
                  core_type (typing/typedtree.mli[328,11621+17]..[328,11621+27])
                    Ptyp_constr "class_expr" (typing/typedtree.mli[328,11621+17]..[328,11621+27])
                    []
                  core_type (typing/typedtree.mli[328,11621+30]..[328,11621+66])
                    Ptyp_constr "list" (typing/typedtree.mli[328,11621+62]..[328,11621+66])
                    [
                      core_type (typing/typedtree.mli[328,11621+31]..[328,11621+60])
                        Ptyp_tuple
                        [
                          core_type (typing/typedtree.mli[328,11621+31]..[328,11621+40])
                            Ptyp_constr "arg_label" (typing/typedtree.mli[328,11621+31]..[328,11621+40])
                            []
                          core_type (typing/typedtree.mli[328,11621+43]..[328,11621+60])
                            Ptyp_constr "option" (typing/typedtree.mli[328,11621+54]..[328,11621+60])
                            [
                              core_type (typing/typedtree.mli[328,11621+43]..[328,11621+53])
                                Ptyp_constr "expression" (typing/typedtree.mli[328,11621+43]..[328,11621+53])
                                []
                            ]
                        ]
                    ]
                ]
                None
              (typing/typedtree.mli[329,11688+2]..[330,11735+58])
                "Tcl_let" (typing/typedtree.mli[329,11688+4]..[329,11688+11])
                [
                  core_type (typing/typedtree.mli[329,11688+15]..[329,11688+23])
                    Ptyp_constr "rec_flag" (typing/typedtree.mli[329,11688+15]..[329,11688+23])
                    []
                  core_type (typing/typedtree.mli[329,11688+26]..[329,11688+44])
                    Ptyp_constr "list" (typing/typedtree.mli[329,11688+40]..[329,11688+44])
                    [
                      core_type (typing/typedtree.mli[329,11688+26]..[329,11688+39])
                        Ptyp_constr "value_binding" (typing/typedtree.mli[329,11688+26]..[329,11688+39])
                        []
                    ]
                  core_type (typing/typedtree.mli[330,11735+18]..[330,11735+45])
                    Ptyp_constr "list" (typing/typedtree.mli[330,11735+41]..[330,11735+45])
                    [
                      core_type (typing/typedtree.mli[330,11735+19]..[330,11735+39])
                        Ptyp_tuple
                        [
                          core_type (typing/typedtree.mli[330,11735+19]..[330,11735+26])
                            Ptyp_constr "Ident.t" (typing/typedtree.mli[330,11735+19]..[330,11735+26])
                            []
                          core_type (typing/typedtree.mli[330,11735+29]..[330,11735+39])
                            Ptyp_constr "expression" (typing/typedtree.mli[330,11735+29]..[330,11735+39])
                            []
                        ]
                    ]
                  core_type (typing/typedtree.mli[330,11735+48]..[330,11735+58])
                    Ptyp_constr "class_expr" (typing/typedtree.mli[330,11735+48]..[330,11735+58])
                    []
                ]
                None
              (typing/typedtree.mli[331,11794+2]..[333,11881+23])
                "Tcl_constraint" (typing/typedtree.mli[331,11794+4]..[331,11794+18])
                [
                  core_type (typing/typedtree.mli[332,11816+6]..[332,11816+16])
                    Ptyp_constr "class_expr" (typing/typedtree.mli[332,11816+6]..[332,11816+16])
                    []
                  core_type (typing/typedtree.mli[332,11816+19]..[332,11816+36])
                    Ptyp_constr "option" (typing/typedtree.mli[332,11816+30]..[332,11816+36])
                    [
                      core_type (typing/typedtree.mli[332,11816+19]..[332,11816+29])
                        Ptyp_constr "class_type" (typing/typedtree.mli[332,11816+19]..[332,11816+29])
                        []
                    ]
                  core_type (typing/typedtree.mli[332,11816+39]..[332,11816+50])
                    Ptyp_constr "list" (typing/typedtree.mli[332,11816+46]..[332,11816+50])
                    [
                      core_type (typing/typedtree.mli[332,11816+39]..[332,11816+45])
                        Ptyp_constr "string" (typing/typedtree.mli[332,11816+39]..[332,11816+45])
                        []
                    ]
                  core_type (typing/typedtree.mli[332,11816+53]..[332,11816+64])
                    Ptyp_constr "list" (typing/typedtree.mli[332,11816+60]..[332,11816+64])
                    [
                      core_type (typing/typedtree.mli[332,11816+53]..[332,11816+59])
                        Ptyp_constr "string" (typing/typedtree.mli[332,11816+53]..[332,11816+59])
                        []
                    ]
                  core_type (typing/typedtree.mli[333,11881+8]..[333,11881+23])
                    Ptyp_constr "Types.MethSet.t" (typing/typedtree.mli[333,11881+8]..[333,11881+23])
                    []
                ]
                None
              (typing/typedtree.mli[335,11970+2]..[335,11970+45])
                "Tcl_open" (typing/typedtree.mli[335,11970+4]..[335,11970+12])
                [
                  core_type (typing/typedtree.mli[335,11970+16]..[335,11970+32])
                    Ptyp_constr "open_description" (typing/typedtree.mli[335,11970+16]..[335,11970+32])
                    []
                  core_type (typing/typedtree.mli[335,11970+35]..[335,11970+45])
                    Ptyp_constr "class_expr" (typing/typedtree.mli[335,11970+35]..[335,11970+45])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "class_structure" (typing/typedtree.mli[337,12017+4]..[337,12017+19]) (typing/typedtree.mli[337,12017+0]..[343,12175+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[339,12043+3]..[339,12043+22])
                Immutable
                "cstr_self" (typing/typedtree.mli[339,12043+3]..[339,12043+12])                core_type (typing/typedtree.mli[339,12043+14]..[339,12043+21])
                  Ptyp_constr "pattern" (typing/typedtree.mli[339,12043+14]..[339,12043+21])
                  []
              (typing/typedtree.mli[340,12066+3]..[340,12066+33])
                Immutable
                "cstr_fields" (typing/typedtree.mli[340,12066+3]..[340,12066+14])                core_type (typing/typedtree.mli[340,12066+16]..[340,12066+32])
                  Ptyp_constr "list" (typing/typedtree.mli[340,12066+28]..[340,12066+32])
                  [
                    core_type (typing/typedtree.mli[340,12066+16]..[340,12066+27])
                      Ptyp_constr "class_field" (typing/typedtree.mli[340,12066+16]..[340,12066+27])
                      []
                  ]
              (typing/typedtree.mli[341,12100+3]..[341,12100+36])
                Immutable
                "cstr_type" (typing/typedtree.mli[341,12100+3]..[341,12100+12])                core_type (typing/typedtree.mli[341,12100+14]..[341,12100+35])
                  Ptyp_constr "Types.class_signature" (typing/typedtree.mli[341,12100+14]..[341,12100+35])
                  []
              (typing/typedtree.mli[342,12137+3]..[342,12137+37])
                Immutable
                "cstr_meths" (typing/typedtree.mli[342,12137+3]..[342,12137+13])                core_type (typing/typedtree.mli[342,12137+15]..[342,12137+36])
                  Ptyp_constr "Types.Meths.t" (typing/typedtree.mli[342,12137+23]..[342,12137+36])
                  [
                    core_type (typing/typedtree.mli[342,12137+15]..[342,12137+22])
                      Ptyp_constr "Ident.t" (typing/typedtree.mli[342,12137+15]..[342,12137+22])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "class_field" (typing/typedtree.mli[345,12180+4]..[345,12180+15]) (typing/typedtree.mli[345,12180+0]..[350,12289+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[347,12203+4]..[347,12203+30])
                Immutable
                "cf_desc" (typing/typedtree.mli[347,12203+4]..[347,12203+11])                core_type (typing/typedtree.mli[347,12203+13]..[347,12203+29])
                  Ptyp_constr "class_field_desc" (typing/typedtree.mli[347,12203+13]..[347,12203+29])
                  []
              (typing/typedtree.mli[348,12234+4]..[348,12234+23])
                Immutable
                "cf_loc" (typing/typedtree.mli[348,12234+4]..[348,12234+10])                core_type (typing/typedtree.mli[348,12234+12]..[348,12234+22])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[348,12234+12]..[348,12234+22])
                  []
              (typing/typedtree.mli[349,12258+4]..[349,12258+30])
                Immutable
                "cf_attributes" (typing/typedtree.mli[349,12258+4]..[349,12258+17])                core_type (typing/typedtree.mli[349,12258+19]..[349,12258+29])
                  Ptyp_constr "attributes" (typing/typedtree.mli[349,12258+19]..[349,12258+29])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "class_field_kind" (typing/typedtree.mli[352,12294+4]..[352,12294+20]) (typing/typedtree.mli[352,12294+0]..[354,12347+47])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[353,12317+2]..[353,12317+29])
                "Tcfk_virtual" (typing/typedtree.mli[353,12317+4]..[353,12317+16])
                [
                  core_type (typing/typedtree.mli[353,12317+20]..[353,12317+29])
                    Ptyp_constr "core_type" (typing/typedtree.mli[353,12317+20]..[353,12317+29])
                    []
                ]
                None
              (typing/typedtree.mli[354,12347+2]..[354,12347+47])
                "Tcfk_concrete" (typing/typedtree.mli[354,12347+4]..[354,12347+17])
                [
                  core_type (typing/typedtree.mli[354,12347+21]..[354,12347+34])
                    Ptyp_constr "override_flag" (typing/typedtree.mli[354,12347+21]..[354,12347+34])
                    []
                  core_type (typing/typedtree.mli[354,12347+37]..[354,12347+47])
                    Ptyp_constr "expression" (typing/typedtree.mli[354,12347+37]..[354,12347+47])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "class_field_desc" (typing/typedtree.mli[356,12396+4]..[356,12396+20]) (typing/typedtree.mli[356,12396+0]..[365,12825+30])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[357,12419+4]..[359,12515+31])
                "Tcf_inherit" (typing/typedtree.mli[357,12419+4]..[357,12419+15])
                [
                  core_type (typing/typedtree.mli[358,12438+6]..[358,12438+19])
                    Ptyp_constr "override_flag" (typing/typedtree.mli[358,12438+6]..[358,12438+19])
                    []
                  core_type (typing/typedtree.mli[358,12438+22]..[358,12438+32])
                    Ptyp_constr "class_expr" (typing/typedtree.mli[358,12438+22]..[358,12438+32])
                    []
                  core_type (typing/typedtree.mli[358,12438+35]..[358,12438+48])
                    Ptyp_constr "option" (typing/typedtree.mli[358,12438+42]..[358,12438+48])
                    [
                      core_type (typing/typedtree.mli[358,12438+35]..[358,12438+41])
                        Ptyp_constr "string" (typing/typedtree.mli[358,12438+35]..[358,12438+41])
                        []
                    ]
                  core_type (typing/typedtree.mli[358,12438+51]..[358,12438+74])
                    Ptyp_constr "list" (typing/typedtree.mli[358,12438+70]..[358,12438+74])
                    [
                      core_type (typing/typedtree.mli[358,12438+52]..[358,12438+68])
                        Ptyp_tuple
                        [
                          core_type (typing/typedtree.mli[358,12438+52]..[358,12438+58])
                            Ptyp_constr "string" (typing/typedtree.mli[358,12438+52]..[358,12438+58])
                            []
                          core_type (typing/typedtree.mli[358,12438+61]..[358,12438+68])
                            Ptyp_constr "Ident.t" (typing/typedtree.mli[358,12438+61]..[358,12438+68])
                            []
                        ]
                    ]
                  core_type (typing/typedtree.mli[359,12515+8]..[359,12515+31])
                    Ptyp_constr "list" (typing/typedtree.mli[359,12515+27]..[359,12515+31])
                    [
                      core_type (typing/typedtree.mli[359,12515+9]..[359,12515+25])
                        Ptyp_tuple
                        [
                          core_type (typing/typedtree.mli[359,12515+9]..[359,12515+15])
                            Ptyp_constr "string" (typing/typedtree.mli[359,12515+9]..[359,12515+15])
                            []
                          core_type (typing/typedtree.mli[359,12515+18]..[359,12515+25])
                            Ptyp_constr "Ident.t" (typing/typedtree.mli[359,12515+18]..[359,12515+25])
                            []
                        ]
                    ]
                ]
                None
              (typing/typedtree.mli[361,12607+2]..[361,12607+76])
                "Tcf_val" (typing/typedtree.mli[361,12607+4]..[361,12607+11])
                [
                  core_type (typing/typedtree.mli[361,12607+15]..[361,12607+25])
                    Ptyp_constr "loc" (typing/typedtree.mli[361,12607+22]..[361,12607+25])
                    [
                      core_type (typing/typedtree.mli[361,12607+15]..[361,12607+21])
                        Ptyp_constr "string" (typing/typedtree.mli[361,12607+15]..[361,12607+21])
                        []
                    ]
                  core_type (typing/typedtree.mli[361,12607+28]..[361,12607+40])
                    Ptyp_constr "mutable_flag" (typing/typedtree.mli[361,12607+28]..[361,12607+40])
                    []
                  core_type (typing/typedtree.mli[361,12607+43]..[361,12607+50])
                    Ptyp_constr "Ident.t" (typing/typedtree.mli[361,12607+43]..[361,12607+50])
                    []
                  core_type (typing/typedtree.mli[361,12607+53]..[361,12607+69])
                    Ptyp_constr "class_field_kind" (typing/typedtree.mli[361,12607+53]..[361,12607+69])
                    []
                  core_type (typing/typedtree.mli[361,12607+72]..[361,12607+76])
                    Ptyp_constr "bool" (typing/typedtree.mli[361,12607+72]..[361,12607+76])
                    []
                ]
                None
              (typing/typedtree.mli[362,12684+2]..[362,12684+62])
                "Tcf_method" (typing/typedtree.mli[362,12684+4]..[362,12684+14])
                [
                  core_type (typing/typedtree.mli[362,12684+18]..[362,12684+28])
                    Ptyp_constr "loc" (typing/typedtree.mli[362,12684+25]..[362,12684+28])
                    [
                      core_type (typing/typedtree.mli[362,12684+18]..[362,12684+24])
                        Ptyp_constr "string" (typing/typedtree.mli[362,12684+18]..[362,12684+24])
                        []
                    ]
                  core_type (typing/typedtree.mli[362,12684+31]..[362,12684+43])
                    Ptyp_constr "private_flag" (typing/typedtree.mli[362,12684+31]..[362,12684+43])
                    []
                  core_type (typing/typedtree.mli[362,12684+46]..[362,12684+62])
                    Ptyp_constr "class_field_kind" (typing/typedtree.mli[362,12684+46]..[362,12684+62])
                    []
                ]
                None
              (typing/typedtree.mli[363,12747+2]..[363,12747+43])
                "Tcf_constraint" (typing/typedtree.mli[363,12747+4]..[363,12747+18])
                [
                  core_type (typing/typedtree.mli[363,12747+22]..[363,12747+31])
                    Ptyp_constr "core_type" (typing/typedtree.mli[363,12747+22]..[363,12747+31])
                    []
                  core_type (typing/typedtree.mli[363,12747+34]..[363,12747+43])
                    Ptyp_constr "core_type" (typing/typedtree.mli[363,12747+34]..[363,12747+43])
                    []
                ]
                None
              (typing/typedtree.mli[364,12791+2]..[364,12791+33])
                "Tcf_initializer" (typing/typedtree.mli[364,12791+4]..[364,12791+19])
                [
                  core_type (typing/typedtree.mli[364,12791+23]..[364,12791+33])
                    Ptyp_constr "expression" (typing/typedtree.mli[364,12791+23]..[364,12791+33])
                    []
                ]
                None
              (typing/typedtree.mli[365,12825+2]..[365,12825+30])
                "Tcf_attribute" (typing/typedtree.mli[365,12825+4]..[365,12825+17])
                [
                  core_type (typing/typedtree.mli[365,12825+21]..[365,12825+30])
                    Ptyp_constr "attribute" (typing/typedtree.mli[365,12825+21]..[365,12825+30])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "module_expr" (typing/typedtree.mli[369,12906+4]..[369,12906+15]) (typing/typedtree.mli[369,12906+0]..[375,13066+4])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[370,12924+4]..[370,12924+31])
                Immutable
                "mod_desc" (typing/typedtree.mli[370,12924+4]..[370,12924+12])                core_type (typing/typedtree.mli[370,12924+14]..[370,12924+30])
                  Ptyp_constr "module_expr_desc" (typing/typedtree.mli[370,12924+14]..[370,12924+30])
                  []
              (typing/typedtree.mli[371,12956+4]..[371,12956+24])
                Immutable
                "mod_loc" (typing/typedtree.mli[371,12956+4]..[371,12956+11])                core_type (typing/typedtree.mli[371,12956+13]..[371,12956+23])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[371,12956+13]..[371,12956+23])
                  []
              (typing/typedtree.mli[372,12981+4]..[372,12981+32])
                Immutable
                "mod_type" (typing/typedtree.mli[372,12981+4]..[372,12981+12])                core_type (typing/typedtree.mli[372,12981+14]..[372,12981+31])
                  Ptyp_constr "Types.module_type" (typing/typedtree.mli[372,12981+14]..[372,12981+31])
                  []
              (typing/typedtree.mli[373,13014+4]..[373,13014+19])
                Immutable
                "mod_env" (typing/typedtree.mli[373,13014+4]..[373,13014+11])                core_type (typing/typedtree.mli[373,13014+13]..[373,13014+18])
                  Ptyp_constr "Env.t" (typing/typedtree.mli[373,13014+13]..[373,13014+18])
                  []
              (typing/typedtree.mli[374,13034+4]..[374,13034+31])
                Immutable
                "mod_attributes" (typing/typedtree.mli[374,13034+4]..[374,13034+18])                core_type (typing/typedtree.mli[374,13034+20]..[374,13034+30])
                  Ptyp_constr "attributes" (typing/typedtree.mli[374,13034+20]..[374,13034+30])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "module_type_constraint" (typing/typedtree.mli[378,13114+4]..[378,13114+26]) (typing/typedtree.mli[378,13114+0]..[381,13243+36])
        attribute "ocaml.doc"
          [
            structure_item (typing/typedtree.mli[377,13072+0]..[377,13072+41])
              Pstr_eval
              expression (typing/typedtree.mli[377,13072+0]..[377,13072+41])
                Pexp_constant PConst_string(" Annotations for [Tmod_constraint]. ",(typing/typedtree.mli[377,13072+0]..[377,13072+41]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[379,13143+2]..[379,13143+21])
                "Tmodtype_implicit" (typing/typedtree.mli[379,13143+4]..[379,13143+21])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[380,13165+2]..[380,13165+77])
                      Pstr_eval
                      expression (typing/typedtree.mli[380,13165+2]..[380,13165+77])
                        Pexp_constant PConst_string(" The module type constraint has been synthesized during typechecking. ",(typing/typedtree.mli[380,13165+2]..[380,13165+77]),None)
                  ]
                []
                None
              (typing/typedtree.mli[381,13243+2]..[381,13243+36])
                "Tmodtype_explicit" (typing/typedtree.mli[381,13243+4]..[381,13243+21])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[382,13280+2]..[382,13280+48])
                      Pstr_eval
                      expression (typing/typedtree.mli[382,13280+2]..[382,13280+48])
                        Pexp_constant PConst_string(" The module type was in the source file. ",(typing/typedtree.mli[382,13280+2]..[382,13280+48]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[381,13243+25]..[381,13243+36])
                    Ptyp_constr "module_type" (typing/typedtree.mli[381,13243+25]..[381,13243+36])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "functor_parameter" (typing/typedtree.mli[384,13330+4]..[384,13330+21]) (typing/typedtree.mli[384,13330+0]..[386,13363+61])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[385,13354+2]..[385,13354+8])
                "Unit" (typing/typedtree.mli[385,13354+4]..[385,13354+8])
                []
                None
              (typing/typedtree.mli[386,13363+2]..[386,13363+61])
                "Named" (typing/typedtree.mli[386,13363+4]..[386,13363+9])
                [
                  core_type (typing/typedtree.mli[386,13363+13]..[386,13363+27])
                    Ptyp_constr "option" (typing/typedtree.mli[386,13363+21]..[386,13363+27])
                    [
                      core_type (typing/typedtree.mli[386,13363+13]..[386,13363+20])
                        Ptyp_constr "Ident.t" (typing/typedtree.mli[386,13363+13]..[386,13363+20])
                        []
                    ]
                  core_type (typing/typedtree.mli[386,13363+30]..[386,13363+47])
                    Ptyp_constr "loc" (typing/typedtree.mli[386,13363+44]..[386,13363+47])
                    [
                      core_type (typing/typedtree.mli[386,13363+30]..[386,13363+43])
                        Ptyp_constr "option" (typing/typedtree.mli[386,13363+37]..[386,13363+43])
                        [
                          core_type (typing/typedtree.mli[386,13363+30]..[386,13363+36])
                            Ptyp_constr "string" (typing/typedtree.mli[386,13363+30]..[386,13363+36])
                            []
                        ]
                    ]
                  core_type (typing/typedtree.mli[386,13363+50]..[386,13363+61])
                    Ptyp_constr "module_type" (typing/typedtree.mli[386,13363+50]..[386,13363+61])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "module_expr_desc" (typing/typedtree.mli[388,13426+4]..[388,13426+20]) (typing/typedtree.mli[388,13426+0]..[398,13859+49])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[389,13449+4]..[389,13449+42])
                "Tmod_ident" (typing/typedtree.mli[389,13449+4]..[389,13449+14])
                [
                  core_type (typing/typedtree.mli[389,13449+18]..[389,13449+24])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[389,13449+18]..[389,13449+24])
                    []
                  core_type (typing/typedtree.mli[389,13449+27]..[389,13449+42])
                    Ptyp_constr "loc" (typing/typedtree.mli[389,13449+39]..[389,13449+42])
                    [
                      core_type (typing/typedtree.mli[389,13449+27]..[389,13449+38])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[389,13449+27]..[389,13449+38])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[390,13492+2]..[390,13492+31])
                "Tmod_structure" (typing/typedtree.mli[390,13492+4]..[390,13492+18])
                [
                  core_type (typing/typedtree.mli[390,13492+22]..[390,13492+31])
                    Ptyp_constr "structure" (typing/typedtree.mli[390,13492+22]..[390,13492+31])
                    []
                ]
                None
              (typing/typedtree.mli[391,13524+2]..[391,13524+51])
                "Tmod_functor" (typing/typedtree.mli[391,13524+4]..[391,13524+16])
                [
                  core_type (typing/typedtree.mli[391,13524+20]..[391,13524+37])
                    Ptyp_constr "functor_parameter" (typing/typedtree.mli[391,13524+20]..[391,13524+37])
                    []
                  core_type (typing/typedtree.mli[391,13524+40]..[391,13524+51])
                    Ptyp_constr "module_expr" (typing/typedtree.mli[391,13524+40]..[391,13524+51])
                    []
                ]
                None
              (typing/typedtree.mli[392,13576+2]..[392,13576+61])
                "Tmod_apply" (typing/typedtree.mli[392,13576+4]..[392,13576+14])
                [
                  core_type (typing/typedtree.mli[392,13576+18]..[392,13576+29])
                    Ptyp_constr "module_expr" (typing/typedtree.mli[392,13576+18]..[392,13576+29])
                    []
                  core_type (typing/typedtree.mli[392,13576+32]..[392,13576+43])
                    Ptyp_constr "module_expr" (typing/typedtree.mli[392,13576+32]..[392,13576+43])
                    []
                  core_type (typing/typedtree.mli[392,13576+46]..[392,13576+61])
                    Ptyp_constr "module_coercion" (typing/typedtree.mli[392,13576+46]..[392,13576+61])
                    []
                ]
                None
              (typing/typedtree.mli[393,13638+2]..[394,13661+80])
                "Tmod_constraint" (typing/typedtree.mli[393,13638+4]..[393,13638+19])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[395,13742+4]..[397,13851+7])
                      Pstr_eval
                      expression (typing/typedtree.mli[395,13742+4]..[397,13851+7])
                        Pexp_constant PConst_string(" ME          (constraint = Tmodtype_implicit)\n        (ME : MT)   (constraint = Tmodtype_explicit MT)\n     ",(typing/typedtree.mli[395,13742+4]..[397,13851+7]),None)
                  ]
                [
                  core_type (typing/typedtree.mli[394,13661+6]..[394,13661+17])
                    Ptyp_constr "module_expr" (typing/typedtree.mli[394,13661+6]..[394,13661+17])
                    []
                  core_type (typing/typedtree.mli[394,13661+20]..[394,13661+37])
                    Ptyp_constr "Types.module_type" (typing/typedtree.mli[394,13661+20]..[394,13661+37])
                    []
                  core_type (typing/typedtree.mli[394,13661+40]..[394,13661+62])
                    Ptyp_constr "module_type_constraint" (typing/typedtree.mli[394,13661+40]..[394,13661+62])
                    []
                  core_type (typing/typedtree.mli[394,13661+65]..[394,13661+80])
                    Ptyp_constr "module_coercion" (typing/typedtree.mli[394,13661+65]..[394,13661+80])
                    []
                ]
                None
              (typing/typedtree.mli[398,13859+2]..[398,13859+49])
                "Tmod_unpack" (typing/typedtree.mli[398,13859+4]..[398,13859+15])
                [
                  core_type (typing/typedtree.mli[398,13859+19]..[398,13859+29])
                    Ptyp_constr "expression" (typing/typedtree.mli[398,13859+19]..[398,13859+29])
                    []
                  core_type (typing/typedtree.mli[398,13859+32]..[398,13859+49])
                    Ptyp_constr "Types.module_type" (typing/typedtree.mli[398,13859+32]..[398,13859+49])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "structure" (typing/typedtree.mli[400,13910+4]..[400,13910+13]) (typing/typedtree.mli[400,13910+0]..[404,14018+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[401,13928+2]..[401,13928+34])
                Immutable
                "str_items" (typing/typedtree.mli[401,13928+2]..[401,13928+11])                core_type (typing/typedtree.mli[401,13928+14]..[401,13928+33])
                  Ptyp_constr "list" (typing/typedtree.mli[401,13928+29]..[401,13928+33])
                  [
                    core_type (typing/typedtree.mli[401,13928+14]..[401,13928+28])
                      Ptyp_constr "structure_item" (typing/typedtree.mli[401,13928+14]..[401,13928+28])
                      []
                  ]
              (typing/typedtree.mli[402,13963+2]..[402,13963+29])
                Immutable
                "str_type" (typing/typedtree.mli[402,13963+2]..[402,13963+10])                core_type (typing/typedtree.mli[402,13963+13]..[402,13963+28])
                  Ptyp_constr "Types.signature" (typing/typedtree.mli[402,13963+13]..[402,13963+28])
                  []
              (typing/typedtree.mli[403,13993+2]..[403,13993+24])
                Immutable
                "str_final_env" (typing/typedtree.mli[403,13993+2]..[403,13993+15])                core_type (typing/typedtree.mli[403,13993+18]..[403,13993+23])
                  Ptyp_constr "Env.t" (typing/typedtree.mli[403,13993+18]..[403,13993+23])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "structure_item" (typing/typedtree.mli[406,14021+4]..[406,14021+18]) (typing/typedtree.mli[406,14021+0]..[410,14124+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[407,14042+4]..[407,14042+35])
                Immutable
                "str_desc" (typing/typedtree.mli[407,14042+4]..[407,14042+12])                core_type (typing/typedtree.mli[407,14042+15]..[407,14042+34])
                  Ptyp_constr "structure_item_desc" (typing/typedtree.mli[407,14042+15]..[407,14042+34])
                  []
              (typing/typedtree.mli[408,14078+4]..[408,14078+25])
                Immutable
                "str_loc" (typing/typedtree.mli[408,14078+4]..[408,14078+11])                core_type (typing/typedtree.mli[408,14078+14]..[408,14078+24])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[408,14078+14]..[408,14078+24])
                  []
              (typing/typedtree.mli[409,14104+4]..[409,14104+19])
                Immutable
                "str_env" (typing/typedtree.mli[409,14104+4]..[409,14104+11])                core_type (typing/typedtree.mli[409,14104+14]..[409,14104+19])
                  Ptyp_constr "Env.t" (typing/typedtree.mli[409,14104+14]..[409,14104+19])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "structure_item_desc" (typing/typedtree.mli[412,14129+4]..[412,14129+23]) (typing/typedtree.mli[412,14129+0]..[426,14732+31])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[413,14155+4]..[413,14155+40])
                "Tstr_eval" (typing/typedtree.mli[413,14155+4]..[413,14155+13])
                [
                  core_type (typing/typedtree.mli[413,14155+17]..[413,14155+27])
                    Ptyp_constr "expression" (typing/typedtree.mli[413,14155+17]..[413,14155+27])
                    []
                  core_type (typing/typedtree.mli[413,14155+30]..[413,14155+40])
                    Ptyp_constr "attributes" (typing/typedtree.mli[413,14155+30]..[413,14155+40])
                    []
                ]
                None
              (typing/typedtree.mli[414,14196+2]..[414,14196+47])
                "Tstr_value" (typing/typedtree.mli[414,14196+4]..[414,14196+14])
                [
                  core_type (typing/typedtree.mli[414,14196+18]..[414,14196+26])
                    Ptyp_constr "rec_flag" (typing/typedtree.mli[414,14196+18]..[414,14196+26])
                    []
                  core_type (typing/typedtree.mli[414,14196+29]..[414,14196+47])
                    Ptyp_constr "list" (typing/typedtree.mli[414,14196+43]..[414,14196+47])
                    [
                      core_type (typing/typedtree.mli[414,14196+29]..[414,14196+42])
                        Ptyp_constr "value_binding" (typing/typedtree.mli[414,14196+29]..[414,14196+42])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[415,14244+2]..[415,14244+39])
                "Tstr_primitive" (typing/typedtree.mli[415,14244+4]..[415,14244+18])
                [
                  core_type (typing/typedtree.mli[415,14244+22]..[415,14244+39])
                    Ptyp_constr "value_description" (typing/typedtree.mli[415,14244+22]..[415,14244+39])
                    []
                ]
                None
              (typing/typedtree.mli[416,14284+2]..[416,14284+49])
                "Tstr_type" (typing/typedtree.mli[416,14284+4]..[416,14284+13])
                [
                  core_type (typing/typedtree.mli[416,14284+17]..[416,14284+25])
                    Ptyp_constr "rec_flag" (typing/typedtree.mli[416,14284+17]..[416,14284+25])
                    []
                  core_type (typing/typedtree.mli[416,14284+28]..[416,14284+49])
                    Ptyp_constr "list" (typing/typedtree.mli[416,14284+45]..[416,14284+49])
                    [
                      core_type (typing/typedtree.mli[416,14284+28]..[416,14284+44])
                        Ptyp_constr "type_declaration" (typing/typedtree.mli[416,14284+28]..[416,14284+44])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[417,14334+2]..[417,14334+33])
                "Tstr_typext" (typing/typedtree.mli[417,14334+4]..[417,14334+15])
                [
                  core_type (typing/typedtree.mli[417,14334+19]..[417,14334+33])
                    Ptyp_constr "type_extension" (typing/typedtree.mli[417,14334+19]..[417,14334+33])
                    []
                ]
                None
              (typing/typedtree.mli[418,14368+2]..[418,14368+36])
                "Tstr_exception" (typing/typedtree.mli[418,14368+4]..[418,14368+18])
                [
                  core_type (typing/typedtree.mli[418,14368+22]..[418,14368+36])
                    Ptyp_constr "type_exception" (typing/typedtree.mli[418,14368+22]..[418,14368+36])
                    []
                ]
                None
              (typing/typedtree.mli[419,14405+2]..[419,14405+33])
                "Tstr_module" (typing/typedtree.mli[419,14405+4]..[419,14405+15])
                [
                  core_type (typing/typedtree.mli[419,14405+19]..[419,14405+33])
                    Ptyp_constr "module_binding" (typing/typedtree.mli[419,14405+19]..[419,14405+33])
                    []
                ]
                None
              (typing/typedtree.mli[420,14439+2]..[420,14439+41])
                "Tstr_recmodule" (typing/typedtree.mli[420,14439+4]..[420,14439+18])
                [
                  core_type (typing/typedtree.mli[420,14439+22]..[420,14439+41])
                    Ptyp_constr "list" (typing/typedtree.mli[420,14439+37]..[420,14439+41])
                    [
                      core_type (typing/typedtree.mli[420,14439+22]..[420,14439+36])
                        Ptyp_constr "module_binding" (typing/typedtree.mli[420,14439+22]..[420,14439+36])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[421,14481+2]..[421,14481+43])
                "Tstr_modtype" (typing/typedtree.mli[421,14481+4]..[421,14481+16])
                [
                  core_type (typing/typedtree.mli[421,14481+20]..[421,14481+43])
                    Ptyp_constr "module_type_declaration" (typing/typedtree.mli[421,14481+20]..[421,14481+43])
                    []
                ]
                None
              (typing/typedtree.mli[422,14525+2]..[422,14525+33])
                "Tstr_open" (typing/typedtree.mli[422,14525+4]..[422,14525+13])
                [
                  core_type (typing/typedtree.mli[422,14525+17]..[422,14525+33])
                    Ptyp_constr "open_declaration" (typing/typedtree.mli[422,14525+17]..[422,14525+33])
                    []
                ]
                None
              (typing/typedtree.mli[423,14559+2]..[423,14559+56])
                "Tstr_class" (typing/typedtree.mli[423,14559+4]..[423,14559+14])
                [
                  core_type (typing/typedtree.mli[423,14559+18]..[423,14559+56])
                    Ptyp_constr "list" (typing/typedtree.mli[423,14559+52]..[423,14559+56])
                    [
                      core_type (typing/typedtree.mli[423,14559+19]..[423,14559+50])
                        Ptyp_tuple
                        [
                          core_type (typing/typedtree.mli[423,14559+19]..[423,14559+36])
                            Ptyp_constr "class_declaration" (typing/typedtree.mli[423,14559+19]..[423,14559+36])
                            []
                          core_type (typing/typedtree.mli[423,14559+39]..[423,14559+50])
                            Ptyp_constr "list" (typing/typedtree.mli[423,14559+46]..[423,14559+50])
                            [
                              core_type (typing/typedtree.mli[423,14559+39]..[423,14559+45])
                                Ptyp_constr "string" (typing/typedtree.mli[423,14559+39]..[423,14559+45])
                                []
                            ]
                        ]
                    ]
                ]
                None
              (typing/typedtree.mli[424,14616+2]..[424,14616+75])
                "Tstr_class_type" (typing/typedtree.mli[424,14616+4]..[424,14616+19])
                [
                  core_type (typing/typedtree.mli[424,14616+23]..[424,14616+75])
                    Ptyp_constr "list" (typing/typedtree.mli[424,14616+71]..[424,14616+75])
                    [
                      core_type (typing/typedtree.mli[424,14616+24]..[424,14616+69])
                        Ptyp_tuple
                        [
                          core_type (typing/typedtree.mli[424,14616+24]..[424,14616+31])
                            Ptyp_constr "Ident.t" (typing/typedtree.mli[424,14616+24]..[424,14616+31])
                            []
                          core_type (typing/typedtree.mli[424,14616+34]..[424,14616+44])
                            Ptyp_constr "loc" (typing/typedtree.mli[424,14616+41]..[424,14616+44])
                            [
                              core_type (typing/typedtree.mli[424,14616+34]..[424,14616+40])
                                Ptyp_constr "string" (typing/typedtree.mli[424,14616+34]..[424,14616+40])
                                []
                            ]
                          core_type (typing/typedtree.mli[424,14616+47]..[424,14616+69])
                            Ptyp_constr "class_type_declaration" (typing/typedtree.mli[424,14616+47]..[424,14616+69])
                            []
                        ]
                    ]
                ]
                None
              (typing/typedtree.mli[425,14692+2]..[425,14692+39])
                "Tstr_include" (typing/typedtree.mli[425,14692+4]..[425,14692+16])
                [
                  core_type (typing/typedtree.mli[425,14692+20]..[425,14692+39])
                    Ptyp_constr "include_declaration" (typing/typedtree.mli[425,14692+20]..[425,14692+39])
                    []
                ]
                None
              (typing/typedtree.mli[426,14732+2]..[426,14732+31])
                "Tstr_attribute" (typing/typedtree.mli[426,14732+4]..[426,14732+18])
                [
                  core_type (typing/typedtree.mli[426,14732+22]..[426,14732+31])
                    Ptyp_constr "attribute" (typing/typedtree.mli[426,14732+22]..[426,14732+31])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "module_binding" (typing/typedtree.mli[428,14765+4]..[428,14765+18]) (typing/typedtree.mli[428,14765+0]..[436,14978+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[430,14792+5]..[430,14792+27])
                Immutable
                "mb_id" (typing/typedtree.mli[430,14792+5]..[430,14792+10])                core_type (typing/typedtree.mli[430,14792+12]..[430,14792+26])
                  Ptyp_constr "option" (typing/typedtree.mli[430,14792+20]..[430,14792+26])
                  [
                    core_type (typing/typedtree.mli[430,14792+12]..[430,14792+19])
                      Ptyp_constr "Ident.t" (typing/typedtree.mli[430,14792+12]..[430,14792+19])
                      []
                  ]
              (typing/typedtree.mli[431,14820+5]..[431,14820+32])
                Immutable
                "mb_name" (typing/typedtree.mli[431,14820+5]..[431,14820+12])                core_type (typing/typedtree.mli[431,14820+14]..[431,14820+31])
                  Ptyp_constr "loc" (typing/typedtree.mli[431,14820+28]..[431,14820+31])
                  [
                    core_type (typing/typedtree.mli[431,14820+14]..[431,14820+27])
                      Ptyp_constr "option" (typing/typedtree.mli[431,14820+21]..[431,14820+27])
                      [
                        core_type (typing/typedtree.mli[431,14820+14]..[431,14820+20])
                          Ptyp_constr "string" (typing/typedtree.mli[431,14820+14]..[431,14820+20])
                          []
                      ]
                  ]
              (typing/typedtree.mli[432,14853+5]..[432,14853+40])
                Immutable
                "mb_presence" (typing/typedtree.mli[432,14853+5]..[432,14853+16])                core_type (typing/typedtree.mli[432,14853+18]..[432,14853+39])
                  Ptyp_constr "Types.module_presence" (typing/typedtree.mli[432,14853+18]..[432,14853+39])
                  []
              (typing/typedtree.mli[433,14894+5]..[433,14894+26])
                Immutable
                "mb_expr" (typing/typedtree.mli[433,14894+5]..[433,14894+12])                core_type (typing/typedtree.mli[433,14894+14]..[433,14894+25])
                  Ptyp_constr "module_expr" (typing/typedtree.mli[433,14894+14]..[433,14894+25])
                  []
              (typing/typedtree.mli[434,14921+5]..[434,14921+31])
                Immutable
                "mb_attributes" (typing/typedtree.mli[434,14921+5]..[434,14921+18])                core_type (typing/typedtree.mli[434,14921+20]..[434,14921+30])
                  Ptyp_constr "attributes" (typing/typedtree.mli[434,14921+20]..[434,14921+30])
                  []
              (typing/typedtree.mli[435,14953+5]..[435,14953+24])
                Immutable
                "mb_loc" (typing/typedtree.mli[435,14953+5]..[435,14953+11])                core_type (typing/typedtree.mli[435,14953+13]..[435,14953+23])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[435,14953+13]..[435,14953+23])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "value_binding" (typing/typedtree.mli[438,14985+4]..[438,14985+17]) (typing/typedtree.mli[438,14985+0]..[444,15110+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[440,15009+4]..[440,15009+20])
                Immutable
                "vb_pat" (typing/typedtree.mli[440,15009+4]..[440,15009+10])                core_type (typing/typedtree.mli[440,15009+12]..[440,15009+19])
                  Ptyp_constr "pattern" (typing/typedtree.mli[440,15009+12]..[440,15009+19])
                  []
              (typing/typedtree.mli[441,15030+4]..[441,15030+24])
                Immutable
                "vb_expr" (typing/typedtree.mli[441,15030+4]..[441,15030+11])                core_type (typing/typedtree.mli[441,15030+13]..[441,15030+23])
                  Ptyp_constr "expression" (typing/typedtree.mli[441,15030+13]..[441,15030+23])
                  []
              (typing/typedtree.mli[442,15055+4]..[442,15055+30])
                Immutable
                "vb_attributes" (typing/typedtree.mli[442,15055+4]..[442,15055+17])                core_type (typing/typedtree.mli[442,15055+19]..[442,15055+29])
                  Ptyp_constr "attributes" (typing/typedtree.mli[442,15055+19]..[442,15055+29])
                  []
              (typing/typedtree.mli[443,15086+4]..[443,15086+23])
                Immutable
                "vb_loc" (typing/typedtree.mli[443,15086+4]..[443,15086+10])                core_type (typing/typedtree.mli[443,15086+12]..[443,15086+22])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[443,15086+12]..[443,15086+22])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "module_coercion" (typing/typedtree.mli[446,15115+4]..[446,15115+19]) (typing/typedtree.mli[446,15115+0]..[452,15375+53])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[447,15137+4]..[447,15137+16])
                "Tcoerce_none" (typing/typedtree.mli[447,15137+4]..[447,15137+16])
                []
                None
              (typing/typedtree.mli[448,15154+2]..[449,15210+63])
                "Tcoerce_structure" (typing/typedtree.mli[448,15154+4]..[448,15154+21])
                [
                  core_type (typing/typedtree.mli[448,15154+25]..[448,15154+53])
                    Ptyp_constr "list" (typing/typedtree.mli[448,15154+49]..[448,15154+53])
                    [
                      core_type (typing/typedtree.mli[448,15154+26]..[448,15154+47])
                        Ptyp_tuple
                        [
                          core_type (typing/typedtree.mli[448,15154+26]..[448,15154+29])
                            Ptyp_constr "int" (typing/typedtree.mli[448,15154+26]..[448,15154+29])
                            []
                          core_type (typing/typedtree.mli[448,15154+32]..[448,15154+47])
                            Ptyp_constr "module_coercion" (typing/typedtree.mli[448,15154+32]..[448,15154+47])
                            []
                        ]
                    ]
                  core_type (typing/typedtree.mli[449,15210+25]..[449,15210+63])
                    Ptyp_constr "list" (typing/typedtree.mli[449,15210+59]..[449,15210+63])
                    [
                      core_type (typing/typedtree.mli[449,15210+26]..[449,15210+57])
                        Ptyp_tuple
                        [
                          core_type (typing/typedtree.mli[449,15210+26]..[449,15210+33])
                            Ptyp_constr "Ident.t" (typing/typedtree.mli[449,15210+26]..[449,15210+33])
                            []
                          core_type (typing/typedtree.mli[449,15210+36]..[449,15210+39])
                            Ptyp_constr "int" (typing/typedtree.mli[449,15210+36]..[449,15210+39])
                            []
                          core_type (typing/typedtree.mli[449,15210+42]..[449,15210+57])
                            Ptyp_constr "module_coercion" (typing/typedtree.mli[449,15210+42]..[449,15210+57])
                            []
                        ]
                    ]
                ]
                None
              (typing/typedtree.mli[450,15274+2]..[450,15274+56])
                "Tcoerce_functor" (typing/typedtree.mli[450,15274+4]..[450,15274+19])
                [
                  core_type (typing/typedtree.mli[450,15274+23]..[450,15274+38])
                    Ptyp_constr "module_coercion" (typing/typedtree.mli[450,15274+23]..[450,15274+38])
                    []
                  core_type (typing/typedtree.mli[450,15274+41]..[450,15274+56])
                    Ptyp_constr "module_coercion" (typing/typedtree.mli[450,15274+41]..[450,15274+56])
                    []
                ]
                None
              (typing/typedtree.mli[451,15331+2]..[451,15331+43])
                "Tcoerce_primitive" (typing/typedtree.mli[451,15331+4]..[451,15331+21])
                [
                  core_type (typing/typedtree.mli[451,15331+25]..[451,15331+43])
                    Ptyp_constr "primitive_coercion" (typing/typedtree.mli[451,15331+25]..[451,15331+43])
                    []
                ]
                None
              (typing/typedtree.mli[452,15375+2]..[452,15375+53])
                "Tcoerce_alias" (typing/typedtree.mli[452,15375+4]..[452,15375+17])
                [
                  core_type (typing/typedtree.mli[452,15375+21]..[452,15375+26])
                    Ptyp_constr "Env.t" (typing/typedtree.mli[452,15375+21]..[452,15375+26])
                    []
                  core_type (typing/typedtree.mli[452,15375+29]..[452,15375+35])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[452,15375+29]..[452,15375+35])
                    []
                  core_type (typing/typedtree.mli[452,15375+38]..[452,15375+53])
                    Ptyp_constr "module_coercion" (typing/typedtree.mli[452,15375+38]..[452,15375+53])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "module_type" (typing/typedtree.mli[454,15430+4]..[454,15430+15]) (typing/typedtree.mli[454,15430+0]..[460,15592+4])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[455,15448+4]..[455,15448+31])
                Immutable
                "mty_desc" (typing/typedtree.mli[455,15448+4]..[455,15448+12])                core_type (typing/typedtree.mli[455,15448+14]..[455,15448+30])
                  Ptyp_constr "module_type_desc" (typing/typedtree.mli[455,15448+14]..[455,15448+30])
                  []
              (typing/typedtree.mli[456,15480+4]..[456,15480+33])
                Immutable
                "mty_type" (typing/typedtree.mli[456,15480+4]..[456,15480+12])                core_type (typing/typedtree.mli[456,15480+15]..[456,15480+32])
                  Ptyp_constr "Types.module_type" (typing/typedtree.mli[456,15480+15]..[456,15480+32])
                  []
              (typing/typedtree.mli[457,15514+4]..[457,15514+20])
                Immutable
                "mty_env" (typing/typedtree.mli[457,15514+4]..[457,15514+11])                core_type (typing/typedtree.mli[457,15514+14]..[457,15514+19])
                  Ptyp_constr "Env.t" (typing/typedtree.mli[457,15514+14]..[457,15514+19])
                  []
              (typing/typedtree.mli[458,15535+4]..[458,15535+24])
                Immutable
                "mty_loc" (typing/typedtree.mli[458,15535+4]..[458,15535+11])                core_type (typing/typedtree.mli[458,15535+13]..[458,15535+23])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[458,15535+13]..[458,15535+23])
                  []
              (typing/typedtree.mli[459,15560+4]..[459,15560+31])
                Immutable
                "mty_attributes" (typing/typedtree.mli[459,15560+4]..[459,15560+18])                core_type (typing/typedtree.mli[459,15560+20]..[459,15560+30])
                  Ptyp_constr "attributes" (typing/typedtree.mli[459,15560+20]..[459,15560+30])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "module_type_desc" (typing/typedtree.mli[462,15598+4]..[462,15598+20]) (typing/typedtree.mli[462,15598+0]..[468,15860+42])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[463,15621+4]..[463,15621+42])
                "Tmty_ident" (typing/typedtree.mli[463,15621+4]..[463,15621+14])
                [
                  core_type (typing/typedtree.mli[463,15621+18]..[463,15621+24])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[463,15621+18]..[463,15621+24])
                    []
                  core_type (typing/typedtree.mli[463,15621+27]..[463,15621+42])
                    Ptyp_constr "loc" (typing/typedtree.mli[463,15621+39]..[463,15621+42])
                    [
                      core_type (typing/typedtree.mli[463,15621+27]..[463,15621+38])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[463,15621+27]..[463,15621+38])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[464,15664+2]..[464,15664+31])
                "Tmty_signature" (typing/typedtree.mli[464,15664+4]..[464,15664+18])
                [
                  core_type (typing/typedtree.mli[464,15664+22]..[464,15664+31])
                    Ptyp_constr "signature" (typing/typedtree.mli[464,15664+22]..[464,15664+31])
                    []
                ]
                None
              (typing/typedtree.mli[465,15696+2]..[465,15696+51])
                "Tmty_functor" (typing/typedtree.mli[465,15696+4]..[465,15696+16])
                [
                  core_type (typing/typedtree.mli[465,15696+20]..[465,15696+37])
                    Ptyp_constr "functor_parameter" (typing/typedtree.mli[465,15696+20]..[465,15696+37])
                    []
                  core_type (typing/typedtree.mli[465,15696+40]..[465,15696+51])
                    Ptyp_constr "module_type" (typing/typedtree.mli[465,15696+40]..[465,15696+51])
                    []
                ]
                None
              (typing/typedtree.mli[466,15748+2]..[466,15748+80])
                "Tmty_with" (typing/typedtree.mli[466,15748+4]..[466,15748+13])
                [
                  core_type (typing/typedtree.mli[466,15748+17]..[466,15748+28])
                    Ptyp_constr "module_type" (typing/typedtree.mli[466,15748+17]..[466,15748+28])
                    []
                  core_type (typing/typedtree.mli[466,15748+31]..[466,15748+80])
                    Ptyp_constr "list" (typing/typedtree.mli[466,15748+76]..[466,15748+80])
                    [
                      core_type (typing/typedtree.mli[466,15748+32]..[466,15748+74])
                        Ptyp_tuple
                        [
                          core_type (typing/typedtree.mli[466,15748+32]..[466,15748+38])
                            Ptyp_constr "Path.t" (typing/typedtree.mli[466,15748+32]..[466,15748+38])
                            []
                          core_type (typing/typedtree.mli[466,15748+41]..[466,15748+56])
                            Ptyp_constr "loc" (typing/typedtree.mli[466,15748+53]..[466,15748+56])
                            [
                              core_type (typing/typedtree.mli[466,15748+41]..[466,15748+52])
                                Ptyp_constr "Longident.t" (typing/typedtree.mli[466,15748+41]..[466,15748+52])
                                []
                            ]
                          core_type (typing/typedtree.mli[466,15748+59]..[466,15748+74])
                            Ptyp_constr "with_constraint" (typing/typedtree.mli[466,15748+59]..[466,15748+74])
                            []
                        ]
                    ]
                ]
                None
              (typing/typedtree.mli[467,15829+2]..[467,15829+30])
                "Tmty_typeof" (typing/typedtree.mli[467,15829+4]..[467,15829+15])
                [
                  core_type (typing/typedtree.mli[467,15829+19]..[467,15829+30])
                    Ptyp_constr "module_expr" (typing/typedtree.mli[467,15829+19]..[467,15829+30])
                    []
                ]
                None
              (typing/typedtree.mli[468,15860+2]..[468,15860+42])
                "Tmty_alias" (typing/typedtree.mli[468,15860+4]..[468,15860+14])
                [
                  core_type (typing/typedtree.mli[468,15860+18]..[468,15860+24])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[468,15860+18]..[468,15860+24])
                    []
                  core_type (typing/typedtree.mli[468,15860+27]..[468,15860+42])
                    Ptyp_constr "loc" (typing/typedtree.mli[468,15860+39]..[468,15860+42])
                    [
                      core_type (typing/typedtree.mli[468,15860+27]..[468,15860+38])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[468,15860+27]..[468,15860+38])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "primitive_coercion" (typing/typedtree.mli[470,15904+4]..[470,15904+22]) (typing/typedtree.mli[470,15904+0]..[476,16043+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[472,15933+4]..[472,15933+35])
                Immutable
                "pc_desc" (typing/typedtree.mli[472,15933+4]..[472,15933+11])                core_type (typing/typedtree.mli[472,15933+13]..[472,15933+34])
                  Ptyp_constr "Primitive.description" (typing/typedtree.mli[472,15933+13]..[472,15933+34])
                  []
              (typing/typedtree.mli[473,15969+4]..[473,15969+29])
                Immutable
                "pc_type" (typing/typedtree.mli[473,15969+4]..[473,15969+11])                core_type (typing/typedtree.mli[473,15969+13]..[473,15969+28])
                  Ptyp_constr "Types.type_expr" (typing/typedtree.mli[473,15969+13]..[473,15969+28])
                  []
              (typing/typedtree.mli[474,15999+4]..[474,15999+18])
                Immutable
                "pc_env" (typing/typedtree.mli[474,15999+4]..[474,15999+10])                core_type (typing/typedtree.mli[474,15999+12]..[474,15999+17])
                  Ptyp_constr "Env.t" (typing/typedtree.mli[474,15999+12]..[474,15999+17])
                  []
              (typing/typedtree.mli[475,16018+4]..[475,16018+24])
                Immutable
                "pc_loc" (typing/typedtree.mli[475,16018+4]..[475,16018+10])                core_type (typing/typedtree.mli[475,16018+13]..[475,16018+23])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[475,16018+13]..[475,16018+23])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "signature" (typing/typedtree.mli[478,16048+4]..[478,16048+13]) (typing/typedtree.mli[478,16048+0]..[482,16156+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[479,16066+2]..[479,16066+34])
                Immutable
                "sig_items" (typing/typedtree.mli[479,16066+2]..[479,16066+11])                core_type (typing/typedtree.mli[479,16066+14]..[479,16066+33])
                  Ptyp_constr "list" (typing/typedtree.mli[479,16066+29]..[479,16066+33])
                  [
                    core_type (typing/typedtree.mli[479,16066+14]..[479,16066+28])
                      Ptyp_constr "signature_item" (typing/typedtree.mli[479,16066+14]..[479,16066+28])
                      []
                  ]
              (typing/typedtree.mli[480,16101+2]..[480,16101+29])
                Immutable
                "sig_type" (typing/typedtree.mli[480,16101+2]..[480,16101+10])                core_type (typing/typedtree.mli[480,16101+13]..[480,16101+28])
                  Ptyp_constr "Types.signature" (typing/typedtree.mli[480,16101+13]..[480,16101+28])
                  []
              (typing/typedtree.mli[481,16131+2]..[481,16131+24])
                Immutable
                "sig_final_env" (typing/typedtree.mli[481,16131+2]..[481,16131+15])                core_type (typing/typedtree.mli[481,16131+18]..[481,16131+23])
                  Ptyp_constr "Env.t" (typing/typedtree.mli[481,16131+18]..[481,16131+23])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "signature_item" (typing/typedtree.mli[484,16159+4]..[484,16159+18]) (typing/typedtree.mli[484,16159+0]..[487,16257+25])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[485,16180+4]..[485,16180+34])
                Immutable
                "sig_desc" (typing/typedtree.mli[485,16180+4]..[485,16180+12])                core_type (typing/typedtree.mli[485,16180+14]..[485,16180+33])
                  Ptyp_constr "signature_item_desc" (typing/typedtree.mli[485,16180+14]..[485,16180+33])
                  []
              (typing/typedtree.mli[486,16215+4]..[486,16215+20])
                Immutable
                "sig_env" (typing/typedtree.mli[486,16215+4]..[486,16215+11])                core_type (typing/typedtree.mli[486,16215+14]..[486,16215+19])
                  Ptyp_constr "Env.t" (typing/typedtree.mli[486,16215+14]..[486,16215+19])
                  []
              (typing/typedtree.mli[487,16257+4]..[487,16257+23])
                Immutable
                "sig_loc" (typing/typedtree.mli[487,16257+4]..[487,16257+11])                core_type (typing/typedtree.mli[487,16257+13]..[487,16257+23])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[487,16257+13]..[487,16257+23])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "signature_item_desc" (typing/typedtree.mli[489,16284+4]..[489,16284+23]) (typing/typedtree.mli[489,16284+0]..[504,16895+31])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[490,16310+4]..[490,16310+35])
                "Tsig_value" (typing/typedtree.mli[490,16310+4]..[490,16310+14])
                [
                  core_type (typing/typedtree.mli[490,16310+18]..[490,16310+35])
                    Ptyp_constr "value_description" (typing/typedtree.mli[490,16310+18]..[490,16310+35])
                    []
                ]
                None
              (typing/typedtree.mli[491,16346+2]..[491,16346+49])
                "Tsig_type" (typing/typedtree.mli[491,16346+4]..[491,16346+13])
                [
                  core_type (typing/typedtree.mli[491,16346+17]..[491,16346+25])
                    Ptyp_constr "rec_flag" (typing/typedtree.mli[491,16346+17]..[491,16346+25])
                    []
                  core_type (typing/typedtree.mli[491,16346+28]..[491,16346+49])
                    Ptyp_constr "list" (typing/typedtree.mli[491,16346+45]..[491,16346+49])
                    [
                      core_type (typing/typedtree.mli[491,16346+28]..[491,16346+44])
                        Ptyp_constr "type_declaration" (typing/typedtree.mli[491,16346+28]..[491,16346+44])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[492,16396+2]..[492,16396+43])
                "Tsig_typesubst" (typing/typedtree.mli[492,16396+4]..[492,16396+18])
                [
                  core_type (typing/typedtree.mli[492,16396+22]..[492,16396+43])
                    Ptyp_constr "list" (typing/typedtree.mli[492,16396+39]..[492,16396+43])
                    [
                      core_type (typing/typedtree.mli[492,16396+22]..[492,16396+38])
                        Ptyp_constr "type_declaration" (typing/typedtree.mli[492,16396+22]..[492,16396+38])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[493,16440+2]..[493,16440+33])
                "Tsig_typext" (typing/typedtree.mli[493,16440+4]..[493,16440+15])
                [
                  core_type (typing/typedtree.mli[493,16440+19]..[493,16440+33])
                    Ptyp_constr "type_extension" (typing/typedtree.mli[493,16440+19]..[493,16440+33])
                    []
                ]
                None
              (typing/typedtree.mli[494,16474+2]..[494,16474+36])
                "Tsig_exception" (typing/typedtree.mli[494,16474+4]..[494,16474+18])
                [
                  core_type (typing/typedtree.mli[494,16474+22]..[494,16474+36])
                    Ptyp_constr "type_exception" (typing/typedtree.mli[494,16474+22]..[494,16474+36])
                    []
                ]
                None
              (typing/typedtree.mli[495,16511+2]..[495,16511+37])
                "Tsig_module" (typing/typedtree.mli[495,16511+4]..[495,16511+15])
                [
                  core_type (typing/typedtree.mli[495,16511+19]..[495,16511+37])
                    Ptyp_constr "module_declaration" (typing/typedtree.mli[495,16511+19]..[495,16511+37])
                    []
                ]
                None
              (typing/typedtree.mli[496,16549+2]..[496,16549+40])
                "Tsig_modsubst" (typing/typedtree.mli[496,16549+4]..[496,16549+17])
                [
                  core_type (typing/typedtree.mli[496,16549+21]..[496,16549+40])
                    Ptyp_constr "module_substitution" (typing/typedtree.mli[496,16549+21]..[496,16549+40])
                    []
                ]
                None
              (typing/typedtree.mli[497,16590+2]..[497,16590+45])
                "Tsig_recmodule" (typing/typedtree.mli[497,16590+4]..[497,16590+18])
                [
                  core_type (typing/typedtree.mli[497,16590+22]..[497,16590+45])
                    Ptyp_constr "list" (typing/typedtree.mli[497,16590+41]..[497,16590+45])
                    [
                      core_type (typing/typedtree.mli[497,16590+22]..[497,16590+40])
                        Ptyp_constr "module_declaration" (typing/typedtree.mli[497,16590+22]..[497,16590+40])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[498,16636+2]..[498,16636+43])
                "Tsig_modtype" (typing/typedtree.mli[498,16636+4]..[498,16636+16])
                [
                  core_type (typing/typedtree.mli[498,16636+20]..[498,16636+43])
                    Ptyp_constr "module_type_declaration" (typing/typedtree.mli[498,16636+20]..[498,16636+43])
                    []
                ]
                None
              (typing/typedtree.mli[499,16680+2]..[499,16680+48])
                "Tsig_modtypesubst" (typing/typedtree.mli[499,16680+4]..[499,16680+21])
                [
                  core_type (typing/typedtree.mli[499,16680+25]..[499,16680+48])
                    Ptyp_constr "module_type_declaration" (typing/typedtree.mli[499,16680+25]..[499,16680+48])
                    []
                ]
                None
              (typing/typedtree.mli[500,16729+2]..[500,16729+33])
                "Tsig_open" (typing/typedtree.mli[500,16729+4]..[500,16729+13])
                [
                  core_type (typing/typedtree.mli[500,16729+17]..[500,16729+33])
                    Ptyp_constr "open_description" (typing/typedtree.mli[500,16729+17]..[500,16729+33])
                    []
                ]
                None
              (typing/typedtree.mli[501,16763+2]..[501,16763+39])
                "Tsig_include" (typing/typedtree.mli[501,16763+4]..[501,16763+16])
                [
                  core_type (typing/typedtree.mli[501,16763+20]..[501,16763+39])
                    Ptyp_constr "include_description" (typing/typedtree.mli[501,16763+20]..[501,16763+39])
                    []
                ]
                None
              (typing/typedtree.mli[502,16803+2]..[502,16803+40])
                "Tsig_class" (typing/typedtree.mli[502,16803+4]..[502,16803+14])
                [
                  core_type (typing/typedtree.mli[502,16803+18]..[502,16803+40])
                    Ptyp_constr "list" (typing/typedtree.mli[502,16803+36]..[502,16803+40])
                    [
                      core_type (typing/typedtree.mli[502,16803+18]..[502,16803+35])
                        Ptyp_constr "class_description" (typing/typedtree.mli[502,16803+18]..[502,16803+35])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[503,16844+2]..[503,16844+50])
                "Tsig_class_type" (typing/typedtree.mli[503,16844+4]..[503,16844+19])
                [
                  core_type (typing/typedtree.mli[503,16844+23]..[503,16844+50])
                    Ptyp_constr "list" (typing/typedtree.mli[503,16844+46]..[503,16844+50])
                    [
                      core_type (typing/typedtree.mli[503,16844+23]..[503,16844+45])
                        Ptyp_constr "class_type_declaration" (typing/typedtree.mli[503,16844+23]..[503,16844+45])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[504,16895+2]..[504,16895+31])
                "Tsig_attribute" (typing/typedtree.mli[504,16895+4]..[504,16895+18])
                [
                  core_type (typing/typedtree.mli[504,16895+22]..[504,16895+31])
                    Ptyp_constr "attribute" (typing/typedtree.mli[504,16895+22]..[504,16895+31])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "module_declaration" (typing/typedtree.mli[506,16928+4]..[506,16928+22]) (typing/typedtree.mli[506,16928+0]..[514,17145+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[508,16959+5]..[508,16959+27])
                Immutable
                "md_id" (typing/typedtree.mli[508,16959+5]..[508,16959+10])                core_type (typing/typedtree.mli[508,16959+12]..[508,16959+26])
                  Ptyp_constr "option" (typing/typedtree.mli[508,16959+20]..[508,16959+26])
                  [
                    core_type (typing/typedtree.mli[508,16959+12]..[508,16959+19])
                      Ptyp_constr "Ident.t" (typing/typedtree.mli[508,16959+12]..[508,16959+19])
                      []
                  ]
              (typing/typedtree.mli[509,16987+5]..[509,16987+32])
                Immutable
                "md_name" (typing/typedtree.mli[509,16987+5]..[509,16987+12])                core_type (typing/typedtree.mli[509,16987+14]..[509,16987+31])
                  Ptyp_constr "loc" (typing/typedtree.mli[509,16987+28]..[509,16987+31])
                  [
                    core_type (typing/typedtree.mli[509,16987+14]..[509,16987+27])
                      Ptyp_constr "option" (typing/typedtree.mli[509,16987+21]..[509,16987+27])
                      [
                        core_type (typing/typedtree.mli[509,16987+14]..[509,16987+20])
                          Ptyp_constr "string" (typing/typedtree.mli[509,16987+14]..[509,16987+20])
                          []
                      ]
                  ]
              (typing/typedtree.mli[510,17020+5]..[510,17020+40])
                Immutable
                "md_presence" (typing/typedtree.mli[510,17020+5]..[510,17020+16])                core_type (typing/typedtree.mli[510,17020+18]..[510,17020+39])
                  Ptyp_constr "Types.module_presence" (typing/typedtree.mli[510,17020+18]..[510,17020+39])
                  []
              (typing/typedtree.mli[511,17061+5]..[511,17061+26])
                Immutable
                "md_type" (typing/typedtree.mli[511,17061+5]..[511,17061+12])                core_type (typing/typedtree.mli[511,17061+14]..[511,17061+25])
                  Ptyp_constr "module_type" (typing/typedtree.mli[511,17061+14]..[511,17061+25])
                  []
              (typing/typedtree.mli[512,17088+5]..[512,17088+31])
                Immutable
                "md_attributes" (typing/typedtree.mli[512,17088+5]..[512,17088+18])                core_type (typing/typedtree.mli[512,17088+20]..[512,17088+30])
                  Ptyp_constr "attributes" (typing/typedtree.mli[512,17088+20]..[512,17088+30])
                  []
              (typing/typedtree.mli[513,17120+5]..[513,17120+24])
                Immutable
                "md_loc" (typing/typedtree.mli[513,17120+5]..[513,17120+11])                core_type (typing/typedtree.mli[513,17120+13]..[513,17120+23])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[513,17120+13]..[513,17120+23])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "module_substitution" (typing/typedtree.mli[516,17152+4]..[516,17152+23]) (typing/typedtree.mli[516,17152+0]..[524,17344+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[518,17184+5]..[518,17184+20])
                Immutable
                "ms_id" (typing/typedtree.mli[518,17184+5]..[518,17184+10])                core_type (typing/typedtree.mli[518,17184+12]..[518,17184+19])
                  Ptyp_constr "Ident.t" (typing/typedtree.mli[518,17184+12]..[518,17184+19])
                  []
              (typing/typedtree.mli[519,17205+5]..[519,17205+25])
                Immutable
                "ms_name" (typing/typedtree.mli[519,17205+5]..[519,17205+12])                core_type (typing/typedtree.mli[519,17205+14]..[519,17205+24])
                  Ptyp_constr "loc" (typing/typedtree.mli[519,17205+21]..[519,17205+24])
                  [
                    core_type (typing/typedtree.mli[519,17205+14]..[519,17205+20])
                      Ptyp_constr "string" (typing/typedtree.mli[519,17205+14]..[519,17205+20])
                      []
                  ]
              (typing/typedtree.mli[520,17231+5]..[520,17231+25])
                Immutable
                "ms_manifest" (typing/typedtree.mli[520,17231+5]..[520,17231+16])                core_type (typing/typedtree.mli[520,17231+18]..[520,17231+24])
                  Ptyp_constr "Path.t" (typing/typedtree.mli[520,17231+18]..[520,17231+24])
                  []
              (typing/typedtree.mli[521,17257+5]..[521,17257+29])
                Immutable
                "ms_txt" (typing/typedtree.mli[521,17257+5]..[521,17257+11])                core_type (typing/typedtree.mli[521,17257+13]..[521,17257+28])
                  Ptyp_constr "loc" (typing/typedtree.mli[521,17257+25]..[521,17257+28])
                  [
                    core_type (typing/typedtree.mli[521,17257+13]..[521,17257+24])
                      Ptyp_constr "Longident.t" (typing/typedtree.mli[521,17257+13]..[521,17257+24])
                      []
                  ]
              (typing/typedtree.mli[522,17287+5]..[522,17287+31])
                Immutable
                "ms_attributes" (typing/typedtree.mli[522,17287+5]..[522,17287+18])                core_type (typing/typedtree.mli[522,17287+20]..[522,17287+30])
                  Ptyp_constr "attributes" (typing/typedtree.mli[522,17287+20]..[522,17287+30])
                  []
              (typing/typedtree.mli[523,17319+5]..[523,17319+24])
                Immutable
                "ms_loc" (typing/typedtree.mli[523,17319+5]..[523,17319+11])                core_type (typing/typedtree.mli[523,17319+13]..[523,17319+23])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[523,17319+13]..[523,17319+23])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "module_type_declaration" (typing/typedtree.mli[526,17351+4]..[526,17351+27]) (typing/typedtree.mli[526,17351+0]..[533,17530+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[528,17387+5]..[528,17387+21])
                Immutable
                "mtd_id" (typing/typedtree.mli[528,17387+5]..[528,17387+11])                core_type (typing/typedtree.mli[528,17387+13]..[528,17387+20])
                  Ptyp_constr "Ident.t" (typing/typedtree.mli[528,17387+13]..[528,17387+20])
                  []
              (typing/typedtree.mli[529,17409+5]..[529,17409+26])
                Immutable
                "mtd_name" (typing/typedtree.mli[529,17409+5]..[529,17409+13])                core_type (typing/typedtree.mli[529,17409+15]..[529,17409+25])
                  Ptyp_constr "loc" (typing/typedtree.mli[529,17409+22]..[529,17409+25])
                  [
                    core_type (typing/typedtree.mli[529,17409+15]..[529,17409+21])
                      Ptyp_constr "string" (typing/typedtree.mli[529,17409+15]..[529,17409+21])
                      []
                  ]
              (typing/typedtree.mli[530,17436+5]..[530,17436+34])
                Immutable
                "mtd_type" (typing/typedtree.mli[530,17436+5]..[530,17436+13])                core_type (typing/typedtree.mli[530,17436+15]..[530,17436+33])
                  Ptyp_constr "option" (typing/typedtree.mli[530,17436+27]..[530,17436+33])
                  [
                    core_type (typing/typedtree.mli[530,17436+15]..[530,17436+26])
                      Ptyp_constr "module_type" (typing/typedtree.mli[530,17436+15]..[530,17436+26])
                      []
                  ]
              (typing/typedtree.mli[531,17471+5]..[531,17471+32])
                Immutable
                "mtd_attributes" (typing/typedtree.mli[531,17471+5]..[531,17471+19])                core_type (typing/typedtree.mli[531,17471+21]..[531,17471+31])
                  Ptyp_constr "attributes" (typing/typedtree.mli[531,17471+21]..[531,17471+31])
                  []
              (typing/typedtree.mli[532,17504+5]..[532,17504+25])
                Immutable
                "mtd_loc" (typing/typedtree.mli[532,17504+5]..[532,17504+12])                core_type (typing/typedtree.mli[532,17504+14]..[532,17504+24])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[532,17504+14]..[532,17504+24])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "open_infos" (typing/typedtree.mli[535,17537+7]..[535,17537+17]) (typing/typedtree.mli[535,17537+0]..[543,17745+5])
        ptype_params =
          [
            core_type (typing/typedtree.mli[535,17537+4]..[535,17537+6])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[537,17563+5]..[537,17563+19])
                Immutable
                "open_expr" (typing/typedtree.mli[537,17563+5]..[537,17563+14])                core_type (typing/typedtree.mli[537,17563+16]..[537,17563+18])
                  Ptyp_var a
              (typing/typedtree.mli[538,17583+5]..[538,17583+39])
                Immutable
                "open_bound_items" (typing/typedtree.mli[538,17583+5]..[538,17583+21])                core_type (typing/typedtree.mli[538,17583+23]..[538,17583+38])
                  Ptyp_constr "Types.signature" (typing/typedtree.mli[538,17583+23]..[538,17583+38])
                  []
              (typing/typedtree.mli[539,17623+5]..[539,17623+34])
                Immutable
                "open_override" (typing/typedtree.mli[539,17623+5]..[539,17623+18])                core_type (typing/typedtree.mli[539,17623+20]..[539,17623+33])
                  Ptyp_constr "override_flag" (typing/typedtree.mli[539,17623+20]..[539,17623+33])
                  []
              (typing/typedtree.mli[540,17658+5]..[540,17658+21])
                Immutable
                "open_env" (typing/typedtree.mli[540,17658+5]..[540,17658+13])                core_type (typing/typedtree.mli[540,17658+15]..[540,17658+20])
                  Ptyp_constr "Env.t" (typing/typedtree.mli[540,17658+15]..[540,17658+20])
                  []
              (typing/typedtree.mli[541,17680+5]..[541,17680+26])
                Immutable
                "open_loc" (typing/typedtree.mli[541,17680+5]..[541,17680+13])                core_type (typing/typedtree.mli[541,17680+15]..[541,17680+25])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[541,17680+15]..[541,17680+25])
                  []
              (typing/typedtree.mli[542,17707+5]..[542,17707+37])
                Immutable
                "open_attributes" (typing/typedtree.mli[542,17707+5]..[542,17707+20])                core_type (typing/typedtree.mli[542,17707+22]..[542,17707+36])
                  Ptyp_constr "list" (typing/typedtree.mli[542,17707+32]..[542,17707+36])
                  [
                    core_type (typing/typedtree.mli[542,17707+22]..[542,17707+31])
                      Ptyp_constr "attribute" (typing/typedtree.mli[542,17707+22]..[542,17707+31])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "open_description" (typing/typedtree.mli[545,17752+4]..[545,17752+20]) (typing/typedtree.mli[545,17752+0]..[545,17752+60])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/typedtree.mli[545,17752+23]..[545,17752+60])
              Ptyp_constr "open_infos" (typing/typedtree.mli[545,17752+50]..[545,17752+60])
              [
                core_type (typing/typedtree.mli[545,17752+24]..[545,17752+48])
                  Ptyp_tuple
                  [
                    core_type (typing/typedtree.mli[545,17752+24]..[545,17752+30])
                      Ptyp_constr "Path.t" (typing/typedtree.mli[545,17752+24]..[545,17752+30])
                      []
                    core_type (typing/typedtree.mli[545,17752+33]..[545,17752+48])
                      Ptyp_constr "loc" (typing/typedtree.mli[545,17752+45]..[545,17752+48])
                      [
                        core_type (typing/typedtree.mli[545,17752+33]..[545,17752+44])
                          Ptyp_constr "Longident.t" (typing/typedtree.mli[545,17752+33]..[545,17752+44])
                          []
                      ]
                  ]
              ]
      type_declaration "open_declaration" (typing/typedtree.mli[547,17814+4]..[547,17814+20]) (typing/typedtree.mli[547,17814+0]..[547,17814+45])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/typedtree.mli[547,17814+23]..[547,17814+45])
              Ptyp_constr "open_infos" (typing/typedtree.mli[547,17814+35]..[547,17814+45])
              [
                core_type (typing/typedtree.mli[547,17814+23]..[547,17814+34])
                  Ptyp_constr "module_expr" (typing/typedtree.mli[547,17814+23]..[547,17814+34])
                  []
              ]
      type_declaration "include_infos" (typing/typedtree.mli[550,17862+7]..[550,17862+20]) (typing/typedtree.mli[550,17862+0]..[556,18008+5])
        ptype_params =
          [
            core_type (typing/typedtree.mli[550,17862+4]..[550,17862+6])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[552,17891+5]..[552,17891+18])
                Immutable
                "incl_mod" (typing/typedtree.mli[552,17891+5]..[552,17891+13])                core_type (typing/typedtree.mli[552,17891+15]..[552,17891+17])
                  Ptyp_var a
              (typing/typedtree.mli[553,17910+5]..[553,17910+32])
                Immutable
                "incl_type" (typing/typedtree.mli[553,17910+5]..[553,17910+14])                core_type (typing/typedtree.mli[553,17910+16]..[553,17910+31])
                  Ptyp_constr "Types.signature" (typing/typedtree.mli[553,17910+16]..[553,17910+31])
                  []
              (typing/typedtree.mli[554,17943+5]..[554,17943+26])
                Immutable
                "incl_loc" (typing/typedtree.mli[554,17943+5]..[554,17943+13])                core_type (typing/typedtree.mli[554,17943+15]..[554,17943+25])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[554,17943+15]..[554,17943+25])
                  []
              (typing/typedtree.mli[555,17970+5]..[555,17970+37])
                Immutable
                "incl_attributes" (typing/typedtree.mli[555,17970+5]..[555,17970+20])                core_type (typing/typedtree.mli[555,17970+22]..[555,17970+36])
                  Ptyp_constr "list" (typing/typedtree.mli[555,17970+32]..[555,17970+36])
                  [
                    core_type (typing/typedtree.mli[555,17970+22]..[555,17970+31])
                      Ptyp_constr "attribute" (typing/typedtree.mli[555,17970+22]..[555,17970+31])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "include_description" (typing/typedtree.mli[558,18015+4]..[558,18015+23]) (typing/typedtree.mli[558,18015+0]..[558,18015+51])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/typedtree.mli[558,18015+26]..[558,18015+51])
              Ptyp_constr "include_infos" (typing/typedtree.mli[558,18015+38]..[558,18015+51])
              [
                core_type (typing/typedtree.mli[558,18015+26]..[558,18015+37])
                  Ptyp_constr "module_type" (typing/typedtree.mli[558,18015+26]..[558,18015+37])
                  []
              ]
      type_declaration "include_declaration" (typing/typedtree.mli[560,18068+4]..[560,18068+23]) (typing/typedtree.mli[560,18068+0]..[560,18068+51])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/typedtree.mli[560,18068+26]..[560,18068+51])
              Ptyp_constr "include_infos" (typing/typedtree.mli[560,18068+38]..[560,18068+51])
              [
                core_type (typing/typedtree.mli[560,18068+26]..[560,18068+37])
                  Ptyp_constr "module_expr" (typing/typedtree.mli[560,18068+26]..[560,18068+37])
                  []
              ]
      type_declaration "with_constraint" (typing/typedtree.mli[562,18121+4]..[562,18121+19]) (typing/typedtree.mli[562,18121+0]..[568,18343+37])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[563,18143+4]..[563,18143+34])
                "Twith_type" (typing/typedtree.mli[563,18143+4]..[563,18143+14])
                [
                  core_type (typing/typedtree.mli[563,18143+18]..[563,18143+34])
                    Ptyp_constr "type_declaration" (typing/typedtree.mli[563,18143+18]..[563,18143+34])
                    []
                ]
                None
              (typing/typedtree.mli[564,18178+2]..[564,18178+44])
                "Twith_module" (typing/typedtree.mli[564,18178+4]..[564,18178+16])
                [
                  core_type (typing/typedtree.mli[564,18178+20]..[564,18178+26])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[564,18178+20]..[564,18178+26])
                    []
                  core_type (typing/typedtree.mli[564,18178+29]..[564,18178+44])
                    Ptyp_constr "loc" (typing/typedtree.mli[564,18178+41]..[564,18178+44])
                    [
                      core_type (typing/typedtree.mli[564,18178+29]..[564,18178+40])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[564,18178+29]..[564,18178+40])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[565,18223+2]..[565,18223+32])
                "Twith_modtype" (typing/typedtree.mli[565,18223+4]..[565,18223+17])
                [
                  core_type (typing/typedtree.mli[565,18223+21]..[565,18223+32])
                    Ptyp_constr "module_type" (typing/typedtree.mli[565,18223+21]..[565,18223+32])
                    []
                ]
                None
              (typing/typedtree.mli[566,18256+2]..[566,18256+39])
                "Twith_typesubst" (typing/typedtree.mli[566,18256+4]..[566,18256+19])
                [
                  core_type (typing/typedtree.mli[566,18256+23]..[566,18256+39])
                    Ptyp_constr "type_declaration" (typing/typedtree.mli[566,18256+23]..[566,18256+39])
                    []
                ]
                None
              (typing/typedtree.mli[567,18296+2]..[567,18296+46])
                "Twith_modsubst" (typing/typedtree.mli[567,18296+4]..[567,18296+18])
                [
                  core_type (typing/typedtree.mli[567,18296+22]..[567,18296+28])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[567,18296+22]..[567,18296+28])
                    []
                  core_type (typing/typedtree.mli[567,18296+31]..[567,18296+46])
                    Ptyp_constr "loc" (typing/typedtree.mli[567,18296+43]..[567,18296+46])
                    [
                      core_type (typing/typedtree.mli[567,18296+31]..[567,18296+42])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[567,18296+31]..[567,18296+42])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[568,18343+2]..[568,18343+37])
                "Twith_modtypesubst" (typing/typedtree.mli[568,18343+4]..[568,18343+22])
                [
                  core_type (typing/typedtree.mli[568,18343+26]..[568,18343+37])
                    Ptyp_constr "module_type" (typing/typedtree.mli[568,18343+26]..[568,18343+37])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "core_type" (typing/typedtree.mli[570,18382+4]..[570,18382+13]) (typing/typedtree.mli[570,18382+0]..[578,18700+4])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[571,18398+4]..[571,18398+39])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[572,18438+6]..[572,18438+58])
                      Pstr_eval
                      expression (typing/typedtree.mli[572,18438+6]..[572,18438+58])
                        Pexp_constant PConst_string(" mutable because of [Typeclass.declare_method] ",(typing/typedtree.mli[572,18438+6]..[572,18438+58]),None)
                  ]
                Mutable
                "ctyp_desc" (typing/typedtree.mli[571,18398+12]..[571,18398+21])                core_type (typing/typedtree.mli[571,18398+24]..[571,18398+38])
                  Ptyp_constr "core_type_desc" (typing/typedtree.mli[571,18398+24]..[571,18398+38])
                  []
              (typing/typedtree.mli[573,18497+4]..[573,18497+40])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/typedtree.mli[574,18538+6]..[574,18538+58])
                      Pstr_eval
                      expression (typing/typedtree.mli[574,18538+6]..[574,18538+58])
                        Pexp_constant PConst_string(" mutable because of [Typeclass.declare_method] ",(typing/typedtree.mli[574,18538+6]..[574,18538+58]),None)
                  ]
                Mutable
                "ctyp_type" (typing/typedtree.mli[573,18497+12]..[573,18497+21])                core_type (typing/typedtree.mli[573,18497+24]..[573,18497+39])
                  Ptyp_constr "Types.type_expr" (typing/typedtree.mli[573,18497+24]..[573,18497+39])
                  []
              (typing/typedtree.mli[575,18597+4]..[575,18597+21])
                Immutable
                "ctyp_env" (typing/typedtree.mli[575,18597+4]..[575,18597+12])                core_type (typing/typedtree.mli[575,18597+15]..[575,18597+20])
                  Ptyp_constr "Env.t" (typing/typedtree.mli[575,18597+15]..[575,18597+20])
                  []
              (typing/typedtree.mli[576,18640+4]..[576,18640+26])
                Immutable
                "ctyp_loc" (typing/typedtree.mli[576,18640+4]..[576,18640+12])                core_type (typing/typedtree.mli[576,18640+15]..[576,18640+25])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[576,18640+15]..[576,18640+25])
                  []
              (typing/typedtree.mli[577,18667+4]..[577,18667+32])
                Immutable
                "ctyp_attributes" (typing/typedtree.mli[577,18667+4]..[577,18667+19])                core_type (typing/typedtree.mli[577,18667+21]..[577,18667+31])
                  Ptyp_constr "attributes" (typing/typedtree.mli[577,18667+21]..[577,18667+31])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "core_type_desc" (typing/typedtree.mli[580,18706+4]..[580,18706+18]) (typing/typedtree.mli[580,18706+0]..[591,19167+32])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[581,18727+4]..[581,18727+12])
                "Ttyp_any" (typing/typedtree.mli[581,18727+4]..[581,18727+12])
                []
                None
              (typing/typedtree.mli[582,18740+2]..[582,18740+22])
                "Ttyp_var" (typing/typedtree.mli[582,18740+4]..[582,18740+12])
                [
                  core_type (typing/typedtree.mli[582,18740+16]..[582,18740+22])
                    Ptyp_constr "string" (typing/typedtree.mli[582,18740+16]..[582,18740+22])
                    []
                ]
                None
              (typing/typedtree.mli[583,18763+2]..[583,18763+51])
                "Ttyp_arrow" (typing/typedtree.mli[583,18763+4]..[583,18763+14])
                [
                  core_type (typing/typedtree.mli[583,18763+18]..[583,18763+27])
                    Ptyp_constr "arg_label" (typing/typedtree.mli[583,18763+18]..[583,18763+27])
                    []
                  core_type (typing/typedtree.mli[583,18763+30]..[583,18763+39])
                    Ptyp_constr "core_type" (typing/typedtree.mli[583,18763+30]..[583,18763+39])
                    []
                  core_type (typing/typedtree.mli[583,18763+42]..[583,18763+51])
                    Ptyp_constr "core_type" (typing/typedtree.mli[583,18763+42]..[583,18763+51])
                    []
                ]
                None
              (typing/typedtree.mli[584,18815+2]..[584,18815+32])
                "Ttyp_tuple" (typing/typedtree.mli[584,18815+4]..[584,18815+14])
                [
                  core_type (typing/typedtree.mli[584,18815+18]..[584,18815+32])
                    Ptyp_constr "list" (typing/typedtree.mli[584,18815+28]..[584,18815+32])
                    [
                      core_type (typing/typedtree.mli[584,18815+18]..[584,18815+27])
                        Ptyp_constr "core_type" (typing/typedtree.mli[584,18815+18]..[584,18815+27])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[585,18848+2]..[585,18848+60])
                "Ttyp_constr" (typing/typedtree.mli[585,18848+4]..[585,18848+15])
                [
                  core_type (typing/typedtree.mli[585,18848+19]..[585,18848+25])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[585,18848+19]..[585,18848+25])
                    []
                  core_type (typing/typedtree.mli[585,18848+28]..[585,18848+43])
                    Ptyp_constr "loc" (typing/typedtree.mli[585,18848+40]..[585,18848+43])
                    [
                      core_type (typing/typedtree.mli[585,18848+28]..[585,18848+39])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[585,18848+28]..[585,18848+39])
                        []
                    ]
                  core_type (typing/typedtree.mli[585,18848+46]..[585,18848+60])
                    Ptyp_constr "list" (typing/typedtree.mli[585,18848+56]..[585,18848+60])
                    [
                      core_type (typing/typedtree.mli[585,18848+46]..[585,18848+55])
                        Ptyp_constr "core_type" (typing/typedtree.mli[585,18848+46]..[585,18848+55])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[586,18909+2]..[586,18909+50])
                "Ttyp_object" (typing/typedtree.mli[586,18909+4]..[586,18909+15])
                [
                  core_type (typing/typedtree.mli[586,18909+19]..[586,18909+36])
                    Ptyp_constr "list" (typing/typedtree.mli[586,18909+32]..[586,18909+36])
                    [
                      core_type (typing/typedtree.mli[586,18909+19]..[586,18909+31])
                        Ptyp_constr "object_field" (typing/typedtree.mli[586,18909+19]..[586,18909+31])
                        []
                    ]
                  core_type (typing/typedtree.mli[586,18909+39]..[586,18909+50])
                    Ptyp_constr "closed_flag" (typing/typedtree.mli[586,18909+39]..[586,18909+50])
                    []
                ]
                None
              (typing/typedtree.mli[587,18960+2]..[587,18960+59])
                "Ttyp_class" (typing/typedtree.mli[587,18960+4]..[587,18960+14])
                [
                  core_type (typing/typedtree.mli[587,18960+18]..[587,18960+24])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[587,18960+18]..[587,18960+24])
                    []
                  core_type (typing/typedtree.mli[587,18960+27]..[587,18960+42])
                    Ptyp_constr "loc" (typing/typedtree.mli[587,18960+39]..[587,18960+42])
                    [
                      core_type (typing/typedtree.mli[587,18960+27]..[587,18960+38])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[587,18960+27]..[587,18960+38])
                        []
                    ]
                  core_type (typing/typedtree.mli[587,18960+45]..[587,18960+59])
                    Ptyp_constr "list" (typing/typedtree.mli[587,18960+55]..[587,18960+59])
                    [
                      core_type (typing/typedtree.mli[587,18960+45]..[587,18960+54])
                        Ptyp_constr "core_type" (typing/typedtree.mli[587,18960+45]..[587,18960+54])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[588,19020+2]..[588,19020+36])
                "Ttyp_alias" (typing/typedtree.mli[588,19020+4]..[588,19020+14])
                [
                  core_type (typing/typedtree.mli[588,19020+18]..[588,19020+27])
                    Ptyp_constr "core_type" (typing/typedtree.mli[588,19020+18]..[588,19020+27])
                    []
                  core_type (typing/typedtree.mli[588,19020+30]..[588,19020+36])
                    Ptyp_constr "string" (typing/typedtree.mli[588,19020+30]..[588,19020+36])
                    []
                ]
                None
              (typing/typedtree.mli[589,19057+2]..[589,19057+68])
                "Ttyp_variant" (typing/typedtree.mli[589,19057+4]..[589,19057+16])
                [
                  core_type (typing/typedtree.mli[589,19057+20]..[589,19057+34])
                    Ptyp_constr "list" (typing/typedtree.mli[589,19057+30]..[589,19057+34])
                    [
                      core_type (typing/typedtree.mli[589,19057+20]..[589,19057+29])
                        Ptyp_constr "row_field" (typing/typedtree.mli[589,19057+20]..[589,19057+29])
                        []
                    ]
                  core_type (typing/typedtree.mli[589,19057+37]..[589,19057+48])
                    Ptyp_constr "closed_flag" (typing/typedtree.mli[589,19057+37]..[589,19057+48])
                    []
                  core_type (typing/typedtree.mli[589,19057+51]..[589,19057+68])
                    Ptyp_constr "option" (typing/typedtree.mli[589,19057+62]..[589,19057+68])
                    [
                      core_type (typing/typedtree.mli[589,19057+51]..[589,19057+61])
                        Ptyp_constr "list" (typing/typedtree.mli[589,19057+57]..[589,19057+61])
                        [
                          core_type (typing/typedtree.mli[589,19057+51]..[589,19057+56])
                            Ptyp_constr "label" (typing/typedtree.mli[589,19057+51]..[589,19057+56])
                            []
                        ]
                    ]
                ]
                None
              (typing/typedtree.mli[590,19126+2]..[590,19126+40])
                "Ttyp_poly" (typing/typedtree.mli[590,19126+4]..[590,19126+13])
                [
                  core_type (typing/typedtree.mli[590,19126+17]..[590,19126+28])
                    Ptyp_constr "list" (typing/typedtree.mli[590,19126+24]..[590,19126+28])
                    [
                      core_type (typing/typedtree.mli[590,19126+17]..[590,19126+23])
                        Ptyp_constr "string" (typing/typedtree.mli[590,19126+17]..[590,19126+23])
                        []
                    ]
                  core_type (typing/typedtree.mli[590,19126+31]..[590,19126+40])
                    Ptyp_constr "core_type" (typing/typedtree.mli[590,19126+31]..[590,19126+40])
                    []
                ]
                None
              (typing/typedtree.mli[591,19167+2]..[591,19167+32])
                "Ttyp_package" (typing/typedtree.mli[591,19167+4]..[591,19167+16])
                [
                  core_type (typing/typedtree.mli[591,19167+20]..[591,19167+32])
                    Ptyp_constr "package_type" (typing/typedtree.mli[591,19167+20]..[591,19167+32])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "package_type" (typing/typedtree.mli[593,19201+4]..[593,19201+16]) (typing/typedtree.mli[593,19201+0]..[598,19359+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[594,19222+2]..[594,19222+21])
                Immutable
                "pack_path" (typing/typedtree.mli[594,19222+2]..[594,19222+11])                core_type (typing/typedtree.mli[594,19222+14]..[594,19222+20])
                  Ptyp_constr "Path.t" (typing/typedtree.mli[594,19222+14]..[594,19222+20])
                  []
              (typing/typedtree.mli[595,19244+2]..[595,19244+51])
                Immutable
                "pack_fields" (typing/typedtree.mli[595,19244+2]..[595,19244+13])                core_type (typing/typedtree.mli[595,19244+16]..[595,19244+50])
                  Ptyp_constr "list" (typing/typedtree.mli[595,19244+46]..[595,19244+50])
                  [
                    core_type (typing/typedtree.mli[595,19244+17]..[595,19244+44])
                      Ptyp_tuple
                      [
                        core_type (typing/typedtree.mli[595,19244+17]..[595,19244+32])
                          Ptyp_constr "loc" (typing/typedtree.mli[595,19244+29]..[595,19244+32])
                          [
                            core_type (typing/typedtree.mli[595,19244+17]..[595,19244+28])
                              Ptyp_constr "Longident.t" (typing/typedtree.mli[595,19244+17]..[595,19244+28])
                              []
                          ]
                        core_type (typing/typedtree.mli[595,19244+35]..[595,19244+44])
                          Ptyp_constr "core_type" (typing/typedtree.mli[595,19244+35]..[595,19244+44])
                          []
                      ]
                  ]
              (typing/typedtree.mli[596,19296+2]..[596,19296+32])
                Immutable
                "pack_type" (typing/typedtree.mli[596,19296+2]..[596,19296+11])                core_type (typing/typedtree.mli[596,19296+14]..[596,19296+31])
                  Ptyp_constr "Types.module_type" (typing/typedtree.mli[596,19296+14]..[596,19296+31])
                  []
              (typing/typedtree.mli[597,19329+2]..[597,19329+29])
                Immutable
                "pack_txt" (typing/typedtree.mli[597,19329+2]..[597,19329+10])                core_type (typing/typedtree.mli[597,19329+13]..[597,19329+28])
                  Ptyp_constr "loc" (typing/typedtree.mli[597,19329+25]..[597,19329+28])
                  [
                    core_type (typing/typedtree.mli[597,19329+13]..[597,19329+24])
                      Ptyp_constr "Longident.t" (typing/typedtree.mli[597,19329+13]..[597,19329+24])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "row_field" (typing/typedtree.mli[600,19362+4]..[600,19362+13]) (typing/typedtree.mli[600,19362+0]..[604,19461+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[601,19380+2]..[601,19380+27])
                Immutable
                "rf_desc" (typing/typedtree.mli[601,19380+2]..[601,19380+9])                core_type (typing/typedtree.mli[601,19380+12]..[601,19380+26])
                  Ptyp_constr "row_field_desc" (typing/typedtree.mli[601,19380+12]..[601,19380+26])
                  []
              (typing/typedtree.mli[602,19408+2]..[602,19408+22])
                Immutable
                "rf_loc" (typing/typedtree.mli[602,19408+2]..[602,19408+8])                core_type (typing/typedtree.mli[602,19408+11]..[602,19408+21])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[602,19408+11]..[602,19408+21])
                  []
              (typing/typedtree.mli[603,19431+2]..[603,19431+29])
                Immutable
                "rf_attributes" (typing/typedtree.mli[603,19431+2]..[603,19431+15])                core_type (typing/typedtree.mli[603,19431+18]..[603,19431+28])
                  Ptyp_constr "attributes" (typing/typedtree.mli[603,19431+18]..[603,19431+28])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "row_field_desc" (typing/typedtree.mli[606,19464+4]..[606,19464+18]) (typing/typedtree.mli[606,19464+0]..[608,19532+25])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[607,19485+4]..[607,19485+46])
                "Ttag" (typing/typedtree.mli[607,19485+4]..[607,19485+8])
                [
                  core_type (typing/typedtree.mli[607,19485+12]..[607,19485+22])
                    Ptyp_constr "loc" (typing/typedtree.mli[607,19485+19]..[607,19485+22])
                    [
                      core_type (typing/typedtree.mli[607,19485+12]..[607,19485+18])
                        Ptyp_constr "string" (typing/typedtree.mli[607,19485+12]..[607,19485+18])
                        []
                    ]
                  core_type (typing/typedtree.mli[607,19485+25]..[607,19485+29])
                    Ptyp_constr "bool" (typing/typedtree.mli[607,19485+25]..[607,19485+29])
                    []
                  core_type (typing/typedtree.mli[607,19485+32]..[607,19485+46])
                    Ptyp_constr "list" (typing/typedtree.mli[607,19485+42]..[607,19485+46])
                    [
                      core_type (typing/typedtree.mli[607,19485+32]..[607,19485+41])
                        Ptyp_constr "core_type" (typing/typedtree.mli[607,19485+32]..[607,19485+41])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[608,19532+2]..[608,19532+25])
                "Tinherit" (typing/typedtree.mli[608,19532+4]..[608,19532+12])
                [
                  core_type (typing/typedtree.mli[608,19532+16]..[608,19532+25])
                    Ptyp_constr "core_type" (typing/typedtree.mli[608,19532+16]..[608,19532+25])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "object_field" (typing/typedtree.mli[610,19559+4]..[610,19559+16]) (typing/typedtree.mli[610,19559+0]..[614,19664+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[611,19580+2]..[611,19580+30])
                Immutable
                "of_desc" (typing/typedtree.mli[611,19580+2]..[611,19580+9])                core_type (typing/typedtree.mli[611,19580+12]..[611,19580+29])
                  Ptyp_constr "object_field_desc" (typing/typedtree.mli[611,19580+12]..[611,19580+29])
                  []
              (typing/typedtree.mli[612,19611+2]..[612,19611+22])
                Immutable
                "of_loc" (typing/typedtree.mli[612,19611+2]..[612,19611+8])                core_type (typing/typedtree.mli[612,19611+11]..[612,19611+21])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[612,19611+11]..[612,19611+21])
                  []
              (typing/typedtree.mli[613,19634+2]..[613,19634+29])
                Immutable
                "of_attributes" (typing/typedtree.mli[613,19634+2]..[613,19634+15])                core_type (typing/typedtree.mli[613,19634+18]..[613,19634+28])
                  Ptyp_constr "attributes" (typing/typedtree.mli[613,19634+18]..[613,19634+28])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "object_field_desc" (typing/typedtree.mli[616,19667+4]..[616,19667+21]) (typing/typedtree.mli[616,19667+0]..[618,19727+26])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[617,19691+2]..[617,19691+35])
                "OTtag" (typing/typedtree.mli[617,19691+4]..[617,19691+9])
                [
                  core_type (typing/typedtree.mli[617,19691+13]..[617,19691+23])
                    Ptyp_constr "loc" (typing/typedtree.mli[617,19691+20]..[617,19691+23])
                    [
                      core_type (typing/typedtree.mli[617,19691+13]..[617,19691+19])
                        Ptyp_constr "string" (typing/typedtree.mli[617,19691+13]..[617,19691+19])
                        []
                    ]
                  core_type (typing/typedtree.mli[617,19691+26]..[617,19691+35])
                    Ptyp_constr "core_type" (typing/typedtree.mli[617,19691+26]..[617,19691+35])
                    []
                ]
                None
              (typing/typedtree.mli[618,19727+2]..[618,19727+26])
                "OTinherit" (typing/typedtree.mli[618,19727+4]..[618,19727+13])
                [
                  core_type (typing/typedtree.mli[618,19727+17]..[618,19727+26])
                    Ptyp_constr "core_type" (typing/typedtree.mli[618,19727+17]..[618,19727+26])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "value_description" (typing/typedtree.mli[620,19755+4]..[620,19755+21]) (typing/typedtree.mli[620,19755+0]..[628,19973+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[621,19779+4]..[621,19779+20])
                Immutable
                "val_id" (typing/typedtree.mli[621,19779+4]..[621,19779+10])                core_type (typing/typedtree.mli[621,19779+12]..[621,19779+19])
                  Ptyp_constr "Ident.t" (typing/typedtree.mli[621,19779+12]..[621,19779+19])
                  []
              (typing/typedtree.mli[622,19800+4]..[622,19800+25])
                Immutable
                "val_name" (typing/typedtree.mli[622,19800+4]..[622,19800+12])                core_type (typing/typedtree.mli[622,19800+14]..[622,19800+24])
                  Ptyp_constr "loc" (typing/typedtree.mli[622,19800+21]..[622,19800+24])
                  [
                    core_type (typing/typedtree.mli[622,19800+14]..[622,19800+20])
                      Ptyp_constr "string" (typing/typedtree.mli[622,19800+14]..[622,19800+20])
                      []
                  ]
              (typing/typedtree.mli[623,19826+4]..[623,19826+24])
                Immutable
                "val_desc" (typing/typedtree.mli[623,19826+4]..[623,19826+12])                core_type (typing/typedtree.mli[623,19826+14]..[623,19826+23])
                  Ptyp_constr "core_type" (typing/typedtree.mli[623,19826+14]..[623,19826+23])
                  []
              (typing/typedtree.mli[624,19851+4]..[624,19851+37])
                Immutable
                "val_val" (typing/typedtree.mli[624,19851+4]..[624,19851+11])                core_type (typing/typedtree.mli[624,19851+13]..[624,19851+36])
                  Ptyp_constr "Types.value_description" (typing/typedtree.mli[624,19851+13]..[624,19851+36])
                  []
              (typing/typedtree.mli[625,19889+4]..[625,19889+26])
                Immutable
                "val_prim" (typing/typedtree.mli[625,19889+4]..[625,19889+12])                core_type (typing/typedtree.mli[625,19889+14]..[625,19889+25])
                  Ptyp_constr "list" (typing/typedtree.mli[625,19889+21]..[625,19889+25])
                  [
                    core_type (typing/typedtree.mli[625,19889+14]..[625,19889+20])
                      Ptyp_constr "string" (typing/typedtree.mli[625,19889+14]..[625,19889+20])
                      []
                  ]
              (typing/typedtree.mli[626,19916+4]..[626,19916+24])
                Immutable
                "val_loc" (typing/typedtree.mli[626,19916+4]..[626,19916+11])                core_type (typing/typedtree.mli[626,19916+13]..[626,19916+23])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[626,19916+13]..[626,19916+23])
                  []
              (typing/typedtree.mli[627,19941+4]..[627,19941+31])
                Immutable
                "val_attributes" (typing/typedtree.mli[627,19941+4]..[627,19941+18])                core_type (typing/typedtree.mli[627,19941+20]..[627,19941+30])
                  Ptyp_constr "attributes" (typing/typedtree.mli[627,19941+20]..[627,19941+30])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "type_declaration" (typing/typedtree.mli[630,19980+4]..[630,19980+20]) (typing/typedtree.mli[630,19980+0]..[642,20360+4])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[632,20007+4]..[632,20007+20])
                Immutable
                "typ_id" (typing/typedtree.mli[632,20007+4]..[632,20007+10])                core_type (typing/typedtree.mli[632,20007+12]..[632,20007+19])
                  Ptyp_constr "Ident.t" (typing/typedtree.mli[632,20007+12]..[632,20007+19])
                  []
              (typing/typedtree.mli[633,20028+4]..[633,20028+25])
                Immutable
                "typ_name" (typing/typedtree.mli[633,20028+4]..[633,20028+12])                core_type (typing/typedtree.mli[633,20028+14]..[633,20028+24])
                  Ptyp_constr "loc" (typing/typedtree.mli[633,20028+21]..[633,20028+24])
                  [
                    core_type (typing/typedtree.mli[633,20028+14]..[633,20028+20])
                      Ptyp_constr "string" (typing/typedtree.mli[633,20028+14]..[633,20028+20])
                      []
                  ]
              (typing/typedtree.mli[634,20054+4]..[634,20054+60])
                Immutable
                "typ_params" (typing/typedtree.mli[634,20054+4]..[634,20054+14])                core_type (typing/typedtree.mli[634,20054+16]..[634,20054+59])
                  Ptyp_constr "list" (typing/typedtree.mli[634,20054+55]..[634,20054+59])
                  [
                    core_type (typing/typedtree.mli[634,20054+17]..[634,20054+53])
                      Ptyp_tuple
                      [
                        core_type (typing/typedtree.mli[634,20054+17]..[634,20054+26])
                          Ptyp_constr "core_type" (typing/typedtree.mli[634,20054+17]..[634,20054+26])
                          []
                        core_type (typing/typedtree.mli[634,20054+30]..[634,20054+52])
                          Ptyp_tuple
                          [
                            core_type (typing/typedtree.mli[634,20054+30]..[634,20054+38])
                              Ptyp_constr "variance" (typing/typedtree.mli[634,20054+30]..[634,20054+38])
                              []
                            core_type (typing/typedtree.mli[634,20054+41]..[634,20054+52])
                              Ptyp_constr "injectivity" (typing/typedtree.mli[634,20054+41]..[634,20054+52])
                              []
                          ]
                      ]
                  ]
              (typing/typedtree.mli[635,20115+4]..[635,20115+37])
                Immutable
                "typ_type" (typing/typedtree.mli[635,20115+4]..[635,20115+12])                core_type (typing/typedtree.mli[635,20115+14]..[635,20115+36])
                  Ptyp_constr "Types.type_declaration" (typing/typedtree.mli[635,20115+14]..[635,20115+36])
                  []
              (typing/typedtree.mli[636,20153+4]..[636,20153+57])
                Immutable
                "typ_cstrs" (typing/typedtree.mli[636,20153+4]..[636,20153+13])                core_type (typing/typedtree.mli[636,20153+15]..[636,20153+56])
                  Ptyp_constr "list" (typing/typedtree.mli[636,20153+52]..[636,20153+56])
                  [
                    core_type (typing/typedtree.mli[636,20153+16]..[636,20153+50])
                      Ptyp_tuple
                      [
                        core_type (typing/typedtree.mli[636,20153+16]..[636,20153+25])
                          Ptyp_constr "core_type" (typing/typedtree.mli[636,20153+16]..[636,20153+25])
                          []
                        core_type (typing/typedtree.mli[636,20153+28]..[636,20153+37])
                          Ptyp_constr "core_type" (typing/typedtree.mli[636,20153+28]..[636,20153+37])
                          []
                        core_type (typing/typedtree.mli[636,20153+40]..[636,20153+50])
                          Ptyp_constr "Location.t" (typing/typedtree.mli[636,20153+40]..[636,20153+50])
                          []
                      ]
                  ]
              (typing/typedtree.mli[637,20211+4]..[637,20211+24])
                Immutable
                "typ_kind" (typing/typedtree.mli[637,20211+4]..[637,20211+12])                core_type (typing/typedtree.mli[637,20211+14]..[637,20211+23])
                  Ptyp_constr "type_kind" (typing/typedtree.mli[637,20211+14]..[637,20211+23])
                  []
              (typing/typedtree.mli[638,20236+4]..[638,20236+30])
                Immutable
                "typ_private" (typing/typedtree.mli[638,20236+4]..[638,20236+15])                core_type (typing/typedtree.mli[638,20236+17]..[638,20236+29])
                  Ptyp_constr "private_flag" (typing/typedtree.mli[638,20236+17]..[638,20236+29])
                  []
              (typing/typedtree.mli[639,20267+4]..[639,20267+35])
                Immutable
                "typ_manifest" (typing/typedtree.mli[639,20267+4]..[639,20267+16])                core_type (typing/typedtree.mli[639,20267+18]..[639,20267+34])
                  Ptyp_constr "option" (typing/typedtree.mli[639,20267+28]..[639,20267+34])
                  [
                    core_type (typing/typedtree.mli[639,20267+18]..[639,20267+27])
                      Ptyp_constr "core_type" (typing/typedtree.mli[639,20267+18]..[639,20267+27])
                      []
                  ]
              (typing/typedtree.mli[640,20303+4]..[640,20303+24])
                Immutable
                "typ_loc" (typing/typedtree.mli[640,20303+4]..[640,20303+11])                core_type (typing/typedtree.mli[640,20303+13]..[640,20303+23])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[640,20303+13]..[640,20303+23])
                  []
              (typing/typedtree.mli[641,20328+4]..[641,20328+31])
                Immutable
                "typ_attributes" (typing/typedtree.mli[641,20328+4]..[641,20328+18])                core_type (typing/typedtree.mli[641,20328+20]..[641,20328+30])
                  Ptyp_constr "attributes" (typing/typedtree.mli[641,20328+20]..[641,20328+30])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "type_kind" (typing/typedtree.mli[644,20366+4]..[644,20366+13]) (typing/typedtree.mli[644,20366+0]..[648,20494+14])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[645,20382+4]..[645,20382+18])
                "Ttype_abstract" (typing/typedtree.mli[645,20382+4]..[645,20382+18])
                []
                None
              (typing/typedtree.mli[646,20401+2]..[646,20401+49])
                "Ttype_variant" (typing/typedtree.mli[646,20401+4]..[646,20401+17])
                [
                  core_type (typing/typedtree.mli[646,20401+21]..[646,20401+49])
                    Ptyp_constr "list" (typing/typedtree.mli[646,20401+45]..[646,20401+49])
                    [
                      core_type (typing/typedtree.mli[646,20401+21]..[646,20401+44])
                        Ptyp_constr "constructor_declaration" (typing/typedtree.mli[646,20401+21]..[646,20401+44])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[647,20451+2]..[647,20451+42])
                "Ttype_record" (typing/typedtree.mli[647,20451+4]..[647,20451+16])
                [
                  core_type (typing/typedtree.mli[647,20451+20]..[647,20451+42])
                    Ptyp_constr "list" (typing/typedtree.mli[647,20451+38]..[647,20451+42])
                    [
                      core_type (typing/typedtree.mli[647,20451+20]..[647,20451+37])
                        Ptyp_constr "label_declaration" (typing/typedtree.mli[647,20451+20]..[647,20451+37])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[648,20494+2]..[648,20494+14])
                "Ttype_open" (typing/typedtree.mli[648,20494+4]..[648,20494+14])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "label_declaration" (typing/typedtree.mli[650,20510+4]..[650,20510+21]) (typing/typedtree.mli[650,20510+0]..[658,20700+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[652,20540+5]..[652,20540+20])
                Immutable
                "ld_id" (typing/typedtree.mli[652,20540+5]..[652,20540+10])                core_type (typing/typedtree.mli[652,20540+12]..[652,20540+19])
                  Ptyp_constr "Ident.t" (typing/typedtree.mli[652,20540+12]..[652,20540+19])
                  []
              (typing/typedtree.mli[653,20561+5]..[653,20561+25])
                Immutable
                "ld_name" (typing/typedtree.mli[653,20561+5]..[653,20561+12])                core_type (typing/typedtree.mli[653,20561+14]..[653,20561+24])
                  Ptyp_constr "loc" (typing/typedtree.mli[653,20561+21]..[653,20561+24])
                  [
                    core_type (typing/typedtree.mli[653,20561+14]..[653,20561+20])
                      Ptyp_constr "string" (typing/typedtree.mli[653,20561+14]..[653,20561+20])
                      []
                  ]
              (typing/typedtree.mli[654,20587+5]..[654,20587+30])
                Immutable
                "ld_mutable" (typing/typedtree.mli[654,20587+5]..[654,20587+15])                core_type (typing/typedtree.mli[654,20587+17]..[654,20587+29])
                  Ptyp_constr "mutable_flag" (typing/typedtree.mli[654,20587+17]..[654,20587+29])
                  []
              (typing/typedtree.mli[655,20618+5]..[655,20618+24])
                Immutable
                "ld_type" (typing/typedtree.mli[655,20618+5]..[655,20618+12])                core_type (typing/typedtree.mli[655,20618+14]..[655,20618+23])
                  Ptyp_constr "core_type" (typing/typedtree.mli[655,20618+14]..[655,20618+23])
                  []
              (typing/typedtree.mli[656,20643+5]..[656,20643+24])
                Immutable
                "ld_loc" (typing/typedtree.mli[656,20643+5]..[656,20643+11])                core_type (typing/typedtree.mli[656,20643+13]..[656,20643+23])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[656,20643+13]..[656,20643+23])
                  []
              (typing/typedtree.mli[657,20668+5]..[657,20668+31])
                Immutable
                "ld_attributes" (typing/typedtree.mli[657,20668+5]..[657,20668+18])                core_type (typing/typedtree.mli[657,20668+20]..[657,20668+30])
                  Ptyp_constr "attributes" (typing/typedtree.mli[657,20668+20]..[657,20668+30])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "constructor_declaration" (typing/typedtree.mli[660,20707+4]..[660,20707+27]) (typing/typedtree.mli[660,20707+0]..[669,20946+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[662,20743+5]..[662,20743+20])
                Immutable
                "cd_id" (typing/typedtree.mli[662,20743+5]..[662,20743+10])                core_type (typing/typedtree.mli[662,20743+12]..[662,20743+19])
                  Ptyp_constr "Ident.t" (typing/typedtree.mli[662,20743+12]..[662,20743+19])
                  []
              (typing/typedtree.mli[663,20764+5]..[663,20764+25])
                Immutable
                "cd_name" (typing/typedtree.mli[663,20764+5]..[663,20764+12])                core_type (typing/typedtree.mli[663,20764+14]..[663,20764+24])
                  Ptyp_constr "loc" (typing/typedtree.mli[663,20764+21]..[663,20764+24])
                  [
                    core_type (typing/typedtree.mli[663,20764+14]..[663,20764+20])
                      Ptyp_constr "string" (typing/typedtree.mli[663,20764+14]..[663,20764+20])
                      []
                  ]
              (typing/typedtree.mli[664,20790+5]..[664,20790+30])
                Immutable
                "cd_vars" (typing/typedtree.mli[664,20790+5]..[664,20790+12])                core_type (typing/typedtree.mli[664,20790+14]..[664,20790+29])
                  Ptyp_constr "list" (typing/typedtree.mli[664,20790+25]..[664,20790+29])
                  [
                    core_type (typing/typedtree.mli[664,20790+14]..[664,20790+24])
                      Ptyp_constr "loc" (typing/typedtree.mli[664,20790+21]..[664,20790+24])
                      [
                        core_type (typing/typedtree.mli[664,20790+14]..[664,20790+20])
                          Ptyp_constr "string" (typing/typedtree.mli[664,20790+14]..[664,20790+20])
                          []
                      ]
                  ]
              (typing/typedtree.mli[665,20821+5]..[665,20821+36])
                Immutable
                "cd_args" (typing/typedtree.mli[665,20821+5]..[665,20821+12])                core_type (typing/typedtree.mli[665,20821+14]..[665,20821+35])
                  Ptyp_constr "constructor_arguments" (typing/typedtree.mli[665,20821+14]..[665,20821+35])
                  []
              (typing/typedtree.mli[666,20858+5]..[666,20858+30])
                Immutable
                "cd_res" (typing/typedtree.mli[666,20858+5]..[666,20858+11])                core_type (typing/typedtree.mli[666,20858+13]..[666,20858+29])
                  Ptyp_constr "option" (typing/typedtree.mli[666,20858+23]..[666,20858+29])
                  [
                    core_type (typing/typedtree.mli[666,20858+13]..[666,20858+22])
                      Ptyp_constr "core_type" (typing/typedtree.mli[666,20858+13]..[666,20858+22])
                      []
                  ]
              (typing/typedtree.mli[667,20889+5]..[667,20889+24])
                Immutable
                "cd_loc" (typing/typedtree.mli[667,20889+5]..[667,20889+11])                core_type (typing/typedtree.mli[667,20889+13]..[667,20889+23])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[667,20889+13]..[667,20889+23])
                  []
              (typing/typedtree.mli[668,20914+5]..[668,20914+31])
                Immutable
                "cd_attributes" (typing/typedtree.mli[668,20914+5]..[668,20914+18])                core_type (typing/typedtree.mli[668,20914+20]..[668,20914+30])
                  Ptyp_constr "attributes" (typing/typedtree.mli[668,20914+20]..[668,20914+30])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "constructor_arguments" (typing/typedtree.mli[671,20953+4]..[671,20953+25]) (typing/typedtree.mli[671,20953+0]..[673,21014+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[672,20981+2]..[672,20981+32])
                "Cstr_tuple" (typing/typedtree.mli[672,20981+4]..[672,20981+14])
                [
                  core_type (typing/typedtree.mli[672,20981+18]..[672,20981+32])
                    Ptyp_constr "list" (typing/typedtree.mli[672,20981+28]..[672,20981+32])
                    [
                      core_type (typing/typedtree.mli[672,20981+18]..[672,20981+27])
                        Ptyp_constr "core_type" (typing/typedtree.mli[672,20981+18]..[672,20981+27])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[673,21014+2]..[673,21014+41])
                "Cstr_record" (typing/typedtree.mli[673,21014+4]..[673,21014+15])
                [
                  core_type (typing/typedtree.mli[673,21014+19]..[673,21014+41])
                    Ptyp_constr "list" (typing/typedtree.mli[673,21014+37]..[673,21014+41])
                    [
                      core_type (typing/typedtree.mli[673,21014+19]..[673,21014+36])
                        Ptyp_constr "label_declaration" (typing/typedtree.mli[673,21014+19]..[673,21014+36])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "type_extension" (typing/typedtree.mli[675,21057+4]..[675,21057+18]) (typing/typedtree.mli[675,21057+0]..[684,21347+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[677,21082+4]..[677,21082+23])
                Immutable
                "tyext_path" (typing/typedtree.mli[677,21082+4]..[677,21082+14])                core_type (typing/typedtree.mli[677,21082+16]..[677,21082+22])
                  Ptyp_constr "Path.t" (typing/typedtree.mli[677,21082+16]..[677,21082+22])
                  []
              (typing/typedtree.mli[678,21106+4]..[678,21106+31])
                Immutable
                "tyext_txt" (typing/typedtree.mli[678,21106+4]..[678,21106+13])                core_type (typing/typedtree.mli[678,21106+15]..[678,21106+30])
                  Ptyp_constr "loc" (typing/typedtree.mli[678,21106+27]..[678,21106+30])
                  [
                    core_type (typing/typedtree.mli[678,21106+15]..[678,21106+26])
                      Ptyp_constr "Longident.t" (typing/typedtree.mli[678,21106+15]..[678,21106+26])
                      []
                  ]
              (typing/typedtree.mli[679,21138+4]..[679,21138+62])
                Immutable
                "tyext_params" (typing/typedtree.mli[679,21138+4]..[679,21138+16])                core_type (typing/typedtree.mli[679,21138+18]..[679,21138+61])
                  Ptyp_constr "list" (typing/typedtree.mli[679,21138+57]..[679,21138+61])
                  [
                    core_type (typing/typedtree.mli[679,21138+19]..[679,21138+55])
                      Ptyp_tuple
                      [
                        core_type (typing/typedtree.mli[679,21138+19]..[679,21138+28])
                          Ptyp_constr "core_type" (typing/typedtree.mli[679,21138+19]..[679,21138+28])
                          []
                        core_type (typing/typedtree.mli[679,21138+32]..[679,21138+54])
                          Ptyp_tuple
                          [
                            core_type (typing/typedtree.mli[679,21138+32]..[679,21138+40])
                              Ptyp_constr "variance" (typing/typedtree.mli[679,21138+32]..[679,21138+40])
                              []
                            core_type (typing/typedtree.mli[679,21138+43]..[679,21138+54])
                              Ptyp_constr "injectivity" (typing/typedtree.mli[679,21138+43]..[679,21138+54])
                              []
                          ]
                      ]
                  ]
              (typing/typedtree.mli[680,21201+4]..[680,21201+51])
                Immutable
                "tyext_constructors" (typing/typedtree.mli[680,21201+4]..[680,21201+22])                core_type (typing/typedtree.mli[680,21201+24]..[680,21201+50])
                  Ptyp_constr "list" (typing/typedtree.mli[680,21201+46]..[680,21201+50])
                  [
                    core_type (typing/typedtree.mli[680,21201+24]..[680,21201+45])
                      Ptyp_constr "extension_constructor" (typing/typedtree.mli[680,21201+24]..[680,21201+45])
                      []
                  ]
              (typing/typedtree.mli[681,21253+4]..[681,21253+32])
                Immutable
                "tyext_private" (typing/typedtree.mli[681,21253+4]..[681,21253+17])                core_type (typing/typedtree.mli[681,21253+19]..[681,21253+31])
                  Ptyp_constr "private_flag" (typing/typedtree.mli[681,21253+19]..[681,21253+31])
                  []
              (typing/typedtree.mli[682,21286+4]..[682,21286+26])
                Immutable
                "tyext_loc" (typing/typedtree.mli[682,21286+4]..[682,21286+13])                core_type (typing/typedtree.mli[682,21286+15]..[682,21286+25])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[682,21286+15]..[682,21286+25])
                  []
              (typing/typedtree.mli[683,21313+4]..[683,21313+33])
                Immutable
                "tyext_attributes" (typing/typedtree.mli[683,21313+4]..[683,21313+20])                core_type (typing/typedtree.mli[683,21313+22]..[683,21313+32])
                  Ptyp_constr "attributes" (typing/typedtree.mli[683,21313+22]..[683,21313+32])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "type_exception" (typing/typedtree.mli[686,21352+4]..[686,21352+18]) (typing/typedtree.mli[686,21352+0]..[691,21488+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[688,21377+4]..[688,21377+45])
                Immutable
                "tyexn_constructor" (typing/typedtree.mli[688,21377+4]..[688,21377+21])                core_type (typing/typedtree.mli[688,21377+23]..[688,21377+44])
                  Ptyp_constr "extension_constructor" (typing/typedtree.mli[688,21377+23]..[688,21377+44])
                  []
              (typing/typedtree.mli[689,21423+4]..[689,21423+26])
                Immutable
                "tyexn_loc" (typing/typedtree.mli[689,21423+4]..[689,21423+13])                core_type (typing/typedtree.mli[689,21423+15]..[689,21423+25])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[689,21423+15]..[689,21423+25])
                  []
              (typing/typedtree.mli[690,21450+4]..[690,21450+37])
                Immutable
                "tyexn_attributes" (typing/typedtree.mli[690,21450+4]..[690,21450+20])                core_type (typing/typedtree.mli[690,21450+22]..[690,21450+36])
                  Ptyp_constr "list" (typing/typedtree.mli[690,21450+32]..[690,21450+36])
                  [
                    core_type (typing/typedtree.mli[690,21450+22]..[690,21450+31])
                      Ptyp_constr "attribute" (typing/typedtree.mli[690,21450+22]..[690,21450+31])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "extension_constructor" (typing/typedtree.mli[693,21493+4]..[693,21493+25]) (typing/typedtree.mli[693,21493+0]..[701,21717+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[695,21525+4]..[695,21525+20])
                Immutable
                "ext_id" (typing/typedtree.mli[695,21525+4]..[695,21525+10])                core_type (typing/typedtree.mli[695,21525+12]..[695,21525+19])
                  Ptyp_constr "Ident.t" (typing/typedtree.mli[695,21525+12]..[695,21525+19])
                  []
              (typing/typedtree.mli[696,21546+4]..[696,21546+25])
                Immutable
                "ext_name" (typing/typedtree.mli[696,21546+4]..[696,21546+12])                core_type (typing/typedtree.mli[696,21546+14]..[696,21546+24])
                  Ptyp_constr "loc" (typing/typedtree.mli[696,21546+21]..[696,21546+24])
                  [
                    core_type (typing/typedtree.mli[696,21546+14]..[696,21546+20])
                      Ptyp_constr "string" (typing/typedtree.mli[696,21546+14]..[696,21546+20])
                      []
                  ]
              (typing/typedtree.mli[697,21572+4]..[697,21572+43])
                Immutable
                "ext_type" (typing/typedtree.mli[697,21572+4]..[697,21572+12])                core_type (typing/typedtree.mli[697,21572+15]..[697,21572+42])
                  Ptyp_constr "Types.extension_constructor" (typing/typedtree.mli[697,21572+15]..[697,21572+42])
                  []
              (typing/typedtree.mli[698,21616+4]..[698,21616+42])
                Immutable
                "ext_kind" (typing/typedtree.mli[698,21616+4]..[698,21616+12])                core_type (typing/typedtree.mli[698,21616+15]..[698,21616+41])
                  Ptyp_constr "extension_constructor_kind" (typing/typedtree.mli[698,21616+15]..[698,21616+41])
                  []
              (typing/typedtree.mli[699,21659+4]..[699,21659+25])
                Immutable
                "ext_loc" (typing/typedtree.mli[699,21659+4]..[699,21659+11])                core_type (typing/typedtree.mli[699,21659+14]..[699,21659+24])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[699,21659+14]..[699,21659+24])
                  []
              (typing/typedtree.mli[700,21685+4]..[700,21685+31])
                Immutable
                "ext_attributes" (typing/typedtree.mli[700,21685+4]..[700,21685+18])                core_type (typing/typedtree.mli[700,21685+20]..[700,21685+30])
                  Ptyp_constr "attributes" (typing/typedtree.mli[700,21685+20]..[700,21685+30])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "extension_constructor_kind" (typing/typedtree.mli[703,21722+4]..[703,21722+30]) (typing/typedtree.mli[703,21722+0]..[705,21831+43])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[704,21755+4]..[704,21755+75])
                "Text_decl" (typing/typedtree.mli[704,21755+4]..[704,21755+13])
                [
                  core_type (typing/typedtree.mli[704,21755+17]..[704,21755+32])
                    Ptyp_constr "list" (typing/typedtree.mli[704,21755+28]..[704,21755+32])
                    [
                      core_type (typing/typedtree.mli[704,21755+17]..[704,21755+27])
                        Ptyp_constr "loc" (typing/typedtree.mli[704,21755+24]..[704,21755+27])
                        [
                          core_type (typing/typedtree.mli[704,21755+17]..[704,21755+23])
                            Ptyp_constr "string" (typing/typedtree.mli[704,21755+17]..[704,21755+23])
                            []
                        ]
                    ]
                  core_type (typing/typedtree.mli[704,21755+35]..[704,21755+56])
                    Ptyp_constr "constructor_arguments" (typing/typedtree.mli[704,21755+35]..[704,21755+56])
                    []
                  core_type (typing/typedtree.mli[704,21755+59]..[704,21755+75])
                    Ptyp_constr "option" (typing/typedtree.mli[704,21755+69]..[704,21755+75])
                    [
                      core_type (typing/typedtree.mli[704,21755+59]..[704,21755+68])
                        Ptyp_constr "core_type" (typing/typedtree.mli[704,21755+59]..[704,21755+68])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[705,21831+2]..[705,21831+43])
                "Text_rebind" (typing/typedtree.mli[705,21831+4]..[705,21831+15])
                [
                  core_type (typing/typedtree.mli[705,21831+19]..[705,21831+25])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[705,21831+19]..[705,21831+25])
                    []
                  core_type (typing/typedtree.mli[705,21831+28]..[705,21831+43])
                    Ptyp_constr "loc" (typing/typedtree.mli[705,21831+40]..[705,21831+43])
                    [
                      core_type (typing/typedtree.mli[705,21831+28]..[705,21831+39])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[705,21831+28]..[705,21831+39])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "class_type" (typing/typedtree.mli[707,21876+4]..[707,21876+14]) (typing/typedtree.mli[707,21876+0]..[714,22054+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[709,21899+5]..[709,21899+33])
                Immutable
                "cltyp_desc" (typing/typedtree.mli[709,21899+5]..[709,21899+15])                core_type (typing/typedtree.mli[709,21899+17]..[709,21899+32])
                  Ptyp_constr "class_type_desc" (typing/typedtree.mli[709,21899+17]..[709,21899+32])
                  []
              (typing/typedtree.mli[710,21933+5]..[710,21933+34])
                Immutable
                "cltyp_type" (typing/typedtree.mli[710,21933+5]..[710,21933+15])                core_type (typing/typedtree.mli[710,21933+17]..[710,21933+33])
                  Ptyp_constr "Types.class_type" (typing/typedtree.mli[710,21933+17]..[710,21933+33])
                  []
              (typing/typedtree.mli[711,21968+5]..[711,21968+22])
                Immutable
                "cltyp_env" (typing/typedtree.mli[711,21968+5]..[711,21968+14])                core_type (typing/typedtree.mli[711,21968+16]..[711,21968+21])
                  Ptyp_constr "Env.t" (typing/typedtree.mli[711,21968+16]..[711,21968+21])
                  []
              (typing/typedtree.mli[712,21991+5]..[712,21991+27])
                Immutable
                "cltyp_loc" (typing/typedtree.mli[712,21991+5]..[712,21991+14])                core_type (typing/typedtree.mli[712,21991+16]..[712,21991+26])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[712,21991+16]..[712,21991+26])
                  []
              (typing/typedtree.mli[713,22019+5]..[713,22019+34])
                Immutable
                "cltyp_attributes" (typing/typedtree.mli[713,22019+5]..[713,22019+21])                core_type (typing/typedtree.mli[713,22019+23]..[713,22019+33])
                  Ptyp_constr "attributes" (typing/typedtree.mli[713,22019+23]..[713,22019+33])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "class_type_desc" (typing/typedtree.mli[716,22061+4]..[716,22061+19]) (typing/typedtree.mli[716,22061+0]..[720,22235+46])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[717,22083+4]..[717,22083+60])
                "Tcty_constr" (typing/typedtree.mli[717,22083+4]..[717,22083+15])
                [
                  core_type (typing/typedtree.mli[717,22083+19]..[717,22083+25])
                    Ptyp_constr "Path.t" (typing/typedtree.mli[717,22083+19]..[717,22083+25])
                    []
                  core_type (typing/typedtree.mli[717,22083+28]..[717,22083+43])
                    Ptyp_constr "loc" (typing/typedtree.mli[717,22083+40]..[717,22083+43])
                    [
                      core_type (typing/typedtree.mli[717,22083+28]..[717,22083+39])
                        Ptyp_constr "Longident.t" (typing/typedtree.mli[717,22083+28]..[717,22083+39])
                        []
                    ]
                  core_type (typing/typedtree.mli[717,22083+46]..[717,22083+60])
                    Ptyp_constr "list" (typing/typedtree.mli[717,22083+56]..[717,22083+60])
                    [
                      core_type (typing/typedtree.mli[717,22083+46]..[717,22083+55])
                        Ptyp_constr "core_type" (typing/typedtree.mli[717,22083+46]..[717,22083+55])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[718,22144+2]..[718,22144+37])
                "Tcty_signature" (typing/typedtree.mli[718,22144+4]..[718,22144+18])
                [
                  core_type (typing/typedtree.mli[718,22144+22]..[718,22144+37])
                    Ptyp_constr "class_signature" (typing/typedtree.mli[718,22144+22]..[718,22144+37])
                    []
                ]
                None
              (typing/typedtree.mli[719,22182+2]..[719,22182+52])
                "Tcty_arrow" (typing/typedtree.mli[719,22182+4]..[719,22182+14])
                [
                  core_type (typing/typedtree.mli[719,22182+18]..[719,22182+27])
                    Ptyp_constr "arg_label" (typing/typedtree.mli[719,22182+18]..[719,22182+27])
                    []
                  core_type (typing/typedtree.mli[719,22182+30]..[719,22182+39])
                    Ptyp_constr "core_type" (typing/typedtree.mli[719,22182+30]..[719,22182+39])
                    []
                  core_type (typing/typedtree.mli[719,22182+42]..[719,22182+52])
                    Ptyp_constr "class_type" (typing/typedtree.mli[719,22182+42]..[719,22182+52])
                    []
                ]
                None
              (typing/typedtree.mli[720,22235+2]..[720,22235+46])
                "Tcty_open" (typing/typedtree.mli[720,22235+4]..[720,22235+13])
                [
                  core_type (typing/typedtree.mli[720,22235+17]..[720,22235+33])
                    Ptyp_constr "open_description" (typing/typedtree.mli[720,22235+17]..[720,22235+33])
                    []
                  core_type (typing/typedtree.mli[720,22235+36]..[720,22235+46])
                    Ptyp_constr "class_type" (typing/typedtree.mli[720,22235+36]..[720,22235+46])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "class_signature" (typing/typedtree.mli[722,22283+4]..[722,22283+19]) (typing/typedtree.mli[722,22283+0]..[726,22414+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[723,22307+4]..[723,22307+26])
                Immutable
                "csig_self" (typing/typedtree.mli[723,22307+4]..[723,22307+13])                core_type (typing/typedtree.mli[723,22307+16]..[723,22307+25])
                  Ptyp_constr "core_type" (typing/typedtree.mli[723,22307+16]..[723,22307+25])
                  []
              (typing/typedtree.mli[724,22334+4]..[724,22334+40])
                Immutable
                "csig_fields" (typing/typedtree.mli[724,22334+4]..[724,22334+15])                core_type (typing/typedtree.mli[724,22334+18]..[724,22334+39])
                  Ptyp_constr "list" (typing/typedtree.mli[724,22334+35]..[724,22334+39])
                  [
                    core_type (typing/typedtree.mli[724,22334+18]..[724,22334+34])
                      Ptyp_constr "class_type_field" (typing/typedtree.mli[724,22334+18]..[724,22334+34])
                      []
                  ]
              (typing/typedtree.mli[725,22375+4]..[725,22375+38])
                Immutable
                "csig_type" (typing/typedtree.mli[725,22375+4]..[725,22375+13])                core_type (typing/typedtree.mli[725,22375+16]..[725,22375+37])
                  Ptyp_constr "Types.class_signature" (typing/typedtree.mli[725,22375+16]..[725,22375+37])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "class_type_field" (typing/typedtree.mli[728,22419+4]..[728,22419+20]) (typing/typedtree.mli[728,22419+0]..[732,22538+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[729,22444+4]..[729,22444+36])
                Immutable
                "ctf_desc" (typing/typedtree.mli[729,22444+4]..[729,22444+12])                core_type (typing/typedtree.mli[729,22444+14]..[729,22444+35])
                  Ptyp_constr "class_type_field_desc" (typing/typedtree.mli[729,22444+14]..[729,22444+35])
                  []
              (typing/typedtree.mli[730,22481+4]..[730,22481+24])
                Immutable
                "ctf_loc" (typing/typedtree.mli[730,22481+4]..[730,22481+11])                core_type (typing/typedtree.mli[730,22481+13]..[730,22481+23])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[730,22481+13]..[730,22481+23])
                  []
              (typing/typedtree.mli[731,22506+4]..[731,22506+31])
                Immutable
                "ctf_attributes" (typing/typedtree.mli[731,22506+4]..[731,22506+18])                core_type (typing/typedtree.mli[731,22506+20]..[731,22506+30])
                  Ptyp_constr "attributes" (typing/typedtree.mli[731,22506+20]..[731,22506+30])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "class_type_field_desc" (typing/typedtree.mli[734,22543+4]..[734,22543+25]) (typing/typedtree.mli[734,22543+0]..[739,22786+31])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typedtree.mli[735,22571+2]..[735,22571+30])
                "Tctf_inherit" (typing/typedtree.mli[735,22571+4]..[735,22571+16])
                [
                  core_type (typing/typedtree.mli[735,22571+20]..[735,22571+30])
                    Ptyp_constr "class_type" (typing/typedtree.mli[735,22571+20]..[735,22571+30])
                    []
                ]
                None
              (typing/typedtree.mli[736,22602+2]..[736,22602+66])
                "Tctf_val" (typing/typedtree.mli[736,22602+4]..[736,22602+12])
                [
                  core_type (typing/typedtree.mli[736,22602+17]..[736,22602+65])
                    Ptyp_tuple
                    [
                      core_type (typing/typedtree.mli[736,22602+17]..[736,22602+23])
                        Ptyp_constr "string" (typing/typedtree.mli[736,22602+17]..[736,22602+23])
                        []
                      core_type (typing/typedtree.mli[736,22602+26]..[736,22602+38])
                        Ptyp_constr "mutable_flag" (typing/typedtree.mli[736,22602+26]..[736,22602+38])
                        []
                      core_type (typing/typedtree.mli[736,22602+41]..[736,22602+53])
                        Ptyp_constr "virtual_flag" (typing/typedtree.mli[736,22602+41]..[736,22602+53])
                        []
                      core_type (typing/typedtree.mli[736,22602+56]..[736,22602+65])
                        Ptyp_constr "core_type" (typing/typedtree.mli[736,22602+56]..[736,22602+65])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[737,22669+2]..[737,22669+69])
                "Tctf_method" (typing/typedtree.mli[737,22669+4]..[737,22669+15])
                [
                  core_type (typing/typedtree.mli[737,22669+20]..[737,22669+68])
                    Ptyp_tuple
                    [
                      core_type (typing/typedtree.mli[737,22669+20]..[737,22669+26])
                        Ptyp_constr "string" (typing/typedtree.mli[737,22669+20]..[737,22669+26])
                        []
                      core_type (typing/typedtree.mli[737,22669+29]..[737,22669+41])
                        Ptyp_constr "private_flag" (typing/typedtree.mli[737,22669+29]..[737,22669+41])
                        []
                      core_type (typing/typedtree.mli[737,22669+44]..[737,22669+56])
                        Ptyp_constr "virtual_flag" (typing/typedtree.mli[737,22669+44]..[737,22669+56])
                        []
                      core_type (typing/typedtree.mli[737,22669+59]..[737,22669+68])
                        Ptyp_constr "core_type" (typing/typedtree.mli[737,22669+59]..[737,22669+68])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[738,22739+2]..[738,22739+46])
                "Tctf_constraint" (typing/typedtree.mli[738,22739+4]..[738,22739+19])
                [
                  core_type (typing/typedtree.mli[738,22739+24]..[738,22739+45])
                    Ptyp_tuple
                    [
                      core_type (typing/typedtree.mli[738,22739+24]..[738,22739+33])
                        Ptyp_constr "core_type" (typing/typedtree.mli[738,22739+24]..[738,22739+33])
                        []
                      core_type (typing/typedtree.mli[738,22739+36]..[738,22739+45])
                        Ptyp_constr "core_type" (typing/typedtree.mli[738,22739+36]..[738,22739+45])
                        []
                    ]
                ]
                None
              (typing/typedtree.mli[739,22786+2]..[739,22786+31])
                "Tctf_attribute" (typing/typedtree.mli[739,22786+4]..[739,22786+18])
                [
                  core_type (typing/typedtree.mli[739,22786+22]..[739,22786+31])
                    Ptyp_constr "attribute" (typing/typedtree.mli[739,22786+22]..[739,22786+31])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "class_declaration" (typing/typedtree.mli[741,22819+4]..[741,22819+21]) (typing/typedtree.mli[741,22819+0]..[742,22843+24])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/typedtree.mli[742,22843+2]..[742,22843+24])
              Ptyp_constr "class_infos" (typing/typedtree.mli[742,22843+13]..[742,22843+24])
              [
                core_type (typing/typedtree.mli[742,22843+2]..[742,22843+12])
                  Ptyp_constr "class_expr" (typing/typedtree.mli[742,22843+2]..[742,22843+12])
                  []
              ]
      type_declaration "class_description" (typing/typedtree.mli[744,22869+4]..[744,22869+21]) (typing/typedtree.mli[744,22869+0]..[745,22893+24])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/typedtree.mli[745,22893+2]..[745,22893+24])
              Ptyp_constr "class_infos" (typing/typedtree.mli[745,22893+13]..[745,22893+24])
              [
                core_type (typing/typedtree.mli[745,22893+2]..[745,22893+12])
                  Ptyp_constr "class_type" (typing/typedtree.mli[745,22893+2]..[745,22893+12])
                  []
              ]
      type_declaration "class_type_declaration" (typing/typedtree.mli[747,22919+4]..[747,22919+26]) (typing/typedtree.mli[747,22919+0]..[748,22948+24])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/typedtree.mli[748,22948+2]..[748,22948+24])
              Ptyp_constr "class_infos" (typing/typedtree.mli[748,22948+13]..[748,22948+24])
              [
                core_type (typing/typedtree.mli[748,22948+2]..[748,22948+12])
                  Ptyp_constr "class_type" (typing/typedtree.mli[748,22948+2]..[748,22948+12])
                  []
              ]
      type_declaration "class_infos" (typing/typedtree.mli[750,22974+7]..[750,22974+18]) (typing/typedtree.mli[750,22974+0]..[763,23386+4])
        ptype_params =
          [
            core_type (typing/typedtree.mli[750,22974+4]..[750,22974+6])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[751,22995+4]..[751,22995+26])
                Immutable
                "ci_virt" (typing/typedtree.mli[751,22995+4]..[751,22995+11])                core_type (typing/typedtree.mli[751,22995+13]..[751,22995+25])
                  Ptyp_constr "virtual_flag" (typing/typedtree.mli[751,22995+13]..[751,22995+25])
                  []
              (typing/typedtree.mli[752,23022+4]..[752,23022+59])
                Immutable
                "ci_params" (typing/typedtree.mli[752,23022+4]..[752,23022+13])                core_type (typing/typedtree.mli[752,23022+15]..[752,23022+58])
                  Ptyp_constr "list" (typing/typedtree.mli[752,23022+54]..[752,23022+58])
                  [
                    core_type (typing/typedtree.mli[752,23022+16]..[752,23022+52])
                      Ptyp_tuple
                      [
                        core_type (typing/typedtree.mli[752,23022+16]..[752,23022+25])
                          Ptyp_constr "core_type" (typing/typedtree.mli[752,23022+16]..[752,23022+25])
                          []
                        core_type (typing/typedtree.mli[752,23022+29]..[752,23022+51])
                          Ptyp_tuple
                          [
                            core_type (typing/typedtree.mli[752,23022+29]..[752,23022+37])
                              Ptyp_constr "variance" (typing/typedtree.mli[752,23022+29]..[752,23022+37])
                              []
                            core_type (typing/typedtree.mli[752,23022+40]..[752,23022+51])
                              Ptyp_constr "injectivity" (typing/typedtree.mli[752,23022+40]..[752,23022+51])
                              []
                          ]
                      ]
                  ]
              (typing/typedtree.mli[753,23082+4]..[753,23082+28])
                Immutable
                "ci_id_name" (typing/typedtree.mli[753,23082+4]..[753,23082+14])                core_type (typing/typedtree.mli[753,23082+17]..[753,23082+27])
                  Ptyp_constr "loc" (typing/typedtree.mli[753,23082+24]..[753,23082+27])
                  [
                    core_type (typing/typedtree.mli[753,23082+17]..[753,23082+23])
                      Ptyp_constr "string" (typing/typedtree.mli[753,23082+17]..[753,23082+23])
                      []
                  ]
              (typing/typedtree.mli[754,23111+4]..[754,23111+25])
                Immutable
                "ci_id_class" (typing/typedtree.mli[754,23111+4]..[754,23111+15])                core_type (typing/typedtree.mli[754,23111+17]..[754,23111+24])
                  Ptyp_constr "Ident.t" (typing/typedtree.mli[754,23111+17]..[754,23111+24])
                  []
              (typing/typedtree.mli[755,23137+4]..[755,23137+31])
                Immutable
                "ci_id_class_type" (typing/typedtree.mli[755,23137+4]..[755,23137+20])                core_type (typing/typedtree.mli[755,23137+23]..[755,23137+30])
                  Ptyp_constr "Ident.t" (typing/typedtree.mli[755,23137+23]..[755,23137+30])
                  []
              (typing/typedtree.mli[756,23169+4]..[756,23169+27])
                Immutable
                "ci_id_object" (typing/typedtree.mli[756,23169+4]..[756,23169+16])                core_type (typing/typedtree.mli[756,23169+19]..[756,23169+26])
                  Ptyp_constr "Ident.t" (typing/typedtree.mli[756,23169+19]..[756,23169+26])
                  []
              (typing/typedtree.mli[757,23197+4]..[757,23197+29])
                Immutable
                "ci_id_typehash" (typing/typedtree.mli[757,23197+4]..[757,23197+18])                core_type (typing/typedtree.mli[757,23197+21]..[757,23197+28])
                  Ptyp_constr "Ident.t" (typing/typedtree.mli[757,23197+21]..[757,23197+28])
                  []
              (typing/typedtree.mli[758,23227+4]..[758,23227+16])
                Immutable
                "ci_expr" (typing/typedtree.mli[758,23227+4]..[758,23227+11])                core_type (typing/typedtree.mli[758,23227+13]..[758,23227+15])
                  Ptyp_var a
              (typing/typedtree.mli[759,23244+4]..[759,23244+37])
                Immutable
                "ci_decl" (typing/typedtree.mli[759,23244+4]..[759,23244+11])                core_type (typing/typedtree.mli[759,23244+13]..[759,23244+36])
                  Ptyp_constr "Types.class_declaration" (typing/typedtree.mli[759,23244+13]..[759,23244+36])
                  []
              (typing/typedtree.mli[760,23282+4]..[760,23282+48])
                Immutable
                "ci_type_decl" (typing/typedtree.mli[760,23282+4]..[760,23282+16])                core_type (typing/typedtree.mli[760,23282+19]..[760,23282+47])
                  Ptyp_constr "Types.class_type_declaration" (typing/typedtree.mli[760,23282+19]..[760,23282+47])
                  []
              (typing/typedtree.mli[761,23331+4]..[761,23331+23])
                Immutable
                "ci_loc" (typing/typedtree.mli[761,23331+4]..[761,23331+10])                core_type (typing/typedtree.mli[761,23331+12]..[761,23331+22])
                  Ptyp_constr "Location.t" (typing/typedtree.mli[761,23331+12]..[761,23331+22])
                  []
              (typing/typedtree.mli[762,23355+4]..[762,23355+30])
                Immutable
                "ci_attributes" (typing/typedtree.mli[762,23355+4]..[762,23355+17])                core_type (typing/typedtree.mli[762,23355+19]..[762,23355+29])
                  Ptyp_constr "attributes" (typing/typedtree.mli[762,23355+19]..[762,23355+29])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/typedtree.mli[765,23392+0]..[769,23498+1])
    Psig_type Rec
    [
      type_declaration "implementation" (typing/typedtree.mli[765,23392+5]..[765,23392+19]) (typing/typedtree.mli[765,23392+0]..[769,23498+1])
        attribute "ocaml.doc"
          [
            structure_item (typing/typedtree.mli[770,23500+0]..[778,23854+2])
              Pstr_eval
              expression (typing/typedtree.mli[770,23500+0]..[778,23854+2])
                Pexp_constant PConst_string(" A typechecked implementation including its module structure, its exported\n    signature, and a coercion of the module against that signature.\n\n    If an .mli file is present, the signature will come from that file and be\n    the exported signature of the module.\n\n    If there isn't one, the signature will be inferred from the module\n    structure.\n",(typing/typedtree.mli[770,23500+0]..[778,23854+2]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[766,23416+2]..[766,23416+23])
                Immutable
                "structure" (typing/typedtree.mli[766,23416+2]..[766,23416+11])                core_type (typing/typedtree.mli[766,23416+13]..[766,23416+22])
                  Ptyp_constr "structure" (typing/typedtree.mli[766,23416+13]..[766,23416+22])
                  []
              (typing/typedtree.mli[767,23440+2]..[767,23440+28])
                Immutable
                "coercion" (typing/typedtree.mli[767,23440+2]..[767,23440+10])                core_type (typing/typedtree.mli[767,23440+12]..[767,23440+27])
                  Ptyp_constr "module_coercion" (typing/typedtree.mli[767,23440+12]..[767,23440+27])
                  []
              (typing/typedtree.mli[768,23469+2]..[768,23469+28])
                Immutable
                "signature" (typing/typedtree.mli[768,23469+2]..[768,23469+11])                core_type (typing/typedtree.mli[768,23469+13]..[768,23469+28])
                  Ptyp_constr "Types.signature" (typing/typedtree.mli[768,23469+13]..[768,23469+28])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/typedtree.mli[786,24151+0]..[786,24151+66])
    Psig_value
    value_description "as_computation_pattern" (typing/typedtree.mli[786,24151+4]..[786,24151+26]) (typing/typedtree.mli[786,24151+0]..[786,24151+66])
      attribute "ocaml.doc"
        [
          structure_item (typing/typedtree.mli[782,23901+0]..[785,24118+32])
            Pstr_eval
            expression (typing/typedtree.mli[782,23901+0]..[785,24118+32])
              Pexp_constant PConst_string(" [as_computation_pattern p] is a computation pattern with description\n    [Tpat_value p], which enforces a correct placement of pat_attributes\n    and pat_extra metadata (on the inner value pattern, rather than on\n    the computation pattern). ",(typing/typedtree.mli[782,23901+0]..[785,24118+32]),None)
        ]
      core_type (typing/typedtree.mli[786,24151+28]..[786,24151+66])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[786,24151+28]..[786,24151+35])
          Ptyp_constr "pattern" (typing/typedtree.mli[786,24151+28]..[786,24151+35])
          []
        core_type (typing/typedtree.mli[786,24151+39]..[786,24151+66])
          Ptyp_constr "general_pattern" (typing/typedtree.mli[786,24151+51]..[786,24151+66])
          [
            core_type (typing/typedtree.mli[786,24151+39]..[786,24151+50])
              Ptyp_constr "computation" (typing/typedtree.mli[786,24151+39]..[786,24151+50])
              []
          ]
      []
  signature_item (typing/typedtree.mli[788,24219+0]..[788,24219+65])
    Psig_value
    value_description "classify_pattern_desc" (typing/typedtree.mli[788,24219+4]..[788,24219+25]) (typing/typedtree.mli[788,24219+0]..[788,24219+65])
      core_type (typing/typedtree.mli[788,24219+27]..[788,24219+65])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[788,24219+27]..[788,24219+42])
          Ptyp_constr "pattern_desc" (typing/typedtree.mli[788,24219+30]..[788,24219+42])
          [
            core_type (typing/typedtree.mli[788,24219+27]..[788,24219+29])
              Ptyp_var k
          ]
        core_type (typing/typedtree.mli[788,24219+46]..[788,24219+65])
          Ptyp_constr "pattern_category" (typing/typedtree.mli[788,24219+49]..[788,24219+65])
          [
            core_type (typing/typedtree.mli[788,24219+46]..[788,24219+48])
              Ptyp_var k
          ]
      []
  signature_item (typing/typedtree.mli[789,24285+0]..[789,24285+63])
    Psig_value
    value_description "classify_pattern" (typing/typedtree.mli[789,24285+4]..[789,24285+20]) (typing/typedtree.mli[789,24285+0]..[789,24285+63])
      core_type (typing/typedtree.mli[789,24285+22]..[789,24285+63])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[789,24285+22]..[789,24285+40])
          Ptyp_constr "general_pattern" (typing/typedtree.mli[789,24285+25]..[789,24285+40])
          [
            core_type (typing/typedtree.mli[789,24285+22]..[789,24285+24])
              Ptyp_var k
          ]
        core_type (typing/typedtree.mli[789,24285+44]..[789,24285+63])
          Ptyp_constr "pattern_category" (typing/typedtree.mli[789,24285+47]..[789,24285+63])
          [
            core_type (typing/typedtree.mli[789,24285+44]..[789,24285+46])
              Ptyp_var k
          ]
      []
  signature_item (typing/typedtree.mli[791,24350+0]..[792,24372+41])
    Psig_type Rec
    [
      type_declaration "pattern_action" (typing/typedtree.mli[791,24350+5]..[791,24350+19]) (typing/typedtree.mli[791,24350+0]..[792,24372+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[792,24372+4]..[792,24372+39])
                Immutable
                "f" (typing/typedtree.mli[792,24372+4]..[792,24372+5])                core_type (typing/typedtree.mli[792,24372+8]..[792,24372+39])
                  Ptyp_poly 'k
                  core_type (typing/typedtree.mli[792,24372+13]..[792,24372+39])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/typedtree.mli[792,24372+13]..[792,24372+31])
                      Ptyp_constr "general_pattern" (typing/typedtree.mli[792,24372+16]..[792,24372+31])
                      [
                        core_type (typing/typedtree.mli[792,24372+13]..[792,24372+15])
                          Ptyp_var k
                      ]
                    core_type (typing/typedtree.mli[792,24372+35]..[792,24372+39])
                      Ptyp_constr "unit" (typing/typedtree.mli[792,24372+35]..[792,24372+39])
                      []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/typedtree.mli[793,24414+0]..[794,24445+45])
    Psig_value
    value_description "shallow_iter_pattern_desc" (typing/typedtree.mli[793,24414+4]..[793,24414+29]) (typing/typedtree.mli[793,24414+0]..[794,24445+45])
      core_type (typing/typedtree.mli[794,24445+4]..[794,24445+45])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[794,24445+4]..[794,24445+18])
          Ptyp_constr "pattern_action" (typing/typedtree.mli[794,24445+4]..[794,24445+18])
          []
        core_type (typing/typedtree.mli[794,24445+22]..[794,24445+45])
          Ptyp_arrow
          Nolabel
          core_type (typing/typedtree.mli[794,24445+22]..[794,24445+37])
            Ptyp_constr "pattern_desc" (typing/typedtree.mli[794,24445+25]..[794,24445+37])
            [
              core_type (typing/typedtree.mli[794,24445+22]..[794,24445+24])
                Ptyp_var k
            ]
          core_type (typing/typedtree.mli[794,24445+41]..[794,24445+45])
            Ptyp_constr "unit" (typing/typedtree.mli[794,24445+41]..[794,24445+45])
            []
      []
  signature_item (typing/typedtree.mli[796,24492+0]..[797,24522+55])
    Psig_type Rec
    [
      type_declaration "pattern_transformation" (typing/typedtree.mli[796,24492+5]..[796,24492+27]) (typing/typedtree.mli[796,24492+0]..[797,24522+55])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[797,24522+4]..[797,24522+53])
                Immutable
                "f" (typing/typedtree.mli[797,24522+4]..[797,24522+5])                core_type (typing/typedtree.mli[797,24522+8]..[797,24522+53])
                  Ptyp_poly 'k
                  core_type (typing/typedtree.mli[797,24522+13]..[797,24522+53])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/typedtree.mli[797,24522+13]..[797,24522+31])
                      Ptyp_constr "general_pattern" (typing/typedtree.mli[797,24522+16]..[797,24522+31])
                      [
                        core_type (typing/typedtree.mli[797,24522+13]..[797,24522+15])
                          Ptyp_var k
                      ]
                    core_type (typing/typedtree.mli[797,24522+35]..[797,24522+53])
                      Ptyp_constr "general_pattern" (typing/typedtree.mli[797,24522+38]..[797,24522+53])
                      [
                        core_type (typing/typedtree.mli[797,24522+35]..[797,24522+37])
                          Ptyp_var k
                      ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/typedtree.mli[798,24578+0]..[799,24608+64])
    Psig_value
    value_description "shallow_map_pattern_desc" (typing/typedtree.mli[798,24578+4]..[798,24578+28]) (typing/typedtree.mli[798,24578+0]..[799,24608+64])
      core_type (typing/typedtree.mli[799,24608+4]..[799,24608+64])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[799,24608+4]..[799,24608+26])
          Ptyp_constr "pattern_transformation" (typing/typedtree.mli[799,24608+4]..[799,24608+26])
          []
        core_type (typing/typedtree.mli[799,24608+30]..[799,24608+64])
          Ptyp_arrow
          Nolabel
          core_type (typing/typedtree.mli[799,24608+30]..[799,24608+45])
            Ptyp_constr "pattern_desc" (typing/typedtree.mli[799,24608+33]..[799,24608+45])
            [
              core_type (typing/typedtree.mli[799,24608+30]..[799,24608+32])
                Ptyp_var k
            ]
          core_type (typing/typedtree.mli[799,24608+49]..[799,24608+64])
            Ptyp_constr "pattern_desc" (typing/typedtree.mli[799,24608+52]..[799,24608+64])
            [
              core_type (typing/typedtree.mli[799,24608+49]..[799,24608+51])
                Ptyp_var k
            ]
      []
  signature_item (typing/typedtree.mli[801,24674+0]..[801,24674+70])
    Psig_value
    value_description "iter_general_pattern" (typing/typedtree.mli[801,24674+4]..[801,24674+24]) (typing/typedtree.mli[801,24674+0]..[801,24674+70])
      core_type (typing/typedtree.mli[801,24674+26]..[801,24674+70])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[801,24674+26]..[801,24674+40])
          Ptyp_constr "pattern_action" (typing/typedtree.mli[801,24674+26]..[801,24674+40])
          []
        core_type (typing/typedtree.mli[801,24674+44]..[801,24674+70])
          Ptyp_arrow
          Nolabel
          core_type (typing/typedtree.mli[801,24674+44]..[801,24674+62])
            Ptyp_constr "general_pattern" (typing/typedtree.mli[801,24674+47]..[801,24674+62])
            [
              core_type (typing/typedtree.mli[801,24674+44]..[801,24674+46])
                Ptyp_var k
            ]
          core_type (typing/typedtree.mli[801,24674+66]..[801,24674+70])
            Ptyp_constr "unit" (typing/typedtree.mli[801,24674+66]..[801,24674+70])
            []
      []
  signature_item (typing/typedtree.mli[802,24745+0]..[802,24745+54])
    Psig_value
    value_description "iter_pattern" (typing/typedtree.mli[802,24745+4]..[802,24745+16]) (typing/typedtree.mli[802,24745+0]..[802,24745+54])
      core_type (typing/typedtree.mli[802,24745+18]..[802,24745+54])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[802,24745+19]..[802,24745+34])
          Ptyp_arrow
          Nolabel
          core_type (typing/typedtree.mli[802,24745+19]..[802,24745+26])
            Ptyp_constr "pattern" (typing/typedtree.mli[802,24745+19]..[802,24745+26])
            []
          core_type (typing/typedtree.mli[802,24745+30]..[802,24745+34])
            Ptyp_constr "unit" (typing/typedtree.mli[802,24745+30]..[802,24745+34])
            []
        core_type (typing/typedtree.mli[802,24745+39]..[802,24745+54])
          Ptyp_arrow
          Nolabel
          core_type (typing/typedtree.mli[802,24745+39]..[802,24745+46])
            Ptyp_constr "pattern" (typing/typedtree.mli[802,24745+39]..[802,24745+46])
            []
          core_type (typing/typedtree.mli[802,24745+50]..[802,24745+54])
            Ptyp_constr "unit" (typing/typedtree.mli[802,24745+50]..[802,24745+54])
            []
      []
  signature_item (typing/typedtree.mli[804,24801+0]..[804,24801+64])
    Psig_type Rec
    [
      type_declaration "pattern_predicate" (typing/typedtree.mli[804,24801+5]..[804,24801+22]) (typing/typedtree.mli[804,24801+0]..[804,24801+64])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typedtree.mli[804,24801+27]..[804,24801+62])
                Immutable
                "f" (typing/typedtree.mli[804,24801+27]..[804,24801+28])                core_type (typing/typedtree.mli[804,24801+31]..[804,24801+62])
                  Ptyp_poly 'k
                  core_type (typing/typedtree.mli[804,24801+36]..[804,24801+62])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/typedtree.mli[804,24801+36]..[804,24801+54])
                      Ptyp_constr "general_pattern" (typing/typedtree.mli[804,24801+39]..[804,24801+54])
                      [
                        core_type (typing/typedtree.mli[804,24801+36]..[804,24801+38])
                          Ptyp_var k
                      ]
                    core_type (typing/typedtree.mli[804,24801+58]..[804,24801+62])
                      Ptyp_constr "bool" (typing/typedtree.mli[804,24801+58]..[804,24801+62])
                      []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/typedtree.mli[805,24866+0]..[805,24866+75])
    Psig_value
    value_description "exists_general_pattern" (typing/typedtree.mli[805,24866+4]..[805,24866+26]) (typing/typedtree.mli[805,24866+0]..[805,24866+75])
      core_type (typing/typedtree.mli[805,24866+28]..[805,24866+75])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[805,24866+28]..[805,24866+45])
          Ptyp_constr "pattern_predicate" (typing/typedtree.mli[805,24866+28]..[805,24866+45])
          []
        core_type (typing/typedtree.mli[805,24866+49]..[805,24866+75])
          Ptyp_arrow
          Nolabel
          core_type (typing/typedtree.mli[805,24866+49]..[805,24866+67])
            Ptyp_constr "general_pattern" (typing/typedtree.mli[805,24866+52]..[805,24866+67])
            [
              core_type (typing/typedtree.mli[805,24866+49]..[805,24866+51])
                Ptyp_var k
            ]
          core_type (typing/typedtree.mli[805,24866+71]..[805,24866+75])
            Ptyp_constr "bool" (typing/typedtree.mli[805,24866+71]..[805,24866+75])
            []
      []
  signature_item (typing/typedtree.mli[806,24942+0]..[806,24942+56])
    Psig_value
    value_description "exists_pattern" (typing/typedtree.mli[806,24942+4]..[806,24942+18]) (typing/typedtree.mli[806,24942+0]..[806,24942+56])
      core_type (typing/typedtree.mli[806,24942+20]..[806,24942+56])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[806,24942+21]..[806,24942+36])
          Ptyp_arrow
          Nolabel
          core_type (typing/typedtree.mli[806,24942+21]..[806,24942+28])
            Ptyp_constr "pattern" (typing/typedtree.mli[806,24942+21]..[806,24942+28])
            []
          core_type (typing/typedtree.mli[806,24942+32]..[806,24942+36])
            Ptyp_constr "bool" (typing/typedtree.mli[806,24942+32]..[806,24942+36])
            []
        core_type (typing/typedtree.mli[806,24942+41]..[806,24942+56])
          Ptyp_arrow
          Nolabel
          core_type (typing/typedtree.mli[806,24942+41]..[806,24942+48])
            Ptyp_constr "pattern" (typing/typedtree.mli[806,24942+41]..[806,24942+48])
            []
          core_type (typing/typedtree.mli[806,24942+52]..[806,24942+56])
            Ptyp_constr "bool" (typing/typedtree.mli[806,24942+52]..[806,24942+56])
            []
      []
  signature_item (typing/typedtree.mli[808,25000+0]..[808,25000+56])
    Psig_value
    value_description "let_bound_idents" (typing/typedtree.mli[808,25000+4]..[808,25000+20]) (typing/typedtree.mli[808,25000+0]..[808,25000+56])
      core_type (typing/typedtree.mli[808,25000+22]..[808,25000+56])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[808,25000+22]..[808,25000+40])
          Ptyp_constr "list" (typing/typedtree.mli[808,25000+36]..[808,25000+40])
          [
            core_type (typing/typedtree.mli[808,25000+22]..[808,25000+35])
              Ptyp_constr "value_binding" (typing/typedtree.mli[808,25000+22]..[808,25000+35])
              []
          ]
        core_type (typing/typedtree.mli[808,25000+44]..[808,25000+56])
          Ptyp_constr "list" (typing/typedtree.mli[808,25000+52]..[808,25000+56])
          [
            core_type (typing/typedtree.mli[808,25000+44]..[808,25000+51])
              Ptyp_constr "Ident.t" (typing/typedtree.mli[808,25000+44]..[808,25000+51])
              []
          ]
      []
  signature_item (typing/typedtree.mli[809,25057+0]..[810,25084+71])
    Psig_value
    value_description "let_bound_idents_full" (typing/typedtree.mli[809,25057+4]..[809,25057+25]) (typing/typedtree.mli[809,25057+0]..[810,25084+71])
      core_type (typing/typedtree.mli[810,25084+4]..[810,25084+71])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[810,25084+4]..[810,25084+22])
          Ptyp_constr "list" (typing/typedtree.mli[810,25084+18]..[810,25084+22])
          [
            core_type (typing/typedtree.mli[810,25084+4]..[810,25084+17])
              Ptyp_constr "value_binding" (typing/typedtree.mli[810,25084+4]..[810,25084+17])
              []
          ]
        core_type (typing/typedtree.mli[810,25084+26]..[810,25084+71])
          Ptyp_constr "list" (typing/typedtree.mli[810,25084+67]..[810,25084+71])
          [
            core_type (typing/typedtree.mli[810,25084+27]..[810,25084+65])
              Ptyp_tuple
              [
                core_type (typing/typedtree.mli[810,25084+27]..[810,25084+34])
                  Ptyp_constr "Ident.t" (typing/typedtree.mli[810,25084+27]..[810,25084+34])
                  []
                core_type (typing/typedtree.mli[810,25084+37]..[810,25084+47])
                  Ptyp_constr "loc" (typing/typedtree.mli[810,25084+44]..[810,25084+47])
                  [
                    core_type (typing/typedtree.mli[810,25084+37]..[810,25084+43])
                      Ptyp_constr "string" (typing/typedtree.mli[810,25084+37]..[810,25084+43])
                      []
                  ]
                core_type (typing/typedtree.mli[810,25084+50]..[810,25084+65])
                  Ptyp_constr "Types.type_expr" (typing/typedtree.mli[810,25084+50]..[810,25084+65])
                  []
              ]
          ]
      []
  signature_item (typing/typedtree.mli[813,25193+0]..[814,25208+70])
    Psig_value
    value_description "alpha_pat" (typing/typedtree.mli[813,25193+4]..[813,25193+13]) (typing/typedtree.mli[813,25193+0]..[814,25208+70])
      attribute "ocaml.doc"
        [
          structure_item (typing/typedtree.mli[812,25157+0]..[812,25157+35])
            Pstr_eval
            expression (typing/typedtree.mli[812,25157+0]..[812,25157+35])
              Pexp_constant PConst_string(" Alpha conversion of patterns ",(typing/typedtree.mli[812,25157+0]..[812,25157+35]),None)
        ]
      core_type (typing/typedtree.mli[814,25208+2]..[814,25208+70])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[814,25208+2]..[814,25208+26])
          Ptyp_constr "list" (typing/typedtree.mli[814,25208+22]..[814,25208+26])
          [
            core_type (typing/typedtree.mli[814,25208+3]..[814,25208+20])
              Ptyp_tuple
              [
                core_type (typing/typedtree.mli[814,25208+3]..[814,25208+10])
                  Ptyp_constr "Ident.t" (typing/typedtree.mli[814,25208+3]..[814,25208+10])
                  []
                core_type (typing/typedtree.mli[814,25208+13]..[814,25208+20])
                  Ptyp_constr "Ident.t" (typing/typedtree.mli[814,25208+13]..[814,25208+20])
                  []
              ]
          ]
        core_type (typing/typedtree.mli[814,25208+30]..[814,25208+70])
          Ptyp_arrow
          Nolabel
          core_type (typing/typedtree.mli[814,25208+30]..[814,25208+48])
            Ptyp_constr "general_pattern" (typing/typedtree.mli[814,25208+33]..[814,25208+48])
            [
              core_type (typing/typedtree.mli[814,25208+30]..[814,25208+32])
                Ptyp_var k
            ]
          core_type (typing/typedtree.mli[814,25208+52]..[814,25208+70])
            Ptyp_constr "general_pattern" (typing/typedtree.mli[814,25208+55]..[814,25208+70])
            [
              core_type (typing/typedtree.mli[814,25208+52]..[814,25208+54])
                Ptyp_var k
            ]
      []
  signature_item (typing/typedtree.mli[816,25280+0]..[816,25280+34])
    Psig_value
    value_description "mknoloc" (typing/typedtree.mli[816,25280+4]..[816,25280+11]) (typing/typedtree.mli[816,25280+0]..[816,25280+34])
      core_type (typing/typedtree.mli[816,25280+13]..[816,25280+34])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[816,25280+13]..[816,25280+15])
          Ptyp_var a
        core_type (typing/typedtree.mli[816,25280+19]..[816,25280+34])
          Ptyp_constr "Asttypes.loc" (typing/typedtree.mli[816,25280+22]..[816,25280+34])
          [
            core_type (typing/typedtree.mli[816,25280+19]..[816,25280+21])
              Ptyp_var a
          ]
      []
  signature_item (typing/typedtree.mli[817,25315+0]..[817,25315+46])
    Psig_value
    value_description "mkloc" (typing/typedtree.mli[817,25315+4]..[817,25315+9]) (typing/typedtree.mli[817,25315+0]..[817,25315+46])
      core_type (typing/typedtree.mli[817,25315+11]..[817,25315+46])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[817,25315+11]..[817,25315+13])
          Ptyp_var a
        core_type (typing/typedtree.mli[817,25315+17]..[817,25315+46])
          Ptyp_arrow
          Nolabel
          core_type (typing/typedtree.mli[817,25315+17]..[817,25315+27])
            Ptyp_constr "Location.t" (typing/typedtree.mli[817,25315+17]..[817,25315+27])
            []
          core_type (typing/typedtree.mli[817,25315+31]..[817,25315+46])
            Ptyp_constr "Asttypes.loc" (typing/typedtree.mli[817,25315+34]..[817,25315+46])
            [
              core_type (typing/typedtree.mli[817,25315+31]..[817,25315+33])
                Ptyp_var a
            ]
      []
  signature_item (typing/typedtree.mli[819,25363+0]..[819,25363+56])
    Psig_value
    value_description "pat_bound_idents" (typing/typedtree.mli[819,25363+4]..[819,25363+20]) (typing/typedtree.mli[819,25363+0]..[819,25363+56])
      core_type (typing/typedtree.mli[819,25363+22]..[819,25363+56])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[819,25363+22]..[819,25363+40])
          Ptyp_constr "general_pattern" (typing/typedtree.mli[819,25363+25]..[819,25363+40])
          [
            core_type (typing/typedtree.mli[819,25363+22]..[819,25363+24])
              Ptyp_var k
          ]
        core_type (typing/typedtree.mli[819,25363+44]..[819,25363+56])
          Ptyp_constr "list" (typing/typedtree.mli[819,25363+52]..[819,25363+56])
          [
            core_type (typing/typedtree.mli[819,25363+44]..[819,25363+51])
              Ptyp_constr "Ident.t" (typing/typedtree.mli[819,25363+44]..[819,25363+51])
              []
          ]
      []
  signature_item (typing/typedtree.mli[820,25420+0]..[821,25447+69])
    Psig_value
    value_description "pat_bound_idents_full" (typing/typedtree.mli[820,25420+4]..[820,25420+25]) (typing/typedtree.mli[820,25420+0]..[821,25447+69])
      core_type (typing/typedtree.mli[821,25447+2]..[821,25447+69])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[821,25447+2]..[821,25447+20])
          Ptyp_constr "general_pattern" (typing/typedtree.mli[821,25447+5]..[821,25447+20])
          [
            core_type (typing/typedtree.mli[821,25447+2]..[821,25447+4])
              Ptyp_var k
          ]
        core_type (typing/typedtree.mli[821,25447+24]..[821,25447+69])
          Ptyp_constr "list" (typing/typedtree.mli[821,25447+65]..[821,25447+69])
          [
            core_type (typing/typedtree.mli[821,25447+25]..[821,25447+63])
              Ptyp_tuple
              [
                core_type (typing/typedtree.mli[821,25447+25]..[821,25447+32])
                  Ptyp_constr "Ident.t" (typing/typedtree.mli[821,25447+25]..[821,25447+32])
                  []
                core_type (typing/typedtree.mli[821,25447+35]..[821,25447+45])
                  Ptyp_constr "loc" (typing/typedtree.mli[821,25447+42]..[821,25447+45])
                  [
                    core_type (typing/typedtree.mli[821,25447+35]..[821,25447+41])
                      Ptyp_constr "string" (typing/typedtree.mli[821,25447+35]..[821,25447+41])
                      []
                  ]
                core_type (typing/typedtree.mli[821,25447+48]..[821,25447+63])
                  Ptyp_constr "Types.type_expr" (typing/typedtree.mli[821,25447+48]..[821,25447+63])
                  []
              ]
          ]
      []
  signature_item (typing/typedtree.mli[824,25597+0]..[825,25616+64])
    Psig_value
    value_description "split_pattern" (typing/typedtree.mli[824,25597+4]..[824,25597+17]) (typing/typedtree.mli[824,25597+0]..[825,25616+64])
      attribute "ocaml.doc"
        [
          structure_item (typing/typedtree.mli[823,25518+0]..[823,25518+78])
            Pstr_eval
            expression (typing/typedtree.mli[823,25518+0]..[823,25518+78])
              Pexp_constant PConst_string(" Splits an or pattern into its value (left) and exception (right) parts. ",(typing/typedtree.mli[823,25518+0]..[823,25518+78]),None)
        ]
      core_type (typing/typedtree.mli[825,25616+2]..[825,25616+64])
        Ptyp_arrow
        Nolabel
        core_type (typing/typedtree.mli[825,25616+2]..[825,25616+29])
          Ptyp_constr "general_pattern" (typing/typedtree.mli[825,25616+14]..[825,25616+29])
          [
            core_type (typing/typedtree.mli[825,25616+2]..[825,25616+13])
              Ptyp_constr "computation" (typing/typedtree.mli[825,25616+2]..[825,25616+13])
              []
          ]
        core_type (typing/typedtree.mli[825,25616+33]..[825,25616+64])
          Ptyp_tuple
          [
            core_type (typing/typedtree.mli[825,25616+33]..[825,25616+47])
              Ptyp_constr "option" (typing/typedtree.mli[825,25616+41]..[825,25616+47])
              [
                core_type (typing/typedtree.mli[825,25616+33]..[825,25616+40])
                  Ptyp_constr "pattern" (typing/typedtree.mli[825,25616+33]..[825,25616+40])
                  []
              ]
            core_type (typing/typedtree.mli[825,25616+50]..[825,25616+64])
              Ptyp_constr "option" (typing/typedtree.mli[825,25616+58]..[825,25616+64])
              [
                core_type (typing/typedtree.mli[825,25616+50]..[825,25616+57])
                  Ptyp_constr "pattern" (typing/typedtree.mli[825,25616+50]..[825,25616+57])
                  []
              ]
          ]
      []
]

