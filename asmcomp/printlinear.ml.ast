[
  structure_item (asmcomp/printlinear.ml[18,1129+0]..[18,1129+11])
    Pstr_open Fresh
    module_expr (asmcomp/printlinear.ml[18,1129+5]..[18,1129+11])
      Pmod_ident "Format" (asmcomp/printlinear.ml[18,1129+5]..[18,1129+11])
  structure_item (asmcomp/printlinear.ml[19,1141+0]..[19,1141+9])
    Pstr_open Fresh
    module_expr (asmcomp/printlinear.ml[19,1141+5]..[19,1141+9])
      Pmod_ident "Mach" (asmcomp/printlinear.ml[19,1141+5]..[19,1141+9])
  structure_item (asmcomp/printlinear.ml[20,1151+0]..[20,1151+14])
    Pstr_open Fresh
    module_expr (asmcomp/printlinear.ml[20,1151+5]..[20,1151+14])
      Pmod_ident "Printmach" (asmcomp/printlinear.ml[20,1151+5]..[20,1151+14])
  structure_item (asmcomp/printlinear.ml[21,1166+0]..[21,1166+11])
    Pstr_open Fresh
    module_expr (asmcomp/printlinear.ml[21,1166+5]..[21,1166+11])
      Pmod_ident "Linear" (asmcomp/printlinear.ml[21,1166+5]..[21,1166+11])
  structure_item (asmcomp/printlinear.ml[23,1179+0]..[24,1197+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/printlinear.ml[23,1179+4]..[23,1179+9])
          Ppat_var "label" (asmcomp/printlinear.ml[23,1179+4]..[23,1179+9])
        expression (asmcomp/printlinear.ml[23,1179+10]..[24,1197+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/printlinear.ml[23,1179+10]..[23,1179+13])
            Ppat_var "ppf" (asmcomp/printlinear.ml[23,1179+10]..[23,1179+13])
          expression (asmcomp/printlinear.ml[23,1179+14]..[24,1197+28]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/printlinear.ml[23,1179+14]..[23,1179+15])
              Ppat_var "l" (asmcomp/printlinear.ml[23,1179+14]..[23,1179+15])
            expression (asmcomp/printlinear.ml[24,1197+2]..[24,1197+28])
              Pexp_apply
              expression (asmcomp/printlinear.ml[24,1197+2]..[24,1197+16])
                Pexp_ident "Format.fprintf" (asmcomp/printlinear.ml[24,1197+2]..[24,1197+16])
              [
                <arg>
                Nolabel
                  expression (asmcomp/printlinear.ml[24,1197+17]..[24,1197+20])
                    Pexp_ident "ppf" (asmcomp/printlinear.ml[24,1197+17]..[24,1197+20])
                <arg>
                Nolabel
                  expression (asmcomp/printlinear.ml[24,1197+21]..[24,1197+26])
                    Pexp_constant PConst_string("L%i",(asmcomp/printlinear.ml[24,1197+22]..[24,1197+25]),None)
                <arg>
                Nolabel
                  expression (asmcomp/printlinear.ml[24,1197+27]..[24,1197+28])
                    Pexp_ident "l" (asmcomp/printlinear.ml[24,1197+27]..[24,1197+28])
              ]
    ]
  structure_item (asmcomp/printlinear.ml[26,1227+0]..[74,2794+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/printlinear.ml[26,1227+4]..[26,1227+9])
          Ppat_var "instr" (asmcomp/printlinear.ml[26,1227+4]..[26,1227+9])
        expression (asmcomp/printlinear.ml[26,1227+10]..[74,2794+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/printlinear.ml[26,1227+10]..[26,1227+13])
            Ppat_var "ppf" (asmcomp/printlinear.ml[26,1227+10]..[26,1227+13])
          expression (asmcomp/printlinear.ml[26,1227+14]..[74,2794+49]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/printlinear.ml[26,1227+14]..[26,1227+15])
              Ppat_var "i" (asmcomp/printlinear.ml[26,1227+14]..[26,1227+15])
            expression (asmcomp/printlinear.ml[27,1245+2]..[74,2794+49])
              Pexp_sequence
              expression (asmcomp/printlinear.ml[27,1245+2]..[72,2725+5])
                Pexp_match
                expression (asmcomp/printlinear.ml[27,1245+14]..[27,1245+20])
                  Pexp_field
                  expression (asmcomp/printlinear.ml[27,1245+14]..[27,1245+15])
                    Pexp_ident "i" (asmcomp/printlinear.ml[27,1245+14]..[27,1245+15])
                  "desc" (asmcomp/printlinear.ml[27,1245+16]..[27,1245+20])
                [
                  <case>
                    pattern (asmcomp/printlinear.ml[28,1271+4]..[28,1271+8])
                      Ppat_construct "Lend" (asmcomp/printlinear.ml[28,1271+4]..[28,1271+8])
                      None
                    expression (asmcomp/printlinear.ml[28,1271+12]..[28,1271+14])
                      Pexp_construct "()" (asmcomp/printlinear.ml[28,1271+12]..[28,1271+14])
                      None
                  <case>
                    pattern (asmcomp/printlinear.ml[29,1286+4]..[29,1286+13])
                      Ppat_construct "Lprologue" (asmcomp/printlinear.ml[29,1286+4]..[29,1286+13])
                      None
                    expression (asmcomp/printlinear.ml[30,1303+6]..[30,1303+28])
                      Pexp_apply
                      expression (asmcomp/printlinear.ml[30,1303+6]..[30,1303+13])
                        Pexp_ident "fprintf" (asmcomp/printlinear.ml[30,1303+6]..[30,1303+13])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[30,1303+14]..[30,1303+17])
                            Pexp_ident "ppf" (asmcomp/printlinear.ml[30,1303+14]..[30,1303+17])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[30,1303+18]..[30,1303+28])
                            Pexp_constant PConst_string("prologue",(asmcomp/printlinear.ml[30,1303+19]..[30,1303+27]),None)
                      ]
                  <case>
                    pattern (asmcomp/printlinear.ml[31,1332+4]..[31,1332+10])
                      Ppat_construct "Lop" (asmcomp/printlinear.ml[31,1332+4]..[31,1332+7])
                      Some
                        []
                        pattern (asmcomp/printlinear.ml[31,1332+8]..[31,1332+10])
                          Ppat_var "op" (asmcomp/printlinear.ml[31,1332+8]..[31,1332+10])
                    expression (asmcomp/printlinear.ml[32,1346+6]..[37,1524+34])
                      Pexp_sequence
                      expression (asmcomp/printlinear.ml[32,1346+6]..[36,1513+9])
                        Pexp_match
                        expression (asmcomp/printlinear.ml[32,1346+18]..[32,1346+20])
                          Pexp_ident "op" (asmcomp/printlinear.ml[32,1346+18]..[32,1346+20])
                        [
                          <case>
                            pattern (asmcomp/printlinear.ml[33,1372+8]..[33,1372+65])
                              Ppat_or
                              pattern (asmcomp/printlinear.ml[33,1372+8]..[33,1372+52])
                                Ppat_or
                                pattern (asmcomp/printlinear.ml[33,1372+8]..[33,1372+38])
                                  Ppat_or
                                  pattern (asmcomp/printlinear.ml[33,1372+8]..[33,1372+26])
                                    Ppat_or
                                    pattern (asmcomp/printlinear.ml[33,1372+8]..[33,1372+16])
                                      Ppat_construct "Ialloc" (asmcomp/printlinear.ml[33,1372+8]..[33,1372+14])
                                      Some
                                        []
                                        pattern (asmcomp/printlinear.ml[33,1372+15]..[33,1372+16])
                                          Ppat_any
                                    pattern (asmcomp/printlinear.ml[33,1372+19]..[33,1372+26])
                                      Ppat_construct "Ipoll" (asmcomp/printlinear.ml[33,1372+19]..[33,1372+24])
                                      Some
                                        []
                                        pattern (asmcomp/printlinear.ml[33,1372+25]..[33,1372+26])
                                          Ppat_any
                                  pattern (asmcomp/printlinear.ml[33,1372+29]..[33,1372+38])
                                    Ppat_construct "Icall_ind" (asmcomp/printlinear.ml[33,1372+29]..[33,1372+38])
                                    None
                                pattern (asmcomp/printlinear.ml[33,1372+41]..[33,1372+52])
                                  Ppat_construct "Icall_imm" (asmcomp/printlinear.ml[33,1372+41]..[33,1372+50])
                                  Some
                                    []
                                    pattern (asmcomp/printlinear.ml[33,1372+51]..[33,1372+52])
                                      Ppat_any
                              pattern (asmcomp/printlinear.ml[33,1372+55]..[33,1372+65])
                                Ppat_construct "Iextcall" (asmcomp/printlinear.ml[33,1372+55]..[33,1372+63])
                                Some
                                  []
                                  pattern (asmcomp/printlinear.ml[33,1372+64]..[33,1372+65])
                                    Ppat_any
                            expression (asmcomp/printlinear.ml[34,1441+10]..[34,1441+55])
                              Pexp_apply
                              expression (asmcomp/printlinear.ml[34,1441+10]..[34,1441+17])
                                Pexp_ident "fprintf" (asmcomp/printlinear.ml[34,1441+10]..[34,1441+17])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/printlinear.ml[34,1441+18]..[34,1441+21])
                                    Pexp_ident "ppf" (asmcomp/printlinear.ml[34,1441+18]..[34,1441+21])
                                <arg>
                                Nolabel
                                  expression (asmcomp/printlinear.ml[34,1441+22]..[34,1441+37])
                                    Pexp_constant PConst_string("@[<1>{%a}@]@,",(asmcomp/printlinear.ml[34,1441+23]..[34,1441+36]),None)
                                <arg>
                                Nolabel
                                  expression (asmcomp/printlinear.ml[34,1441+38]..[34,1441+48])
                                    Pexp_ident "regsetaddr" (asmcomp/printlinear.ml[34,1441+38]..[34,1441+48])
                                <arg>
                                Nolabel
                                  expression (asmcomp/printlinear.ml[34,1441+49]..[34,1441+55])
                                    Pexp_field
                                    expression (asmcomp/printlinear.ml[34,1441+49]..[34,1441+50])
                                      Pexp_ident "i" (asmcomp/printlinear.ml[34,1441+49]..[34,1441+50])
                                    "live" (asmcomp/printlinear.ml[34,1441+51]..[34,1441+55])
                              ]
                          <case>
                            pattern (asmcomp/printlinear.ml[35,1497+8]..[35,1497+9])
                              Ppat_any
                            expression (asmcomp/printlinear.ml[35,1497+13]..[35,1497+15])
                              Pexp_construct "()" (asmcomp/printlinear.ml[35,1497+13]..[35,1497+15])
                              None
                        ]
                      expression (asmcomp/printlinear.ml[37,1524+6]..[37,1524+34])
                        Pexp_apply
                        expression (asmcomp/printlinear.ml[37,1524+6]..[37,1524+15])
                          Pexp_ident "operation" (asmcomp/printlinear.ml[37,1524+6]..[37,1524+15])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[37,1524+16]..[37,1524+18])
                              Pexp_ident "op" (asmcomp/printlinear.ml[37,1524+16]..[37,1524+18])
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[37,1524+19]..[37,1524+24])
                              Pexp_field
                              expression (asmcomp/printlinear.ml[37,1524+19]..[37,1524+20])
                                Pexp_ident "i" (asmcomp/printlinear.ml[37,1524+19]..[37,1524+20])
                              "arg" (asmcomp/printlinear.ml[37,1524+21]..[37,1524+24])
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[37,1524+25]..[37,1524+28])
                              Pexp_ident "ppf" (asmcomp/printlinear.ml[37,1524+25]..[37,1524+28])
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[37,1524+29]..[37,1524+34])
                              Pexp_field
                              expression (asmcomp/printlinear.ml[37,1524+29]..[37,1524+30])
                                Pexp_ident "i" (asmcomp/printlinear.ml[37,1524+29]..[37,1524+30])
                              "res" (asmcomp/printlinear.ml[37,1524+31]..[37,1524+34])
                        ]
                  <case>
                    pattern (asmcomp/printlinear.ml[38,1559+4]..[38,1559+18])
                      Ppat_construct "Lreloadretaddr" (asmcomp/printlinear.ml[38,1559+4]..[38,1559+18])
                      None
                    expression (asmcomp/printlinear.ml[39,1581+6]..[39,1581+34])
                      Pexp_apply
                      expression (asmcomp/printlinear.ml[39,1581+6]..[39,1581+13])
                        Pexp_ident "fprintf" (asmcomp/printlinear.ml[39,1581+6]..[39,1581+13])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[39,1581+14]..[39,1581+17])
                            Pexp_ident "ppf" (asmcomp/printlinear.ml[39,1581+14]..[39,1581+17])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[39,1581+18]..[39,1581+34])
                            Pexp_constant PConst_string("reload retaddr",(asmcomp/printlinear.ml[39,1581+19]..[39,1581+33]),None)
                      ]
                  <case>
                    pattern (asmcomp/printlinear.ml[40,1616+4]..[40,1616+11])
                      Ppat_construct "Lreturn" (asmcomp/printlinear.ml[40,1616+4]..[40,1616+11])
                      None
                    expression (asmcomp/printlinear.ml[41,1631+6]..[41,1631+40])
                      Pexp_apply
                      expression (asmcomp/printlinear.ml[41,1631+6]..[41,1631+13])
                        Pexp_ident "fprintf" (asmcomp/printlinear.ml[41,1631+6]..[41,1631+13])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[41,1631+14]..[41,1631+17])
                            Pexp_ident "ppf" (asmcomp/printlinear.ml[41,1631+14]..[41,1631+17])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[41,1631+18]..[41,1631+29])
                            Pexp_constant PConst_string("return %a",(asmcomp/printlinear.ml[41,1631+19]..[41,1631+28]),None)
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[41,1631+30]..[41,1631+34])
                            Pexp_ident "regs" (asmcomp/printlinear.ml[41,1631+30]..[41,1631+34])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[41,1631+35]..[41,1631+40])
                            Pexp_field
                            expression (asmcomp/printlinear.ml[41,1631+35]..[41,1631+36])
                              Pexp_ident "i" (asmcomp/printlinear.ml[41,1631+35]..[41,1631+36])
                            "arg" (asmcomp/printlinear.ml[41,1631+37]..[41,1631+40])
                      ]
                  <case>
                    pattern (asmcomp/printlinear.ml[42,1672+4]..[42,1672+14])
                      Ppat_construct "Llabel" (asmcomp/printlinear.ml[42,1672+4]..[42,1672+10])
                      Some
                        []
                        pattern (asmcomp/printlinear.ml[42,1672+11]..[42,1672+14])
                          Ppat_var "lbl" (asmcomp/printlinear.ml[42,1672+11]..[42,1672+14])
                    expression (asmcomp/printlinear.ml[43,1690+6]..[43,1690+33])
                      Pexp_apply
                      expression (asmcomp/printlinear.ml[43,1690+6]..[43,1690+13])
                        Pexp_ident "fprintf" (asmcomp/printlinear.ml[43,1690+6]..[43,1690+13])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[43,1690+14]..[43,1690+17])
                            Pexp_ident "ppf" (asmcomp/printlinear.ml[43,1690+14]..[43,1690+17])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[43,1690+18]..[43,1690+23])
                            Pexp_constant PConst_string("%a:",(asmcomp/printlinear.ml[43,1690+19]..[43,1690+22]),None)
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[43,1690+24]..[43,1690+29])
                            Pexp_ident "label" (asmcomp/printlinear.ml[43,1690+24]..[43,1690+29])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[43,1690+30]..[43,1690+33])
                            Pexp_ident "lbl" (asmcomp/printlinear.ml[43,1690+30]..[43,1690+33])
                      ]
                  <case>
                    pattern (asmcomp/printlinear.ml[44,1724+4]..[44,1724+15])
                      Ppat_construct "Lbranch" (asmcomp/printlinear.ml[44,1724+4]..[44,1724+11])
                      Some
                        []
                        pattern (asmcomp/printlinear.ml[44,1724+12]..[44,1724+15])
                          Ppat_var "lbl" (asmcomp/printlinear.ml[44,1724+12]..[44,1724+15])
                    expression (asmcomp/printlinear.ml[45,1743+6]..[45,1743+37])
                      Pexp_apply
                      expression (asmcomp/printlinear.ml[45,1743+6]..[45,1743+13])
                        Pexp_ident "fprintf" (asmcomp/printlinear.ml[45,1743+6]..[45,1743+13])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[45,1743+14]..[45,1743+17])
                            Pexp_ident "ppf" (asmcomp/printlinear.ml[45,1743+14]..[45,1743+17])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[45,1743+18]..[45,1743+27])
                            Pexp_constant PConst_string("goto %a",(asmcomp/printlinear.ml[45,1743+19]..[45,1743+26]),None)
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[45,1743+28]..[45,1743+33])
                            Pexp_ident "label" (asmcomp/printlinear.ml[45,1743+28]..[45,1743+33])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[45,1743+34]..[45,1743+37])
                            Pexp_ident "lbl" (asmcomp/printlinear.ml[45,1743+34]..[45,1743+37])
                      ]
                  <case>
                    pattern (asmcomp/printlinear.ml[46,1781+4]..[46,1781+25])
                      Ppat_construct "Lcondbranch" (asmcomp/printlinear.ml[46,1781+4]..[46,1781+15])
                      Some
                        []
                        pattern (asmcomp/printlinear.ml[46,1781+15]..[46,1781+25])
                          Ppat_tuple
                          [
                            pattern (asmcomp/printlinear.ml[46,1781+16]..[46,1781+19])
                              Ppat_var "tst" (asmcomp/printlinear.ml[46,1781+16]..[46,1781+19])
                            pattern (asmcomp/printlinear.ml[46,1781+21]..[46,1781+24])
                              Ppat_var "lbl" (asmcomp/printlinear.ml[46,1781+21]..[46,1781+24])
                          ]
                    expression (asmcomp/printlinear.ml[47,1810+6]..[47,1810+60])
                      Pexp_apply
                      expression (asmcomp/printlinear.ml[47,1810+6]..[47,1810+13])
                        Pexp_ident "fprintf" (asmcomp/printlinear.ml[47,1810+6]..[47,1810+13])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[47,1810+14]..[47,1810+17])
                            Pexp_ident "ppf" (asmcomp/printlinear.ml[47,1810+14]..[47,1810+17])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[47,1810+18]..[47,1810+33])
                            Pexp_constant PConst_string("if %a goto %a",(asmcomp/printlinear.ml[47,1810+19]..[47,1810+32]),None)
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[47,1810+34]..[47,1810+44])
                            Pexp_apply
                            expression (asmcomp/printlinear.ml[47,1810+35]..[47,1810+39])
                              Pexp_ident "test" (asmcomp/printlinear.ml[47,1810+35]..[47,1810+39])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/printlinear.ml[47,1810+40]..[47,1810+43])
                                  Pexp_ident "tst" (asmcomp/printlinear.ml[47,1810+40]..[47,1810+43])
                            ]
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[47,1810+45]..[47,1810+50])
                            Pexp_field
                            expression (asmcomp/printlinear.ml[47,1810+45]..[47,1810+46])
                              Pexp_ident "i" (asmcomp/printlinear.ml[47,1810+45]..[47,1810+46])
                            "arg" (asmcomp/printlinear.ml[47,1810+47]..[47,1810+50])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[47,1810+51]..[47,1810+56])
                            Pexp_ident "label" (asmcomp/printlinear.ml[47,1810+51]..[47,1810+56])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[47,1810+57]..[47,1810+60])
                            Pexp_ident "lbl" (asmcomp/printlinear.ml[47,1810+57]..[47,1810+60])
                      ]
                  <case>
                    pattern (asmcomp/printlinear.ml[48,1871+4]..[48,1871+34])
                      Ppat_construct "Lcondbranch3" (asmcomp/printlinear.ml[48,1871+4]..[48,1871+16])
                      Some
                        []
                        pattern (asmcomp/printlinear.ml[48,1871+16]..[48,1871+34])
                          Ppat_tuple
                          [
                            pattern (asmcomp/printlinear.ml[48,1871+17]..[48,1871+21])
                              Ppat_var "lbl0" (asmcomp/printlinear.ml[48,1871+17]..[48,1871+21])
                            pattern (asmcomp/printlinear.ml[48,1871+23]..[48,1871+27])
                              Ppat_var "lbl1" (asmcomp/printlinear.ml[48,1871+23]..[48,1871+27])
                            pattern (asmcomp/printlinear.ml[48,1871+29]..[48,1871+33])
                              Ppat_var "lbl2" (asmcomp/printlinear.ml[48,1871+29]..[48,1871+33])
                          ]
                    expression (asmcomp/printlinear.ml[49,1909+6]..[55,2124+31])
                      Pexp_sequence
                      expression (asmcomp/printlinear.ml[49,1909+6]..[49,1909+44])
                        Pexp_apply
                        expression (asmcomp/printlinear.ml[49,1909+6]..[49,1909+13])
                          Pexp_ident "fprintf" (asmcomp/printlinear.ml[49,1909+6]..[49,1909+13])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[49,1909+14]..[49,1909+17])
                              Pexp_ident "ppf" (asmcomp/printlinear.ml[49,1909+14]..[49,1909+17])
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[49,1909+18]..[49,1909+30])
                              Pexp_constant PConst_string("switch3 %a",(asmcomp/printlinear.ml[49,1909+19]..[49,1909+29]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[49,1909+31]..[49,1909+34])
                              Pexp_ident "reg" (asmcomp/printlinear.ml[49,1909+31]..[49,1909+34])
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[49,1909+35]..[49,1909+44])
                              Pexp_apply
                              expression (asmcomp/printlinear.ml[49,1909+35]..[49,1909+44]) ghost
                                Pexp_ident "Array.get" (asmcomp/printlinear.ml[49,1909+35]..[49,1909+44]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/printlinear.ml[49,1909+35]..[49,1909+40])
                                    Pexp_field
                                    expression (asmcomp/printlinear.ml[49,1909+35]..[49,1909+36])
                                      Pexp_ident "i" (asmcomp/printlinear.ml[49,1909+35]..[49,1909+36])
                                    "arg" (asmcomp/printlinear.ml[49,1909+37]..[49,1909+40])
                                <arg>
                                Nolabel
                                  expression (asmcomp/printlinear.ml[49,1909+42]..[49,1909+43])
                                    Pexp_constant PConst_int (0,None)
                              ]
                        ]
                      expression (asmcomp/printlinear.ml[50,1955+6]..[55,2124+31])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (asmcomp/printlinear.ml[50,1955+10]..[50,1955+14])
                              Ppat_var "case" (asmcomp/printlinear.ml[50,1955+10]..[50,1955+14])
                            expression (asmcomp/printlinear.ml[50,1955+15]..[53,2022+53]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (asmcomp/printlinear.ml[50,1955+15]..[50,1955+16])
                                Ppat_var "n" (asmcomp/printlinear.ml[50,1955+15]..[50,1955+16])
                              expression (asmcomp/printlinear.ml[50,1955+19]..[53,2022+53])
                                Pexp_function
                                [
                                  <case>
                                    pattern (asmcomp/printlinear.ml[51,1983+8]..[51,1983+12])
                                      Ppat_construct "None" (asmcomp/printlinear.ml[51,1983+8]..[51,1983+12])
                                      None
                                    expression (asmcomp/printlinear.ml[51,1983+16]..[51,1983+18])
                                      Pexp_construct "()" (asmcomp/printlinear.ml[51,1983+16]..[51,1983+18])
                                      None
                                  <case>
                                    pattern (asmcomp/printlinear.ml[52,2002+8]..[52,2002+16])
                                      Ppat_construct "Some" (asmcomp/printlinear.ml[52,2002+8]..[52,2002+12])
                                      Some
                                        []
                                        pattern (asmcomp/printlinear.ml[52,2002+13]..[52,2002+16])
                                          Ppat_var "lbl" (asmcomp/printlinear.ml[52,2002+13]..[52,2002+16])
                                    expression (asmcomp/printlinear.ml[53,2022+9]..[53,2022+53])
                                      Pexp_apply
                                      expression (asmcomp/printlinear.ml[53,2022+9]..[53,2022+16])
                                        Pexp_ident "fprintf" (asmcomp/printlinear.ml[53,2022+9]..[53,2022+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/printlinear.ml[53,2022+17]..[53,2022+20])
                                            Pexp_ident "ppf" (asmcomp/printlinear.ml[53,2022+17]..[53,2022+20])
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/printlinear.ml[53,2022+21]..[53,2022+41])
                                            Pexp_constant PConst_string("@,case %i: goto %a",(asmcomp/printlinear.ml[53,2022+22]..[53,2022+40]),None)
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/printlinear.ml[53,2022+42]..[53,2022+43])
                                            Pexp_ident "n" (asmcomp/printlinear.ml[53,2022+42]..[53,2022+43])
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/printlinear.ml[53,2022+44]..[53,2022+49])
                                            Pexp_ident "label" (asmcomp/printlinear.ml[53,2022+44]..[53,2022+49])
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/printlinear.ml[53,2022+50]..[53,2022+53])
                                            Pexp_ident "lbl" (asmcomp/printlinear.ml[53,2022+50]..[53,2022+53])
                                      ]
                                ]
                        ]
                        expression (asmcomp/printlinear.ml[54,2079+6]..[55,2124+31])
                          Pexp_sequence
                          expression (asmcomp/printlinear.ml[54,2079+6]..[54,2079+17])
                            Pexp_apply
                            expression (asmcomp/printlinear.ml[54,2079+6]..[54,2079+10])
                              Pexp_ident "case" (asmcomp/printlinear.ml[54,2079+6]..[54,2079+10])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/printlinear.ml[54,2079+11]..[54,2079+12])
                                  Pexp_constant PConst_int (0,None)
                              <arg>
                              Nolabel
                                expression (asmcomp/printlinear.ml[54,2079+13]..[54,2079+17])
                                  Pexp_ident "lbl0" (asmcomp/printlinear.ml[54,2079+13]..[54,2079+17])
                            ]
                          expression (asmcomp/printlinear.ml[54,2079+19]..[55,2124+31])
                            Pexp_sequence
                            expression (asmcomp/printlinear.ml[54,2079+19]..[54,2079+30])
                              Pexp_apply
                              expression (asmcomp/printlinear.ml[54,2079+19]..[54,2079+23])
                                Pexp_ident "case" (asmcomp/printlinear.ml[54,2079+19]..[54,2079+23])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/printlinear.ml[54,2079+24]..[54,2079+25])
                                    Pexp_constant PConst_int (1,None)
                                <arg>
                                Nolabel
                                  expression (asmcomp/printlinear.ml[54,2079+26]..[54,2079+30])
                                    Pexp_ident "lbl1" (asmcomp/printlinear.ml[54,2079+26]..[54,2079+30])
                              ]
                            expression (asmcomp/printlinear.ml[54,2079+32]..[55,2124+31])
                              Pexp_sequence
                              expression (asmcomp/printlinear.ml[54,2079+32]..[54,2079+43])
                                Pexp_apply
                                expression (asmcomp/printlinear.ml[54,2079+32]..[54,2079+36])
                                  Pexp_ident "case" (asmcomp/printlinear.ml[54,2079+32]..[54,2079+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/printlinear.ml[54,2079+37]..[54,2079+38])
                                      Pexp_constant PConst_int (2,None)
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/printlinear.ml[54,2079+39]..[54,2079+43])
                                      Pexp_ident "lbl2" (asmcomp/printlinear.ml[54,2079+39]..[54,2079+43])
                                ]
                              expression (asmcomp/printlinear.ml[55,2124+6]..[55,2124+31])
                                Pexp_apply
                                expression (asmcomp/printlinear.ml[55,2124+6]..[55,2124+13])
                                  Pexp_ident "fprintf" (asmcomp/printlinear.ml[55,2124+6]..[55,2124+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/printlinear.ml[55,2124+14]..[55,2124+17])
                                      Pexp_ident "ppf" (asmcomp/printlinear.ml[55,2124+14]..[55,2124+17])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/printlinear.ml[55,2124+18]..[55,2124+31])
                                      Pexp_constant PConst_string("@,endswitch",(asmcomp/printlinear.ml[55,2124+19]..[55,2124+30]),None)
                                ]
                  <case>
                    pattern (asmcomp/printlinear.ml[56,2156+4]..[56,2156+16])
                      Ppat_construct "Lswitch" (asmcomp/printlinear.ml[56,2156+4]..[56,2156+11])
                      Some
                        []
                        pattern (asmcomp/printlinear.ml[56,2156+12]..[56,2156+16])
                          Ppat_var "lblv" (asmcomp/printlinear.ml[56,2156+12]..[56,2156+16])
                    expression (asmcomp/printlinear.ml[57,2176+6]..[61,2332+31])
                      Pexp_sequence
                      expression (asmcomp/printlinear.ml[57,2176+6]..[57,2176+43])
                        Pexp_apply
                        expression (asmcomp/printlinear.ml[57,2176+6]..[57,2176+13])
                          Pexp_ident "fprintf" (asmcomp/printlinear.ml[57,2176+6]..[57,2176+13])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[57,2176+14]..[57,2176+17])
                              Pexp_ident "ppf" (asmcomp/printlinear.ml[57,2176+14]..[57,2176+17])
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[57,2176+18]..[57,2176+29])
                              Pexp_constant PConst_string("switch %a",(asmcomp/printlinear.ml[57,2176+19]..[57,2176+28]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[57,2176+30]..[57,2176+33])
                              Pexp_ident "reg" (asmcomp/printlinear.ml[57,2176+30]..[57,2176+33])
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[57,2176+34]..[57,2176+43])
                              Pexp_apply
                              expression (asmcomp/printlinear.ml[57,2176+34]..[57,2176+43]) ghost
                                Pexp_ident "Array.get" (asmcomp/printlinear.ml[57,2176+34]..[57,2176+43]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/printlinear.ml[57,2176+34]..[57,2176+39])
                                    Pexp_field
                                    expression (asmcomp/printlinear.ml[57,2176+34]..[57,2176+35])
                                      Pexp_ident "i" (asmcomp/printlinear.ml[57,2176+34]..[57,2176+35])
                                    "arg" (asmcomp/printlinear.ml[57,2176+36]..[57,2176+39])
                                <arg>
                                Nolabel
                                  expression (asmcomp/printlinear.ml[57,2176+41]..[57,2176+42])
                                    Pexp_constant PConst_int (0,None)
                              ]
                        ]
                      expression (asmcomp/printlinear.ml[58,2221+6]..[61,2332+31])
                        Pexp_sequence
                        expression (asmcomp/printlinear.ml[58,2221+6]..[60,2320+10])
                          Pexp_for Up
                          pattern (asmcomp/printlinear.ml[58,2221+10]..[58,2221+11])
                            Ppat_var "i" (asmcomp/printlinear.ml[58,2221+10]..[58,2221+11])
                          expression (asmcomp/printlinear.ml[58,2221+14]..[58,2221+15])
                            Pexp_constant PConst_int (0,None)
                          expression (asmcomp/printlinear.ml[58,2221+19]..[58,2221+40])
                            Pexp_apply
                            expression (asmcomp/printlinear.ml[58,2221+37]..[58,2221+38])
                              Pexp_ident "-" (asmcomp/printlinear.ml[58,2221+37]..[58,2221+38])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/printlinear.ml[58,2221+19]..[58,2221+36])
                                  Pexp_apply
                                  expression (asmcomp/printlinear.ml[58,2221+19]..[58,2221+31])
                                    Pexp_ident "Array.length" (asmcomp/printlinear.ml[58,2221+19]..[58,2221+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/printlinear.ml[58,2221+32]..[58,2221+36])
                                        Pexp_ident "lblv" (asmcomp/printlinear.ml[58,2221+32]..[58,2221+36])
                                  ]
                              <arg>
                              Nolabel
                                expression (asmcomp/printlinear.ml[58,2221+39]..[58,2221+40])
                                  Pexp_constant PConst_int (1,None)
                            ]
                          expression (asmcomp/printlinear.ml[59,2265+7]..[59,2265+54])
                            Pexp_apply
                            expression (asmcomp/printlinear.ml[59,2265+7]..[59,2265+14])
                              Pexp_ident "fprintf" (asmcomp/printlinear.ml[59,2265+7]..[59,2265+14])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/printlinear.ml[59,2265+15]..[59,2265+18])
                                  Pexp_ident "ppf" (asmcomp/printlinear.ml[59,2265+15]..[59,2265+18])
                              <arg>
                              Nolabel
                                expression (asmcomp/printlinear.ml[59,2265+19]..[59,2265+37])
                                  Pexp_constant PConst_string("case %i: goto %a",(asmcomp/printlinear.ml[59,2265+20]..[59,2265+36]),None)
                              <arg>
                              Nolabel
                                expression (asmcomp/printlinear.ml[59,2265+38]..[59,2265+39])
                                  Pexp_ident "i" (asmcomp/printlinear.ml[59,2265+38]..[59,2265+39])
                              <arg>
                              Nolabel
                                expression (asmcomp/printlinear.ml[59,2265+40]..[59,2265+45])
                                  Pexp_ident "label" (asmcomp/printlinear.ml[59,2265+40]..[59,2265+45])
                              <arg>
                              Nolabel
                                expression (asmcomp/printlinear.ml[59,2265+46]..[59,2265+54])
                                  Pexp_apply
                                  expression (asmcomp/printlinear.ml[59,2265+46]..[59,2265+54]) ghost
                                    Pexp_ident "Array.get" (asmcomp/printlinear.ml[59,2265+46]..[59,2265+54]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/printlinear.ml[59,2265+46]..[59,2265+50])
                                        Pexp_ident "lblv" (asmcomp/printlinear.ml[59,2265+46]..[59,2265+50])
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/printlinear.ml[59,2265+52]..[59,2265+53])
                                        Pexp_ident "i" (asmcomp/printlinear.ml[59,2265+52]..[59,2265+53])
                                  ]
                            ]
                        expression (asmcomp/printlinear.ml[61,2332+6]..[61,2332+31])
                          Pexp_apply
                          expression (asmcomp/printlinear.ml[61,2332+6]..[61,2332+13])
                            Pexp_ident "fprintf" (asmcomp/printlinear.ml[61,2332+6]..[61,2332+13])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/printlinear.ml[61,2332+14]..[61,2332+17])
                                Pexp_ident "ppf" (asmcomp/printlinear.ml[61,2332+14]..[61,2332+17])
                            <arg>
                            Nolabel
                              expression (asmcomp/printlinear.ml[61,2332+18]..[61,2332+31])
                                Pexp_constant PConst_string("@,endswitch",(asmcomp/printlinear.ml[61,2332+19]..[61,2332+30]),None)
                          ]
                  <case>
                    pattern (asmcomp/printlinear.ml[62,2364+4]..[62,2364+14])
                      Ppat_construct "Lentertrap" (asmcomp/printlinear.ml[62,2364+4]..[62,2364+14])
                      None
                    expression (asmcomp/printlinear.ml[63,2382+6]..[63,2382+30])
                      Pexp_apply
                      expression (asmcomp/printlinear.ml[63,2382+6]..[63,2382+13])
                        Pexp_ident "fprintf" (asmcomp/printlinear.ml[63,2382+6]..[63,2382+13])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[63,2382+14]..[63,2382+17])
                            Pexp_ident "ppf" (asmcomp/printlinear.ml[63,2382+14]..[63,2382+17])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[63,2382+18]..[63,2382+30])
                            Pexp_constant PConst_string("enter trap",(asmcomp/printlinear.ml[63,2382+19]..[63,2382+29]),None)
                      ]
                  <case>
                    pattern (asmcomp/printlinear.ml[64,2413+4]..[64,2413+38])
                      Ppat_construct "Ladjust_trap_depth" (asmcomp/printlinear.ml[64,2413+4]..[64,2413+22])
                      Some
                        []
                        pattern (asmcomp/printlinear.ml[64,2413+23]..[64,2413+38])
                          Ppat_record Closed
                          [
                            "delta_traps" (asmcomp/printlinear.ml[64,2413+25]..[64,2413+36]) ghost
                              pattern (asmcomp/printlinear.ml[64,2413+25]..[64,2413+36])
                                Ppat_var "delta_traps" (asmcomp/printlinear.ml[64,2413+25]..[64,2413+36])
                          ]
                    expression (asmcomp/printlinear.ml[65,2455+6]..[65,2455+61])
                      Pexp_apply
                      expression (asmcomp/printlinear.ml[65,2455+6]..[65,2455+13])
                        Pexp_ident "fprintf" (asmcomp/printlinear.ml[65,2455+6]..[65,2455+13])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[65,2455+14]..[65,2455+17])
                            Pexp_ident "ppf" (asmcomp/printlinear.ml[65,2455+14]..[65,2455+17])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[65,2455+18]..[65,2455+49])
                            Pexp_constant PConst_string("adjust trap depth by %d traps",(asmcomp/printlinear.ml[65,2455+19]..[65,2455+48]),None)
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[65,2455+50]..[65,2455+61])
                            Pexp_ident "delta_traps" (asmcomp/printlinear.ml[65,2455+50]..[65,2455+61])
                      ]
                  <case>
                    pattern (asmcomp/printlinear.ml[66,2517+4]..[66,2517+30])
                      Ppat_construct "Lpushtrap" (asmcomp/printlinear.ml[66,2517+4]..[66,2517+13])
                      Some
                        []
                        pattern (asmcomp/printlinear.ml[66,2517+14]..[66,2517+30])
                          Ppat_record Closed
                          [
                            "lbl_handler" (asmcomp/printlinear.ml[66,2517+16]..[66,2517+27]) ghost
                              pattern (asmcomp/printlinear.ml[66,2517+16]..[66,2517+27])
                                Ppat_var "lbl_handler" (asmcomp/printlinear.ml[66,2517+16]..[66,2517+27])
                          ]
                    expression (asmcomp/printlinear.ml[67,2551+6]..[67,2551+50])
                      Pexp_apply
                      expression (asmcomp/printlinear.ml[67,2551+6]..[67,2551+13])
                        Pexp_ident "fprintf" (asmcomp/printlinear.ml[67,2551+6]..[67,2551+13])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[67,2551+14]..[67,2551+17])
                            Pexp_ident "ppf" (asmcomp/printlinear.ml[67,2551+14]..[67,2551+17])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[67,2551+18]..[67,2551+32])
                            Pexp_constant PConst_string("push trap %a",(asmcomp/printlinear.ml[67,2551+19]..[67,2551+31]),None)
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[67,2551+33]..[67,2551+38])
                            Pexp_ident "label" (asmcomp/printlinear.ml[67,2551+33]..[67,2551+38])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[67,2551+39]..[67,2551+50])
                            Pexp_ident "lbl_handler" (asmcomp/printlinear.ml[67,2551+39]..[67,2551+50])
                      ]
                  <case>
                    pattern (asmcomp/printlinear.ml[68,2602+4]..[68,2602+12])
                      Ppat_construct "Lpoptrap" (asmcomp/printlinear.ml[68,2602+4]..[68,2602+12])
                      None
                    expression (asmcomp/printlinear.ml[69,2618+6]..[69,2618+28])
                      Pexp_apply
                      expression (asmcomp/printlinear.ml[69,2618+6]..[69,2618+13])
                        Pexp_ident "fprintf" (asmcomp/printlinear.ml[69,2618+6]..[69,2618+13])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[69,2618+14]..[69,2618+17])
                            Pexp_ident "ppf" (asmcomp/printlinear.ml[69,2618+14]..[69,2618+17])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[69,2618+18]..[69,2618+28])
                            Pexp_constant PConst_string("pop trap",(asmcomp/printlinear.ml[69,2618+19]..[69,2618+27]),None)
                      ]
                  <case>
                    pattern (asmcomp/printlinear.ml[70,2647+4]..[70,2647+12])
                      Ppat_construct "Lraise" (asmcomp/printlinear.ml[70,2647+4]..[70,2647+10])
                      Some
                        []
                        pattern (asmcomp/printlinear.ml[70,2647+11]..[70,2647+12])
                          Ppat_var "k" (asmcomp/printlinear.ml[70,2647+11]..[70,2647+12])
                    expression (asmcomp/printlinear.ml[71,2663+6]..[71,2663+61])
                      Pexp_apply
                      expression (asmcomp/printlinear.ml[71,2663+6]..[71,2663+13])
                        Pexp_ident "fprintf" (asmcomp/printlinear.ml[71,2663+6]..[71,2663+13])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[71,2663+14]..[71,2663+17])
                            Pexp_ident "ppf" (asmcomp/printlinear.ml[71,2663+14]..[71,2663+17])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[71,2663+18]..[71,2663+25])
                            Pexp_constant PConst_string("%s %a",(asmcomp/printlinear.ml[71,2663+19]..[71,2663+24]),None)
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[71,2663+26]..[71,2663+47])
                            Pexp_apply
                            expression (asmcomp/printlinear.ml[71,2663+27]..[71,2663+44])
                              Pexp_ident "Lambda.raise_kind" (asmcomp/printlinear.ml[71,2663+27]..[71,2663+44])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/printlinear.ml[71,2663+45]..[71,2663+46])
                                  Pexp_ident "k" (asmcomp/printlinear.ml[71,2663+45]..[71,2663+46])
                            ]
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[71,2663+48]..[71,2663+51])
                            Pexp_ident "reg" (asmcomp/printlinear.ml[71,2663+48]..[71,2663+51])
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[71,2663+52]..[71,2663+61])
                            Pexp_apply
                            expression (asmcomp/printlinear.ml[71,2663+52]..[71,2663+61]) ghost
                              Pexp_ident "Array.get" (asmcomp/printlinear.ml[71,2663+52]..[71,2663+61]) ghost
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/printlinear.ml[71,2663+52]..[71,2663+57])
                                  Pexp_field
                                  expression (asmcomp/printlinear.ml[71,2663+52]..[71,2663+53])
                                    Pexp_ident "i" (asmcomp/printlinear.ml[71,2663+52]..[71,2663+53])
                                  "arg" (asmcomp/printlinear.ml[71,2663+54]..[71,2663+57])
                              <arg>
                              Nolabel
                                expression (asmcomp/printlinear.ml[71,2663+59]..[71,2663+60])
                                  Pexp_constant PConst_int (0,None)
                            ]
                      ]
                ]
              expression (asmcomp/printlinear.ml[73,2732+2]..[74,2794+49])
                Pexp_ifthenelse
                expression (asmcomp/printlinear.ml[73,2732+5]..[73,2732+56])
                  Pexp_apply
                  expression (asmcomp/printlinear.ml[73,2732+35]..[73,2732+37])
                    Pexp_ident "&&" (asmcomp/printlinear.ml[73,2732+35]..[73,2732+37])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/printlinear.ml[73,2732+5]..[73,2732+34])
                        Pexp_apply
                        expression (asmcomp/printlinear.ml[73,2732+5]..[73,2732+8])
                          Pexp_ident "not" (asmcomp/printlinear.ml[73,2732+5]..[73,2732+8])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[73,2732+9]..[73,2732+34])
                              Pexp_apply
                              expression (asmcomp/printlinear.ml[73,2732+10]..[73,2732+27])
                                Pexp_ident "Debuginfo.is_none" (asmcomp/printlinear.ml[73,2732+10]..[73,2732+27])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/printlinear.ml[73,2732+28]..[73,2732+33])
                                    Pexp_field
                                    expression (asmcomp/printlinear.ml[73,2732+28]..[73,2732+29])
                                      Pexp_ident "i" (asmcomp/printlinear.ml[73,2732+28]..[73,2732+29])
                                    "dbg" (asmcomp/printlinear.ml[73,2732+30]..[73,2732+33])
                              ]
                        ]
                    <arg>
                    Nolabel
                      expression (asmcomp/printlinear.ml[73,2732+38]..[73,2732+56])
                        Pexp_apply
                        expression (asmcomp/printlinear.ml[73,2732+38]..[73,2732+39])
                          Pexp_ident "!" (asmcomp/printlinear.ml[73,2732+38]..[73,2732+39])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[73,2732+39]..[73,2732+56])
                              Pexp_ident "Clflags.locations" (asmcomp/printlinear.ml[73,2732+39]..[73,2732+56])
                        ]
                  ]
                expression (asmcomp/printlinear.ml[74,2794+4]..[74,2794+49])
                  Pexp_apply
                  expression (asmcomp/printlinear.ml[74,2794+4]..[74,2794+11])
                    Pexp_ident "fprintf" (asmcomp/printlinear.ml[74,2794+4]..[74,2794+11])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/printlinear.ml[74,2794+12]..[74,2794+15])
                        Pexp_ident "ppf" (asmcomp/printlinear.ml[74,2794+12]..[74,2794+15])
                    <arg>
                    Nolabel
                      expression (asmcomp/printlinear.ml[74,2794+16]..[74,2794+21])
                        Pexp_constant PConst_string(" %s",(asmcomp/printlinear.ml[74,2794+17]..[74,2794+20]),None)
                    <arg>
                    Nolabel
                      expression (asmcomp/printlinear.ml[74,2794+22]..[74,2794+49])
                        Pexp_apply
                        expression (asmcomp/printlinear.ml[74,2794+23]..[74,2794+42])
                          Pexp_ident "Debuginfo.to_string" (asmcomp/printlinear.ml[74,2794+23]..[74,2794+42])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[74,2794+43]..[74,2794+48])
                              Pexp_field
                              expression (asmcomp/printlinear.ml[74,2794+43]..[74,2794+44])
                                Pexp_ident "i" (asmcomp/printlinear.ml[74,2794+43]..[74,2794+44])
                              "dbg" (asmcomp/printlinear.ml[74,2794+45]..[74,2794+48])
                        ]
                  ]
                None
    ]
  structure_item (asmcomp/printlinear.ml[76,2845+0]..[79,2906+54])
    Pstr_value Rec
    [
      <def>
        pattern (asmcomp/printlinear.ml[76,2845+8]..[76,2845+17])
          Ppat_var "all_instr" (asmcomp/printlinear.ml[76,2845+8]..[76,2845+17])
        expression (asmcomp/printlinear.ml[76,2845+18]..[79,2906+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/printlinear.ml[76,2845+18]..[76,2845+21])
            Ppat_var "ppf" (asmcomp/printlinear.ml[76,2845+18]..[76,2845+21])
          expression (asmcomp/printlinear.ml[76,2845+22]..[79,2906+54]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/printlinear.ml[76,2845+22]..[76,2845+23])
              Ppat_var "i" (asmcomp/printlinear.ml[76,2845+22]..[76,2845+23])
            expression (asmcomp/printlinear.ml[77,2871+2]..[79,2906+54])
              Pexp_match
              expression (asmcomp/printlinear.ml[77,2871+8]..[77,2871+14])
                Pexp_field
                expression (asmcomp/printlinear.ml[77,2871+8]..[77,2871+9])
                  Pexp_ident "i" (asmcomp/printlinear.ml[77,2871+8]..[77,2871+9])
                "desc" (asmcomp/printlinear.ml[77,2871+10]..[77,2871+14])
              [
                <case>
                  pattern (asmcomp/printlinear.ml[78,2891+4]..[78,2891+8])
                    Ppat_construct "Lend" (asmcomp/printlinear.ml[78,2891+4]..[78,2891+8])
                    None
                  expression (asmcomp/printlinear.ml[78,2891+12]..[78,2891+14])
                    Pexp_construct "()" (asmcomp/printlinear.ml[78,2891+12]..[78,2891+14])
                    None
                <case>
                  pattern (asmcomp/printlinear.ml[79,2906+4]..[79,2906+5])
                    Ppat_any
                  expression (asmcomp/printlinear.ml[79,2906+9]..[79,2906+54])
                    Pexp_apply
                    expression (asmcomp/printlinear.ml[79,2906+9]..[79,2906+16])
                      Pexp_ident "fprintf" (asmcomp/printlinear.ml[79,2906+9]..[79,2906+16])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/printlinear.ml[79,2906+17]..[79,2906+20])
                          Pexp_ident "ppf" (asmcomp/printlinear.ml[79,2906+17]..[79,2906+20])
                      <arg>
                      Nolabel
                        expression (asmcomp/printlinear.ml[79,2906+21]..[79,2906+29])
                          Pexp_constant PConst_string("%a@,%a",(asmcomp/printlinear.ml[79,2906+22]..[79,2906+28]),None)
                      <arg>
                      Nolabel
                        expression (asmcomp/printlinear.ml[79,2906+30]..[79,2906+35])
                          Pexp_ident "instr" (asmcomp/printlinear.ml[79,2906+30]..[79,2906+35])
                      <arg>
                      Nolabel
                        expression (asmcomp/printlinear.ml[79,2906+36]..[79,2906+37])
                          Pexp_ident "i" (asmcomp/printlinear.ml[79,2906+36]..[79,2906+37])
                      <arg>
                      Nolabel
                        expression (asmcomp/printlinear.ml[79,2906+38]..[79,2906+47])
                          Pexp_ident "all_instr" (asmcomp/printlinear.ml[79,2906+38]..[79,2906+47])
                      <arg>
                      Nolabel
                        expression (asmcomp/printlinear.ml[79,2906+48]..[79,2906+54])
                          Pexp_field
                          expression (asmcomp/printlinear.ml[79,2906+48]..[79,2906+49])
                            Pexp_ident "i" (asmcomp/printlinear.ml[79,2906+48]..[79,2906+49])
                          "next" (asmcomp/printlinear.ml[79,2906+50]..[79,2906+54])
                    ]
              ]
    ]
  structure_item (asmcomp/printlinear.ml[81,2962+0]..[87,3123+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/printlinear.ml[81,2962+4]..[81,2962+11])
          Ppat_var "fundecl" (asmcomp/printlinear.ml[81,2962+4]..[81,2962+11])
        expression (asmcomp/printlinear.ml[81,2962+12]..[87,3123+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/printlinear.ml[81,2962+12]..[81,2962+15])
            Ppat_var "ppf" (asmcomp/printlinear.ml[81,2962+12]..[81,2962+15])
          expression (asmcomp/printlinear.ml[81,2962+16]..[87,3123+70]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/printlinear.ml[81,2962+16]..[81,2962+17])
              Ppat_var "f" (asmcomp/printlinear.ml[81,2962+16]..[81,2962+17])
            expression (asmcomp/printlinear.ml[82,2982+2]..[87,3123+70])
              Pexp_let Nonrec
              [
                <def>
                  pattern (asmcomp/printlinear.ml[82,2982+6]..[82,2982+9])
                    Ppat_var "dbg" (asmcomp/printlinear.ml[82,2982+6]..[82,2982+9])
                  expression (asmcomp/printlinear.ml[83,2994+4]..[86,3078+41])
                    Pexp_ifthenelse
                    expression (asmcomp/printlinear.ml[83,2994+7]..[83,2994+60])
                      Pexp_apply
                      expression (asmcomp/printlinear.ml[83,2994+35]..[83,2994+37])
                        Pexp_ident "||" (asmcomp/printlinear.ml[83,2994+35]..[83,2994+37])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[83,2994+7]..[83,2994+34])
                            Pexp_apply
                            expression (asmcomp/printlinear.ml[83,2994+7]..[83,2994+24])
                              Pexp_ident "Debuginfo.is_none" (asmcomp/printlinear.ml[83,2994+7]..[83,2994+24])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/printlinear.ml[83,2994+25]..[83,2994+34])
                                  Pexp_field
                                  expression (asmcomp/printlinear.ml[83,2994+25]..[83,2994+26])
                                    Pexp_ident "f" (asmcomp/printlinear.ml[83,2994+25]..[83,2994+26])
                                  "fun_dbg" (asmcomp/printlinear.ml[83,2994+27]..[83,2994+34])
                            ]
                        <arg>
                        Nolabel
                          expression (asmcomp/printlinear.ml[83,2994+38]..[83,2994+60])
                            Pexp_apply
                            expression (asmcomp/printlinear.ml[83,2994+38]..[83,2994+41])
                              Pexp_ident "not" (asmcomp/printlinear.ml[83,2994+38]..[83,2994+41])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/printlinear.ml[83,2994+42]..[83,2994+60])
                                  Pexp_apply
                                  expression (asmcomp/printlinear.ml[83,2994+42]..[83,2994+43])
                                    Pexp_ident "!" (asmcomp/printlinear.ml[83,2994+42]..[83,2994+43])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/printlinear.ml[83,2994+43]..[83,2994+60])
                                        Pexp_ident "Clflags.locations" (asmcomp/printlinear.ml[83,2994+43]..[83,2994+60])
                                  ]
                            ]
                      ]
                    expression (asmcomp/printlinear.ml[84,3060+6]..[84,3060+8])
                      Pexp_constant PConst_string("",(asmcomp/printlinear.ml[84,3060+7]..[84,3060+7]),None)
                    Some
                      expression (asmcomp/printlinear.ml[86,3078+6]..[86,3078+41])
                        Pexp_apply
                        expression (asmcomp/printlinear.ml[86,3078+10]..[86,3078+11])
                          Pexp_ident "^" (asmcomp/printlinear.ml[86,3078+10]..[86,3078+11])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[86,3078+6]..[86,3078+9])
                              Pexp_constant PConst_string(" ",(asmcomp/printlinear.ml[86,3078+7]..[86,3078+8]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/printlinear.ml[86,3078+12]..[86,3078+41])
                              Pexp_apply
                              expression (asmcomp/printlinear.ml[86,3078+12]..[86,3078+31])
                                Pexp_ident "Debuginfo.to_string" (asmcomp/printlinear.ml[86,3078+12]..[86,3078+31])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/printlinear.ml[86,3078+32]..[86,3078+41])
                                    Pexp_field
                                    expression (asmcomp/printlinear.ml[86,3078+32]..[86,3078+33])
                                      Pexp_ident "f" (asmcomp/printlinear.ml[86,3078+32]..[86,3078+33])
                                    "fun_dbg" (asmcomp/printlinear.ml[86,3078+34]..[86,3078+41])
                              ]
                        ]
              ]
              expression (asmcomp/printlinear.ml[87,3123+2]..[87,3123+70])
                Pexp_apply
                expression (asmcomp/printlinear.ml[87,3123+2]..[87,3123+9])
                  Pexp_ident "fprintf" (asmcomp/printlinear.ml[87,3123+2]..[87,3123+9])
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/printlinear.ml[87,3123+10]..[87,3123+13])
                      Pexp_ident "ppf" (asmcomp/printlinear.ml[87,3123+10]..[87,3123+13])
                  <arg>
                  Nolabel
                    expression (asmcomp/printlinear.ml[87,3123+14]..[87,3123+34])
                      Pexp_constant PConst_string("@[<v 2>%s:%s@,%a@]",(asmcomp/printlinear.ml[87,3123+15]..[87,3123+33]),None)
                  <arg>
                  Nolabel
                    expression (asmcomp/printlinear.ml[87,3123+35]..[87,3123+45])
                      Pexp_field
                      expression (asmcomp/printlinear.ml[87,3123+35]..[87,3123+36])
                        Pexp_ident "f" (asmcomp/printlinear.ml[87,3123+35]..[87,3123+36])
                      "fun_name" (asmcomp/printlinear.ml[87,3123+37]..[87,3123+45])
                  <arg>
                  Nolabel
                    expression (asmcomp/printlinear.ml[87,3123+46]..[87,3123+49])
                      Pexp_ident "dbg" (asmcomp/printlinear.ml[87,3123+46]..[87,3123+49])
                  <arg>
                  Nolabel
                    expression (asmcomp/printlinear.ml[87,3123+50]..[87,3123+59])
                      Pexp_ident "all_instr" (asmcomp/printlinear.ml[87,3123+50]..[87,3123+59])
                  <arg>
                  Nolabel
                    expression (asmcomp/printlinear.ml[87,3123+60]..[87,3123+70])
                      Pexp_field
                      expression (asmcomp/printlinear.ml[87,3123+60]..[87,3123+61])
                        Pexp_ident "f" (asmcomp/printlinear.ml[87,3123+60]..[87,3123+61])
                      "fun_body" (asmcomp/printlinear.ml[87,3123+62]..[87,3123+70])
                ]
    ]
]

