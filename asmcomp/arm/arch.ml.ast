[
  structure_item (asmcomp/arm/arch.ml[19,1205+0]..[19,1205+11])
    Pstr_open Fresh
    module_expr (asmcomp/arm/arch.ml[19,1205+5]..[19,1205+11])
      Pmod_ident "Format" (asmcomp/arm/arch.ml[19,1205+5]..[19,1205+11])
  structure_item (asmcomp/arm/arch.ml[21,1218+0]..[21,1218+25])
    Pstr_type Rec
    [
      type_declaration "abi" (asmcomp/arm/arch.ml[21,1218+5]..[21,1218+8]) (asmcomp/arm/arch.ml[21,1218+0]..[21,1218+25])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/arm/arch.ml[21,1218+11]..[21,1218+15])
                "EABI" (asmcomp/arm/arch.ml[21,1218+11]..[21,1218+15])
                []
                None
              (asmcomp/arm/arch.ml[21,1218+16]..[21,1218+25])
                "EABI_HF" (asmcomp/arm/arch.ml[21,1218+18]..[21,1218+25])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/arm/arch.ml[22,1244+0]..[22,1244+69])
    Pstr_type Rec
    [
      type_declaration "arch" (asmcomp/arm/arch.ml[22,1244+5]..[22,1244+9]) (asmcomp/arm/arch.ml[22,1244+0]..[22,1244+69])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/arm/arch.ml[22,1244+12]..[22,1244+17])
                "ARMv4" (asmcomp/arm/arch.ml[22,1244+12]..[22,1244+17])
                []
                None
              (asmcomp/arm/arch.ml[22,1244+18]..[22,1244+25])
                "ARMv5" (asmcomp/arm/arch.ml[22,1244+20]..[22,1244+25])
                []
                None
              (asmcomp/arm/arch.ml[22,1244+26]..[22,1244+35])
                "ARMv5TE" (asmcomp/arm/arch.ml[22,1244+28]..[22,1244+35])
                []
                None
              (asmcomp/arm/arch.ml[22,1244+36]..[22,1244+43])
                "ARMv6" (asmcomp/arm/arch.ml[22,1244+38]..[22,1244+43])
                []
                None
              (asmcomp/arm/arch.ml[22,1244+44]..[22,1244+53])
                "ARMv6T2" (asmcomp/arm/arch.ml[22,1244+46]..[22,1244+53])
                []
                None
              (asmcomp/arm/arch.ml[22,1244+54]..[22,1244+61])
                "ARMv7" (asmcomp/arm/arch.ml[22,1244+56]..[22,1244+61])
                []
                None
              (asmcomp/arm/arch.ml[22,1244+62]..[22,1244+69])
                "ARMv8" (asmcomp/arm/arch.ml[22,1244+64]..[22,1244+69])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/arm/arch.ml[23,1314+0]..[23,1314+43])
    Pstr_type Rec
    [
      type_declaration "fpu" (asmcomp/arm/arch.ml[23,1314+5]..[23,1314+8]) (asmcomp/arm/arch.ml[23,1314+0]..[23,1314+43])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/arm/arch.ml[23,1314+11]..[23,1314+15])
                "Soft" (asmcomp/arm/arch.ml[23,1314+11]..[23,1314+15])
                []
                None
              (asmcomp/arm/arch.ml[23,1314+16]..[23,1314+23])
                "VFPv2" (asmcomp/arm/arch.ml[23,1314+18]..[23,1314+23])
                []
                None
              (asmcomp/arm/arch.ml[23,1314+24]..[23,1314+35])
                "VFPv3_D16" (asmcomp/arm/arch.ml[23,1314+26]..[23,1314+35])
                []
                None
              (asmcomp/arm/arch.ml[23,1314+36]..[23,1314+43])
                "VFPv3" (asmcomp/arm/arch.ml[23,1314+38]..[23,1314+43])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/arm/arch.ml[25,1359+0]..[29,1474+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[25,1359+4]..[25,1359+7])
          Ppat_var "abi" (asmcomp/arm/arch.ml[25,1359+4]..[25,1359+7])
        expression (asmcomp/arm/arch.ml[26,1369+2]..[29,1474+21])
          Pexp_match
          expression (asmcomp/arm/arch.ml[26,1369+8]..[26,1369+21])
            Pexp_ident "Config.system" (asmcomp/arm/arch.ml[26,1369+8]..[26,1369+21])
          [
            <case>
              pattern (asmcomp/arm/arch.ml[27,1396+4]..[27,1396+28])
                Ppat_or
                pattern (asmcomp/arm/arch.ml[27,1396+4]..[27,1396+16])
                  Ppat_constant PConst_string("linux_eabi",(asmcomp/arm/arch.ml[27,1396+5]..[27,1396+15]),None)
                pattern (asmcomp/arm/arch.ml[27,1396+19]..[27,1396+28])
                  Ppat_constant PConst_string("freebsd",(asmcomp/arm/arch.ml[27,1396+20]..[27,1396+27]),None)
              expression (asmcomp/arm/arch.ml[27,1396+32]..[27,1396+36])
                Pexp_construct "EABI" (asmcomp/arm/arch.ml[27,1396+32]..[27,1396+36])
                None
            <case>
              pattern (asmcomp/arm/arch.ml[28,1433+4]..[28,1433+29])
                Ppat_or
                pattern (asmcomp/arm/arch.ml[28,1433+4]..[28,1433+18])
                  Ppat_constant PConst_string("linux_eabihf",(asmcomp/arm/arch.ml[28,1433+5]..[28,1433+17]),None)
                pattern (asmcomp/arm/arch.ml[28,1433+21]..[28,1433+29])
                  Ppat_constant PConst_string("netbsd",(asmcomp/arm/arch.ml[28,1433+22]..[28,1433+28]),None)
              expression (asmcomp/arm/arch.ml[28,1433+33]..[28,1433+40])
                Pexp_construct "EABI_HF" (asmcomp/arm/arch.ml[28,1433+33]..[28,1433+40])
                None
            <case>
              pattern (asmcomp/arm/arch.ml[29,1474+4]..[29,1474+5])
                Ppat_any
              expression (asmcomp/arm/arch.ml[29,1474+9]..[29,1474+21])
                Pexp_assert
                expression (asmcomp/arm/arch.ml[29,1474+16]..[29,1474+21])
                  Pexp_construct "false" (asmcomp/arm/arch.ml[29,1474+16]..[29,1474+21])
                  None
          ]
    ]
  structure_item (asmcomp/arm/arch.ml[31,1497+0]..[38,1669+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[31,1497+4]..[31,1497+18])
          Ppat_var "string_of_arch" (asmcomp/arm/arch.ml[31,1497+4]..[31,1497+18])
        expression (asmcomp/arm/arch.ml[31,1497+21]..[38,1669+22])
          Pexp_function
          [
            <case>
              pattern (asmcomp/arm/arch.ml[32,1527+4]..[32,1527+9])
                Ppat_construct "ARMv4" (asmcomp/arm/arch.ml[32,1527+4]..[32,1527+9])
                None
              expression (asmcomp/arm/arch.ml[32,1527+15]..[32,1527+22])
                Pexp_constant PConst_string("armv4",(asmcomp/arm/arch.ml[32,1527+16]..[32,1527+21]),None)
            <case>
              pattern (asmcomp/arm/arch.ml[33,1550+4]..[33,1550+9])
                Ppat_construct "ARMv5" (asmcomp/arm/arch.ml[33,1550+4]..[33,1550+9])
                None
              expression (asmcomp/arm/arch.ml[33,1550+15]..[33,1550+22])
                Pexp_constant PConst_string("armv5",(asmcomp/arm/arch.ml[33,1550+16]..[33,1550+21]),None)
            <case>
              pattern (asmcomp/arm/arch.ml[34,1573+4]..[34,1573+11])
                Ppat_construct "ARMv5TE" (asmcomp/arm/arch.ml[34,1573+4]..[34,1573+11])
                None
              expression (asmcomp/arm/arch.ml[34,1573+15]..[34,1573+24])
                Pexp_constant PConst_string("armv5te",(asmcomp/arm/arch.ml[34,1573+16]..[34,1573+23]),None)
            <case>
              pattern (asmcomp/arm/arch.ml[35,1598+4]..[35,1598+9])
                Ppat_construct "ARMv6" (asmcomp/arm/arch.ml[35,1598+4]..[35,1598+9])
                None
              expression (asmcomp/arm/arch.ml[35,1598+15]..[35,1598+22])
                Pexp_constant PConst_string("armv6",(asmcomp/arm/arch.ml[35,1598+16]..[35,1598+21]),None)
            <case>
              pattern (asmcomp/arm/arch.ml[36,1621+4]..[36,1621+11])
                Ppat_construct "ARMv6T2" (asmcomp/arm/arch.ml[36,1621+4]..[36,1621+11])
                None
              expression (asmcomp/arm/arch.ml[36,1621+15]..[36,1621+24])
                Pexp_constant PConst_string("armv6t2",(asmcomp/arm/arch.ml[36,1621+16]..[36,1621+23]),None)
            <case>
              pattern (asmcomp/arm/arch.ml[37,1646+4]..[37,1646+9])
                Ppat_construct "ARMv7" (asmcomp/arm/arch.ml[37,1646+4]..[37,1646+9])
                None
              expression (asmcomp/arm/arch.ml[37,1646+15]..[37,1646+22])
                Pexp_constant PConst_string("armv7",(asmcomp/arm/arch.ml[37,1646+16]..[37,1646+21]),None)
            <case>
              pattern (asmcomp/arm/arch.ml[38,1669+4]..[38,1669+9])
                Ppat_construct "ARMv8" (asmcomp/arm/arch.ml[38,1669+4]..[38,1669+9])
                None
              expression (asmcomp/arm/arch.ml[38,1669+15]..[38,1669+22])
                Pexp_constant PConst_string("armv8",(asmcomp/arm/arch.ml[38,1669+16]..[38,1669+21]),None)
          ]
    ]
  structure_item (asmcomp/arm/arch.ml[40,1693+0]..[44,1800+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[40,1693+4]..[40,1693+17])
          Ppat_var "string_of_fpu" (asmcomp/arm/arch.ml[40,1693+4]..[40,1693+17])
        expression (asmcomp/arm/arch.ml[40,1693+20]..[44,1800+24])
          Pexp_function
          [
            <case>
              pattern (asmcomp/arm/arch.ml[41,1722+4]..[41,1722+8])
                Ppat_construct "Soft" (asmcomp/arm/arch.ml[41,1722+4]..[41,1722+8])
                None
              expression (asmcomp/arm/arch.ml[41,1722+17]..[41,1722+23])
                Pexp_constant PConst_string("soft",(asmcomp/arm/arch.ml[41,1722+18]..[41,1722+22]),None)
            <case>
              pattern (asmcomp/arm/arch.ml[42,1746+4]..[42,1746+9])
                Ppat_construct "VFPv2" (asmcomp/arm/arch.ml[42,1746+4]..[42,1746+9])
                None
              expression (asmcomp/arm/arch.ml[42,1746+17]..[42,1746+24])
                Pexp_constant PConst_string("vfpv2",(asmcomp/arm/arch.ml[42,1746+18]..[42,1746+23]),None)
            <case>
              pattern (asmcomp/arm/arch.ml[43,1771+4]..[43,1771+13])
                Ppat_construct "VFPv3_D16" (asmcomp/arm/arch.ml[43,1771+4]..[43,1771+13])
                None
              expression (asmcomp/arm/arch.ml[43,1771+17]..[43,1771+28])
                Pexp_constant PConst_string("vfpv3-d16",(asmcomp/arm/arch.ml[43,1771+18]..[43,1771+27]),None)
            <case>
              pattern (asmcomp/arm/arch.ml[44,1800+4]..[44,1800+9])
                Ppat_construct "VFPv3" (asmcomp/arm/arch.ml[44,1800+4]..[44,1800+9])
                None
              expression (asmcomp/arm/arch.ml[44,1800+17]..[44,1800+24])
                Pexp_constant PConst_string("vfpv3",(asmcomp/arm/arch.ml[44,1800+18]..[44,1800+23]),None)
          ]
    ]
  structure_item (asmcomp/arm/arch.ml[48,1871+0]..[63,2554+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[48,1871+4]..[48,1871+22])
          Ppat_tuple
          [
            pattern (asmcomp/arm/arch.ml[48,1871+5]..[48,1871+9])
              Ppat_var "arch" (asmcomp/arm/arch.ml[48,1871+5]..[48,1871+9])
            pattern (asmcomp/arm/arch.ml[48,1871+11]..[48,1871+14])
              Ppat_var "fpu" (asmcomp/arm/arch.ml[48,1871+11]..[48,1871+14])
            pattern (asmcomp/arm/arch.ml[48,1871+16]..[48,1871+21])
              Ppat_var "thumb" (asmcomp/arm/arch.ml[48,1871+16]..[48,1871+21])
          ]
        expression (asmcomp/arm/arch.ml[49,1896+2]..[63,2554+44])
          Pexp_let Nonrec
          [
            <def>
              pattern (asmcomp/arm/arch.ml[49,1896+6]..[49,1896+36])
                Ppat_tuple
                [
                  pattern (asmcomp/arm/arch.ml[49,1896+7]..[49,1896+15])
                    Ppat_var "def_arch" (asmcomp/arm/arch.ml[49,1896+7]..[49,1896+15])
                  pattern (asmcomp/arm/arch.ml[49,1896+17]..[49,1896+24])
                    Ppat_var "def_fpu" (asmcomp/arm/arch.ml[49,1896+17]..[49,1896+24])
                  pattern (asmcomp/arm/arch.ml[49,1896+26]..[49,1896+35])
                    Ppat_var "def_thumb" (asmcomp/arm/arch.ml[49,1896+26]..[49,1896+35])
                ]
              expression (asmcomp/arm/arch.ml[50,1935+4]..[62,2543+7])
                Pexp_match
                expression (asmcomp/arm/arch.ml[50,1935+16]..[50,1935+33])
                  Pexp_tuple
                  [
                    expression (asmcomp/arm/arch.ml[50,1935+16]..[50,1935+19])
                      Pexp_ident "abi" (asmcomp/arm/arch.ml[50,1935+16]..[50,1935+19])
                    expression (asmcomp/arm/arch.ml[50,1935+21]..[50,1935+33])
                      Pexp_ident "Config.model" (asmcomp/arm/arch.ml[50,1935+21]..[50,1935+33])
                  ]
                [
                  <case>
                    pattern (asmcomp/arm/arch.ml[52,2025+6]..[52,2025+19])
                      Ppat_tuple
                      [
                        pattern (asmcomp/arm/arch.ml[52,2025+6]..[52,2025+10])
                          Ppat_construct "EABI" (asmcomp/arm/arch.ml[52,2025+6]..[52,2025+10])
                          None
                        pattern (asmcomp/arm/arch.ml[52,2025+12]..[52,2025+19])
                          Ppat_constant PConst_string("armv5",(asmcomp/arm/arch.ml[52,2025+13]..[52,2025+18]),None)
                      ]
                    expression (asmcomp/arm/arch.ml[52,2025+26]..[52,2025+51])
                      Pexp_tuple
                      [
                        expression (asmcomp/arm/arch.ml[52,2025+26]..[52,2025+31])
                          Pexp_construct "ARMv5" (asmcomp/arm/arch.ml[52,2025+26]..[52,2025+31])
                          None
                        expression (asmcomp/arm/arch.ml[52,2025+35]..[52,2025+39])
                          Pexp_construct "Soft" (asmcomp/arm/arch.ml[52,2025+35]..[52,2025+39])
                          None
                        expression (asmcomp/arm/arch.ml[52,2025+46]..[52,2025+51])
                          Pexp_construct "false" (asmcomp/arm/arch.ml[52,2025+46]..[52,2025+51])
                          None
                      ]
                  <case>
                    pattern (asmcomp/arm/arch.ml[53,2077+6]..[53,2077+21])
                      Ppat_tuple
                      [
                        pattern (asmcomp/arm/arch.ml[53,2077+6]..[53,2077+10])
                          Ppat_construct "EABI" (asmcomp/arm/arch.ml[53,2077+6]..[53,2077+10])
                          None
                        pattern (asmcomp/arm/arch.ml[53,2077+12]..[53,2077+21])
                          Ppat_constant PConst_string("armv5te",(asmcomp/arm/arch.ml[53,2077+13]..[53,2077+20]),None)
                      ]
                    expression (asmcomp/arm/arch.ml[53,2077+26]..[53,2077+51])
                      Pexp_tuple
                      [
                        expression (asmcomp/arm/arch.ml[53,2077+26]..[53,2077+33])
                          Pexp_construct "ARMv5TE" (asmcomp/arm/arch.ml[53,2077+26]..[53,2077+33])
                          None
                        expression (asmcomp/arm/arch.ml[53,2077+35]..[53,2077+39])
                          Pexp_construct "Soft" (asmcomp/arm/arch.ml[53,2077+35]..[53,2077+39])
                          None
                        expression (asmcomp/arm/arch.ml[53,2077+46]..[53,2077+51])
                          Pexp_construct "false" (asmcomp/arm/arch.ml[53,2077+46]..[53,2077+51])
                          None
                      ]
                  <case>
                    pattern (asmcomp/arm/arch.ml[54,2129+6]..[54,2129+19])
                      Ppat_tuple
                      [
                        pattern (asmcomp/arm/arch.ml[54,2129+6]..[54,2129+10])
                          Ppat_construct "EABI" (asmcomp/arm/arch.ml[54,2129+6]..[54,2129+10])
                          None
                        pattern (asmcomp/arm/arch.ml[54,2129+12]..[54,2129+19])
                          Ppat_constant PConst_string("armv6",(asmcomp/arm/arch.ml[54,2129+13]..[54,2129+18]),None)
                      ]
                    expression (asmcomp/arm/arch.ml[54,2129+26]..[54,2129+51])
                      Pexp_tuple
                      [
                        expression (asmcomp/arm/arch.ml[54,2129+26]..[54,2129+31])
                          Pexp_construct "ARMv6" (asmcomp/arm/arch.ml[54,2129+26]..[54,2129+31])
                          None
                        expression (asmcomp/arm/arch.ml[54,2129+35]..[54,2129+39])
                          Pexp_construct "Soft" (asmcomp/arm/arch.ml[54,2129+35]..[54,2129+39])
                          None
                        expression (asmcomp/arm/arch.ml[54,2129+46]..[54,2129+51])
                          Pexp_construct "false" (asmcomp/arm/arch.ml[54,2129+46]..[54,2129+51])
                          None
                      ]
                  <case>
                    pattern (asmcomp/arm/arch.ml[55,2181+6]..[55,2181+21])
                      Ppat_tuple
                      [
                        pattern (asmcomp/arm/arch.ml[55,2181+6]..[55,2181+10])
                          Ppat_construct "EABI" (asmcomp/arm/arch.ml[55,2181+6]..[55,2181+10])
                          None
                        pattern (asmcomp/arm/arch.ml[55,2181+12]..[55,2181+21])
                          Ppat_constant PConst_string("armv6t2",(asmcomp/arm/arch.ml[55,2181+13]..[55,2181+20]),None)
                      ]
                    expression (asmcomp/arm/arch.ml[55,2181+26]..[55,2181+51])
                      Pexp_tuple
                      [
                        expression (asmcomp/arm/arch.ml[55,2181+26]..[55,2181+33])
                          Pexp_construct "ARMv6T2" (asmcomp/arm/arch.ml[55,2181+26]..[55,2181+33])
                          None
                        expression (asmcomp/arm/arch.ml[55,2181+35]..[55,2181+39])
                          Pexp_construct "Soft" (asmcomp/arm/arch.ml[55,2181+35]..[55,2181+39])
                          None
                        expression (asmcomp/arm/arch.ml[55,2181+46]..[55,2181+51])
                          Pexp_construct "false" (asmcomp/arm/arch.ml[55,2181+46]..[55,2181+51])
                          None
                      ]
                  <case>
                    pattern (asmcomp/arm/arch.ml[56,2233+6]..[56,2233+19])
                      Ppat_tuple
                      [
                        pattern (asmcomp/arm/arch.ml[56,2233+6]..[56,2233+10])
                          Ppat_construct "EABI" (asmcomp/arm/arch.ml[56,2233+6]..[56,2233+10])
                          None
                        pattern (asmcomp/arm/arch.ml[56,2233+12]..[56,2233+19])
                          Ppat_constant PConst_string("armv7",(asmcomp/arm/arch.ml[56,2233+13]..[56,2233+18]),None)
                      ]
                    expression (asmcomp/arm/arch.ml[56,2233+26]..[56,2233+51])
                      Pexp_tuple
                      [
                        expression (asmcomp/arm/arch.ml[56,2233+26]..[56,2233+31])
                          Pexp_construct "ARMv7" (asmcomp/arm/arch.ml[56,2233+26]..[56,2233+31])
                          None
                        expression (asmcomp/arm/arch.ml[56,2233+35]..[56,2233+39])
                          Pexp_construct "Soft" (asmcomp/arm/arch.ml[56,2233+35]..[56,2233+39])
                          None
                        expression (asmcomp/arm/arch.ml[56,2233+46]..[56,2233+51])
                          Pexp_construct "false" (asmcomp/arm/arch.ml[56,2233+46]..[56,2233+51])
                          None
                      ]
                  <case>
                    pattern (asmcomp/arm/arch.ml[57,2285+6]..[57,2285+19])
                      Ppat_tuple
                      [
                        pattern (asmcomp/arm/arch.ml[57,2285+6]..[57,2285+10])
                          Ppat_construct "EABI" (asmcomp/arm/arch.ml[57,2285+6]..[57,2285+10])
                          None
                        pattern (asmcomp/arm/arch.ml[57,2285+12]..[57,2285+19])
                          Ppat_constant PConst_string("armv8",(asmcomp/arm/arch.ml[57,2285+13]..[57,2285+18]),None)
                      ]
                    expression (asmcomp/arm/arch.ml[57,2285+26]..[57,2285+51])
                      Pexp_tuple
                      [
                        expression (asmcomp/arm/arch.ml[57,2285+26]..[57,2285+31])
                          Pexp_construct "ARMv8" (asmcomp/arm/arch.ml[57,2285+26]..[57,2285+31])
                          None
                        expression (asmcomp/arm/arch.ml[57,2285+35]..[57,2285+39])
                          Pexp_construct "Soft" (asmcomp/arm/arch.ml[57,2285+35]..[57,2285+39])
                          None
                        expression (asmcomp/arm/arch.ml[57,2285+46]..[57,2285+51])
                          Pexp_construct "false" (asmcomp/arm/arch.ml[57,2285+46]..[57,2285+51])
                          None
                      ]
                  <case>
                    pattern (asmcomp/arm/arch.ml[58,2337+6]..[58,2337+13])
                      Ppat_tuple
                      [
                        pattern (asmcomp/arm/arch.ml[58,2337+6]..[58,2337+10])
                          Ppat_construct "EABI" (asmcomp/arm/arch.ml[58,2337+6]..[58,2337+10])
                          None
                        pattern (asmcomp/arm/arch.ml[58,2337+12]..[58,2337+13])
                          Ppat_any
                      ]
                    expression (asmcomp/arm/arch.ml[58,2337+26]..[58,2337+51])
                      Pexp_tuple
                      [
                        expression (asmcomp/arm/arch.ml[58,2337+26]..[58,2337+31])
                          Pexp_construct "ARMv4" (asmcomp/arm/arch.ml[58,2337+26]..[58,2337+31])
                          None
                        expression (asmcomp/arm/arch.ml[58,2337+35]..[58,2337+39])
                          Pexp_construct "Soft" (asmcomp/arm/arch.ml[58,2337+35]..[58,2337+39])
                          None
                        expression (asmcomp/arm/arch.ml[58,2337+46]..[58,2337+51])
                          Pexp_construct "false" (asmcomp/arm/arch.ml[58,2337+46]..[58,2337+51])
                          None
                      ]
                  <case>
                    pattern (asmcomp/arm/arch.ml[59,2389+6]..[59,2389+22])
                      Ppat_tuple
                      [
                        pattern (asmcomp/arm/arch.ml[59,2389+6]..[59,2389+13])
                          Ppat_construct "EABI_HF" (asmcomp/arm/arch.ml[59,2389+6]..[59,2389+13])
                          None
                        pattern (asmcomp/arm/arch.ml[59,2389+15]..[59,2389+22])
                          Ppat_constant PConst_string("armv6",(asmcomp/arm/arch.ml[59,2389+16]..[59,2389+21]),None)
                      ]
                    expression (asmcomp/arm/arch.ml[59,2389+26]..[59,2389+51])
                      Pexp_tuple
                      [
                        expression (asmcomp/arm/arch.ml[59,2389+26]..[59,2389+31])
                          Pexp_construct "ARMv6" (asmcomp/arm/arch.ml[59,2389+26]..[59,2389+31])
                          None
                        expression (asmcomp/arm/arch.ml[59,2389+35]..[59,2389+40])
                          Pexp_construct "VFPv2" (asmcomp/arm/arch.ml[59,2389+35]..[59,2389+40])
                          None
                        expression (asmcomp/arm/arch.ml[59,2389+46]..[59,2389+51])
                          Pexp_construct "false" (asmcomp/arm/arch.ml[59,2389+46]..[59,2389+51])
                          None
                      ]
                  <case>
                    pattern (asmcomp/arm/arch.ml[60,2441+6]..[60,2441+22])
                      Ppat_tuple
                      [
                        pattern (asmcomp/arm/arch.ml[60,2441+6]..[60,2441+13])
                          Ppat_construct "EABI_HF" (asmcomp/arm/arch.ml[60,2441+6]..[60,2441+13])
                          None
                        pattern (asmcomp/arm/arch.ml[60,2441+15]..[60,2441+22])
                          Ppat_constant PConst_string("armv8",(asmcomp/arm/arch.ml[60,2441+16]..[60,2441+21]),None)
                      ]
                    expression (asmcomp/arm/arch.ml[60,2441+26]..[60,2441+50])
                      Pexp_tuple
                      [
                        expression (asmcomp/arm/arch.ml[60,2441+26]..[60,2441+31])
                          Pexp_construct "ARMv8" (asmcomp/arm/arch.ml[60,2441+26]..[60,2441+31])
                          None
                        expression (asmcomp/arm/arch.ml[60,2441+35]..[60,2441+40])
                          Pexp_construct "VFPv3" (asmcomp/arm/arch.ml[60,2441+35]..[60,2441+40])
                          None
                        expression (asmcomp/arm/arch.ml[60,2441+46]..[60,2441+50])
                          Pexp_construct "true" (asmcomp/arm/arch.ml[60,2441+46]..[60,2441+50])
                          None
                      ]
                  <case>
                    pattern (asmcomp/arm/arch.ml[61,2492+6]..[61,2492+16])
                      Ppat_tuple
                      [
                        pattern (asmcomp/arm/arch.ml[61,2492+6]..[61,2492+13])
                          Ppat_construct "EABI_HF" (asmcomp/arm/arch.ml[61,2492+6]..[61,2492+13])
                          None
                        pattern (asmcomp/arm/arch.ml[61,2492+15]..[61,2492+16])
                          Ppat_any
                      ]
                    expression (asmcomp/arm/arch.ml[61,2492+26]..[61,2492+50])
                      Pexp_tuple
                      [
                        expression (asmcomp/arm/arch.ml[61,2492+26]..[61,2492+31])
                          Pexp_construct "ARMv7" (asmcomp/arm/arch.ml[61,2492+26]..[61,2492+31])
                          None
                        expression (asmcomp/arm/arch.ml[61,2492+35]..[61,2492+44])
                          Pexp_construct "VFPv3_D16" (asmcomp/arm/arch.ml[61,2492+35]..[61,2492+44])
                          None
                        expression (asmcomp/arm/arch.ml[61,2492+46]..[61,2492+50])
                          Pexp_construct "true" (asmcomp/arm/arch.ml[61,2492+46]..[61,2492+50])
                          None
                      ]
                ]
          ]
          expression (asmcomp/arm/arch.ml[63,2554+2]..[63,2554+44])
            Pexp_tuple
            [
              expression (asmcomp/arm/arch.ml[63,2554+3]..[63,2554+15])
                Pexp_apply
                expression (asmcomp/arm/arch.ml[63,2554+3]..[63,2554+6])
                  Pexp_ident "ref" (asmcomp/arm/arch.ml[63,2554+3]..[63,2554+6])
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/arm/arch.ml[63,2554+7]..[63,2554+15])
                      Pexp_ident "def_arch" (asmcomp/arm/arch.ml[63,2554+7]..[63,2554+15])
                ]
              expression (asmcomp/arm/arch.ml[63,2554+17]..[63,2554+28])
                Pexp_apply
                expression (asmcomp/arm/arch.ml[63,2554+17]..[63,2554+20])
                  Pexp_ident "ref" (asmcomp/arm/arch.ml[63,2554+17]..[63,2554+20])
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/arm/arch.ml[63,2554+21]..[63,2554+28])
                      Pexp_ident "def_fpu" (asmcomp/arm/arch.ml[63,2554+21]..[63,2554+28])
                ]
              expression (asmcomp/arm/arch.ml[63,2554+30]..[63,2554+43])
                Pexp_apply
                expression (asmcomp/arm/arch.ml[63,2554+30]..[63,2554+33])
                  Pexp_ident "ref" (asmcomp/arm/arch.ml[63,2554+30]..[63,2554+33])
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/arm/arch.ml[63,2554+34]..[63,2554+43])
                      Pexp_ident "def_thumb" (asmcomp/arm/arch.ml[63,2554+34]..[63,2554+43])
                ]
            ]
    ]
  structure_item (asmcomp/arm/arch.ml[65,2600+0]..[75,3089+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[65,2600+4]..[65,2600+9])
          Ppat_var "farch" (asmcomp/arm/arch.ml[65,2600+4]..[65,2600+9])
        expression (asmcomp/arm/arch.ml[65,2600+10]..[75,3089+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/arm/arch.ml[65,2600+10]..[65,2600+14])
            Ppat_var "spec" (asmcomp/arm/arch.ml[65,2600+10]..[65,2600+14])
          expression (asmcomp/arm/arch.ml[66,2617+2]..[75,3089+5])
            Pexp_apply
            expression (asmcomp/arm/arch.ml[66,2617+7]..[66,2617+9])
              Pexp_ident ":=" (asmcomp/arm/arch.ml[66,2617+7]..[66,2617+9])
            [
              <arg>
              Nolabel
                expression (asmcomp/arm/arch.ml[66,2617+2]..[66,2617+6])
                  Pexp_ident "arch" (asmcomp/arm/arch.ml[66,2617+2]..[66,2617+6])
              <arg>
              Nolabel
                expression (asmcomp/arm/arch.ml[66,2617+10]..[75,3089+5])
                  Pexp_match
                  expression (asmcomp/arm/arch.ml[66,2617+22]..[66,2617+26])
                    Pexp_ident "spec" (asmcomp/arm/arch.ml[66,2617+22]..[66,2617+26])
                  [
                    <case>
                      pattern (asmcomp/arm/arch.ml[67,2649+13]..[67,2649+20])
                        Ppat_constant PConst_string("armv4",(asmcomp/arm/arch.ml[67,2649+14]..[67,2649+19]),None)
                      <when>
                        expression (asmcomp/arm/arch.ml[67,2649+26]..[67,2649+40])
                          Pexp_apply
                          expression (asmcomp/arm/arch.ml[67,2649+30]..[67,2649+32])
                            Pexp_ident "<>" (asmcomp/arm/arch.ml[67,2649+30]..[67,2649+32])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[67,2649+26]..[67,2649+29])
                                Pexp_ident "abi" (asmcomp/arm/arch.ml[67,2649+26]..[67,2649+29])
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[67,2649+33]..[67,2649+40])
                                Pexp_construct "EABI_HF" (asmcomp/arm/arch.ml[67,2649+33]..[67,2649+40])
                                None
                          ]
                      expression (asmcomp/arm/arch.ml[67,2649+46]..[67,2649+51])
                        Pexp_construct "ARMv4" (asmcomp/arm/arch.ml[67,2649+46]..[67,2649+51])
                        None
                    <case>
                      pattern (asmcomp/arm/arch.ml[68,2701+13]..[68,2701+20])
                        Ppat_constant PConst_string("armv5",(asmcomp/arm/arch.ml[68,2701+14]..[68,2701+19]),None)
                      <when>
                        expression (asmcomp/arm/arch.ml[68,2701+26]..[68,2701+40])
                          Pexp_apply
                          expression (asmcomp/arm/arch.ml[68,2701+30]..[68,2701+32])
                            Pexp_ident "<>" (asmcomp/arm/arch.ml[68,2701+30]..[68,2701+32])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[68,2701+26]..[68,2701+29])
                                Pexp_ident "abi" (asmcomp/arm/arch.ml[68,2701+26]..[68,2701+29])
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[68,2701+33]..[68,2701+40])
                                Pexp_construct "EABI_HF" (asmcomp/arm/arch.ml[68,2701+33]..[68,2701+40])
                                None
                          ]
                      expression (asmcomp/arm/arch.ml[68,2701+46]..[68,2701+51])
                        Pexp_construct "ARMv5" (asmcomp/arm/arch.ml[68,2701+46]..[68,2701+51])
                        None
                    <case>
                      pattern (asmcomp/arm/arch.ml[69,2753+13]..[69,2753+22])
                        Ppat_constant PConst_string("armv5te",(asmcomp/arm/arch.ml[69,2753+14]..[69,2753+21]),None)
                      <when>
                        expression (asmcomp/arm/arch.ml[69,2753+28]..[69,2753+42])
                          Pexp_apply
                          expression (asmcomp/arm/arch.ml[69,2753+32]..[69,2753+34])
                            Pexp_ident "<>" (asmcomp/arm/arch.ml[69,2753+32]..[69,2753+34])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[69,2753+28]..[69,2753+31])
                                Pexp_ident "abi" (asmcomp/arm/arch.ml[69,2753+28]..[69,2753+31])
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[69,2753+35]..[69,2753+42])
                                Pexp_construct "EABI_HF" (asmcomp/arm/arch.ml[69,2753+35]..[69,2753+42])
                                None
                          ]
                      expression (asmcomp/arm/arch.ml[69,2753+46]..[69,2753+53])
                        Pexp_construct "ARMv5TE" (asmcomp/arm/arch.ml[69,2753+46]..[69,2753+53])
                        None
                    <case>
                      pattern (asmcomp/arm/arch.ml[70,2807+13]..[70,2807+20])
                        Ppat_constant PConst_string("armv6",(asmcomp/arm/arch.ml[70,2807+14]..[70,2807+19]),None)
                      expression (asmcomp/arm/arch.ml[70,2807+46]..[70,2807+51])
                        Pexp_construct "ARMv6" (asmcomp/arm/arch.ml[70,2807+46]..[70,2807+51])
                        None
                    <case>
                      pattern (asmcomp/arm/arch.ml[71,2859+13]..[71,2859+22])
                        Ppat_constant PConst_string("armv6t2",(asmcomp/arm/arch.ml[71,2859+14]..[71,2859+21]),None)
                      expression (asmcomp/arm/arch.ml[71,2859+46]..[71,2859+53])
                        Pexp_construct "ARMv6T2" (asmcomp/arm/arch.ml[71,2859+46]..[71,2859+53])
                        None
                    <case>
                      pattern (asmcomp/arm/arch.ml[72,2913+13]..[72,2913+20])
                        Ppat_constant PConst_string("armv7",(asmcomp/arm/arch.ml[72,2913+14]..[72,2913+19]),None)
                      expression (asmcomp/arm/arch.ml[72,2913+46]..[72,2913+51])
                        Pexp_construct "ARMv7" (asmcomp/arm/arch.ml[72,2913+46]..[72,2913+51])
                        None
                    <case>
                      pattern (asmcomp/arm/arch.ml[73,2965+13]..[73,2965+20])
                        Ppat_constant PConst_string("armv8",(asmcomp/arm/arch.ml[73,2965+14]..[73,2965+19]),None)
                      expression (asmcomp/arm/arch.ml[73,2965+46]..[73,2965+51])
                        Pexp_construct "ARMv8" (asmcomp/arm/arch.ml[73,2965+46]..[73,2965+51])
                        None
                    <case>
                      pattern (asmcomp/arm/arch.ml[74,3017+13]..[74,3017+17])
                        Ppat_var "spec" (asmcomp/arm/arch.ml[74,3017+13]..[74,3017+17])
                      expression (asmcomp/arm/arch.ml[74,3017+21]..[74,3017+71])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[74,3017+21]..[74,3017+26])
                          Pexp_ident "raise" (asmcomp/arm/arch.ml[74,3017+21]..[74,3017+26])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[74,3017+27]..[74,3017+71])
                              Pexp_construct "Arg.Bad" (asmcomp/arm/arch.ml[74,3017+28]..[74,3017+35])
                              Some
                                expression (asmcomp/arm/arch.ml[74,3017+36]..[74,3017+70])
                                  Pexp_apply
                                  expression (asmcomp/arm/arch.ml[74,3017+63]..[74,3017+64])
                                    Pexp_ident "^" (asmcomp/arm/arch.ml[74,3017+63]..[74,3017+64])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/arm/arch.ml[74,3017+37]..[74,3017+62])
                                        Pexp_constant PConst_string("wrong '-farch' option: ",(asmcomp/arm/arch.ml[74,3017+38]..[74,3017+61]),None)
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/arm/arch.ml[74,3017+65]..[74,3017+69])
                                        Pexp_ident "spec" (asmcomp/arm/arch.ml[74,3017+65]..[74,3017+69])
                                  ]
                        ]
                  ]
            ]
    ]
  structure_item (asmcomp/arm/arch.ml[77,3096+0]..[84,3424+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[77,3096+4]..[77,3096+8])
          Ppat_var "ffpu" (asmcomp/arm/arch.ml[77,3096+4]..[77,3096+8])
        expression (asmcomp/arm/arch.ml[77,3096+9]..[84,3424+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/arm/arch.ml[77,3096+9]..[77,3096+13])
            Ppat_var "spec" (asmcomp/arm/arch.ml[77,3096+9]..[77,3096+13])
          expression (asmcomp/arm/arch.ml[78,3112+2]..[84,3424+5])
            Pexp_apply
            expression (asmcomp/arm/arch.ml[78,3112+6]..[78,3112+8])
              Pexp_ident ":=" (asmcomp/arm/arch.ml[78,3112+6]..[78,3112+8])
            [
              <arg>
              Nolabel
                expression (asmcomp/arm/arch.ml[78,3112+2]..[78,3112+5])
                  Pexp_ident "fpu" (asmcomp/arm/arch.ml[78,3112+2]..[78,3112+5])
              <arg>
              Nolabel
                expression (asmcomp/arm/arch.ml[78,3112+9]..[84,3424+5])
                  Pexp_match
                  expression (asmcomp/arm/arch.ml[78,3112+21]..[78,3112+25])
                    Pexp_ident "spec" (asmcomp/arm/arch.ml[78,3112+21]..[78,3112+25])
                  [
                    <case>
                      pattern (asmcomp/arm/arch.ml[79,3143+12]..[79,3143+18])
                        Ppat_constant PConst_string("soft",(asmcomp/arm/arch.ml[79,3143+13]..[79,3143+17]),None)
                      <when>
                        expression (asmcomp/arm/arch.ml[79,3143+24]..[79,3143+38])
                          Pexp_apply
                          expression (asmcomp/arm/arch.ml[79,3143+28]..[79,3143+30])
                            Pexp_ident "<>" (asmcomp/arm/arch.ml[79,3143+28]..[79,3143+30])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[79,3143+24]..[79,3143+27])
                                Pexp_ident "abi" (asmcomp/arm/arch.ml[79,3143+24]..[79,3143+27])
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[79,3143+31]..[79,3143+38])
                                Pexp_construct "EABI_HF" (asmcomp/arm/arch.ml[79,3143+31]..[79,3143+38])
                                None
                          ]
                      expression (asmcomp/arm/arch.ml[79,3143+46]..[79,3143+50])
                        Pexp_construct "Soft" (asmcomp/arm/arch.ml[79,3143+46]..[79,3143+50])
                        None
                    <case>
                      pattern (asmcomp/arm/arch.ml[80,3194+12]..[80,3194+19])
                        Ppat_constant PConst_string("vfpv2",(asmcomp/arm/arch.ml[80,3194+13]..[80,3194+18]),None)
                      <when>
                        expression (asmcomp/arm/arch.ml[80,3194+25]..[80,3194+38])
                          Pexp_apply
                          expression (asmcomp/arm/arch.ml[80,3194+29]..[80,3194+30])
                            Pexp_ident "=" (asmcomp/arm/arch.ml[80,3194+29]..[80,3194+30])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[80,3194+25]..[80,3194+28])
                                Pexp_ident "abi" (asmcomp/arm/arch.ml[80,3194+25]..[80,3194+28])
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[80,3194+31]..[80,3194+38])
                                Pexp_construct "EABI_HF" (asmcomp/arm/arch.ml[80,3194+31]..[80,3194+38])
                                None
                          ]
                      expression (asmcomp/arm/arch.ml[80,3194+46]..[80,3194+51])
                        Pexp_construct "VFPv2" (asmcomp/arm/arch.ml[80,3194+46]..[80,3194+51])
                        None
                    <case>
                      pattern (asmcomp/arm/arch.ml[81,3246+12]..[81,3246+23])
                        Ppat_constant PConst_string("vfpv3-d16",(asmcomp/arm/arch.ml[81,3246+13]..[81,3246+22]),None)
                      <when>
                        expression (asmcomp/arm/arch.ml[81,3246+29]..[81,3246+42])
                          Pexp_apply
                          expression (asmcomp/arm/arch.ml[81,3246+33]..[81,3246+34])
                            Pexp_ident "=" (asmcomp/arm/arch.ml[81,3246+33]..[81,3246+34])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[81,3246+29]..[81,3246+32])
                                Pexp_ident "abi" (asmcomp/arm/arch.ml[81,3246+29]..[81,3246+32])
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[81,3246+35]..[81,3246+42])
                                Pexp_construct "EABI_HF" (asmcomp/arm/arch.ml[81,3246+35]..[81,3246+42])
                                None
                          ]
                      expression (asmcomp/arm/arch.ml[81,3246+46]..[81,3246+55])
                        Pexp_construct "VFPv3_D16" (asmcomp/arm/arch.ml[81,3246+46]..[81,3246+55])
                        None
                    <case>
                      pattern (asmcomp/arm/arch.ml[82,3302+12]..[82,3302+19])
                        Ppat_constant PConst_string("vfpv3",(asmcomp/arm/arch.ml[82,3302+13]..[82,3302+18]),None)
                      <when>
                        expression (asmcomp/arm/arch.ml[82,3302+25]..[82,3302+38])
                          Pexp_apply
                          expression (asmcomp/arm/arch.ml[82,3302+29]..[82,3302+30])
                            Pexp_ident "=" (asmcomp/arm/arch.ml[82,3302+29]..[82,3302+30])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[82,3302+25]..[82,3302+28])
                                Pexp_ident "abi" (asmcomp/arm/arch.ml[82,3302+25]..[82,3302+28])
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[82,3302+31]..[82,3302+38])
                                Pexp_construct "EABI_HF" (asmcomp/arm/arch.ml[82,3302+31]..[82,3302+38])
                                None
                          ]
                      expression (asmcomp/arm/arch.ml[82,3302+46]..[82,3302+51])
                        Pexp_construct "VFPv3" (asmcomp/arm/arch.ml[82,3302+46]..[82,3302+51])
                        None
                    <case>
                      pattern (asmcomp/arm/arch.ml[83,3354+12]..[83,3354+16])
                        Ppat_var "spec" (asmcomp/arm/arch.ml[83,3354+12]..[83,3354+16])
                      expression (asmcomp/arm/arch.ml[83,3354+20]..[83,3354+69])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[83,3354+20]..[83,3354+25])
                          Pexp_ident "raise" (asmcomp/arm/arch.ml[83,3354+20]..[83,3354+25])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[83,3354+26]..[83,3354+69])
                              Pexp_construct "Arg.Bad" (asmcomp/arm/arch.ml[83,3354+27]..[83,3354+34])
                              Some
                                expression (asmcomp/arm/arch.ml[83,3354+35]..[83,3354+68])
                                  Pexp_apply
                                  expression (asmcomp/arm/arch.ml[83,3354+61]..[83,3354+62])
                                    Pexp_ident "^" (asmcomp/arm/arch.ml[83,3354+61]..[83,3354+62])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/arm/arch.ml[83,3354+36]..[83,3354+60])
                                        Pexp_constant PConst_string("wrong '-ffpu' option: ",(asmcomp/arm/arch.ml[83,3354+37]..[83,3354+59]),None)
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/arm/arch.ml[83,3354+63]..[83,3354+67])
                                        Pexp_ident "spec" (asmcomp/arm/arch.ml[83,3354+63]..[83,3354+67])
                                  ]
                        ]
                  ]
            ]
    ]
  structure_item (asmcomp/arm/arch.ml[86,3431+0]..[102,4119+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[86,3431+4]..[86,3431+24])
          Ppat_var "command_line_options" (asmcomp/arm/arch.ml[86,3431+4]..[86,3431+24])
        expression (asmcomp/arm/arch.ml[87,3458+2]..[102,4119+49])
          Pexp_construct "::" (asmcomp/arm/arch.ml[87,3458+4]..[102,4119+49]) ghost
          Some
            expression (asmcomp/arm/arch.ml[87,3458+4]..[102,4119+49]) ghost
              Pexp_tuple
              [
                expression (asmcomp/arm/arch.ml[87,3458+4]..[89,3541+52])
                  Pexp_tuple
                  [
                    expression (asmcomp/arm/arch.ml[87,3458+4]..[87,3458+12])
                      Pexp_constant PConst_string("-farch",(asmcomp/arm/arch.ml[87,3458+5]..[87,3458+11]),None)
                    expression (asmcomp/arm/arch.ml[87,3458+14]..[87,3458+30])
                      Pexp_construct "Arg.String" (asmcomp/arm/arch.ml[87,3458+14]..[87,3458+24])
                      Some
                        expression (asmcomp/arm/arch.ml[87,3458+25]..[87,3458+30])
                          Pexp_ident "farch" (asmcomp/arm/arch.ml[87,3458+25]..[87,3458+30])
                    expression (asmcomp/arm/arch.ml[88,3490+6]..[89,3541+52])
                      Pexp_apply
                      expression (asmcomp/arm/arch.ml[89,3541+6]..[89,3541+7])
                        Pexp_ident "^" (asmcomp/arm/arch.ml[89,3541+6]..[89,3541+7])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/arm/arch.ml[88,3490+6]..[88,3490+50])
                            Pexp_constant PConst_string("<arch>  Select the ARM target architecture",(asmcomp/arm/arch.ml[88,3490+7]..[88,3490+49]),None)
                        <arg>
                        Nolabel
                          expression (asmcomp/arm/arch.ml[89,3541+8]..[89,3541+52])
                            Pexp_apply
                            expression (asmcomp/arm/arch.ml[89,3541+22]..[89,3541+23])
                              Pexp_ident "^" (asmcomp/arm/arch.ml[89,3541+22]..[89,3541+23])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/arm/arch.ml[89,3541+8]..[89,3541+21])
                                  Pexp_constant PConst_string(" (default: ",(asmcomp/arm/arch.ml[89,3541+9]..[89,3541+20]),None)
                              <arg>
                              Nolabel
                                expression (asmcomp/arm/arch.ml[89,3541+24]..[89,3541+52])
                                  Pexp_apply
                                  expression (asmcomp/arm/arch.ml[89,3541+47]..[89,3541+48])
                                    Pexp_ident "^" (asmcomp/arm/arch.ml[89,3541+47]..[89,3541+48])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/arm/arch.ml[89,3541+24]..[89,3541+46])
                                        Pexp_apply
                                        expression (asmcomp/arm/arch.ml[89,3541+25]..[89,3541+39])
                                          Pexp_ident "string_of_arch" (asmcomp/arm/arch.ml[89,3541+25]..[89,3541+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/arm/arch.ml[89,3541+40]..[89,3541+45])
                                              Pexp_apply
                                              expression (asmcomp/arm/arch.ml[89,3541+40]..[89,3541+41])
                                                Pexp_ident "!" (asmcomp/arm/arch.ml[89,3541+40]..[89,3541+41])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/arm/arch.ml[89,3541+41]..[89,3541+45])
                                                    Pexp_ident "arch" (asmcomp/arm/arch.ml[89,3541+41]..[89,3541+45])
                                              ]
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/arm/arch.ml[89,3541+49]..[89,3541+52])
                                        Pexp_constant PConst_string(")",(asmcomp/arm/arch.ml[89,3541+50]..[89,3541+51]),None)
                                  ]
                            ]
                      ]
                  ]
                expression (asmcomp/arm/arch.ml[90,3595+4]..[102,4119+49]) ghost
                  Pexp_construct "::" (asmcomp/arm/arch.ml[90,3595+4]..[102,4119+49]) ghost
                  Some
                    expression (asmcomp/arm/arch.ml[90,3595+4]..[102,4119+49]) ghost
                      Pexp_tuple
                      [
                        expression (asmcomp/arm/arch.ml[90,3595+4]..[92,3675+50])
                          Pexp_tuple
                          [
                            expression (asmcomp/arm/arch.ml[90,3595+4]..[90,3595+11])
                              Pexp_constant PConst_string("-ffpu",(asmcomp/arm/arch.ml[90,3595+5]..[90,3595+10]),None)
                            expression (asmcomp/arm/arch.ml[90,3595+13]..[90,3595+28])
                              Pexp_construct "Arg.String" (asmcomp/arm/arch.ml[90,3595+13]..[90,3595+23])
                              Some
                                expression (asmcomp/arm/arch.ml[90,3595+24]..[90,3595+28])
                                  Pexp_ident "ffpu" (asmcomp/arm/arch.ml[90,3595+24]..[90,3595+28])
                            expression (asmcomp/arm/arch.ml[91,3625+6]..[92,3675+50])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[92,3675+6]..[92,3675+7])
                                Pexp_ident "^" (asmcomp/arm/arch.ml[92,3675+6]..[92,3675+7])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[91,3625+6]..[91,3625+49])
                                    Pexp_constant PConst_string("<fpu>  Select the floating-point hardware",(asmcomp/arm/arch.ml[91,3625+7]..[91,3625+48]),None)
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[92,3675+8]..[92,3675+50])
                                    Pexp_apply
                                    expression (asmcomp/arm/arch.ml[92,3675+22]..[92,3675+23])
                                      Pexp_ident "^" (asmcomp/arm/arch.ml[92,3675+22]..[92,3675+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/arm/arch.ml[92,3675+8]..[92,3675+21])
                                          Pexp_constant PConst_string(" (default: ",(asmcomp/arm/arch.ml[92,3675+9]..[92,3675+20]),None)
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/arm/arch.ml[92,3675+24]..[92,3675+50])
                                          Pexp_apply
                                          expression (asmcomp/arm/arch.ml[92,3675+45]..[92,3675+46])
                                            Pexp_ident "^" (asmcomp/arm/arch.ml[92,3675+45]..[92,3675+46])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/arm/arch.ml[92,3675+24]..[92,3675+44])
                                                Pexp_apply
                                                expression (asmcomp/arm/arch.ml[92,3675+25]..[92,3675+38])
                                                  Pexp_ident "string_of_fpu" (asmcomp/arm/arch.ml[92,3675+25]..[92,3675+38])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (asmcomp/arm/arch.ml[92,3675+39]..[92,3675+43])
                                                      Pexp_apply
                                                      expression (asmcomp/arm/arch.ml[92,3675+39]..[92,3675+40])
                                                        Pexp_ident "!" (asmcomp/arm/arch.ml[92,3675+39]..[92,3675+40])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (asmcomp/arm/arch.ml[92,3675+40]..[92,3675+43])
                                                            Pexp_ident "fpu" (asmcomp/arm/arch.ml[92,3675+40]..[92,3675+43])
                                                      ]
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/arm/arch.ml[92,3675+47]..[92,3675+50])
                                                Pexp_constant PConst_string(")",(asmcomp/arm/arch.ml[92,3675+48]..[92,3675+49]),None)
                                          ]
                                    ]
                              ]
                          ]
                        expression (asmcomp/arm/arch.ml[93,3727+4]..[102,4119+49]) ghost
                          Pexp_construct "::" (asmcomp/arm/arch.ml[93,3727+4]..[102,4119+49]) ghost
                          Some
                            expression (asmcomp/arm/arch.ml[93,3727+4]..[102,4119+49]) ghost
                              Pexp_tuple
                              [
                                expression (asmcomp/arm/arch.ml[93,3727+4]..[94,3766+51])
                                  Pexp_tuple
                                  [
                                    expression (asmcomp/arm/arch.ml[93,3727+4]..[93,3727+11])
                                      Pexp_constant PConst_string("-fPIC",(asmcomp/arm/arch.ml[93,3727+5]..[93,3727+10]),None)
                                    expression (asmcomp/arm/arch.ml[93,3727+13]..[93,3727+37])
                                      Pexp_construct "Arg.Set" (asmcomp/arm/arch.ml[93,3727+13]..[93,3727+20])
                                      Some
                                        expression (asmcomp/arm/arch.ml[93,3727+21]..[93,3727+37])
                                          Pexp_ident "Clflags.pic_code" (asmcomp/arm/arch.ml[93,3727+21]..[93,3727+37])
                                    expression (asmcomp/arm/arch.ml[94,3766+6]..[94,3766+51])
                                      Pexp_constant PConst_string(" Generate position-independent machine code",(asmcomp/arm/arch.ml[94,3766+7]..[94,3766+50]),None)
                                  ]
                                expression (asmcomp/arm/arch.ml[95,3819+4]..[102,4119+49]) ghost
                                  Pexp_construct "::" (asmcomp/arm/arch.ml[95,3819+4]..[102,4119+49]) ghost
                                  Some
                                    expression (asmcomp/arm/arch.ml[95,3819+4]..[102,4119+49]) ghost
                                      Pexp_tuple
                                      [
                                        expression (asmcomp/arm/arch.ml[95,3819+4]..[96,3863+49])
                                          Pexp_tuple
                                          [
                                            expression (asmcomp/arm/arch.ml[95,3819+4]..[95,3819+14])
                                              Pexp_constant PConst_string("-fno-PIC",(asmcomp/arm/arch.ml[95,3819+5]..[95,3819+13]),None)
                                            expression (asmcomp/arm/arch.ml[95,3819+16]..[95,3819+42])
                                              Pexp_construct "Arg.Clear" (asmcomp/arm/arch.ml[95,3819+16]..[95,3819+25])
                                              Some
                                                expression (asmcomp/arm/arch.ml[95,3819+26]..[95,3819+42])
                                                  Pexp_ident "Clflags.pic_code" (asmcomp/arm/arch.ml[95,3819+26]..[95,3819+42])
                                            expression (asmcomp/arm/arch.ml[96,3863+6]..[96,3863+49])
                                              Pexp_constant PConst_string(" Generate position-dependent machine code",(asmcomp/arm/arch.ml[96,3863+7]..[96,3863+48]),None)
                                          ]
                                        expression (asmcomp/arm/arch.ml[97,3914+4]..[102,4119+49]) ghost
                                          Pexp_construct "::" (asmcomp/arm/arch.ml[97,3914+4]..[102,4119+49]) ghost
                                          Some
                                            expression (asmcomp/arm/arch.ml[97,3914+4]..[102,4119+49]) ghost
                                              Pexp_tuple
                                              [
                                                expression (asmcomp/arm/arch.ml[97,3914+4]..[99,3990+45])
                                                  Pexp_tuple
                                                  [
                                                    expression (asmcomp/arm/arch.ml[97,3914+4]..[97,3914+13])
                                                      Pexp_constant PConst_string("-fthumb",(asmcomp/arm/arch.ml[97,3914+5]..[97,3914+12]),None)
                                                    expression (asmcomp/arm/arch.ml[97,3914+15]..[97,3914+28])
                                                      Pexp_construct "Arg.Set" (asmcomp/arm/arch.ml[97,3914+15]..[97,3914+22])
                                                      Some
                                                        expression (asmcomp/arm/arch.ml[97,3914+23]..[97,3914+28])
                                                          Pexp_ident "thumb" (asmcomp/arm/arch.ml[97,3914+23]..[97,3914+28])
                                                    expression (asmcomp/arm/arch.ml[98,3944+6]..[99,3990+45])
                                                      Pexp_apply
                                                      expression (asmcomp/arm/arch.ml[99,3990+6]..[99,3990+7])
                                                        Pexp_ident "^" (asmcomp/arm/arch.ml[99,3990+6]..[99,3990+7])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (asmcomp/arm/arch.ml[98,3944+6]..[98,3944+45])
                                                            Pexp_constant PConst_string(" Enable Thumb/Thumb-2 code generation",(asmcomp/arm/arch.ml[98,3944+7]..[98,3944+44]),None)
                                                        <arg>
                                                        Nolabel
                                                          expression (asmcomp/arm/arch.ml[99,3990+8]..[99,3990+45])
                                                            Pexp_ifthenelse
                                                            expression (asmcomp/arm/arch.ml[99,3990+12]..[99,3990+18])
                                                              Pexp_apply
                                                              expression (asmcomp/arm/arch.ml[99,3990+12]..[99,3990+13])
                                                                Pexp_ident "!" (asmcomp/arm/arch.ml[99,3990+12]..[99,3990+13])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/arm/arch.ml[99,3990+13]..[99,3990+18])
                                                                    Pexp_ident "thumb" (asmcomp/arm/arch.ml[99,3990+13]..[99,3990+18])
                                                              ]
                                                            expression (asmcomp/arm/arch.ml[99,3990+24]..[99,3990+36])
                                                              Pexp_constant PConst_string(" (default)",(asmcomp/arm/arch.ml[99,3990+25]..[99,3990+35]),None)
                                                            Some
                                                              expression (asmcomp/arm/arch.ml[99,3990+42]..[99,3990+44])
                                                                Pexp_constant PConst_string("",(asmcomp/arm/arch.ml[99,3990+43]..[99,3990+43]),None)
                                                      ]
                                                  ]
                                                expression (asmcomp/arm/arch.ml[100,4037+4]..[102,4119+49]) ghost
                                                  Pexp_construct "::" (asmcomp/arm/arch.ml[100,4037+4]..[102,4119+49]) ghost
                                                  Some
                                                    expression (asmcomp/arm/arch.ml[100,4037+4]..[102,4119+49]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (asmcomp/arm/arch.ml[100,4037+4]..[102,4119+48])
                                                          Pexp_tuple
                                                          [
                                                            expression (asmcomp/arm/arch.ml[100,4037+4]..[100,4037+16])
                                                              Pexp_constant PConst_string("-fno-thumb",(asmcomp/arm/arch.ml[100,4037+5]..[100,4037+15]),None)
                                                            expression (asmcomp/arm/arch.ml[100,4037+18]..[100,4037+33])
                                                              Pexp_construct "Arg.Clear" (asmcomp/arm/arch.ml[100,4037+18]..[100,4037+27])
                                                              Some
                                                                expression (asmcomp/arm/arch.ml[100,4037+28]..[100,4037+33])
                                                                  Pexp_ident "thumb" (asmcomp/arm/arch.ml[100,4037+28]..[100,4037+33])
                                                            expression (asmcomp/arm/arch.ml[101,4072+6]..[102,4119+48])
                                                              Pexp_apply
                                                              expression (asmcomp/arm/arch.ml[102,4119+6]..[102,4119+7])
                                                                Pexp_ident "^" (asmcomp/arm/arch.ml[102,4119+6]..[102,4119+7])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/arm/arch.ml[101,4072+6]..[101,4072+46])
                                                                    Pexp_constant PConst_string(" Disable Thumb/Thumb-2 code generation",(asmcomp/arm/arch.ml[101,4072+7]..[101,4072+45]),None)
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/arm/arch.ml[102,4119+8]..[102,4119+48])
                                                                    Pexp_ifthenelse
                                                                    expression (asmcomp/arm/arch.ml[102,4119+12]..[102,4119+22])
                                                                      Pexp_apply
                                                                      expression (asmcomp/arm/arch.ml[102,4119+12]..[102,4119+15])
Pexp_ident "not" (asmcomp/arm/arch.ml[102,4119+12]..[102,4119+15])
                                                                      [
<arg>
Nolabel
  expression (asmcomp/arm/arch.ml[102,4119+16]..[102,4119+22])
    Pexp_apply
    expression (asmcomp/arm/arch.ml[102,4119+16]..[102,4119+17])
      Pexp_ident "!" (asmcomp/arm/arch.ml[102,4119+16]..[102,4119+17])
    [
      <arg>
      Nolabel
        expression (asmcomp/arm/arch.ml[102,4119+17]..[102,4119+22])
          Pexp_ident "thumb" (asmcomp/arm/arch.ml[102,4119+17]..[102,4119+22])
    ]
                                                                      ]
                                                                    expression (asmcomp/arm/arch.ml[102,4119+28]..[102,4119+39])
                                                                      Pexp_constant PConst_string(" (default",(asmcomp/arm/arch.ml[102,4119+29]..[102,4119+38]),None)
                                                                    Some
                                                                      expression (asmcomp/arm/arch.ml[102,4119+45]..[102,4119+47])
Pexp_constant PConst_string("",(asmcomp/arm/arch.ml[102,4119+46]..[102,4119+46]),None)
                                                              ]
                                                          ]
                                                        expression (asmcomp/arm/arch.ml[102,4119+48]..[102,4119+49]) ghost
                                                          Pexp_construct "[]" (asmcomp/arm/arch.ml[102,4119+48]..[102,4119+49]) ghost
                                                          None
                                                      ]
                                              ]
                                      ]
                              ]
                      ]
              ]
    ]
  structure_item (asmcomp/arm/arch.ml[106,4194+0]..[107,4217+19])
    Pstr_type Rec
    [
      type_declaration "addressing_mode" (asmcomp/arm/arch.ml[106,4194+5]..[106,4194+20]) (asmcomp/arm/arch.ml[106,4194+0]..[107,4217+19])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/arm/arch.ml[107,4217+4]..[107,4217+19])
                "Iindexed" (asmcomp/arm/arch.ml[107,4217+4]..[107,4217+12])
                [
                  core_type (asmcomp/arm/arch.ml[107,4217+16]..[107,4217+19])
                    Ptyp_constr "int" (asmcomp/arm/arch.ml[107,4217+16]..[107,4217+19])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/arm/arch.ml[116,4534+0]..[142,5403+25])
    Pstr_type Rec
    [
      type_declaration "specific_operation" (asmcomp/arm/arch.ml[116,4534+5]..[116,4534+23]) (asmcomp/arm/arch.ml[116,4534+0]..[129,5180+17])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/arm/arch.ml[117,4560+4]..[117,4560+58])
                "Ishiftarith" (asmcomp/arm/arch.ml[117,4560+4]..[117,4560+15])
                [
                  core_type (asmcomp/arm/arch.ml[117,4560+19]..[117,4560+34])
                    Ptyp_constr "arith_operation" (asmcomp/arm/arch.ml[117,4560+19]..[117,4560+34])
                    []
                  core_type (asmcomp/arm/arch.ml[117,4560+37]..[117,4560+52])
                    Ptyp_constr "shift_operation" (asmcomp/arm/arch.ml[117,4560+37]..[117,4560+52])
                    []
                  core_type (asmcomp/arm/arch.ml[117,4560+55]..[117,4560+58])
                    Ptyp_constr "int" (asmcomp/arm/arch.ml[117,4560+55]..[117,4560+58])
                    []
                ]
                None
              (asmcomp/arm/arch.ml[118,4619+2]..[118,4619+45])
                "Ishiftcheckbound" (asmcomp/arm/arch.ml[118,4619+4]..[118,4619+20])
                [
                  core_type (asmcomp/arm/arch.ml[118,4619+24]..[118,4619+39])
                    Ptyp_constr "shift_operation" (asmcomp/arm/arch.ml[118,4619+24]..[118,4619+39])
                    []
                  core_type (asmcomp/arm/arch.ml[118,4619+42]..[118,4619+45])
                    Ptyp_constr "int" (asmcomp/arm/arch.ml[118,4619+42]..[118,4619+45])
                    []
                ]
                None
              (asmcomp/arm/arch.ml[119,4665+2]..[119,4665+21])
                "Irevsubimm" (asmcomp/arm/arch.ml[119,4665+4]..[119,4665+14])
                [
                  core_type (asmcomp/arm/arch.ml[119,4665+18]..[119,4665+21])
                    Ptyp_constr "int" (asmcomp/arm/arch.ml[119,4665+18]..[119,4665+21])
                    []
                ]
                None
              (asmcomp/arm/arch.ml[120,4687+2]..[120,4687+12])
                "Imulhadd" (asmcomp/arm/arch.ml[120,4687+4]..[120,4687+12])
                []
                None
              (asmcomp/arm/arch.ml[121,4733+2]..[121,4733+11])
                "Imuladd" (asmcomp/arm/arch.ml[121,4733+4]..[121,4733+11])
                []
                None
              (asmcomp/arm/arch.ml[122,4774+2]..[122,4774+11])
                "Imulsub" (asmcomp/arm/arch.ml[122,4774+4]..[122,4774+11])
                []
                None
              (asmcomp/arm/arch.ml[123,4820+2]..[123,4820+12])
                "Inegmulf" (asmcomp/arm/arch.ml[123,4820+4]..[123,4820+12])
                []
                None
              (asmcomp/arm/arch.ml[124,4879+2]..[124,4879+12])
                "Imuladdf" (asmcomp/arm/arch.ml[124,4879+4]..[124,4879+12])
                []
                None
              (asmcomp/arm/arch.ml[125,4935+2]..[125,4935+15])
                "Inegmuladdf" (asmcomp/arm/arch.ml[125,4935+4]..[125,4935+15])
                []
                None
              (asmcomp/arm/arch.ml[126,4999+2]..[126,4999+12])
                "Imulsubf" (asmcomp/arm/arch.ml[126,4999+4]..[126,4999+12])
                []
                None
              (asmcomp/arm/arch.ml[127,5060+2]..[127,5060+15])
                "Inegmulsubf" (asmcomp/arm/arch.ml[127,5060+4]..[127,5060+15])
                []
                None
              (asmcomp/arm/arch.ml[128,5129+2]..[128,5129+10])
                "Isqrtf" (asmcomp/arm/arch.ml[128,5129+4]..[128,5129+10])
                []
                None
              (asmcomp/arm/arch.ml[129,5180+2]..[129,5180+17])
                "Ibswap" (asmcomp/arm/arch.ml[129,5180+4]..[129,5180+10])
                [
                  core_type (asmcomp/arm/arch.ml[129,5180+14]..[129,5180+17])
                    Ptyp_constr "int" (asmcomp/arm/arch.ml[129,5180+14]..[129,5180+17])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "arith_operation" (asmcomp/arm/arch.ml[131,5227+4]..[131,5227+19]) (asmcomp/arm/arch.ml[131,5227+0]..[137,5321+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/arm/arch.ml[132,5249+4]..[132,5249+13])
                "Ishiftadd" (asmcomp/arm/arch.ml[132,5249+4]..[132,5249+13])
                []
                None
              (asmcomp/arm/arch.ml[133,5263+2]..[133,5263+13])
                "Ishiftsub" (asmcomp/arm/arch.ml[133,5263+4]..[133,5263+13])
                []
                None
              (asmcomp/arm/arch.ml[134,5277+2]..[134,5277+16])
                "Ishiftsubrev" (asmcomp/arm/arch.ml[134,5277+4]..[134,5277+16])
                []
                None
              (asmcomp/arm/arch.ml[135,5294+2]..[135,5294+13])
                "Ishiftand" (asmcomp/arm/arch.ml[135,5294+4]..[135,5294+13])
                []
                None
              (asmcomp/arm/arch.ml[136,5308+2]..[136,5308+12])
                "Ishiftor" (asmcomp/arm/arch.ml[136,5308+4]..[136,5308+12])
                []
                None
              (asmcomp/arm/arch.ml[137,5321+2]..[137,5321+13])
                "Ishiftxor" (asmcomp/arm/arch.ml[137,5321+4]..[137,5321+13])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "shift_operation" (asmcomp/arm/arch.ml[139,5336+4]..[139,5336+19]) (asmcomp/arm/arch.ml[139,5336+0]..[142,5403+25])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/arm/arch.ml[140,5358+4]..[140,5358+21])
                "Ishiftlogicalleft" (asmcomp/arm/arch.ml[140,5358+4]..[140,5358+21])
                []
                None
              (asmcomp/arm/arch.ml[141,5380+2]..[141,5380+22])
                "Ishiftlogicalright" (asmcomp/arm/arch.ml[141,5380+4]..[141,5380+22])
                []
                None
              (asmcomp/arm/arch.ml[142,5403+2]..[142,5403+25])
                "Ishiftarithmeticright" (asmcomp/arm/arch.ml[142,5403+4]..[142,5403+25])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/arm/arch.ml[146,5455+0]..[146,5455+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[146,5455+4]..[146,5455+14])
          Ppat_var "big_endian" (asmcomp/arm/arch.ml[146,5455+4]..[146,5455+14])
        expression (asmcomp/arm/arch.ml[146,5455+17]..[146,5455+22])
          Pexp_construct "false" (asmcomp/arm/arch.ml[146,5455+17]..[146,5455+22])
          None
    ]
  structure_item (asmcomp/arm/arch.ml[148,5479+0]..[148,5479+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[148,5479+4]..[148,5479+13])
          Ppat_var "size_addr" (asmcomp/arm/arch.ml[148,5479+4]..[148,5479+13])
        expression (asmcomp/arm/arch.ml[148,5479+16]..[148,5479+17])
          Pexp_constant PConst_int (4,None)
    ]
  structure_item (asmcomp/arm/arch.ml[149,5497+0]..[149,5497+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[149,5497+4]..[149,5497+12])
          Ppat_var "size_int" (asmcomp/arm/arch.ml[149,5497+4]..[149,5497+12])
        expression (asmcomp/arm/arch.ml[149,5497+15]..[149,5497+16])
          Pexp_constant PConst_int (4,None)
    ]
  structure_item (asmcomp/arm/arch.ml[150,5514+0]..[150,5514+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[150,5514+4]..[150,5514+14])
          Ppat_var "size_float" (asmcomp/arm/arch.ml[150,5514+4]..[150,5514+14])
        expression (asmcomp/arm/arch.ml[150,5514+17]..[150,5514+18])
          Pexp_constant PConst_int (8,None)
    ]
  structure_item (asmcomp/arm/arch.ml[152,5534+0]..[152,5534+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[152,5534+4]..[152,5534+26])
          Ppat_var "allow_unaligned_access" (asmcomp/arm/arch.ml[152,5534+4]..[152,5534+26])
        expression (asmcomp/arm/arch.ml[152,5534+29]..[152,5534+34])
          Pexp_construct "false" (asmcomp/arm/arch.ml[152,5534+29]..[152,5534+34])
          None
    ]
  structure_item (asmcomp/arm/arch.ml[156,5598+0]..[156,5598+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[156,5598+4]..[156,5598+32])
          Ppat_var "division_crashes_on_overflow" (asmcomp/arm/arch.ml[156,5598+4]..[156,5598+32])
        expression (asmcomp/arm/arch.ml[156,5598+35]..[156,5598+40])
          Pexp_construct "false" (asmcomp/arm/arch.ml[156,5598+35]..[156,5598+40])
          None
    ]
  structure_item (asmcomp/arm/arch.ml[160,5678+0]..[160,5678+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[160,5678+4]..[160,5678+23])
          Ppat_var "identity_addressing" (asmcomp/arm/arch.ml[160,5678+4]..[160,5678+23])
        expression (asmcomp/arm/arch.ml[160,5678+26]..[160,5678+36])
          Pexp_construct "Iindexed" (asmcomp/arm/arch.ml[160,5678+26]..[160,5678+34])
          Some
            expression (asmcomp/arm/arch.ml[160,5678+35]..[160,5678+36])
              Pexp_constant PConst_int (0,None)
    ]
  structure_item (asmcomp/arm/arch.ml[162,5716+0]..[162,5716+62])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[162,5716+4]..[162,5716+21])
          Ppat_var "offset_addressing" (asmcomp/arm/arch.ml[162,5716+4]..[162,5716+21])
        expression (asmcomp/arm/arch.ml[162,5716+22]..[162,5716+62]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/arm/arch.ml[162,5716+22]..[162,5716+34])
            Ppat_construct "Iindexed" (asmcomp/arm/arch.ml[162,5716+23]..[162,5716+31])
            Some
              []
              pattern (asmcomp/arm/arch.ml[162,5716+32]..[162,5716+33])
                Ppat_var "n" (asmcomp/arm/arch.ml[162,5716+32]..[162,5716+33])
          expression (asmcomp/arm/arch.ml[162,5716+35]..[162,5716+62]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/arm/arch.ml[162,5716+35]..[162,5716+40])
              Ppat_var "delta" (asmcomp/arm/arch.ml[162,5716+35]..[162,5716+40])
            expression (asmcomp/arm/arch.ml[162,5716+43]..[162,5716+62])
              Pexp_construct "Iindexed" (asmcomp/arm/arch.ml[162,5716+43]..[162,5716+51])
              Some
                expression (asmcomp/arm/arch.ml[162,5716+51]..[162,5716+62])
                  Pexp_apply
                  expression (asmcomp/arm/arch.ml[162,5716+54]..[162,5716+55])
                    Pexp_ident "+" (asmcomp/arm/arch.ml[162,5716+54]..[162,5716+55])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/arm/arch.ml[162,5716+52]..[162,5716+53])
                        Pexp_ident "n" (asmcomp/arm/arch.ml[162,5716+52]..[162,5716+53])
                    <arg>
                    Nolabel
                      expression (asmcomp/arm/arch.ml[162,5716+56]..[162,5716+61])
                        Pexp_ident "delta" (asmcomp/arm/arch.ml[162,5716+56]..[162,5716+61])
                  ]
    ]
  structure_item (asmcomp/arm/arch.ml[164,5780+0]..[164,5780+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[164,5780+4]..[164,5780+23])
          Ppat_var "num_args_addressing" (asmcomp/arm/arch.ml[164,5780+4]..[164,5780+23])
        expression (asmcomp/arm/arch.ml[164,5780+24]..[164,5780+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/arm/arch.ml[164,5780+24]..[164,5780+36])
            Ppat_construct "Iindexed" (asmcomp/arm/arch.ml[164,5780+25]..[164,5780+33])
            Some
              []
              pattern (asmcomp/arm/arch.ml[164,5780+34]..[164,5780+35])
                Ppat_any
          expression (asmcomp/arm/arch.ml[164,5780+39]..[164,5780+40])
            Pexp_constant PConst_int (1,None)
    ]
  structure_item (asmcomp/arm/arch.ml[168,5870+0]..[172,5979+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[168,5870+4]..[168,5870+20])
          Ppat_var "print_addressing" (asmcomp/arm/arch.ml[168,5870+4]..[168,5870+20])
        expression (asmcomp/arm/arch.ml[168,5870+21]..[172,5979+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/arm/arch.ml[168,5870+21]..[168,5870+29])
            Ppat_var "printreg" (asmcomp/arm/arch.ml[168,5870+21]..[168,5870+29])
          expression (asmcomp/arm/arch.ml[168,5870+30]..[172,5979+42]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/arm/arch.ml[168,5870+30]..[168,5870+34])
              Ppat_var "addr" (asmcomp/arm/arch.ml[168,5870+30]..[168,5870+34])
            expression (asmcomp/arm/arch.ml[168,5870+35]..[172,5979+42]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (asmcomp/arm/arch.ml[168,5870+35]..[168,5870+38])
                Ppat_var "ppf" (asmcomp/arm/arch.ml[168,5870+35]..[168,5870+38])
              expression (asmcomp/arm/arch.ml[168,5870+39]..[172,5979+42]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (asmcomp/arm/arch.ml[168,5870+39]..[168,5870+42])
                  Ppat_var "arg" (asmcomp/arm/arch.ml[168,5870+39]..[168,5870+42])
                expression (asmcomp/arm/arch.ml[169,5915+2]..[172,5979+42])
                  Pexp_match
                  expression (asmcomp/arm/arch.ml[169,5915+8]..[169,5915+12])
                    Pexp_ident "addr" (asmcomp/arm/arch.ml[169,5915+8]..[169,5915+12])
                  [
                    <case>
                      pattern (asmcomp/arm/arch.ml[170,5933+4]..[170,5933+14])
                        Ppat_construct "Iindexed" (asmcomp/arm/arch.ml[170,5933+4]..[170,5933+12])
                        Some
                          []
                          pattern (asmcomp/arm/arch.ml[170,5933+13]..[170,5933+14])
                            Ppat_var "n" (asmcomp/arm/arch.ml[170,5933+13]..[170,5933+14])
                      expression (asmcomp/arm/arch.ml[171,5951+6]..[172,5979+42])
                        Pexp_sequence
                        expression (asmcomp/arm/arch.ml[171,5951+6]..[171,5951+26])
                          Pexp_apply
                          expression (asmcomp/arm/arch.ml[171,5951+6]..[171,5951+14])
                            Pexp_ident "printreg" (asmcomp/arm/arch.ml[171,5951+6]..[171,5951+14])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[171,5951+15]..[171,5951+18])
                                Pexp_ident "ppf" (asmcomp/arm/arch.ml[171,5951+15]..[171,5951+18])
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[171,5951+19]..[171,5951+26])
                                Pexp_apply
                                expression (asmcomp/arm/arch.ml[171,5951+19]..[171,5951+26]) ghost
                                  Pexp_ident "Array.get" (asmcomp/arm/arch.ml[171,5951+19]..[171,5951+26]) ghost
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/arm/arch.ml[171,5951+19]..[171,5951+22])
                                      Pexp_ident "arg" (asmcomp/arm/arch.ml[171,5951+19]..[171,5951+22])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/arm/arch.ml[171,5951+24]..[171,5951+25])
                                      Pexp_constant PConst_int (0,None)
                                ]
                          ]
                        expression (asmcomp/arm/arch.ml[172,5979+6]..[172,5979+42])
                          Pexp_ifthenelse
                          expression (asmcomp/arm/arch.ml[172,5979+9]..[172,5979+15])
                            Pexp_apply
                            expression (asmcomp/arm/arch.ml[172,5979+11]..[172,5979+13])
                              Pexp_ident "<>" (asmcomp/arm/arch.ml[172,5979+11]..[172,5979+13])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/arm/arch.ml[172,5979+9]..[172,5979+10])
                                  Pexp_ident "n" (asmcomp/arm/arch.ml[172,5979+9]..[172,5979+10])
                              <arg>
                              Nolabel
                                expression (asmcomp/arm/arch.ml[172,5979+14]..[172,5979+15])
                                  Pexp_constant PConst_int (0,None)
                            ]
                          expression (asmcomp/arm/arch.ml[172,5979+21]..[172,5979+42])
                            Pexp_apply
                            expression (asmcomp/arm/arch.ml[172,5979+21]..[172,5979+28])
                              Pexp_ident "fprintf" (asmcomp/arm/arch.ml[172,5979+21]..[172,5979+28])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/arm/arch.ml[172,5979+29]..[172,5979+32])
                                  Pexp_ident "ppf" (asmcomp/arm/arch.ml[172,5979+29]..[172,5979+32])
                              <arg>
                              Nolabel
                                expression (asmcomp/arm/arch.ml[172,5979+33]..[172,5979+40])
                                  Pexp_constant PConst_string(" + %i",(asmcomp/arm/arch.ml[172,5979+34]..[172,5979+39]),None)
                              <arg>
                              Nolabel
                                expression (asmcomp/arm/arch.ml[172,5979+41]..[172,5979+42])
                                  Pexp_ident "n" (asmcomp/arm/arch.ml[172,5979+41]..[172,5979+42])
                            ]
                          None
                  ]
    ]
  structure_item (asmcomp/arm/arch.ml[174,6023+0]..[177,6113+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[174,6023+4]..[174,6023+16])
          Ppat_var "shiftop_name" (asmcomp/arm/arch.ml[174,6023+4]..[174,6023+16])
        expression (asmcomp/arm/arch.ml[174,6023+19]..[177,6113+34])
          Pexp_function
          [
            <case>
              pattern (asmcomp/arm/arch.ml[175,6051+4]..[175,6051+21])
                Ppat_construct "Ishiftlogicalleft" (asmcomp/arm/arch.ml[175,6051+4]..[175,6051+21])
                None
              expression (asmcomp/arm/arch.ml[175,6051+25]..[175,6051+29])
                Pexp_constant PConst_string("<<",(asmcomp/arm/arch.ml[175,6051+26]..[175,6051+28]),None)
            <case>
              pattern (asmcomp/arm/arch.ml[176,6081+4]..[176,6081+22])
                Ppat_construct "Ishiftlogicalright" (asmcomp/arm/arch.ml[176,6081+4]..[176,6081+22])
                None
              expression (asmcomp/arm/arch.ml[176,6081+26]..[176,6081+31])
                Pexp_constant PConst_string(">>u",(asmcomp/arm/arch.ml[176,6081+27]..[176,6081+30]),None)
            <case>
              pattern (asmcomp/arm/arch.ml[177,6113+4]..[177,6113+25])
                Ppat_construct "Ishiftarithmeticright" (asmcomp/arm/arch.ml[177,6113+4]..[177,6113+25])
                None
              expression (asmcomp/arm/arch.ml[177,6113+29]..[177,6113+34])
                Pexp_constant PConst_string(">>s",(asmcomp/arm/arch.ml[177,6113+30]..[177,6113+33]),None)
          ]
    ]
  structure_item (asmcomp/arm/arch.ml[179,6149+0]..[248,8049+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[179,6149+4]..[179,6149+28])
          Ppat_var "print_specific_operation" (asmcomp/arm/arch.ml[179,6149+4]..[179,6149+28])
        expression (asmcomp/arm/arch.ml[179,6149+29]..[248,8049+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/arm/arch.ml[179,6149+29]..[179,6149+37])
            Ppat_var "printreg" (asmcomp/arm/arch.ml[179,6149+29]..[179,6149+37])
          expression (asmcomp/arm/arch.ml[179,6149+38]..[248,8049+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/arm/arch.ml[179,6149+38]..[179,6149+40])
              Ppat_var "op" (asmcomp/arm/arch.ml[179,6149+38]..[179,6149+40])
            expression (asmcomp/arm/arch.ml[179,6149+41]..[248,8049+24]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (asmcomp/arm/arch.ml[179,6149+41]..[179,6149+44])
                Ppat_var "ppf" (asmcomp/arm/arch.ml[179,6149+41]..[179,6149+44])
              expression (asmcomp/arm/arch.ml[179,6149+45]..[248,8049+24]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (asmcomp/arm/arch.ml[179,6149+45]..[179,6149+48])
                  Ppat_var "arg" (asmcomp/arm/arch.ml[179,6149+45]..[179,6149+48])
                expression (asmcomp/arm/arch.ml[180,6200+2]..[248,8049+24])
                  Pexp_match
                  expression (asmcomp/arm/arch.ml[180,6200+8]..[180,6200+10])
                    Pexp_ident "op" (asmcomp/arm/arch.ml[180,6200+8]..[180,6200+10])
                  [
                    <case>
                      pattern (asmcomp/arm/arch.ml[181,6216+4]..[181,6216+36])
                        Ppat_construct "Ishiftarith" (asmcomp/arm/arch.ml[181,6216+4]..[181,6216+15])
                        Some
                          []
                          pattern (asmcomp/arm/arch.ml[181,6216+15]..[181,6216+36])
                            Ppat_tuple
                            [
                              pattern (asmcomp/arm/arch.ml[181,6216+16]..[181,6216+18])
                                Ppat_var "op" (asmcomp/arm/arch.ml[181,6216+16]..[181,6216+18])
                              pattern (asmcomp/arm/arch.ml[181,6216+20]..[181,6216+27])
                                Ppat_var "shiftop" (asmcomp/arm/arch.ml[181,6216+20]..[181,6216+27])
                              pattern (asmcomp/arm/arch.ml[181,6216+29]..[181,6216+35])
                                Ppat_var "amount" (asmcomp/arm/arch.ml[181,6216+29]..[181,6216+35])
                            ]
                      expression (asmcomp/arm/arch.ml[182,6256+6]..[195,6661+14])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (asmcomp/arm/arch.ml[182,6256+10]..[182,6256+30])
                              Ppat_tuple
                              [
                                pattern (asmcomp/arm/arch.ml[182,6256+11]..[182,6256+19])
                                  Ppat_var "op1_name" (asmcomp/arm/arch.ml[182,6256+11]..[182,6256+19])
                                pattern (asmcomp/arm/arch.ml[182,6256+21]..[182,6256+29])
                                  Ppat_var "op2_name" (asmcomp/arm/arch.ml[182,6256+21]..[182,6256+29])
                              ]
                            expression (asmcomp/arm/arch.ml[182,6256+33]..[188,6471+32])
                              Pexp_match
                              expression (asmcomp/arm/arch.ml[182,6256+39]..[182,6256+41])
                                Pexp_ident "op" (asmcomp/arm/arch.ml[182,6256+39]..[182,6256+41])
                              [
                                <case>
                                  pattern (asmcomp/arm/arch.ml[183,6303+10]..[183,6303+19])
                                    Ppat_construct "Ishiftadd" (asmcomp/arm/arch.ml[183,6303+10]..[183,6303+19])
                                    None
                                  expression (asmcomp/arm/arch.ml[183,6303+23]..[183,6303+32])
                                    Pexp_tuple
                                    [
                                      expression (asmcomp/arm/arch.ml[183,6303+24]..[183,6303+26])
                                        Pexp_constant PConst_string("",(asmcomp/arm/arch.ml[183,6303+25]..[183,6303+25]),None)
                                      expression (asmcomp/arm/arch.ml[183,6303+28]..[183,6303+31])
                                        Pexp_constant PConst_string("+",(asmcomp/arm/arch.ml[183,6303+29]..[183,6303+30]),None)
                                    ]
                                <case>
                                  pattern (asmcomp/arm/arch.ml[184,6336+10]..[184,6336+19])
                                    Ppat_construct "Ishiftsub" (asmcomp/arm/arch.ml[184,6336+10]..[184,6336+19])
                                    None
                                  expression (asmcomp/arm/arch.ml[184,6336+23]..[184,6336+32])
                                    Pexp_tuple
                                    [
                                      expression (asmcomp/arm/arch.ml[184,6336+24]..[184,6336+26])
                                        Pexp_constant PConst_string("",(asmcomp/arm/arch.ml[184,6336+25]..[184,6336+25]),None)
                                      expression (asmcomp/arm/arch.ml[184,6336+28]..[184,6336+31])
                                        Pexp_constant PConst_string("-",(asmcomp/arm/arch.ml[184,6336+29]..[184,6336+30]),None)
                                    ]
                                <case>
                                  pattern (asmcomp/arm/arch.ml[185,6369+10]..[185,6369+22])
                                    Ppat_construct "Ishiftsubrev" (asmcomp/arm/arch.ml[185,6369+10]..[185,6369+22])
                                    None
                                  expression (asmcomp/arm/arch.ml[185,6369+26]..[185,6369+36])
                                    Pexp_tuple
                                    [
                                      expression (asmcomp/arm/arch.ml[185,6369+27]..[185,6369+30])
                                        Pexp_constant PConst_string("-",(asmcomp/arm/arch.ml[185,6369+28]..[185,6369+29]),None)
                                      expression (asmcomp/arm/arch.ml[185,6369+32]..[185,6369+35])
                                        Pexp_constant PConst_string("+",(asmcomp/arm/arch.ml[185,6369+33]..[185,6369+34]),None)
                                    ]
                                <case>
                                  pattern (asmcomp/arm/arch.ml[186,6406+10]..[186,6406+19])
                                    Ppat_construct "Ishiftand" (asmcomp/arm/arch.ml[186,6406+10]..[186,6406+19])
                                    None
                                  expression (asmcomp/arm/arch.ml[186,6406+23]..[186,6406+32])
                                    Pexp_tuple
                                    [
                                      expression (asmcomp/arm/arch.ml[186,6406+24]..[186,6406+26])
                                        Pexp_constant PConst_string("",(asmcomp/arm/arch.ml[186,6406+25]..[186,6406+25]),None)
                                      expression (asmcomp/arm/arch.ml[186,6406+28]..[186,6406+31])
                                        Pexp_constant PConst_string("&",(asmcomp/arm/arch.ml[186,6406+29]..[186,6406+30]),None)
                                    ]
                                <case>
                                  pattern (asmcomp/arm/arch.ml[187,6439+10]..[187,6439+18])
                                    Ppat_construct "Ishiftor" (asmcomp/arm/arch.ml[187,6439+10]..[187,6439+18])
                                    None
                                  expression (asmcomp/arm/arch.ml[187,6439+22]..[187,6439+31])
                                    Pexp_tuple
                                    [
                                      expression (asmcomp/arm/arch.ml[187,6439+23]..[187,6439+25])
                                        Pexp_constant PConst_string("",(asmcomp/arm/arch.ml[187,6439+24]..[187,6439+24]),None)
                                      expression (asmcomp/arm/arch.ml[187,6439+27]..[187,6439+30])
                                        Pexp_constant PConst_string("|",(asmcomp/arm/arch.ml[187,6439+28]..[187,6439+29]),None)
                                    ]
                                <case>
                                  pattern (asmcomp/arm/arch.ml[188,6471+10]..[188,6471+19])
                                    Ppat_construct "Ishiftxor" (asmcomp/arm/arch.ml[188,6471+10]..[188,6471+19])
                                    None
                                  expression (asmcomp/arm/arch.ml[188,6471+23]..[188,6471+32])
                                    Pexp_tuple
                                    [
                                      expression (asmcomp/arm/arch.ml[188,6471+24]..[188,6471+26])
                                        Pexp_constant PConst_string("",(asmcomp/arm/arch.ml[188,6471+25]..[188,6471+25]),None)
                                      expression (asmcomp/arm/arch.ml[188,6471+28]..[188,6471+31])
                                        Pexp_constant PConst_string("^",(asmcomp/arm/arch.ml[188,6471+29]..[188,6471+30]),None)
                                    ]
                              ]
                        ]
                        expression (asmcomp/arm/arch.ml[189,6507+6]..[195,6661+14])
                          Pexp_apply
                          expression (asmcomp/arm/arch.ml[189,6507+6]..[189,6507+13])
                            Pexp_ident "fprintf" (asmcomp/arm/arch.ml[189,6507+6]..[189,6507+13])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[189,6507+14]..[189,6507+17])
                                Pexp_ident "ppf" (asmcomp/arm/arch.ml[189,6507+14]..[189,6507+17])
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[189,6507+18]..[189,6507+38])
                                Pexp_constant PConst_string("%s%a %s (%a %s %i)",(asmcomp/arm/arch.ml[189,6507+19]..[189,6507+37]),None)
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[190,6546+8]..[190,6546+16])
                                Pexp_ident "op1_name" (asmcomp/arm/arch.ml[190,6546+8]..[190,6546+16])
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[191,6563+8]..[191,6563+16])
                                Pexp_ident "printreg" (asmcomp/arm/arch.ml[191,6563+8]..[191,6563+16])
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[191,6563+17]..[191,6563+24])
                                Pexp_apply
                                expression (asmcomp/arm/arch.ml[191,6563+17]..[191,6563+24]) ghost
                                  Pexp_ident "Array.get" (asmcomp/arm/arch.ml[191,6563+17]..[191,6563+24]) ghost
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/arm/arch.ml[191,6563+17]..[191,6563+20])
                                      Pexp_ident "arg" (asmcomp/arm/arch.ml[191,6563+17]..[191,6563+20])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/arm/arch.ml[191,6563+22]..[191,6563+23])
                                      Pexp_constant PConst_int (0,None)
                                ]
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[192,6588+8]..[192,6588+16])
                                Pexp_ident "op2_name" (asmcomp/arm/arch.ml[192,6588+8]..[192,6588+16])
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[193,6605+8]..[193,6605+16])
                                Pexp_ident "printreg" (asmcomp/arm/arch.ml[193,6605+8]..[193,6605+16])
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[193,6605+17]..[193,6605+24])
                                Pexp_apply
                                expression (asmcomp/arm/arch.ml[193,6605+17]..[193,6605+24]) ghost
                                  Pexp_ident "Array.get" (asmcomp/arm/arch.ml[193,6605+17]..[193,6605+24]) ghost
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/arm/arch.ml[193,6605+17]..[193,6605+20])
                                      Pexp_ident "arg" (asmcomp/arm/arch.ml[193,6605+17]..[193,6605+20])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/arm/arch.ml[193,6605+22]..[193,6605+23])
                                      Pexp_constant PConst_int (1,None)
                                ]
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[194,6630+8]..[194,6630+30])
                                Pexp_apply
                                expression (asmcomp/arm/arch.ml[194,6630+9]..[194,6630+21])
                                  Pexp_ident "shiftop_name" (asmcomp/arm/arch.ml[194,6630+9]..[194,6630+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/arm/arch.ml[194,6630+22]..[194,6630+29])
                                      Pexp_ident "shiftop" (asmcomp/arm/arch.ml[194,6630+22]..[194,6630+29])
                                ]
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[195,6661+8]..[195,6661+14])
                                Pexp_ident "amount" (asmcomp/arm/arch.ml[195,6661+8]..[195,6661+14])
                          ]
                    <case>
                      pattern (asmcomp/arm/arch.ml[196,6676+4]..[196,6676+37])
                        Ppat_construct "Ishiftcheckbound" (asmcomp/arm/arch.ml[196,6676+4]..[196,6676+20])
                        Some
                          []
                          pattern (asmcomp/arm/arch.ml[196,6676+20]..[196,6676+37])
                            Ppat_tuple
                            [
                              pattern (asmcomp/arm/arch.ml[196,6676+21]..[196,6676+28])
                                Ppat_var "shiftop" (asmcomp/arm/arch.ml[196,6676+21]..[196,6676+28])
                              pattern (asmcomp/arm/arch.ml[196,6676+30]..[196,6676+36])
                                Ppat_var "amount" (asmcomp/arm/arch.ml[196,6676+30]..[196,6676+36])
                            ]
                      expression (asmcomp/arm/arch.ml[197,6717+6]..[201,6830+24])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[197,6717+6]..[197,6717+13])
                          Pexp_ident "fprintf" (asmcomp/arm/arch.ml[197,6717+6]..[197,6717+13])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[197,6717+14]..[197,6717+17])
                              Pexp_ident "ppf" (asmcomp/arm/arch.ml[197,6717+14]..[197,6717+17])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[197,6717+18]..[197,6717+41])
                              Pexp_constant PConst_string("check (%a %s %i) > %a",(asmcomp/arm/arch.ml[197,6717+19]..[197,6717+40]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[198,6759+8]..[198,6759+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[198,6759+8]..[198,6759+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[198,6759+17]..[198,6759+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[198,6759+17]..[198,6759+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[198,6759+17]..[198,6759+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[198,6759+17]..[198,6759+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[198,6759+17]..[198,6759+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[198,6759+22]..[198,6759+23])
                                    Pexp_constant PConst_int (0,None)
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[199,6784+8]..[199,6784+30])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[199,6784+9]..[199,6784+21])
                                Pexp_ident "shiftop_name" (asmcomp/arm/arch.ml[199,6784+9]..[199,6784+21])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[199,6784+22]..[199,6784+29])
                                    Pexp_ident "shiftop" (asmcomp/arm/arch.ml[199,6784+22]..[199,6784+29])
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[200,6815+8]..[200,6815+14])
                              Pexp_ident "amount" (asmcomp/arm/arch.ml[200,6815+8]..[200,6815+14])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[201,6830+8]..[201,6830+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[201,6830+8]..[201,6830+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[201,6830+17]..[201,6830+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[201,6830+17]..[201,6830+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[201,6830+17]..[201,6830+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[201,6830+17]..[201,6830+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[201,6830+17]..[201,6830+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[201,6830+22]..[201,6830+23])
                                    Pexp_constant PConst_int (1,None)
                              ]
                        ]
                    <case>
                      pattern (asmcomp/arm/arch.ml[202,6855+4]..[202,6855+16])
                        Ppat_construct "Irevsubimm" (asmcomp/arm/arch.ml[202,6855+4]..[202,6855+14])
                        Some
                          []
                          pattern (asmcomp/arm/arch.ml[202,6855+15]..[202,6855+16])
                            Ppat_var "n" (asmcomp/arm/arch.ml[202,6855+15]..[202,6855+16])
                      expression (asmcomp/arm/arch.ml[203,6875+6]..[203,6875+51])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[203,6875+6]..[203,6875+13])
                          Pexp_ident "fprintf" (asmcomp/arm/arch.ml[203,6875+6]..[203,6875+13])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[203,6875+14]..[203,6875+17])
                              Pexp_ident "ppf" (asmcomp/arm/arch.ml[203,6875+14]..[203,6875+17])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[203,6875+18]..[203,6875+28])
                              Pexp_constant PConst_string("%i %s %a",(asmcomp/arm/arch.ml[203,6875+19]..[203,6875+27]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[203,6875+29]..[203,6875+30])
                              Pexp_ident "n" (asmcomp/arm/arch.ml[203,6875+29]..[203,6875+30])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[203,6875+31]..[203,6875+34])
                              Pexp_constant PConst_string("-",(asmcomp/arm/arch.ml[203,6875+32]..[203,6875+33]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[203,6875+35]..[203,6875+43])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[203,6875+35]..[203,6875+43])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[203,6875+44]..[203,6875+51])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[203,6875+44]..[203,6875+51]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[203,6875+44]..[203,6875+51]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[203,6875+44]..[203,6875+47])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[203,6875+44]..[203,6875+47])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[203,6875+49]..[203,6875+50])
                                    Pexp_constant PConst_int (0,None)
                              ]
                        ]
                    <case>
                      pattern (asmcomp/arm/arch.ml[204,6927+4]..[204,6927+12])
                        Ppat_construct "Imulhadd" (asmcomp/arm/arch.ml[204,6927+4]..[204,6927+12])
                        None
                      expression (asmcomp/arm/arch.ml[205,6943+6]..[208,7028+24])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[205,6943+6]..[205,6943+13])
                          Pexp_ident "fprintf" (asmcomp/arm/arch.ml[205,6943+6]..[205,6943+13])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[205,6943+14]..[205,6943+17])
                              Pexp_ident "ppf" (asmcomp/arm/arch.ml[205,6943+14]..[205,6943+17])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[205,6943+18]..[205,6943+34])
                              Pexp_constant PConst_string("%a *h %a) + %a",(asmcomp/arm/arch.ml[205,6943+19]..[205,6943+33]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[206,6978+8]..[206,6978+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[206,6978+8]..[206,6978+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[206,6978+17]..[206,6978+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[206,6978+17]..[206,6978+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[206,6978+17]..[206,6978+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[206,6978+17]..[206,6978+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[206,6978+17]..[206,6978+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[206,6978+22]..[206,6978+23])
                                    Pexp_constant PConst_int (0,None)
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[207,7003+8]..[207,7003+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[207,7003+8]..[207,7003+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[207,7003+17]..[207,7003+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[207,7003+17]..[207,7003+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[207,7003+17]..[207,7003+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[207,7003+17]..[207,7003+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[207,7003+17]..[207,7003+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[207,7003+22]..[207,7003+23])
                                    Pexp_constant PConst_int (1,None)
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[208,7028+8]..[208,7028+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[208,7028+8]..[208,7028+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[208,7028+17]..[208,7028+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[208,7028+17]..[208,7028+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[208,7028+17]..[208,7028+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[208,7028+17]..[208,7028+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[208,7028+17]..[208,7028+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[208,7028+22]..[208,7028+23])
                                    Pexp_constant PConst_int (2,None)
                              ]
                        ]
                    <case>
                      pattern (asmcomp/arm/arch.ml[209,7053+4]..[209,7053+11])
                        Ppat_construct "Imuladd" (asmcomp/arm/arch.ml[209,7053+4]..[209,7053+11])
                        None
                      expression (asmcomp/arm/arch.ml[210,7068+6]..[213,7153+24])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[210,7068+6]..[210,7068+13])
                          Pexp_ident "fprintf" (asmcomp/arm/arch.ml[210,7068+6]..[210,7068+13])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[210,7068+14]..[210,7068+17])
                              Pexp_ident "ppf" (asmcomp/arm/arch.ml[210,7068+14]..[210,7068+17])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[210,7068+18]..[210,7068+34])
                              Pexp_constant PConst_string("(%a * %a) + %a",(asmcomp/arm/arch.ml[210,7068+19]..[210,7068+33]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[211,7103+8]..[211,7103+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[211,7103+8]..[211,7103+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[211,7103+17]..[211,7103+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[211,7103+17]..[211,7103+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[211,7103+17]..[211,7103+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[211,7103+17]..[211,7103+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[211,7103+17]..[211,7103+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[211,7103+22]..[211,7103+23])
                                    Pexp_constant PConst_int (0,None)
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[212,7128+8]..[212,7128+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[212,7128+8]..[212,7128+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[212,7128+17]..[212,7128+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[212,7128+17]..[212,7128+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[212,7128+17]..[212,7128+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[212,7128+17]..[212,7128+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[212,7128+17]..[212,7128+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[212,7128+22]..[212,7128+23])
                                    Pexp_constant PConst_int (1,None)
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[213,7153+8]..[213,7153+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[213,7153+8]..[213,7153+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[213,7153+17]..[213,7153+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[213,7153+17]..[213,7153+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[213,7153+17]..[213,7153+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[213,7153+17]..[213,7153+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[213,7153+17]..[213,7153+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[213,7153+22]..[213,7153+23])
                                    Pexp_constant PConst_int (2,None)
                              ]
                        ]
                    <case>
                      pattern (asmcomp/arm/arch.ml[214,7178+4]..[214,7178+11])
                        Ppat_construct "Imulsub" (asmcomp/arm/arch.ml[214,7178+4]..[214,7178+11])
                        None
                      expression (asmcomp/arm/arch.ml[215,7193+6]..[218,7279+24])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[215,7193+6]..[215,7193+13])
                          Pexp_ident "fprintf" (asmcomp/arm/arch.ml[215,7193+6]..[215,7193+13])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[215,7193+14]..[215,7193+17])
                              Pexp_ident "ppf" (asmcomp/arm/arch.ml[215,7193+14]..[215,7193+17])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[215,7193+18]..[215,7193+35])
                              Pexp_constant PConst_string("-(%a * %a) + %a",(asmcomp/arm/arch.ml[215,7193+19]..[215,7193+34]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[216,7229+8]..[216,7229+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[216,7229+8]..[216,7229+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[216,7229+17]..[216,7229+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[216,7229+17]..[216,7229+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[216,7229+17]..[216,7229+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[216,7229+17]..[216,7229+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[216,7229+17]..[216,7229+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[216,7229+22]..[216,7229+23])
                                    Pexp_constant PConst_int (0,None)
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[217,7254+8]..[217,7254+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[217,7254+8]..[217,7254+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[217,7254+17]..[217,7254+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[217,7254+17]..[217,7254+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[217,7254+17]..[217,7254+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[217,7254+17]..[217,7254+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[217,7254+17]..[217,7254+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[217,7254+22]..[217,7254+23])
                                    Pexp_constant PConst_int (1,None)
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[218,7279+8]..[218,7279+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[218,7279+8]..[218,7279+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[218,7279+17]..[218,7279+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[218,7279+17]..[218,7279+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[218,7279+17]..[218,7279+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[218,7279+17]..[218,7279+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[218,7279+17]..[218,7279+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[218,7279+22]..[218,7279+23])
                                    Pexp_constant PConst_int (2,None)
                              ]
                        ]
                    <case>
                      pattern (asmcomp/arm/arch.ml[219,7304+4]..[219,7304+12])
                        Ppat_construct "Inegmulf" (asmcomp/arm/arch.ml[219,7304+4]..[219,7304+12])
                        None
                      expression (asmcomp/arm/arch.ml[220,7320+6]..[222,7379+24])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[220,7320+6]..[220,7320+13])
                          Pexp_ident "fprintf" (asmcomp/arm/arch.ml[220,7320+6]..[220,7320+13])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[220,7320+14]..[220,7320+17])
                              Pexp_ident "ppf" (asmcomp/arm/arch.ml[220,7320+14]..[220,7320+17])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[220,7320+18]..[220,7320+33])
                              Pexp_constant PConst_string("-f (%a *f %a)",(asmcomp/arm/arch.ml[220,7320+19]..[220,7320+32]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[221,7354+8]..[221,7354+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[221,7354+8]..[221,7354+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[221,7354+17]..[221,7354+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[221,7354+17]..[221,7354+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[221,7354+17]..[221,7354+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[221,7354+17]..[221,7354+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[221,7354+17]..[221,7354+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[221,7354+22]..[221,7354+23])
                                    Pexp_constant PConst_int (0,None)
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[222,7379+8]..[222,7379+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[222,7379+8]..[222,7379+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[222,7379+17]..[222,7379+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[222,7379+17]..[222,7379+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[222,7379+17]..[222,7379+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[222,7379+17]..[222,7379+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[222,7379+17]..[222,7379+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[222,7379+22]..[222,7379+23])
                                    Pexp_constant PConst_int (1,None)
                              ]
                        ]
                    <case>
                      pattern (asmcomp/arm/arch.ml[223,7404+4]..[223,7404+12])
                        Ppat_construct "Imuladdf" (asmcomp/arm/arch.ml[223,7404+4]..[223,7404+12])
                        None
                      expression (asmcomp/arm/arch.ml[224,7420+6]..[227,7507+24])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[224,7420+6]..[224,7420+13])
                          Pexp_ident "fprintf" (asmcomp/arm/arch.ml[224,7420+6]..[224,7420+13])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[224,7420+14]..[224,7420+17])
                              Pexp_ident "ppf" (asmcomp/arm/arch.ml[224,7420+14]..[224,7420+17])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[224,7420+18]..[224,7420+36])
                              Pexp_constant PConst_string("%a +f (%a *f %a)",(asmcomp/arm/arch.ml[224,7420+19]..[224,7420+35]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[225,7457+8]..[225,7457+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[225,7457+8]..[225,7457+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[225,7457+17]..[225,7457+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[225,7457+17]..[225,7457+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[225,7457+17]..[225,7457+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[225,7457+17]..[225,7457+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[225,7457+17]..[225,7457+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[225,7457+22]..[225,7457+23])
                                    Pexp_constant PConst_int (0,None)
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[226,7482+8]..[226,7482+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[226,7482+8]..[226,7482+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[226,7482+17]..[226,7482+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[226,7482+17]..[226,7482+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[226,7482+17]..[226,7482+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[226,7482+17]..[226,7482+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[226,7482+17]..[226,7482+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[226,7482+22]..[226,7482+23])
                                    Pexp_constant PConst_int (1,None)
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[227,7507+8]..[227,7507+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[227,7507+8]..[227,7507+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[227,7507+17]..[227,7507+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[227,7507+17]..[227,7507+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[227,7507+17]..[227,7507+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[227,7507+17]..[227,7507+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[227,7507+17]..[227,7507+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[227,7507+22]..[227,7507+23])
                                    Pexp_constant PConst_int (2,None)
                              ]
                        ]
                    <case>
                      pattern (asmcomp/arm/arch.ml[228,7532+4]..[228,7532+15])
                        Ppat_construct "Inegmuladdf" (asmcomp/arm/arch.ml[228,7532+4]..[228,7532+15])
                        None
                      expression (asmcomp/arm/arch.ml[229,7551+6]..[232,7638+24])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[229,7551+6]..[229,7551+13])
                          Pexp_ident "fprintf" (asmcomp/arm/arch.ml[229,7551+6]..[229,7551+13])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[229,7551+14]..[229,7551+17])
                              Pexp_ident "ppf" (asmcomp/arm/arch.ml[229,7551+14]..[229,7551+17])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[229,7551+18]..[229,7551+36])
                              Pexp_constant PConst_string("%a -f (%a *f %a)",(asmcomp/arm/arch.ml[229,7551+19]..[229,7551+35]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[230,7588+8]..[230,7588+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[230,7588+8]..[230,7588+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[230,7588+17]..[230,7588+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[230,7588+17]..[230,7588+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[230,7588+17]..[230,7588+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[230,7588+17]..[230,7588+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[230,7588+17]..[230,7588+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[230,7588+22]..[230,7588+23])
                                    Pexp_constant PConst_int (0,None)
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[231,7613+8]..[231,7613+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[231,7613+8]..[231,7613+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[231,7613+17]..[231,7613+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[231,7613+17]..[231,7613+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[231,7613+17]..[231,7613+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[231,7613+17]..[231,7613+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[231,7613+17]..[231,7613+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[231,7613+22]..[231,7613+23])
                                    Pexp_constant PConst_int (1,None)
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[232,7638+8]..[232,7638+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[232,7638+8]..[232,7638+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[232,7638+17]..[232,7638+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[232,7638+17]..[232,7638+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[232,7638+17]..[232,7638+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[232,7638+17]..[232,7638+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[232,7638+17]..[232,7638+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[232,7638+22]..[232,7638+23])
                                    Pexp_constant PConst_int (2,None)
                              ]
                        ]
                    <case>
                      pattern (asmcomp/arm/arch.ml[233,7663+4]..[233,7663+12])
                        Ppat_construct "Imulsubf" (asmcomp/arm/arch.ml[233,7663+4]..[233,7663+12])
                        None
                      expression (asmcomp/arm/arch.ml[234,7679+6]..[237,7771+24])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[234,7679+6]..[234,7679+13])
                          Pexp_ident "fprintf" (asmcomp/arm/arch.ml[234,7679+6]..[234,7679+13])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[234,7679+14]..[234,7679+17])
                              Pexp_ident "ppf" (asmcomp/arm/arch.ml[234,7679+14]..[234,7679+17])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[234,7679+18]..[234,7679+41])
                              Pexp_constant PConst_string("(-f %a) +f (%a *f %a)",(asmcomp/arm/arch.ml[234,7679+19]..[234,7679+40]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[235,7721+8]..[235,7721+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[235,7721+8]..[235,7721+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[235,7721+17]..[235,7721+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[235,7721+17]..[235,7721+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[235,7721+17]..[235,7721+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[235,7721+17]..[235,7721+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[235,7721+17]..[235,7721+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[235,7721+22]..[235,7721+23])
                                    Pexp_constant PConst_int (0,None)
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[236,7746+8]..[236,7746+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[236,7746+8]..[236,7746+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[236,7746+17]..[236,7746+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[236,7746+17]..[236,7746+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[236,7746+17]..[236,7746+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[236,7746+17]..[236,7746+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[236,7746+17]..[236,7746+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[236,7746+22]..[236,7746+23])
                                    Pexp_constant PConst_int (1,None)
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[237,7771+8]..[237,7771+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[237,7771+8]..[237,7771+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[237,7771+17]..[237,7771+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[237,7771+17]..[237,7771+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[237,7771+17]..[237,7771+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[237,7771+17]..[237,7771+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[237,7771+17]..[237,7771+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[237,7771+22]..[237,7771+23])
                                    Pexp_constant PConst_int (2,None)
                              ]
                        ]
                    <case>
                      pattern (asmcomp/arm/arch.ml[238,7796+4]..[238,7796+15])
                        Ppat_construct "Inegmulsubf" (asmcomp/arm/arch.ml[238,7796+4]..[238,7796+15])
                        None
                      expression (asmcomp/arm/arch.ml[239,7815+6]..[242,7907+24])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[239,7815+6]..[239,7815+13])
                          Pexp_ident "fprintf" (asmcomp/arm/arch.ml[239,7815+6]..[239,7815+13])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[239,7815+14]..[239,7815+17])
                              Pexp_ident "ppf" (asmcomp/arm/arch.ml[239,7815+14]..[239,7815+17])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[239,7815+18]..[239,7815+41])
                              Pexp_constant PConst_string("(-f %a) -f (%a *f %a)",(asmcomp/arm/arch.ml[239,7815+19]..[239,7815+40]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[240,7857+8]..[240,7857+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[240,7857+8]..[240,7857+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[240,7857+17]..[240,7857+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[240,7857+17]..[240,7857+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[240,7857+17]..[240,7857+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[240,7857+17]..[240,7857+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[240,7857+17]..[240,7857+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[240,7857+22]..[240,7857+23])
                                    Pexp_constant PConst_int (0,None)
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[241,7882+8]..[241,7882+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[241,7882+8]..[241,7882+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[241,7882+17]..[241,7882+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[241,7882+17]..[241,7882+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[241,7882+17]..[241,7882+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[241,7882+17]..[241,7882+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[241,7882+17]..[241,7882+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[241,7882+22]..[241,7882+23])
                                    Pexp_constant PConst_int (1,None)
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[242,7907+8]..[242,7907+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[242,7907+8]..[242,7907+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[242,7907+17]..[242,7907+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[242,7907+17]..[242,7907+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[242,7907+17]..[242,7907+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[242,7907+17]..[242,7907+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[242,7907+17]..[242,7907+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[242,7907+22]..[242,7907+23])
                                    Pexp_constant PConst_int (2,None)
                              ]
                        ]
                    <case>
                      pattern (asmcomp/arm/arch.ml[243,7932+4]..[243,7932+10])
                        Ppat_construct "Isqrtf" (asmcomp/arm/arch.ml[243,7932+4]..[243,7932+10])
                        None
                      expression (asmcomp/arm/arch.ml[244,7946+6]..[245,7975+24])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[244,7946+6]..[244,7946+13])
                          Pexp_ident "fprintf" (asmcomp/arm/arch.ml[244,7946+6]..[244,7946+13])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[244,7946+14]..[244,7946+17])
                              Pexp_ident "ppf" (asmcomp/arm/arch.ml[244,7946+14]..[244,7946+17])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[244,7946+18]..[244,7946+28])
                              Pexp_constant PConst_string("sqrtf %a",(asmcomp/arm/arch.ml[244,7946+19]..[244,7946+27]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[245,7975+8]..[245,7975+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[245,7975+8]..[245,7975+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[245,7975+17]..[245,7975+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[245,7975+17]..[245,7975+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[245,7975+17]..[245,7975+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[245,7975+17]..[245,7975+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[245,7975+17]..[245,7975+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[245,7975+22]..[245,7975+23])
                                    Pexp_constant PConst_int (0,None)
                              ]
                        ]
                    <case>
                      pattern (asmcomp/arm/arch.ml[246,8000+4]..[246,8000+12])
                        Ppat_construct "Ibswap" (asmcomp/arm/arch.ml[246,8000+4]..[246,8000+10])
                        Some
                          []
                          pattern (asmcomp/arm/arch.ml[246,8000+11]..[246,8000+12])
                            Ppat_var "n" (asmcomp/arm/arch.ml[246,8000+11]..[246,8000+12])
                      expression (asmcomp/arm/arch.ml[247,8016+6]..[248,8049+24])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[247,8016+6]..[247,8016+13])
                          Pexp_ident "fprintf" (asmcomp/arm/arch.ml[247,8016+6]..[247,8016+13])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[247,8016+14]..[247,8016+17])
                              Pexp_ident "ppf" (asmcomp/arm/arch.ml[247,8016+14]..[247,8016+17])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[247,8016+18]..[247,8016+30])
                              Pexp_constant PConst_string("bswap%i %a",(asmcomp/arm/arch.ml[247,8016+19]..[247,8016+29]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[247,8016+31]..[247,8016+32])
                              Pexp_ident "n" (asmcomp/arm/arch.ml[247,8016+31]..[247,8016+32])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[248,8049+8]..[248,8049+16])
                              Pexp_ident "printreg" (asmcomp/arm/arch.ml[248,8049+8]..[248,8049+16])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[248,8049+17]..[248,8049+24])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[248,8049+17]..[248,8049+24]) ghost
                                Pexp_ident "Array.get" (asmcomp/arm/arch.ml[248,8049+17]..[248,8049+24]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[248,8049+17]..[248,8049+20])
                                    Pexp_ident "arg" (asmcomp/arm/arch.ml[248,8049+17]..[248,8049+20])
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[248,8049+22]..[248,8049+23])
                                    Pexp_constant PConst_int (0,None)
                              ]
                        ]
                  ]
    ]
  structure_item (asmcomp/arm/arch.ml[256,8266+0]..[264,8520+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[256,8266+4]..[256,8266+16])
          Ppat_var "is_immediate" (asmcomp/arm/arch.ml[256,8266+4]..[256,8266+16])
        expression (asmcomp/arm/arch.ml[256,8266+17]..[264,8520+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/arm/arch.ml[256,8266+17]..[256,8266+18])
            Ppat_var "n" (asmcomp/arm/arch.ml[256,8266+17]..[256,8266+18])
          expression (asmcomp/arm/arch.ml[257,8287+2]..[264,8520+9])
            Pexp_let Nonrec
            [
              <def>
                pattern (asmcomp/arm/arch.ml[257,8287+6]..[257,8287+7])
                  Ppat_var "n" (asmcomp/arm/arch.ml[257,8287+6]..[257,8287+7])
                expression (asmcomp/arm/arch.ml[257,8287+10]..[257,8287+15])
                  Pexp_apply
                  expression (asmcomp/arm/arch.ml[257,8287+10]..[257,8287+13])
                    Pexp_ident "ref" (asmcomp/arm/arch.ml[257,8287+10]..[257,8287+13])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/arm/arch.ml[257,8287+14]..[257,8287+15])
                        Pexp_ident "n" (asmcomp/arm/arch.ml[257,8287+14]..[257,8287+15])
                  ]
            ]
            expression (asmcomp/arm/arch.ml[258,8306+2]..[264,8520+9])
              Pexp_let Nonrec
              [
                <def>
                  pattern (asmcomp/arm/arch.ml[258,8306+6]..[258,8306+7])
                    Ppat_var "s" (asmcomp/arm/arch.ml[258,8306+6]..[258,8306+7])
                  expression (asmcomp/arm/arch.ml[258,8306+10]..[258,8306+15])
                    Pexp_apply
                    expression (asmcomp/arm/arch.ml[258,8306+10]..[258,8306+13])
                      Pexp_ident "ref" (asmcomp/arm/arch.ml[258,8306+10]..[258,8306+13])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/arm/arch.ml[258,8306+14]..[258,8306+15])
                          Pexp_constant PConst_int (0,None)
                    ]
              ]
              expression (asmcomp/arm/arch.ml[259,8325+2]..[264,8520+9])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (asmcomp/arm/arch.ml[259,8325+6]..[259,8325+7])
                      Ppat_var "m" (asmcomp/arm/arch.ml[259,8325+6]..[259,8325+7])
                    expression (asmcomp/arm/arch.ml[259,8325+10]..[259,8325+35])
                      Pexp_ifthenelse
                      expression (asmcomp/arm/arch.ml[259,8325+13]..[259,8325+19])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[259,8325+13]..[259,8325+14])
                          Pexp_ident "!" (asmcomp/arm/arch.ml[259,8325+13]..[259,8325+14])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[259,8325+14]..[259,8325+19])
                              Pexp_ident "thumb" (asmcomp/arm/arch.ml[259,8325+14]..[259,8325+19])
                        ]
                      expression (asmcomp/arm/arch.ml[259,8325+25]..[259,8325+27])
                        Pexp_constant PConst_int (24,None)
                      Some
                        expression (asmcomp/arm/arch.ml[259,8325+33]..[259,8325+35])
                          Pexp_constant PConst_int (30,None)
                ]
                expression (asmcomp/arm/arch.ml[260,8364+2]..[264,8520+9])
                  Pexp_sequence
                  expression (asmcomp/arm/arch.ml[260,8364+2]..[263,8512+6])
                    Pexp_while
                    expression (asmcomp/arm/arch.ml[260,8364+8]..[260,8364+48])
                      Pexp_apply
                      expression (asmcomp/arm/arch.ml[260,8364+17]..[260,8364+19])
                        Pexp_ident "&&" (asmcomp/arm/arch.ml[260,8364+17]..[260,8364+19])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/arm/arch.ml[260,8364+9]..[260,8364+16])
                            Pexp_apply
                            expression (asmcomp/arm/arch.ml[260,8364+12]..[260,8364+14])
                              Pexp_ident "<=" (asmcomp/arm/arch.ml[260,8364+12]..[260,8364+14])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/arm/arch.ml[260,8364+9]..[260,8364+11])
                                  Pexp_apply
                                  expression (asmcomp/arm/arch.ml[260,8364+9]..[260,8364+10])
                                    Pexp_ident "!" (asmcomp/arm/arch.ml[260,8364+9]..[260,8364+10])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/arm/arch.ml[260,8364+10]..[260,8364+11])
                                        Pexp_ident "s" (asmcomp/arm/arch.ml[260,8364+10]..[260,8364+11])
                                  ]
                              <arg>
                              Nolabel
                                expression (asmcomp/arm/arch.ml[260,8364+15]..[260,8364+16])
                                  Pexp_ident "m" (asmcomp/arm/arch.ml[260,8364+15]..[260,8364+16])
                            ]
                        <arg>
                        Nolabel
                          expression (asmcomp/arm/arch.ml[260,8364+20]..[260,8364+47])
                            Pexp_apply
                            expression (asmcomp/arm/arch.ml[260,8364+42]..[260,8364+44])
                              Pexp_ident "<>" (asmcomp/arm/arch.ml[260,8364+42]..[260,8364+44])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/arm/arch.ml[260,8364+20]..[260,8364+41])
                                  Pexp_apply
                                  expression (asmcomp/arm/arch.ml[260,8364+20]..[260,8364+32])
                                    Pexp_ident "Int32.logand" (asmcomp/arm/arch.ml[260,8364+20]..[260,8364+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/arm/arch.ml[260,8364+33]..[260,8364+35])
                                        Pexp_apply
                                        expression (asmcomp/arm/arch.ml[260,8364+33]..[260,8364+34])
                                          Pexp_ident "!" (asmcomp/arm/arch.ml[260,8364+33]..[260,8364+34])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/arm/arch.ml[260,8364+34]..[260,8364+35])
                                              Pexp_ident "n" (asmcomp/arm/arch.ml[260,8364+34]..[260,8364+35])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/arm/arch.ml[260,8364+36]..[260,8364+41])
                                        Pexp_constant PConst_int (0xff,Some l)
                                  ]
                              <arg>
                              Nolabel
                                expression (asmcomp/arm/arch.ml[260,8364+45]..[260,8364+47])
                                  Pexp_apply
                                  expression (asmcomp/arm/arch.ml[260,8364+45]..[260,8364+46])
                                    Pexp_ident "!" (asmcomp/arm/arch.ml[260,8364+45]..[260,8364+46])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/arm/arch.ml[260,8364+46]..[260,8364+47])
                                        Pexp_ident "n" (asmcomp/arm/arch.ml[260,8364+46]..[260,8364+47])
                                  ]
                            ]
                      ]
                    expression (asmcomp/arm/arch.ml[261,8416+4]..[262,8496+15])
                      Pexp_sequence
                      expression (asmcomp/arm/arch.ml[261,8416+4]..[261,8416+78])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[261,8416+6]..[261,8416+8])
                          Pexp_ident ":=" (asmcomp/arm/arch.ml[261,8416+6]..[261,8416+8])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[261,8416+4]..[261,8416+5])
                              Pexp_ident "n" (asmcomp/arm/arch.ml[261,8416+4]..[261,8416+5])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[261,8416+9]..[261,8416+78])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[261,8416+9]..[261,8416+20])
                                Pexp_ident "Int32.logor" (asmcomp/arm/arch.ml[261,8416+9]..[261,8416+20])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[261,8416+21]..[261,8416+53])
                                    Pexp_apply
                                    expression (asmcomp/arm/arch.ml[261,8416+22]..[261,8416+47])
                                      Pexp_ident "Int32.shift_right_logical" (asmcomp/arm/arch.ml[261,8416+22]..[261,8416+47])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/arm/arch.ml[261,8416+48]..[261,8416+50])
                                          Pexp_apply
                                          expression (asmcomp/arm/arch.ml[261,8416+48]..[261,8416+49])
                                            Pexp_ident "!" (asmcomp/arm/arch.ml[261,8416+48]..[261,8416+49])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/arm/arch.ml[261,8416+49]..[261,8416+50])
                                                Pexp_ident "n" (asmcomp/arm/arch.ml[261,8416+49]..[261,8416+50])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/arm/arch.ml[261,8416+51]..[261,8416+52])
                                          Pexp_constant PConst_int (2,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[261,8416+54]..[261,8416+78])
                                    Pexp_apply
                                    expression (asmcomp/arm/arch.ml[261,8416+55]..[261,8416+71])
                                      Pexp_ident "Int32.shift_left" (asmcomp/arm/arch.ml[261,8416+55]..[261,8416+71])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/arm/arch.ml[261,8416+72]..[261,8416+74])
                                          Pexp_apply
                                          expression (asmcomp/arm/arch.ml[261,8416+72]..[261,8416+73])
                                            Pexp_ident "!" (asmcomp/arm/arch.ml[261,8416+72]..[261,8416+73])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/arm/arch.ml[261,8416+73]..[261,8416+74])
                                                Pexp_ident "n" (asmcomp/arm/arch.ml[261,8416+73]..[261,8416+74])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/arm/arch.ml[261,8416+75]..[261,8416+77])
                                          Pexp_constant PConst_int (30,None)
                                    ]
                              ]
                        ]
                      expression (asmcomp/arm/arch.ml[262,8496+4]..[262,8496+15])
                        Pexp_apply
                        expression (asmcomp/arm/arch.ml[262,8496+6]..[262,8496+8])
                          Pexp_ident ":=" (asmcomp/arm/arch.ml[262,8496+6]..[262,8496+8])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[262,8496+4]..[262,8496+5])
                              Pexp_ident "s" (asmcomp/arm/arch.ml[262,8496+4]..[262,8496+5])
                          <arg>
                          Nolabel
                            expression (asmcomp/arm/arch.ml[262,8496+9]..[262,8496+15])
                              Pexp_apply
                              expression (asmcomp/arm/arch.ml[262,8496+12]..[262,8496+13])
                                Pexp_ident "+" (asmcomp/arm/arch.ml[262,8496+12]..[262,8496+13])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[262,8496+9]..[262,8496+11])
                                    Pexp_apply
                                    expression (asmcomp/arm/arch.ml[262,8496+9]..[262,8496+10])
                                      Pexp_ident "!" (asmcomp/arm/arch.ml[262,8496+9]..[262,8496+10])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/arm/arch.ml[262,8496+10]..[262,8496+11])
                                          Pexp_ident "s" (asmcomp/arm/arch.ml[262,8496+10]..[262,8496+11])
                                    ]
                                <arg>
                                Nolabel
                                  expression (asmcomp/arm/arch.ml[262,8496+14]..[262,8496+15])
                                    Pexp_constant PConst_int (2,None)
                              ]
                        ]
                  expression (asmcomp/arm/arch.ml[264,8520+2]..[264,8520+9])
                    Pexp_apply
                    expression (asmcomp/arm/arch.ml[264,8520+5]..[264,8520+7])
                      Pexp_ident "<=" (asmcomp/arm/arch.ml[264,8520+5]..[264,8520+7])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/arm/arch.ml[264,8520+2]..[264,8520+4])
                          Pexp_apply
                          expression (asmcomp/arm/arch.ml[264,8520+2]..[264,8520+3])
                            Pexp_ident "!" (asmcomp/arm/arch.ml[264,8520+2]..[264,8520+3])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/arm/arch.ml[264,8520+3]..[264,8520+4])
                                Pexp_ident "s" (asmcomp/arm/arch.ml[264,8520+3]..[264,8520+4])
                          ]
                      <arg>
                      Nolabel
                        expression (asmcomp/arm/arch.ml[264,8520+8]..[264,8520+9])
                          Pexp_ident "m" (asmcomp/arm/arch.ml[264,8520+8]..[264,8520+9])
                    ]
    ]
  structure_item (asmcomp/arm/arch.ml[268,8572+0]..[270,8637+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[268,8572+4]..[268,8572+21])
          Ppat_var "operation_is_pure" (asmcomp/arm/arch.ml[268,8572+4]..[268,8572+21])
        expression (asmcomp/arm/arch.ml[268,8572+24]..[270,8637+13])
          Pexp_function
          [
            <case>
              pattern (asmcomp/arm/arch.ml[269,8605+4]..[269,8605+22])
                Ppat_construct "Ishiftcheckbound" (asmcomp/arm/arch.ml[269,8605+4]..[269,8605+20])
                Some
                  []
                  pattern (asmcomp/arm/arch.ml[269,8605+21]..[269,8605+22])
                    Ppat_any
              expression (asmcomp/arm/arch.ml[269,8605+26]..[269,8605+31])
                Pexp_construct "false" (asmcomp/arm/arch.ml[269,8605+26]..[269,8605+31])
                None
            <case>
              pattern (asmcomp/arm/arch.ml[270,8637+4]..[270,8637+5])
                Ppat_any
              expression (asmcomp/arm/arch.ml[270,8637+9]..[270,8637+13])
                Pexp_construct "true" (asmcomp/arm/arch.ml[270,8637+9]..[270,8637+13])
                None
          ]
    ]
  structure_item (asmcomp/arm/arch.ml[274,8694+0]..[276,8760+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/arm/arch.ml[274,8694+4]..[274,8694+23])
          Ppat_var "operation_can_raise" (asmcomp/arm/arch.ml[274,8694+4]..[274,8694+23])
        expression (asmcomp/arm/arch.ml[274,8694+26]..[276,8760+14])
          Pexp_function
          [
            <case>
              pattern (asmcomp/arm/arch.ml[275,8729+4]..[275,8729+22])
                Ppat_construct "Ishiftcheckbound" (asmcomp/arm/arch.ml[275,8729+4]..[275,8729+20])
                Some
                  []
                  pattern (asmcomp/arm/arch.ml[275,8729+21]..[275,8729+22])
                    Ppat_any
              expression (asmcomp/arm/arch.ml[275,8729+26]..[275,8729+30])
                Pexp_construct "true" (asmcomp/arm/arch.ml[275,8729+26]..[275,8729+30])
                None
            <case>
              pattern (asmcomp/arm/arch.ml[276,8760+4]..[276,8760+5])
                Ppat_any
              expression (asmcomp/arm/arch.ml[276,8760+9]..[276,8760+14])
                Pexp_construct "false" (asmcomp/arm/arch.ml[276,8760+9]..[276,8760+14])
                None
          ]
    ]
]

