[
  structure_item (debugger/question.ml[16,1079+0]..[16,1079+19])
    Pstr_open Fresh
    module_expr (debugger/question.ml[16,1079+5]..[16,1079+19])
      Pmod_ident "Input_handling" (debugger/question.ml[16,1079+5]..[16,1079+19])
  structure_item (debugger/question.ml[17,1099+0]..[17,1099+15])
    Pstr_open Fresh
    module_expr (debugger/question.ml[17,1099+5]..[17,1099+15])
      Pmod_ident "Primitives" (debugger/question.ml[17,1099+5]..[17,1099+15])
  structure_item (debugger/question.ml[18,1115+0]..[18,1115+29])
    Pstr_module
    "Lexer" (debugger/question.ml[18,1115+7]..[18,1115+12])
      module_expr (debugger/question.ml[18,1115+15]..[18,1115+29])
        Pmod_ident "Debugger_lexer" (debugger/question.ml[18,1115+15]..[18,1115+29])
  structure_item (debugger/question.ml[21,1183+0]..[48,2019+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (debugger/question.ml[21,1183+4]..[21,1183+13])
          Ppat_var "yes_or_no" (debugger/question.ml[21,1183+4]..[21,1183+13])
        expression (debugger/question.ml[21,1183+14]..[48,2019+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (debugger/question.ml[21,1183+14]..[21,1183+21])
            Ppat_var "message" (debugger/question.ml[21,1183+14]..[21,1183+21])
          expression (debugger/question.ml[22,1207+2]..[48,2019+9])
            Pexp_ifthenelse
            expression (debugger/question.ml[22,1207+5]..[22,1207+16])
              Pexp_apply
              expression (debugger/question.ml[22,1207+5]..[22,1207+6])
                Pexp_ident "!" (debugger/question.ml[22,1207+5]..[22,1207+6])
              [
                <arg>
                Nolabel
                  expression (debugger/question.ml[22,1207+6]..[22,1207+16])
                    Pexp_ident "interactif" (debugger/question.ml[22,1207+6]..[22,1207+16])
              ]
            expression (debugger/question.ml[23,1229+4]..[46,1995+16])
              Pexp_let Nonrec
              [
                <def>
                  pattern (debugger/question.ml[23,1229+8]..[23,1229+15])
                    Ppat_var "finally" (debugger/question.ml[23,1229+8]..[23,1229+15])
                  expression (debugger/question.ml[24,1247+6]..[25,1289+64])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (debugger/question.ml[24,1247+10]..[24,1247+20])
                          Ppat_var "old_prompt" (debugger/question.ml[24,1247+10]..[24,1247+20])
                        expression (debugger/question.ml[24,1247+23]..[24,1247+38])
                          Pexp_apply
                          expression (debugger/question.ml[24,1247+23]..[24,1247+24])
                            Pexp_ident "!" (debugger/question.ml[24,1247+23]..[24,1247+24])
                          [
                            <arg>
                            Nolabel
                              expression (debugger/question.ml[24,1247+24]..[24,1247+38])
                                Pexp_ident "current_prompt" (debugger/question.ml[24,1247+24]..[24,1247+38])
                          ]
                    ]
                    expression (debugger/question.ml[25,1289+6]..[25,1289+64])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (debugger/question.ml[25,1289+10]..[25,1289+12])
                        Ppat_construct "()" (debugger/question.ml[25,1289+10]..[25,1289+12])
                        None
                      expression (debugger/question.ml[25,1289+16]..[25,1289+64])
                        Pexp_sequence
                        expression (debugger/question.ml[25,1289+16]..[25,1289+34])
                          Pexp_apply
                          expression (debugger/question.ml[25,1289+16]..[25,1289+31])
                            Pexp_ident "stop_user_input" (debugger/question.ml[25,1289+16]..[25,1289+31])
                          [
                            <arg>
                            Nolabel
                              expression (debugger/question.ml[25,1289+32]..[25,1289+34])
                                Pexp_construct "()" (debugger/question.ml[25,1289+32]..[25,1289+34])
                                None
                          ]
                        expression (debugger/question.ml[25,1289+36]..[25,1289+64])
                          Pexp_apply
                          expression (debugger/question.ml[25,1289+51]..[25,1289+53])
                            Pexp_ident ":=" (debugger/question.ml[25,1289+51]..[25,1289+53])
                          [
                            <arg>
                            Nolabel
                              expression (debugger/question.ml[25,1289+36]..[25,1289+50])
                                Pexp_ident "current_prompt" (debugger/question.ml[25,1289+36]..[25,1289+50])
                            <arg>
                            Nolabel
                              expression (debugger/question.ml[25,1289+54]..[25,1289+64])
                                Pexp_ident "old_prompt" (debugger/question.ml[25,1289+54]..[25,1289+64])
                          ]
              ]
              expression (debugger/question.ml[27,1361+6]..[46,1995+16])
                Pexp_apply
                expression (debugger/question.ml[27,1361+27]..[27,1361+29])
                  Pexp_ident "@@" (debugger/question.ml[27,1361+27]..[27,1361+29])
                [
                  <arg>
                  Nolabel
                    expression (debugger/question.ml[27,1361+6]..[27,1361+26])
                      Pexp_apply
                      expression (debugger/question.ml[27,1361+6]..[27,1361+17])
                        Pexp_ident "Fun.protect" (debugger/question.ml[27,1361+6]..[27,1361+17])
                      [
                        <arg>
                        Labelled "finally"
                          expression (debugger/question.ml[27,1361+19]..[27,1361+26])
                            Pexp_ident "finally" (debugger/question.ml[27,1361+19]..[27,1361+26])
                      ]
                  <arg>
                  Nolabel
                    expression (debugger/question.ml[27,1361+30]..[46,1995+16])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (debugger/question.ml[27,1361+34]..[27,1361+36])
                        Ppat_construct "()" (debugger/question.ml[27,1361+34]..[27,1361+36])
                        None
                      expression (debugger/question.ml[28,1401+8]..[46,1995+16])
                        Pexp_sequence
                        expression (debugger/question.ml[28,1401+8]..[28,1401+50])
                          Pexp_apply
                          expression (debugger/question.ml[28,1401+23]..[28,1401+25])
                            Pexp_ident ":=" (debugger/question.ml[28,1401+23]..[28,1401+25])
                          [
                            <arg>
                            Nolabel
                              expression (debugger/question.ml[28,1401+8]..[28,1401+22])
                                Pexp_ident "current_prompt" (debugger/question.ml[28,1401+8]..[28,1401+22])
                            <arg>
                            Nolabel
                              expression (debugger/question.ml[28,1401+26]..[28,1401+50])
                                Pexp_apply
                                expression (debugger/question.ml[28,1401+34]..[28,1401+35])
                                  Pexp_ident "^" (debugger/question.ml[28,1401+34]..[28,1401+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (debugger/question.ml[28,1401+26]..[28,1401+33])
                                      Pexp_ident "message" (debugger/question.ml[28,1401+26]..[28,1401+33])
                                  <arg>
                                  Nolabel
                                    expression (debugger/question.ml[28,1401+36]..[28,1401+50])
                                      Pexp_constant PConst_string(" ? (y or n) ",(debugger/question.ml[28,1401+37]..[28,1401+49]),None)
                                ]
                          ]
                        expression (debugger/question.ml[29,1453+8]..[46,1995+16])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (debugger/question.ml[29,1453+12]..[29,1453+18])
                                Ppat_var "answer" (debugger/question.ml[29,1453+12]..[29,1453+18])
                              expression (debugger/question.ml[30,1474+10]..[44,1965+18])
                                Pexp_let Rec
                                [
                                  <def>
                                    pattern (debugger/question.ml[30,1474+18]..[30,1474+21])
                                      Ppat_var "ask" (debugger/question.ml[30,1474+18]..[30,1474+21])
                                    expression (debugger/question.ml[30,1474+22]..[42,1929+22]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (debugger/question.ml[30,1474+22]..[30,1474+24])
                                        Ppat_construct "()" (debugger/question.ml[30,1474+22]..[30,1474+24])
                                        None
                                      expression (debugger/question.ml[31,1501+12]..[42,1929+22])
                                        Pexp_sequence
                                        expression (debugger/question.ml[31,1501+12]..[31,1501+32])
                                          Pexp_apply
                                          expression (debugger/question.ml[31,1501+12]..[31,1501+29])
                                            Pexp_ident "resume_user_input" (debugger/question.ml[31,1501+12]..[31,1501+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (debugger/question.ml[31,1501+30]..[31,1501+32])
                                                Pexp_construct "()" (debugger/question.ml[31,1501+30]..[31,1501+32])
                                                None
                                          ]
                                        expression (debugger/question.ml[32,1535+12]..[42,1929+22])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (debugger/question.ml[32,1535+16]..[32,1535+20])
                                                Ppat_var "line" (debugger/question.ml[32,1535+16]..[32,1535+20])
                                              expression (debugger/question.ml[33,1558+14]..[33,1558+77])
                                                Pexp_apply
                                                expression (debugger/question.ml[33,1558+14]..[33,1558+25])
                                                  Pexp_ident "string_trim" (debugger/question.ml[33,1558+14]..[33,1558+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (debugger/question.ml[33,1558+26]..[33,1558+77])
                                                      Pexp_apply
                                                      expression (debugger/question.ml[33,1558+27]..[33,1558+37])
                                                        Pexp_ident "Lexer.line" (debugger/question.ml[33,1558+27]..[33,1558+37])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (debugger/question.ml[33,1558+38]..[33,1558+76])
                                                            Pexp_apply
                                                            expression (debugger/question.ml[33,1558+39]..[33,1558+59])
                                                              Pexp_ident "Lexing.from_function" (debugger/question.ml[33,1558+39]..[33,1558+59])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (debugger/question.ml[33,1558+60]..[33,1558+75])
                                                                  Pexp_ident "read_user_input" (debugger/question.ml[33,1558+60]..[33,1558+75])
                                                            ]
                                                      ]
                                                ]
                                          ]
                                          expression (debugger/question.ml[35,1651+14]..[42,1929+22])
                                            Pexp_match
                                            expression (debugger/question.ml[35,1651+20]..[35,1651+70])
                                              Pexp_ifthenelse
                                              expression (debugger/question.ml[35,1651+24]..[35,1651+46])
                                                Pexp_apply
                                                expression (debugger/question.ml[35,1651+43]..[35,1651+44])
                                                  Pexp_ident ">" (debugger/question.ml[35,1651+43]..[35,1651+44])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (debugger/question.ml[35,1651+24]..[35,1651+42])
                                                      Pexp_apply
                                                      expression (debugger/question.ml[35,1651+24]..[35,1651+37])
                                                        Pexp_ident "String.length" (debugger/question.ml[35,1651+24]..[35,1651+37])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (debugger/question.ml[35,1651+38]..[35,1651+42])
                                                            Pexp_ident "line" (debugger/question.ml[35,1651+38]..[35,1651+42])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (debugger/question.ml[35,1651+45]..[35,1651+46])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                              expression (debugger/question.ml[35,1651+52]..[35,1651+60])
                                                Pexp_apply
                                                expression (debugger/question.ml[35,1651+52]..[35,1651+60]) ghost
                                                  Pexp_ident "String.get" (debugger/question.ml[35,1651+52]..[35,1651+60]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (debugger/question.ml[35,1651+52]..[35,1651+56])
                                                      Pexp_ident "line" (debugger/question.ml[35,1651+52]..[35,1651+56])
                                                  <arg>
                                                  Nolabel
                                                    expression (debugger/question.ml[35,1651+58]..[35,1651+59])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                              Some
                                                expression (debugger/question.ml[35,1651+66]..[35,1651+69])
                                                  Pexp_constant PConst_char 20
                                            [
                                              <case>
                                                pattern (debugger/question.ml[36,1727+16]..[36,1727+19])
                                                  Ppat_constant PConst_char 79
                                                expression (debugger/question.ml[36,1727+23]..[36,1727+27])
                                                  Pexp_construct "true" (debugger/question.ml[36,1727+23]..[36,1727+27])
                                                  None
                                              <case>
                                                pattern (debugger/question.ml[37,1755+16]..[37,1755+19])
                                                  Ppat_constant PConst_char 6e
                                                expression (debugger/question.ml[37,1755+23]..[37,1755+28])
                                                  Pexp_construct "false" (debugger/question.ml[37,1755+23]..[37,1755+28])
                                                  None
                                              <case>
                                                pattern (debugger/question.ml[38,1784+16]..[38,1784+17])
                                                  Ppat_any
                                                expression (debugger/question.ml[39,1805+16]..[42,1929+22])
                                                  Pexp_sequence
                                                  expression (debugger/question.ml[39,1805+16]..[39,1805+34])
                                                    Pexp_apply
                                                    expression (debugger/question.ml[39,1805+16]..[39,1805+31])
                                                      Pexp_ident "stop_user_input" (debugger/question.ml[39,1805+16]..[39,1805+31])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (debugger/question.ml[39,1805+32]..[39,1805+34])
                                                          Pexp_construct "()" (debugger/question.ml[39,1805+32]..[39,1805+34])
                                                          None
                                                    ]
                                                  expression (debugger/question.ml[40,1841+16]..[42,1929+22])
                                                    Pexp_sequence
                                                    expression (debugger/question.ml[40,1841+16]..[40,1841+52])
                                                      Pexp_apply
                                                      expression (debugger/question.ml[40,1841+16]..[40,1841+28])
                                                        Pexp_ident "print_string" (debugger/question.ml[40,1841+16]..[40,1841+28])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (debugger/question.ml[40,1841+29]..[40,1841+52])
                                                            Pexp_constant PConst_string("Please answer y or n.",(debugger/question.ml[40,1841+30]..[40,1841+51]),None)
                                                      ]
                                                    expression (debugger/question.ml[41,1895+16]..[42,1929+22])
                                                      Pexp_sequence
                                                      expression (debugger/question.ml[41,1895+16]..[41,1895+32])
                                                        Pexp_apply
                                                        expression (debugger/question.ml[41,1895+16]..[41,1895+29])
                                                          Pexp_ident "print_newline" (debugger/question.ml[41,1895+16]..[41,1895+29])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (debugger/question.ml[41,1895+30]..[41,1895+32])
                                                              Pexp_construct "()" (debugger/question.ml[41,1895+30]..[41,1895+32])
                                                              None
                                                        ]
                                                      expression (debugger/question.ml[42,1929+16]..[42,1929+22])
                                                        Pexp_apply
                                                        expression (debugger/question.ml[42,1929+16]..[42,1929+19])
                                                          Pexp_ident "ask" (debugger/question.ml[42,1929+16]..[42,1929+19])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (debugger/question.ml[42,1929+20]..[42,1929+22])
                                                              Pexp_construct "()" (debugger/question.ml[42,1929+20]..[42,1929+22])
                                                              None
                                                        ]
                                            ]
                                ]
                                expression (debugger/question.ml[44,1965+12]..[44,1965+18])
                                  Pexp_apply
                                  expression (debugger/question.ml[44,1965+12]..[44,1965+15])
                                    Pexp_ident "ask" (debugger/question.ml[44,1965+12]..[44,1965+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (debugger/question.ml[44,1965+16]..[44,1965+18])
                                        Pexp_construct "()" (debugger/question.ml[44,1965+16]..[44,1965+18])
                                        None
                                  ]
                          ]
                          expression (debugger/question.ml[46,1995+10]..[46,1995+16])
                            Pexp_ident "answer" (debugger/question.ml[46,1995+10]..[46,1995+16])
                ]
            Some
              expression (debugger/question.ml[48,2019+4]..[48,2019+9])
                Pexp_construct "false" (debugger/question.ml[48,2019+4]..[48,2019+9])
                None
    ]
]

