[
  structure_item (testsuite/tests/letrec-check/modules.ml[5,24+0]..[5,24+53])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/modules.ml[5,24+8]..[5,24+9])
          Ppat_var "x" (testsuite/tests/letrec-check/modules.ml[5,24+8]..[5,24+9])
        expression (testsuite/tests/letrec-check/modules.ml[5,24+12]..[5,24+53])
          Pexp_letmodule "M" (testsuite/tests/letrec-check/modules.ml[5,24+23]..[5,24+24])
          module_expr (testsuite/tests/letrec-check/modules.ml[5,24+27]..[5,24+47])
            Pmod_structure
            [
              structure_item (testsuite/tests/letrec-check/modules.ml[5,24+34]..[5,24+43])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (testsuite/tests/letrec-check/modules.ml[5,24+38]..[5,24+39])
                      Ppat_var "f" (testsuite/tests/letrec-check/modules.ml[5,24+38]..[5,24+39])
                    expression (testsuite/tests/letrec-check/modules.ml[5,24+42]..[5,24+43])
                      Pexp_ident "x" (testsuite/tests/letrec-check/modules.ml[5,24+42]..[5,24+43])
                ]
            ]
          expression (testsuite/tests/letrec-check/modules.ml[5,24+51]..[5,24+53])
            Pexp_construct "()" (testsuite/tests/letrec-check/modules.ml[5,24+51]..[5,24+53])
            None
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[6,80+0]..[8,110+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/modules.ml[6,80+9]..[8,110+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/modules.ml[6,80+9]..[8,110+2])
          Pexp_constant PConst_string ("\nval x : unit = ()\n",(testsuite/tests/letrec-check/modules.ml[6,80+11]..[8,110+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[10,117+0]..[10,117+76])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/modules.ml[10,117+8]..[10,117+9])
          Ppat_var "x" (testsuite/tests/letrec-check/modules.ml[10,117+8]..[10,117+9])
        expression (testsuite/tests/letrec-check/modules.ml[10,117+12]..[10,117+76])
          Pexp_letmodule "M" (testsuite/tests/letrec-check/modules.ml[10,117+23]..[10,117+24])
          module_expr (testsuite/tests/letrec-check/modules.ml[10,117+27]..[10,117+60])
            Pmod_structure
            [
              structure_item (testsuite/tests/letrec-check/modules.ml[10,117+34]..[10,117+43])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (testsuite/tests/letrec-check/modules.ml[10,117+38]..[10,117+39])
                      Ppat_var "f" (testsuite/tests/letrec-check/modules.ml[10,117+38]..[10,117+39])
                    expression (testsuite/tests/letrec-check/modules.ml[10,117+42]..[10,117+43])
                      Pexp_ident "x" (testsuite/tests/letrec-check/modules.ml[10,117+42]..[10,117+43])
                ]
              structure_item (testsuite/tests/letrec-check/modules.ml[10,117+44]..[10,117+56])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (testsuite/tests/letrec-check/modules.ml[10,117+48]..[10,117+49])
                      Ppat_var "g" (testsuite/tests/letrec-check/modules.ml[10,117+48]..[10,117+49])
                    expression (testsuite/tests/letrec-check/modules.ml[10,117+52]..[10,117+56])
                      Pexp_apply
                      expression (testsuite/tests/letrec-check/modules.ml[10,117+52]..[10,117+53])
                        Pexp_ident "x" (testsuite/tests/letrec-check/modules.ml[10,117+52]..[10,117+53])
                      [
                        <arg>
                        Nolabel
                          expression (testsuite/tests/letrec-check/modules.ml[10,117+54]..[10,117+56])
                            Pexp_construct "()" (testsuite/tests/letrec-check/modules.ml[10,117+54]..[10,117+56])
                            None
                      ]
                ]
            ]
          expression (testsuite/tests/letrec-check/modules.ml[10,117+64]..[10,117+76])
            Pexp_fun
            Nolabel
            None
            pattern (testsuite/tests/letrec-check/modules.ml[10,117+68]..[10,117+70])
              Ppat_construct "()" (testsuite/tests/letrec-check/modules.ml[10,117+68]..[10,117+70])
              None
            expression (testsuite/tests/letrec-check/modules.ml[10,117+74]..[10,117+76])
              Pexp_construct "()" (testsuite/tests/letrec-check/modules.ml[10,117+74]..[10,117+76])
              None
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[11,196+0]..[16,476+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/modules.ml[11,196+9]..[16,476+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/modules.ml[11,196+9]..[16,476+2])
          Pexp_constant PConst_string ("\nLine 1, characters 12-76:\n1 | let rec x = let module M = struct let f = x let g = x () end in fun () -> ();;\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/modules.ml[11,196+11]..[16,476+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[18,483+0]..[18,483+66])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/modules.ml[18,483+8]..[18,483+9])
          Ppat_var "x" (testsuite/tests/letrec-check/modules.ml[18,483+8]..[18,483+9])
        expression (testsuite/tests/letrec-check/modules.ml[18,483+12]..[18,483+66])
          Pexp_letmodule "_" (testsuite/tests/letrec-check/modules.ml[18,483+23]..[18,483+24])
          module_expr (testsuite/tests/letrec-check/modules.ml[18,483+27]..[18,483+50])
            Pmod_structure
            [
              structure_item (testsuite/tests/letrec-check/modules.ml[18,483+34]..[18,483+46])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (testsuite/tests/letrec-check/modules.ml[18,483+38]..[18,483+39])
                      Ppat_any
                    expression (testsuite/tests/letrec-check/modules.ml[18,483+42]..[18,483+46])
                      Pexp_apply
                      expression (testsuite/tests/letrec-check/modules.ml[18,483+42]..[18,483+43])
                        Pexp_ident "x" (testsuite/tests/letrec-check/modules.ml[18,483+42]..[18,483+43])
                      [
                        <arg>
                        Nolabel
                          expression (testsuite/tests/letrec-check/modules.ml[18,483+44]..[18,483+46])
                            Pexp_construct "()" (testsuite/tests/letrec-check/modules.ml[18,483+44]..[18,483+46])
                            None
                      ]
                ]
            ]
          expression (testsuite/tests/letrec-check/modules.ml[18,483+54]..[18,483+66])
            Pexp_fun
            Nolabel
            None
            pattern (testsuite/tests/letrec-check/modules.ml[18,483+58]..[18,483+60])
              Ppat_construct "()" (testsuite/tests/letrec-check/modules.ml[18,483+58]..[18,483+60])
              None
            expression (testsuite/tests/letrec-check/modules.ml[18,483+64]..[18,483+66])
              Pexp_construct "()" (testsuite/tests/letrec-check/modules.ml[18,483+64]..[18,483+66])
              None
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[19,552+0]..[24,812+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/modules.ml[19,552+9]..[24,812+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/modules.ml[19,552+9]..[24,812+2])
          Pexp_constant PConst_string ("\nLine 1, characters 12-66:\n1 | let rec x = let module _ = struct let _ = x () end in fun () -> ();;\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/modules.ml[19,552+11]..[24,812+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[26,819+0]..[26,819+76])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/modules.ml[26,819+8]..[26,819+9])
          Ppat_var "x" (testsuite/tests/letrec-check/modules.ml[26,819+8]..[26,819+9])
        expression (testsuite/tests/letrec-check/modules.ml[26,819+12]..[26,819+76])
          Pexp_letmodule "M" (testsuite/tests/letrec-check/modules.ml[26,819+23]..[26,819+24])
          module_expr (testsuite/tests/letrec-check/modules.ml[26,819+27]..[26,819+60])
            Pmod_structure
            [
              structure_item (testsuite/tests/letrec-check/modules.ml[26,819+34]..[26,819+46])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (testsuite/tests/letrec-check/modules.ml[26,819+38]..[26,819+39])
                      Ppat_var "f" (testsuite/tests/letrec-check/modules.ml[26,819+38]..[26,819+39])
                    expression (testsuite/tests/letrec-check/modules.ml[26,819+42]..[26,819+46])
                      Pexp_apply
                      expression (testsuite/tests/letrec-check/modules.ml[26,819+42]..[26,819+43])
                        Pexp_ident "x" (testsuite/tests/letrec-check/modules.ml[26,819+42]..[26,819+43])
                      [
                        <arg>
                        Nolabel
                          expression (testsuite/tests/letrec-check/modules.ml[26,819+44]..[26,819+46])
                            Pexp_construct "()" (testsuite/tests/letrec-check/modules.ml[26,819+44]..[26,819+46])
                            None
                      ]
                ]
              structure_item (testsuite/tests/letrec-check/modules.ml[26,819+47]..[26,819+56])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (testsuite/tests/letrec-check/modules.ml[26,819+51]..[26,819+52])
                      Ppat_var "g" (testsuite/tests/letrec-check/modules.ml[26,819+51]..[26,819+52])
                    expression (testsuite/tests/letrec-check/modules.ml[26,819+55]..[26,819+56])
                      Pexp_ident "x" (testsuite/tests/letrec-check/modules.ml[26,819+55]..[26,819+56])
                ]
            ]
          expression (testsuite/tests/letrec-check/modules.ml[26,819+64]..[26,819+76])
            Pexp_fun
            Nolabel
            None
            pattern (testsuite/tests/letrec-check/modules.ml[26,819+68]..[26,819+70])
              Ppat_construct "()" (testsuite/tests/letrec-check/modules.ml[26,819+68]..[26,819+70])
              None
            expression (testsuite/tests/letrec-check/modules.ml[26,819+74]..[26,819+76])
              Pexp_construct "()" (testsuite/tests/letrec-check/modules.ml[26,819+74]..[26,819+76])
              None
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[27,898+0]..[32,1178+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/modules.ml[27,898+9]..[32,1178+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/modules.ml[27,898+9]..[32,1178+2])
          Pexp_constant PConst_string ("\nLine 1, characters 12-76:\n1 | let rec x = let module M = struct let f = x () let g = x end in fun () -> ();;\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/modules.ml[27,898+11]..[32,1178+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[34,1185+0]..[35,1264+16])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/modules.ml[34,1185+8]..[34,1185+9])
          Ppat_var "x" (testsuite/tests/letrec-check/modules.ml[34,1185+8]..[34,1185+9])
        expression (testsuite/tests/letrec-check/modules.ml[34,1185+12]..[34,1185+78])
          Pexp_letmodule "M" (testsuite/tests/letrec-check/modules.ml[34,1185+24]..[34,1185+25])
          module_expr (testsuite/tests/letrec-check/modules.ml[34,1185+28]..[34,1185+61])
            Pmod_structure
            [
              structure_item (testsuite/tests/letrec-check/modules.ml[34,1185+35]..[34,1185+46])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (testsuite/tests/letrec-check/modules.ml[34,1185+39]..[34,1185+40])
                      Ppat_var "f" (testsuite/tests/letrec-check/modules.ml[34,1185+39]..[34,1185+40])
                    expression (testsuite/tests/letrec-check/modules.ml[34,1185+43]..[34,1185+46])
                      Pexp_apply
                      expression (testsuite/tests/letrec-check/modules.ml[34,1185+43]..[34,1185+44])
                        Pexp_ident "y" (testsuite/tests/letrec-check/modules.ml[34,1185+43]..[34,1185+44])
                      [
                        <arg>
                        Nolabel
                          expression (testsuite/tests/letrec-check/modules.ml[34,1185+45]..[34,1185+46])
                            Pexp_constant PConst_int (0,None)
                      ]
                ]
              structure_item (testsuite/tests/letrec-check/modules.ml[34,1185+47]..[34,1185+57])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (testsuite/tests/letrec-check/modules.ml[34,1185+51]..[34,1185+52])
                      Ppat_var "g" (testsuite/tests/letrec-check/modules.ml[34,1185+51]..[34,1185+52])
                    expression (testsuite/tests/letrec-check/modules.ml[34,1185+55]..[34,1185+57])
                      Pexp_construct "()" (testsuite/tests/letrec-check/modules.ml[34,1185+55]..[34,1185+57])
                      None
                ]
            ]
          expression (testsuite/tests/letrec-check/modules.ml[34,1185+65]..[34,1185+77])
            Pexp_fun
            Nolabel
            None
            pattern (testsuite/tests/letrec-check/modules.ml[34,1185+69]..[34,1185+71])
              Ppat_construct "()" (testsuite/tests/letrec-check/modules.ml[34,1185+69]..[34,1185+71])
              None
            expression (testsuite/tests/letrec-check/modules.ml[34,1185+75]..[34,1185+77])
              Pexp_construct "()" (testsuite/tests/letrec-check/modules.ml[34,1185+75]..[34,1185+77])
              None
      <def>
        pattern (testsuite/tests/letrec-check/modules.ml[35,1264+8]..[35,1264+9])
          Ppat_var "y" (testsuite/tests/letrec-check/modules.ml[35,1264+8]..[35,1264+9])
        expression (testsuite/tests/letrec-check/modules.ml[35,1264+12]..[35,1264+16])
          Pexp_ident "succ" (testsuite/tests/letrec-check/modules.ml[35,1264+12]..[35,1264+16])
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[36,1283+0]..[41,1565+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/modules.ml[36,1283+9]..[41,1565+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/modules.ml[36,1283+9]..[41,1565+2])
          Pexp_constant PConst_string ("\nLine 1, characters 12-78:\n1 | let rec x = (let module M = struct let f = y 0 let g = () end in fun () -> ())\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/modules.ml[36,1283+11]..[41,1565+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[43,1572+0]..[46,1644+14])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/modules.ml[43,1572+8]..[43,1572+9])
          Ppat_var "x" (testsuite/tests/letrec-check/modules.ml[43,1572+8]..[43,1572+9])
        expression (testsuite/tests/letrec-check/modules.ml[44,1584+2]..[46,1644+14])
          Pexp_letmodule "M" (testsuite/tests/letrec-check/modules.ml[44,1584+13]..[44,1584+14])
          module_expr (testsuite/tests/letrec-check/modules.ml[44,1584+17]..[46,1644+5])
            Pmod_structure
            [
              structure_item (testsuite/tests/letrec-check/modules.ml[45,1608+4]..[45,1608+35])
                Pstr_module
                "N" (testsuite/tests/letrec-check/modules.ml[45,1608+11]..[45,1608+12])
                  module_expr (testsuite/tests/letrec-check/modules.ml[45,1608+15]..[45,1608+35])
                    Pmod_structure
                    [
                      structure_item (testsuite/tests/letrec-check/modules.ml[45,1608+22]..[45,1608+31])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (testsuite/tests/letrec-check/modules.ml[45,1608+26]..[45,1608+27])
                              Ppat_var "y" (testsuite/tests/letrec-check/modules.ml[45,1608+26]..[45,1608+27])
                            expression (testsuite/tests/letrec-check/modules.ml[45,1608+30]..[45,1608+31])
                              Pexp_ident "x" (testsuite/tests/letrec-check/modules.ml[45,1608+30]..[45,1608+31])
                        ]
                    ]
            ]
          expression (testsuite/tests/letrec-check/modules.ml[46,1644+9]..[46,1644+14])
            Pexp_ident "M.N.y" (testsuite/tests/letrec-check/modules.ml[46,1644+9]..[46,1644+14])
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[47,1661+0]..[53,1868+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/modules.ml[47,1661+9]..[53,1868+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/modules.ml[47,1661+9]..[53,1868+2])
          Pexp_constant PConst_string ("\nLines 2-4, characters 2-14:\n2 | ..let module M = struct\n3 |     module N = struct let y = x end\n4 |   end in M.N.y..\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/modules.ml[47,1661+11]..[53,1868+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[55,1875+0]..[55,1875+34])
    Pstr_modtype "T" (testsuite/tests/letrec-check/modules.ml[55,1875+12]..[55,1875+13])
      module_type (testsuite/tests/letrec-check/modules.ml[55,1875+16]..[55,1875+34])
        Pmty_signature
        [
          signature_item (testsuite/tests/letrec-check/modules.ml[55,1875+20]..[55,1875+30])
            Psig_value
            value_description "y" (testsuite/tests/letrec-check/modules.ml[55,1875+24]..[55,1875+25]) (testsuite/tests/letrec-check/modules.ml[55,1875+20]..[55,1875+30])
              core_type (testsuite/tests/letrec-check/modules.ml[55,1875+27]..[55,1875+30])
                Ptyp_constr "int" (testsuite/tests/letrec-check/modules.ml[55,1875+27]..[55,1875+30])
                []
              []
        ]
  structure_item (testsuite/tests/letrec-check/modules.ml[57,1911+0]..[64,2063+32])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/modules.ml[57,1911+8]..[57,1911+9])
          Ppat_var "x" (testsuite/tests/letrec-check/modules.ml[57,1911+8]..[57,1911+9])
        expression (testsuite/tests/letrec-check/modules.ml[57,1911+12]..[64,2063+32])
          Pexp_letmodule "M" (testsuite/tests/letrec-check/modules.ml[57,1911+23]..[57,1911+24])
          module_expr (testsuite/tests/letrec-check/modules.ml[58,1938+12]..[63,2047+15])
            Pmod_structure
            [
              structure_item (testsuite/tests/letrec-check/modules.ml[59,1957+14]..[62,2029+17])
                Pstr_module
                "N" (testsuite/tests/letrec-check/modules.ml[59,1957+21]..[59,1957+22])
                  module_expr (testsuite/tests/letrec-check/modules.ml[60,1982+14]..[62,2029+17])
                    Pmod_structure
                    [
                      structure_item (testsuite/tests/letrec-check/modules.ml[61,2003+16]..[61,2003+25])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (testsuite/tests/letrec-check/modules.ml[61,2003+20]..[61,2003+21])
                              Ppat_var "y" (testsuite/tests/letrec-check/modules.ml[61,2003+20]..[61,2003+21])
                            expression (testsuite/tests/letrec-check/modules.ml[61,2003+24]..[61,2003+25])
                              Pexp_ident "x" (testsuite/tests/letrec-check/modules.ml[61,2003+24]..[61,2003+25])
                        ]
                    ]
            ]
          expression (testsuite/tests/letrec-check/modules.ml[64,2063+5]..[64,2063+32])
            Pexp_fun
            Nolabel
            None
            pattern (testsuite/tests/letrec-check/modules.ml[64,2063+9]..[64,2063+11])
              Ppat_construct "()" (testsuite/tests/letrec-check/modules.ml[64,2063+9]..[64,2063+11])
              None
            expression (testsuite/tests/letrec-check/modules.ml[64,2063+15]..[64,2063+32])
              Pexp_apply
              expression (testsuite/tests/letrec-check/modules.ml[64,2063+15]..[64,2063+21])
                Pexp_ident "ignore" (testsuite/tests/letrec-check/modules.ml[64,2063+15]..[64,2063+21])
              [
                <arg>
                Nolabel
                  expression (testsuite/tests/letrec-check/modules.ml[64,2063+22]..[64,2063+32])
                    Pexp_apply
                    expression (testsuite/tests/letrec-check/modules.ml[64,2063+23]..[64,2063+28])
                      Pexp_ident "M.N.y" (testsuite/tests/letrec-check/modules.ml[64,2063+23]..[64,2063+28])
                    [
                      <arg>
                      Nolabel
                        expression (testsuite/tests/letrec-check/modules.ml[64,2063+29]..[64,2063+31])
                          Pexp_construct "()" (testsuite/tests/letrec-check/modules.ml[64,2063+29]..[64,2063+31])
                          None
                    ]
              ]
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[65,2098+0]..[68,2175+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/modules.ml[65,2098+9]..[68,2175+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/modules.ml[65,2098+9]..[68,2175+2])
          Pexp_constant PConst_string ("\nmodule type T = sig val y : int end\nval x : unit -> unit = <fun>\n",(testsuite/tests/letrec-check/modules.ml[65,2098+11]..[68,2175+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[70,2182+0]..[70,2182+76])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/modules.ml[70,2182+8]..[70,2182+9])
          Ppat_var "x" (testsuite/tests/letrec-check/modules.ml[70,2182+8]..[70,2182+9])
        expression (testsuite/tests/letrec-check/modules.ml[70,2182+12]..[70,2182+76])
          Pexp_letmodule "M" (testsuite/tests/letrec-check/modules.ml[70,2182+23]..[70,2182+24])
          module_expr (testsuite/tests/letrec-check/modules.ml[70,2182+27]..[70,2182+60])
            Pmod_structure
            [
              structure_item (testsuite/tests/letrec-check/modules.ml[70,2182+34]..[70,2182+56])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (testsuite/tests/letrec-check/modules.ml[70,2182+38]..[70,2182+39])
                      Ppat_var "f" (testsuite/tests/letrec-check/modules.ml[70,2182+38]..[70,2182+39])
                    expression (testsuite/tests/letrec-check/modules.ml[70,2182+42]..[70,2182+46])
                      Pexp_apply
                      expression (testsuite/tests/letrec-check/modules.ml[70,2182+42]..[70,2182+43])
                        Pexp_ident "x" (testsuite/tests/letrec-check/modules.ml[70,2182+42]..[70,2182+43])
                      [
                        <arg>
                        Nolabel
                          expression (testsuite/tests/letrec-check/modules.ml[70,2182+44]..[70,2182+46])
                            Pexp_construct "()" (testsuite/tests/letrec-check/modules.ml[70,2182+44]..[70,2182+46])
                            None
                      ]
                  <def>
                    pattern (testsuite/tests/letrec-check/modules.ml[70,2182+51]..[70,2182+52])
                      Ppat_var "g" (testsuite/tests/letrec-check/modules.ml[70,2182+51]..[70,2182+52])
                    expression (testsuite/tests/letrec-check/modules.ml[70,2182+55]..[70,2182+56])
                      Pexp_ident "x" (testsuite/tests/letrec-check/modules.ml[70,2182+55]..[70,2182+56])
                ]
            ]
          expression (testsuite/tests/letrec-check/modules.ml[70,2182+64]..[70,2182+76])
            Pexp_fun
            Nolabel
            None
            pattern (testsuite/tests/letrec-check/modules.ml[70,2182+68]..[70,2182+70])
              Ppat_construct "()" (testsuite/tests/letrec-check/modules.ml[70,2182+68]..[70,2182+70])
              None
            expression (testsuite/tests/letrec-check/modules.ml[70,2182+74]..[70,2182+76])
              Pexp_construct "()" (testsuite/tests/letrec-check/modules.ml[70,2182+74]..[70,2182+76])
              None
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[71,2261+0]..[76,2541+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/modules.ml[71,2261+9]..[76,2541+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/modules.ml[71,2261+9]..[76,2541+2])
          Pexp_constant PConst_string ("\nLine 1, characters 12-76:\n1 | let rec x = let module M = struct let f = x () and g = x end in fun () -> ();;\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/modules.ml[71,2261+11]..[76,2541+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[78,2548+0]..[78,2548+23])
    Pstr_modtype "T" (testsuite/tests/letrec-check/modules.ml[78,2548+12]..[78,2548+13])
      module_type (testsuite/tests/letrec-check/modules.ml[78,2548+16]..[78,2548+23])
        Pmty_signature
        []
  structure_item (testsuite/tests/letrec-check/modules.ml[79,2572+0]..[80,2609+61])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/modules.ml[79,2572+8]..[79,2572+9])
          Ppat_var "x" (testsuite/tests/letrec-check/modules.ml[79,2572+8]..[79,2572+9])
        expression (testsuite/tests/letrec-check/modules.ml[79,2572+12]..[79,2572+36])
          Pexp_constraint
          expression (testsuite/tests/letrec-check/modules.ml[79,2572+12]..[79,2572+36]) ghost
            Pexp_pack
            module_expr (testsuite/tests/letrec-check/modules.ml[79,2572+20]..[79,2572+31])
              Pmod_unpack
              expression (testsuite/tests/letrec-check/modules.ml[79,2572+25]..[79,2572+30]) ghost
                Pexp_constraint
                expression (testsuite/tests/letrec-check/modules.ml[79,2572+25]..[79,2572+26])
                  Pexp_ident "y" (testsuite/tests/letrec-check/modules.ml[79,2572+25]..[79,2572+26])
                core_type (testsuite/tests/letrec-check/modules.ml[79,2572+29]..[79,2572+30])
                  Ptyp_package "T" (testsuite/tests/letrec-check/modules.ml[79,2572+29]..[79,2572+30])
                  []
          core_type (testsuite/tests/letrec-check/modules.ml[79,2572+34]..[79,2572+35])
            Ptyp_package "T" (testsuite/tests/letrec-check/modules.ml[79,2572+34]..[79,2572+35])
            []
      <def>
        pattern (testsuite/tests/letrec-check/modules.ml[80,2609+4]..[80,2609+5])
          Ppat_var "y" (testsuite/tests/letrec-check/modules.ml[80,2609+4]..[80,2609+5])
        expression (testsuite/tests/letrec-check/modules.ml[80,2609+8]..[80,2609+61])
          Pexp_letmodule "M" (testsuite/tests/letrec-check/modules.ml[80,2609+19]..[80,2609+20])
          module_expr (testsuite/tests/letrec-check/modules.ml[80,2609+23]..[80,2609+43])
            Pmod_structure
            [
              structure_item (testsuite/tests/letrec-check/modules.ml[80,2609+30]..[80,2609+39])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (testsuite/tests/letrec-check/modules.ml[80,2609+34]..[80,2609+35])
                      Ppat_var "x" (testsuite/tests/letrec-check/modules.ml[80,2609+34]..[80,2609+35])
                    expression (testsuite/tests/letrec-check/modules.ml[80,2609+38]..[80,2609+39])
                      Pexp_ident "x" (testsuite/tests/letrec-check/modules.ml[80,2609+38]..[80,2609+39])
                ]
            ]
          expression (testsuite/tests/letrec-check/modules.ml[80,2609+47]..[80,2609+61])
            Pexp_constraint
            expression (testsuite/tests/letrec-check/modules.ml[80,2609+47]..[80,2609+61]) ghost
              Pexp_pack
              module_expr (testsuite/tests/letrec-check/modules.ml[80,2609+55]..[80,2609+56])
                Pmod_ident "M" (testsuite/tests/letrec-check/modules.ml[80,2609+55]..[80,2609+56])
            core_type (testsuite/tests/letrec-check/modules.ml[80,2609+59]..[80,2609+60])
              Ptyp_package "T" (testsuite/tests/letrec-check/modules.ml[80,2609+59]..[80,2609+60])
              []
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[82,2674+0]..[88,2896+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/modules.ml[82,2674+9]..[88,2896+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/modules.ml[82,2674+9]..[88,2896+2])
          Pexp_constant PConst_string ("\nmodule type T = sig end\nLine 2, characters 12-36:\n2 | let rec x = (module (val y : T) : T)\n                ^^^^^^^^^^^^^^^^^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/modules.ml[82,2674+11]..[88,2896+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[91,2928+0]..[91,2928+51])
    Pstr_modtype "S" (testsuite/tests/letrec-check/modules.ml[91,2928+12]..[91,2928+13])
      module_type (testsuite/tests/letrec-check/modules.ml[91,2928+16]..[91,2928+51])
        Pmty_signature
        [
          signature_item (testsuite/tests/letrec-check/modules.ml[91,2928+34]..[91,2928+47])
            Psig_value
            value_description "y" (testsuite/tests/letrec-check/modules.ml[91,2928+38]..[91,2928+39]) (testsuite/tests/letrec-check/modules.ml[91,2928+34]..[91,2928+47])
              core_type (testsuite/tests/letrec-check/modules.ml[91,2928+42]..[91,2928+47])
                Ptyp_constr "float" (testsuite/tests/letrec-check/modules.ml[91,2928+42]..[91,2928+47])
                []
              []
        ]
  structure_item (testsuite/tests/letrec-check/modules.ml[92,2982+0]..[92,2982+51])
    Pstr_modtype "T" (testsuite/tests/letrec-check/modules.ml[92,2982+12]..[92,2982+13])
      module_type (testsuite/tests/letrec-check/modules.ml[92,2982+16]..[92,2982+51])
        Pmty_signature
        [
          signature_item (testsuite/tests/letrec-check/modules.ml[92,2982+20]..[92,2982+33])
            Psig_value
            value_description "x" (testsuite/tests/letrec-check/modules.ml[92,2982+24]..[92,2982+25]) (testsuite/tests/letrec-check/modules.ml[92,2982+20]..[92,2982+33])
              core_type (testsuite/tests/letrec-check/modules.ml[92,2982+28]..[92,2982+33])
                Ptyp_constr "float" (testsuite/tests/letrec-check/modules.ml[92,2982+28]..[92,2982+33])
                []
              []
          signature_item (testsuite/tests/letrec-check/modules.ml[92,2982+34]..[92,2982+47])
            Psig_value
            value_description "y" (testsuite/tests/letrec-check/modules.ml[92,2982+38]..[92,2982+39]) (testsuite/tests/letrec-check/modules.ml[92,2982+34]..[92,2982+47])
              core_type (testsuite/tests/letrec-check/modules.ml[92,2982+42]..[92,2982+47])
                Ptyp_constr "float" (testsuite/tests/letrec-check/modules.ml[92,2982+42]..[92,2982+47])
                []
              []
        ]
  structure_item (testsuite/tests/letrec-check/modules.ml[93,3036+0]..[93,3036+28])
    Pstr_type Rec
    [
      type_declaration "t" (testsuite/tests/letrec-check/modules.ml[93,3036+5]..[93,3036+6]) (testsuite/tests/letrec-check/modules.ml[93,3036+0]..[93,3036+28])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (testsuite/tests/letrec-check/modules.ml[93,3036+9]..[93,3036+28])
                "T" (testsuite/tests/letrec-check/modules.ml[93,3036+9]..[93,3036+10])
                [
                  core_type (testsuite/tests/letrec-check/modules.ml[93,3036+13]..[93,3036+23])
                    Ptyp_package "S" (testsuite/tests/letrec-check/modules.ml[93,3036+21]..[93,3036+22])
                    []
                ]
                Some
                  core_type (testsuite/tests/letrec-check/modules.ml[93,3036+27]..[93,3036+28])
                    Ptyp_constr "t" (testsuite/tests/letrec-check/modules.ml[93,3036+27]..[93,3036+28])
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[95,3068+0]..[96,3119+74])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/modules.ml[95,3068+8]..[95,3068+9])
          Ppat_var "x" (testsuite/tests/letrec-check/modules.ml[95,3068+8]..[95,3068+9])
        expression (testsuite/tests/letrec-check/modules.ml[95,3068+12]..[95,3068+50])
          Pexp_letmodule "M" (testsuite/tests/letrec-check/modules.ml[95,3068+23]..[95,3068+24])
          module_expr (testsuite/tests/letrec-check/modules.ml[95,3068+27]..[95,3068+34])
            Pmod_unpack
            expression (testsuite/tests/letrec-check/modules.ml[95,3068+32]..[95,3068+33])
              Pexp_ident "m" (testsuite/tests/letrec-check/modules.ml[95,3068+32]..[95,3068+33])
          expression (testsuite/tests/letrec-check/modules.ml[95,3068+38]..[95,3068+50])
            Pexp_construct "T" (testsuite/tests/letrec-check/modules.ml[95,3068+38]..[95,3068+39])
            Some
              expression (testsuite/tests/letrec-check/modules.ml[95,3068+40]..[95,3068+50])
                Pexp_pack
                module_expr (testsuite/tests/letrec-check/modules.ml[95,3068+48]..[95,3068+49])
                  Pmod_ident "M" (testsuite/tests/letrec-check/modules.ml[95,3068+48]..[95,3068+49])
      <def>
        pattern (testsuite/tests/letrec-check/modules.ml[96,3119+4]..[96,3119+20])
          Ppat_constraint
          pattern (testsuite/tests/letrec-check/modules.ml[96,3119+5]..[96,3119+6])
            Ppat_var "m" (testsuite/tests/letrec-check/modules.ml[96,3119+5]..[96,3119+6])
          core_type (testsuite/tests/letrec-check/modules.ml[96,3119+9]..[96,3119+19])
            Ptyp_package "T" (testsuite/tests/letrec-check/modules.ml[96,3119+17]..[96,3119+18])
            []
        expression (testsuite/tests/letrec-check/modules.ml[96,3119+23]..[96,3119+74])
          Pexp_constraint
          expression (testsuite/tests/letrec-check/modules.ml[96,3119+23]..[96,3119+74]) ghost
            Pexp_pack
            module_expr (testsuite/tests/letrec-check/modules.ml[96,3119+32]..[96,3119+68])
              Pmod_structure
              [
                structure_item (testsuite/tests/letrec-check/modules.ml[96,3119+39]..[96,3119+64])
                  Pstr_value Nonrec
                  [
                    <def>
                      pattern (testsuite/tests/letrec-check/modules.ml[96,3119+43]..[96,3119+44])
                        Ppat_var "x" (testsuite/tests/letrec-check/modules.ml[96,3119+43]..[96,3119+44])
                      expression (testsuite/tests/letrec-check/modules.ml[96,3119+47]..[96,3119+51])
                        Pexp_constant PConst_float (10.0,None)
                    <def>
                      pattern (testsuite/tests/letrec-check/modules.ml[96,3119+56]..[96,3119+57])
                        Ppat_var "y" (testsuite/tests/letrec-check/modules.ml[96,3119+56]..[96,3119+57])
                      expression (testsuite/tests/letrec-check/modules.ml[96,3119+60]..[96,3119+64])
                        Pexp_constant PConst_float (20.0,None)
                  ]
              ]
          core_type (testsuite/tests/letrec-check/modules.ml[96,3119+72]..[96,3119+73])
            Ptyp_package "T" (testsuite/tests/letrec-check/modules.ml[96,3119+72]..[96,3119+73])
            []
    ]
  structure_item (testsuite/tests/letrec-check/modules.ml[97,3196+0]..[105,3541+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/modules.ml[97,3196+9]..[105,3541+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/modules.ml[97,3196+9]..[105,3541+2])
          Pexp_constant PConst_string ("\nmodule type S = sig val y : float end\nmodule type T = sig val x : float val y : float end\ntype t = T : (module S) -> t\nLine 5, characters 12-50:\n5 | let rec x = let module M = (val m) in T (module M)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/modules.ml[97,3196+11]..[105,3541+0]),Some "")
    ]
]

