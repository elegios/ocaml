[
  structure_item (file_formats/cmi_format.ml[16,1079+0]..[16,1079+9])
    Pstr_open Fresh
    module_expr (file_formats/cmi_format.ml[16,1079+5]..[16,1079+9])
      Pmod_ident "Misc" (file_formats/cmi_format.ml[16,1079+5]..[16,1079+9])
  structure_item (file_formats/cmi_format.ml[18,1090+0]..[22,1153+17])
    Pstr_type Rec
    [
      type_declaration "pers_flags" (file_formats/cmi_format.ml[18,1090+5]..[18,1090+15]) (file_formats/cmi_format.ml[18,1090+0]..[22,1153+17])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (file_formats/cmi_format.ml[19,1108+2]..[19,1108+12])
                "Rectypes" (file_formats/cmi_format.ml[19,1108+4]..[19,1108+12])
                []
                None
              (file_formats/cmi_format.ml[20,1121+2]..[20,1121+20])
                "Alerts" (file_formats/cmi_format.ml[20,1121+4]..[20,1121+10])
                [
                  core_type (file_formats/cmi_format.ml[20,1121+14]..[20,1121+20])
                    Ptyp_constr "alerts" (file_formats/cmi_format.ml[20,1121+14]..[20,1121+20])
                    []
                ]
                None
              (file_formats/cmi_format.ml[21,1142+2]..[21,1142+10])
                "Opaque" (file_formats/cmi_format.ml[21,1142+4]..[21,1142+10])
                []
                None
              (file_formats/cmi_format.ml[22,1153+2]..[22,1153+17])
                "Unsafe_string" (file_formats/cmi_format.ml[22,1153+4]..[22,1153+17])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (file_formats/cmi_format.ml[24,1172+0]..[27,1267+35])
    Pstr_type Rec
    [
      type_declaration "error" (file_formats/cmi_format.ml[24,1172+5]..[24,1172+10]) (file_formats/cmi_format.ml[24,1172+0]..[27,1267+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (file_formats/cmi_format.ml[25,1185+2]..[25,1185+32])
                "Not_an_interface" (file_formats/cmi_format.ml[25,1185+4]..[25,1185+20])
                [
                  core_type (file_formats/cmi_format.ml[25,1185+24]..[25,1185+32])
                    Ptyp_constr "filepath" (file_formats/cmi_format.ml[25,1185+24]..[25,1185+32])
                    []
                ]
                None
              (file_formats/cmi_format.ml[26,1218+2]..[26,1218+48])
                "Wrong_version_interface" (file_formats/cmi_format.ml[26,1218+4]..[26,1218+27])
                [
                  core_type (file_formats/cmi_format.ml[26,1218+31]..[26,1218+39])
                    Ptyp_constr "filepath" (file_formats/cmi_format.ml[26,1218+31]..[26,1218+39])
                    []
                  core_type (file_formats/cmi_format.ml[26,1218+42]..[26,1218+48])
                    Ptyp_constr "string" (file_formats/cmi_format.ml[26,1218+42]..[26,1218+48])
                    []
                ]
                None
              (file_formats/cmi_format.ml[27,1267+2]..[27,1267+35])
                "Corrupted_interface" (file_formats/cmi_format.ml[27,1267+4]..[27,1267+23])
                [
                  core_type (file_formats/cmi_format.ml[27,1267+27]..[27,1267+35])
                    Ptyp_constr "filepath" (file_formats/cmi_format.ml[27,1267+27]..[27,1267+35])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (file_formats/cmi_format.ml[29,1304+0]..[29,1304+24])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (file_formats/cmi_format.ml[29,1304+0]..[29,1304+24])
          pext_name = "Error"
          pext_kind =
            Pext_decl
              [
                core_type (file_formats/cmi_format.ml[29,1304+19]..[29,1304+24])
                  Ptyp_constr "error" (file_formats/cmi_format.ml[29,1304+19]..[29,1304+24])
                  []
              ]
              None
  structure_item (file_formats/cmi_format.ml[34,1465+0]..[34,1465+42])
    Pstr_type Rec
    [
      type_declaration "signature" (file_formats/cmi_format.ml[34,1465+5]..[34,1465+14]) (file_formats/cmi_format.ml[34,1465+0]..[34,1465+42])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (file_formats/cmi_format.ml[34,1465+17]..[34,1465+42])
              Ptyp_constr "list" (file_formats/cmi_format.ml[34,1465+38]..[34,1465+42])
              [
                core_type (file_formats/cmi_format.ml[34,1465+17]..[34,1465+37])
                  Ptyp_constr "Types.signature_item" (file_formats/cmi_format.ml[34,1465+17]..[34,1465+37])
                  []
              ]
    ]
  structure_item (file_formats/cmi_format.ml[35,1508+0]..[35,1508+28])
    Pstr_type Rec
    [
      type_declaration "flags" (file_formats/cmi_format.ml[35,1508+5]..[35,1508+10]) (file_formats/cmi_format.ml[35,1508+0]..[35,1508+28])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (file_formats/cmi_format.ml[35,1508+13]..[35,1508+28])
              Ptyp_constr "list" (file_formats/cmi_format.ml[35,1508+24]..[35,1508+28])
              [
                core_type (file_formats/cmi_format.ml[35,1508+13]..[35,1508+23])
                  Ptyp_constr "pers_flags" (file_formats/cmi_format.ml[35,1508+13]..[35,1508+23])
                  []
              ]
    ]
  structure_item (file_formats/cmi_format.ml[36,1537+0]..[36,1537+33])
    Pstr_type Rec
    [
      type_declaration "header" (file_formats/cmi_format.ml[36,1537+5]..[36,1537+11]) (file_formats/cmi_format.ml[36,1537+0]..[36,1537+33])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (file_formats/cmi_format.ml[36,1537+14]..[36,1537+33])
              Ptyp_tuple
              [
                core_type (file_formats/cmi_format.ml[36,1537+14]..[36,1537+21])
                  Ptyp_constr "modname" (file_formats/cmi_format.ml[36,1537+14]..[36,1537+21])
                  []
                core_type (file_formats/cmi_format.ml[36,1537+24]..[36,1537+33])
                  Ptyp_constr "signature" (file_formats/cmi_format.ml[36,1537+24]..[36,1537+33])
                  []
              ]
    ]
  structure_item (file_formats/cmi_format.ml[38,1572+0]..[43,1685+1])
    Pstr_type Rec
    [
      type_declaration "cmi_infos" (file_formats/cmi_format.ml[38,1572+5]..[38,1572+14]) (file_formats/cmi_format.ml[38,1572+0]..[43,1685+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (file_formats/cmi_format.ml[39,1591+4]..[39,1591+23])
                Immutable
                "cmi_name" (file_formats/cmi_format.ml[39,1591+4]..[39,1591+12])                core_type (file_formats/cmi_format.ml[39,1591+15]..[39,1591+22])
                  Ptyp_constr "modname" (file_formats/cmi_format.ml[39,1591+15]..[39,1591+22])
                  []
              (file_formats/cmi_format.ml[40,1615+4]..[40,1615+25])
                Immutable
                "cmi_sign" (file_formats/cmi_format.ml[40,1615+4]..[40,1615+12])                core_type (file_formats/cmi_format.ml[40,1615+15]..[40,1615+24])
                  Ptyp_constr "signature" (file_formats/cmi_format.ml[40,1615+15]..[40,1615+24])
                  []
              (file_formats/cmi_format.ml[41,1641+4]..[41,1641+20])
                Immutable
                "cmi_crcs" (file_formats/cmi_format.ml[41,1641+4]..[41,1641+12])                core_type (file_formats/cmi_format.ml[41,1641+15]..[41,1641+19])
                  Ptyp_constr "crcs" (file_formats/cmi_format.ml[41,1641+15]..[41,1641+19])
                  []
              (file_formats/cmi_format.ml[42,1662+4]..[42,1662+22])
                Immutable
                "cmi_flags" (file_formats/cmi_format.ml[42,1662+4]..[42,1662+13])                core_type (file_formats/cmi_format.ml[42,1662+16]..[42,1662+21])
                  Ptyp_constr "flags" (file_formats/cmi_format.ml[42,1662+16]..[42,1662+21])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (file_formats/cmi_format.ml[45,1688+0]..[54,1937+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmi_format.ml[45,1688+4]..[45,1688+13])
          Ppat_var "input_cmi" (file_formats/cmi_format.ml[45,1688+4]..[45,1688+13])
        expression (file_formats/cmi_format.ml[45,1688+14]..[54,1937+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmi_format.ml[45,1688+14]..[45,1688+16])
            Ppat_var "ic" (file_formats/cmi_format.ml[45,1688+14]..[45,1688+16])
          expression (file_formats/cmi_format.ml[46,1707+2]..[54,1937+5])
            Pexp_let Nonrec
            [
              <def>
                pattern (file_formats/cmi_format.ml[46,1707+6]..[46,1707+18])
                  Ppat_tuple
                  [
                    pattern (file_formats/cmi_format.ml[46,1707+7]..[46,1707+11])
                      Ppat_var "name" (file_formats/cmi_format.ml[46,1707+7]..[46,1707+11])
                    pattern (file_formats/cmi_format.ml[46,1707+13]..[46,1707+17])
                      Ppat_var "sign" (file_formats/cmi_format.ml[46,1707+13]..[46,1707+17])
                  ]
                expression (file_formats/cmi_format.ml[46,1707+21]..[46,1707+46])
                  Pexp_constraint
                  expression (file_formats/cmi_format.ml[46,1707+22]..[46,1707+36])
                    Pexp_apply
                    expression (file_formats/cmi_format.ml[46,1707+22]..[46,1707+33])
                      Pexp_ident "input_value" (file_formats/cmi_format.ml[46,1707+22]..[46,1707+33])
                    [
                      <arg>
                      Nolabel
                        expression (file_formats/cmi_format.ml[46,1707+34]..[46,1707+36])
                          Pexp_ident "ic" (file_formats/cmi_format.ml[46,1707+34]..[46,1707+36])
                    ]
                  core_type (file_formats/cmi_format.ml[46,1707+39]..[46,1707+45])
                    Ptyp_constr "header" (file_formats/cmi_format.ml[46,1707+39]..[46,1707+45])
                    []
            ]
            expression (file_formats/cmi_format.ml[47,1757+2]..[54,1937+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (file_formats/cmi_format.ml[47,1757+6]..[47,1757+10])
                    Ppat_var "crcs" (file_formats/cmi_format.ml[47,1757+6]..[47,1757+10])
                  expression (file_formats/cmi_format.ml[47,1757+13]..[47,1757+36])
                    Pexp_constraint
                    expression (file_formats/cmi_format.ml[47,1757+14]..[47,1757+28])
                      Pexp_apply
                      expression (file_formats/cmi_format.ml[47,1757+14]..[47,1757+25])
                        Pexp_ident "input_value" (file_formats/cmi_format.ml[47,1757+14]..[47,1757+25])
                      [
                        <arg>
                        Nolabel
                          expression (file_formats/cmi_format.ml[47,1757+26]..[47,1757+28])
                            Pexp_ident "ic" (file_formats/cmi_format.ml[47,1757+26]..[47,1757+28])
                      ]
                    core_type (file_formats/cmi_format.ml[47,1757+31]..[47,1757+35])
                      Ptyp_constr "crcs" (file_formats/cmi_format.ml[47,1757+31]..[47,1757+35])
                      []
              ]
              expression (file_formats/cmi_format.ml[48,1797+2]..[54,1937+5])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (file_formats/cmi_format.ml[48,1797+6]..[48,1797+11])
                      Ppat_var "flags" (file_formats/cmi_format.ml[48,1797+6]..[48,1797+11])
                    expression (file_formats/cmi_format.ml[48,1797+14]..[48,1797+38])
                      Pexp_constraint
                      expression (file_formats/cmi_format.ml[48,1797+15]..[48,1797+29])
                        Pexp_apply
                        expression (file_formats/cmi_format.ml[48,1797+15]..[48,1797+26])
                          Pexp_ident "input_value" (file_formats/cmi_format.ml[48,1797+15]..[48,1797+26])
                        [
                          <arg>
                          Nolabel
                            expression (file_formats/cmi_format.ml[48,1797+27]..[48,1797+29])
                              Pexp_ident "ic" (file_formats/cmi_format.ml[48,1797+27]..[48,1797+29])
                        ]
                      core_type (file_formats/cmi_format.ml[48,1797+32]..[48,1797+37])
                        Ptyp_constr "flags" (file_formats/cmi_format.ml[48,1797+32]..[48,1797+37])
                        []
                ]
                expression (file_formats/cmi_format.ml[49,1839+2]..[54,1937+5])
                  Pexp_record
                  [
                    "cmi_name" (file_formats/cmi_format.ml[50,1843+6]..[50,1843+14])
                      expression (file_formats/cmi_format.ml[50,1843+17]..[50,1843+21])
                        Pexp_ident "name" (file_formats/cmi_format.ml[50,1843+17]..[50,1843+21])
                    "cmi_sign" (file_formats/cmi_format.ml[51,1866+6]..[51,1866+14])
                      expression (file_formats/cmi_format.ml[51,1866+17]..[51,1866+21])
                        Pexp_ident "sign" (file_formats/cmi_format.ml[51,1866+17]..[51,1866+21])
                    "cmi_crcs" (file_formats/cmi_format.ml[52,1889+6]..[52,1889+14])
                      expression (file_formats/cmi_format.ml[52,1889+17]..[52,1889+21])
                        Pexp_ident "crcs" (file_formats/cmi_format.ml[52,1889+17]..[52,1889+21])
                    "cmi_flags" (file_formats/cmi_format.ml[53,1912+6]..[53,1912+15])
                      expression (file_formats/cmi_format.ml[53,1912+18]..[53,1912+23])
                        Pexp_ident "flags" (file_formats/cmi_format.ml[53,1912+18]..[53,1912+23])
                  ]
                  None
    ]
  structure_item (file_formats/cmi_format.ml[56,1944+0]..[83,2793+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmi_format.ml[56,1944+4]..[56,1944+12])
          Ppat_var "read_cmi" (file_formats/cmi_format.ml[56,1944+4]..[56,1944+12])
        expression (file_formats/cmi_format.ml[56,1944+13]..[83,2793+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmi_format.ml[56,1944+13]..[56,1944+21])
            Ppat_var "filename" (file_formats/cmi_format.ml[56,1944+13]..[56,1944+21])
          expression (file_formats/cmi_format.ml[57,1968+2]..[83,2793+21])
            Pexp_let Nonrec
            [
              <def>
                pattern (file_formats/cmi_format.ml[57,1968+6]..[57,1968+8])
                  Ppat_var "ic" (file_formats/cmi_format.ml[57,1968+6]..[57,1968+8])
                expression (file_formats/cmi_format.ml[57,1968+11]..[57,1968+31])
                  Pexp_apply
                  expression (file_formats/cmi_format.ml[57,1968+11]..[57,1968+22])
                    Pexp_ident "open_in_bin" (file_formats/cmi_format.ml[57,1968+11]..[57,1968+22])
                  [
                    <arg>
                    Nolabel
                      expression (file_formats/cmi_format.ml[57,1968+23]..[57,1968+31])
                        Pexp_ident "filename" (file_formats/cmi_format.ml[57,1968+23]..[57,1968+31])
                  ]
            ]
            expression (file_formats/cmi_format.ml[58,2003+2]..[83,2793+21])
              Pexp_try
              expression (file_formats/cmi_format.ml[59,2009+4]..[77,2646+7])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (file_formats/cmi_format.ml[59,2009+8]..[59,2009+14])
                      Ppat_var "buffer" (file_formats/cmi_format.ml[59,2009+8]..[59,2009+14])
                    expression (file_formats/cmi_format.ml[60,2026+6]..[60,2026+68])
                      Pexp_apply
                      expression (file_formats/cmi_format.ml[60,2026+6]..[60,2026+25])
                        Pexp_ident "really_input_string" (file_formats/cmi_format.ml[60,2026+6]..[60,2026+25])
                      [
                        <arg>
                        Nolabel
                          expression (file_formats/cmi_format.ml[60,2026+26]..[60,2026+28])
                            Pexp_ident "ic" (file_formats/cmi_format.ml[60,2026+26]..[60,2026+28])
                        <arg>
                        Nolabel
                          expression (file_formats/cmi_format.ml[60,2026+29]..[60,2026+68])
                            Pexp_apply
                            expression (file_formats/cmi_format.ml[60,2026+30]..[60,2026+43])
                              Pexp_ident "String.length" (file_formats/cmi_format.ml[60,2026+30]..[60,2026+43])
                            [
                              <arg>
                              Nolabel
                                expression (file_formats/cmi_format.ml[60,2026+44]..[60,2026+67])
                                  Pexp_ident "Config.cmi_magic_number" (file_formats/cmi_format.ml[60,2026+44]..[60,2026+67])
                            ]
                      ]
                ]
                expression (file_formats/cmi_format.ml[62,2102+4]..[77,2646+7])
                  Pexp_sequence
                  expression (file_formats/cmi_format.ml[62,2102+4]..[74,2590+7])
                    Pexp_ifthenelse
                    expression (file_formats/cmi_format.ml[62,2102+7]..[62,2102+40])
                      Pexp_apply
                      expression (file_formats/cmi_format.ml[62,2102+14]..[62,2102+16])
                        Pexp_ident "<>" (file_formats/cmi_format.ml[62,2102+14]..[62,2102+16])
                      [
                        <arg>
                        Nolabel
                          expression (file_formats/cmi_format.ml[62,2102+7]..[62,2102+13])
                            Pexp_ident "buffer" (file_formats/cmi_format.ml[62,2102+7]..[62,2102+13])
                        <arg>
                        Nolabel
                          expression (file_formats/cmi_format.ml[62,2102+17]..[62,2102+40])
                            Pexp_ident "Config.cmi_magic_number" (file_formats/cmi_format.ml[62,2102+17]..[62,2102+40])
                      ]
                    expression (file_formats/cmi_format.ml[62,2102+46]..[74,2590+7])
                      Pexp_sequence
                      expression (file_formats/cmi_format.ml[63,2154+6]..[63,2154+17])
                        Pexp_apply
                        expression (file_formats/cmi_format.ml[63,2154+6]..[63,2154+14])
                          Pexp_ident "close_in" (file_formats/cmi_format.ml[63,2154+6]..[63,2154+14])
                        [
                          <arg>
                          Nolabel
                            expression (file_formats/cmi_format.ml[63,2154+15]..[63,2154+17])
                              Pexp_ident "ic" (file_formats/cmi_format.ml[63,2154+15]..[63,2154+17])
                        ]
                      expression (file_formats/cmi_format.ml[64,2173+6]..[73,2580+9])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (file_formats/cmi_format.ml[64,2173+10]..[64,2173+17])
                              Ppat_var "pre_len" (file_formats/cmi_format.ml[64,2173+10]..[64,2173+17])
                            expression (file_formats/cmi_format.ml[64,2173+20]..[64,2173+61])
                              Pexp_apply
                              expression (file_formats/cmi_format.ml[64,2173+58]..[64,2173+59])
                                Pexp_ident "-" (file_formats/cmi_format.ml[64,2173+58]..[64,2173+59])
                              [
                                <arg>
                                Nolabel
                                  expression (file_formats/cmi_format.ml[64,2173+20]..[64,2173+57])
                                    Pexp_apply
                                    expression (file_formats/cmi_format.ml[64,2173+20]..[64,2173+33])
                                      Pexp_ident "String.length" (file_formats/cmi_format.ml[64,2173+20]..[64,2173+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (file_formats/cmi_format.ml[64,2173+34]..[64,2173+57])
                                          Pexp_ident "Config.cmi_magic_number" (file_formats/cmi_format.ml[64,2173+34]..[64,2173+57])
                                    ]
                                <arg>
                                Nolabel
                                  expression (file_formats/cmi_format.ml[64,2173+60]..[64,2173+61])
                                    Pexp_constant PConst_int (3,None)
                              ]
                        ]
                        expression (file_formats/cmi_format.ml[65,2238+6]..[73,2580+9])
                          Pexp_ifthenelse
                          expression (file_formats/cmi_format.ml[65,2238+9]..[66,2275+56])
                            Pexp_apply
                            expression (file_formats/cmi_format.ml[66,2275+10]..[66,2275+11])
                              Pexp_ident "=" (file_formats/cmi_format.ml[66,2275+10]..[66,2275+11])
                            [
                              <arg>
                              Nolabel
                                expression (file_formats/cmi_format.ml[65,2238+9]..[65,2238+36])
                                  Pexp_apply
                                  expression (file_formats/cmi_format.ml[65,2238+9]..[65,2238+19])
                                    Pexp_ident "String.sub" (file_formats/cmi_format.ml[65,2238+9]..[65,2238+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (file_formats/cmi_format.ml[65,2238+20]..[65,2238+26])
                                        Pexp_ident "buffer" (file_formats/cmi_format.ml[65,2238+20]..[65,2238+26])
                                    <arg>
                                    Nolabel
                                      expression (file_formats/cmi_format.ml[65,2238+27]..[65,2238+28])
                                        Pexp_constant PConst_int (0,None)
                                    <arg>
                                    Nolabel
                                      expression (file_formats/cmi_format.ml[65,2238+29]..[65,2238+36])
                                        Pexp_ident "pre_len" (file_formats/cmi_format.ml[65,2238+29]..[65,2238+36])
                                  ]
                              <arg>
                              Nolabel
                                expression (file_formats/cmi_format.ml[66,2275+12]..[66,2275+56])
                                  Pexp_apply
                                  expression (file_formats/cmi_format.ml[66,2275+12]..[66,2275+22])
                                    Pexp_ident "String.sub" (file_formats/cmi_format.ml[66,2275+12]..[66,2275+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (file_formats/cmi_format.ml[66,2275+23]..[66,2275+46])
                                        Pexp_ident "Config.cmi_magic_number" (file_formats/cmi_format.ml[66,2275+23]..[66,2275+46])
                                    <arg>
                                    Nolabel
                                      expression (file_formats/cmi_format.ml[66,2275+47]..[66,2275+48])
                                        Pexp_constant PConst_int (0,None)
                                    <arg>
                                    Nolabel
                                      expression (file_formats/cmi_format.ml[66,2275+49]..[66,2275+56])
                                        Pexp_ident "pre_len" (file_formats/cmi_format.ml[66,2275+49]..[66,2275+56])
                                  ]
                            ]
                          expression (file_formats/cmi_format.ml[67,2337+6]..[71,2511+9])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (file_formats/cmi_format.ml[68,2349+12]..[68,2349+15])
                                  Ppat_var "msg" (file_formats/cmi_format.ml[68,2349+12]..[68,2349+15])
                                expression (file_formats/cmi_format.ml[69,2367+10]..[69,2367+76])
                                  Pexp_ifthenelse
                                  expression (file_formats/cmi_format.ml[69,2367+13]..[69,2367+45])
                                    Pexp_apply
                                    expression (file_formats/cmi_format.ml[69,2367+20]..[69,2367+21])
                                      Pexp_ident "<" (file_formats/cmi_format.ml[69,2367+20]..[69,2367+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (file_formats/cmi_format.ml[69,2367+13]..[69,2367+19])
                                          Pexp_ident "buffer" (file_formats/cmi_format.ml[69,2367+13]..[69,2367+19])
                                      <arg>
                                      Nolabel
                                        expression (file_formats/cmi_format.ml[69,2367+22]..[69,2367+45])
                                          Pexp_ident "Config.cmi_magic_number" (file_formats/cmi_format.ml[69,2367+22]..[69,2367+45])
                                    ]
                                  expression (file_formats/cmi_format.ml[69,2367+51]..[69,2367+61])
                                    Pexp_constant PConst_string("an older",(file_formats/cmi_format.ml[69,2367+52]..[69,2367+60]),None)
                                  Some
                                    expression (file_formats/cmi_format.ml[69,2367+67]..[69,2367+76])
                                      Pexp_constant PConst_string("a newer",(file_formats/cmi_format.ml[69,2367+68]..[69,2367+75]),None)
                            ]
                            expression (file_formats/cmi_format.ml[70,2447+8]..[70,2447+63])
                              Pexp_apply
                              expression (file_formats/cmi_format.ml[70,2447+8]..[70,2447+13])
                                Pexp_ident "raise" (file_formats/cmi_format.ml[70,2447+8]..[70,2447+13])
                              [
                                <arg>
                                Nolabel
                                  expression (file_formats/cmi_format.ml[70,2447+14]..[70,2447+63])
                                    Pexp_construct "Error" (file_formats/cmi_format.ml[70,2447+15]..[70,2447+20])
                                    Some
                                      expression (file_formats/cmi_format.ml[70,2447+21]..[70,2447+62])
                                        Pexp_construct "Wrong_version_interface" (file_formats/cmi_format.ml[70,2447+22]..[70,2447+45])
                                        Some
                                          expression (file_formats/cmi_format.ml[70,2447+46]..[70,2447+61])
                                            Pexp_tuple
                                            [
                                              expression (file_formats/cmi_format.ml[70,2447+47]..[70,2447+55])
                                                Pexp_ident "filename" (file_formats/cmi_format.ml[70,2447+47]..[70,2447+55])
                                              expression (file_formats/cmi_format.ml[70,2447+57]..[70,2447+60])
                                                Pexp_ident "msg" (file_formats/cmi_format.ml[70,2447+57]..[70,2447+60])
                                            ]
                              ]
                          Some
                            expression (file_formats/cmi_format.ml[71,2511+15]..[73,2580+9])
                              Pexp_apply
                              expression (file_formats/cmi_format.ml[72,2532+8]..[72,2532+13])
                                Pexp_ident "raise" (file_formats/cmi_format.ml[72,2532+8]..[72,2532+13])
                              [
                                <arg>
                                Nolabel
                                  expression (file_formats/cmi_format.ml[72,2532+13]..[72,2532+47])
                                    Pexp_construct "Error" (file_formats/cmi_format.ml[72,2532+14]..[72,2532+19])
                                    Some
                                      expression (file_formats/cmi_format.ml[72,2532+19]..[72,2532+46])
                                        Pexp_construct "Not_an_interface" (file_formats/cmi_format.ml[72,2532+20]..[72,2532+36])
                                        Some
                                          expression (file_formats/cmi_format.ml[72,2532+37]..[72,2532+45])
                                            Pexp_ident "filename" (file_formats/cmi_format.ml[72,2532+37]..[72,2532+45])
                              ]
                    None
                  expression (file_formats/cmi_format.ml[75,2599+4]..[77,2646+7])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (file_formats/cmi_format.ml[75,2599+8]..[75,2599+11])
                          Ppat_var "cmi" (file_formats/cmi_format.ml[75,2599+8]..[75,2599+11])
                        expression (file_formats/cmi_format.ml[75,2599+14]..[75,2599+26])
                          Pexp_apply
                          expression (file_formats/cmi_format.ml[75,2599+14]..[75,2599+23])
                            Pexp_ident "input_cmi" (file_formats/cmi_format.ml[75,2599+14]..[75,2599+23])
                          [
                            <arg>
                            Nolabel
                              expression (file_formats/cmi_format.ml[75,2599+24]..[75,2599+26])
                                Pexp_ident "ic" (file_formats/cmi_format.ml[75,2599+24]..[75,2599+26])
                          ]
                    ]
                    expression (file_formats/cmi_format.ml[76,2629+4]..[77,2646+7])
                      Pexp_sequence
                      expression (file_formats/cmi_format.ml[76,2629+4]..[76,2629+15])
                        Pexp_apply
                        expression (file_formats/cmi_format.ml[76,2629+4]..[76,2629+12])
                          Pexp_ident "close_in" (file_formats/cmi_format.ml[76,2629+4]..[76,2629+12])
                        [
                          <arg>
                          Nolabel
                            expression (file_formats/cmi_format.ml[76,2629+13]..[76,2629+15])
                              Pexp_ident "ic" (file_formats/cmi_format.ml[76,2629+13]..[76,2629+15])
                        ]
                      expression (file_formats/cmi_format.ml[77,2646+4]..[77,2646+7])
                        Pexp_ident "cmi" (file_formats/cmi_format.ml[77,2646+4]..[77,2646+7])
              [
                <case>
                  pattern (file_formats/cmi_format.ml[78,2654+7]..[78,2654+30])
                    Ppat_or
                    pattern (file_formats/cmi_format.ml[78,2654+7]..[78,2654+18])
                      Ppat_construct "End_of_file" (file_formats/cmi_format.ml[78,2654+7]..[78,2654+18])
                      None
                    pattern (file_formats/cmi_format.ml[78,2654+21]..[78,2654+30])
                      Ppat_construct "Failure" (file_formats/cmi_format.ml[78,2654+21]..[78,2654+28])
                      Some
                        []
                        pattern (file_formats/cmi_format.ml[78,2654+29]..[78,2654+30])
                          Ppat_any
                  expression (file_formats/cmi_format.ml[79,2688+6]..[80,2707+49])
                    Pexp_sequence
                    expression (file_formats/cmi_format.ml[79,2688+6]..[79,2688+17])
                      Pexp_apply
                      expression (file_formats/cmi_format.ml[79,2688+6]..[79,2688+14])
                        Pexp_ident "close_in" (file_formats/cmi_format.ml[79,2688+6]..[79,2688+14])
                      [
                        <arg>
                        Nolabel
                          expression (file_formats/cmi_format.ml[79,2688+15]..[79,2688+17])
                            Pexp_ident "ic" (file_formats/cmi_format.ml[79,2688+15]..[79,2688+17])
                      ]
                    expression (file_formats/cmi_format.ml[80,2707+6]..[80,2707+49])
                      Pexp_apply
                      expression (file_formats/cmi_format.ml[80,2707+6]..[80,2707+11])
                        Pexp_ident "raise" (file_formats/cmi_format.ml[80,2707+6]..[80,2707+11])
                      [
                        <arg>
                        Nolabel
                          expression (file_formats/cmi_format.ml[80,2707+11]..[80,2707+49])
                            Pexp_construct "Error" (file_formats/cmi_format.ml[80,2707+12]..[80,2707+17])
                            Some
                              expression (file_formats/cmi_format.ml[80,2707+17]..[80,2707+48])
                                Pexp_construct "Corrupted_interface" (file_formats/cmi_format.ml[80,2707+18]..[80,2707+37])
                                Some
                                  expression (file_formats/cmi_format.ml[80,2707+37]..[80,2707+47])
                                    Pexp_ident "filename" (file_formats/cmi_format.ml[80,2707+38]..[80,2707+46])
                      ]
                <case>
                  pattern (file_formats/cmi_format.ml[81,2757+6]..[81,2757+13])
                    Ppat_construct "Error" (file_formats/cmi_format.ml[81,2757+6]..[81,2757+11])
                    Some
                      []
                      pattern (file_formats/cmi_format.ml[81,2757+12]..[81,2757+13])
                        Ppat_var "e" (file_formats/cmi_format.ml[81,2757+12]..[81,2757+13])
                  expression (file_formats/cmi_format.ml[82,2774+6]..[83,2793+21])
                    Pexp_sequence
                    expression (file_formats/cmi_format.ml[82,2774+6]..[82,2774+17])
                      Pexp_apply
                      expression (file_formats/cmi_format.ml[82,2774+6]..[82,2774+14])
                        Pexp_ident "close_in" (file_formats/cmi_format.ml[82,2774+6]..[82,2774+14])
                      [
                        <arg>
                        Nolabel
                          expression (file_formats/cmi_format.ml[82,2774+15]..[82,2774+17])
                            Pexp_ident "ic" (file_formats/cmi_format.ml[82,2774+15]..[82,2774+17])
                      ]
                    expression (file_formats/cmi_format.ml[83,2793+6]..[83,2793+21])
                      Pexp_apply
                      expression (file_formats/cmi_format.ml[83,2793+6]..[83,2793+11])
                        Pexp_ident "raise" (file_formats/cmi_format.ml[83,2793+6]..[83,2793+11])
                      [
                        <arg>
                        Nolabel
                          expression (file_formats/cmi_format.ml[83,2793+12]..[83,2793+21])
                            Pexp_construct "Error" (file_formats/cmi_format.ml[83,2793+13]..[83,2793+18])
                            Some
                              expression (file_formats/cmi_format.ml[83,2793+19]..[83,2793+20])
                                Pexp_ident "e" (file_formats/cmi_format.ml[83,2793+19]..[83,2793+20])
                      ]
              ]
    ]
  structure_item (file_formats/cmi_format.ml[85,2816+0]..[94,3208+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmi_format.ml[85,2816+4]..[85,2816+14])
          Ppat_var "output_cmi" (file_formats/cmi_format.ml[85,2816+4]..[85,2816+14])
        expression (file_formats/cmi_format.ml[85,2816+15]..[94,3208+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmi_format.ml[85,2816+15]..[85,2816+23])
            Ppat_var "filename" (file_formats/cmi_format.ml[85,2816+15]..[85,2816+23])
          expression (file_formats/cmi_format.ml[85,2816+24]..[94,3208+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (file_formats/cmi_format.ml[85,2816+24]..[85,2816+26])
              Ppat_var "oc" (file_formats/cmi_format.ml[85,2816+24]..[85,2816+26])
            expression (file_formats/cmi_format.ml[85,2816+27]..[94,3208+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (file_formats/cmi_format.ml[85,2816+27]..[85,2816+30])
                Ppat_var "cmi" (file_formats/cmi_format.ml[85,2816+27]..[85,2816+30])
              expression (file_formats/cmi_format.ml[87,2924+2]..[94,3208+5])
                Pexp_sequence
                expression (file_formats/cmi_format.ml[87,2924+2]..[87,2924+42])
                  Pexp_apply
                  expression (file_formats/cmi_format.ml[87,2924+2]..[87,2924+15])
                    Pexp_ident "output_string" (file_formats/cmi_format.ml[87,2924+2]..[87,2924+15])
                  [
                    <arg>
                    Nolabel
                      expression (file_formats/cmi_format.ml[87,2924+16]..[87,2924+18])
                        Pexp_ident "oc" (file_formats/cmi_format.ml[87,2924+16]..[87,2924+18])
                    <arg>
                    Nolabel
                      expression (file_formats/cmi_format.ml[87,2924+19]..[87,2924+42])
                        Pexp_ident "Config.cmi_magic_number" (file_formats/cmi_format.ml[87,2924+19]..[87,2924+42])
                  ]
                expression (file_formats/cmi_format.ml[88,2968+2]..[94,3208+5])
                  Pexp_sequence
                  expression (file_formats/cmi_format.ml[88,2968+2]..[88,2968+57])
                    Pexp_apply
                    expression (file_formats/cmi_format.ml[88,2968+2]..[88,2968+14])
                      Pexp_ident "output_value" (file_formats/cmi_format.ml[88,2968+2]..[88,2968+14])
                    [
                      <arg>
                      Nolabel
                        expression (file_formats/cmi_format.ml[88,2968+15]..[88,2968+17])
                          Pexp_ident "oc" (file_formats/cmi_format.ml[88,2968+15]..[88,2968+17])
                      <arg>
                      Nolabel
                        expression (file_formats/cmi_format.ml[88,2968+18]..[88,2968+57])
                          Pexp_constraint
                          expression (file_formats/cmi_format.ml[88,2968+19]..[88,2968+47])
                            Pexp_tuple
                            [
                              expression (file_formats/cmi_format.ml[88,2968+20]..[88,2968+32])
                                Pexp_field
                                expression (file_formats/cmi_format.ml[88,2968+20]..[88,2968+23])
                                  Pexp_ident "cmi" (file_formats/cmi_format.ml[88,2968+20]..[88,2968+23])
                                "cmi_name" (file_formats/cmi_format.ml[88,2968+24]..[88,2968+32])
                              expression (file_formats/cmi_format.ml[88,2968+34]..[88,2968+46])
                                Pexp_field
                                expression (file_formats/cmi_format.ml[88,2968+34]..[88,2968+37])
                                  Pexp_ident "cmi" (file_formats/cmi_format.ml[88,2968+34]..[88,2968+37])
                                "cmi_sign" (file_formats/cmi_format.ml[88,2968+38]..[88,2968+46])
                            ]
                          core_type (file_formats/cmi_format.ml[88,2968+50]..[88,2968+56])
                            Ptyp_constr "header" (file_formats/cmi_format.ml[88,2968+50]..[88,2968+56])
                            []
                    ]
                  expression (file_formats/cmi_format.ml[89,3027+2]..[94,3208+5])
                    Pexp_sequence
                    expression (file_formats/cmi_format.ml[89,3027+2]..[89,3027+10])
                      Pexp_apply
                      expression (file_formats/cmi_format.ml[89,3027+2]..[89,3027+7])
                        Pexp_ident "flush" (file_formats/cmi_format.ml[89,3027+2]..[89,3027+7])
                      [
                        <arg>
                        Nolabel
                          expression (file_formats/cmi_format.ml[89,3027+8]..[89,3027+10])
                            Pexp_ident "oc" (file_formats/cmi_format.ml[89,3027+8]..[89,3027+10])
                      ]
                    expression (file_formats/cmi_format.ml[90,3039+2]..[94,3208+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (file_formats/cmi_format.ml[90,3039+6]..[90,3039+9])
                            Ppat_var "crc" (file_formats/cmi_format.ml[90,3039+6]..[90,3039+9])
                          expression (file_formats/cmi_format.ml[90,3039+12]..[90,3039+32])
                            Pexp_apply
                            expression (file_formats/cmi_format.ml[90,3039+12]..[90,3039+23])
                              Pexp_ident "Digest.file" (file_formats/cmi_format.ml[90,3039+12]..[90,3039+23])
                            [
                              <arg>
                              Nolabel
                                expression (file_formats/cmi_format.ml[90,3039+24]..[90,3039+32])
                                  Pexp_ident "filename" (file_formats/cmi_format.ml[90,3039+24]..[90,3039+32])
                            ]
                      ]
                      expression (file_formats/cmi_format.ml[91,3075+2]..[94,3208+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (file_formats/cmi_format.ml[91,3075+6]..[91,3075+10])
                              Ppat_var "crcs" (file_formats/cmi_format.ml[91,3075+6]..[91,3075+10])
                            expression (file_formats/cmi_format.ml[91,3075+13]..[91,3075+53])
                              Pexp_construct "::" (file_formats/cmi_format.ml[91,3075+38]..[91,3075+40])
                              Some
                                expression (file_formats/cmi_format.ml[91,3075+13]..[91,3075+53]) ghost
                                  Pexp_tuple
                                  [
                                    expression (file_formats/cmi_format.ml[91,3075+13]..[91,3075+37])
                                      Pexp_tuple
                                      [
                                        expression (file_formats/cmi_format.ml[91,3075+14]..[91,3075+26])
                                          Pexp_field
                                          expression (file_formats/cmi_format.ml[91,3075+14]..[91,3075+17])
                                            Pexp_ident "cmi" (file_formats/cmi_format.ml[91,3075+14]..[91,3075+17])
                                          "cmi_name" (file_formats/cmi_format.ml[91,3075+18]..[91,3075+26])
                                        expression (file_formats/cmi_format.ml[91,3075+28]..[91,3075+36])
                                          Pexp_construct "Some" (file_formats/cmi_format.ml[91,3075+28]..[91,3075+32])
                                          Some
                                            expression (file_formats/cmi_format.ml[91,3075+33]..[91,3075+36])
                                              Pexp_ident "crc" (file_formats/cmi_format.ml[91,3075+33]..[91,3075+36])
                                      ]
                                    expression (file_formats/cmi_format.ml[91,3075+41]..[91,3075+53])
                                      Pexp_field
                                      expression (file_formats/cmi_format.ml[91,3075+41]..[91,3075+44])
                                        Pexp_ident "cmi" (file_formats/cmi_format.ml[91,3075+41]..[91,3075+44])
                                      "cmi_crcs" (file_formats/cmi_format.ml[91,3075+45]..[91,3075+53])
                                  ]
                        ]
                        expression (file_formats/cmi_format.ml[92,3132+2]..[94,3208+5])
                          Pexp_sequence
                          expression (file_formats/cmi_format.ml[92,3132+2]..[92,3132+31])
                            Pexp_apply
                            expression (file_formats/cmi_format.ml[92,3132+2]..[92,3132+14])
                              Pexp_ident "output_value" (file_formats/cmi_format.ml[92,3132+2]..[92,3132+14])
                            [
                              <arg>
                              Nolabel
                                expression (file_formats/cmi_format.ml[92,3132+15]..[92,3132+17])
                                  Pexp_ident "oc" (file_formats/cmi_format.ml[92,3132+15]..[92,3132+17])
                              <arg>
                              Nolabel
                                expression (file_formats/cmi_format.ml[92,3132+18]..[92,3132+31])
                                  Pexp_constraint
                                  expression (file_formats/cmi_format.ml[92,3132+19]..[92,3132+23])
                                    Pexp_ident "crcs" (file_formats/cmi_format.ml[92,3132+19]..[92,3132+23])
                                  core_type (file_formats/cmi_format.ml[92,3132+26]..[92,3132+30])
                                    Ptyp_constr "crcs" (file_formats/cmi_format.ml[92,3132+26]..[92,3132+30])
                                    []
                            ]
                          expression (file_formats/cmi_format.ml[93,3165+2]..[94,3208+5])
                            Pexp_sequence
                            expression (file_formats/cmi_format.ml[93,3165+2]..[93,3165+41])
                              Pexp_apply
                              expression (file_formats/cmi_format.ml[93,3165+2]..[93,3165+14])
                                Pexp_ident "output_value" (file_formats/cmi_format.ml[93,3165+2]..[93,3165+14])
                              [
                                <arg>
                                Nolabel
                                  expression (file_formats/cmi_format.ml[93,3165+15]..[93,3165+17])
                                    Pexp_ident "oc" (file_formats/cmi_format.ml[93,3165+15]..[93,3165+17])
                                <arg>
                                Nolabel
                                  expression (file_formats/cmi_format.ml[93,3165+18]..[93,3165+41])
                                    Pexp_constraint
                                    expression (file_formats/cmi_format.ml[93,3165+19]..[93,3165+32])
                                      Pexp_field
                                      expression (file_formats/cmi_format.ml[93,3165+19]..[93,3165+22])
                                        Pexp_ident "cmi" (file_formats/cmi_format.ml[93,3165+19]..[93,3165+22])
                                      "cmi_flags" (file_formats/cmi_format.ml[93,3165+23]..[93,3165+32])
                                    core_type (file_formats/cmi_format.ml[93,3165+35]..[93,3165+40])
                                      Ptyp_constr "flags" (file_formats/cmi_format.ml[93,3165+35]..[93,3165+40])
                                      []
                              ]
                            expression (file_formats/cmi_format.ml[94,3208+2]..[94,3208+5])
                              Pexp_ident "crc" (file_formats/cmi_format.ml[94,3208+2]..[94,3208+5])
    ]
  structure_item (file_formats/cmi_format.ml[98,3235+0]..[98,3235+11])
    Pstr_open Fresh
    module_expr (file_formats/cmi_format.ml[98,3235+5]..[98,3235+11])
      Pmod_ident "Format" (file_formats/cmi_format.ml[98,3235+5]..[98,3235+11])
  structure_item (file_formats/cmi_format.ml[100,3248+0]..[111,3742+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmi_format.ml[100,3248+4]..[100,3248+16])
          Ppat_var "report_error" (file_formats/cmi_format.ml[100,3248+4]..[100,3248+16])
        expression (file_formats/cmi_format.ml[100,3248+17]..[111,3742+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmi_format.ml[100,3248+17]..[100,3248+20])
            Ppat_var "ppf" (file_formats/cmi_format.ml[100,3248+17]..[100,3248+20])
          expression (file_formats/cmi_format.ml[100,3248+23]..[111,3742+40])
            Pexp_function
            [
              <case>
                pattern (file_formats/cmi_format.ml[101,3280+4]..[101,3280+29])
                  Ppat_construct "Not_an_interface" (file_formats/cmi_format.ml[101,3280+4]..[101,3280+20])
                  Some
                    []
                    pattern (file_formats/cmi_format.ml[101,3280+21]..[101,3280+29])
                      Ppat_var "filename" (file_formats/cmi_format.ml[101,3280+21]..[101,3280+29])
                expression (file_formats/cmi_format.ml[102,3313+6]..[103,3365+40])
                  Pexp_apply
                  expression (file_formats/cmi_format.ml[102,3313+6]..[102,3313+13])
                    Pexp_ident "fprintf" (file_formats/cmi_format.ml[102,3313+6]..[102,3313+13])
                  [
                    <arg>
                    Nolabel
                      expression (file_formats/cmi_format.ml[102,3313+14]..[102,3313+17])
                        Pexp_ident "ppf" (file_formats/cmi_format.ml[102,3313+14]..[102,3313+17])
                    <arg>
                    Nolabel
                      expression (file_formats/cmi_format.ml[102,3313+18]..[102,3313+51])
                        Pexp_constant PConst_string("%a@ is not a compiled interface",(file_formats/cmi_format.ml[102,3313+19]..[102,3313+50]),None)
                    <arg>
                    Nolabel
                      expression (file_formats/cmi_format.ml[103,3365+8]..[103,3365+31])
                        Pexp_ident "Location.print_filename" (file_formats/cmi_format.ml[103,3365+8]..[103,3365+31])
                    <arg>
                    Nolabel
                      expression (file_formats/cmi_format.ml[103,3365+32]..[103,3365+40])
                        Pexp_ident "filename" (file_formats/cmi_format.ml[103,3365+32]..[103,3365+40])
                  ]
              <case>
                pattern (file_formats/cmi_format.ml[104,3406+4]..[104,3406+51])
                  Ppat_construct "Wrong_version_interface" (file_formats/cmi_format.ml[104,3406+4]..[104,3406+27])
                  Some
                    []
                    pattern (file_formats/cmi_format.ml[104,3406+28]..[104,3406+51])
                      Ppat_tuple
                      [
                        pattern (file_formats/cmi_format.ml[104,3406+29]..[104,3406+37])
                          Ppat_var "filename" (file_formats/cmi_format.ml[104,3406+29]..[104,3406+37])
                        pattern (file_formats/cmi_format.ml[104,3406+39]..[104,3406+50])
                          Ppat_var "older_newer" (file_formats/cmi_format.ml[104,3406+39]..[104,3406+50])
                      ]
                expression (file_formats/cmi_format.ml[105,3461+6]..[108,3600+52])
                  Pexp_apply
                  expression (file_formats/cmi_format.ml[105,3461+6]..[105,3461+13])
                    Pexp_ident "fprintf" (file_formats/cmi_format.ml[105,3461+6]..[105,3461+13])
                  [
                    <arg>
                    Nolabel
                      expression (file_formats/cmi_format.ml[105,3461+14]..[105,3461+17])
                        Pexp_ident "ppf" (file_formats/cmi_format.ml[105,3461+14]..[105,3461+17])
                    <arg>
                    Nolabel
                      expression (file_formats/cmi_format.ml[106,3479+8]..[107,3550+49])
                        Pexp_constant PConst_string("%a@ is not a compiled interface for this version of OCaml.@.It seems to be for %s version of OCaml.",(file_formats/cmi_format.ml[106,3479+9]..[107,3550+48]),None)
                    <arg>
                    Nolabel
                      expression (file_formats/cmi_format.ml[108,3600+8]..[108,3600+31])
                        Pexp_ident "Location.print_filename" (file_formats/cmi_format.ml[108,3600+8]..[108,3600+31])
                    <arg>
                    Nolabel
                      expression (file_formats/cmi_format.ml[108,3600+32]..[108,3600+40])
                        Pexp_ident "filename" (file_formats/cmi_format.ml[108,3600+32]..[108,3600+40])
                    <arg>
                    Nolabel
                      expression (file_formats/cmi_format.ml[108,3600+41]..[108,3600+52])
                        Pexp_ident "older_newer" (file_formats/cmi_format.ml[108,3600+41]..[108,3600+52])
                  ]
              <case>
                pattern (file_formats/cmi_format.ml[109,3653+4]..[109,3653+32])
                  Ppat_construct "Corrupted_interface" (file_formats/cmi_format.ml[109,3653+4]..[109,3653+23])
                  Some
                    []
                    pattern (file_formats/cmi_format.ml[109,3653+24]..[109,3653+32])
                      Ppat_var "filename" (file_formats/cmi_format.ml[109,3653+24]..[109,3653+32])
                expression (file_formats/cmi_format.ml[110,3689+6]..[111,3742+40])
                  Pexp_apply
                  expression (file_formats/cmi_format.ml[110,3689+6]..[110,3689+13])
                    Pexp_ident "fprintf" (file_formats/cmi_format.ml[110,3689+6]..[110,3689+13])
                  [
                    <arg>
                    Nolabel
                      expression (file_formats/cmi_format.ml[110,3689+14]..[110,3689+17])
                        Pexp_ident "ppf" (file_formats/cmi_format.ml[110,3689+14]..[110,3689+17])
                    <arg>
                    Nolabel
                      expression (file_formats/cmi_format.ml[110,3689+18]..[110,3689+52])
                        Pexp_constant PConst_string("Corrupted compiled interface@ %a",(file_formats/cmi_format.ml[110,3689+19]..[110,3689+51]),None)
                    <arg>
                    Nolabel
                      expression (file_formats/cmi_format.ml[111,3742+8]..[111,3742+31])
                        Pexp_ident "Location.print_filename" (file_formats/cmi_format.ml[111,3742+8]..[111,3742+31])
                    <arg>
                    Nolabel
                      expression (file_formats/cmi_format.ml[111,3742+32]..[111,3742+40])
                        Pexp_ident "filename" (file_formats/cmi_format.ml[111,3742+32]..[111,3742+40])
                  ]
            ]
    ]
  structure_item (file_formats/cmi_format.ml[113,3784+0]..[118,3934+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmi_format.ml[113,3784+4]..[113,3784+6])
          Ppat_construct "()" (file_formats/cmi_format.ml[113,3784+4]..[113,3784+6])
          None
        expression (file_formats/cmi_format.ml[114,3793+2]..[118,3934+5])
          Pexp_apply
          expression (file_formats/cmi_format.ml[114,3793+2]..[114,3793+32])
            Pexp_ident "Location.register_error_of_exn" (file_formats/cmi_format.ml[114,3793+2]..[114,3793+32])
          [
            <arg>
            Nolabel
              expression (file_formats/cmi_format.ml[115,3826+4]..[118,3934+5])
                Pexp_function
                [
                  <case>
                    pattern (file_formats/cmi_format.ml[116,3840+8]..[116,3840+17])
                      Ppat_construct "Error" (file_formats/cmi_format.ml[116,3840+8]..[116,3840+13])
                      Some
                        []
                        pattern (file_formats/cmi_format.ml[116,3840+14]..[116,3840+17])
                          Ppat_var "err" (file_formats/cmi_format.ml[116,3840+14]..[116,3840+17])
                    expression (file_formats/cmi_format.ml[116,3840+21]..[116,3840+75])
                      Pexp_construct "Some" (file_formats/cmi_format.ml[116,3840+21]..[116,3840+25])
                      Some
                        expression (file_formats/cmi_format.ml[116,3840+26]..[116,3840+75])
                          Pexp_apply
                          expression (file_formats/cmi_format.ml[116,3840+27]..[116,3840+57])
                            Pexp_ident "Location.error_of_printer_file" (file_formats/cmi_format.ml[116,3840+27]..[116,3840+57])
                          [
                            <arg>
                            Nolabel
                              expression (file_formats/cmi_format.ml[116,3840+58]..[116,3840+70])
                                Pexp_ident "report_error" (file_formats/cmi_format.ml[116,3840+58]..[116,3840+70])
                            <arg>
                            Nolabel
                              expression (file_formats/cmi_format.ml[116,3840+71]..[116,3840+74])
                                Pexp_ident "err" (file_formats/cmi_format.ml[116,3840+71]..[116,3840+74])
                          ]
                  <case>
                    pattern (file_formats/cmi_format.ml[117,3916+8]..[117,3916+9])
                      Ppat_any
                    expression (file_formats/cmi_format.ml[117,3916+13]..[117,3916+17])
                      Pexp_construct "None" (file_formats/cmi_format.ml[117,3916+13]..[117,3916+17])
                      None
                ]
          ]
    ]
]

