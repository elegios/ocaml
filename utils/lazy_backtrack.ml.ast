[
  structure_item (utils/lazy_backtrack.ml[16,1079+0]..[21,1165+15])
    Pstr_type Rec
    [
      type_declaration "t" (utils/lazy_backtrack.ml[16,1079+13]..[16,1079+14]) (utils/lazy_backtrack.ml[16,1079+0]..[16,1079+33])
        ptype_params =
          [
            core_type (utils/lazy_backtrack.ml[16,1079+6]..[16,1079+8])
              Ptyp_var a
            core_type (utils/lazy_backtrack.ml[16,1079+9]..[16,1079+11])
              Ptyp_var b
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (utils/lazy_backtrack.ml[16,1079+17]..[16,1079+33])
              Ptyp_constr "ref" (utils/lazy_backtrack.ml[16,1079+30]..[16,1079+33])
              [
                core_type (utils/lazy_backtrack.ml[16,1079+17]..[16,1079+29])
                  Ptyp_constr "eval" (utils/lazy_backtrack.ml[16,1079+25]..[16,1079+29])
                  [
                    core_type (utils/lazy_backtrack.ml[16,1079+18]..[16,1079+20])
                      Ptyp_var a
                    core_type (utils/lazy_backtrack.ml[16,1079+21]..[16,1079+23])
                      Ptyp_var b
                  ]
              ]
      type_declaration "eval" (utils/lazy_backtrack.ml[18,1114+12]..[18,1114+16]) (utils/lazy_backtrack.ml[18,1114+0]..[21,1165+15])
        ptype_params =
          [
            core_type (utils/lazy_backtrack.ml[18,1114+5]..[18,1114+7])
              Ptyp_var a
            core_type (utils/lazy_backtrack.ml[18,1114+8]..[18,1114+10])
              Ptyp_var b
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (utils/lazy_backtrack.ml[19,1133+2]..[19,1133+14])
                "Done" (utils/lazy_backtrack.ml[19,1133+4]..[19,1133+8])
                [
                  core_type (utils/lazy_backtrack.ml[19,1133+12]..[19,1133+14])
                    Ptyp_var b
                ]
                None
              (utils/lazy_backtrack.ml[20,1148+2]..[20,1148+16])
                "Raise" (utils/lazy_backtrack.ml[20,1148+4]..[20,1148+9])
                [
                  core_type (utils/lazy_backtrack.ml[20,1148+13]..[20,1148+16])
                    Ptyp_constr "exn" (utils/lazy_backtrack.ml[20,1148+13]..[20,1148+16])
                    []
                ]
                None
              (utils/lazy_backtrack.ml[21,1165+2]..[21,1165+15])
                "Thunk" (utils/lazy_backtrack.ml[21,1165+4]..[21,1165+9])
                [
                  core_type (utils/lazy_backtrack.ml[21,1165+13]..[21,1165+15])
                    Ptyp_var a
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (utils/lazy_backtrack.ml[23,1182+0]..[25,1202+41])
    Pstr_type Rec
    [
      type_declaration "undo" (utils/lazy_backtrack.ml[23,1182+5]..[23,1182+9]) (utils/lazy_backtrack.ml[23,1182+0]..[25,1202+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (utils/lazy_backtrack.ml[24,1194+2]..[24,1194+7])
                "Nil" (utils/lazy_backtrack.ml[24,1194+4]..[24,1194+7])
                []
                None
              (utils/lazy_backtrack.ml[25,1202+2]..[25,1202+41])
                "Cons" (utils/lazy_backtrack.ml[25,1202+4]..[25,1202+8])
                [
                  core_type (utils/lazy_backtrack.ml[25,1202+11]..[25,1202+21])
                    Ptyp_constr "t" (utils/lazy_backtrack.ml[25,1202+20]..[25,1202+21])
                    [
                      core_type (utils/lazy_backtrack.ml[25,1202+12]..[25,1202+14])
                        Ptyp_var a
                      core_type (utils/lazy_backtrack.ml[25,1202+16]..[25,1202+18])
                        Ptyp_var b
                    ]
                  core_type (utils/lazy_backtrack.ml[25,1202+24]..[25,1202+26])
                    Ptyp_var a
                  core_type (utils/lazy_backtrack.ml[25,1202+29]..[25,1202+33])
                    Ptyp_constr "undo" (utils/lazy_backtrack.ml[25,1202+29]..[25,1202+33])
                    []
                ]
                Some
                  core_type (utils/lazy_backtrack.ml[25,1202+37]..[25,1202+41])
                    Ptyp_constr "undo" (utils/lazy_backtrack.ml[25,1202+37]..[25,1202+41])
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (utils/lazy_backtrack.ml[27,1245+0]..[27,1245+19])
    Pstr_type Rec
    [
      type_declaration "log" (utils/lazy_backtrack.ml[27,1245+5]..[27,1245+8]) (utils/lazy_backtrack.ml[27,1245+0]..[27,1245+19])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (utils/lazy_backtrack.ml[27,1245+11]..[27,1245+19])
              Ptyp_constr "ref" (utils/lazy_backtrack.ml[27,1245+16]..[27,1245+19])
              [
                core_type (utils/lazy_backtrack.ml[27,1245+11]..[27,1245+15])
                  Ptyp_constr "undo" (utils/lazy_backtrack.ml[27,1245+11]..[27,1245+15])
                  []
              ]
    ]
  structure_item (utils/lazy_backtrack.ml[29,1266+0]..[40,1462+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/lazy_backtrack.ml[29,1266+4]..[29,1266+9])
          Ppat_var "force" (utils/lazy_backtrack.ml[29,1266+4]..[29,1266+9])
        expression (utils/lazy_backtrack.ml[29,1266+10]..[40,1462+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/lazy_backtrack.ml[29,1266+10]..[29,1266+11])
            Ppat_var "f" (utils/lazy_backtrack.ml[29,1266+10]..[29,1266+11])
          expression (utils/lazy_backtrack.ml[29,1266+12]..[40,1462+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/lazy_backtrack.ml[29,1266+12]..[29,1266+13])
              Ppat_var "x" (utils/lazy_backtrack.ml[29,1266+12]..[29,1266+13])
            expression (utils/lazy_backtrack.ml[30,1282+2]..[40,1462+15])
              Pexp_match
              expression (utils/lazy_backtrack.ml[30,1282+8]..[30,1282+10])
                Pexp_apply
                expression (utils/lazy_backtrack.ml[30,1282+8]..[30,1282+9])
                  Pexp_ident "!" (utils/lazy_backtrack.ml[30,1282+8]..[30,1282+9])
                [
                  <arg>
                  Nolabel
                    expression (utils/lazy_backtrack.ml[30,1282+9]..[30,1282+10])
                      Pexp_ident "x" (utils/lazy_backtrack.ml[30,1282+9]..[30,1282+10])
                ]
              [
                <case>
                  pattern (utils/lazy_backtrack.ml[31,1298+4]..[31,1298+10])
                    Ppat_construct "Done" (utils/lazy_backtrack.ml[31,1298+4]..[31,1298+8])
                    Some
                      []
                      pattern (utils/lazy_backtrack.ml[31,1298+9]..[31,1298+10])
                        Ppat_var "x" (utils/lazy_backtrack.ml[31,1298+9]..[31,1298+10])
                  expression (utils/lazy_backtrack.ml[31,1298+14]..[31,1298+15])
                    Pexp_ident "x" (utils/lazy_backtrack.ml[31,1298+14]..[31,1298+15])
                <case>
                  pattern (utils/lazy_backtrack.ml[32,1314+4]..[32,1314+11])
                    Ppat_construct "Raise" (utils/lazy_backtrack.ml[32,1314+4]..[32,1314+9])
                    Some
                      []
                      pattern (utils/lazy_backtrack.ml[32,1314+10]..[32,1314+11])
                        Ppat_var "e" (utils/lazy_backtrack.ml[32,1314+10]..[32,1314+11])
                  expression (utils/lazy_backtrack.ml[32,1314+15]..[32,1314+22])
                    Pexp_apply
                    expression (utils/lazy_backtrack.ml[32,1314+15]..[32,1314+20])
                      Pexp_ident "raise" (utils/lazy_backtrack.ml[32,1314+15]..[32,1314+20])
                    [
                      <arg>
                      Nolabel
                        expression (utils/lazy_backtrack.ml[32,1314+21]..[32,1314+22])
                          Pexp_ident "e" (utils/lazy_backtrack.ml[32,1314+21]..[32,1314+22])
                    ]
                <case>
                  pattern (utils/lazy_backtrack.ml[33,1337+4]..[33,1337+11])
                    Ppat_construct "Thunk" (utils/lazy_backtrack.ml[33,1337+4]..[33,1337+9])
                    Some
                      []
                      pattern (utils/lazy_backtrack.ml[33,1337+10]..[33,1337+11])
                        Ppat_var "e" (utils/lazy_backtrack.ml[33,1337+10]..[33,1337+11])
                  expression (utils/lazy_backtrack.ml[34,1352+6]..[40,1462+15])
                    Pexp_match
                    expression (utils/lazy_backtrack.ml[34,1352+12]..[34,1352+15])
                      Pexp_apply
                      expression (utils/lazy_backtrack.ml[34,1352+12]..[34,1352+13])
                        Pexp_ident "f" (utils/lazy_backtrack.ml[34,1352+12]..[34,1352+13])
                      [
                        <arg>
                        Nolabel
                          expression (utils/lazy_backtrack.ml[34,1352+14]..[34,1352+15])
                            Pexp_ident "e" (utils/lazy_backtrack.ml[34,1352+14]..[34,1352+15])
                      ]
                    [
                      <case>
                        pattern (utils/lazy_backtrack.ml[35,1373+8]..[35,1373+9])
                          Ppat_var "y" (utils/lazy_backtrack.ml[35,1373+8]..[35,1373+9])
                        expression (utils/lazy_backtrack.ml[36,1386+8]..[37,1407+9])
                          Pexp_sequence
                          expression (utils/lazy_backtrack.ml[36,1386+8]..[36,1386+19])
                            Pexp_apply
                            expression (utils/lazy_backtrack.ml[36,1386+10]..[36,1386+12])
                              Pexp_ident ":=" (utils/lazy_backtrack.ml[36,1386+10]..[36,1386+12])
                            [
                              <arg>
                              Nolabel
                                expression (utils/lazy_backtrack.ml[36,1386+8]..[36,1386+9])
                                  Pexp_ident "x" (utils/lazy_backtrack.ml[36,1386+8]..[36,1386+9])
                              <arg>
                              Nolabel
                                expression (utils/lazy_backtrack.ml[36,1386+13]..[36,1386+19])
                                  Pexp_construct "Done" (utils/lazy_backtrack.ml[36,1386+13]..[36,1386+17])
                                  Some
                                    expression (utils/lazy_backtrack.ml[36,1386+18]..[36,1386+19])
                                      Pexp_ident "y" (utils/lazy_backtrack.ml[36,1386+18]..[36,1386+19])
                            ]
                          expression (utils/lazy_backtrack.ml[37,1407+8]..[37,1407+9])
                            Pexp_ident "y" (utils/lazy_backtrack.ml[37,1407+8]..[37,1407+9])
                      <case>
                        pattern (utils/lazy_backtrack.ml[38,1417+8]..[38,1417+19])
                          Ppat_exception
                          pattern (utils/lazy_backtrack.ml[38,1417+18]..[38,1417+19])
                            Ppat_var "e" (utils/lazy_backtrack.ml[38,1417+18]..[38,1417+19])
                        expression (utils/lazy_backtrack.ml[39,1440+8]..[40,1462+15])
                          Pexp_sequence
                          expression (utils/lazy_backtrack.ml[39,1440+8]..[39,1440+20])
                            Pexp_apply
                            expression (utils/lazy_backtrack.ml[39,1440+10]..[39,1440+12])
                              Pexp_ident ":=" (utils/lazy_backtrack.ml[39,1440+10]..[39,1440+12])
                            [
                              <arg>
                              Nolabel
                                expression (utils/lazy_backtrack.ml[39,1440+8]..[39,1440+9])
                                  Pexp_ident "x" (utils/lazy_backtrack.ml[39,1440+8]..[39,1440+9])
                              <arg>
                              Nolabel
                                expression (utils/lazy_backtrack.ml[39,1440+13]..[39,1440+20])
                                  Pexp_construct "Raise" (utils/lazy_backtrack.ml[39,1440+13]..[39,1440+18])
                                  Some
                                    expression (utils/lazy_backtrack.ml[39,1440+19]..[39,1440+20])
                                      Pexp_ident "e" (utils/lazy_backtrack.ml[39,1440+19]..[39,1440+20])
                            ]
                          expression (utils/lazy_backtrack.ml[40,1462+8]..[40,1462+15])
                            Pexp_apply
                            expression (utils/lazy_backtrack.ml[40,1462+8]..[40,1462+13])
                              Pexp_ident "raise" (utils/lazy_backtrack.ml[40,1462+8]..[40,1462+13])
                            [
                              <arg>
                              Nolabel
                                expression (utils/lazy_backtrack.ml[40,1462+14]..[40,1462+15])
                                  Pexp_ident "e" (utils/lazy_backtrack.ml[40,1462+14]..[40,1462+15])
                            ]
                    ]
              ]
    ]
  structure_item (utils/lazy_backtrack.ml[42,1479+0]..[43,1495+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/lazy_backtrack.ml[42,1479+4]..[42,1479+11])
          Ppat_var "get_arg" (utils/lazy_backtrack.ml[42,1479+4]..[42,1479+11])
        expression (utils/lazy_backtrack.ml[42,1479+12]..[43,1495+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/lazy_backtrack.ml[42,1479+12]..[42,1479+13])
            Ppat_var "x" (utils/lazy_backtrack.ml[42,1479+12]..[42,1479+13])
          expression (utils/lazy_backtrack.ml[43,1495+2]..[43,1495+45])
            Pexp_match
            expression (utils/lazy_backtrack.ml[43,1495+8]..[43,1495+10])
              Pexp_apply
              expression (utils/lazy_backtrack.ml[43,1495+8]..[43,1495+9])
                Pexp_ident "!" (utils/lazy_backtrack.ml[43,1495+8]..[43,1495+9])
              [
                <arg>
                Nolabel
                  expression (utils/lazy_backtrack.ml[43,1495+9]..[43,1495+10])
                    Pexp_ident "x" (utils/lazy_backtrack.ml[43,1495+9]..[43,1495+10])
              ]
            [
              <case>
                pattern (utils/lazy_backtrack.ml[43,1495+16]..[43,1495+23])
                  Ppat_construct "Thunk" (utils/lazy_backtrack.ml[43,1495+16]..[43,1495+21])
                  Some
                    []
                    pattern (utils/lazy_backtrack.ml[43,1495+22]..[43,1495+23])
                      Ppat_var "a" (utils/lazy_backtrack.ml[43,1495+22]..[43,1495+23])
                expression (utils/lazy_backtrack.ml[43,1495+27]..[43,1495+33])
                  Pexp_construct "Some" (utils/lazy_backtrack.ml[43,1495+27]..[43,1495+31])
                  Some
                    expression (utils/lazy_backtrack.ml[43,1495+32]..[43,1495+33])
                      Pexp_ident "a" (utils/lazy_backtrack.ml[43,1495+32]..[43,1495+33])
              <case>
                pattern (utils/lazy_backtrack.ml[43,1495+36]..[43,1495+37])
                  Ppat_any
                expression (utils/lazy_backtrack.ml[43,1495+41]..[43,1495+45])
                  Pexp_construct "None" (utils/lazy_backtrack.ml[43,1495+41]..[43,1495+45])
                  None
            ]
    ]
  structure_item (utils/lazy_backtrack.ml[45,1542+0]..[46,1557+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/lazy_backtrack.ml[45,1542+4]..[45,1542+10])
          Ppat_var "create" (utils/lazy_backtrack.ml[45,1542+4]..[45,1542+10])
        expression (utils/lazy_backtrack.ml[45,1542+11]..[46,1557+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/lazy_backtrack.ml[45,1542+11]..[45,1542+12])
            Ppat_var "x" (utils/lazy_backtrack.ml[45,1542+11]..[45,1542+12])
          expression (utils/lazy_backtrack.ml[46,1557+2]..[46,1557+15])
            Pexp_apply
            expression (utils/lazy_backtrack.ml[46,1557+2]..[46,1557+5])
              Pexp_ident "ref" (utils/lazy_backtrack.ml[46,1557+2]..[46,1557+5])
            [
              <arg>
              Nolabel
                expression (utils/lazy_backtrack.ml[46,1557+6]..[46,1557+15])
                  Pexp_construct "Thunk" (utils/lazy_backtrack.ml[46,1557+7]..[46,1557+12])
                  Some
                    expression (utils/lazy_backtrack.ml[46,1557+13]..[46,1557+14])
                      Pexp_ident "x" (utils/lazy_backtrack.ml[46,1557+13]..[46,1557+14])
            ]
    ]
  structure_item (utils/lazy_backtrack.ml[48,1574+0]..[49,1596+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/lazy_backtrack.ml[48,1574+4]..[48,1574+17])
          Ppat_var "create_forced" (utils/lazy_backtrack.ml[48,1574+4]..[48,1574+17])
        expression (utils/lazy_backtrack.ml[48,1574+18]..[49,1596+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/lazy_backtrack.ml[48,1574+18]..[48,1574+19])
            Ppat_var "y" (utils/lazy_backtrack.ml[48,1574+18]..[48,1574+19])
          expression (utils/lazy_backtrack.ml[49,1596+2]..[49,1596+14])
            Pexp_apply
            expression (utils/lazy_backtrack.ml[49,1596+2]..[49,1596+5])
              Pexp_ident "ref" (utils/lazy_backtrack.ml[49,1596+2]..[49,1596+5])
            [
              <arg>
              Nolabel
                expression (utils/lazy_backtrack.ml[49,1596+6]..[49,1596+14])
                  Pexp_construct "Done" (utils/lazy_backtrack.ml[49,1596+7]..[49,1596+11])
                  Some
                    expression (utils/lazy_backtrack.ml[49,1596+12]..[49,1596+13])
                      Pexp_ident "y" (utils/lazy_backtrack.ml[49,1596+12]..[49,1596+13])
            ]
    ]
  structure_item (utils/lazy_backtrack.ml[51,1612+0]..[52,1634+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/lazy_backtrack.ml[51,1612+4]..[51,1612+17])
          Ppat_var "create_failed" (utils/lazy_backtrack.ml[51,1612+4]..[51,1612+17])
        expression (utils/lazy_backtrack.ml[51,1612+18]..[52,1634+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/lazy_backtrack.ml[51,1612+18]..[51,1612+19])
            Ppat_var "e" (utils/lazy_backtrack.ml[51,1612+18]..[51,1612+19])
          expression (utils/lazy_backtrack.ml[52,1634+2]..[52,1634+15])
            Pexp_apply
            expression (utils/lazy_backtrack.ml[52,1634+2]..[52,1634+5])
              Pexp_ident "ref" (utils/lazy_backtrack.ml[52,1634+2]..[52,1634+5])
            [
              <arg>
              Nolabel
                expression (utils/lazy_backtrack.ml[52,1634+6]..[52,1634+15])
                  Pexp_construct "Raise" (utils/lazy_backtrack.ml[52,1634+7]..[52,1634+12])
                  Some
                    expression (utils/lazy_backtrack.ml[52,1634+13]..[52,1634+14])
                      Pexp_ident "e" (utils/lazy_backtrack.ml[52,1634+13]..[52,1634+14])
            ]
    ]
  structure_item (utils/lazy_backtrack.ml[54,1651+0]..[55,1664+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/lazy_backtrack.ml[54,1651+4]..[54,1651+7])
          Ppat_var "log" (utils/lazy_backtrack.ml[54,1651+4]..[54,1651+7])
        expression (utils/lazy_backtrack.ml[54,1651+8]..[55,1664+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/lazy_backtrack.ml[54,1651+8]..[54,1651+10])
            Ppat_construct "()" (utils/lazy_backtrack.ml[54,1651+8]..[54,1651+10])
            None
          expression (utils/lazy_backtrack.ml[55,1664+2]..[55,1664+9])
            Pexp_apply
            expression (utils/lazy_backtrack.ml[55,1664+2]..[55,1664+5])
              Pexp_ident "ref" (utils/lazy_backtrack.ml[55,1664+2]..[55,1664+5])
            [
              <arg>
              Nolabel
                expression (utils/lazy_backtrack.ml[55,1664+6]..[55,1664+9])
                  Pexp_construct "Nil" (utils/lazy_backtrack.ml[55,1664+6]..[55,1664+9])
                  None
            ]
    ]
  structure_item (utils/lazy_backtrack.ml[57,1675+0]..[72,1995+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/lazy_backtrack.ml[57,1675+4]..[57,1675+16])
          Ppat_var "force_logged" (utils/lazy_backtrack.ml[57,1675+4]..[57,1675+16])
        expression (utils/lazy_backtrack.ml[57,1675+17]..[72,1995+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/lazy_backtrack.ml[57,1675+17]..[57,1675+20])
            Ppat_var "log" (utils/lazy_backtrack.ml[57,1675+17]..[57,1675+20])
          expression (utils/lazy_backtrack.ml[57,1675+21]..[72,1995+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/lazy_backtrack.ml[57,1675+21]..[57,1675+22])
              Ppat_var "f" (utils/lazy_backtrack.ml[57,1675+21]..[57,1675+22])
            expression (utils/lazy_backtrack.ml[57,1675+23]..[72,1995+15]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (utils/lazy_backtrack.ml[57,1675+23]..[57,1675+24])
                Ppat_var "x" (utils/lazy_backtrack.ml[57,1675+23]..[57,1675+24])
              expression (utils/lazy_backtrack.ml[58,1702+2]..[72,1995+15])
                Pexp_match
                expression (utils/lazy_backtrack.ml[58,1702+8]..[58,1702+10])
                  Pexp_apply
                  expression (utils/lazy_backtrack.ml[58,1702+8]..[58,1702+9])
                    Pexp_ident "!" (utils/lazy_backtrack.ml[58,1702+8]..[58,1702+9])
                  [
                    <arg>
                    Nolabel
                      expression (utils/lazy_backtrack.ml[58,1702+9]..[58,1702+10])
                        Pexp_ident "x" (utils/lazy_backtrack.ml[58,1702+9]..[58,1702+10])
                  ]
                [
                  <case>
                    pattern (utils/lazy_backtrack.ml[59,1718+4]..[59,1718+10])
                      Ppat_construct "Done" (utils/lazy_backtrack.ml[59,1718+4]..[59,1718+8])
                      Some
                        []
                        pattern (utils/lazy_backtrack.ml[59,1718+9]..[59,1718+10])
                          Ppat_var "x" (utils/lazy_backtrack.ml[59,1718+9]..[59,1718+10])
                    expression (utils/lazy_backtrack.ml[59,1718+14]..[59,1718+15])
                      Pexp_ident "x" (utils/lazy_backtrack.ml[59,1718+14]..[59,1718+15])
                  <case>
                    pattern (utils/lazy_backtrack.ml[60,1734+4]..[60,1734+11])
                      Ppat_construct "Raise" (utils/lazy_backtrack.ml[60,1734+4]..[60,1734+9])
                      Some
                        []
                        pattern (utils/lazy_backtrack.ml[60,1734+10]..[60,1734+11])
                          Ppat_var "e" (utils/lazy_backtrack.ml[60,1734+10]..[60,1734+11])
                    expression (utils/lazy_backtrack.ml[60,1734+15]..[60,1734+22])
                      Pexp_apply
                      expression (utils/lazy_backtrack.ml[60,1734+15]..[60,1734+20])
                        Pexp_ident "raise" (utils/lazy_backtrack.ml[60,1734+15]..[60,1734+20])
                      [
                        <arg>
                        Nolabel
                          expression (utils/lazy_backtrack.ml[60,1734+21]..[60,1734+22])
                            Pexp_ident "e" (utils/lazy_backtrack.ml[60,1734+21]..[60,1734+22])
                      ]
                  <case>
                    pattern (utils/lazy_backtrack.ml[61,1757+4]..[61,1757+11])
                      Ppat_construct "Thunk" (utils/lazy_backtrack.ml[61,1757+4]..[61,1757+9])
                      Some
                        []
                        pattern (utils/lazy_backtrack.ml[61,1757+10]..[61,1757+11])
                          Ppat_var "e" (utils/lazy_backtrack.ml[61,1757+10]..[61,1757+11])
                    expression (utils/lazy_backtrack.ml[62,1772+4]..[72,1995+15])
                      Pexp_match
                      expression (utils/lazy_backtrack.ml[62,1772+10]..[62,1772+13])
                        Pexp_apply
                        expression (utils/lazy_backtrack.ml[62,1772+10]..[62,1772+11])
                          Pexp_ident "f" (utils/lazy_backtrack.ml[62,1772+10]..[62,1772+11])
                        [
                          <arg>
                          Nolabel
                            expression (utils/lazy_backtrack.ml[62,1772+12]..[62,1772+13])
                              Pexp_ident "e" (utils/lazy_backtrack.ml[62,1772+12]..[62,1772+13])
                        ]
                      [
                        <case>
                          pattern (utils/lazy_backtrack.ml[63,1791+6]..[63,1791+33])
                            Ppat_constraint
                            pattern (utils/lazy_backtrack.ml[63,1791+7]..[63,1791+21])
                              Ppat_alias "err" (utils/lazy_backtrack.ml[63,1791+18]..[63,1791+21])
                              pattern (utils/lazy_backtrack.ml[63,1791+7]..[63,1791+14])
                                Ppat_construct "Error" (utils/lazy_backtrack.ml[63,1791+7]..[63,1791+12])
                                Some
                                  []
                                  pattern (utils/lazy_backtrack.ml[63,1791+13]..[63,1791+14])
                                    Ppat_any
                            core_type (utils/lazy_backtrack.ml[63,1791+24]..[63,1791+32])
                              Ptyp_constr "result" (utils/lazy_backtrack.ml[63,1791+26]..[63,1791+32])
                              [
                                core_type (utils/lazy_backtrack.ml[63,1791+24]..[63,1791+25])
                                  Ptyp_any
                              ]
                          expression (utils/lazy_backtrack.ml[64,1828+8]..[66,1884+11])
                            Pexp_sequence
                            expression (utils/lazy_backtrack.ml[64,1828+8]..[64,1828+21])
                              Pexp_apply
                              expression (utils/lazy_backtrack.ml[64,1828+10]..[64,1828+12])
                                Pexp_ident ":=" (utils/lazy_backtrack.ml[64,1828+10]..[64,1828+12])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/lazy_backtrack.ml[64,1828+8]..[64,1828+9])
                                    Pexp_ident "x" (utils/lazy_backtrack.ml[64,1828+8]..[64,1828+9])
                                <arg>
                                Nolabel
                                  expression (utils/lazy_backtrack.ml[64,1828+13]..[64,1828+21])
                                    Pexp_construct "Done" (utils/lazy_backtrack.ml[64,1828+13]..[64,1828+17])
                                    Some
                                      expression (utils/lazy_backtrack.ml[64,1828+18]..[64,1828+21])
                                        Pexp_ident "err" (utils/lazy_backtrack.ml[64,1828+18]..[64,1828+21])
                              ]
                            expression (utils/lazy_backtrack.ml[65,1851+8]..[66,1884+11])
                              Pexp_sequence
                              expression (utils/lazy_backtrack.ml[65,1851+8]..[65,1851+31])
                                Pexp_apply
                                expression (utils/lazy_backtrack.ml[65,1851+12]..[65,1851+14])
                                  Pexp_ident ":=" (utils/lazy_backtrack.ml[65,1851+12]..[65,1851+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/lazy_backtrack.ml[65,1851+8]..[65,1851+11])
                                      Pexp_ident "log" (utils/lazy_backtrack.ml[65,1851+8]..[65,1851+11])
                                  <arg>
                                  Nolabel
                                    expression (utils/lazy_backtrack.ml[65,1851+15]..[65,1851+31])
                                      Pexp_construct "Cons" (utils/lazy_backtrack.ml[65,1851+15]..[65,1851+19])
                                      Some
                                        expression (utils/lazy_backtrack.ml[65,1851+19]..[65,1851+31])
                                          Pexp_tuple
                                          [
                                            expression (utils/lazy_backtrack.ml[65,1851+20]..[65,1851+21])
                                              Pexp_ident "x" (utils/lazy_backtrack.ml[65,1851+20]..[65,1851+21])
                                            expression (utils/lazy_backtrack.ml[65,1851+23]..[65,1851+24])
                                              Pexp_ident "e" (utils/lazy_backtrack.ml[65,1851+23]..[65,1851+24])
                                            expression (utils/lazy_backtrack.ml[65,1851+26]..[65,1851+30])
                                              Pexp_apply
                                              expression (utils/lazy_backtrack.ml[65,1851+26]..[65,1851+27])
                                                Pexp_ident "!" (utils/lazy_backtrack.ml[65,1851+26]..[65,1851+27])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/lazy_backtrack.ml[65,1851+27]..[65,1851+30])
                                                    Pexp_ident "log" (utils/lazy_backtrack.ml[65,1851+27]..[65,1851+30])
                                              ]
                                          ]
                                ]
                              expression (utils/lazy_backtrack.ml[66,1884+8]..[66,1884+11])
                                Pexp_ident "err" (utils/lazy_backtrack.ml[66,1884+8]..[66,1884+11])
                        <case>
                          pattern (utils/lazy_backtrack.ml[67,1896+6]..[67,1896+17])
                            Ppat_alias "res" (utils/lazy_backtrack.ml[67,1896+14]..[67,1896+17])
                            pattern (utils/lazy_backtrack.ml[67,1896+6]..[67,1896+10])
                              Ppat_construct "Ok" (utils/lazy_backtrack.ml[67,1896+6]..[67,1896+8])
                              Some
                                []
                                pattern (utils/lazy_backtrack.ml[67,1896+9]..[67,1896+10])
                                  Ppat_any
                          expression (utils/lazy_backtrack.ml[68,1917+8]..[69,1940+11])
                            Pexp_sequence
                            expression (utils/lazy_backtrack.ml[68,1917+8]..[68,1917+21])
                              Pexp_apply
                              expression (utils/lazy_backtrack.ml[68,1917+10]..[68,1917+12])
                                Pexp_ident ":=" (utils/lazy_backtrack.ml[68,1917+10]..[68,1917+12])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/lazy_backtrack.ml[68,1917+8]..[68,1917+9])
                                    Pexp_ident "x" (utils/lazy_backtrack.ml[68,1917+8]..[68,1917+9])
                                <arg>
                                Nolabel
                                  expression (utils/lazy_backtrack.ml[68,1917+13]..[68,1917+21])
                                    Pexp_construct "Done" (utils/lazy_backtrack.ml[68,1917+13]..[68,1917+17])
                                    Some
                                      expression (utils/lazy_backtrack.ml[68,1917+18]..[68,1917+21])
                                        Pexp_ident "res" (utils/lazy_backtrack.ml[68,1917+18]..[68,1917+21])
                              ]
                            expression (utils/lazy_backtrack.ml[69,1940+8]..[69,1940+11])
                              Pexp_ident "res" (utils/lazy_backtrack.ml[69,1940+8]..[69,1940+11])
                        <case>
                          pattern (utils/lazy_backtrack.ml[70,1952+6]..[70,1952+17])
                            Ppat_exception
                            pattern (utils/lazy_backtrack.ml[70,1952+16]..[70,1952+17])
                              Ppat_var "e" (utils/lazy_backtrack.ml[70,1952+16]..[70,1952+17])
                          expression (utils/lazy_backtrack.ml[71,1973+8]..[72,1995+15])
                            Pexp_sequence
                            expression (utils/lazy_backtrack.ml[71,1973+8]..[71,1973+20])
                              Pexp_apply
                              expression (utils/lazy_backtrack.ml[71,1973+10]..[71,1973+12])
                                Pexp_ident ":=" (utils/lazy_backtrack.ml[71,1973+10]..[71,1973+12])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/lazy_backtrack.ml[71,1973+8]..[71,1973+9])
                                    Pexp_ident "x" (utils/lazy_backtrack.ml[71,1973+8]..[71,1973+9])
                                <arg>
                                Nolabel
                                  expression (utils/lazy_backtrack.ml[71,1973+13]..[71,1973+20])
                                    Pexp_construct "Raise" (utils/lazy_backtrack.ml[71,1973+13]..[71,1973+18])
                                    Some
                                      expression (utils/lazy_backtrack.ml[71,1973+19]..[71,1973+20])
                                        Pexp_ident "e" (utils/lazy_backtrack.ml[71,1973+19]..[71,1973+20])
                              ]
                            expression (utils/lazy_backtrack.ml[72,1995+8]..[72,1995+15])
                              Pexp_apply
                              expression (utils/lazy_backtrack.ml[72,1995+8]..[72,1995+13])
                                Pexp_ident "raise" (utils/lazy_backtrack.ml[72,1995+8]..[72,1995+13])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/lazy_backtrack.ml[72,1995+14]..[72,1995+15])
                                    Pexp_ident "e" (utils/lazy_backtrack.ml[72,1995+14]..[72,1995+15])
                              ]
                      ]
                ]
    ]
  structure_item (utils/lazy_backtrack.ml[74,2012+0]..[81,2145+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/lazy_backtrack.ml[74,2012+4]..[74,2012+13])
          Ppat_var "backtrack" (utils/lazy_backtrack.ml[74,2012+4]..[74,2012+13])
        expression (utils/lazy_backtrack.ml[74,2012+14]..[81,2145+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/lazy_backtrack.ml[74,2012+14]..[74,2012+17])
            Ppat_var "log" (utils/lazy_backtrack.ml[74,2012+14]..[74,2012+17])
          expression (utils/lazy_backtrack.ml[75,2032+2]..[81,2145+11])
            Pexp_let Rec
            [
              <def>
                pattern (utils/lazy_backtrack.ml[75,2032+10]..[75,2032+14])
                  Ppat_var "loop" (utils/lazy_backtrack.ml[75,2032+10]..[75,2032+14])
                expression (utils/lazy_backtrack.ml[75,2032+17]..[79,2122+17])
                  Pexp_function
                  [
                    <case>
                      pattern (utils/lazy_backtrack.ml[76,2058+6]..[76,2058+9])
                        Ppat_construct "Nil" (utils/lazy_backtrack.ml[76,2058+6]..[76,2058+9])
                        None
                      expression (utils/lazy_backtrack.ml[76,2058+13]..[76,2058+15])
                        Pexp_construct "()" (utils/lazy_backtrack.ml[76,2058+13]..[76,2058+15])
                        None
                    <case>
                      pattern (utils/lazy_backtrack.ml[77,2074+6]..[77,2074+22])
                        Ppat_construct "Cons" (utils/lazy_backtrack.ml[77,2074+6]..[77,2074+10])
                        Some
                          []
                          pattern (utils/lazy_backtrack.ml[77,2074+10]..[77,2074+22])
                            Ppat_tuple
                            [
                              pattern (utils/lazy_backtrack.ml[77,2074+11]..[77,2074+12])
                                Ppat_var "x" (utils/lazy_backtrack.ml[77,2074+11]..[77,2074+12])
                              pattern (utils/lazy_backtrack.ml[77,2074+14]..[77,2074+15])
                                Ppat_var "e" (utils/lazy_backtrack.ml[77,2074+14]..[77,2074+15])
                              pattern (utils/lazy_backtrack.ml[77,2074+17]..[77,2074+21])
                                Ppat_var "rest" (utils/lazy_backtrack.ml[77,2074+17]..[77,2074+21])
                            ]
                      expression (utils/lazy_backtrack.ml[78,2100+8]..[79,2122+17])
                        Pexp_sequence
                        expression (utils/lazy_backtrack.ml[78,2100+8]..[78,2100+20])
                          Pexp_apply
                          expression (utils/lazy_backtrack.ml[78,2100+10]..[78,2100+12])
                            Pexp_ident ":=" (utils/lazy_backtrack.ml[78,2100+10]..[78,2100+12])
                          [
                            <arg>
                            Nolabel
                              expression (utils/lazy_backtrack.ml[78,2100+8]..[78,2100+9])
                                Pexp_ident "x" (utils/lazy_backtrack.ml[78,2100+8]..[78,2100+9])
                            <arg>
                            Nolabel
                              expression (utils/lazy_backtrack.ml[78,2100+13]..[78,2100+20])
                                Pexp_construct "Thunk" (utils/lazy_backtrack.ml[78,2100+13]..[78,2100+18])
                                Some
                                  expression (utils/lazy_backtrack.ml[78,2100+19]..[78,2100+20])
                                    Pexp_ident "e" (utils/lazy_backtrack.ml[78,2100+19]..[78,2100+20])
                          ]
                        expression (utils/lazy_backtrack.ml[79,2122+8]..[79,2122+17])
                          Pexp_apply
                          expression (utils/lazy_backtrack.ml[79,2122+8]..[79,2122+12])
                            Pexp_ident "loop" (utils/lazy_backtrack.ml[79,2122+8]..[79,2122+12])
                          [
                            <arg>
                            Nolabel
                              expression (utils/lazy_backtrack.ml[79,2122+13]..[79,2122+17])
                                Pexp_ident "rest" (utils/lazy_backtrack.ml[79,2122+13]..[79,2122+17])
                          ]
                  ]
            ]
            expression (utils/lazy_backtrack.ml[81,2145+2]..[81,2145+11])
              Pexp_apply
              expression (utils/lazy_backtrack.ml[81,2145+2]..[81,2145+6])
                Pexp_ident "loop" (utils/lazy_backtrack.ml[81,2145+2]..[81,2145+6])
              [
                <arg>
                Nolabel
                  expression (utils/lazy_backtrack.ml[81,2145+7]..[81,2145+11])
                    Pexp_apply
                    expression (utils/lazy_backtrack.ml[81,2145+7]..[81,2145+8])
                      Pexp_ident "!" (utils/lazy_backtrack.ml[81,2145+7]..[81,2145+8])
                    [
                      <arg>
                      Nolabel
                        expression (utils/lazy_backtrack.ml[81,2145+8]..[81,2145+11])
                          Pexp_ident "log" (utils/lazy_backtrack.ml[81,2145+8]..[81,2145+11])
                    ]
              ]
    ]
]

