[
  signature_item (typing/types.mli[16,1079+0]..[16,1079+51])
    Psig_attribute "ocaml.text"
    [
      structure_item (typing/types.mli[16,1079+0]..[16,1079+51])
        Pstr_eval
        expression (typing/types.mli[16,1079+0]..[16,1079+51])
          Pexp_constant PConst_string(" {0 Representation of types and declarations} ",(typing/types.mli[16,1079+0]..[16,1079+51]),None)
    ]
  signature_item (typing/types.mli[18,1132+0]..[22,1291+2])
    Psig_attribute "ocaml.text"
    [
      structure_item (typing/types.mli[18,1132+0]..[22,1291+2])
        Pstr_eval
        expression (typing/types.mli[18,1132+0]..[22,1291+2])
          Pexp_constant PConst_string(" [Types] defines the representation of types and declarations (that is, the\n    content of module signatures).\n\n    CMI files are made of marshalled types.\n",(typing/types.mli[18,1132+0]..[22,1291+2]),None)
    ]
  signature_item (typing/types.mli[25,1373+0]..[25,1373+13])
    Psig_open Fresh "Asttypes" (typing/types.mli[25,1373+5]..[25,1373+13])
      attribute "ocaml.doc"
        [
          structure_item (typing/types.mli[24,1295+0]..[24,1295+77])
            Pstr_eval
            expression (typing/types.mli[24,1295+0]..[24,1295+77])
              Pexp_constant PConst_string(" Asttypes exposes basic definitions shared both by Parsetree and Types. ",(typing/types.mli[24,1295+0]..[24,1295+77]),None)
        ]
  signature_item (typing/types.mli[58,2798+0]..[58,2798+14])
    Psig_type Rec
    [
      type_declaration "type_expr" (typing/types.mli[58,2798+5]..[58,2798+14]) (typing/types.mli[58,2798+0]..[58,2798+14])
        attribute "ocaml.doc"
          [
            structure_item (typing/types.mli[27,1388+0]..[57,2794+3])
              Pstr_eval
              expression (typing/types.mli[27,1388+0]..[57,2794+3])
                Pexp_constant PConst_string(" Type expressions for the core language.\n\n    The [type_desc] variant defines all the possible type expressions one can\n    find in OCaml. [type_expr] wraps this with some annotations.\n\n    The [level] field tracks the level of polymorphism associated to a type,\n    guiding the generalization algorithm.\n    Put shortly, when referring to a type in a given environment, both the type\n    and the environment have a level. If the type has an higher level, then it\n    can be considered fully polymorphic (type variables will be printed as\n    ['a]), otherwise it'll be weakly polymorphic, or non generalized (type\n    variables printed as ['_a]).\n    See [http://okmij.org/ftp/ML/generalization.html] for more information.\n\n    Note about [type_declaration]: one should not make the confusion between\n    [type_expr] and [type_declaration].\n\n    [type_declaration] refers specifically to the [type] construct in OCaml\n    language, where you create and name a new type or type alias.\n\n    [type_expr] is used when you refer to existing types, e.g. when annotating\n    the expected type of a value.\n\n    Also, as the type system of OCaml is generative, a [type_declaration] can\n    have the side-effect of introducing a new type constructor, different from\n    all other known types.\n    Whereas [type_expr] is a pure construct which allows referring to existing\n    types.\n\n    Note on mutability: TBD.\n ",(typing/types.mli[27,1388+0]..[57,2794+3]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/types.mli[60,2814+0]..[233,9019+27])
    Psig_type Rec
    [
      type_declaration "type_desc" (typing/types.mli[60,2814+5]..[60,2814+14]) (typing/types.mli[60,2814+0]..[128,5386+55])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[61,2831+2]..[61,2831+25])
                "Tvar" (typing/types.mli[61,2831+4]..[61,2831+8])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[62,2857+2]..[63,2899+34])
                      Pstr_eval
                      expression (typing/types.mli[62,2857+2]..[63,2899+34])
                        Pexp_constant PConst_string(" [Tvar (Some \"a\")] ==> ['a] or ['_a]\n      [Tvar None]       ==> [_] ",(typing/types.mli[62,2857+2]..[63,2899+34]),None)
                  ]
                [
                  core_type (typing/types.mli[61,2831+12]..[61,2831+25])
                    Ptyp_constr "option" (typing/types.mli[61,2831+19]..[61,2831+25])
                    [
                      core_type (typing/types.mli[61,2831+12]..[61,2831+18])
                        Ptyp_constr "string" (typing/types.mli[61,2831+12]..[61,2831+18])
                        []
                    ]
                ]
                None
              (typing/types.mli[65,2935+2]..[65,2935+60])
                "Tarrow" (typing/types.mli[65,2935+4]..[65,2935+10])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[66,2996+2]..[70,3174+48])
                      Pstr_eval
                      expression (typing/types.mli[66,2996+2]..[70,3174+48])
                        Pexp_constant PConst_string(" [Tarrow (Nolabel,      e1, e2, c)] ==> [e1    -> e2]\n      [Tarrow (Labelled \"l\", e1, e2, c)] ==> [l:e1  -> e2]\n      [Tarrow (Optional \"l\", e1, e2, c)] ==> [?l:e1 -> e2]\n\n      See [commutable] for the last argument. ",(typing/types.mli[66,2996+2]..[70,3174+48]),None)
                  ]
                [
                  core_type (typing/types.mli[65,2935+14]..[65,2935+23])
                    Ptyp_constr "arg_label" (typing/types.mli[65,2935+14]..[65,2935+23])
                    []
                  core_type (typing/types.mli[65,2935+26]..[65,2935+35])
                    Ptyp_constr "type_expr" (typing/types.mli[65,2935+26]..[65,2935+35])
                    []
                  core_type (typing/types.mli[65,2935+38]..[65,2935+47])
                    Ptyp_constr "type_expr" (typing/types.mli[65,2935+38]..[65,2935+47])
                    []
                  core_type (typing/types.mli[65,2935+50]..[65,2935+60])
                    Ptyp_constr "commutable" (typing/types.mli[65,2935+50]..[65,2935+60])
                    []
                ]
                None
              (typing/types.mli[72,3224+2]..[72,3224+28])
                "Ttuple" (typing/types.mli[72,3224+4]..[72,3224+10])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[73,3253+2]..[73,3253+51])
                      Pstr_eval
                      expression (typing/types.mli[73,3253+2]..[73,3253+51])
                        Pexp_constant PConst_string(" [Ttuple [t1;...;tn]] ==> [(t1 * ... * tn)] ",(typing/types.mli[73,3253+2]..[73,3253+51]),None)
                  ]
                [
                  core_type (typing/types.mli[72,3224+14]..[72,3224+28])
                    Ptyp_constr "list" (typing/types.mli[72,3224+24]..[72,3224+28])
                    [
                      core_type (typing/types.mli[72,3224+14]..[72,3224+23])
                        Ptyp_constr "type_expr" (typing/types.mli[72,3224+14]..[72,3224+23])
                        []
                    ]
                ]
                None
              (typing/types.mli[75,3306+2]..[75,3306+56])
                "Tconstr" (typing/types.mli[75,3306+4]..[75,3306+11])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[76,3363+2]..[77,3429+79])
                      Pstr_eval
                      expression (typing/types.mli[76,3363+2]..[77,3429+79])
                        Pexp_constant PConst_string(" [Tconstr (`A.B.t', [t1;...;tn], _)] ==> [(t1,...,tn) A.B.t]\n      The last parameter keep tracks of known expansions, see [abbrev_memo]. ",(typing/types.mli[76,3363+2]..[77,3429+79]),None)
                  ]
                [
                  core_type (typing/types.mli[75,3306+15]..[75,3306+21])
                    Ptyp_constr "Path.t" (typing/types.mli[75,3306+15]..[75,3306+21])
                    []
                  core_type (typing/types.mli[75,3306+24]..[75,3306+38])
                    Ptyp_constr "list" (typing/types.mli[75,3306+34]..[75,3306+38])
                    [
                      core_type (typing/types.mli[75,3306+24]..[75,3306+33])
                        Ptyp_constr "type_expr" (typing/types.mli[75,3306+24]..[75,3306+33])
                        []
                    ]
                  core_type (typing/types.mli[75,3306+41]..[75,3306+56])
                    Ptyp_constr "ref" (typing/types.mli[75,3306+53]..[75,3306+56])
                    [
                      core_type (typing/types.mli[75,3306+41]..[75,3306+52])
                        Ptyp_constr "abbrev_memo" (typing/types.mli[75,3306+41]..[75,3306+52])
                        []
                    ]
                ]
                None
              (typing/types.mli[79,3510+2]..[79,3510+63])
                "Tobject" (typing/types.mli[79,3510+4]..[79,3510+11])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[80,3574+2]..[96,4256+4])
                      Pstr_eval
                      expression (typing/types.mli[80,3574+2]..[96,4256+4])
                        Pexp_constant PConst_string(" [Tobject (`f1:t1;...;fn: tn', `None')] ==> [< f1: t1; ...; fn: tn >]\n      f1, fn are represented as a linked list of types using Tfield and Tnil\n      constructors.\n\n      [Tobject (_, `Some (`A.ct', [t1;...;tn]')] ==> [(t1, ..., tn) A.ct].\n      where A.ct is the type of some class.\n\n      There are also special cases for so-called \"class-types\", cf. [Typeclass]\n      and [Ctype.set_object_name]:\n\n        [Tobject (Tfield(_,_,...(Tfield(_,_,rv)...),\n                         Some(`A.#ct`, [rv;t1;...;tn])]\n             ==> [(t1, ..., tn) #A.ct]\n        [Tobject (_, Some(`A.#ct`, [Tnil;t1;...;tn])] ==> [(t1, ..., tn) A.ct]\n\n      where [rv] is the hidden row variable.\n  ",(typing/types.mli[80,3574+2]..[96,4256+4]),None)
                  ]
                [
                  core_type (typing/types.mli[79,3510+15]..[79,3510+24])
                    Ptyp_constr "type_expr" (typing/types.mli[79,3510+15]..[79,3510+24])
                    []
                  core_type (typing/types.mli[79,3510+27]..[79,3510+63])
                    Ptyp_constr "ref" (typing/types.mli[79,3510+60]..[79,3510+63])
                    [
                      core_type (typing/types.mli[79,3510+27]..[79,3510+59])
                        Ptyp_constr "option" (typing/types.mli[79,3510+53]..[79,3510+59])
                        [
                          core_type (typing/types.mli[79,3510+28]..[79,3510+51])
                            Ptyp_tuple
                            [
                              core_type (typing/types.mli[79,3510+28]..[79,3510+34])
                                Ptyp_constr "Path.t" (typing/types.mli[79,3510+28]..[79,3510+34])
                                []
                              core_type (typing/types.mli[79,3510+37]..[79,3510+51])
                                Ptyp_constr "list" (typing/types.mli[79,3510+47]..[79,3510+51])
                                [
                                  core_type (typing/types.mli[79,3510+37]..[79,3510+46])
                                    Ptyp_constr "type_expr" (typing/types.mli[79,3510+37]..[79,3510+46])
                                    []
                                ]
                            ]
                        ]
                    ]
                ]
                None
              (typing/types.mli[98,4262+2]..[98,4262+57])
                "Tfield" (typing/types.mli[98,4262+4]..[98,4262+10])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[99,4320+2]..[99,4320+67])
                      Pstr_eval
                      expression (typing/types.mli[99,4320+2]..[99,4320+67])
                        Pexp_constant PConst_string(" [Tfield (\"foo\", Fpresent, t, ts)] ==> [<...; foo : t; ts>] ",(typing/types.mli[99,4320+2]..[99,4320+67]),None)
                  ]
                [
                  core_type (typing/types.mli[98,4262+14]..[98,4262+20])
                    Ptyp_constr "string" (typing/types.mli[98,4262+14]..[98,4262+20])
                    []
                  core_type (typing/types.mli[98,4262+23]..[98,4262+33])
                    Ptyp_constr "field_kind" (typing/types.mli[98,4262+23]..[98,4262+33])
                    []
                  core_type (typing/types.mli[98,4262+36]..[98,4262+45])
                    Ptyp_constr "type_expr" (typing/types.mli[98,4262+36]..[98,4262+45])
                    []
                  core_type (typing/types.mli[98,4262+48]..[98,4262+57])
                    Ptyp_constr "type_expr" (typing/types.mli[98,4262+48]..[98,4262+57])
                    []
                ]
                None
              (typing/types.mli[101,4389+2]..[101,4389+8])
                "Tnil" (typing/types.mli[101,4389+4]..[101,4389+8])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[102,4398+2]..[102,4398+29])
                      Pstr_eval
                      expression (typing/types.mli[102,4398+2]..[102,4398+29])
                        Pexp_constant PConst_string(" [Tnil] ==> [<...; >] ",(typing/types.mli[102,4398+2]..[102,4398+29]),None)
                  ]
                []
                None
              (typing/types.mli[104,4429+2]..[104,4429+22])
                "Tlink" (typing/types.mli[104,4429+4]..[104,4429+9])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[105,4452+2]..[105,4452+48])
                      Pstr_eval
                      expression (typing/types.mli[105,4452+2]..[105,4452+48])
                        Pexp_constant PConst_string(" Indirection used by unification engine. ",(typing/types.mli[105,4452+2]..[105,4452+48]),None)
                  ]
                [
                  core_type (typing/types.mli[104,4429+13]..[104,4429+22])
                    Ptyp_constr "type_expr" (typing/types.mli[104,4429+13]..[104,4429+22])
                    []
                ]
                None
              (typing/types.mli[107,4502+2]..[107,4502+42])
                "Tsubst" (typing/types.mli[107,4502+4]..[107,4502+10])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[108,4545+2]..[114,4917+67])
                      Pstr_eval
                      expression (typing/types.mli[108,4545+2]..[114,4917+67])
                        Pexp_constant PConst_string(" [Tsubst] is used temporarily to store information in low-level\n      functions manipulating representation of types, such as\n      instantiation or copy.\n      The first argument contains a copy of the original node.\n      The second is available only when the first is the row variable of\n      a polymorphic variant.  It then contains a copy of the whole variant.\n      This constructor should not appear outside of these cases. ",(typing/types.mli[108,4545+2]..[114,4917+67]),None)
                  ]
                [
                  core_type (typing/types.mli[107,4502+14]..[107,4502+23])
                    Ptyp_constr "type_expr" (typing/types.mli[107,4502+14]..[107,4502+23])
                    []
                  core_type (typing/types.mli[107,4502+26]..[107,4502+42])
                    Ptyp_constr "option" (typing/types.mli[107,4502+36]..[107,4502+42])
                    [
                      core_type (typing/types.mli[107,4502+26]..[107,4502+35])
                        Ptyp_constr "type_expr" (typing/types.mli[107,4502+26]..[107,4502+35])
                        []
                    ]
                ]
                None
              (typing/types.mli[116,4986+2]..[116,4986+24])
                "Tvariant" (typing/types.mli[116,4986+4]..[116,4986+12])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[117,5011+2]..[117,5011+64])
                      Pstr_eval
                      expression (typing/types.mli[117,5011+2]..[117,5011+64])
                        Pexp_constant PConst_string(" Representation of polymorphic variants, see [row_desc]. ",(typing/types.mli[117,5011+2]..[117,5011+64]),None)
                  ]
                [
                  core_type (typing/types.mli[116,4986+16]..[116,4986+24])
                    Ptyp_constr "row_desc" (typing/types.mli[116,4986+16]..[116,4986+24])
                    []
                ]
                None
              (typing/types.mli[119,5077+2]..[119,5077+28])
                "Tunivar" (typing/types.mli[119,5077+4]..[119,5077+11])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[120,5106+2]..[121,5158+37])
                      Pstr_eval
                      expression (typing/types.mli[120,5106+2]..[121,5158+37])
                        Pexp_constant PConst_string(" Occurrence of a type variable introduced by a\n      forall quantifier / [Tpoly]. ",(typing/types.mli[120,5106+2]..[121,5158+37]),None)
                  ]
                [
                  core_type (typing/types.mli[119,5077+15]..[119,5077+28])
                    Ptyp_constr "option" (typing/types.mli[119,5077+22]..[119,5077+28])
                    [
                      core_type (typing/types.mli[119,5077+15]..[119,5077+21])
                        Ptyp_constr "string" (typing/types.mli[119,5077+15]..[119,5077+21])
                        []
                    ]
                ]
                None
              (typing/types.mli[123,5197+2]..[123,5197+39])
                "Tpoly" (typing/types.mli[123,5197+4]..[123,5197+9])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[124,5237+2]..[126,5338+46])
                      Pstr_eval
                      expression (typing/types.mli[124,5237+2]..[126,5338+46])
                        Pexp_constant PConst_string(" [Tpoly (ty,tyl)] ==> ['a1... 'an. ty],\n      where 'a1 ... 'an are names given to types in tyl\n      and occurrences of those types in ty. ",(typing/types.mli[124,5237+2]..[126,5338+46]),None)
                  ]
                [
                  core_type (typing/types.mli[123,5197+13]..[123,5197+22])
                    Ptyp_constr "type_expr" (typing/types.mli[123,5197+13]..[123,5197+22])
                    []
                  core_type (typing/types.mli[123,5197+25]..[123,5197+39])
                    Ptyp_constr "list" (typing/types.mli[123,5197+35]..[123,5197+39])
                    [
                      core_type (typing/types.mli[123,5197+25]..[123,5197+34])
                        Ptyp_constr "type_expr" (typing/types.mli[123,5197+25]..[123,5197+34])
                        []
                    ]
                ]
                None
              (typing/types.mli[128,5386+2]..[128,5386+55])
                "Tpackage" (typing/types.mli[128,5386+4]..[128,5386+12])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[129,5442+2]..[129,5442+54])
                      Pstr_eval
                      expression (typing/types.mli[129,5442+2]..[129,5442+54])
                        Pexp_constant PConst_string(" Type of a first-class module (a.k.a package). ",(typing/types.mli[129,5442+2]..[129,5442+54]),None)
                  ]
                [
                  core_type (typing/types.mli[128,5386+16]..[128,5386+22])
                    Ptyp_constr "Path.t" (typing/types.mli[128,5386+16]..[128,5386+22])
                    []
                  core_type (typing/types.mli[128,5386+25]..[128,5386+55])
                    Ptyp_constr "list" (typing/types.mli[128,5386+51]..[128,5386+55])
                    [
                      core_type (typing/types.mli[128,5386+26]..[128,5386+49])
                        Ptyp_tuple
                        [
                          core_type (typing/types.mli[128,5386+26]..[128,5386+37])
                            Ptyp_constr "Longident.t" (typing/types.mli[128,5386+26]..[128,5386+37])
                            []
                          core_type (typing/types.mli[128,5386+40]..[128,5386+49])
                            Ptyp_constr "type_expr" (typing/types.mli[128,5386+40]..[128,5386+49])
                            []
                        ]
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "row_desc" (typing/types.mli[157,6366+4]..[157,6366+12]) (typing/types.mli[157,6366+0]..[163,6571+50])
        attribute "ocaml.doc"
          [
            structure_item (typing/types.mli[131,5498+0]..[156,6363+2])
              Pstr_eval
              expression (typing/types.mli[131,5498+0]..[156,6363+2])
                Pexp_constant PConst_string(" [  `X | `Y ]       (row_closed = true)\n    [< `X | `Y ]       (row_closed = true)\n    [> `X | `Y ]       (row_closed = false)\n    [< `X | `Y > `X ]  (row_closed = true)\n\n    type t = [> `X ] as 'a      (row_more = Tvar a)\n    type t = private [> `X ]    (row_more = Tconstr (t#row, [], ref Mnil))\n\n    And for:\n\n        let f = function `X -> `X -> | `Y -> `X\n\n    the type of \"f\" will be a [Tarrow] whose lhs will (basically) be:\n\n        Tvariant { row_fields = [(\"X\", _)];\n                   row_more   =\n                     Tvariant { row_fields = [(\"Y\", _)];\n                                row_more   =\n                                  Tvariant { row_fields = [];\n                                             row_more   = _;\n                                             _ };\n                                _ };\n                   _\n                 }\n\n",(typing/types.mli[131,5498+0]..[156,6363+2]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.mli[158,6381+6]..[158,6381+43])
                Immutable
                "row_fields" (typing/types.mli[158,6381+6]..[158,6381+16])                core_type (typing/types.mli[158,6381+18]..[158,6381+42])
                  Ptyp_constr "list" (typing/types.mli[158,6381+38]..[158,6381+42])
                  [
                    core_type (typing/types.mli[158,6381+19]..[158,6381+36])
                      Ptyp_tuple
                      [
                        core_type (typing/types.mli[158,6381+19]..[158,6381+24])
                          Ptyp_constr "label" (typing/types.mli[158,6381+19]..[158,6381+24])
                          []
                        core_type (typing/types.mli[158,6381+27]..[158,6381+36])
                          Ptyp_constr "row_field" (typing/types.mli[158,6381+27]..[158,6381+36])
                          []
                      ]
                  ]
              (typing/types.mli[159,6425+6]..[159,6425+26])
                Immutable
                "row_more" (typing/types.mli[159,6425+6]..[159,6425+14])                core_type (typing/types.mli[159,6425+16]..[159,6425+25])
                  Ptyp_constr "type_expr" (typing/types.mli[159,6425+16]..[159,6425+25])
                  []
              (typing/types.mli[160,6452+6]..[160,6452+22])
                Immutable
                "row_bound" (typing/types.mli[160,6452+6]..[160,6452+15])                core_type (typing/types.mli[160,6452+17]..[160,6452+21])
                  Ptyp_constr "unit" (typing/types.mli[160,6452+17]..[160,6452+21])
                  []
              (typing/types.mli[161,6504+6]..[161,6504+23])
                Immutable
                "row_closed" (typing/types.mli[161,6504+6]..[161,6504+16])                core_type (typing/types.mli[161,6504+18]..[161,6504+22])
                  Ptyp_constr "bool" (typing/types.mli[161,6504+18]..[161,6504+22])
                  []
              (typing/types.mli[162,6528+6]..[162,6528+42])
                Immutable
                "row_fixed" (typing/types.mli[162,6528+6]..[162,6528+15])                core_type (typing/types.mli[162,6528+17]..[162,6528+41])
                  Ptyp_constr "option" (typing/types.mli[162,6528+35]..[162,6528+41])
                  [
                    core_type (typing/types.mli[162,6528+17]..[162,6528+34])
                      Ptyp_constr "fixed_explanation" (typing/types.mli[162,6528+17]..[162,6528+34])
                      []
                  ]
              (typing/types.mli[163,6571+6]..[163,6571+48])
                Immutable
                "row_name" (typing/types.mli[163,6571+6]..[163,6571+14])                core_type (typing/types.mli[163,6571+16]..[163,6571+48])
                  Ptyp_constr "option" (typing/types.mli[163,6571+42]..[163,6571+48])
                  [
                    core_type (typing/types.mli[163,6571+17]..[163,6571+40])
                      Ptyp_tuple
                      [
                        core_type (typing/types.mli[163,6571+17]..[163,6571+23])
                          Ptyp_constr "Path.t" (typing/types.mli[163,6571+17]..[163,6571+23])
                          []
                        core_type (typing/types.mli[163,6571+26]..[163,6571+40])
                          Ptyp_constr "list" (typing/types.mli[163,6571+36]..[163,6571+40])
                          [
                            core_type (typing/types.mli[163,6571+26]..[163,6571+35])
                              Ptyp_constr "type_expr" (typing/types.mli[163,6571+26]..[163,6571+35])
                              []
                          ]
                      ]
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "fixed_explanation" (typing/types.mli[164,6622+4]..[164,6622+21]) (typing/types.mli[164,6622+0]..[168,6811+9])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[165,6646+2]..[165,6646+23])
                "Univar" (typing/types.mli[165,6646+4]..[165,6646+10])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[165,6646+24]..[165,6646+66])
                      Pstr_eval
                      expression (typing/types.mli[165,6646+24]..[165,6646+66])
                        Pexp_constant PConst_string(" The row type was bound to an univar ",(typing/types.mli[165,6646+24]..[165,6646+66]),None)
                  ]
                [
                  core_type (typing/types.mli[165,6646+14]..[165,6646+23])
                    Ptyp_constr "type_expr" (typing/types.mli[165,6646+14]..[165,6646+23])
                    []
                ]
                None
              (typing/types.mli[166,6713+2]..[166,6713+17])
                "Fixed_private" (typing/types.mli[166,6713+4]..[166,6713+17])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[166,6713+18]..[166,6713+48])
                      Pstr_eval
                      expression (typing/types.mli[166,6713+18]..[166,6713+48])
                        Pexp_constant PConst_string(" The row type is private ",(typing/types.mli[166,6713+18]..[166,6713+48]),None)
                  ]
                []
                None
              (typing/types.mli[167,6762+2]..[167,6762+21])
                "Reified" (typing/types.mli[167,6762+4]..[167,6762+11])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[167,6762+22]..[167,6762+48])
                      Pstr_eval
                      expression (typing/types.mli[167,6762+22]..[167,6762+48])
                        Pexp_constant PConst_string(" The row was reified ",(typing/types.mli[167,6762+22]..[167,6762+48]),None)
                  ]
                [
                  core_type (typing/types.mli[167,6762+15]..[167,6762+21])
                    Ptyp_constr "Path.t" (typing/types.mli[167,6762+15]..[167,6762+21])
                    []
                ]
                None
              (typing/types.mli[168,6811+2]..[168,6811+9])
                "Rigid" (typing/types.mli[168,6811+4]..[168,6811+9])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[168,6811+10]..[168,6811+75])
                      Pstr_eval
                      expression (typing/types.mli[168,6811+10]..[168,6811+75])
                        Pexp_constant PConst_string(" The row type was made rigid during constraint verification ",(typing/types.mli[168,6811+10]..[168,6811+75]),None)
                  ]
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "row_field" (typing/types.mli[169,6887+4]..[169,6887+13]) (typing/types.mli[169,6887+0]..[175,7148+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[170,6903+4]..[170,6903+32])
                "Rpresent" (typing/types.mli[170,6903+4]..[170,6903+12])
                [
                  core_type (typing/types.mli[170,6903+16]..[170,6903+32])
                    Ptyp_constr "option" (typing/types.mli[170,6903+26]..[170,6903+32])
                    [
                      core_type (typing/types.mli[170,6903+16]..[170,6903+25])
                        Ptyp_constr "type_expr" (typing/types.mli[170,6903+16]..[170,6903+25])
                        []
                    ]
                ]
                None
              (typing/types.mli[171,6936+2]..[171,6936+66])
                "Reither" (typing/types.mli[171,6936+4]..[171,6936+11])
                [
                  core_type (typing/types.mli[171,6936+15]..[171,6936+19])
                    Ptyp_constr "bool" (typing/types.mli[171,6936+15]..[171,6936+19])
                    []
                  core_type (typing/types.mli[171,6936+22]..[171,6936+36])
                    Ptyp_constr "list" (typing/types.mli[171,6936+32]..[171,6936+36])
                    [
                      core_type (typing/types.mli[171,6936+22]..[171,6936+31])
                        Ptyp_constr "type_expr" (typing/types.mli[171,6936+22]..[171,6936+31])
                        []
                    ]
                  core_type (typing/types.mli[171,6936+39]..[171,6936+43])
                    Ptyp_constr "bool" (typing/types.mli[171,6936+39]..[171,6936+43])
                    []
                  core_type (typing/types.mli[171,6936+46]..[171,6936+66])
                    Ptyp_constr "ref" (typing/types.mli[171,6936+63]..[171,6936+66])
                    [
                      core_type (typing/types.mli[171,6936+46]..[171,6936+62])
                        Ptyp_constr "option" (typing/types.mli[171,6936+56]..[171,6936+62])
                        [
                          core_type (typing/types.mli[171,6936+46]..[171,6936+55])
                            Ptyp_constr "row_field" (typing/types.mli[171,6936+46]..[171,6936+55])
                            []
                        ]
                    ]
                ]
                None
              (typing/types.mli[175,7148+2]..[175,7148+11])
                "Rabsent" (typing/types.mli[175,7148+4]..[175,7148+11])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "abbrev_memo" (typing/types.mli[192,7792+4]..[192,7792+15]) (typing/types.mli[192,7792+0]..[201,8128+28])
        attribute "ocaml.doc"
          [
            structure_item (typing/types.mli[177,7161+0]..[191,7789+2])
              Pstr_eval
              expression (typing/types.mli[177,7161+0]..[191,7789+2])
                Pexp_constant PConst_string(" [abbrev_memo] allows one to keep track of different expansions of a type\n    alias. This is done for performance purposes.\n\n    For instance, when defining [type 'a pair = 'a * 'a], when one refers to an\n    ['a pair], it is just a shortcut for the ['a * 'a] type.\n    This expansion will be stored in the [abbrev_memo] of the corresponding\n    [Tconstr] node.\n\n    In practice, [abbrev_memo] behaves like list of expansions with a mutable\n    tail.\n\n    Note on marshalling: [abbrev_memo] must not appear in saved types.\n    [Btype], with [cleanup_abbrev] and [memo], takes care of tracking and\n    removing abbreviations.\n",(typing/types.mli[177,7161+0]..[191,7789+2]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[193,7810+2]..[193,7810+8])
                "Mnil" (typing/types.mli[193,7810+4]..[193,7810+8])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[193,7810+9]..[193,7810+37])
                      Pstr_eval
                      expression (typing/types.mli[193,7810+9]..[193,7810+37])
                        Pexp_constant PConst_string(" No known abbreviation ",(typing/types.mli[193,7810+9]..[193,7810+37]),None)
                  ]
                []
                None
              (typing/types.mli[195,7849+2]..[195,7849+72])
                "Mcons" (typing/types.mli[195,7849+4]..[195,7849+9])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[196,7922+2]..[199,8047+79])
                      Pstr_eval
                      expression (typing/types.mli[196,7922+2]..[199,8047+79])
                        Pexp_constant PConst_string(" Found one abbreviation.\n      A valid abbreviation should be at least as visible and reachable by the\n      same path.\n      The first expression is the abbreviation and the second the expansion. ",(typing/types.mli[196,7922+2]..[199,8047+79]),None)
                  ]
                [
                  core_type (typing/types.mli[195,7849+13]..[195,7849+25])
                    Ptyp_constr "private_flag" (typing/types.mli[195,7849+13]..[195,7849+25])
                    []
                  core_type (typing/types.mli[195,7849+28]..[195,7849+34])
                    Ptyp_constr "Path.t" (typing/types.mli[195,7849+28]..[195,7849+34])
                    []
                  core_type (typing/types.mli[195,7849+37]..[195,7849+46])
                    Ptyp_constr "type_expr" (typing/types.mli[195,7849+37]..[195,7849+46])
                    []
                  core_type (typing/types.mli[195,7849+49]..[195,7849+58])
                    Ptyp_constr "type_expr" (typing/types.mli[195,7849+49]..[195,7849+58])
                    []
                  core_type (typing/types.mli[195,7849+61]..[195,7849+72])
                    Ptyp_constr "abbrev_memo" (typing/types.mli[195,7849+61]..[195,7849+72])
                    []
                ]
                None
              (typing/types.mli[201,8128+2]..[201,8128+28])
                "Mlink" (typing/types.mli[201,8128+4]..[201,8128+9])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/types.mli[202,8157+2]..[202,8157+58])
                      Pstr_eval
                      expression (typing/types.mli[202,8157+2]..[202,8157+58])
                        Pexp_constant PConst_string(" Abbreviations can be found after this indirection ",(typing/types.mli[202,8157+2]..[202,8157+58]),None)
                  ]
                [
                  core_type (typing/types.mli[201,8128+13]..[201,8128+28])
                    Ptyp_constr "ref" (typing/types.mli[201,8128+25]..[201,8128+28])
                    [
                      core_type (typing/types.mli[201,8128+13]..[201,8128+24])
                        Ptyp_constr "abbrev_memo" (typing/types.mli[201,8128+13]..[201,8128+24])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "field_kind" (typing/types.mli[204,8217+4]..[204,8217+14]) (typing/types.mli[204,8217+0]..[207,8281+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[205,8234+4]..[205,8234+33])
                "Fvar" (typing/types.mli[205,8234+4]..[205,8234+8])
                [
                  core_type (typing/types.mli[205,8234+12]..[205,8234+33])
                    Ptyp_constr "ref" (typing/types.mli[205,8234+30]..[205,8234+33])
                    [
                      core_type (typing/types.mli[205,8234+12]..[205,8234+29])
                        Ptyp_constr "option" (typing/types.mli[205,8234+23]..[205,8234+29])
                        [
                          core_type (typing/types.mli[205,8234+12]..[205,8234+22])
                            Ptyp_constr "field_kind" (typing/types.mli[205,8234+12]..[205,8234+22])
                            []
                        ]
                    ]
                ]
                None
              (typing/types.mli[206,8268+2]..[206,8268+12])
                "Fpresent" (typing/types.mli[206,8268+4]..[206,8268+12])
                []
                None
              (typing/types.mli[207,8281+2]..[207,8281+11])
                "Fabsent" (typing/types.mli[207,8281+4]..[207,8281+11])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "commutable" (typing/types.mli[230,8981+4]..[230,8981+14]) (typing/types.mli[230,8981+0]..[233,9019+27])
        attribute "ocaml.doc"
          [
            structure_item (typing/types.mli[209,8294+0]..[229,8978+2])
              Pstr_eval
              expression (typing/types.mli[209,8294+0]..[229,8978+2])
                Pexp_constant PConst_string(" [commutable] is a flag appended to every arrow type.\n\n    When typing an application, if the type of the functional is\n    known, its type is instantiated with [Cok] arrows, otherwise as\n    [Clink (ref Cunknown)].\n\n    When the type is not known, the application will be used to infer\n    the actual type.  This is fragile in presence of labels where\n    there is no principal type.\n\n    Two incompatible applications relying on [Cunknown] arrows will\n    trigger an error.\n\n    let f g =\n      g ~a:() ~b:();\n      g ~b:() ~a:();\n\n    Error: This function is applied to arguments\n    in an order different from other calls.\n    This is only allowed when the real type is known.\n",(typing/types.mli[209,8294+0]..[229,8978+2]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[231,8998+4]..[231,8998+7])
                "Cok" (typing/types.mli[231,8998+4]..[231,8998+7])
                []
                None
              (typing/types.mli[232,9006+2]..[232,9006+12])
                "Cunknown" (typing/types.mli[232,9006+4]..[232,9006+12])
                []
                None
              (typing/types.mli[233,9019+2]..[233,9019+27])
                "Clink" (typing/types.mli[233,9019+4]..[233,9019+9])
                [
                  core_type (typing/types.mli[233,9019+13]..[233,9019+27])
                    Ptyp_constr "ref" (typing/types.mli[233,9019+24]..[233,9019+27])
                    [
                      core_type (typing/types.mli[233,9019+13]..[233,9019+23])
                        Ptyp_constr "commutable" (typing/types.mli[233,9019+13]..[233,9019+23])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/types.mli[235,9048+0]..[235,9048+65])
    Psig_attribute "ocaml.text"
    [
      structure_item (typing/types.mli[235,9048+0]..[235,9048+65])
        Pstr_eval
        expression (typing/types.mli[235,9048+0]..[235,9048+65])
          Pexp_constant PConst_string(" Getters for type_expr; calls repr before answering a value ",(typing/types.mli[235,9048+0]..[235,9048+65]),None)
    ]
  signature_item (typing/types.mli[237,9115+0]..[237,9115+36])
    Psig_value
    value_description "get_desc" (typing/types.mli[237,9115+4]..[237,9115+12]) (typing/types.mli[237,9115+0]..[237,9115+36])
      core_type (typing/types.mli[237,9115+14]..[237,9115+36])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[237,9115+14]..[237,9115+23])
          Ptyp_constr "type_expr" (typing/types.mli[237,9115+14]..[237,9115+23])
          []
        core_type (typing/types.mli[237,9115+27]..[237,9115+36])
          Ptyp_constr "type_desc" (typing/types.mli[237,9115+27]..[237,9115+36])
          []
      []
  signature_item (typing/types.mli[238,9152+0]..[238,9152+31])
    Psig_value
    value_description "get_level" (typing/types.mli[238,9152+4]..[238,9152+13]) (typing/types.mli[238,9152+0]..[238,9152+31])
      core_type (typing/types.mli[238,9152+15]..[238,9152+31])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[238,9152+15]..[238,9152+24])
          Ptyp_constr "type_expr" (typing/types.mli[238,9152+15]..[238,9152+24])
          []
        core_type (typing/types.mli[238,9152+28]..[238,9152+31])
          Ptyp_constr "int" (typing/types.mli[238,9152+28]..[238,9152+31])
          []
      []
  signature_item (typing/types.mli[239,9184+0]..[239,9184+31])
    Psig_value
    value_description "get_scope" (typing/types.mli[239,9184+4]..[239,9184+13]) (typing/types.mli[239,9184+0]..[239,9184+31])
      core_type (typing/types.mli[239,9184+15]..[239,9184+31])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[239,9184+15]..[239,9184+24])
          Ptyp_constr "type_expr" (typing/types.mli[239,9184+15]..[239,9184+24])
          []
        core_type (typing/types.mli[239,9184+28]..[239,9184+31])
          Ptyp_constr "int" (typing/types.mli[239,9184+28]..[239,9184+31])
          []
      []
  signature_item (typing/types.mli[240,9216+0]..[240,9216+28])
    Psig_value
    value_description "get_id" (typing/types.mli[240,9216+4]..[240,9216+10]) (typing/types.mli[240,9216+0]..[240,9216+28])
      core_type (typing/types.mli[240,9216+12]..[240,9216+28])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[240,9216+12]..[240,9216+21])
          Ptyp_constr "type_expr" (typing/types.mli[240,9216+12]..[240,9216+21])
          []
        core_type (typing/types.mli[240,9216+25]..[240,9216+28])
          Ptyp_constr "int" (typing/types.mli[240,9216+25]..[240,9216+28])
          []
      []
  signature_item (typing/types.mli[244,9340+0]..[248,9459+17])
    Psig_type Rec
    [
      type_declaration "transient_expr" (typing/types.mli[244,9340+5]..[244,9340+19]) (typing/types.mli[244,9340+0]..[248,9459+17])
        attribute "ocaml.doc"
          [
            structure_item (typing/types.mli[242,9246+0]..[243,9273+66])
              Pstr_eval
              expression (typing/types.mli[242,9246+0]..[243,9273+66])
                Pexp_constant PConst_string(" Transient [type_expr].\n    Should only be used immediately after [Transient_expr.repr] ",(typing/types.mli[242,9246+0]..[243,9273+66]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.mli[245,9370+8]..[245,9370+32])
                Mutable
                "desc" (typing/types.mli[245,9370+16]..[245,9370+20])                core_type (typing/types.mli[245,9370+22]..[245,9370+31])
                  Ptyp_constr "type_desc" (typing/types.mli[245,9370+22]..[245,9370+31])
                  []
              (typing/types.mli[246,9403+8]..[246,9403+27])
                Mutable
                "level" (typing/types.mli[246,9403+16]..[246,9403+21])                core_type (typing/types.mli[246,9403+23]..[246,9403+26])
                  Ptyp_constr "int" (typing/types.mli[246,9403+23]..[246,9403+26])
                  []
              (typing/types.mli[247,9431+8]..[247,9431+27])
                Mutable
                "scope" (typing/types.mli[247,9431+16]..[247,9431+21])                core_type (typing/types.mli[247,9431+23]..[247,9431+26])
                  Ptyp_constr "int" (typing/types.mli[247,9431+23]..[247,9431+26])
                  []
              (typing/types.mli[248,9459+8]..[248,9459+15])
                Immutable
                "id" (typing/types.mli[248,9459+8]..[248,9459+10])                core_type (typing/types.mli[248,9459+12]..[248,9459+15])
                  Ptyp_constr "int" (typing/types.mli[248,9459+12]..[248,9459+15])
                  []
            ]
        ptype_private = Private
        ptype_manifest =
          None
    ]
  signature_item (typing/types.mli[250,9478+0]..[265,10100+3])
    Psig_module "Transient_expr" (typing/types.mli[250,9478+7]..[250,9478+21])
    module_type (typing/types.mli[250,9478+24]..[265,10100+3])
      Pmty_signature
      [
        signature_item (typing/types.mli[251,9506+2]..[251,9506+39])
          Psig_attribute "ocaml.text"
          [
            structure_item (typing/types.mli[251,9506+2]..[251,9506+39])
              Pstr_eval
              expression (typing/types.mli[251,9506+2]..[251,9506+39])
                Pexp_constant PConst_string(" Operations on [transient_expr] ",(typing/types.mli[251,9506+2]..[251,9506+39]),None)
          ]
        signature_item (typing/types.mli[253,9547+2]..[253,9547+80])
          Psig_value
          value_description "create" (typing/types.mli[253,9547+6]..[253,9547+12]) (typing/types.mli[253,9547+2]..[253,9547+80])
            core_type (typing/types.mli[253,9547+14]..[253,9547+80])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[253,9547+14]..[253,9547+23])
                Ptyp_constr "type_desc" (typing/types.mli[253,9547+14]..[253,9547+23])
                []
              core_type (typing/types.mli[253,9547+27]..[253,9547+80])
                Ptyp_arrow
                Labelled "level"
                core_type (typing/types.mli[253,9547+34]..[253,9547+37])
                  Ptyp_constr "int" (typing/types.mli[253,9547+34]..[253,9547+37])
                  []
                core_type (typing/types.mli[253,9547+41]..[253,9547+80])
                  Ptyp_arrow
                  Labelled "scope"
                  core_type (typing/types.mli[253,9547+48]..[253,9547+51])
                    Ptyp_constr "int" (typing/types.mli[253,9547+48]..[253,9547+51])
                    []
                  core_type (typing/types.mli[253,9547+55]..[253,9547+80])
                    Ptyp_arrow
                    Labelled "id"
                    core_type (typing/types.mli[253,9547+59]..[253,9547+62])
                      Ptyp_constr "int" (typing/types.mli[253,9547+59]..[253,9547+62])
                      []
                    core_type (typing/types.mli[253,9547+66]..[253,9547+80])
                      Ptyp_constr "transient_expr" (typing/types.mli[253,9547+66]..[253,9547+80])
                      []
            []
        signature_item (typing/types.mli[254,9628+2]..[254,9628+51])
          Psig_value
          value_description "set_desc" (typing/types.mli[254,9628+6]..[254,9628+14]) (typing/types.mli[254,9628+2]..[254,9628+51])
            core_type (typing/types.mli[254,9628+16]..[254,9628+51])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[254,9628+16]..[254,9628+30])
                Ptyp_constr "transient_expr" (typing/types.mli[254,9628+16]..[254,9628+30])
                []
              core_type (typing/types.mli[254,9628+34]..[254,9628+51])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[254,9628+34]..[254,9628+43])
                  Ptyp_constr "type_desc" (typing/types.mli[254,9628+34]..[254,9628+43])
                  []
                core_type (typing/types.mli[254,9628+47]..[254,9628+51])
                  Ptyp_constr "unit" (typing/types.mli[254,9628+47]..[254,9628+51])
                  []
            []
        signature_item (typing/types.mli[255,9680+2]..[255,9680+46])
          Psig_value
          value_description "set_level" (typing/types.mli[255,9680+6]..[255,9680+15]) (typing/types.mli[255,9680+2]..[255,9680+46])
            core_type (typing/types.mli[255,9680+17]..[255,9680+46])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[255,9680+17]..[255,9680+31])
                Ptyp_constr "transient_expr" (typing/types.mli[255,9680+17]..[255,9680+31])
                []
              core_type (typing/types.mli[255,9680+35]..[255,9680+46])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[255,9680+35]..[255,9680+38])
                  Ptyp_constr "int" (typing/types.mli[255,9680+35]..[255,9680+38])
                  []
                core_type (typing/types.mli[255,9680+42]..[255,9680+46])
                  Ptyp_constr "unit" (typing/types.mli[255,9680+42]..[255,9680+46])
                  []
            []
        signature_item (typing/types.mli[256,9727+2]..[256,9727+46])
          Psig_value
          value_description "set_scope" (typing/types.mli[256,9727+6]..[256,9727+15]) (typing/types.mli[256,9727+2]..[256,9727+46])
            core_type (typing/types.mli[256,9727+17]..[256,9727+46])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[256,9727+17]..[256,9727+31])
                Ptyp_constr "transient_expr" (typing/types.mli[256,9727+17]..[256,9727+31])
                []
              core_type (typing/types.mli[256,9727+35]..[256,9727+46])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[256,9727+35]..[256,9727+38])
                  Ptyp_constr "int" (typing/types.mli[256,9727+35]..[256,9727+38])
                  []
                core_type (typing/types.mli[256,9727+42]..[256,9727+46])
                  Ptyp_constr "unit" (typing/types.mli[256,9727+42]..[256,9727+46])
                  []
            []
        signature_item (typing/types.mli[257,9774+2]..[257,9774+39])
          Psig_value
          value_description "repr" (typing/types.mli[257,9774+6]..[257,9774+10]) (typing/types.mli[257,9774+2]..[257,9774+39])
            core_type (typing/types.mli[257,9774+12]..[257,9774+39])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[257,9774+12]..[257,9774+21])
                Ptyp_constr "type_expr" (typing/types.mli[257,9774+12]..[257,9774+21])
                []
              core_type (typing/types.mli[257,9774+25]..[257,9774+39])
                Ptyp_constr "transient_expr" (typing/types.mli[257,9774+25]..[257,9774+39])
                []
            []
        signature_item (typing/types.mli[258,9814+2]..[258,9814+44])
          Psig_value
          value_description "type_expr" (typing/types.mli[258,9814+6]..[258,9814+15]) (typing/types.mli[258,9814+2]..[258,9814+44])
            core_type (typing/types.mli[258,9814+17]..[258,9814+44])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[258,9814+17]..[258,9814+31])
                Ptyp_constr "transient_expr" (typing/types.mli[258,9814+17]..[258,9814+31])
                []
              core_type (typing/types.mli[258,9814+35]..[258,9814+44])
                Ptyp_constr "type_expr" (typing/types.mli[258,9814+35]..[258,9814+44])
                []
            []
        signature_item (typing/types.mli[259,9859+2]..[259,9859+41])
          Psig_value
          value_description "coerce" (typing/types.mli[259,9859+6]..[259,9859+12]) (typing/types.mli[259,9859+2]..[259,9859+41])
            attribute "ocaml.doc"
              [
                structure_item (typing/types.mli[260,9901+6]..[260,9901+51])
                  Pstr_eval
                  expression (typing/types.mli[260,9901+6]..[260,9901+51])
                    Pexp_constant PConst_string(" Coerce without normalizing with [repr] ",(typing/types.mli[260,9901+6]..[260,9901+51]),None)
              ]
            core_type (typing/types.mli[259,9859+14]..[259,9859+41])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[259,9859+14]..[259,9859+23])
                Ptyp_constr "type_expr" (typing/types.mli[259,9859+14]..[259,9859+23])
                []
              core_type (typing/types.mli[259,9859+27]..[259,9859+41])
                Ptyp_constr "transient_expr" (typing/types.mli[259,9859+27]..[259,9859+41])
                []
            []
        signature_item (typing/types.mli[262,9954+2]..[262,9954+51])
          Psig_value
          value_description "set_stub_desc" (typing/types.mli[262,9954+6]..[262,9954+19]) (typing/types.mli[262,9954+2]..[262,9954+51])
            attribute "ocaml.doc"
              [
                structure_item (typing/types.mli[263,10006+6]..[264,10057+42])
                  Pstr_eval
                  expression (typing/types.mli[263,10006+6]..[264,10057+42])
                    Pexp_constant PConst_string(" Instantiate a not yet instantiated stub.\n          Fail if already instantiated. ",(typing/types.mli[263,10006+6]..[264,10057+42]),None)
              ]
            core_type (typing/types.mli[262,9954+21]..[262,9954+51])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[262,9954+21]..[262,9954+30])
                Ptyp_constr "type_expr" (typing/types.mli[262,9954+21]..[262,9954+30])
                []
              core_type (typing/types.mli[262,9954+34]..[262,9954+51])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[262,9954+34]..[262,9954+43])
                  Ptyp_constr "type_desc" (typing/types.mli[262,9954+34]..[262,9954+43])
                  []
                core_type (typing/types.mli[262,9954+47]..[262,9954+51])
                  Ptyp_constr "unit" (typing/types.mli[262,9954+47]..[262,9954+51])
                  []
            []
      ]
  signature_item (typing/types.mli[267,10105+0]..[267,10105+78])
    Psig_value
    value_description "create_expr" (typing/types.mli[267,10105+4]..[267,10105+15]) (typing/types.mli[267,10105+0]..[267,10105+78])
      core_type (typing/types.mli[267,10105+17]..[267,10105+78])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[267,10105+17]..[267,10105+26])
          Ptyp_constr "type_desc" (typing/types.mli[267,10105+17]..[267,10105+26])
          []
        core_type (typing/types.mli[267,10105+30]..[267,10105+78])
          Ptyp_arrow
          Labelled "level"
          core_type (typing/types.mli[267,10105+37]..[267,10105+40])
            Ptyp_constr "int" (typing/types.mli[267,10105+37]..[267,10105+40])
            []
          core_type (typing/types.mli[267,10105+44]..[267,10105+78])
            Ptyp_arrow
            Labelled "scope"
            core_type (typing/types.mli[267,10105+51]..[267,10105+54])
              Ptyp_constr "int" (typing/types.mli[267,10105+51]..[267,10105+54])
              []
            core_type (typing/types.mli[267,10105+58]..[267,10105+78])
              Ptyp_arrow
              Labelled "id"
              core_type (typing/types.mli[267,10105+62]..[267,10105+65])
                Ptyp_constr "int" (typing/types.mli[267,10105+62]..[267,10105+65])
                []
              core_type (typing/types.mli[267,10105+69]..[267,10105+78])
                Ptyp_constr "type_expr" (typing/types.mli[267,10105+69]..[267,10105+78])
                []
      []
  signature_item (typing/types.mli[269,10185+0]..[269,10185+49])
    Psig_attribute "ocaml.text"
    [
      structure_item (typing/types.mli[269,10185+0]..[269,10185+49])
        Pstr_eval
        expression (typing/types.mli[269,10185+0]..[269,10185+49])
          Pexp_constant PConst_string(" Functions and definitions moved from Btype ",(typing/types.mli[269,10185+0]..[269,10185+49]),None)
    ]
  signature_item (typing/types.mli[271,10236+0]..[271,10236+60])
    Psig_value
    value_description "newty3" (typing/types.mli[271,10236+4]..[271,10236+10]) (typing/types.mli[271,10236+0]..[271,10236+60])
      attribute "ocaml.doc"
        [
          structure_item (typing/types.mli[272,10297+8]..[272,10297+44])
            Pstr_eval
            expression (typing/types.mli[272,10297+8]..[272,10297+44])
              Pexp_constant PConst_string(" Create a type with a fresh id ",(typing/types.mli[272,10297+8]..[272,10297+44]),None)
        ]
      core_type (typing/types.mli[271,10236+12]..[271,10236+60])
        Ptyp_arrow
        Labelled "level"
        core_type (typing/types.mli[271,10236+18]..[271,10236+21])
          Ptyp_constr "int" (typing/types.mli[271,10236+18]..[271,10236+21])
          []
        core_type (typing/types.mli[271,10236+25]..[271,10236+60])
          Ptyp_arrow
          Labelled "scope"
          core_type (typing/types.mli[271,10236+31]..[271,10236+34])
            Ptyp_constr "int" (typing/types.mli[271,10236+31]..[271,10236+34])
            []
          core_type (typing/types.mli[271,10236+38]..[271,10236+60])
            Ptyp_arrow
            Nolabel
            core_type (typing/types.mli[271,10236+38]..[271,10236+47])
              Ptyp_constr "type_desc" (typing/types.mli[271,10236+38]..[271,10236+47])
              []
            core_type (typing/types.mli[271,10236+51]..[271,10236+60])
              Ptyp_constr "type_expr" (typing/types.mli[271,10236+51]..[271,10236+60])
              []
      []
  signature_item (typing/types.mli[274,10343+0]..[274,10343+47])
    Psig_value
    value_description "newty2" (typing/types.mli[274,10343+4]..[274,10343+10]) (typing/types.mli[274,10343+0]..[274,10343+47])
      attribute "ocaml.doc"
        [
          structure_item (typing/types.mli[275,10391+8]..[275,10391+57])
            Pstr_eval
            expression (typing/types.mli[275,10391+8]..[275,10391+57])
              Pexp_constant PConst_string(" Create a type with a fresh id and no scope ",(typing/types.mli[275,10391+8]..[275,10391+57]),None)
        ]
      core_type (typing/types.mli[274,10343+12]..[274,10343+47])
        Ptyp_arrow
        Labelled "level"
        core_type (typing/types.mli[274,10343+18]..[274,10343+21])
          Ptyp_constr "int" (typing/types.mli[274,10343+18]..[274,10343+21])
          []
        core_type (typing/types.mli[274,10343+25]..[274,10343+47])
          Ptyp_arrow
          Nolabel
          core_type (typing/types.mli[274,10343+25]..[274,10343+34])
            Ptyp_constr "type_desc" (typing/types.mli[274,10343+25]..[274,10343+34])
            []
          core_type (typing/types.mli[274,10343+38]..[274,10343+47])
            Ptyp_constr "type_expr" (typing/types.mli[274,10343+38]..[274,10343+47])
            []
      []
  signature_item (typing/types.mli[277,10450+0]..[277,10450+45])
    Psig_value
    value_description "field_kind_repr" (typing/types.mli[277,10450+4]..[277,10450+19]) (typing/types.mli[277,10450+0]..[277,10450+45])
      attribute "ocaml.doc"
        [
          structure_item (typing/types.mli[278,10496+8]..[278,10496+75])
            Pstr_eval
            expression (typing/types.mli[278,10496+8]..[278,10496+75])
              Pexp_constant PConst_string(" Return the canonical representative of an object field kind. ",(typing/types.mli[278,10496+8]..[278,10496+75]),None)
        ]
      core_type (typing/types.mli[277,10450+21]..[277,10450+45])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[277,10450+21]..[277,10450+31])
          Ptyp_constr "field_kind" (typing/types.mli[277,10450+21]..[277,10450+31])
          []
        core_type (typing/types.mli[277,10450+35]..[277,10450+45])
          Ptyp_constr "field_kind" (typing/types.mli[277,10450+35]..[277,10450+45])
          []
      []
  signature_item (typing/types.mli[280,10573+0]..[287,10745+3])
    Psig_module "TransientTypeOps" (typing/types.mli[280,10573+7]..[280,10573+23])
    module_type (typing/types.mli[280,10573+26]..[287,10745+3])
      Pmty_signature
      [
        signature_item (typing/types.mli[281,10603+2]..[281,10603+33])
          Psig_attribute "ocaml.text"
          [
            structure_item (typing/types.mli[281,10603+2]..[281,10603+33])
              Pstr_eval
              expression (typing/types.mli[281,10603+2]..[281,10603+33])
                Pexp_constant PConst_string(" Comparisons for functors ",(typing/types.mli[281,10603+2]..[281,10603+33]),None)
          ]
        signature_item (typing/types.mli[283,10638+2]..[283,10638+25])
          Psig_type Rec
          [
            type_declaration "t" (typing/types.mli[283,10638+7]..[283,10638+8]) (typing/types.mli[283,10638+2]..[283,10638+25])
              ptype_params =
                []
              ptype_cstrs =
                []
              ptype_kind =
                Ptype_abstract
              ptype_private = Public
              ptype_manifest =
                Some
                  core_type (typing/types.mli[283,10638+11]..[283,10638+25])
                    Ptyp_constr "transient_expr" (typing/types.mli[283,10638+11]..[283,10638+25])
                    []
          ]
        signature_item (typing/types.mli[284,10664+2]..[284,10664+29])
          Psig_value
          value_description "compare" (typing/types.mli[284,10664+6]..[284,10664+13]) (typing/types.mli[284,10664+2]..[284,10664+29])
            core_type (typing/types.mli[284,10664+16]..[284,10664+29])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[284,10664+16]..[284,10664+17])
                Ptyp_constr "t" (typing/types.mli[284,10664+16]..[284,10664+17])
                []
              core_type (typing/types.mli[284,10664+21]..[284,10664+29])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[284,10664+21]..[284,10664+22])
                  Ptyp_constr "t" (typing/types.mli[284,10664+21]..[284,10664+22])
                  []
                core_type (typing/types.mli[284,10664+26]..[284,10664+29])
                  Ptyp_constr "int" (typing/types.mli[284,10664+26]..[284,10664+29])
                  []
            []
        signature_item (typing/types.mli[285,10694+2]..[285,10694+28])
          Psig_value
          value_description "equal" (typing/types.mli[285,10694+6]..[285,10694+11]) (typing/types.mli[285,10694+2]..[285,10694+28])
            core_type (typing/types.mli[285,10694+14]..[285,10694+28])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[285,10694+14]..[285,10694+15])
                Ptyp_constr "t" (typing/types.mli[285,10694+14]..[285,10694+15])
                []
              core_type (typing/types.mli[285,10694+19]..[285,10694+28])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[285,10694+19]..[285,10694+20])
                  Ptyp_constr "t" (typing/types.mli[285,10694+19]..[285,10694+20])
                  []
                core_type (typing/types.mli[285,10694+24]..[285,10694+28])
                  Ptyp_constr "bool" (typing/types.mli[285,10694+24]..[285,10694+28])
                  []
            []
        signature_item (typing/types.mli[286,10723+2]..[286,10723+21])
          Psig_value
          value_description "hash" (typing/types.mli[286,10723+6]..[286,10723+10]) (typing/types.mli[286,10723+2]..[286,10723+21])
            core_type (typing/types.mli[286,10723+13]..[286,10723+21])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[286,10723+13]..[286,10723+14])
                Ptyp_constr "t" (typing/types.mli[286,10723+13]..[286,10723+14])
                []
              core_type (typing/types.mli[286,10723+18]..[286,10723+21])
                Ptyp_constr "int" (typing/types.mli[286,10723+18]..[286,10723+21])
                []
            []
      ]
  signature_item (typing/types.mli[289,10750+0]..[289,10750+63])
    Psig_attribute "ocaml.text"
    [
      structure_item (typing/types.mli[289,10750+0]..[289,10750+63])
        Pstr_eval
        expression (typing/types.mli[289,10750+0]..[289,10750+63])
          Pexp_constant PConst_string(" Comparisons for [type_expr]; cannot be used for functors ",(typing/types.mli[289,10750+0]..[289,10750+63]),None)
    ]
  signature_item (typing/types.mli[291,10815+0]..[291,10815+43])
    Psig_value
    value_description "eq_type" (typing/types.mli[291,10815+4]..[291,10815+11]) (typing/types.mli[291,10815+0]..[291,10815+43])
      core_type (typing/types.mli[291,10815+13]..[291,10815+43])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[291,10815+13]..[291,10815+22])
          Ptyp_constr "type_expr" (typing/types.mli[291,10815+13]..[291,10815+22])
          []
        core_type (typing/types.mli[291,10815+26]..[291,10815+43])
          Ptyp_arrow
          Nolabel
          core_type (typing/types.mli[291,10815+26]..[291,10815+35])
            Ptyp_constr "type_expr" (typing/types.mli[291,10815+26]..[291,10815+35])
            []
          core_type (typing/types.mli[291,10815+39]..[291,10815+43])
            Ptyp_constr "bool" (typing/types.mli[291,10815+39]..[291,10815+43])
            []
      []
  signature_item (typing/types.mli[292,10859+0]..[292,10859+47])
    Psig_value
    value_description "compare_type" (typing/types.mli[292,10859+4]..[292,10859+16]) (typing/types.mli[292,10859+0]..[292,10859+47])
      core_type (typing/types.mli[292,10859+18]..[292,10859+47])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[292,10859+18]..[292,10859+27])
          Ptyp_constr "type_expr" (typing/types.mli[292,10859+18]..[292,10859+27])
          []
        core_type (typing/types.mli[292,10859+31]..[292,10859+47])
          Ptyp_arrow
          Nolabel
          core_type (typing/types.mli[292,10859+31]..[292,10859+40])
            Ptyp_constr "type_expr" (typing/types.mli[292,10859+31]..[292,10859+40])
            []
          core_type (typing/types.mli[292,10859+44]..[292,10859+47])
            Ptyp_constr "int" (typing/types.mli[292,10859+44]..[292,10859+47])
            []
      []
  signature_item (typing/types.mli[296,10915+0]..[309,11209+3])
    Psig_module "Uid" (typing/types.mli[296,10915+7]..[296,10915+10])
    module_type (typing/types.mli[296,10915+13]..[309,11209+3])
      Pmty_signature
      [
        signature_item (typing/types.mli[297,10932+2]..[297,10932+8])
          Psig_type Rec
          [
            type_declaration "t" (typing/types.mli[297,10932+7]..[297,10932+8]) (typing/types.mli[297,10932+2]..[297,10932+8])
              ptype_params =
                []
              ptype_cstrs =
                []
              ptype_kind =
                Ptype_abstract
              ptype_private = Public
              ptype_manifest =
                None
          ]
        signature_item (typing/types.mli[299,10942+2]..[299,10942+27])
          Psig_value
          value_description "reinit" (typing/types.mli[299,10942+6]..[299,10942+12]) (typing/types.mli[299,10942+2]..[299,10942+27])
            core_type (typing/types.mli[299,10942+15]..[299,10942+27])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[299,10942+15]..[299,10942+19])
                Ptyp_constr "unit" (typing/types.mli[299,10942+15]..[299,10942+19])
                []
              core_type (typing/types.mli[299,10942+23]..[299,10942+27])
                Ptyp_constr "unit" (typing/types.mli[299,10942+23]..[299,10942+27])
                []
            []
        signature_item (typing/types.mli[301,10971+2]..[301,10971+35])
          Psig_value
          value_description "mk" (typing/types.mli[301,10971+6]..[301,10971+8]) (typing/types.mli[301,10971+2]..[301,10971+35])
            core_type (typing/types.mli[301,10971+11]..[301,10971+35])
              Ptyp_arrow
              Labelled "current_unit"
              core_type (typing/types.mli[301,10971+24]..[301,10971+30])
                Ptyp_constr "string" (typing/types.mli[301,10971+24]..[301,10971+30])
                []
              core_type (typing/types.mli[301,10971+34]..[301,10971+35])
                Ptyp_constr "t" (typing/types.mli[301,10971+34]..[301,10971+35])
                []
            []
        signature_item (typing/types.mli[302,11007+2]..[302,11007+43])
          Psig_value
          value_description "of_compilation_unit_id" (typing/types.mli[302,11007+6]..[302,11007+28]) (typing/types.mli[302,11007+2]..[302,11007+43])
            core_type (typing/types.mli[302,11007+31]..[302,11007+43])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[302,11007+31]..[302,11007+38])
                Ptyp_constr "Ident.t" (typing/types.mli[302,11007+31]..[302,11007+38])
                []
              core_type (typing/types.mli[302,11007+42]..[302,11007+43])
                Ptyp_constr "t" (typing/types.mli[302,11007+42]..[302,11007+43])
                []
            []
        signature_item (typing/types.mli[303,11051+2]..[303,11051+33])
          Psig_value
          value_description "of_predef_id" (typing/types.mli[303,11051+6]..[303,11051+18]) (typing/types.mli[303,11051+2]..[303,11051+33])
            core_type (typing/types.mli[303,11051+21]..[303,11051+33])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[303,11051+21]..[303,11051+28])
                Ptyp_constr "Ident.t" (typing/types.mli[303,11051+21]..[303,11051+28])
                []
              core_type (typing/types.mli[303,11051+32]..[303,11051+33])
                Ptyp_constr "t" (typing/types.mli[303,11051+32]..[303,11051+33])
                []
            []
        signature_item (typing/types.mli[304,11085+2]..[304,11085+38])
          Psig_value
          value_description "internal_not_actually_unique" (typing/types.mli[304,11085+6]..[304,11085+34]) (typing/types.mli[304,11085+2]..[304,11085+38])
            core_type (typing/types.mli[304,11085+37]..[304,11085+38])
              Ptyp_constr "t" (typing/types.mli[304,11085+37]..[304,11085+38])
              []
            []
        signature_item (typing/types.mli[306,11125+2]..[306,11125+40])
          Psig_value
          value_description "for_actual_declaration" (typing/types.mli[306,11125+6]..[306,11125+28]) (typing/types.mli[306,11125+2]..[306,11125+40])
            core_type (typing/types.mli[306,11125+31]..[306,11125+40])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[306,11125+31]..[306,11125+32])
                Ptyp_constr "t" (typing/types.mli[306,11125+31]..[306,11125+32])
                []
              core_type (typing/types.mli[306,11125+36]..[306,11125+40])
                Ptyp_constr "bool" (typing/types.mli[306,11125+36]..[306,11125+40])
                []
            []
        signature_item (typing/types.mli[308,11167+2]..[308,11167+41])
          Psig_include
          module_type (typing/types.mli[308,11167+10]..[308,11167+41])
            Pmty_with
            module_type (typing/types.mli[308,11167+10]..[308,11167+24])
              Pmty_ident "Identifiable.S" (typing/types.mli[308,11167+10]..[308,11167+24])
            [
              Pwith_typesubst "t" (typing/types.mli[308,11167+35]..[308,11167+36])
                type_declaration "t" (typing/types.mli[308,11167+35]..[308,11167+36]) (typing/types.mli[308,11167+30]..[308,11167+41])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (typing/types.mli[308,11167+40]..[308,11167+41])
                        Ptyp_constr "t" (typing/types.mli[308,11167+40]..[308,11167+41])
                        []
            ]
      ]
  signature_item (typing/types.mli[313,11269+0]..[313,11269+45])
    Psig_module "MethSet" (typing/types.mli[313,11269+7]..[313,11269+14])
    module_type (typing/types.mli[313,11269+17]..[313,11269+45])
      Pmty_with
      module_type (typing/types.mli[313,11269+17]..[313,11269+22])
        Pmty_ident "Set.S" (typing/types.mli[313,11269+17]..[313,11269+22])
      [
        Pwith_type "elt" (typing/types.mli[313,11269+33]..[313,11269+36])
          type_declaration "elt" (typing/types.mli[313,11269+33]..[313,11269+36]) (typing/types.mli[313,11269+28]..[313,11269+45])
            ptype_params =
              []
            ptype_cstrs =
              []
            ptype_kind =
              Ptype_abstract
            ptype_private = Public
            ptype_manifest =
              Some
                core_type (typing/types.mli[313,11269+39]..[313,11269+45])
                  Ptyp_constr "string" (typing/types.mli[313,11269+39]..[313,11269+45])
                  []
      ]
  signature_item (typing/types.mli[314,11315+0]..[314,11315+44])
    Psig_module "VarSet" (typing/types.mli[314,11315+7]..[314,11315+13])
    module_type (typing/types.mli[314,11315+16]..[314,11315+44])
      Pmty_with
      module_type (typing/types.mli[314,11315+16]..[314,11315+21])
        Pmty_ident "Set.S" (typing/types.mli[314,11315+16]..[314,11315+21])
      [
        Pwith_type "elt" (typing/types.mli[314,11315+32]..[314,11315+35])
          type_declaration "elt" (typing/types.mli[314,11315+32]..[314,11315+35]) (typing/types.mli[314,11315+27]..[314,11315+44])
            ptype_params =
              []
            ptype_cstrs =
              []
            ptype_kind =
              Ptype_abstract
            ptype_private = Public
            ptype_manifest =
              Some
                core_type (typing/types.mli[314,11315+38]..[314,11315+44])
                  Ptyp_constr "string" (typing/types.mli[314,11315+38]..[314,11315+44])
                  []
      ]
  signature_item (typing/types.mli[316,11361+0]..[316,11361+43])
    Psig_module "Meths" (typing/types.mli[316,11361+7]..[316,11361+12])
    module_type (typing/types.mli[316,11361+15]..[316,11361+43])
      Pmty_with
      module_type (typing/types.mli[316,11361+15]..[316,11361+20])
        Pmty_ident "Map.S" (typing/types.mli[316,11361+15]..[316,11361+20])
      [
        Pwith_type "key" (typing/types.mli[316,11361+31]..[316,11361+34])
          type_declaration "key" (typing/types.mli[316,11361+31]..[316,11361+34]) (typing/types.mli[316,11361+26]..[316,11361+43])
            ptype_params =
              []
            ptype_cstrs =
              []
            ptype_kind =
              Ptype_abstract
            ptype_private = Public
            ptype_manifest =
              Some
                core_type (typing/types.mli[316,11361+37]..[316,11361+43])
                  Ptyp_constr "string" (typing/types.mli[316,11361+37]..[316,11361+43])
                  []
      ]
  signature_item (typing/types.mli[317,11405+0]..[317,11405+43])
    Psig_module "Vars" (typing/types.mli[317,11405+7]..[317,11405+11])
    module_type (typing/types.mli[317,11405+15]..[317,11405+43])
      Pmty_with
      module_type (typing/types.mli[317,11405+15]..[317,11405+20])
        Pmty_ident "Map.S" (typing/types.mli[317,11405+15]..[317,11405+20])
      [
        Pwith_type "key" (typing/types.mli[317,11405+31]..[317,11405+34])
          type_declaration "key" (typing/types.mli[317,11405+31]..[317,11405+34]) (typing/types.mli[317,11405+26]..[317,11405+43])
            ptype_params =
              []
            ptype_cstrs =
              []
            ptype_kind =
              Ptype_abstract
            ptype_private = Public
            ptype_manifest =
              Some
                core_type (typing/types.mli[317,11405+37]..[317,11405+43])
                  Ptyp_constr "string" (typing/types.mli[317,11405+37]..[317,11405+43])
                  []
      ]
  signature_item (typing/types.mli[321,11476+0]..[346,12382+76])
    Psig_type Rec
    [
      type_declaration "value_description" (typing/types.mli[321,11476+5]..[321,11476+22]) (typing/types.mli[321,11476+0]..[327,11678+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.mli[322,11501+4]..[322,11501+24])
                Immutable
                "val_type" (typing/types.mli[322,11501+4]..[322,11501+12])                core_type (typing/types.mli[322,11501+14]..[322,11501+23])
                  Ptyp_constr "type_expr" (typing/types.mli[322,11501+14]..[322,11501+23])
                  []
              (typing/types.mli[323,11565+4]..[323,11565+25])
                Immutable
                "val_kind" (typing/types.mli[323,11565+4]..[323,11565+12])                core_type (typing/types.mli[323,11565+14]..[323,11565+24])
                  Ptyp_constr "value_kind" (typing/types.mli[323,11565+14]..[323,11565+24])
                  []
              (typing/types.mli[324,11591+4]..[324,11591+24])
                Immutable
                "val_loc" (typing/types.mli[324,11591+4]..[324,11591+11])                core_type (typing/types.mli[324,11591+13]..[324,11591+23])
                  Ptyp_constr "Location.t" (typing/types.mli[324,11591+13]..[324,11591+23])
                  []
              (typing/types.mli[325,11616+4]..[325,11616+41])
                Immutable
                "val_attributes" (typing/types.mli[325,11616+4]..[325,11616+18])                core_type (typing/types.mli[325,11616+20]..[325,11616+40])
                  Ptyp_constr "Parsetree.attributes" (typing/types.mli[325,11616+20]..[325,11616+40])
                  []
              (typing/types.mli[326,11658+4]..[326,11658+19])
                Immutable
                "val_uid" (typing/types.mli[326,11658+4]..[326,11658+11])                core_type (typing/types.mli[326,11658+13]..[326,11658+18])
                  Ptyp_constr "Uid.t" (typing/types.mli[326,11658+13]..[326,11658+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "value_kind" (typing/types.mli[329,11683+4]..[329,11683+14]) (typing/types.mli[329,11683+0]..[335,12014+57])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[330,11700+4]..[330,11700+11])
                "Val_reg" (typing/types.mli[330,11700+4]..[330,11700+11])
                []
                None
              (typing/types.mli[331,11760+2]..[331,11760+37])
                "Val_prim" (typing/types.mli[331,11760+4]..[331,11760+12])
                [
                  core_type (typing/types.mli[331,11760+16]..[331,11760+37])
                    Ptyp_constr "Primitive.description" (typing/types.mli[331,11760+16]..[331,11760+37])
                    []
                ]
                None
              (typing/types.mli[332,11816+2]..[332,11816+37])
                "Val_ivar" (typing/types.mli[332,11816+4]..[332,11816+12])
                [
                  core_type (typing/types.mli[332,11816+16]..[332,11816+28])
                    Ptyp_constr "mutable_flag" (typing/types.mli[332,11816+16]..[332,11816+28])
                    []
                  core_type (typing/types.mli[332,11816+31]..[332,11816+37])
                    Ptyp_constr "string" (typing/types.mli[332,11816+31]..[332,11816+37])
                    []
                ]
                None
              (typing/types.mli[333,11892+2]..[333,11892+70])
                "Val_self" (typing/types.mli[333,11892+4]..[333,11892+12])
                [
                  core_type (typing/types.mli[333,11892+16]..[333,11892+31])
                    Ptyp_constr "class_signature" (typing/types.mli[333,11892+16]..[333,11892+31])
                    []
                  core_type (typing/types.mli[333,11892+34]..[333,11892+44])
                    Ptyp_constr "self_meths" (typing/types.mli[333,11892+34]..[333,11892+44])
                    []
                  core_type (typing/types.mli[333,11892+47]..[333,11892+61])
                    Ptyp_constr "Vars.t" (typing/types.mli[333,11892+55]..[333,11892+61])
                    [
                      core_type (typing/types.mli[333,11892+47]..[333,11892+54])
                        Ptyp_constr "Ident.t" (typing/types.mli[333,11892+47]..[333,11892+54])
                        []
                    ]
                  core_type (typing/types.mli[333,11892+64]..[333,11892+70])
                    Ptyp_constr "string" (typing/types.mli[333,11892+64]..[333,11892+70])
                    []
                ]
                None
              (typing/types.mli[335,12014+2]..[335,12014+57])
                "Val_anc" (typing/types.mli[335,12014+4]..[335,12014+11])
                [
                  core_type (typing/types.mli[335,12014+15]..[335,12014+30])
                    Ptyp_constr "class_signature" (typing/types.mli[335,12014+15]..[335,12014+30])
                    []
                  core_type (typing/types.mli[335,12014+33]..[335,12014+48])
                    Ptyp_constr "Meths.t" (typing/types.mli[335,12014+41]..[335,12014+48])
                    [
                      core_type (typing/types.mli[335,12014+33]..[335,12014+40])
                        Ptyp_constr "Ident.t" (typing/types.mli[335,12014+33]..[335,12014+40])
                        []
                    ]
                  core_type (typing/types.mli[335,12014+51]..[335,12014+57])
                    Ptyp_constr "string" (typing/types.mli[335,12014+51]..[335,12014+57])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "self_meths" (typing/types.mli[338,12128+4]..[338,12128+14]) (typing/types.mli[338,12128+0]..[340,12182+39])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[339,12145+2]..[339,12145+36])
                "Self_concrete" (typing/types.mli[339,12145+4]..[339,12145+17])
                [
                  core_type (typing/types.mli[339,12145+21]..[339,12145+36])
                    Ptyp_constr "Meths.t" (typing/types.mli[339,12145+29]..[339,12145+36])
                    [
                      core_type (typing/types.mli[339,12145+21]..[339,12145+28])
                        Ptyp_constr "Ident.t" (typing/types.mli[339,12145+21]..[339,12145+28])
                        []
                    ]
                ]
                None
              (typing/types.mli[340,12182+2]..[340,12182+39])
                "Self_virtual" (typing/types.mli[340,12182+4]..[340,12182+16])
                [
                  core_type (typing/types.mli[340,12182+20]..[340,12182+39])
                    Ptyp_constr "ref" (typing/types.mli[340,12182+36]..[340,12182+39])
                    [
                      core_type (typing/types.mli[340,12182+20]..[340,12182+35])
                        Ptyp_constr "Meths.t" (typing/types.mli[340,12182+28]..[340,12182+35])
                        [
                          core_type (typing/types.mli[340,12182+20]..[340,12182+27])
                            Ptyp_constr "Ident.t" (typing/types.mli[340,12182+20]..[340,12182+27])
                            []
                        ]
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "class_signature" (typing/types.mli[342,12223+4]..[342,12223+19]) (typing/types.mli[342,12223+0]..[346,12382+76])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.mli[343,12245+4]..[343,12245+25])
                Immutable
                "csig_self" (typing/types.mli[343,12245+4]..[343,12245+13])                core_type (typing/types.mli[343,12245+15]..[343,12245+24])
                  Ptyp_constr "type_expr" (typing/types.mli[343,12245+15]..[343,12245+24])
                  []
              (typing/types.mli[344,12271+4]..[344,12271+37])
                Mutable
                "csig_self_row" (typing/types.mli[344,12271+12]..[344,12271+25])                core_type (typing/types.mli[344,12271+27]..[344,12271+36])
                  Ptyp_constr "type_expr" (typing/types.mli[344,12271+27]..[344,12271+36])
                  []
              (typing/types.mli[345,12309+4]..[345,12309+72])
                Mutable
                "csig_vars" (typing/types.mli[345,12309+12]..[345,12309+21])                core_type (typing/types.mli[345,12309+23]..[345,12309+71])
                  Ptyp_constr "Vars.t" (typing/types.mli[345,12309+65]..[345,12309+71])
                  [
                    core_type (typing/types.mli[345,12309+24]..[345,12309+63])
                      Ptyp_tuple
                      [
                        core_type (typing/types.mli[345,12309+24]..[345,12309+36])
                          Ptyp_constr "mutable_flag" (typing/types.mli[345,12309+24]..[345,12309+36])
                          []
                        core_type (typing/types.mli[345,12309+39]..[345,12309+51])
                          Ptyp_constr "virtual_flag" (typing/types.mli[345,12309+39]..[345,12309+51])
                          []
                        core_type (typing/types.mli[345,12309+54]..[345,12309+63])
                          Ptyp_constr "type_expr" (typing/types.mli[345,12309+54]..[345,12309+63])
                          []
                      ]
                  ]
              (typing/types.mli[346,12382+4]..[346,12382+74])
                Mutable
                "csig_meths" (typing/types.mli[346,12382+12]..[346,12382+22])                core_type (typing/types.mli[346,12382+24]..[346,12382+73])
                  Ptyp_constr "Meths.t" (typing/types.mli[346,12382+66]..[346,12382+73])
                  [
                    core_type (typing/types.mli[346,12382+25]..[346,12382+64])
                      Ptyp_tuple
                      [
                        core_type (typing/types.mli[346,12382+25]..[346,12382+37])
                          Ptyp_constr "private_flag" (typing/types.mli[346,12382+25]..[346,12382+37])
                          []
                        core_type (typing/types.mli[346,12382+40]..[346,12382+52])
                          Ptyp_constr "virtual_flag" (typing/types.mli[346,12382+40]..[346,12382+52])
                          []
                        core_type (typing/types.mli[346,12382+55]..[346,12382+64])
                          Ptyp_constr "type_expr" (typing/types.mli[346,12382+55]..[346,12382+64])
                          []
                      ]
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/types.mli[350,12476+0]..[375,13795+3])
    Psig_module "Variance" (typing/types.mli[350,12476+7]..[350,12476+15])
    module_type (typing/types.mli[350,12476+18]..[375,13795+3])
      Pmty_signature
      [
        signature_item (typing/types.mli[351,12498+2]..[351,12498+8])
          Psig_type Rec
          [
            type_declaration "t" (typing/types.mli[351,12498+7]..[351,12498+8]) (typing/types.mli[351,12498+2]..[351,12498+8])
              ptype_params =
                []
              ptype_cstrs =
                []
              ptype_kind =
                Ptype_abstract
              ptype_private = Public
              ptype_manifest =
                None
          ]
        signature_item (typing/types.mli[352,12507+2]..[359,12924+9])
          Psig_type Rec
          [
            type_declaration "f" (typing/types.mli[352,12507+7]..[352,12507+8]) (typing/types.mli[352,12507+2]..[359,12924+9])
              ptype_params =
                []
              ptype_cstrs =
                []
              ptype_kind =
                Ptype_variant
                  [
                    (typing/types.mli[353,12518+6]..[353,12518+13])
                      "May_pos" (typing/types.mli[353,12518+6]..[353,12518+13])
                      []
                      None
                    (typing/types.mli[354,12580+4]..[354,12580+13])
                      "May_neg" (typing/types.mli[354,12580+6]..[354,12580+13])
                      []
                      None
                    (typing/types.mli[355,12642+4]..[355,12642+14])
                      "May_weak" (typing/types.mli[355,12642+6]..[355,12642+14])
                      []
                      None
                    (typing/types.mli[356,12721+4]..[356,12721+9])
                      "Inj" (typing/types.mli[356,12721+6]..[356,12721+9])
                      []
                      None
                    (typing/types.mli[357,12792+4]..[357,12792+9])
                      "Pos" (typing/types.mli[357,12792+6]..[357,12792+9])
                      []
                      None
                    (typing/types.mli[358,12858+4]..[358,12858+9])
                      "Neg" (typing/types.mli[358,12858+6]..[358,12858+9])
                      []
                      None
                    (typing/types.mli[359,12924+4]..[359,12924+9])
                      "Inv" (typing/types.mli[359,12924+6]..[359,12924+9])
                      []
                      None
                  ]
              ptype_private = Public
              ptype_manifest =
                None
          ]
        signature_item (typing/types.mli[360,12998+2]..[360,12998+14])
          Psig_value
          value_description "null" (typing/types.mli[360,12998+6]..[360,12998+10]) (typing/types.mli[360,12998+2]..[360,12998+14])
            core_type (typing/types.mli[360,12998+13]..[360,12998+14])
              Ptyp_constr "t" (typing/types.mli[360,12998+13]..[360,12998+14])
              []
            []
        signature_item (typing/types.mli[361,13047+2]..[361,13047+14])
          Psig_value
          value_description "full" (typing/types.mli[361,13047+6]..[361,13047+10]) (typing/types.mli[361,13047+2]..[361,13047+14])
            core_type (typing/types.mli[361,13047+13]..[361,13047+14])
              Ptyp_constr "t" (typing/types.mli[361,13047+13]..[361,13047+14])
              []
            []
        signature_item (typing/types.mli[362,13113+2]..[362,13113+19])
          Psig_value
          value_description "covariant" (typing/types.mli[362,13113+6]..[362,13113+15]) (typing/types.mli[362,13113+2]..[362,13113+19])
            core_type (typing/types.mli[362,13113+18]..[362,13113+19])
              Ptyp_constr "t" (typing/types.mli[362,13113+18]..[362,13113+19])
              []
            []
        signature_item (typing/types.mli[363,13190+2]..[363,13190+17])
          Psig_value
          value_description "unknown" (typing/types.mli[363,13190+6]..[363,13190+13]) (typing/types.mli[363,13190+2]..[363,13190+17])
            core_type (typing/types.mli[363,13190+16]..[363,13190+17])
              Ptyp_constr "t" (typing/types.mli[363,13190+16]..[363,13190+17])
              []
            []
        signature_item (typing/types.mli[364,13261+2]..[364,13261+26])
          Psig_value
          value_description "union" (typing/types.mli[364,13261+6]..[364,13261+11]) (typing/types.mli[364,13261+2]..[364,13261+26])
            core_type (typing/types.mli[364,13261+15]..[364,13261+26])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[364,13261+15]..[364,13261+16])
                Ptyp_constr "t" (typing/types.mli[364,13261+15]..[364,13261+16])
                []
              core_type (typing/types.mli[364,13261+20]..[364,13261+26])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[364,13261+20]..[364,13261+21])
                  Ptyp_constr "t" (typing/types.mli[364,13261+20]..[364,13261+21])
                  []
                core_type (typing/types.mli[364,13261+25]..[364,13261+26])
                  Ptyp_constr "t" (typing/types.mli[364,13261+25]..[364,13261+26])
                  []
            []
        signature_item (typing/types.mli[365,13288+2]..[365,13288+26])
          Psig_value
          value_description "inter" (typing/types.mli[365,13288+6]..[365,13288+11]) (typing/types.mli[365,13288+2]..[365,13288+26])
            core_type (typing/types.mli[365,13288+15]..[365,13288+26])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[365,13288+15]..[365,13288+16])
                Ptyp_constr "t" (typing/types.mli[365,13288+15]..[365,13288+16])
                []
              core_type (typing/types.mli[365,13288+20]..[365,13288+26])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[365,13288+20]..[365,13288+21])
                  Ptyp_constr "t" (typing/types.mli[365,13288+20]..[365,13288+21])
                  []
                core_type (typing/types.mli[365,13288+25]..[365,13288+26])
                  Ptyp_constr "t" (typing/types.mli[365,13288+25]..[365,13288+26])
                  []
            []
        signature_item (typing/types.mli[366,13315+2]..[366,13315+29])
          Psig_value
          value_description "subset" (typing/types.mli[366,13315+6]..[366,13315+12]) (typing/types.mli[366,13315+2]..[366,13315+29])
            core_type (typing/types.mli[366,13315+15]..[366,13315+29])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[366,13315+15]..[366,13315+16])
                Ptyp_constr "t" (typing/types.mli[366,13315+15]..[366,13315+16])
                []
              core_type (typing/types.mli[366,13315+20]..[366,13315+29])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[366,13315+20]..[366,13315+21])
                  Ptyp_constr "t" (typing/types.mli[366,13315+20]..[366,13315+21])
                  []
                core_type (typing/types.mli[366,13315+25]..[366,13315+29])
                  Ptyp_constr "bool" (typing/types.mli[366,13315+25]..[366,13315+29])
                  []
            []
        signature_item (typing/types.mli[367,13345+2]..[367,13345+25])
          Psig_value
          value_description "eq" (typing/types.mli[367,13345+6]..[367,13345+8]) (typing/types.mli[367,13345+2]..[367,13345+25])
            core_type (typing/types.mli[367,13345+11]..[367,13345+25])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[367,13345+11]..[367,13345+12])
                Ptyp_constr "t" (typing/types.mli[367,13345+11]..[367,13345+12])
                []
              core_type (typing/types.mli[367,13345+16]..[367,13345+25])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[367,13345+16]..[367,13345+17])
                  Ptyp_constr "t" (typing/types.mli[367,13345+16]..[367,13345+17])
                  []
                core_type (typing/types.mli[367,13345+21]..[367,13345+25])
                  Ptyp_constr "bool" (typing/types.mli[367,13345+21]..[367,13345+25])
                  []
            []
        signature_item (typing/types.mli[368,13371+2]..[368,13371+31])
          Psig_value
          value_description "set" (typing/types.mli[368,13371+6]..[368,13371+9]) (typing/types.mli[368,13371+2]..[368,13371+31])
            core_type (typing/types.mli[368,13371+12]..[368,13371+31])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[368,13371+12]..[368,13371+13])
                Ptyp_constr "f" (typing/types.mli[368,13371+12]..[368,13371+13])
                []
              core_type (typing/types.mli[368,13371+17]..[368,13371+31])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[368,13371+17]..[368,13371+21])
                  Ptyp_constr "bool" (typing/types.mli[368,13371+17]..[368,13371+21])
                  []
                core_type (typing/types.mli[368,13371+25]..[368,13371+31])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/types.mli[368,13371+25]..[368,13371+26])
                    Ptyp_constr "t" (typing/types.mli[368,13371+25]..[368,13371+26])
                    []
                  core_type (typing/types.mli[368,13371+30]..[368,13371+31])
                    Ptyp_constr "t" (typing/types.mli[368,13371+30]..[368,13371+31])
                    []
            []
        signature_item (typing/types.mli[369,13403+2]..[369,13403+26])
          Psig_value
          value_description "mem" (typing/types.mli[369,13403+6]..[369,13403+9]) (typing/types.mli[369,13403+2]..[369,13403+26])
            core_type (typing/types.mli[369,13403+12]..[369,13403+26])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[369,13403+12]..[369,13403+13])
                Ptyp_constr "f" (typing/types.mli[369,13403+12]..[369,13403+13])
                []
              core_type (typing/types.mli[369,13403+17]..[369,13403+26])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[369,13403+17]..[369,13403+18])
                  Ptyp_constr "t" (typing/types.mli[369,13403+17]..[369,13403+18])
                  []
                core_type (typing/types.mli[369,13403+22]..[369,13403+26])
                  Ptyp_constr "bool" (typing/types.mli[369,13403+22]..[369,13403+26])
                  []
            []
        signature_item (typing/types.mli[370,13430+2]..[370,13430+24])
          Psig_value
          value_description "conjugate" (typing/types.mli[370,13430+6]..[370,13430+15]) (typing/types.mli[370,13430+2]..[370,13430+24])
            core_type (typing/types.mli[370,13430+18]..[370,13430+24])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[370,13430+18]..[370,13430+19])
                Ptyp_constr "t" (typing/types.mli[370,13430+18]..[370,13430+19])
                []
              core_type (typing/types.mli[370,13430+23]..[370,13430+24])
                Ptyp_constr "t" (typing/types.mli[370,13430+23]..[370,13430+24])
                []
            []
        signature_item (typing/types.mli[371,13507+2]..[371,13507+34])
          Psig_value
          value_description "get_upper" (typing/types.mli[371,13507+6]..[371,13507+15]) (typing/types.mli[371,13507+2]..[371,13507+34])
            core_type (typing/types.mli[371,13507+18]..[371,13507+34])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[371,13507+18]..[371,13507+19])
                Ptyp_constr "t" (typing/types.mli[371,13507+18]..[371,13507+19])
                []
              core_type (typing/types.mli[371,13507+23]..[371,13507+34])
                Ptyp_tuple
                [
                  core_type (typing/types.mli[371,13507+23]..[371,13507+27])
                    Ptyp_constr "bool" (typing/types.mli[371,13507+23]..[371,13507+27])
                    []
                  core_type (typing/types.mli[371,13507+30]..[371,13507+34])
                    Ptyp_constr "bool" (typing/types.mli[371,13507+30]..[371,13507+34])
                    []
                ]
            []
        signature_item (typing/types.mli[372,13584+2]..[372,13584+48])
          Psig_value
          value_description "get_lower" (typing/types.mli[372,13584+6]..[372,13584+15]) (typing/types.mli[372,13584+2]..[372,13584+48])
            core_type (typing/types.mli[372,13584+18]..[372,13584+48])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[372,13584+18]..[372,13584+19])
                Ptyp_constr "t" (typing/types.mli[372,13584+18]..[372,13584+19])
                []
              core_type (typing/types.mli[372,13584+23]..[372,13584+48])
                Ptyp_tuple
                [
                  core_type (typing/types.mli[372,13584+23]..[372,13584+27])
                    Ptyp_constr "bool" (typing/types.mli[372,13584+23]..[372,13584+27])
                    []
                  core_type (typing/types.mli[372,13584+30]..[372,13584+34])
                    Ptyp_constr "bool" (typing/types.mli[372,13584+30]..[372,13584+34])
                    []
                  core_type (typing/types.mli[372,13584+37]..[372,13584+41])
                    Ptyp_constr "bool" (typing/types.mli[372,13584+37]..[372,13584+41])
                    []
                  core_type (typing/types.mli[372,13584+44]..[372,13584+48])
                    Ptyp_constr "bool" (typing/types.mli[372,13584+44]..[372,13584+48])
                    []
                ]
            []
        signature_item (typing/types.mli[373,13661+2]..[373,13661+63])
          Psig_value
          value_description "unknown_signature" (typing/types.mli[373,13661+6]..[373,13661+23]) (typing/types.mli[373,13661+2]..[373,13661+63])
            attribute "ocaml.doc"
              [
                structure_item (typing/types.mli[374,13725+2]..[374,13725+69])
                  Pstr_eval
                  expression (typing/types.mli[374,13725+2]..[374,13725+69])
                    Pexp_constant PConst_string(" The most pessimistic variance for a completely unknown type. ",(typing/types.mli[374,13725+2]..[374,13725+69]),None)
              ]
            core_type (typing/types.mli[373,13661+26]..[373,13661+63])
              Ptyp_arrow
              Labelled "injective"
              core_type (typing/types.mli[373,13661+36]..[373,13661+40])
                Ptyp_constr "bool" (typing/types.mli[373,13661+36]..[373,13661+40])
                []
              core_type (typing/types.mli[373,13661+44]..[373,13661+63])
                Ptyp_arrow
                Labelled "arity"
                core_type (typing/types.mli[373,13661+50]..[373,13661+53])
                  Ptyp_constr "int" (typing/types.mli[373,13661+50]..[373,13661+53])
                  []
                core_type (typing/types.mli[373,13661+57]..[373,13661+63])
                  Ptyp_constr "list" (typing/types.mli[373,13661+59]..[373,13661+63])
                  [
                    core_type (typing/types.mli[373,13661+57]..[373,13661+58])
                      Ptyp_constr "t" (typing/types.mli[373,13661+57]..[373,13661+58])
                      []
                  ]
            []
      ]
  signature_item (typing/types.mli[377,13800+0]..[407,14917+3])
    Psig_module "Separability" (typing/types.mli[377,13800+7]..[377,13800+19])
    module_type (typing/types.mli[377,13800+22]..[407,14917+3])
      Pmty_signature
      [
        signature_item (typing/types.mli[378,13826+2]..[379,13896+31])
          Psig_attribute "ocaml.text"
          [
            structure_item (typing/types.mli[378,13826+2]..[379,13896+31])
              Pstr_eval
              expression (typing/types.mli[378,13826+2]..[379,13896+31])
                Pexp_constant PConst_string(" see {!Typedecl_separability} for an explanation of separability\n      and separability modes.",(typing/types.mli[378,13826+2]..[379,13896+31]),None)
          ]
        signature_item (typing/types.mli[381,13929+2]..[381,13929+30])
          Psig_type Rec
          [
            type_declaration "t" (typing/types.mli[381,13929+7]..[381,13929+8]) (typing/types.mli[381,13929+2]..[381,13929+30])
              ptype_params =
                []
              ptype_cstrs =
                []
              ptype_kind =
                Ptype_variant
                  [
                    (typing/types.mli[381,13929+11]..[381,13929+14])
                      "Ind" (typing/types.mli[381,13929+11]..[381,13929+14])
                      []
                      None
                    (typing/types.mli[381,13929+15]..[381,13929+20])
                      "Sep" (typing/types.mli[381,13929+17]..[381,13929+20])
                      []
                      None
                    (typing/types.mli[381,13929+21]..[381,13929+30])
                      "Deepsep" (typing/types.mli[381,13929+23]..[381,13929+30])
                      []
                      None
                  ]
              ptype_private = Public
              ptype_manifest =
                None
          ]
        signature_item (typing/types.mli[382,13960+2]..[382,13960+25])
          Psig_value
          value_description "eq" (typing/types.mli[382,13960+6]..[382,13960+8]) (typing/types.mli[382,13960+2]..[382,13960+25])
            core_type (typing/types.mli[382,13960+11]..[382,13960+25])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[382,13960+11]..[382,13960+12])
                Ptyp_constr "t" (typing/types.mli[382,13960+11]..[382,13960+12])
                []
              core_type (typing/types.mli[382,13960+16]..[382,13960+25])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[382,13960+16]..[382,13960+17])
                  Ptyp_constr "t" (typing/types.mli[382,13960+16]..[382,13960+17])
                  []
                core_type (typing/types.mli[382,13960+21]..[382,13960+25])
                  Ptyp_constr "bool" (typing/types.mli[382,13960+21]..[382,13960+25])
                  []
            []
        signature_item (typing/types.mli[383,13986+2]..[383,13986+43])
          Psig_value
          value_description "print" (typing/types.mli[383,13986+6]..[383,13986+11]) (typing/types.mli[383,13986+2]..[383,13986+43])
            core_type (typing/types.mli[383,13986+14]..[383,13986+43])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[383,13986+14]..[383,13986+30])
                Ptyp_constr "Format.formatter" (typing/types.mli[383,13986+14]..[383,13986+30])
                []
              core_type (typing/types.mli[383,13986+34]..[383,13986+43])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[383,13986+34]..[383,13986+35])
                  Ptyp_constr "t" (typing/types.mli[383,13986+34]..[383,13986+35])
                  []
                core_type (typing/types.mli[383,13986+39]..[383,13986+43])
                  Ptyp_constr "unit" (typing/types.mli[383,13986+39]..[383,13986+43])
                  []
            []
        signature_item (typing/types.mli[385,14031+2]..[385,14031+21])
          Psig_value
          value_description "rank" (typing/types.mli[385,14031+6]..[385,14031+10]) (typing/types.mli[385,14031+2]..[385,14031+21])
            attribute "ocaml.doc"
              [
                structure_item (typing/types.mli[386,14053+2]..[389,14205+40])
                  Pstr_eval
                  expression (typing/types.mli[386,14053+2]..[389,14205+40])
                    Pexp_constant PConst_string(" Modes are ordered from the least to the most demanding:\n      Ind < Sep < Deepsep.\n      'rank' maps them to integers in an order-respecting way:\n      m1 < m2  <=>  rank m1 < rank m2 ",(typing/types.mli[386,14053+2]..[389,14205+40]),None)
              ]
            core_type (typing/types.mli[385,14031+13]..[385,14031+21])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[385,14031+13]..[385,14031+14])
                Ptyp_constr "t" (typing/types.mli[385,14031+13]..[385,14031+14])
                []
              core_type (typing/types.mli[385,14031+18]..[385,14031+21])
                Ptyp_constr "int" (typing/types.mli[385,14031+18]..[385,14031+21])
                []
            []
        signature_item (typing/types.mli[391,14247+2]..[391,14247+29])
          Psig_value
          value_description "compare" (typing/types.mli[391,14247+6]..[391,14247+13]) (typing/types.mli[391,14247+2]..[391,14247+29])
            attribute "ocaml.doc"
              [
                structure_item (typing/types.mli[392,14277+2]..[392,14277+59])
                  Pstr_eval
                  expression (typing/types.mli[392,14277+2]..[392,14277+59])
                    Pexp_constant PConst_string(" Compare two mode according to their mode ordering. ",(typing/types.mli[392,14277+2]..[392,14277+59]),None)
              ]
            core_type (typing/types.mli[391,14247+16]..[391,14247+29])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[391,14247+16]..[391,14247+17])
                Ptyp_constr "t" (typing/types.mli[391,14247+16]..[391,14247+17])
                []
              core_type (typing/types.mli[391,14247+21]..[391,14247+29])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[391,14247+21]..[391,14247+22])
                  Ptyp_constr "t" (typing/types.mli[391,14247+21]..[391,14247+22])
                  []
                core_type (typing/types.mli[391,14247+26]..[391,14247+29])
                  Ptyp_constr "int" (typing/types.mli[391,14247+26]..[391,14247+29])
                  []
            []
        signature_item (typing/types.mli[394,14338+2]..[394,14338+23])
          Psig_value
          value_description "max" (typing/types.mli[394,14338+6]..[394,14338+9]) (typing/types.mli[394,14338+2]..[394,14338+23])
            attribute "ocaml.doc"
              [
                structure_item (typing/types.mli[395,14362+2]..[396,14432+67])
                  Pstr_eval
                  expression (typing/types.mli[395,14362+2]..[396,14432+67])
                    Pexp_constant PConst_string(" [max_mode m1 m2] returns the most demanding mode. It is used to\n      express the conjunction of two parameter mode constraints. ",(typing/types.mli[395,14362+2]..[396,14432+67]),None)
              ]
            core_type (typing/types.mli[394,14338+12]..[394,14338+23])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[394,14338+12]..[394,14338+13])
                Ptyp_constr "t" (typing/types.mli[394,14338+12]..[394,14338+13])
                []
              core_type (typing/types.mli[394,14338+17]..[394,14338+23])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[394,14338+17]..[394,14338+18])
                  Ptyp_constr "t" (typing/types.mli[394,14338+17]..[394,14338+18])
                  []
                core_type (typing/types.mli[394,14338+22]..[394,14338+23])
                  Ptyp_constr "t" (typing/types.mli[394,14338+22]..[394,14338+23])
                  []
            []
        signature_item (typing/types.mli[398,14501+2]..[398,14501+25])
          Psig_type Rec
          [
            type_declaration "signature" (typing/types.mli[398,14501+7]..[398,14501+16]) (typing/types.mli[398,14501+2]..[398,14501+25])
              attribute "ocaml.doc"
                [
                  structure_item (typing/types.mli[399,14527+2]..[401,14657+72])
                    Pstr_eval
                    expression (typing/types.mli[399,14527+2]..[401,14657+72])
                      Pexp_constant PConst_string(" The 'separability signature' of a type assigns a mode for\n      each of its parameters. [('a, 'b) t] has mode [(m1, m2)] if\n      [(t1, t2) t] is separable whenever [t1, t2] have mode [m1, m2]. ",(typing/types.mli[399,14527+2]..[401,14657+72]),None)
                ]
              ptype_params =
                []
              ptype_cstrs =
                []
              ptype_kind =
                Ptype_abstract
              ptype_private = Public
              ptype_manifest =
                Some
                  core_type (typing/types.mli[398,14501+19]..[398,14501+25])
                    Ptyp_constr "list" (typing/types.mli[398,14501+21]..[398,14501+25])
                    [
                      core_type (typing/types.mli[398,14501+19]..[398,14501+20])
                        Ptyp_constr "t" (typing/types.mli[398,14501+19]..[398,14501+20])
                        []
                    ]
          ]
        signature_item (typing/types.mli[403,14731+2]..[403,14731+61])
          Psig_value
          value_description "print_signature" (typing/types.mli[403,14731+6]..[403,14731+21]) (typing/types.mli[403,14731+2]..[403,14731+61])
            core_type (typing/types.mli[403,14731+24]..[403,14731+61])
              Ptyp_arrow
              Nolabel
              core_type (typing/types.mli[403,14731+24]..[403,14731+40])
                Ptyp_constr "Format.formatter" (typing/types.mli[403,14731+24]..[403,14731+40])
                []
              core_type (typing/types.mli[403,14731+44]..[403,14731+61])
                Ptyp_arrow
                Nolabel
                core_type (typing/types.mli[403,14731+44]..[403,14731+53])
                  Ptyp_constr "signature" (typing/types.mli[403,14731+44]..[403,14731+53])
                  []
                core_type (typing/types.mli[403,14731+57]..[403,14731+61])
                  Ptyp_constr "unit" (typing/types.mli[403,14731+57]..[403,14731+61])
                  []
            []
        signature_item (typing/types.mli[405,14794+2]..[405,14794+48])
          Psig_value
          value_description "default_signature" (typing/types.mli[405,14794+6]..[405,14794+23]) (typing/types.mli[405,14794+2]..[405,14794+48])
            attribute "ocaml.doc"
              [
                structure_item (typing/types.mli[406,14843+2]..[406,14843+73])
                  Pstr_eval
                  expression (typing/types.mli[406,14843+2]..[406,14843+73])
                    Pexp_constant PConst_string(" The most pessimistic separability for a completely unknown type. ",(typing/types.mli[406,14843+2]..[406,14843+73]),None)
              ]
            core_type (typing/types.mli[405,14794+26]..[405,14794+48])
              Ptyp_arrow
              Labelled "arity"
              core_type (typing/types.mli[405,14794+32]..[405,14794+35])
                Ptyp_constr "int" (typing/types.mli[405,14794+32]..[405,14794+35])
                []
              core_type (typing/types.mli[405,14794+39]..[405,14794+48])
                Ptyp_constr "signature" (typing/types.mli[405,14794+39]..[405,14794+48])
                []
            []
      ]
  signature_item (typing/types.mli[411,14946+0]..[471,16843+41])
    Psig_type Rec
    [
      type_declaration "type_declaration" (typing/types.mli[411,14946+5]..[411,14946+21]) (typing/types.mli[411,14946+0]..[428,15568+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.mli[412,14970+4]..[412,14970+32])
                Immutable
                "type_params" (typing/types.mli[412,14970+4]..[412,14970+15])                core_type (typing/types.mli[412,14970+17]..[412,14970+31])
                  Ptyp_constr "list" (typing/types.mli[412,14970+27]..[412,14970+31])
                  [
                    core_type (typing/types.mli[412,14970+17]..[412,14970+26])
                      Ptyp_constr "type_expr" (typing/types.mli[412,14970+17]..[412,14970+26])
                      []
                  ]
              (typing/types.mli[413,15003+4]..[413,15003+20])
                Immutable
                "type_arity" (typing/types.mli[413,15003+4]..[413,15003+14])                core_type (typing/types.mli[413,15003+16]..[413,15003+19])
                  Ptyp_constr "int" (typing/types.mli[413,15003+16]..[413,15003+19])
                  []
              (typing/types.mli[414,15024+4]..[414,15024+30])
                Immutable
                "type_kind" (typing/types.mli[414,15024+4]..[414,15024+13])                core_type (typing/types.mli[414,15024+15]..[414,15024+29])
                  Ptyp_constr "type_decl_kind" (typing/types.mli[414,15024+15]..[414,15024+29])
                  []
              (typing/types.mli[415,15055+4]..[415,15055+31])
                Immutable
                "type_private" (typing/types.mli[415,15055+4]..[415,15055+16])                core_type (typing/types.mli[415,15055+18]..[415,15055+30])
                  Ptyp_constr "private_flag" (typing/types.mli[415,15055+18]..[415,15055+30])
                  []
              (typing/types.mli[416,15087+4]..[416,15087+36])
                Immutable
                "type_manifest" (typing/types.mli[416,15087+4]..[416,15087+17])                core_type (typing/types.mli[416,15087+19]..[416,15087+35])
                  Ptyp_constr "option" (typing/types.mli[416,15087+29]..[416,15087+35])
                  [
                    core_type (typing/types.mli[416,15087+19]..[416,15087+28])
                      Ptyp_constr "type_expr" (typing/types.mli[416,15087+19]..[416,15087+28])
                      []
                  ]
              (typing/types.mli[417,15124+4]..[417,15124+35])
                Immutable
                "type_variance" (typing/types.mli[417,15124+4]..[417,15124+17])                core_type (typing/types.mli[417,15124+19]..[417,15124+34])
                  Ptyp_constr "list" (typing/types.mli[417,15124+30]..[417,15124+34])
                  [
                    core_type (typing/types.mli[417,15124+19]..[417,15124+29])
                      Ptyp_constr "Variance.t" (typing/types.mli[417,15124+19]..[417,15124+29])
                      []
                  ]
              (typing/types.mli[419,15228+4]..[419,15228+43])
                Immutable
                "type_separability" (typing/types.mli[419,15228+4]..[419,15228+21])                core_type (typing/types.mli[419,15228+23]..[419,15228+42])
                  Ptyp_constr "list" (typing/types.mli[419,15228+38]..[419,15228+42])
                  [
                    core_type (typing/types.mli[419,15228+23]..[419,15228+37])
                      Ptyp_constr "Separability.t" (typing/types.mli[419,15228+23]..[419,15228+37])
                      []
                  ]
              (typing/types.mli[420,15272+4]..[420,15272+26])
                Immutable
                "type_is_newtype" (typing/types.mli[420,15272+4]..[420,15272+19])                core_type (typing/types.mli[420,15272+21]..[420,15272+25])
                  Ptyp_constr "bool" (typing/types.mli[420,15272+21]..[420,15272+25])
                  []
              (typing/types.mli[421,15299+4]..[421,15299+30])
                Immutable
                "type_expansion_scope" (typing/types.mli[421,15299+4]..[421,15299+24])                core_type (typing/types.mli[421,15299+26]..[421,15299+29])
                  Ptyp_constr "int" (typing/types.mli[421,15299+26]..[421,15299+29])
                  []
              (typing/types.mli[422,15330+4]..[422,15330+25])
                Immutable
                "type_loc" (typing/types.mli[422,15330+4]..[422,15330+12])                core_type (typing/types.mli[422,15330+14]..[422,15330+24])
                  Ptyp_constr "Location.t" (typing/types.mli[422,15330+14]..[422,15330+24])
                  []
              (typing/types.mli[423,15356+4]..[423,15356+42])
                Immutable
                "type_attributes" (typing/types.mli[423,15356+4]..[423,15356+19])                core_type (typing/types.mli[423,15356+21]..[423,15356+41])
                  Ptyp_constr "Parsetree.attributes" (typing/types.mli[423,15356+21]..[423,15356+41])
                  []
              (typing/types.mli[424,15399+4]..[424,15399+37])
                Immutable
                "type_immediate" (typing/types.mli[424,15399+4]..[424,15399+18])                core_type (typing/types.mli[424,15399+20]..[424,15399+36])
                  Ptyp_constr "Type_immediacy.t" (typing/types.mli[424,15399+20]..[424,15399+36])
                  []
              (typing/types.mli[425,15437+4]..[425,15437+31])
                Immutable
                "type_unboxed_default" (typing/types.mli[425,15437+4]..[425,15437+24])                core_type (typing/types.mli[425,15437+26]..[425,15437+30])
                  Ptyp_constr "bool" (typing/types.mli[425,15437+26]..[425,15437+30])
                  []
              (typing/types.mli[427,15547+4]..[427,15547+20])
                Immutable
                "type_uid" (typing/types.mli[427,15547+4]..[427,15547+12])                core_type (typing/types.mli[427,15547+14]..[427,15547+19])
                  Ptyp_constr "Uid.t" (typing/types.mli[427,15547+14]..[427,15547+19])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "type_decl_kind" (typing/types.mli[430,15573+4]..[430,15573+18]) (typing/types.mli[430,15573+0]..[430,15573+75])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/types.mli[430,15573+21]..[430,15573+75])
              Ptyp_constr "type_kind" (typing/types.mli[430,15573+66]..[430,15573+75])
              [
                core_type (typing/types.mli[430,15573+22]..[430,15573+39])
                  Ptyp_constr "label_declaration" (typing/types.mli[430,15573+22]..[430,15573+39])
                  []
                core_type (typing/types.mli[430,15573+41]..[430,15573+64])
                  Ptyp_constr "constructor_declaration" (typing/types.mli[430,15573+41]..[430,15573+64])
                  []
              ]
      type_declaration "type_kind" (typing/types.mli[432,15650+18]..[432,15650+27]) (typing/types.mli[432,15650+0]..[436,15808+13])
        ptype_params =
          [
            core_type (typing/types.mli[432,15650+5]..[432,15650+9])
              Ptyp_var lbl
            core_type (typing/types.mli[432,15650+11]..[432,15650+16])
              Ptyp_var cstr
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[433,15680+4]..[433,15680+17])
                "Type_abstract" (typing/types.mli[433,15680+4]..[433,15680+17])
                []
                None
              (typing/types.mli[434,15698+2]..[434,15698+53])
                "Type_record" (typing/types.mli[434,15698+4]..[434,15698+15])
                [
                  core_type (typing/types.mli[434,15698+19]..[434,15698+28])
                    Ptyp_constr "list" (typing/types.mli[434,15698+24]..[434,15698+28])
                    [
                      core_type (typing/types.mli[434,15698+19]..[434,15698+23])
                        Ptyp_var lbl
                    ]
                  core_type (typing/types.mli[434,15698+32]..[434,15698+53])
                    Ptyp_constr "record_representation" (typing/types.mli[434,15698+32]..[434,15698+53])
                    []
                ]
                None
              (typing/types.mli[435,15752+2]..[435,15752+55])
                "Type_variant" (typing/types.mli[435,15752+4]..[435,15752+16])
                [
                  core_type (typing/types.mli[435,15752+20]..[435,15752+30])
                    Ptyp_constr "list" (typing/types.mli[435,15752+26]..[435,15752+30])
                    [
                      core_type (typing/types.mli[435,15752+20]..[435,15752+25])
                        Ptyp_var cstr
                    ]
                  core_type (typing/types.mli[435,15752+33]..[435,15752+55])
                    Ptyp_constr "variant_representation" (typing/types.mli[435,15752+33]..[435,15752+55])
                    []
                ]
                None
              (typing/types.mli[436,15808+2]..[436,15808+13])
                "Type_open" (typing/types.mli[436,15808+4]..[436,15808+13])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "record_representation" (typing/types.mli[438,15823+4]..[438,15823+25]) (typing/types.mli[438,15823+0]..[443,16136+30])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[439,15851+4]..[439,15851+18])
                "Record_regular" (typing/types.mli[439,15851+4]..[439,15851+18])
                []
                None
              (typing/types.mli[440,15927+2]..[440,15927+16])
                "Record_float" (typing/types.mli[440,15927+4]..[440,15927+16])
                []
                None
              (typing/types.mli[441,15995+2]..[441,15995+26])
                "Record_unboxed" (typing/types.mli[441,15995+4]..[441,15995+18])
                [
                  core_type (typing/types.mli[441,15995+22]..[441,15995+26])
                    Ptyp_constr "bool" (typing/types.mli[441,15995+22]..[441,15995+26])
                    []
                ]
                None
              (typing/types.mli[442,16075+2]..[442,16075+25])
                "Record_inlined" (typing/types.mli[442,16075+4]..[442,16075+18])
                [
                  core_type (typing/types.mli[442,16075+22]..[442,16075+25])
                    Ptyp_constr "int" (typing/types.mli[442,16075+22]..[442,16075+25])
                    []
                ]
                None
              (typing/types.mli[443,16136+2]..[443,16136+30])
                "Record_extension" (typing/types.mli[443,16136+4]..[443,16136+20])
                [
                  core_type (typing/types.mli[443,16136+24]..[443,16136+30])
                    Ptyp_constr "Path.t" (typing/types.mli[443,16136+24]..[443,16136+30])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "variant_representation" (typing/types.mli[445,16214+4]..[445,16214+26]) (typing/types.mli[445,16214+0]..[447,16309+19])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[446,16243+4]..[446,16243+19])
                "Variant_regular" (typing/types.mli[446,16243+4]..[446,16243+19])
                []
                None
              (typing/types.mli[447,16309+2]..[447,16309+19])
                "Variant_unboxed" (typing/types.mli[447,16309+4]..[447,16309+19])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "label_declaration" (typing/types.mli[449,16382+4]..[449,16382+21]) (typing/types.mli[449,16382+0]..[457,16568+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.mli[451,16410+4]..[451,16410+19])
                Immutable
                "ld_id" (typing/types.mli[451,16410+4]..[451,16410+9])                core_type (typing/types.mli[451,16410+11]..[451,16410+18])
                  Ptyp_constr "Ident.t" (typing/types.mli[451,16410+11]..[451,16410+18])
                  []
              (typing/types.mli[452,16430+4]..[452,16430+29])
                Immutable
                "ld_mutable" (typing/types.mli[452,16430+4]..[452,16430+14])                core_type (typing/types.mli[452,16430+16]..[452,16430+28])
                  Ptyp_constr "mutable_flag" (typing/types.mli[452,16430+16]..[452,16430+28])
                  []
              (typing/types.mli[453,16460+4]..[453,16460+23])
                Immutable
                "ld_type" (typing/types.mli[453,16460+4]..[453,16460+11])                core_type (typing/types.mli[453,16460+13]..[453,16460+22])
                  Ptyp_constr "type_expr" (typing/types.mli[453,16460+13]..[453,16460+22])
                  []
              (typing/types.mli[454,16484+4]..[454,16484+23])
                Immutable
                "ld_loc" (typing/types.mli[454,16484+4]..[454,16484+10])                core_type (typing/types.mli[454,16484+12]..[454,16484+22])
                  Ptyp_constr "Location.t" (typing/types.mli[454,16484+12]..[454,16484+22])
                  []
              (typing/types.mli[455,16508+4]..[455,16508+40])
                Immutable
                "ld_attributes" (typing/types.mli[455,16508+4]..[455,16508+17])                core_type (typing/types.mli[455,16508+19]..[455,16508+39])
                  Ptyp_constr "Parsetree.attributes" (typing/types.mli[455,16508+19]..[455,16508+39])
                  []
              (typing/types.mli[456,16549+4]..[456,16549+18])
                Immutable
                "ld_uid" (typing/types.mli[456,16549+4]..[456,16549+10])                core_type (typing/types.mli[456,16549+12]..[456,16549+17])
                  Ptyp_constr "Uid.t" (typing/types.mli[456,16549+12]..[456,16549+17])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "constructor_declaration" (typing/types.mli[459,16573+4]..[459,16573+27]) (typing/types.mli[459,16573+0]..[467,16777+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.mli[461,16607+4]..[461,16607+19])
                Immutable
                "cd_id" (typing/types.mli[461,16607+4]..[461,16607+9])                core_type (typing/types.mli[461,16607+11]..[461,16607+18])
                  Ptyp_constr "Ident.t" (typing/types.mli[461,16607+11]..[461,16607+18])
                  []
              (typing/types.mli[462,16627+4]..[462,16627+35])
                Immutable
                "cd_args" (typing/types.mli[462,16627+4]..[462,16627+11])                core_type (typing/types.mli[462,16627+13]..[462,16627+34])
                  Ptyp_constr "constructor_arguments" (typing/types.mli[462,16627+13]..[462,16627+34])
                  []
              (typing/types.mli[463,16663+4]..[463,16663+29])
                Immutable
                "cd_res" (typing/types.mli[463,16663+4]..[463,16663+10])                core_type (typing/types.mli[463,16663+12]..[463,16663+28])
                  Ptyp_constr "option" (typing/types.mli[463,16663+22]..[463,16663+28])
                  [
                    core_type (typing/types.mli[463,16663+12]..[463,16663+21])
                      Ptyp_constr "type_expr" (typing/types.mli[463,16663+12]..[463,16663+21])
                      []
                  ]
              (typing/types.mli[464,16693+4]..[464,16693+23])
                Immutable
                "cd_loc" (typing/types.mli[464,16693+4]..[464,16693+10])                core_type (typing/types.mli[464,16693+12]..[464,16693+22])
                  Ptyp_constr "Location.t" (typing/types.mli[464,16693+12]..[464,16693+22])
                  []
              (typing/types.mli[465,16717+4]..[465,16717+40])
                Immutable
                "cd_attributes" (typing/types.mli[465,16717+4]..[465,16717+17])                core_type (typing/types.mli[465,16717+19]..[465,16717+39])
                  Ptyp_constr "Parsetree.attributes" (typing/types.mli[465,16717+19]..[465,16717+39])
                  []
              (typing/types.mli[466,16758+4]..[466,16758+18])
                Immutable
                "cd_uid" (typing/types.mli[466,16758+4]..[466,16758+10])                core_type (typing/types.mli[466,16758+12]..[466,16758+17])
                  Ptyp_constr "Uid.t" (typing/types.mli[466,16758+12]..[466,16758+17])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "constructor_arguments" (typing/types.mli[469,16782+4]..[469,16782+25]) (typing/types.mli[469,16782+0]..[471,16843+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[470,16810+2]..[470,16810+32])
                "Cstr_tuple" (typing/types.mli[470,16810+4]..[470,16810+14])
                [
                  core_type (typing/types.mli[470,16810+18]..[470,16810+32])
                    Ptyp_constr "list" (typing/types.mli[470,16810+28]..[470,16810+32])
                    [
                      core_type (typing/types.mli[470,16810+18]..[470,16810+27])
                        Ptyp_constr "type_expr" (typing/types.mli[470,16810+18]..[470,16810+27])
                        []
                    ]
                ]
                None
              (typing/types.mli[471,16843+2]..[471,16843+41])
                "Cstr_record" (typing/types.mli[471,16843+4]..[471,16843+15])
                [
                  core_type (typing/types.mli[471,16843+19]..[471,16843+41])
                    Ptyp_constr "list" (typing/types.mli[471,16843+37]..[471,16843+41])
                    [
                      core_type (typing/types.mli[471,16843+19]..[471,16843+36])
                        Ptyp_constr "label_declaration" (typing/types.mli[471,16843+19]..[471,16843+36])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/types.mli[473,16886+0]..[488,17291+16])
    Psig_type Rec
    [
      type_declaration "extension_constructor" (typing/types.mli[473,16886+5]..[473,16886+26]) (typing/types.mli[473,16886+0]..[483,17174+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.mli[475,16919+4]..[475,16919+26])
                Immutable
                "ext_type_path" (typing/types.mli[475,16919+4]..[475,16919+17])                core_type (typing/types.mli[475,16919+19]..[475,16919+25])
                  Ptyp_constr "Path.t" (typing/types.mli[475,16919+19]..[475,16919+25])
                  []
              (typing/types.mli[476,16946+4]..[476,16946+36])
                Immutable
                "ext_type_params" (typing/types.mli[476,16946+4]..[476,16946+19])                core_type (typing/types.mli[476,16946+21]..[476,16946+35])
                  Ptyp_constr "list" (typing/types.mli[476,16946+31]..[476,16946+35])
                  [
                    core_type (typing/types.mli[476,16946+21]..[476,16946+30])
                      Ptyp_constr "type_expr" (typing/types.mli[476,16946+21]..[476,16946+30])
                      []
                  ]
              (typing/types.mli[477,16983+4]..[477,16983+36])
                Immutable
                "ext_args" (typing/types.mli[477,16983+4]..[477,16983+12])                core_type (typing/types.mli[477,16983+14]..[477,16983+35])
                  Ptyp_constr "constructor_arguments" (typing/types.mli[477,16983+14]..[477,16983+35])
                  []
              (typing/types.mli[478,17020+4]..[478,17020+35])
                Immutable
                "ext_ret_type" (typing/types.mli[478,17020+4]..[478,17020+16])                core_type (typing/types.mli[478,17020+18]..[478,17020+34])
                  Ptyp_constr "option" (typing/types.mli[478,17020+28]..[478,17020+34])
                  [
                    core_type (typing/types.mli[478,17020+18]..[478,17020+27])
                      Ptyp_constr "type_expr" (typing/types.mli[478,17020+18]..[478,17020+27])
                      []
                  ]
              (typing/types.mli[479,17056+4]..[479,17056+30])
                Immutable
                "ext_private" (typing/types.mli[479,17056+4]..[479,17056+15])                core_type (typing/types.mli[479,17056+17]..[479,17056+29])
                  Ptyp_constr "private_flag" (typing/types.mli[479,17056+17]..[479,17056+29])
                  []
              (typing/types.mli[480,17087+4]..[480,17087+24])
                Immutable
                "ext_loc" (typing/types.mli[480,17087+4]..[480,17087+11])                core_type (typing/types.mli[480,17087+13]..[480,17087+23])
                  Ptyp_constr "Location.t" (typing/types.mli[480,17087+13]..[480,17087+23])
                  []
              (typing/types.mli[481,17112+4]..[481,17112+41])
                Immutable
                "ext_attributes" (typing/types.mli[481,17112+4]..[481,17112+18])                core_type (typing/types.mli[481,17112+20]..[481,17112+40])
                  Ptyp_constr "Parsetree.attributes" (typing/types.mli[481,17112+20]..[481,17112+40])
                  []
              (typing/types.mli[482,17154+4]..[482,17154+19])
                Immutable
                "ext_uid" (typing/types.mli[482,17154+4]..[482,17154+11])                core_type (typing/types.mli[482,17154+13]..[482,17154+18])
                  Ptyp_constr "Uid.t" (typing/types.mli[482,17154+13]..[482,17154+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "type_transparence" (typing/types.mli[485,17179+4]..[485,17179+21]) (typing/types.mli[485,17179+0]..[488,17291+16])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[486,17203+4]..[486,17203+15])
                "Type_public" (typing/types.mli[486,17203+4]..[486,17203+15])
                []
                None
              (typing/types.mli[487,17253+2]..[487,17253+12])
                "Type_new" (typing/types.mli[487,17253+4]..[487,17253+12])
                []
                None
              (typing/types.mli[488,17291+2]..[488,17291+16])
                "Type_private" (typing/types.mli[488,17291+4]..[488,17291+16])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/types.mli[492,17379+0]..[495,17489+51])
    Psig_type Rec
    [
      type_declaration "class_type" (typing/types.mli[492,17379+5]..[492,17379+15]) (typing/types.mli[492,17379+0]..[495,17489+51])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[493,17397+4]..[493,17397+54])
                "Cty_constr" (typing/types.mli[493,17397+4]..[493,17397+14])
                [
                  core_type (typing/types.mli[493,17397+18]..[493,17397+24])
                    Ptyp_constr "Path.t" (typing/types.mli[493,17397+18]..[493,17397+24])
                    []
                  core_type (typing/types.mli[493,17397+27]..[493,17397+41])
                    Ptyp_constr "list" (typing/types.mli[493,17397+37]..[493,17397+41])
                    [
                      core_type (typing/types.mli[493,17397+27]..[493,17397+36])
                        Ptyp_constr "type_expr" (typing/types.mli[493,17397+27]..[493,17397+36])
                        []
                    ]
                  core_type (typing/types.mli[493,17397+44]..[493,17397+54])
                    Ptyp_constr "class_type" (typing/types.mli[493,17397+44]..[493,17397+54])
                    []
                ]
                None
              (typing/types.mli[494,17452+2]..[494,17452+36])
                "Cty_signature" (typing/types.mli[494,17452+4]..[494,17452+17])
                [
                  core_type (typing/types.mli[494,17452+21]..[494,17452+36])
                    Ptyp_constr "class_signature" (typing/types.mli[494,17452+21]..[494,17452+36])
                    []
                ]
                None
              (typing/types.mli[495,17489+2]..[495,17489+51])
                "Cty_arrow" (typing/types.mli[495,17489+4]..[495,17489+13])
                [
                  core_type (typing/types.mli[495,17489+17]..[495,17489+26])
                    Ptyp_constr "arg_label" (typing/types.mli[495,17489+17]..[495,17489+26])
                    []
                  core_type (typing/types.mli[495,17489+29]..[495,17489+38])
                    Ptyp_constr "type_expr" (typing/types.mli[495,17489+29]..[495,17489+38])
                    []
                  core_type (typing/types.mli[495,17489+41]..[495,17489+51])
                    Ptyp_constr "class_type" (typing/types.mli[495,17489+41]..[495,17489+51])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/types.mli[497,17542+0]..[506,17808+3])
    Psig_type Rec
    [
      type_declaration "class_declaration" (typing/types.mli[497,17542+5]..[497,17542+22]) (typing/types.mli[497,17542+0]..[506,17808+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.mli[498,17567+4]..[498,17567+31])
                Immutable
                "cty_params" (typing/types.mli[498,17567+4]..[498,17567+14])                core_type (typing/types.mli[498,17567+16]..[498,17567+30])
                  Ptyp_constr "list" (typing/types.mli[498,17567+26]..[498,17567+30])
                  [
                    core_type (typing/types.mli[498,17567+16]..[498,17567+25])
                      Ptyp_constr "type_expr" (typing/types.mli[498,17567+16]..[498,17567+25])
                      []
                  ]
              (typing/types.mli[499,17599+4]..[499,17599+33])
                Mutable
                "cty_type" (typing/types.mli[499,17599+12]..[499,17599+20])                core_type (typing/types.mli[499,17599+22]..[499,17599+32])
                  Ptyp_constr "class_type" (typing/types.mli[499,17599+22]..[499,17599+32])
                  []
              (typing/types.mli[500,17633+4]..[500,17633+21])
                Immutable
                "cty_path" (typing/types.mli[500,17633+4]..[500,17633+12])                core_type (typing/types.mli[500,17633+14]..[500,17633+20])
                  Ptyp_constr "Path.t" (typing/types.mli[500,17633+14]..[500,17633+20])
                  []
              (typing/types.mli[501,17655+4]..[501,17655+30])
                Immutable
                "cty_new" (typing/types.mli[501,17655+4]..[501,17655+11])                core_type (typing/types.mli[501,17655+13]..[501,17655+29])
                  Ptyp_constr "option" (typing/types.mli[501,17655+23]..[501,17655+29])
                  [
                    core_type (typing/types.mli[501,17655+13]..[501,17655+22])
                      Ptyp_constr "type_expr" (typing/types.mli[501,17655+13]..[501,17655+22])
                      []
                  ]
              (typing/types.mli[502,17686+4]..[502,17686+34])
                Immutable
                "cty_variance" (typing/types.mli[502,17686+4]..[502,17686+16])                core_type (typing/types.mli[502,17686+18]..[502,17686+33])
                  Ptyp_constr "list" (typing/types.mli[502,17686+29]..[502,17686+33])
                  [
                    core_type (typing/types.mli[502,17686+18]..[502,17686+28])
                      Ptyp_constr "Variance.t" (typing/types.mli[502,17686+18]..[502,17686+28])
                      []
                  ]
              (typing/types.mli[503,17721+4]..[503,17721+24])
                Immutable
                "cty_loc" (typing/types.mli[503,17721+4]..[503,17721+11])                core_type (typing/types.mli[503,17721+13]..[503,17721+23])
                  Ptyp_constr "Location.t" (typing/types.mli[503,17721+13]..[503,17721+23])
                  []
              (typing/types.mli[504,17746+4]..[504,17746+41])
                Immutable
                "cty_attributes" (typing/types.mli[504,17746+4]..[504,17746+18])                core_type (typing/types.mli[504,17746+20]..[504,17746+40])
                  Ptyp_constr "Parsetree.attributes" (typing/types.mli[504,17746+20]..[504,17746+40])
                  []
              (typing/types.mli[505,17788+4]..[505,17788+19])
                Immutable
                "cty_uid" (typing/types.mli[505,17788+4]..[505,17788+11])                core_type (typing/types.mli[505,17788+13]..[505,17788+18])
                  Ptyp_constr "Uid.t" (typing/types.mli[505,17788+13]..[505,17788+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/types.mli[508,17813+0]..[516,18052+3])
    Psig_type Rec
    [
      type_declaration "class_type_declaration" (typing/types.mli[508,17813+5]..[508,17813+27]) (typing/types.mli[508,17813+0]..[516,18052+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.mli[509,17843+4]..[509,17843+32])
                Immutable
                "clty_params" (typing/types.mli[509,17843+4]..[509,17843+15])                core_type (typing/types.mli[509,17843+17]..[509,17843+31])
                  Ptyp_constr "list" (typing/types.mli[509,17843+27]..[509,17843+31])
                  [
                    core_type (typing/types.mli[509,17843+17]..[509,17843+26])
                      Ptyp_constr "type_expr" (typing/types.mli[509,17843+17]..[509,17843+26])
                      []
                  ]
              (typing/types.mli[510,17876+4]..[510,17876+26])
                Immutable
                "clty_type" (typing/types.mli[510,17876+4]..[510,17876+13])                core_type (typing/types.mli[510,17876+15]..[510,17876+25])
                  Ptyp_constr "class_type" (typing/types.mli[510,17876+15]..[510,17876+25])
                  []
              (typing/types.mli[511,17903+4]..[511,17903+22])
                Immutable
                "clty_path" (typing/types.mli[511,17903+4]..[511,17903+13])                core_type (typing/types.mli[511,17903+15]..[511,17903+21])
                  Ptyp_constr "Path.t" (typing/types.mli[511,17903+15]..[511,17903+21])
                  []
              (typing/types.mli[512,17926+4]..[512,17926+35])
                Immutable
                "clty_variance" (typing/types.mli[512,17926+4]..[512,17926+17])                core_type (typing/types.mli[512,17926+19]..[512,17926+34])
                  Ptyp_constr "list" (typing/types.mli[512,17926+30]..[512,17926+34])
                  [
                    core_type (typing/types.mli[512,17926+19]..[512,17926+29])
                      Ptyp_constr "Variance.t" (typing/types.mli[512,17926+19]..[512,17926+29])
                      []
                  ]
              (typing/types.mli[513,17962+4]..[513,17962+25])
                Immutable
                "clty_loc" (typing/types.mli[513,17962+4]..[513,17962+12])                core_type (typing/types.mli[513,17962+14]..[513,17962+24])
                  Ptyp_constr "Location.t" (typing/types.mli[513,17962+14]..[513,17962+24])
                  []
              (typing/types.mli[514,17988+4]..[514,17988+42])
                Immutable
                "clty_attributes" (typing/types.mli[514,17988+4]..[514,17988+19])                core_type (typing/types.mli[514,17988+21]..[514,17988+41])
                  Ptyp_constr "Parsetree.attributes" (typing/types.mli[514,17988+21]..[514,17988+41])
                  []
              (typing/types.mli[515,18031+4]..[515,18031+20])
                Immutable
                "clty_uid" (typing/types.mli[515,18031+4]..[515,18031+12])                core_type (typing/types.mli[515,18031+14]..[515,18031+19])
                  Ptyp_constr "Uid.t" (typing/types.mli[515,18031+14]..[515,18031+19])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/types.mli[520,18105+0]..[522,18136+10])
    Psig_type Rec
    [
      type_declaration "visibility" (typing/types.mli[520,18105+5]..[520,18105+15]) (typing/types.mli[520,18105+0]..[522,18136+10])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[521,18123+2]..[521,18123+12])
                "Exported" (typing/types.mli[521,18123+4]..[521,18123+12])
                []
                None
              (typing/types.mli[522,18136+2]..[522,18136+10])
                "Hidden" (typing/types.mli[522,18136+4]..[522,18136+10])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/types.mli[524,18148+0]..[574,19722+18])
    Psig_type Rec
    [
      type_declaration "module_type" (typing/types.mli[524,18148+5]..[524,18148+16]) (typing/types.mli[524,18148+0]..[528,18273+23])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[525,18167+4]..[525,18167+23])
                "Mty_ident" (typing/types.mli[525,18167+4]..[525,18167+13])
                [
                  core_type (typing/types.mli[525,18167+17]..[525,18167+23])
                    Ptyp_constr "Path.t" (typing/types.mli[525,18167+17]..[525,18167+23])
                    []
                ]
                None
              (typing/types.mli[526,18191+2]..[526,18191+30])
                "Mty_signature" (typing/types.mli[526,18191+4]..[526,18191+17])
                [
                  core_type (typing/types.mli[526,18191+21]..[526,18191+30])
                    Ptyp_constr "signature" (typing/types.mli[526,18191+21]..[526,18191+30])
                    []
                ]
                None
              (typing/types.mli[527,18222+2]..[527,18222+50])
                "Mty_functor" (typing/types.mli[527,18222+4]..[527,18222+15])
                [
                  core_type (typing/types.mli[527,18222+19]..[527,18222+36])
                    Ptyp_constr "functor_parameter" (typing/types.mli[527,18222+19]..[527,18222+36])
                    []
                  core_type (typing/types.mli[527,18222+39]..[527,18222+50])
                    Ptyp_constr "module_type" (typing/types.mli[527,18222+39]..[527,18222+50])
                    []
                ]
                None
              (typing/types.mli[528,18273+2]..[528,18273+23])
                "Mty_alias" (typing/types.mli[528,18273+4]..[528,18273+13])
                [
                  core_type (typing/types.mli[528,18273+17]..[528,18273+23])
                    Ptyp_constr "Path.t" (typing/types.mli[528,18273+17]..[528,18273+23])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "functor_parameter" (typing/types.mli[530,18298+4]..[530,18298+21]) (typing/types.mli[530,18298+0]..[532,18331+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[531,18322+2]..[531,18322+8])
                "Unit" (typing/types.mli[531,18322+4]..[531,18322+8])
                []
                None
              (typing/types.mli[532,18331+2]..[532,18331+41])
                "Named" (typing/types.mli[532,18331+4]..[532,18331+9])
                [
                  core_type (typing/types.mli[532,18331+13]..[532,18331+27])
                    Ptyp_constr "option" (typing/types.mli[532,18331+21]..[532,18331+27])
                    [
                      core_type (typing/types.mli[532,18331+13]..[532,18331+20])
                        Ptyp_constr "Ident.t" (typing/types.mli[532,18331+13]..[532,18331+20])
                        []
                    ]
                  core_type (typing/types.mli[532,18331+30]..[532,18331+41])
                    Ptyp_constr "module_type" (typing/types.mli[532,18331+30]..[532,18331+41])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "module_presence" (typing/types.mli[534,18374+4]..[534,18374+19]) (typing/types.mli[534,18374+0]..[536,18411+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[535,18396+2]..[535,18396+14])
                "Mp_present" (typing/types.mli[535,18396+4]..[535,18396+14])
                []
                None
              (typing/types.mli[536,18411+2]..[536,18411+13])
                "Mp_absent" (typing/types.mli[536,18411+4]..[536,18411+13])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "signature" (typing/types.mli[538,18426+4]..[538,18426+13]) (typing/types.mli[538,18426+0]..[538,18426+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/types.mli[538,18426+16]..[538,18426+35])
              Ptyp_constr "list" (typing/types.mli[538,18426+31]..[538,18426+35])
              [
                core_type (typing/types.mli[538,18426+16]..[538,18426+30])
                  Ptyp_constr "signature_item" (typing/types.mli[538,18426+16]..[538,18426+30])
                  []
              ]
      type_declaration "signature_item" (typing/types.mli[540,18463+4]..[540,18463+18]) (typing/types.mli[540,18463+0]..[548,18917+80])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[541,18484+4]..[541,18484+57])
                "Sig_value" (typing/types.mli[541,18484+4]..[541,18484+13])
                [
                  core_type (typing/types.mli[541,18484+17]..[541,18484+24])
                    Ptyp_constr "Ident.t" (typing/types.mli[541,18484+17]..[541,18484+24])
                    []
                  core_type (typing/types.mli[541,18484+27]..[541,18484+44])
                    Ptyp_constr "value_description" (typing/types.mli[541,18484+27]..[541,18484+44])
                    []
                  core_type (typing/types.mli[541,18484+47]..[541,18484+57])
                    Ptyp_constr "visibility" (typing/types.mli[541,18484+47]..[541,18484+57])
                    []
                ]
                None
              (typing/types.mli[542,18542+2]..[542,18542+68])
                "Sig_type" (typing/types.mli[542,18542+4]..[542,18542+12])
                [
                  core_type (typing/types.mli[542,18542+16]..[542,18542+23])
                    Ptyp_constr "Ident.t" (typing/types.mli[542,18542+16]..[542,18542+23])
                    []
                  core_type (typing/types.mli[542,18542+26]..[542,18542+42])
                    Ptyp_constr "type_declaration" (typing/types.mli[542,18542+26]..[542,18542+42])
                    []
                  core_type (typing/types.mli[542,18542+45]..[542,18542+55])
                    Ptyp_constr "rec_status" (typing/types.mli[542,18542+45]..[542,18542+55])
                    []
                  core_type (typing/types.mli[542,18542+58]..[542,18542+68])
                    Ptyp_constr "visibility" (typing/types.mli[542,18542+58]..[542,18542+68])
                    []
                ]
                None
              (typing/types.mli[543,18611+2]..[543,18611+75])
                "Sig_typext" (typing/types.mli[543,18611+4]..[543,18611+14])
                [
                  core_type (typing/types.mli[543,18611+18]..[543,18611+25])
                    Ptyp_constr "Ident.t" (typing/types.mli[543,18611+18]..[543,18611+25])
                    []
                  core_type (typing/types.mli[543,18611+28]..[543,18611+49])
                    Ptyp_constr "extension_constructor" (typing/types.mli[543,18611+28]..[543,18611+49])
                    []
                  core_type (typing/types.mli[543,18611+52]..[543,18611+62])
                    Ptyp_constr "ext_status" (typing/types.mli[543,18611+52]..[543,18611+62])
                    []
                  core_type (typing/types.mli[543,18611+65]..[543,18611+75])
                    Ptyp_constr "visibility" (typing/types.mli[543,18611+65]..[543,18611+75])
                    []
                ]
                None
              (typing/types.mli[544,18687+2]..[545,18705+78])
                "Sig_module" (typing/types.mli[544,18687+4]..[544,18687+14])
                [
                  core_type (typing/types.mli[545,18705+6]..[545,18705+13])
                    Ptyp_constr "Ident.t" (typing/types.mli[545,18705+6]..[545,18705+13])
                    []
                  core_type (typing/types.mli[545,18705+16]..[545,18705+31])
                    Ptyp_constr "module_presence" (typing/types.mli[545,18705+16]..[545,18705+31])
                    []
                  core_type (typing/types.mli[545,18705+34]..[545,18705+52])
                    Ptyp_constr "module_declaration" (typing/types.mli[545,18705+34]..[545,18705+52])
                    []
                  core_type (typing/types.mli[545,18705+55]..[545,18705+65])
                    Ptyp_constr "rec_status" (typing/types.mli[545,18705+55]..[545,18705+65])
                    []
                  core_type (typing/types.mli[545,18705+68]..[545,18705+78])
                    Ptyp_constr "visibility" (typing/types.mli[545,18705+68]..[545,18705+78])
                    []
                ]
                None
              (typing/types.mli[546,18784+2]..[546,18784+61])
                "Sig_modtype" (typing/types.mli[546,18784+4]..[546,18784+15])
                [
                  core_type (typing/types.mli[546,18784+19]..[546,18784+26])
                    Ptyp_constr "Ident.t" (typing/types.mli[546,18784+19]..[546,18784+26])
                    []
                  core_type (typing/types.mli[546,18784+29]..[546,18784+48])
                    Ptyp_constr "modtype_declaration" (typing/types.mli[546,18784+29]..[546,18784+48])
                    []
                  core_type (typing/types.mli[546,18784+51]..[546,18784+61])
                    Ptyp_constr "visibility" (typing/types.mli[546,18784+51]..[546,18784+61])
                    []
                ]
                None
              (typing/types.mli[547,18846+2]..[547,18846+70])
                "Sig_class" (typing/types.mli[547,18846+4]..[547,18846+13])
                [
                  core_type (typing/types.mli[547,18846+17]..[547,18846+24])
                    Ptyp_constr "Ident.t" (typing/types.mli[547,18846+17]..[547,18846+24])
                    []
                  core_type (typing/types.mli[547,18846+27]..[547,18846+44])
                    Ptyp_constr "class_declaration" (typing/types.mli[547,18846+27]..[547,18846+44])
                    []
                  core_type (typing/types.mli[547,18846+47]..[547,18846+57])
                    Ptyp_constr "rec_status" (typing/types.mli[547,18846+47]..[547,18846+57])
                    []
                  core_type (typing/types.mli[547,18846+60]..[547,18846+70])
                    Ptyp_constr "visibility" (typing/types.mli[547,18846+60]..[547,18846+70])
                    []
                ]
                None
              (typing/types.mli[548,18917+2]..[548,18917+80])
                "Sig_class_type" (typing/types.mli[548,18917+4]..[548,18917+18])
                [
                  core_type (typing/types.mli[548,18917+22]..[548,18917+29])
                    Ptyp_constr "Ident.t" (typing/types.mli[548,18917+22]..[548,18917+29])
                    []
                  core_type (typing/types.mli[548,18917+32]..[548,18917+54])
                    Ptyp_constr "class_type_declaration" (typing/types.mli[548,18917+32]..[548,18917+54])
                    []
                  core_type (typing/types.mli[548,18917+57]..[548,18917+67])
                    Ptyp_constr "rec_status" (typing/types.mli[548,18917+57]..[548,18917+67])
                    []
                  core_type (typing/types.mli[548,18917+70]..[548,18917+80])
                    Ptyp_constr "visibility" (typing/types.mli[548,18917+70]..[548,18917+80])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "module_declaration" (typing/types.mli[550,18999+4]..[550,18999+22]) (typing/types.mli[550,18999+0]..[556,19138+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.mli[552,19028+4]..[552,19028+25])
                Immutable
                "md_type" (typing/types.mli[552,19028+4]..[552,19028+11])                core_type (typing/types.mli[552,19028+13]..[552,19028+24])
                  Ptyp_constr "module_type" (typing/types.mli[552,19028+13]..[552,19028+24])
                  []
              (typing/types.mli[553,19054+4]..[553,19054+40])
                Immutable
                "md_attributes" (typing/types.mli[553,19054+4]..[553,19054+17])                core_type (typing/types.mli[553,19054+19]..[553,19054+39])
                  Ptyp_constr "Parsetree.attributes" (typing/types.mli[553,19054+19]..[553,19054+39])
                  []
              (typing/types.mli[554,19095+4]..[554,19095+23])
                Immutable
                "md_loc" (typing/types.mli[554,19095+4]..[554,19095+10])                core_type (typing/types.mli[554,19095+12]..[554,19095+22])
                  Ptyp_constr "Location.t" (typing/types.mli[554,19095+12]..[554,19095+22])
                  []
              (typing/types.mli[555,19119+4]..[555,19119+18])
                Immutable
                "md_uid" (typing/types.mli[555,19119+4]..[555,19119+10])                core_type (typing/types.mli[555,19119+12]..[555,19119+17])
                  Ptyp_constr "Uid.t" (typing/types.mli[555,19119+12]..[555,19119+17])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "modtype_declaration" (typing/types.mli[558,19143+4]..[558,19143+23]) (typing/types.mli[558,19143+0]..[564,19316+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.mli[560,19173+4]..[560,19173+33])
                Immutable
                "mtd_type" (typing/types.mli[560,19173+4]..[560,19173+12])                core_type (typing/types.mli[560,19173+14]..[560,19173+32])
                  Ptyp_constr "option" (typing/types.mli[560,19173+26]..[560,19173+32])
                  [
                    core_type (typing/types.mli[560,19173+14]..[560,19173+25])
                      Ptyp_constr "module_type" (typing/types.mli[560,19173+14]..[560,19173+25])
                      []
                  ]
              (typing/types.mli[561,19229+4]..[561,19229+41])
                Immutable
                "mtd_attributes" (typing/types.mli[561,19229+4]..[561,19229+18])                core_type (typing/types.mli[561,19229+20]..[561,19229+40])
                  Ptyp_constr "Parsetree.attributes" (typing/types.mli[561,19229+20]..[561,19229+40])
                  []
              (typing/types.mli[562,19271+4]..[562,19271+24])
                Immutable
                "mtd_loc" (typing/types.mli[562,19271+4]..[562,19271+11])                core_type (typing/types.mli[562,19271+13]..[562,19271+23])
                  Ptyp_constr "Location.t" (typing/types.mli[562,19271+13]..[562,19271+23])
                  []
              (typing/types.mli[563,19296+4]..[563,19296+19])
                Immutable
                "mtd_uid" (typing/types.mli[563,19296+4]..[563,19296+11])                core_type (typing/types.mli[563,19296+13]..[563,19296+18])
                  Ptyp_constr "Uid.t" (typing/types.mli[563,19296+13]..[563,19296+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "rec_status" (typing/types.mli[566,19321+4]..[566,19321+14]) (typing/types.mli[566,19321+0]..[569,19469+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[567,19338+4]..[567,19338+12])
                "Trec_not" (typing/types.mli[567,19338+4]..[567,19338+12])
                []
                None
              (typing/types.mli[568,19405+2]..[568,19405+14])
                "Trec_first" (typing/types.mli[568,19405+4]..[568,19405+14])
                []
                None
              (typing/types.mli[569,19469+2]..[569,19469+13])
                "Trec_next" (typing/types.mli[569,19469+4]..[569,19469+13])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "ext_status" (typing/types.mli[571,19551+4]..[571,19551+14]) (typing/types.mli[571,19551+0]..[574,19722+18])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[572,19568+4]..[572,19568+14])
                "Text_first" (typing/types.mli[572,19568+4]..[572,19568+14])
                []
                None
              (typing/types.mli[573,19643+2]..[573,19643+13])
                "Text_next" (typing/types.mli[573,19643+4]..[573,19643+13])
                []
                None
              (typing/types.mli[574,19722+2]..[574,19722+18])
                "Text_exception" (typing/types.mli[574,19722+4]..[574,19722+18])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/types.mli[580,19832+0]..[601,20945+35])
    Psig_type Rec
    [
      type_declaration "constructor_description" (typing/types.mli[580,19832+5]..[580,19832+28]) (typing/types.mli[580,19832+0]..[595,20688+4])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.mli[581,19863+4]..[581,19863+22])
                Immutable
                "cstr_name" (typing/types.mli[581,19863+4]..[581,19863+13])                core_type (typing/types.mli[581,19863+15]..[581,19863+21])
                  Ptyp_constr "string" (typing/types.mli[581,19863+15]..[581,19863+21])
                  []
              (typing/types.mli[582,19926+4]..[582,19926+24])
                Immutable
                "cstr_res" (typing/types.mli[582,19926+4]..[582,19926+12])                core_type (typing/types.mli[582,19926+14]..[582,19926+23])
                  Ptyp_constr "type_expr" (typing/types.mli[582,19926+14]..[582,19926+23])
                  []
              (typing/types.mli[583,19991+4]..[583,19991+38])
                Immutable
                "cstr_existentials" (typing/types.mli[583,19991+4]..[583,19991+21])                core_type (typing/types.mli[583,19991+23]..[583,19991+37])
                  Ptyp_constr "list" (typing/types.mli[583,19991+33]..[583,19991+37])
                  [
                    core_type (typing/types.mli[583,19991+23]..[583,19991+32])
                      Ptyp_constr "type_expr" (typing/types.mli[583,19991+23]..[583,19991+32])
                      []
                  ]
              (typing/types.mli[584,20058+4]..[584,20058+30])
                Immutable
                "cstr_args" (typing/types.mli[584,20058+4]..[584,20058+13])                core_type (typing/types.mli[584,20058+15]..[584,20058+29])
                  Ptyp_constr "list" (typing/types.mli[584,20058+25]..[584,20058+29])
                  [
                    core_type (typing/types.mli[584,20058+15]..[584,20058+24])
                      Ptyp_constr "type_expr" (typing/types.mli[584,20058+15]..[584,20058+24])
                      []
                  ]
              (typing/types.mli[585,20126+4]..[585,20126+20])
                Immutable
                "cstr_arity" (typing/types.mli[585,20126+4]..[585,20126+14])                core_type (typing/types.mli[585,20126+16]..[585,20126+19])
                  Ptyp_constr "int" (typing/types.mli[585,20126+16]..[585,20126+19])
                  []
              (typing/types.mli[586,20192+4]..[586,20192+30])
                Immutable
                "cstr_tag" (typing/types.mli[586,20192+4]..[586,20192+12])                core_type (typing/types.mli[586,20192+14]..[586,20192+29])
                  Ptyp_constr "constructor_tag" (typing/types.mli[586,20192+14]..[586,20192+29])
                  []
              (typing/types.mli[587,20258+4]..[587,20258+21])
                Immutable
                "cstr_consts" (typing/types.mli[587,20258+4]..[587,20258+15])                core_type (typing/types.mli[587,20258+17]..[587,20258+20])
                  Ptyp_constr "int" (typing/types.mli[587,20258+17]..[587,20258+20])
                  []
              (typing/types.mli[588,20336+4]..[588,20336+24])
                Immutable
                "cstr_nonconsts" (typing/types.mli[588,20336+4]..[588,20336+18])                core_type (typing/types.mli[588,20336+20]..[588,20336+23])
                  Ptyp_constr "int" (typing/types.mli[588,20336+20]..[588,20336+23])
                  []
              (typing/types.mli[589,20415+4]..[589,20415+27])
                Immutable
                "cstr_generalized" (typing/types.mli[589,20415+4]..[589,20415+20])                core_type (typing/types.mli[589,20415+22]..[589,20415+26])
                  Ptyp_constr "bool" (typing/types.mli[589,20415+22]..[589,20415+26])
                  []
              (typing/types.mli[590,20486+4]..[590,20486+31])
                Immutable
                "cstr_private" (typing/types.mli[590,20486+4]..[590,20486+16])                core_type (typing/types.mli[590,20486+18]..[590,20486+30])
                  Ptyp_constr "private_flag" (typing/types.mli[590,20486+18]..[590,20486+30])
                  []
              (typing/types.mli[591,20555+4]..[591,20555+25])
                Immutable
                "cstr_loc" (typing/types.mli[591,20555+4]..[591,20555+12])                core_type (typing/types.mli[591,20555+14]..[591,20555+24])
                  Ptyp_constr "Location.t" (typing/types.mli[591,20555+14]..[591,20555+24])
                  []
              (typing/types.mli[592,20581+4]..[592,20581+42])
                Immutable
                "cstr_attributes" (typing/types.mli[592,20581+4]..[592,20581+19])                core_type (typing/types.mli[592,20581+21]..[592,20581+41])
                  Ptyp_constr "Parsetree.attributes" (typing/types.mli[592,20581+21]..[592,20581+41])
                  []
              (typing/types.mli[593,20624+4]..[593,20624+42])
                Immutable
                "cstr_inlined" (typing/types.mli[593,20624+4]..[593,20624+16])                core_type (typing/types.mli[593,20624+18]..[593,20624+41])
                  Ptyp_constr "option" (typing/types.mli[593,20624+35]..[593,20624+41])
                  [
                    core_type (typing/types.mli[593,20624+18]..[593,20624+34])
                      Ptyp_constr "type_declaration" (typing/types.mli[593,20624+18]..[593,20624+34])
                      []
                  ]
              (typing/types.mli[594,20667+4]..[594,20667+20])
                Immutable
                "cstr_uid" (typing/types.mli[594,20667+4]..[594,20667+12])                core_type (typing/types.mli[594,20667+14]..[594,20667+19])
                  Ptyp_constr "Uid.t" (typing/types.mli[594,20667+14]..[594,20667+19])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "constructor_tag" (typing/types.mli[597,20694+4]..[597,20694+19]) (typing/types.mli[597,20694+0]..[601,20945+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/types.mli[598,20716+4]..[598,20716+24])
                "Cstr_constant" (typing/types.mli[598,20716+4]..[598,20716+17])
                [
                  core_type (typing/types.mli[598,20716+21]..[598,20716+24])
                    Ptyp_constr "int" (typing/types.mli[598,20716+21]..[598,20716+24])
                    []
                ]
                None
              (typing/types.mli[599,20792+2]..[599,20792+21])
                "Cstr_block" (typing/types.mli[599,20792+4]..[599,20792+14])
                [
                  core_type (typing/types.mli[599,20792+18]..[599,20792+21])
                    Ptyp_constr "int" (typing/types.mli[599,20792+18]..[599,20792+21])
                    []
                ]
                None
              (typing/types.mli[600,20868+2]..[600,20868+16])
                "Cstr_unboxed" (typing/types.mli[600,20868+4]..[600,20868+16])
                []
                None
              (typing/types.mli[601,20945+2]..[601,20945+35])
                "Cstr_extension" (typing/types.mli[601,20945+4]..[601,20945+18])
                [
                  core_type (typing/types.mli[601,20945+22]..[601,20945+28])
                    Ptyp_constr "Path.t" (typing/types.mli[601,20945+22]..[601,20945+28])
                    []
                  core_type (typing/types.mli[601,20945+31]..[601,20945+35])
                    Ptyp_constr "bool" (typing/types.mli[601,20945+31]..[601,20945+35])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/types.mli[605,21124+0]..[605,21124+59])
    Psig_value
    value_description "equal_tag" (typing/types.mli[605,21124+4]..[605,21124+13]) (typing/types.mli[605,21124+0]..[605,21124+59])
      core_type (typing/types.mli[605,21124+17]..[605,21124+59])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[605,21124+17]..[605,21124+32])
          Ptyp_constr "constructor_tag" (typing/types.mli[605,21124+17]..[605,21124+32])
          []
        core_type (typing/types.mli[605,21124+36]..[605,21124+59])
          Ptyp_arrow
          Nolabel
          core_type (typing/types.mli[605,21124+36]..[605,21124+51])
            Ptyp_constr "constructor_tag" (typing/types.mli[605,21124+36]..[605,21124+51])
            []
          core_type (typing/types.mli[605,21124+55]..[605,21124+59])
            Ptyp_constr "bool" (typing/types.mli[605,21124+55]..[605,21124+59])
            []
      []
  signature_item (typing/types.mli[608,21247+0]..[609,21270+63])
    Psig_value
    value_description "may_equal_constr" (typing/types.mli[608,21247+4]..[608,21247+20]) (typing/types.mli[608,21247+0]..[609,21270+63])
      core_type (typing/types.mli[609,21270+4]..[609,21270+63])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[609,21270+4]..[609,21270+27])
          Ptyp_constr "constructor_description" (typing/types.mli[609,21270+4]..[609,21270+27])
          []
        core_type (typing/types.mli[609,21270+32]..[609,21270+63])
          Ptyp_arrow
          Nolabel
          core_type (typing/types.mli[609,21270+32]..[609,21270+55])
            Ptyp_constr "constructor_description" (typing/types.mli[609,21270+32]..[609,21270+55])
            []
          core_type (typing/types.mli[609,21270+59]..[609,21270+63])
            Ptyp_constr "bool" (typing/types.mli[609,21270+59]..[609,21270+63])
            []
      []
  signature_item (typing/types.mli[611,21335+0]..[623,21985+3])
    Psig_type Rec
    [
      type_declaration "label_description" (typing/types.mli[611,21335+5]..[611,21335+22]) (typing/types.mli[611,21335+0]..[623,21985+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/types.mli[612,21360+4]..[612,21360+21])
                Immutable
                "lbl_name" (typing/types.mli[612,21360+4]..[612,21360+12])                core_type (typing/types.mli[612,21360+14]..[612,21360+20])
                  Ptyp_constr "string" (typing/types.mli[612,21360+14]..[612,21360+20])
                  []
              (typing/types.mli[613,21417+4]..[613,21417+23])
                Immutable
                "lbl_res" (typing/types.mli[613,21417+4]..[613,21417+11])                core_type (typing/types.mli[613,21417+13]..[613,21417+22])
                  Ptyp_constr "type_expr" (typing/types.mli[613,21417+13]..[613,21417+22])
                  []
              (typing/types.mli[614,21482+4]..[614,21482+23])
                Immutable
                "lbl_arg" (typing/types.mli[614,21482+4]..[614,21482+11])                core_type (typing/types.mli[614,21482+13]..[614,21482+22])
                  Ptyp_constr "type_expr" (typing/types.mli[614,21482+13]..[614,21482+22])
                  []
              (typing/types.mli[615,21549+4]..[615,21549+26])
                Immutable
                "lbl_mut" (typing/types.mli[615,21549+4]..[615,21549+11])                core_type (typing/types.mli[615,21549+13]..[615,21549+25])
                  Ptyp_constr "mutable_flag" (typing/types.mli[615,21549+13]..[615,21549+25])
                  []
              (typing/types.mli[616,21620+4]..[616,21620+17])
                Immutable
                "lbl_pos" (typing/types.mli[616,21620+4]..[616,21620+11])                core_type (typing/types.mli[616,21620+13]..[616,21620+16])
                  Ptyp_constr "int" (typing/types.mli[616,21620+13]..[616,21620+16])
                  []
              (typing/types.mli[617,21684+4]..[617,21684+37])
                Immutable
                "lbl_all" (typing/types.mli[617,21684+4]..[617,21684+11])                core_type (typing/types.mli[617,21684+13]..[617,21684+36])
                  Ptyp_constr "array" (typing/types.mli[617,21684+31]..[617,21684+36])
                  [
                    core_type (typing/types.mli[617,21684+13]..[617,21684+30])
                      Ptyp_constr "label_description" (typing/types.mli[617,21684+13]..[617,21684+30])
                      []
                  ]
              (typing/types.mli[618,21758+4]..[618,21758+38])
                Immutable
                "lbl_repres" (typing/types.mli[618,21758+4]..[618,21758+14])                core_type (typing/types.mli[618,21758+16]..[618,21758+37])
                  Ptyp_constr "record_representation" (typing/types.mli[618,21758+16]..[618,21758+37])
                  []
              (typing/types.mli[619,21835+4]..[619,21835+30])
                Immutable
                "lbl_private" (typing/types.mli[619,21835+4]..[619,21835+15])                core_type (typing/types.mli[619,21835+17]..[619,21835+29])
                  Ptyp_constr "private_flag" (typing/types.mli[619,21835+17]..[619,21835+29])
                  []
              (typing/types.mli[620,21898+4]..[620,21898+24])
                Immutable
                "lbl_loc" (typing/types.mli[620,21898+4]..[620,21898+11])                core_type (typing/types.mli[620,21898+13]..[620,21898+23])
                  Ptyp_constr "Location.t" (typing/types.mli[620,21898+13]..[620,21898+23])
                  []
              (typing/types.mli[621,21923+4]..[621,21923+41])
                Immutable
                "lbl_attributes" (typing/types.mli[621,21923+4]..[621,21923+18])                core_type (typing/types.mli[621,21923+20]..[621,21923+40])
                  Ptyp_constr "Parsetree.attributes" (typing/types.mli[621,21923+20]..[621,21923+40])
                  []
              (typing/types.mli[622,21965+4]..[622,21965+19])
                Immutable
                "lbl_uid" (typing/types.mli[622,21965+4]..[622,21965+11])                core_type (typing/types.mli[622,21965+13]..[622,21965+18])
                  Ptyp_constr "Uid.t" (typing/types.mli[622,21965+13]..[622,21965+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/types.mli[629,22273+0]..[629,22273+54])
    Psig_value
    value_description "bound_value_identifiers" (typing/types.mli[629,22273+4]..[629,22273+27]) (typing/types.mli[629,22273+0]..[629,22273+54])
      attribute "ocaml.doc"
        [
          structure_item (typing/types.mli[625,21990+0]..[628,22201+71])
            Pstr_eval
            expression (typing/types.mli[625,21990+0]..[628,22201+71])
              Pexp_constant PConst_string(" Extracts the list of \"value\" identifiers bound by a signature.\n    \"Value\" identifiers are identifiers for signature components that\n    correspond to a run-time value: values, extensions, modules, classes.\n    Note: manifest primitives do not correspond to a run-time value! ",(typing/types.mli[625,21990+0]..[628,22201+71]),None)
        ]
      core_type (typing/types.mli[629,22273+29]..[629,22273+54])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[629,22273+29]..[629,22273+38])
          Ptyp_constr "signature" (typing/types.mli[629,22273+29]..[629,22273+38])
          []
        core_type (typing/types.mli[629,22273+42]..[629,22273+54])
          Ptyp_constr "list" (typing/types.mli[629,22273+50]..[629,22273+54])
          [
            core_type (typing/types.mli[629,22273+42]..[629,22273+49])
              Ptyp_constr "Ident.t" (typing/types.mli[629,22273+42]..[629,22273+49])
              []
          ]
      []
  signature_item (typing/types.mli[631,22329+0]..[631,22329+49])
    Psig_value
    value_description "signature_item_id" (typing/types.mli[631,22329+4]..[631,22329+21]) (typing/types.mli[631,22329+0]..[631,22329+49])
      core_type (typing/types.mli[631,22329+24]..[631,22329+49])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[631,22329+24]..[631,22329+38])
          Ptyp_constr "signature_item" (typing/types.mli[631,22329+24]..[631,22329+38])
          []
        core_type (typing/types.mli[631,22329+42]..[631,22329+49])
          Ptyp_constr "Ident.t" (typing/types.mli[631,22329+42]..[631,22329+49])
          []
      []
  signature_item (typing/types.mli[635,22420+0]..[635,22420+13])
    Psig_type Rec
    [
      type_declaration "snapshot" (typing/types.mli[635,22420+5]..[635,22420+13]) (typing/types.mli[635,22420+0]..[635,22420+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (typing/types.mli[637,22476+0]..[637,22476+30])
    Psig_value
    value_description "snapshot" (typing/types.mli[637,22476+4]..[637,22476+12]) (typing/types.mli[637,22476+0]..[637,22476+30])
      core_type (typing/types.mli[637,22476+14]..[637,22476+30])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[637,22476+14]..[637,22476+18])
          Ptyp_constr "unit" (typing/types.mli[637,22476+14]..[637,22476+18])
          []
        core_type (typing/types.mli[637,22476+22]..[637,22476+30])
          Ptyp_constr "snapshot" (typing/types.mli[637,22476+22]..[637,22476+30])
          []
      []
  signature_item (typing/types.mli[639,22575+0]..[639,22575+64])
    Psig_value
    value_description "backtrack" (typing/types.mli[639,22575+4]..[639,22575+13]) (typing/types.mli[639,22575+0]..[639,22575+64])
      core_type (typing/types.mli[639,22575+15]..[639,22575+64])
        Ptyp_arrow
        Labelled "cleanup_abbrev"
        core_type (typing/types.mli[639,22575+31]..[639,22575+43])
          Ptyp_arrow
          Nolabel
          core_type (typing/types.mli[639,22575+31]..[639,22575+35])
            Ptyp_constr "unit" (typing/types.mli[639,22575+31]..[639,22575+35])
            []
          core_type (typing/types.mli[639,22575+39]..[639,22575+43])
            Ptyp_constr "unit" (typing/types.mli[639,22575+39]..[639,22575+43])
            []
        core_type (typing/types.mli[639,22575+48]..[639,22575+64])
          Ptyp_arrow
          Nolabel
          core_type (typing/types.mli[639,22575+48]..[639,22575+56])
            Ptyp_constr "snapshot" (typing/types.mli[639,22575+48]..[639,22575+56])
            []
          core_type (typing/types.mli[639,22575+60]..[639,22575+64])
            Ptyp_constr "unit" (typing/types.mli[639,22575+60]..[639,22575+64])
            []
      []
  signature_item (typing/types.mli[643,22815+0]..[643,22815+35])
    Psig_value
    value_description "undo_compress" (typing/types.mli[643,22815+4]..[643,22815+17]) (typing/types.mli[643,22815+0]..[643,22815+35])
      core_type (typing/types.mli[643,22815+19]..[643,22815+35])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[643,22815+19]..[643,22815+27])
          Ptyp_constr "snapshot" (typing/types.mli[643,22815+19]..[643,22815+27])
          []
        core_type (typing/types.mli[643,22815+31]..[643,22815+35])
          Ptyp_constr "unit" (typing/types.mli[643,22815+31]..[643,22815+35])
          []
      []
  signature_item (typing/types.mli[649,23087+0]..[649,23087+45])
    Psig_value
    value_description "link_type" (typing/types.mli[649,23087+4]..[649,23087+13]) (typing/types.mli[649,23087+0]..[649,23087+45])
      core_type (typing/types.mli[649,23087+15]..[649,23087+45])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[649,23087+15]..[649,23087+24])
          Ptyp_constr "type_expr" (typing/types.mli[649,23087+15]..[649,23087+24])
          []
        core_type (typing/types.mli[649,23087+28]..[649,23087+45])
          Ptyp_arrow
          Nolabel
          core_type (typing/types.mli[649,23087+28]..[649,23087+37])
            Ptyp_constr "type_expr" (typing/types.mli[649,23087+28]..[649,23087+37])
            []
          core_type (typing/types.mli[649,23087+41]..[649,23087+45])
            Ptyp_constr "unit" (typing/types.mli[649,23087+41]..[649,23087+45])
            []
      []
  signature_item (typing/types.mli[652,23253+0]..[652,23253+49])
    Psig_value
    value_description "set_type_desc" (typing/types.mli[652,23253+4]..[652,23253+17]) (typing/types.mli[652,23253+0]..[652,23253+49])
      core_type (typing/types.mli[652,23253+19]..[652,23253+49])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[652,23253+19]..[652,23253+28])
          Ptyp_constr "type_expr" (typing/types.mli[652,23253+19]..[652,23253+28])
          []
        core_type (typing/types.mli[652,23253+32]..[652,23253+49])
          Ptyp_arrow
          Nolabel
          core_type (typing/types.mli[652,23253+32]..[652,23253+41])
            Ptyp_constr "type_desc" (typing/types.mli[652,23253+32]..[652,23253+41])
            []
          core_type (typing/types.mli[652,23253+45]..[652,23253+49])
            Ptyp_constr "unit" (typing/types.mli[652,23253+45]..[652,23253+49])
            []
      []
  signature_item (typing/types.mli[654,23362+0]..[654,23362+39])
    Psig_value
    value_description "set_level" (typing/types.mli[654,23362+4]..[654,23362+13]) (typing/types.mli[654,23362+0]..[654,23362+39])
      core_type (typing/types.mli[654,23362+15]..[654,23362+39])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[654,23362+15]..[654,23362+24])
          Ptyp_constr "type_expr" (typing/types.mli[654,23362+15]..[654,23362+24])
          []
        core_type (typing/types.mli[654,23362+28]..[654,23362+39])
          Ptyp_arrow
          Nolabel
          core_type (typing/types.mli[654,23362+28]..[654,23362+31])
            Ptyp_constr "int" (typing/types.mli[654,23362+28]..[654,23362+31])
            []
          core_type (typing/types.mli[654,23362+35]..[654,23362+39])
            Ptyp_constr "unit" (typing/types.mli[654,23362+35]..[654,23362+39])
            []
      []
  signature_item (typing/types.mli[655,23402+0]..[655,23402+39])
    Psig_value
    value_description "set_scope" (typing/types.mli[655,23402+4]..[655,23402+13]) (typing/types.mli[655,23402+0]..[655,23402+39])
      core_type (typing/types.mli[655,23402+15]..[655,23402+39])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[655,23402+15]..[655,23402+24])
          Ptyp_constr "type_expr" (typing/types.mli[655,23402+15]..[655,23402+24])
          []
        core_type (typing/types.mli[655,23402+28]..[655,23402+39])
          Ptyp_arrow
          Nolabel
          core_type (typing/types.mli[655,23402+28]..[655,23402+31])
            Ptyp_constr "int" (typing/types.mli[655,23402+28]..[655,23402+31])
            []
          core_type (typing/types.mli[655,23402+35]..[655,23402+39])
            Ptyp_constr "unit" (typing/types.mli[655,23402+35]..[655,23402+39])
            []
      []
  signature_item (typing/types.mli[656,23442+0]..[658,23500+44])
    Psig_value
    value_description "set_name" (typing/types.mli[656,23442+4]..[656,23442+12]) (typing/types.mli[656,23442+0]..[658,23500+44])
      core_type (typing/types.mli[657,23456+4]..[658,23500+44])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[657,23456+4]..[657,23456+40])
          Ptyp_constr "ref" (typing/types.mli[657,23456+37]..[657,23456+40])
          [
            core_type (typing/types.mli[657,23456+4]..[657,23456+36])
              Ptyp_constr "option" (typing/types.mli[657,23456+30]..[657,23456+36])
              [
                core_type (typing/types.mli[657,23456+5]..[657,23456+28])
                  Ptyp_tuple
                  [
                    core_type (typing/types.mli[657,23456+5]..[657,23456+11])
                      Ptyp_constr "Path.t" (typing/types.mli[657,23456+5]..[657,23456+11])
                      []
                    core_type (typing/types.mli[657,23456+14]..[657,23456+28])
                      Ptyp_constr "list" (typing/types.mli[657,23456+24]..[657,23456+28])
                      [
                        core_type (typing/types.mli[657,23456+14]..[657,23456+23])
                          Ptyp_constr "type_expr" (typing/types.mli[657,23456+14]..[657,23456+23])
                          []
                      ]
                  ]
              ]
          ]
        core_type (typing/types.mli[658,23500+4]..[658,23500+44])
          Ptyp_arrow
          Nolabel
          core_type (typing/types.mli[658,23500+4]..[658,23500+36])
            Ptyp_constr "option" (typing/types.mli[658,23500+30]..[658,23500+36])
            [
              core_type (typing/types.mli[658,23500+5]..[658,23500+28])
                Ptyp_tuple
                [
                  core_type (typing/types.mli[658,23500+5]..[658,23500+11])
                    Ptyp_constr "Path.t" (typing/types.mli[658,23500+5]..[658,23500+11])
                    []
                  core_type (typing/types.mli[658,23500+14]..[658,23500+28])
                    Ptyp_constr "list" (typing/types.mli[658,23500+24]..[658,23500+28])
                    [
                      core_type (typing/types.mli[658,23500+14]..[658,23500+23])
                        Ptyp_constr "type_expr" (typing/types.mli[658,23500+14]..[658,23500+23])
                        []
                    ]
                ]
            ]
          core_type (typing/types.mli[658,23500+40]..[658,23500+44])
            Ptyp_constr "unit" (typing/types.mli[658,23500+40]..[658,23500+44])
            []
      []
  signature_item (typing/types.mli[659,23545+0]..[659,23545+60])
    Psig_value
    value_description "set_row_field" (typing/types.mli[659,23545+4]..[659,23545+17]) (typing/types.mli[659,23545+0]..[659,23545+60])
      core_type (typing/types.mli[659,23545+19]..[659,23545+60])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[659,23545+19]..[659,23545+39])
          Ptyp_constr "ref" (typing/types.mli[659,23545+36]..[659,23545+39])
          [
            core_type (typing/types.mli[659,23545+19]..[659,23545+35])
              Ptyp_constr "option" (typing/types.mli[659,23545+29]..[659,23545+35])
              [
                core_type (typing/types.mli[659,23545+19]..[659,23545+28])
                  Ptyp_constr "row_field" (typing/types.mli[659,23545+19]..[659,23545+28])
                  []
              ]
          ]
        core_type (typing/types.mli[659,23545+43]..[659,23545+60])
          Ptyp_arrow
          Nolabel
          core_type (typing/types.mli[659,23545+43]..[659,23545+52])
            Ptyp_constr "row_field" (typing/types.mli[659,23545+43]..[659,23545+52])
            []
          core_type (typing/types.mli[659,23545+56]..[659,23545+60])
            Ptyp_constr "unit" (typing/types.mli[659,23545+56]..[659,23545+60])
            []
      []
  signature_item (typing/types.mli[660,23606+0]..[660,23606+57])
    Psig_value
    value_description "set_univar" (typing/types.mli[660,23606+4]..[660,23606+14]) (typing/types.mli[660,23606+0]..[660,23606+57])
      core_type (typing/types.mli[660,23606+16]..[660,23606+57])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[660,23606+16]..[660,23606+36])
          Ptyp_constr "ref" (typing/types.mli[660,23606+33]..[660,23606+36])
          [
            core_type (typing/types.mli[660,23606+16]..[660,23606+32])
              Ptyp_constr "option" (typing/types.mli[660,23606+26]..[660,23606+32])
              [
                core_type (typing/types.mli[660,23606+16]..[660,23606+25])
                  Ptyp_constr "type_expr" (typing/types.mli[660,23606+16]..[660,23606+25])
                  []
              ]
          ]
        core_type (typing/types.mli[660,23606+40]..[660,23606+57])
          Ptyp_arrow
          Nolabel
          core_type (typing/types.mli[660,23606+40]..[660,23606+49])
            Ptyp_constr "type_expr" (typing/types.mli[660,23606+40]..[660,23606+49])
            []
          core_type (typing/types.mli[660,23606+53]..[660,23606+57])
            Ptyp_constr "unit" (typing/types.mli[660,23606+53]..[660,23606+57])
            []
      []
  signature_item (typing/types.mli[661,23664+0]..[661,23664+57])
    Psig_value
    value_description "set_kind" (typing/types.mli[661,23664+4]..[661,23664+12]) (typing/types.mli[661,23664+0]..[661,23664+57])
      core_type (typing/types.mli[661,23664+14]..[661,23664+57])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[661,23664+14]..[661,23664+35])
          Ptyp_constr "ref" (typing/types.mli[661,23664+32]..[661,23664+35])
          [
            core_type (typing/types.mli[661,23664+14]..[661,23664+31])
              Ptyp_constr "option" (typing/types.mli[661,23664+25]..[661,23664+31])
              [
                core_type (typing/types.mli[661,23664+14]..[661,23664+24])
                  Ptyp_constr "field_kind" (typing/types.mli[661,23664+14]..[661,23664+24])
                  []
              ]
          ]
        core_type (typing/types.mli[661,23664+39]..[661,23664+57])
          Ptyp_arrow
          Nolabel
          core_type (typing/types.mli[661,23664+39]..[661,23664+49])
            Ptyp_constr "field_kind" (typing/types.mli[661,23664+39]..[661,23664+49])
            []
          core_type (typing/types.mli[661,23664+53]..[661,23664+57])
            Ptyp_constr "unit" (typing/types.mli[661,23664+53]..[661,23664+57])
            []
      []
  signature_item (typing/types.mli[662,23722+0]..[662,23722+51])
    Psig_value
    value_description "set_commu" (typing/types.mli[662,23722+4]..[662,23722+13]) (typing/types.mli[662,23722+0]..[662,23722+51])
      core_type (typing/types.mli[662,23722+15]..[662,23722+51])
        Ptyp_arrow
        Nolabel
        core_type (typing/types.mli[662,23722+15]..[662,23722+29])
          Ptyp_constr "ref" (typing/types.mli[662,23722+26]..[662,23722+29])
          [
            core_type (typing/types.mli[662,23722+15]..[662,23722+25])
              Ptyp_constr "commutable" (typing/types.mli[662,23722+15]..[662,23722+25])
              []
          ]
        core_type (typing/types.mli[662,23722+33]..[662,23722+51])
          Ptyp_arrow
          Nolabel
          core_type (typing/types.mli[662,23722+33]..[662,23722+43])
            Ptyp_constr "commutable" (typing/types.mli[662,23722+33]..[662,23722+43])
            []
          core_type (typing/types.mli[662,23722+47]..[662,23722+51])
            Ptyp_constr "unit" (typing/types.mli[662,23722+47]..[662,23722+51])
            []
      []
]

