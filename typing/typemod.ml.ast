[
  structure_item (typing/typemod.ml[16,1079+0]..[16,1079+9])
    Pstr_open Fresh
    module_expr (typing/typemod.ml[16,1079+5]..[16,1079+9])
      Pmod_ident "Misc" (typing/typemod.ml[16,1079+5]..[16,1079+9])
  structure_item (typing/typemod.ml[17,1089+0]..[17,1089+14])
    Pstr_open Fresh
    module_expr (typing/typemod.ml[17,1089+5]..[17,1089+14])
      Pmod_ident "Longident" (typing/typemod.ml[17,1089+5]..[17,1089+14])
  structure_item (typing/typemod.ml[18,1104+0]..[18,1104+9])
    Pstr_open Fresh
    module_expr (typing/typemod.ml[18,1104+5]..[18,1104+9])
      Pmod_ident "Path" (typing/typemod.ml[18,1104+5]..[18,1104+9])
  structure_item (typing/typemod.ml[19,1114+0]..[19,1114+13])
    Pstr_open Fresh
    module_expr (typing/typemod.ml[19,1114+5]..[19,1114+13])
      Pmod_ident "Asttypes" (typing/typemod.ml[19,1114+5]..[19,1114+13])
  structure_item (typing/typemod.ml[20,1128+0]..[20,1128+14])
    Pstr_open Fresh
    module_expr (typing/typemod.ml[20,1128+5]..[20,1128+14])
      Pmod_ident "Parsetree" (typing/typemod.ml[20,1128+5]..[20,1128+14])
  structure_item (typing/typemod.ml[21,1143+0]..[21,1143+10])
    Pstr_open Fresh
    module_expr (typing/typemod.ml[21,1143+5]..[21,1143+10])
      Pmod_ident "Types" (typing/typemod.ml[21,1143+5]..[21,1143+10])
  structure_item (typing/typemod.ml[22,1154+0]..[22,1154+11])
    Pstr_open Fresh
    module_expr (typing/typemod.ml[22,1154+5]..[22,1154+11])
      Pmod_ident "Format" (typing/typemod.ml[22,1154+5]..[22,1154+11])
  structure_item (typing/typemod.ml[24,1167+0]..[24,1167+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[24,1167+4]..[24,1167+6])
          Ppat_construct "()" (typing/typemod.ml[24,1167+4]..[24,1167+6])
          None
        expression (typing/typemod.ml[24,1167+9]..[24,1167+44])
          Pexp_apply
          expression (typing/typemod.ml[24,1167+9]..[24,1167+41])
            Pexp_ident "Includemod_errorprinter.register" (typing/typemod.ml[24,1167+9]..[24,1167+41])
          [
            <arg>
            Nolabel
              expression (typing/typemod.ml[24,1167+42]..[24,1167+44])
                Pexp_construct "()" (typing/typemod.ml[24,1167+42]..[24,1167+44])
                None
          ]
    ]
  structure_item (typing/typemod.ml[26,1213+0]..[26,1213+34])
    Pstr_module
    "String" (typing/typemod.ml[26,1213+7]..[26,1213+13])
      module_expr (typing/typemod.ml[26,1213+16]..[26,1213+34])
        Pmod_ident "Misc.Stdlib.String" (typing/typemod.ml[26,1213+16]..[26,1213+34])
  structure_item (typing/typemod.ml[28,1249+0]..[58,1907+3])
    Pstr_module
    "Sig_component_kind" (typing/typemod.ml[28,1249+7]..[28,1249+25])
      module_expr (typing/typemod.ml[28,1249+28]..[58,1907+3])
        Pmod_structure
        [
          structure_item (typing/typemod.ml[29,1284+2]..[36,1389+16])
            Pstr_type Rec
            [
              type_declaration "t" (typing/typemod.ml[29,1284+7]..[29,1284+8]) (typing/typemod.ml[29,1284+2]..[36,1389+16])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (typing/typemod.ml[30,1295+4]..[30,1295+11])
                        "Value" (typing/typemod.ml[30,1295+6]..[30,1295+11])
                        []
                        None
                      (typing/typemod.ml[31,1307+4]..[31,1307+10])
                        "Type" (typing/typemod.ml[31,1307+6]..[31,1307+10])
                        []
                        None
                      (typing/typemod.ml[32,1318+4]..[32,1318+12])
                        "Module" (typing/typemod.ml[32,1318+6]..[32,1318+12])
                        []
                        None
                      (typing/typemod.ml[33,1331+4]..[33,1331+17])
                        "Module_type" (typing/typemod.ml[33,1331+6]..[33,1331+17])
                        []
                        None
                      (typing/typemod.ml[34,1349+4]..[34,1349+27])
                        "Extension_constructor" (typing/typemod.ml[34,1349+6]..[34,1349+27])
                        []
                        None
                      (typing/typemod.ml[35,1377+4]..[35,1377+11])
                        "Class" (typing/typemod.ml[35,1377+6]..[35,1377+11])
                        []
                        None
                      (typing/typemod.ml[36,1389+4]..[36,1389+16])
                        "Class_type" (typing/typemod.ml[36,1389+6]..[36,1389+16])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (typing/typemod.ml[38,1407+2]..[45,1616+32])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/typemod.ml[38,1407+6]..[38,1407+15])
                  Ppat_var "to_string" (typing/typemod.ml[38,1407+6]..[38,1407+15])
                expression (typing/typemod.ml[38,1407+18]..[45,1616+32])
                  Pexp_function
                  [
                    <case>
                      pattern (typing/typemod.ml[39,1434+6]..[39,1434+11])
                        Ppat_construct "Value" (typing/typemod.ml[39,1434+6]..[39,1434+11])
                        None
                      expression (typing/typemod.ml[39,1434+15]..[39,1434+22])
                        Pexp_constant PConst_string("value",(typing/typemod.ml[39,1434+16]..[39,1434+21]),None)
                    <case>
                      pattern (typing/typemod.ml[40,1457+6]..[40,1457+10])
                        Ppat_construct "Type" (typing/typemod.ml[40,1457+6]..[40,1457+10])
                        None
                      expression (typing/typemod.ml[40,1457+14]..[40,1457+20])
                        Pexp_constant PConst_string("type",(typing/typemod.ml[40,1457+15]..[40,1457+19]),None)
                    <case>
                      pattern (typing/typemod.ml[41,1478+6]..[41,1478+12])
                        Ppat_construct "Module" (typing/typemod.ml[41,1478+6]..[41,1478+12])
                        None
                      expression (typing/typemod.ml[41,1478+16]..[41,1478+24])
                        Pexp_constant PConst_string("module",(typing/typemod.ml[41,1478+17]..[41,1478+23]),None)
                    <case>
                      pattern (typing/typemod.ml[42,1503+6]..[42,1503+17])
                        Ppat_construct "Module_type" (typing/typemod.ml[42,1503+6]..[42,1503+17])
                        None
                      expression (typing/typemod.ml[42,1503+21]..[42,1503+34])
                        Pexp_constant PConst_string("module type",(typing/typemod.ml[42,1503+22]..[42,1503+33]),None)
                    <case>
                      pattern (typing/typemod.ml[43,1538+6]..[43,1538+27])
                        Ppat_construct "Extension_constructor" (typing/typemod.ml[43,1538+6]..[43,1538+27])
                        None
                      expression (typing/typemod.ml[43,1538+31]..[43,1538+54])
                        Pexp_constant PConst_string("extension constructor",(typing/typemod.ml[43,1538+32]..[43,1538+53]),None)
                    <case>
                      pattern (typing/typemod.ml[44,1593+6]..[44,1593+11])
                        Ppat_construct "Class" (typing/typemod.ml[44,1593+6]..[44,1593+11])
                        None
                      expression (typing/typemod.ml[44,1593+15]..[44,1593+22])
                        Pexp_constant PConst_string("class",(typing/typemod.ml[44,1593+16]..[44,1593+21]),None)
                    <case>
                      pattern (typing/typemod.ml[45,1616+6]..[45,1616+16])
                        Ppat_construct "Class_type" (typing/typemod.ml[45,1616+6]..[45,1616+16])
                        None
                      expression (typing/typemod.ml[45,1616+20]..[45,1616+32])
                        Pexp_constant PConst_string("class type",(typing/typemod.ml[45,1616+21]..[45,1616+31]),None)
                  ]
            ]
          structure_item (typing/typemod.ml[48,1726+2]..[57,1894+12])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (typing/typemod.ml[47,1650+2]..[47,1650+75])
                        Pstr_eval
                        expression (typing/typemod.ml[47,1650+2]..[47,1650+75])
                          Pexp_constant PConst_string(" Whether the name of a component of that kind can appear in a type. ",(typing/typemod.ml[47,1650+2]..[47,1650+75]),None)
                    ]
                pattern (typing/typemod.ml[48,1726+6]..[48,1726+25])
                  Ppat_var "can_appear_in_types" (typing/typemod.ml[48,1726+6]..[48,1726+25])
                expression (typing/typemod.ml[48,1726+28]..[57,1894+12])
                  Pexp_function
                  [
                    <case>
                      pattern (typing/typemod.ml[49,1763+6]..[50,1775+27])
                        Ppat_or
                        pattern (typing/typemod.ml[49,1763+6]..[49,1763+11])
                          Ppat_construct "Value" (typing/typemod.ml[49,1763+6]..[49,1763+11])
                          None
                        pattern (typing/typemod.ml[50,1775+6]..[50,1775+27])
                          Ppat_construct "Extension_constructor" (typing/typemod.ml[50,1775+6]..[50,1775+27])
                          None
                      expression (typing/typemod.ml[51,1806+8]..[51,1806+13])
                        Pexp_construct "false" (typing/typemod.ml[51,1806+8]..[51,1806+13])
                        None
                    <case>
                      pattern (typing/typemod.ml[52,1820+6]..[56,1874+16])
                        Ppat_or
                        pattern (typing/typemod.ml[52,1820+6]..[55,1862+11])
                          Ppat_or
                          pattern (typing/typemod.ml[52,1820+6]..[54,1844+17])
                            Ppat_or
                            pattern (typing/typemod.ml[52,1820+6]..[53,1831+12])
                              Ppat_or
                              pattern (typing/typemod.ml[52,1820+6]..[52,1820+10])
                                Ppat_construct "Type" (typing/typemod.ml[52,1820+6]..[52,1820+10])
                                None
                              pattern (typing/typemod.ml[53,1831+6]..[53,1831+12])
                                Ppat_construct "Module" (typing/typemod.ml[53,1831+6]..[53,1831+12])
                                None
                            pattern (typing/typemod.ml[54,1844+6]..[54,1844+17])
                              Ppat_construct "Module_type" (typing/typemod.ml[54,1844+6]..[54,1844+17])
                              None
                          pattern (typing/typemod.ml[55,1862+6]..[55,1862+11])
                            Ppat_construct "Class" (typing/typemod.ml[55,1862+6]..[55,1862+11])
                            None
                        pattern (typing/typemod.ml[56,1874+6]..[56,1874+16])
                          Ppat_construct "Class_type" (typing/typemod.ml[56,1874+6]..[56,1874+16])
                          None
                      expression (typing/typemod.ml[57,1894+8]..[57,1894+12])
                        Pexp_construct "true" (typing/typemod.ml[57,1894+8]..[57,1894+12])
                        None
                  ]
            ]
        ]
  structure_item (typing/typemod.ml[60,1912+0]..[76,2400+5])
    Pstr_type Rec
    [
      type_declaration "hiding_error" (typing/typemod.ml[60,1912+5]..[60,1912+17]) (typing/typemod.ml[60,1912+0]..[76,2400+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typemod.ml[61,1932+2]..[69,2196+5])
                "Illegal_shadowing" (typing/typemod.ml[61,1932+4]..[61,1932+21])
                [
                  (typing/typemod.ml[62,1959+6]..[62,1959+32])
                    Immutable
                    "shadowed_item_id" (typing/typemod.ml[62,1959+6]..[62,1959+22])                    core_type (typing/typemod.ml[62,1959+24]..[62,1959+31])
                      Ptyp_constr "Ident.t" (typing/typemod.ml[62,1959+24]..[62,1959+31])
                      []
                  (typing/typemod.ml[63,1992+6]..[63,1992+47])
                    Immutable
                    "shadowed_item_kind" (typing/typemod.ml[63,1992+6]..[63,1992+24])                    core_type (typing/typemod.ml[63,1992+26]..[63,1992+46])
                      Ptyp_constr "Sig_component_kind.t" (typing/typemod.ml[63,1992+26]..[63,1992+46])
                      []
                  (typing/typemod.ml[64,2040+6]..[64,2040+36])
                    Immutable
                    "shadowed_item_loc" (typing/typemod.ml[64,2040+6]..[64,2040+23])                    core_type (typing/typemod.ml[64,2040+25]..[64,2040+35])
                      Ptyp_constr "Location.t" (typing/typemod.ml[64,2040+25]..[64,2040+35])
                      []
                  (typing/typemod.ml[65,2077+6]..[65,2077+27])
                    Immutable
                    "shadower_id" (typing/typemod.ml[65,2077+6]..[65,2077+17])                    core_type (typing/typemod.ml[65,2077+19]..[65,2077+26])
                      Ptyp_constr "Ident.t" (typing/typemod.ml[65,2077+19]..[65,2077+26])
                      []
                  (typing/typemod.ml[66,2105+6]..[66,2105+23])
                    Immutable
                    "user_id" (typing/typemod.ml[66,2105+6]..[66,2105+13])                    core_type (typing/typemod.ml[66,2105+15]..[66,2105+22])
                      Ptyp_constr "Ident.t" (typing/typemod.ml[66,2105+15]..[66,2105+22])
                      []
                  (typing/typemod.ml[67,2129+6]..[67,2129+38])
                    Immutable
                    "user_kind" (typing/typemod.ml[67,2129+6]..[67,2129+15])                    core_type (typing/typemod.ml[67,2129+17]..[67,2129+37])
                      Ptyp_constr "Sig_component_kind.t" (typing/typemod.ml[67,2129+17]..[67,2129+37])
                      []
                  (typing/typemod.ml[68,2168+6]..[68,2168+27])
                    Immutable
                    "user_loc" (typing/typemod.ml[68,2168+6]..[68,2168+14])                    core_type (typing/typemod.ml[68,2168+16]..[68,2168+26])
                      Ptyp_constr "Location.t" (typing/typemod.ml[68,2168+16]..[68,2168+26])
                      []
                ]
                None
              (typing/typemod.ml[70,2202+2]..[76,2400+5])
                "Appears_in_signature" (typing/typemod.ml[70,2202+4]..[70,2202+24])
                [
                  (typing/typemod.ml[71,2232+6]..[71,2232+30])
                    Immutable
                    "opened_item_id" (typing/typemod.ml[71,2232+6]..[71,2232+20])                    core_type (typing/typemod.ml[71,2232+22]..[71,2232+29])
                      Ptyp_constr "Ident.t" (typing/typemod.ml[71,2232+22]..[71,2232+29])
                      []
                  (typing/typemod.ml[72,2263+6]..[72,2263+45])
                    Immutable
                    "opened_item_kind" (typing/typemod.ml[72,2263+6]..[72,2263+22])                    core_type (typing/typemod.ml[72,2263+24]..[72,2263+44])
                      Ptyp_constr "Sig_component_kind.t" (typing/typemod.ml[72,2263+24]..[72,2263+44])
                      []
                  (typing/typemod.ml[73,2309+6]..[73,2309+23])
                    Immutable
                    "user_id" (typing/typemod.ml[73,2309+6]..[73,2309+13])                    core_type (typing/typemod.ml[73,2309+15]..[73,2309+22])
                      Ptyp_constr "Ident.t" (typing/typemod.ml[73,2309+15]..[73,2309+22])
                      []
                  (typing/typemod.ml[74,2333+6]..[74,2333+38])
                    Immutable
                    "user_kind" (typing/typemod.ml[74,2333+6]..[74,2333+15])                    core_type (typing/typemod.ml[74,2333+17]..[74,2333+37])
                      Ptyp_constr "Sig_component_kind.t" (typing/typemod.ml[74,2333+17]..[74,2333+37])
                      []
                  (typing/typemod.ml[75,2372+6]..[75,2372+27])
                    Immutable
                    "user_loc" (typing/typemod.ml[75,2372+6]..[75,2372+14])                    core_type (typing/typemod.ml[75,2372+16]..[75,2372+26])
                      Ptyp_constr "Location.t" (typing/typemod.ml[75,2372+16]..[75,2372+26])
                      []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/typemod.ml[78,2407+0]..[107,3565+61])
    Pstr_type Rec
    [
      type_declaration "error" (typing/typemod.ml[78,2407+5]..[78,2407+10]) (typing/typemod.ml[78,2407+0]..[107,3565+61])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typemod.ml[79,2420+4]..[79,2420+31])
                "Cannot_apply" (typing/typemod.ml[79,2420+4]..[79,2420+16])
                [
                  core_type (typing/typemod.ml[79,2420+20]..[79,2420+31])
                    Ptyp_constr "module_type" (typing/typemod.ml[79,2420+20]..[79,2420+31])
                    []
                ]
                None
              (typing/typemod.ml[80,2452+2]..[80,2452+42])
                "Not_included" (typing/typemod.ml[80,2452+4]..[80,2452+16])
                [
                  core_type (typing/typemod.ml[80,2452+20]..[80,2452+42])
                    Ptyp_constr "Includemod.explanation" (typing/typemod.ml[80,2452+20]..[80,2452+42])
                    []
                ]
                None
              (typing/typemod.ml[81,2495+2]..[81,2495+46])
                "Cannot_eliminate_dependency" (typing/typemod.ml[81,2495+4]..[81,2495+31])
                [
                  core_type (typing/typemod.ml[81,2495+35]..[81,2495+46])
                    Ptyp_constr "module_type" (typing/typemod.ml[81,2495+35]..[81,2495+46])
                    []
                ]
                None
              (typing/typemod.ml[82,2542+2]..[82,2542+22])
                "Signature_expected" (typing/typemod.ml[82,2542+4]..[82,2542+22])
                []
                None
              (typing/typemod.ml[83,2565+2]..[83,2565+37])
                "Structure_expected" (typing/typemod.ml[83,2565+4]..[83,2565+22])
                [
                  core_type (typing/typemod.ml[83,2565+26]..[83,2565+37])
                    Ptyp_constr "module_type" (typing/typemod.ml[83,2565+26]..[83,2565+37])
                    []
                ]
                None
              (typing/typemod.ml[84,2603+2]..[84,2603+36])
                "With_no_component" (typing/typemod.ml[84,2603+4]..[84,2603+21])
                [
                  core_type (typing/typemod.ml[84,2603+25]..[84,2603+36])
                    Ptyp_constr "Longident.t" (typing/typemod.ml[84,2603+25]..[84,2603+36])
                    []
                ]
                None
              (typing/typemod.ml[85,2640+2]..[85,2640+57])
                "With_mismatch" (typing/typemod.ml[85,2640+4]..[85,2640+17])
                [
                  core_type (typing/typemod.ml[85,2640+21]..[85,2640+32])
                    Ptyp_constr "Longident.t" (typing/typemod.ml[85,2640+21]..[85,2640+32])
                    []
                  core_type (typing/typemod.ml[85,2640+35]..[85,2640+57])
                    Ptyp_constr "Includemod.explanation" (typing/typemod.ml[85,2640+35]..[85,2640+57])
                    []
                ]
                None
              (typing/typemod.ml[86,2698+2]..[87,2746+51])
                "With_makes_applicative_functor_ill_typed" (typing/typemod.ml[86,2698+4]..[86,2698+44])
                [
                  core_type (typing/typemod.ml[87,2746+6]..[87,2746+17])
                    Ptyp_constr "Longident.t" (typing/typemod.ml[87,2746+6]..[87,2746+17])
                    []
                  core_type (typing/typemod.ml[87,2746+20]..[87,2746+26])
                    Ptyp_constr "Path.t" (typing/typemod.ml[87,2746+20]..[87,2746+26])
                    []
                  core_type (typing/typemod.ml[87,2746+29]..[87,2746+51])
                    Ptyp_constr "Includemod.explanation" (typing/typemod.ml[87,2746+29]..[87,2746+51])
                    []
                ]
                None
              (typing/typemod.ml[88,2798+2]..[88,2798+63])
                "With_changes_module_alias" (typing/typemod.ml[88,2798+4]..[88,2798+29])
                [
                  core_type (typing/typemod.ml[88,2798+33]..[88,2798+44])
                    Ptyp_constr "Longident.t" (typing/typemod.ml[88,2798+33]..[88,2798+44])
                    []
                  core_type (typing/typemod.ml[88,2798+47]..[88,2798+54])
                    Ptyp_constr "Ident.t" (typing/typemod.ml[88,2798+47]..[88,2798+54])
                    []
                  core_type (typing/typemod.ml[88,2798+57]..[88,2798+63])
                    Ptyp_constr "Path.t" (typing/typemod.ml[88,2798+57]..[88,2798+63])
                    []
                ]
                None
              (typing/typemod.ml[89,2862+2]..[89,2862+39])
                "With_cannot_remove_constrained_type" (typing/typemod.ml[89,2862+4]..[89,2862+39])
                []
                None
              (typing/typemod.ml[90,2902+2]..[90,2902+50])
                "Repeated_name" (typing/typemod.ml[90,2902+4]..[90,2902+17])
                [
                  core_type (typing/typemod.ml[90,2902+21]..[90,2902+41])
                    Ptyp_constr "Sig_component_kind.t" (typing/typemod.ml[90,2902+21]..[90,2902+41])
                    []
                  core_type (typing/typemod.ml[90,2902+44]..[90,2902+50])
                    Ptyp_constr "string" (typing/typemod.ml[90,2902+44]..[90,2902+50])
                    []
                ]
                None
              (typing/typemod.ml[91,2953+2]..[91,2953+34])
                "Non_generalizable" (typing/typemod.ml[91,2953+4]..[91,2953+21])
                [
                  core_type (typing/typemod.ml[91,2953+25]..[91,2953+34])
                    Ptyp_constr "type_expr" (typing/typemod.ml[91,2953+25]..[91,2953+34])
                    []
                ]
                None
              (typing/typemod.ml[92,2988+2]..[92,2988+43])
                "Non_generalizable_module" (typing/typemod.ml[92,2988+4]..[92,2988+28])
                [
                  core_type (typing/typemod.ml[92,2988+32]..[92,2988+43])
                    Ptyp_constr "module_type" (typing/typemod.ml[92,2988+32]..[92,2988+43])
                    []
                ]
                None
              (typing/typemod.ml[93,3032+2]..[93,3032+40])
                "Implementation_is_required" (typing/typemod.ml[93,3032+4]..[93,3032+30])
                [
                  core_type (typing/typemod.ml[93,3032+34]..[93,3032+40])
                    Ptyp_constr "string" (typing/typemod.ml[93,3032+34]..[93,3032+40])
                    []
                ]
                None
              (typing/typemod.ml[94,3073+2]..[94,3073+36])
                "Interface_not_compiled" (typing/typemod.ml[94,3073+4]..[94,3073+26])
                [
                  core_type (typing/typemod.ml[94,3073+30]..[94,3073+36])
                    Ptyp_constr "string" (typing/typemod.ml[94,3073+30]..[94,3073+36])
                    []
                ]
                None
              (typing/typemod.ml[95,3110+2]..[95,3110+31])
                "Not_allowed_in_functor_body" (typing/typemod.ml[95,3110+4]..[95,3110+31])
                []
                None
              (typing/typemod.ml[96,3142+2]..[96,3142+36])
                "Not_a_packed_module" (typing/typemod.ml[96,3142+4]..[96,3142+23])
                [
                  core_type (typing/typemod.ml[96,3142+27]..[96,3142+36])
                    Ptyp_constr "type_expr" (typing/typemod.ml[96,3142+27]..[96,3142+36])
                    []
                ]
                None
              (typing/typemod.ml[97,3179+2]..[97,3179+41])
                "Incomplete_packed_module" (typing/typemod.ml[97,3179+4]..[97,3179+28])
                [
                  core_type (typing/typemod.ml[97,3179+32]..[97,3179+41])
                    Ptyp_constr "type_expr" (typing/typemod.ml[97,3179+32]..[97,3179+41])
                    []
                ]
                None
              (typing/typemod.ml[98,3221+2]..[98,3221+43])
                "Scoping_pack" (typing/typemod.ml[98,3221+4]..[98,3221+16])
                [
                  core_type (typing/typemod.ml[98,3221+20]..[98,3221+31])
                    Ptyp_constr "Longident.t" (typing/typemod.ml[98,3221+20]..[98,3221+31])
                    []
                  core_type (typing/typemod.ml[98,3221+34]..[98,3221+43])
                    Ptyp_constr "type_expr" (typing/typemod.ml[98,3221+34]..[98,3221+43])
                    []
                ]
                None
              (typing/typemod.ml[99,3265+2]..[99,3265+42])
                "Recursive_module_require_explicit_type" (typing/typemod.ml[99,3265+4]..[99,3265+42])
                []
                None
              (typing/typemod.ml[100,3308+2]..[100,3308+20])
                "Apply_generative" (typing/typemod.ml[100,3308+4]..[100,3308+20])
                []
                None
              (typing/typemod.ml[101,3329+2]..[101,3329+33])
                "Cannot_scrape_alias" (typing/typemod.ml[101,3329+4]..[101,3329+23])
                [
                  core_type (typing/typemod.ml[101,3329+27]..[101,3329+33])
                    Ptyp_constr "Path.t" (typing/typemod.ml[101,3329+27]..[101,3329+33])
                    []
                ]
                None
              (typing/typemod.ml[102,3363+2]..[102,3363+40])
                "Cannot_scrape_package_type" (typing/typemod.ml[102,3363+4]..[102,3363+30])
                [
                  core_type (typing/typemod.ml[102,3363+34]..[102,3363+40])
                    Ptyp_constr "Path.t" (typing/typemod.ml[102,3363+34]..[102,3363+40])
                    []
                ]
                None
              (typing/typemod.ml[103,3404+2]..[103,3404+53])
                "Badly_formed_signature" (typing/typemod.ml[103,3404+4]..[103,3404+26])
                [
                  core_type (typing/typemod.ml[103,3404+30]..[103,3404+36])
                    Ptyp_constr "string" (typing/typemod.ml[103,3404+30]..[103,3404+36])
                    []
                  core_type (typing/typemod.ml[103,3404+39]..[103,3404+53])
                    Ptyp_constr "Typedecl.error" (typing/typemod.ml[103,3404+39]..[103,3404+53])
                    []
                ]
                None
              (typing/typemod.ml[104,3458+2]..[104,3458+34])
                "Cannot_hide_id" (typing/typemod.ml[104,3458+4]..[104,3458+18])
                [
                  core_type (typing/typemod.ml[104,3458+22]..[104,3458+34])
                    Ptyp_constr "hiding_error" (typing/typemod.ml[104,3458+22]..[104,3458+34])
                    []
                ]
                None
              (typing/typemod.ml[105,3493+2]..[105,3493+26])
                "Invalid_type_subst_rhs" (typing/typemod.ml[105,3493+4]..[105,3493+26])
                []
                None
              (typing/typemod.ml[106,3520+2]..[106,3520+44])
                "Unpackable_local_modtype_subst" (typing/typemod.ml[106,3520+4]..[106,3520+34])
                [
                  core_type (typing/typemod.ml[106,3520+38]..[106,3520+44])
                    Ptyp_constr "Path.t" (typing/typemod.ml[106,3520+38]..[106,3520+44])
                    []
                ]
                None
              (typing/typemod.ml[107,3565+2]..[107,3565+61])
                "With_cannot_remove_packed_modtype" (typing/typemod.ml[107,3565+4]..[107,3565+37])
                [
                  core_type (typing/typemod.ml[107,3565+41]..[107,3565+47])
                    Ptyp_constr "Path.t" (typing/typemod.ml[107,3565+41]..[107,3565+47])
                    []
                  core_type (typing/typemod.ml[107,3565+50]..[107,3565+61])
                    Ptyp_constr "module_type" (typing/typemod.ml[107,3565+50]..[107,3565+61])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/typemod.ml[109,3628+0]..[109,3628+45])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (typing/typemod.ml[109,3628+0]..[109,3628+45])
          pext_name = "Error"
          pext_kind =
            Pext_decl
              [
                core_type (typing/typemod.ml[109,3628+19]..[109,3628+29])
                  Ptyp_constr "Location.t" (typing/typemod.ml[109,3628+19]..[109,3628+29])
                  []
                core_type (typing/typemod.ml[109,3628+32]..[109,3628+37])
                  Ptyp_constr "Env.t" (typing/typemod.ml[109,3628+32]..[109,3628+37])
                  []
                core_type (typing/typemod.ml[109,3628+40]..[109,3628+45])
                  Ptyp_constr "error" (typing/typemod.ml[109,3628+40]..[109,3628+45])
                  []
              ]
              None
  structure_item (typing/typemod.ml[110,3674+0]..[110,3674+41])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (typing/typemod.ml[110,3674+0]..[110,3674+41])
          pext_name = "Error_forward"
          pext_kind =
            Pext_decl
              [
                core_type (typing/typemod.ml[110,3674+27]..[110,3674+41])
                  Ptyp_constr "Location.error" (typing/typemod.ml[110,3674+27]..[110,3674+41])
                  []
              ]
              None
  structure_item (typing/typemod.ml[112,3717+0]..[112,3717+14])
    Pstr_open Fresh
    module_expr (typing/typemod.ml[112,3717+5]..[112,3717+14])
      Pmod_ident "Typedtree" (typing/typemod.ml[112,3717+5]..[112,3717+14])
  structure_item (typing/typemod.ml[114,3733+0]..[118,3884+28])
    Pstr_value Rec
    [
      <def>
        pattern (typing/typemod.ml[114,3733+8]..[114,3733+19])
          Ppat_var "path_concat" (typing/typemod.ml[114,3733+8]..[114,3733+19])
        expression (typing/typemod.ml[114,3733+20]..[118,3884+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[114,3733+20]..[114,3733+24])
            Ppat_var "head" (typing/typemod.ml[114,3733+20]..[114,3733+24])
          expression (typing/typemod.ml[114,3733+25]..[118,3884+28]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[114,3733+25]..[114,3733+26])
              Ppat_var "p" (typing/typemod.ml[114,3733+25]..[114,3733+26])
            expression (typing/typemod.ml[115,3762+2]..[118,3884+28])
              Pexp_match
              expression (typing/typemod.ml[115,3762+8]..[115,3762+9])
                Pexp_ident "p" (typing/typemod.ml[115,3762+8]..[115,3762+9])
              [
                <case>
                  pattern (typing/typemod.ml[116,3777+4]..[116,3777+15])
                    Ppat_construct "Pident" (typing/typemod.ml[116,3777+4]..[116,3777+10])
                    Some
                      []
                      pattern (typing/typemod.ml[116,3777+11]..[116,3777+15])
                        Ppat_var "tail" (typing/typemod.ml[116,3777+11]..[116,3777+15])
                  expression (typing/typemod.ml[116,3777+19]..[116,3777+54])
                    Pexp_construct "Pdot" (typing/typemod.ml[116,3777+19]..[116,3777+23])
                    Some
                      expression (typing/typemod.ml[116,3777+24]..[116,3777+54])
                        Pexp_tuple
                        [
                          expression (typing/typemod.ml[116,3777+25]..[116,3777+36])
                            Pexp_construct "Pident" (typing/typemod.ml[116,3777+25]..[116,3777+31])
                            Some
                              expression (typing/typemod.ml[116,3777+32]..[116,3777+36])
                                Pexp_ident "head" (typing/typemod.ml[116,3777+32]..[116,3777+36])
                          expression (typing/typemod.ml[116,3777+38]..[116,3777+53])
                            Pexp_apply
                            expression (typing/typemod.ml[116,3777+38]..[116,3777+48])
                              Pexp_ident "Ident.name" (typing/typemod.ml[116,3777+38]..[116,3777+48])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[116,3777+49]..[116,3777+53])
                                  Pexp_ident "tail" (typing/typemod.ml[116,3777+49]..[116,3777+53])
                            ]
                        ]
                <case>
                  pattern (typing/typemod.ml[117,3832+4]..[117,3832+17])
                    Ppat_construct "Pdot" (typing/typemod.ml[117,3832+4]..[117,3832+8])
                    Some
                      []
                      pattern (typing/typemod.ml[117,3832+9]..[117,3832+17])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[117,3832+10]..[117,3832+13])
                            Ppat_var "pre" (typing/typemod.ml[117,3832+10]..[117,3832+13])
                          pattern (typing/typemod.ml[117,3832+15]..[117,3832+16])
                            Ppat_var "s" (typing/typemod.ml[117,3832+15]..[117,3832+16])
                        ]
                  expression (typing/typemod.ml[117,3832+21]..[117,3832+51])
                    Pexp_construct "Pdot" (typing/typemod.ml[117,3832+21]..[117,3832+25])
                    Some
                      expression (typing/typemod.ml[117,3832+26]..[117,3832+51])
                        Pexp_tuple
                        [
                          expression (typing/typemod.ml[117,3832+27]..[117,3832+47])
                            Pexp_apply
                            expression (typing/typemod.ml[117,3832+27]..[117,3832+38])
                              Pexp_ident "path_concat" (typing/typemod.ml[117,3832+27]..[117,3832+38])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[117,3832+39]..[117,3832+43])
                                  Pexp_ident "head" (typing/typemod.ml[117,3832+39]..[117,3832+43])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[117,3832+44]..[117,3832+47])
                                  Pexp_ident "pre" (typing/typemod.ml[117,3832+44]..[117,3832+47])
                            ]
                          expression (typing/typemod.ml[117,3832+49]..[117,3832+50])
                            Pexp_ident "s" (typing/typemod.ml[117,3832+49]..[117,3832+50])
                        ]
                <case>
                  pattern (typing/typemod.ml[118,3884+4]..[118,3884+12])
                    Ppat_construct "Papply" (typing/typemod.ml[118,3884+4]..[118,3884+10])
                    Some
                      []
                      pattern (typing/typemod.ml[118,3884+11]..[118,3884+12])
                        Ppat_any
                  expression (typing/typemod.ml[118,3884+16]..[118,3884+28])
                    Pexp_assert
                    expression (typing/typemod.ml[118,3884+23]..[118,3884+28])
                      Pexp_construct "false" (typing/typemod.ml[118,3884+23]..[118,3884+28])
                      None
              ]
    ]
  structure_item (typing/typemod.ml[122,3960+0]..[127,4132+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[122,3960+4]..[122,3960+15])
          Ppat_var "extract_sig" (typing/typemod.ml[122,3960+4]..[122,3960+15])
        expression (typing/typemod.ml[122,3960+16]..[127,4132+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[122,3960+16]..[122,3960+19])
            Ppat_var "env" (typing/typemod.ml[122,3960+16]..[122,3960+19])
          expression (typing/typemod.ml[122,3960+20]..[127,4132+51]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[122,3960+20]..[122,3960+23])
              Ppat_var "loc" (typing/typemod.ml[122,3960+20]..[122,3960+23])
            expression (typing/typemod.ml[122,3960+24]..[127,4132+51]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[122,3960+24]..[122,3960+27])
                Ppat_var "mty" (typing/typemod.ml[122,3960+24]..[122,3960+27])
              expression (typing/typemod.ml[123,3990+2]..[127,4132+51])
                Pexp_match
                expression (typing/typemod.ml[123,3990+8]..[123,3990+32])
                  Pexp_apply
                  expression (typing/typemod.ml[123,3990+8]..[123,3990+24])
                    Pexp_ident "Env.scrape_alias" (typing/typemod.ml[123,3990+8]..[123,3990+24])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[123,3990+25]..[123,3990+28])
                        Pexp_ident "env" (typing/typemod.ml[123,3990+25]..[123,3990+28])
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[123,3990+29]..[123,3990+32])
                        Pexp_ident "mty" (typing/typemod.ml[123,3990+29]..[123,3990+32])
                  ]
                [
                  <case>
                    pattern (typing/typemod.ml[124,4028+4]..[124,4028+20])
                      Ppat_construct "Mty_signature" (typing/typemod.ml[124,4028+4]..[124,4028+17])
                      Some
                        []
                        pattern (typing/typemod.ml[124,4028+18]..[124,4028+20])
                          Ppat_var "sg" (typing/typemod.ml[124,4028+18]..[124,4028+20])
                    expression (typing/typemod.ml[124,4028+24]..[124,4028+26])
                      Pexp_ident "sg" (typing/typemod.ml[124,4028+24]..[124,4028+26])
                  <case>
                    pattern (typing/typemod.ml[125,4055+4]..[125,4055+18])
                      Ppat_construct "Mty_alias" (typing/typemod.ml[125,4055+4]..[125,4055+13])
                      Some
                        []
                        pattern (typing/typemod.ml[125,4055+14]..[125,4055+18])
                          Ppat_var "path" (typing/typemod.ml[125,4055+14]..[125,4055+18])
                    expression (typing/typemod.ml[126,4077+6]..[126,4077+54])
                      Pexp_apply
                      expression (typing/typemod.ml[126,4077+6]..[126,4077+11])
                        Pexp_ident "raise" (typing/typemod.ml[126,4077+6]..[126,4077+11])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[126,4077+11]..[126,4077+54])
                            Pexp_construct "Error" (typing/typemod.ml[126,4077+12]..[126,4077+17])
                            Some
                              expression (typing/typemod.ml[126,4077+17]..[126,4077+53])
                                Pexp_tuple
                                [
                                  expression (typing/typemod.ml[126,4077+18]..[126,4077+21])
                                    Pexp_ident "loc" (typing/typemod.ml[126,4077+18]..[126,4077+21])
                                  expression (typing/typemod.ml[126,4077+23]..[126,4077+26])
                                    Pexp_ident "env" (typing/typemod.ml[126,4077+23]..[126,4077+26])
                                  expression (typing/typemod.ml[126,4077+28]..[126,4077+52])
                                    Pexp_construct "Cannot_scrape_alias" (typing/typemod.ml[126,4077+28]..[126,4077+47])
                                    Some
                                      expression (typing/typemod.ml[126,4077+48]..[126,4077+52])
                                        Pexp_ident "path" (typing/typemod.ml[126,4077+48]..[126,4077+52])
                                ]
                      ]
                  <case>
                    pattern (typing/typemod.ml[127,4132+4]..[127,4132+5])
                      Ppat_any
                    expression (typing/typemod.ml[127,4132+9]..[127,4132+51])
                      Pexp_apply
                      expression (typing/typemod.ml[127,4132+9]..[127,4132+14])
                        Pexp_ident "raise" (typing/typemod.ml[127,4132+9]..[127,4132+14])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[127,4132+14]..[127,4132+51])
                            Pexp_construct "Error" (typing/typemod.ml[127,4132+15]..[127,4132+20])
                            Some
                              expression (typing/typemod.ml[127,4132+20]..[127,4132+50])
                                Pexp_tuple
                                [
                                  expression (typing/typemod.ml[127,4132+21]..[127,4132+24])
                                    Pexp_ident "loc" (typing/typemod.ml[127,4132+21]..[127,4132+24])
                                  expression (typing/typemod.ml[127,4132+26]..[127,4132+29])
                                    Pexp_ident "env" (typing/typemod.ml[127,4132+26]..[127,4132+29])
                                  expression (typing/typemod.ml[127,4132+31]..[127,4132+49])
                                    Pexp_construct "Signature_expected" (typing/typemod.ml[127,4132+31]..[127,4132+49])
                                    None
                                ]
                      ]
                ]
    ]
  structure_item (typing/typemod.ml[129,4185+0]..[134,4362+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[129,4185+4]..[129,4185+20])
          Ppat_var "extract_sig_open" (typing/typemod.ml[129,4185+4]..[129,4185+20])
        expression (typing/typemod.ml[129,4185+21]..[134,4362+57]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[129,4185+21]..[129,4185+24])
            Ppat_var "env" (typing/typemod.ml[129,4185+21]..[129,4185+24])
          expression (typing/typemod.ml[129,4185+25]..[134,4362+57]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[129,4185+25]..[129,4185+28])
              Ppat_var "loc" (typing/typemod.ml[129,4185+25]..[129,4185+28])
            expression (typing/typemod.ml[129,4185+29]..[134,4362+57]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[129,4185+29]..[129,4185+32])
                Ppat_var "mty" (typing/typemod.ml[129,4185+29]..[129,4185+32])
              expression (typing/typemod.ml[130,4220+2]..[134,4362+57])
                Pexp_match
                expression (typing/typemod.ml[130,4220+8]..[130,4220+32])
                  Pexp_apply
                  expression (typing/typemod.ml[130,4220+8]..[130,4220+24])
                    Pexp_ident "Env.scrape_alias" (typing/typemod.ml[130,4220+8]..[130,4220+24])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[130,4220+25]..[130,4220+28])
                        Pexp_ident "env" (typing/typemod.ml[130,4220+25]..[130,4220+28])
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[130,4220+29]..[130,4220+32])
                        Pexp_ident "mty" (typing/typemod.ml[130,4220+29]..[130,4220+32])
                  ]
                [
                  <case>
                    pattern (typing/typemod.ml[131,4258+4]..[131,4258+20])
                      Ppat_construct "Mty_signature" (typing/typemod.ml[131,4258+4]..[131,4258+17])
                      Some
                        []
                        pattern (typing/typemod.ml[131,4258+18]..[131,4258+20])
                          Ppat_var "sg" (typing/typemod.ml[131,4258+18]..[131,4258+20])
                    expression (typing/typemod.ml[131,4258+24]..[131,4258+26])
                      Pexp_ident "sg" (typing/typemod.ml[131,4258+24]..[131,4258+26])
                  <case>
                    pattern (typing/typemod.ml[132,4285+4]..[132,4285+18])
                      Ppat_construct "Mty_alias" (typing/typemod.ml[132,4285+4]..[132,4285+13])
                      Some
                        []
                        pattern (typing/typemod.ml[132,4285+14]..[132,4285+18])
                          Ppat_var "path" (typing/typemod.ml[132,4285+14]..[132,4285+18])
                    expression (typing/typemod.ml[133,4307+6]..[133,4307+54])
                      Pexp_apply
                      expression (typing/typemod.ml[133,4307+6]..[133,4307+11])
                        Pexp_ident "raise" (typing/typemod.ml[133,4307+6]..[133,4307+11])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[133,4307+11]..[133,4307+54])
                            Pexp_construct "Error" (typing/typemod.ml[133,4307+12]..[133,4307+17])
                            Some
                              expression (typing/typemod.ml[133,4307+17]..[133,4307+53])
                                Pexp_tuple
                                [
                                  expression (typing/typemod.ml[133,4307+18]..[133,4307+21])
                                    Pexp_ident "loc" (typing/typemod.ml[133,4307+18]..[133,4307+21])
                                  expression (typing/typemod.ml[133,4307+23]..[133,4307+26])
                                    Pexp_ident "env" (typing/typemod.ml[133,4307+23]..[133,4307+26])
                                  expression (typing/typemod.ml[133,4307+28]..[133,4307+52])
                                    Pexp_construct "Cannot_scrape_alias" (typing/typemod.ml[133,4307+28]..[133,4307+47])
                                    Some
                                      expression (typing/typemod.ml[133,4307+48]..[133,4307+52])
                                        Pexp_ident "path" (typing/typemod.ml[133,4307+48]..[133,4307+52])
                                ]
                      ]
                  <case>
                    pattern (typing/typemod.ml[134,4362+4]..[134,4362+7])
                      Ppat_var "mty" (typing/typemod.ml[134,4362+4]..[134,4362+7])
                    expression (typing/typemod.ml[134,4362+11]..[134,4362+57])
                      Pexp_apply
                      expression (typing/typemod.ml[134,4362+11]..[134,4362+16])
                        Pexp_ident "raise" (typing/typemod.ml[134,4362+11]..[134,4362+16])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[134,4362+16]..[134,4362+57])
                            Pexp_construct "Error" (typing/typemod.ml[134,4362+17]..[134,4362+22])
                            Some
                              expression (typing/typemod.ml[134,4362+22]..[134,4362+56])
                                Pexp_tuple
                                [
                                  expression (typing/typemod.ml[134,4362+23]..[134,4362+26])
                                    Pexp_ident "loc" (typing/typemod.ml[134,4362+23]..[134,4362+26])
                                  expression (typing/typemod.ml[134,4362+28]..[134,4362+31])
                                    Pexp_ident "env" (typing/typemod.ml[134,4362+28]..[134,4362+31])
                                  expression (typing/typemod.ml[134,4362+33]..[134,4362+55])
                                    Pexp_construct "Structure_expected" (typing/typemod.ml[134,4362+33]..[134,4362+51])
                                    Some
                                      expression (typing/typemod.ml[134,4362+52]..[134,4362+55])
                                        Pexp_ident "mty" (typing/typemod.ml[134,4362+52]..[134,4362+55])
                                ]
                      ]
                ]
    ]
  structure_item (typing/typemod.ml[138,4475+0]..[145,4813+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[138,4475+4]..[138,4475+14])
          Ppat_var "type_open_" (typing/typemod.ml[138,4475+4]..[138,4475+14])
        expression (typing/typemod.ml[138,4475+15]..[145,4813+18]) ghost
          Pexp_fun
          Optional "used_slot"
          None
          pattern (typing/typemod.ml[138,4475+16]..[138,4475+25])
            Ppat_var "used_slot" (typing/typemod.ml[138,4475+16]..[138,4475+25])
          expression (typing/typemod.ml[138,4475+26]..[145,4813+18]) ghost
            Pexp_fun
            Optional "toplevel"
            None
            pattern (typing/typemod.ml[138,4475+27]..[138,4475+35])
              Ppat_var "toplevel" (typing/typemod.ml[138,4475+27]..[138,4475+35])
            expression (typing/typemod.ml[138,4475+36]..[145,4813+18]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[138,4475+36]..[138,4475+39])
                Ppat_var "ovf" (typing/typemod.ml[138,4475+36]..[138,4475+39])
              expression (typing/typemod.ml[138,4475+40]..[145,4813+18]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[138,4475+40]..[138,4475+43])
                  Ppat_var "env" (typing/typemod.ml[138,4475+40]..[138,4475+43])
                expression (typing/typemod.ml[138,4475+44]..[145,4813+18]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[138,4475+44]..[138,4475+47])
                    Ppat_var "loc" (typing/typemod.ml[138,4475+44]..[138,4475+47])
                  expression (typing/typemod.ml[138,4475+48]..[145,4813+18]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[138,4475+48]..[138,4475+51])
                      Ppat_var "lid" (typing/typemod.ml[138,4475+48]..[138,4475+51])
                    expression (typing/typemod.ml[139,4529+2]..[145,4813+18])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[139,4529+6]..[139,4529+10])
                            Ppat_var "path" (typing/typemod.ml[139,4529+6]..[139,4529+10])
                          expression (typing/typemod.ml[139,4529+13]..[139,4529+71])
                            Pexp_apply
                            expression (typing/typemod.ml[139,4529+13]..[139,4529+35])
                              Pexp_ident "Env.lookup_module_path" (typing/typemod.ml[139,4529+13]..[139,4529+35])
                            [
                              <arg>
                              Labelled "load"
                                expression (typing/typemod.ml[139,4529+42]..[139,4529+46])
                                  Pexp_construct "true" (typing/typemod.ml[139,4529+42]..[139,4529+46])
                                  None
                              <arg>
                              Labelled "loc"
                                expression (typing/typemod.ml[139,4529+52]..[139,4529+59])
                                  Pexp_field
                                  expression (typing/typemod.ml[139,4529+52]..[139,4529+55])
                                    Pexp_ident "lid" (typing/typemod.ml[139,4529+52]..[139,4529+55])
                                  "loc" (typing/typemod.ml[139,4529+56]..[139,4529+59])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[139,4529+60]..[139,4529+67])
                                  Pexp_field
                                  expression (typing/typemod.ml[139,4529+60]..[139,4529+63])
                                    Pexp_ident "lid" (typing/typemod.ml[139,4529+60]..[139,4529+63])
                                  "txt" (typing/typemod.ml[139,4529+64]..[139,4529+67])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[139,4529+68]..[139,4529+71])
                                  Pexp_ident "env" (typing/typemod.ml[139,4529+68]..[139,4529+71])
                            ]
                      ]
                      expression (typing/typemod.ml[140,4604+2]..[145,4813+18])
                        Pexp_match
                        expression (typing/typemod.ml[140,4604+8]..[140,4604+65])
                          Pexp_apply
                          expression (typing/typemod.ml[140,4604+8]..[140,4604+26])
                            Pexp_ident "Env.open_signature" (typing/typemod.ml[140,4604+8]..[140,4604+26])
                          [
                            <arg>
                            Labelled "loc"
                              expression (typing/typemod.ml[140,4604+28]..[140,4604+31])
                                Pexp_ident "loc" (typing/typemod.ml[140,4604+28]..[140,4604+31])
                            <arg>
                            Optional "used_slot"
                              expression (typing/typemod.ml[140,4604+33]..[140,4604+42])
                                Pexp_ident "used_slot" (typing/typemod.ml[140,4604+33]..[140,4604+42])
                            <arg>
                            Optional "toplevel"
                              expression (typing/typemod.ml[140,4604+44]..[140,4604+52])
                                Pexp_ident "toplevel" (typing/typemod.ml[140,4604+44]..[140,4604+52])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[140,4604+53]..[140,4604+56])
                                Pexp_ident "ovf" (typing/typemod.ml[140,4604+53]..[140,4604+56])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[140,4604+57]..[140,4604+61])
                                Pexp_ident "path" (typing/typemod.ml[140,4604+57]..[140,4604+61])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[140,4604+62]..[140,4604+65])
                                Pexp_ident "env" (typing/typemod.ml[140,4604+62]..[140,4604+65])
                          ]
                        [
                          <case>
                            pattern (typing/typemod.ml[141,4675+4]..[141,4675+10])
                              Ppat_construct "Ok" (typing/typemod.ml[141,4675+4]..[141,4675+6])
                              Some
                                []
                                pattern (typing/typemod.ml[141,4675+7]..[141,4675+10])
                                  Ppat_var "env" (typing/typemod.ml[141,4675+7]..[141,4675+10])
                            expression (typing/typemod.ml[141,4675+14]..[141,4675+23])
                              Pexp_tuple
                              [
                                expression (typing/typemod.ml[141,4675+14]..[141,4675+18])
                                  Pexp_ident "path" (typing/typemod.ml[141,4675+14]..[141,4675+18])
                                expression (typing/typemod.ml[141,4675+20]..[141,4675+23])
                                  Pexp_ident "env" (typing/typemod.ml[141,4675+20]..[141,4675+23])
                              ]
                          <case>
                            pattern (typing/typemod.ml[142,4699+4]..[142,4699+11])
                              Ppat_construct "Error" (typing/typemod.ml[142,4699+4]..[142,4699+9])
                              Some
                                []
                                pattern (typing/typemod.ml[142,4699+10]..[142,4699+11])
                                  Ppat_any
                            expression (typing/typemod.ml[143,4714+6]..[145,4813+18])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[143,4714+10]..[143,4714+12])
                                    Ppat_var "md" (typing/typemod.ml[143,4714+10]..[143,4714+12])
                                  expression (typing/typemod.ml[143,4714+15]..[143,4714+39])
                                    Pexp_apply
                                    expression (typing/typemod.ml[143,4714+15]..[143,4714+30])
                                      Pexp_ident "Env.find_module" (typing/typemod.ml[143,4714+15]..[143,4714+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[143,4714+31]..[143,4714+35])
                                          Pexp_ident "path" (typing/typemod.ml[143,4714+31]..[143,4714+35])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[143,4714+36]..[143,4714+39])
                                          Pexp_ident "env" (typing/typemod.ml[143,4714+36]..[143,4714+39])
                                    ]
                              ]
                              expression (typing/typemod.ml[144,4757+6]..[145,4813+18])
                                Pexp_sequence
                                expression (typing/typemod.ml[144,4757+6]..[144,4757+54])
                                  Pexp_apply
                                  expression (typing/typemod.ml[144,4757+6]..[144,4757+12])
                                    Pexp_ident "ignore" (typing/typemod.ml[144,4757+6]..[144,4757+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[144,4757+13]..[144,4757+54])
                                        Pexp_apply
                                        expression (typing/typemod.ml[144,4757+14]..[144,4757+30])
                                          Pexp_ident "extract_sig_open" (typing/typemod.ml[144,4757+14]..[144,4757+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[144,4757+31]..[144,4757+34])
                                              Pexp_ident "env" (typing/typemod.ml[144,4757+31]..[144,4757+34])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[144,4757+35]..[144,4757+42])
                                              Pexp_field
                                              expression (typing/typemod.ml[144,4757+35]..[144,4757+38])
                                                Pexp_ident "lid" (typing/typemod.ml[144,4757+35]..[144,4757+38])
                                              "loc" (typing/typemod.ml[144,4757+39]..[144,4757+42])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[144,4757+43]..[144,4757+53])
                                              Pexp_field
                                              expression (typing/typemod.ml[144,4757+43]..[144,4757+45])
                                                Pexp_ident "md" (typing/typemod.ml[144,4757+43]..[144,4757+45])
                                              "md_type" (typing/typemod.ml[144,4757+46]..[144,4757+53])
                                        ]
                                  ]
                                expression (typing/typemod.ml[145,4813+6]..[145,4813+18])
                                  Pexp_assert
                                  expression (typing/typemod.ml[145,4813+13]..[145,4813+18])
                                    Pexp_construct "false" (typing/typemod.ml[145,4813+13]..[145,4813+18])
                                    None
                        ]
    ]
  structure_item (typing/typemod.ml[147,4833+0]..[199,6459+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[147,4833+4]..[147,4833+15])
          Ppat_var "initial_env" (typing/typemod.ml[147,4833+4]..[147,4833+15])
        expression (typing/typemod.ml[147,4833+16]..[199,6459+54]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (typing/typemod.ml[147,4833+17]..[147,4833+20])
            Ppat_var "loc" (typing/typemod.ml[147,4833+17]..[147,4833+20])
          expression (typing/typemod.ml[147,4833+21]..[199,6459+54]) ghost
            Pexp_fun
            Labelled "safe_string"
            None
            pattern (typing/typemod.ml[147,4833+22]..[147,4833+33])
              Ppat_var "safe_string" (typing/typemod.ml[147,4833+22]..[147,4833+33])
            expression (typing/typemod.ml[147,4833+34]..[199,6459+54]) ghost
              Pexp_fun
              Labelled "initially_opened_module"
              None
              pattern (typing/typemod.ml[147,4833+35]..[147,4833+58])
                Ppat_var "initially_opened_module" (typing/typemod.ml[147,4833+35]..[147,4833+58])
              expression (typing/typemod.ml[148,4892+4]..[199,6459+54]) ghost
                Pexp_fun
                Labelled "open_implicit_modules"
                None
                pattern (typing/typemod.ml[148,4892+5]..[148,4892+26])
                  Ppat_var "open_implicit_modules" (typing/typemod.ml[148,4892+5]..[148,4892+26])
                expression (typing/typemod.ml[149,4921+2]..[199,6459+54])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typemod.ml[149,4921+6]..[149,4921+9])
                        Ppat_var "env" (typing/typemod.ml[149,4921+6]..[149,4921+9])
                      expression (typing/typemod.ml[150,4933+4]..[153,4996+31])
                        Pexp_ifthenelse
                        expression (typing/typemod.ml[150,4933+7]..[150,4933+18])
                          Pexp_ident "safe_string" (typing/typemod.ml[150,4933+7]..[150,4933+18])
                        expression (typing/typemod.ml[151,4957+6]..[151,4957+29])
                          Pexp_ident "Env.initial_safe_string" (typing/typemod.ml[151,4957+6]..[151,4957+29])
                        Some
                          expression (typing/typemod.ml[153,4996+6]..[153,4996+31])
                            Pexp_ident "Env.initial_unsafe_string" (typing/typemod.ml[153,4996+6]..[153,4996+31])
                  ]
                  expression (typing/typemod.ml[155,5033+2]..[199,6459+54])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[155,5033+6]..[155,5033+17])
                          Ppat_var "open_module" (typing/typemod.ml[155,5033+6]..[155,5033+17])
                        expression (typing/typemod.ml[155,5033+18]..[161,5261+51]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[155,5033+18]..[155,5033+21])
                            Ppat_var "env" (typing/typemod.ml[155,5033+18]..[155,5033+21])
                          expression (typing/typemod.ml[155,5033+22]..[161,5261+51]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[155,5033+22]..[155,5033+23])
                              Ppat_var "m" (typing/typemod.ml[155,5033+22]..[155,5033+23])
                            expression (typing/typemod.ml[156,5059+4]..[161,5261+51])
                              Pexp_open Fresh
                              module_expr (typing/typemod.ml[156,5059+13]..[156,5059+21])
                                Pmod_ident "Asttypes" (typing/typemod.ml[156,5059+13]..[156,5059+21])
                              expression (typing/typemod.ml[157,5084+4]..[161,5261+51])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[157,5084+8]..[157,5084+14])
                                      Ppat_var "lexbuf" (typing/typemod.ml[157,5084+8]..[157,5084+14])
                                    expression (typing/typemod.ml[157,5084+17]..[157,5084+37])
                                      Pexp_apply
                                      expression (typing/typemod.ml[157,5084+17]..[157,5084+35])
                                        Pexp_ident "Lexing.from_string" (typing/typemod.ml[157,5084+17]..[157,5084+35])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[157,5084+36]..[157,5084+37])
                                            Pexp_ident "m" (typing/typemod.ml[157,5084+36]..[157,5084+37])
                                      ]
                                ]
                                expression (typing/typemod.ml[158,5125+4]..[161,5261+51])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typemod.ml[158,5125+8]..[158,5125+11])
                                        Ppat_var "txt" (typing/typemod.ml[158,5125+8]..[158,5125+11])
                                      expression (typing/typemod.ml[159,5139+6]..[160,5220+37])
                                        Pexp_sequence
                                        expression (typing/typemod.ml[159,5139+6]..[159,5139+79])
                                          Pexp_apply
                                          expression (typing/typemod.ml[159,5139+6]..[159,5139+19])
                                            Pexp_ident "Location.init" (typing/typemod.ml[159,5139+6]..[159,5139+19])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[159,5139+20]..[159,5139+26])
                                                Pexp_ident "lexbuf" (typing/typemod.ml[159,5139+20]..[159,5139+26])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[159,5139+27]..[159,5139+79])
                                                Pexp_apply
                                                expression (typing/typemod.ml[159,5139+28]..[159,5139+42])
                                                  Pexp_ident "Printf.sprintf" (typing/typemod.ml[159,5139+28]..[159,5139+42])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[159,5139+43]..[159,5139+76])
                                                      Pexp_constant PConst_string("command line argument: -open %S",(typing/typemod.ml[159,5139+44]..[159,5139+75]),None)
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[159,5139+77]..[159,5139+78])
                                                      Pexp_ident "m" (typing/typemod.ml[159,5139+77]..[159,5139+78])
                                                ]
                                          ]
                                        expression (typing/typemod.ml[160,5220+6]..[160,5220+37])
                                          Pexp_apply
                                          expression (typing/typemod.ml[160,5220+6]..[160,5220+30])
                                            Pexp_ident "Parse.simple_module_path" (typing/typemod.ml[160,5220+6]..[160,5220+30])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[160,5220+31]..[160,5220+37])
                                                Pexp_ident "lexbuf" (typing/typemod.ml[160,5220+31]..[160,5220+37])
                                          ]
                                  ]
                                  expression (typing/typemod.ml[161,5261+8]..[161,5261+51])
                                    Pexp_apply
                                    expression (typing/typemod.ml[161,5261+8]..[161,5261+11])
                                      Pexp_ident "snd" (typing/typemod.ml[161,5261+8]..[161,5261+11])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[161,5261+12]..[161,5261+51])
                                          Pexp_apply
                                          expression (typing/typemod.ml[161,5261+13]..[161,5261+23])
                                            Pexp_ident "type_open_" (typing/typemod.ml[161,5261+13]..[161,5261+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[161,5261+24]..[161,5261+32])
                                                Pexp_construct "Override" (typing/typemod.ml[161,5261+24]..[161,5261+32])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[161,5261+33]..[161,5261+36])
                                                Pexp_ident "env" (typing/typemod.ml[161,5261+33]..[161,5261+36])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[161,5261+37]..[161,5261+40])
                                                Pexp_ident "loc" (typing/typemod.ml[161,5261+37]..[161,5261+40])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[161,5261+41]..[161,5261+50])
                                                Pexp_record
                                                [
                                                  "txt" (typing/typemod.ml[161,5261+42]..[161,5261+45]) ghost
                                                    expression (typing/typemod.ml[161,5261+42]..[161,5261+45])
                                                      Pexp_ident "txt" (typing/typemod.ml[161,5261+42]..[161,5261+45])
                                                  "loc" (typing/typemod.ml[161,5261+46]..[161,5261+49]) ghost
                                                    expression (typing/typemod.ml[161,5261+46]..[161,5261+49])
                                                      Pexp_ident "loc" (typing/typemod.ml[161,5261+46]..[161,5261+49])
                                                ]
                                                None
                                          ]
                                    ]
                    ]
                    expression (typing/typemod.ml[163,5318+2]..[199,6459+54])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[163,5318+6]..[163,5318+15])
                            Ppat_var "add_units" (typing/typemod.ml[163,5318+6]..[163,5318+15])
                          expression (typing/typemod.ml[163,5318+16]..[168,5475+9]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[163,5318+16]..[163,5318+19])
                              Ppat_var "env" (typing/typemod.ml[163,5318+16]..[163,5318+19])
                            expression (typing/typemod.ml[163,5318+20]..[168,5475+9]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typemod.ml[163,5318+20]..[163,5318+25])
                                Ppat_var "units" (typing/typemod.ml[163,5318+20]..[163,5318+25])
                              expression (typing/typemod.ml[164,5346+4]..[168,5475+9])
                                Pexp_apply
                                expression (typing/typemod.ml[164,5346+4]..[164,5346+19])
                                  Pexp_ident "String.Set.fold" (typing/typemod.ml[164,5346+4]..[164,5346+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[165,5366+6]..[166,5389+73])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/typemod.ml[165,5366+11]..[165,5366+15])
                                        Ppat_var "name" (typing/typemod.ml[165,5366+11]..[165,5366+15])
                                      expression (typing/typemod.ml[165,5366+16]..[166,5389+72]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/typemod.ml[165,5366+16]..[165,5366+19])
                                          Ppat_var "env" (typing/typemod.ml[165,5366+16]..[165,5366+19])
                                        expression (typing/typemod.ml[166,5389+9]..[166,5389+72])
                                          Pexp_apply
                                          expression (typing/typemod.ml[166,5389+9]..[166,5389+37])
                                            Pexp_ident "Env.add_persistent_structure" (typing/typemod.ml[166,5389+9]..[166,5389+37])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[166,5389+38]..[166,5389+68])
                                                Pexp_apply
                                                expression (typing/typemod.ml[166,5389+39]..[166,5389+62])
                                                  Pexp_ident "Ident.create_persistent" (typing/typemod.ml[166,5389+39]..[166,5389+62])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[166,5389+63]..[166,5389+67])
                                                      Pexp_ident "name" (typing/typemod.ml[166,5389+63]..[166,5389+67])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[166,5389+69]..[166,5389+72])
                                                Pexp_ident "env" (typing/typemod.ml[166,5389+69]..[166,5389+72])
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[167,5463+6]..[167,5463+11])
                                      Pexp_ident "units" (typing/typemod.ml[167,5463+6]..[167,5463+11])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[168,5475+6]..[168,5475+9])
                                      Pexp_ident "env" (typing/typemod.ml[168,5475+6]..[168,5475+9])
                                ]
                      ]
                      expression (typing/typemod.ml[170,5490+2]..[199,6459+54])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typemod.ml[170,5490+6]..[170,5490+11])
                              Ppat_var "units" (typing/typemod.ml[170,5490+6]..[170,5490+11])
                            expression (typing/typemod.ml[171,5504+4]..[171,5504+64])
                              Pexp_apply
                              expression (typing/typemod.ml[171,5504+4]..[171,5504+12])
                                Pexp_ident "List.map" (typing/typemod.ml[171,5504+4]..[171,5504+12])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[171,5504+13]..[171,5504+45])
                                    Pexp_ident "Env.persistent_structures_of_dir" (typing/typemod.ml[171,5504+13]..[171,5504+45])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[171,5504+46]..[171,5504+64])
                                    Pexp_apply
                                    expression (typing/typemod.ml[171,5504+47]..[171,5504+60])
                                      Pexp_ident "Load_path.get" (typing/typemod.ml[171,5504+47]..[171,5504+60])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[171,5504+61]..[171,5504+63])
                                          Pexp_construct "()" (typing/typemod.ml[171,5504+61]..[171,5504+63])
                                          None
                                    ]
                              ]
                        ]
                        expression (typing/typemod.ml[173,5574+2]..[199,6459+54])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[173,5574+6]..[173,5574+16])
                                Ppat_tuple
                                [
                                  pattern (typing/typemod.ml[173,5574+6]..[173,5574+9])
                                    Ppat_var "env" (typing/typemod.ml[173,5574+6]..[173,5574+9])
                                  pattern (typing/typemod.ml[173,5574+11]..[173,5574+16])
                                    Ppat_var "units" (typing/typemod.ml[173,5574+11]..[173,5574+16])
                                ]
                              expression (typing/typemod.ml[174,5593+4]..[196,6369+34])
                                Pexp_match
                                expression (typing/typemod.ml[174,5593+10]..[174,5593+33])
                                  Pexp_ident "initially_opened_module" (typing/typemod.ml[174,5593+10]..[174,5593+33])
                                [
                                  <case>
                                    pattern (typing/typemod.ml[175,5632+6]..[175,5632+10])
                                      Ppat_construct "None" (typing/typemod.ml[175,5632+6]..[175,5632+10])
                                      None
                                    expression (typing/typemod.ml[175,5632+14]..[175,5632+26])
                                      Pexp_tuple
                                      [
                                        expression (typing/typemod.ml[175,5632+15]..[175,5632+18])
                                          Pexp_ident "env" (typing/typemod.ml[175,5632+15]..[175,5632+18])
                                        expression (typing/typemod.ml[175,5632+20]..[175,5632+25])
                                          Pexp_ident "units" (typing/typemod.ml[175,5632+20]..[175,5632+25])
                                      ]
                                  <case>
                                    pattern (typing/typemod.ml[176,5659+6]..[176,5659+12])
                                      Ppat_construct "Some" (typing/typemod.ml[176,5659+6]..[176,5659+10])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[176,5659+11]..[176,5659+12])
                                          Ppat_var "m" (typing/typemod.ml[176,5659+11]..[176,5659+12])
                                    expression (typing/typemod.ml[180,5840+8]..[196,6369+34])
                                      Pexp_let Rec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[180,5840+16]..[180,5840+20])
                                            Ppat_var "loop" (typing/typemod.ml[180,5840+16]..[180,5840+20])
                                          expression (typing/typemod.ml[180,5840+21]..[187,6079+44]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/typemod.ml[180,5840+21]..[180,5840+27])
                                              Ppat_var "before" (typing/typemod.ml[180,5840+21]..[180,5840+27])
                                            expression (typing/typemod.ml[180,5840+28]..[187,6079+44]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (typing/typemod.ml[180,5840+28]..[180,5840+33])
                                                Ppat_var "after" (typing/typemod.ml[180,5840+28]..[180,5840+33])
                                              expression (typing/typemod.ml[181,5876+10]..[187,6079+44])
                                                Pexp_match
                                                expression (typing/typemod.ml[181,5876+16]..[181,5876+21])
                                                  Pexp_ident "after" (typing/typemod.ml[181,5876+16]..[181,5876+21])
                                                [
                                                  <case>
                                                    pattern (typing/typemod.ml[182,5903+12]..[182,5903+14])
                                                      Ppat_construct "[]" (typing/typemod.ml[182,5903+12]..[182,5903+14])
                                                      None
                                                    expression (typing/typemod.ml[182,5903+18]..[182,5903+22])
                                                      Pexp_construct "None" (typing/typemod.ml[182,5903+18]..[182,5903+22])
                                                      None
                                                  <case>
                                                    pattern (typing/typemod.ml[183,5926+12]..[183,5926+26])
                                                      Ppat_construct "::" (typing/typemod.ml[183,5926+18]..[183,5926+20])
                                                      Some
                                                        []
                                                        pattern (typing/typemod.ml[183,5926+12]..[183,5926+26]) ghost
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/typemod.ml[183,5926+12]..[183,5926+17])
                                                              Ppat_var "units" (typing/typemod.ml[183,5926+12]..[183,5926+17])
                                                            pattern (typing/typemod.ml[183,5926+21]..[183,5926+26])
                                                              Ppat_var "after" (typing/typemod.ml[183,5926+21]..[183,5926+26])
                                                          ]
                                                    expression (typing/typemod.ml[184,5956+14]..[187,6079+44])
                                                      Pexp_ifthenelse
                                                      expression (typing/typemod.ml[184,5956+17]..[184,5956+39])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[184,5956+17]..[184,5956+31])
                                                          Pexp_ident "String.Set.mem" (typing/typemod.ml[184,5956+17]..[184,5956+31])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[184,5956+32]..[184,5956+33])
                                                              Pexp_ident "m" (typing/typemod.ml[184,5956+32]..[184,5956+33])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[184,5956+34]..[184,5956+39])
                                                              Pexp_ident "units" (typing/typemod.ml[184,5956+34]..[184,5956+39])
                                                        ]
                                                      expression (typing/typemod.ml[185,6001+16]..[185,6001+58])
                                                        Pexp_construct "Some" (typing/typemod.ml[185,6001+16]..[185,6001+20])
                                                        Some
                                                          expression (typing/typemod.ml[185,6001+21]..[185,6001+58])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typemod.ml[185,6001+22]..[185,6001+27])
                                                                Pexp_ident "units" (typing/typemod.ml[185,6001+22]..[185,6001+27])
                                                              expression (typing/typemod.ml[185,6001+29]..[185,6001+57])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[185,6001+29]..[185,6001+44])
                                                                  Pexp_ident "List.rev_append" (typing/typemod.ml[185,6001+29]..[185,6001+44])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[185,6001+45]..[185,6001+51])
                                                                      Pexp_ident "before" (typing/typemod.ml[185,6001+45]..[185,6001+51])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[185,6001+52]..[185,6001+57])
                                                                      Pexp_ident "after" (typing/typemod.ml[185,6001+52]..[185,6001+57])
                                                                ]
                                                            ]
                                                      Some
                                                        expression (typing/typemod.ml[187,6079+16]..[187,6079+44])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[187,6079+16]..[187,6079+20])
                                                            Pexp_ident "loop" (typing/typemod.ml[187,6079+16]..[187,6079+20])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[187,6079+21]..[187,6079+38])
                                                                Pexp_construct "::" (typing/typemod.ml[187,6079+28]..[187,6079+30])
                                                                Some
                                                                  expression (typing/typemod.ml[187,6079+22]..[187,6079+37]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typemod.ml[187,6079+22]..[187,6079+27])
Pexp_ident "units" (typing/typemod.ml[187,6079+22]..[187,6079+27])
                                                                      expression (typing/typemod.ml[187,6079+31]..[187,6079+37])
Pexp_ident "before" (typing/typemod.ml[187,6079+31]..[187,6079+37])
                                                                    ]
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[187,6079+39]..[187,6079+44])
                                                                Pexp_ident "after" (typing/typemod.ml[187,6079+39]..[187,6079+44])
                                                          ]
                                                ]
                                      ]
                                      expression (typing/typemod.ml[189,6135+8]..[196,6369+34])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[189,6135+12]..[189,6135+22])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[189,6135+12]..[189,6135+15])
                                                  Ppat_var "env" (typing/typemod.ml[189,6135+12]..[189,6135+15])
                                                pattern (typing/typemod.ml[189,6135+17]..[189,6135+22])
                                                  Ppat_var "units" (typing/typemod.ml[189,6135+17]..[189,6135+22])
                                              ]
                                            expression (typing/typemod.ml[190,6160+10]..[194,6296+61])
                                              Pexp_match
                                              expression (typing/typemod.ml[190,6160+16]..[190,6160+29])
                                                Pexp_apply
                                                expression (typing/typemod.ml[190,6160+16]..[190,6160+20])
                                                  Pexp_ident "loop" (typing/typemod.ml[190,6160+16]..[190,6160+20])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[190,6160+21]..[190,6160+23])
                                                      Pexp_construct "[]" (typing/typemod.ml[190,6160+21]..[190,6160+23])
                                                      None
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[190,6160+24]..[190,6160+29])
                                                      Pexp_ident "units" (typing/typemod.ml[190,6160+24]..[190,6160+29])
                                                ]
                                              [
                                                <case>
                                                  pattern (typing/typemod.ml[191,6195+12]..[191,6195+16])
                                                    Ppat_construct "None" (typing/typemod.ml[191,6195+12]..[191,6195+16])
                                                    None
                                                  expression (typing/typemod.ml[192,6215+14]..[192,6215+26])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[192,6215+15]..[192,6215+18])
                                                        Pexp_ident "env" (typing/typemod.ml[192,6215+15]..[192,6215+18])
                                                      expression (typing/typemod.ml[192,6215+20]..[192,6215+25])
                                                        Pexp_ident "units" (typing/typemod.ml[192,6215+20]..[192,6215+25])
                                                    ]
                                                <case>
                                                  pattern (typing/typemod.ml[193,6242+12]..[193,6242+50])
                                                    Ppat_construct "Some" (typing/typemod.ml[193,6242+12]..[193,6242+16])
                                                    Some
                                                      []
                                                      pattern (typing/typemod.ml[193,6242+17]..[193,6242+50])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typemod.ml[193,6242+18]..[193,6242+36])
                                                            Ppat_var "units_containing_m" (typing/typemod.ml[193,6242+18]..[193,6242+36])
                                                          pattern (typing/typemod.ml[193,6242+38]..[193,6242+49])
                                                            Ppat_var "other_units" (typing/typemod.ml[193,6242+38]..[193,6242+49])
                                                        ]
                                                  expression (typing/typemod.ml[194,6296+14]..[194,6296+61])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[194,6296+15]..[194,6296+47])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[194,6296+15]..[194,6296+24])
                                                          Pexp_ident "add_units" (typing/typemod.ml[194,6296+15]..[194,6296+24])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[194,6296+25]..[194,6296+28])
                                                              Pexp_ident "env" (typing/typemod.ml[194,6296+25]..[194,6296+28])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[194,6296+29]..[194,6296+47])
                                                              Pexp_ident "units_containing_m" (typing/typemod.ml[194,6296+29]..[194,6296+47])
                                                        ]
                                                      expression (typing/typemod.ml[194,6296+49]..[194,6296+60])
                                                        Pexp_ident "other_units" (typing/typemod.ml[194,6296+49]..[194,6296+60])
                                                    ]
                                              ]
                                        ]
                                        expression (typing/typemod.ml[196,6369+8]..[196,6369+34])
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[196,6369+9]..[196,6369+26])
                                              Pexp_apply
                                              expression (typing/typemod.ml[196,6369+9]..[196,6369+20])
                                                Pexp_ident "open_module" (typing/typemod.ml[196,6369+9]..[196,6369+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[196,6369+21]..[196,6369+24])
                                                    Pexp_ident "env" (typing/typemod.ml[196,6369+21]..[196,6369+24])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[196,6369+25]..[196,6369+26])
                                                    Pexp_ident "m" (typing/typemod.ml[196,6369+25]..[196,6369+26])
                                              ]
                                            expression (typing/typemod.ml[196,6369+28]..[196,6369+33])
                                              Pexp_ident "units" (typing/typemod.ml[196,6369+28]..[196,6369+33])
                                          ]
                                ]
                          ]
                          expression (typing/typemod.ml[198,6409+2]..[199,6459+54])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[198,6409+6]..[198,6409+9])
                                  Ppat_var "env" (typing/typemod.ml[198,6409+6]..[198,6409+9])
                                expression (typing/typemod.ml[198,6409+12]..[198,6409+46])
                                  Pexp_apply
                                  expression (typing/typemod.ml[198,6409+12]..[198,6409+26])
                                    Pexp_ident "List.fold_left" (typing/typemod.ml[198,6409+12]..[198,6409+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[198,6409+27]..[198,6409+36])
                                        Pexp_ident "add_units" (typing/typemod.ml[198,6409+27]..[198,6409+36])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[198,6409+37]..[198,6409+40])
                                        Pexp_ident "env" (typing/typemod.ml[198,6409+37]..[198,6409+40])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[198,6409+41]..[198,6409+46])
                                        Pexp_ident "units" (typing/typemod.ml[198,6409+41]..[198,6409+46])
                                  ]
                            ]
                            expression (typing/typemod.ml[199,6459+2]..[199,6459+54])
                              Pexp_apply
                              expression (typing/typemod.ml[199,6459+2]..[199,6459+16])
                                Pexp_ident "List.fold_left" (typing/typemod.ml[199,6459+2]..[199,6459+16])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[199,6459+17]..[199,6459+28])
                                    Pexp_ident "open_module" (typing/typemod.ml[199,6459+17]..[199,6459+28])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[199,6459+29]..[199,6459+32])
                                    Pexp_ident "env" (typing/typemod.ml[199,6459+29]..[199,6459+32])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[199,6459+33]..[199,6459+54])
                                    Pexp_ident "open_implicit_modules" (typing/typemod.ml[199,6459+33]..[199,6459+54])
                              ]
    ]
  structure_item (typing/typemod.ml[201,6515+0]..[219,7025+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[201,6515+4]..[201,6515+19])
          Ppat_var "type_open_descr" (typing/typemod.ml[201,6515+4]..[201,6515+19])
        expression (typing/typemod.ml[201,6515+20]..[219,7025+14]) ghost
          Pexp_fun
          Optional "used_slot"
          None
          pattern (typing/typemod.ml[201,6515+21]..[201,6515+30])
            Ppat_var "used_slot" (typing/typemod.ml[201,6515+21]..[201,6515+30])
          expression (typing/typemod.ml[201,6515+31]..[219,7025+14]) ghost
            Pexp_fun
            Optional "toplevel"
            None
            pattern (typing/typemod.ml[201,6515+32]..[201,6515+40])
              Ppat_var "toplevel" (typing/typemod.ml[201,6515+32]..[201,6515+40])
            expression (typing/typemod.ml[201,6515+41]..[219,7025+14]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[201,6515+41]..[201,6515+44])
                Ppat_var "env" (typing/typemod.ml[201,6515+41]..[201,6515+44])
              expression (typing/typemod.ml[201,6515+45]..[219,7025+14]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[201,6515+45]..[201,6515+48])
                  Ppat_var "sod" (typing/typemod.ml[201,6515+45]..[201,6515+48])
                expression (typing/typemod.ml[202,6566+2]..[219,7025+14])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typemod.ml[202,6566+6]..[202,6566+20])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[202,6566+7]..[202,6566+11])
                            Ppat_var "path" (typing/typemod.ml[202,6566+7]..[202,6566+11])
                          pattern (typing/typemod.ml[202,6566+13]..[202,6566+19])
                            Ppat_var "newenv" (typing/typemod.ml[202,6566+13]..[202,6566+19])
                        ]
                      expression (typing/typemod.ml[203,6589+4]..[207,6768+7])
                        Pexp_apply
                        expression (typing/typemod.ml[203,6589+4]..[203,6589+36])
                          Pexp_ident "Builtin_attributes.warning_scope" (typing/typemod.ml[203,6589+4]..[203,6589+36])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[203,6589+37]..[203,6589+57])
                              Pexp_field
                              expression (typing/typemod.ml[203,6589+37]..[203,6589+40])
                                Pexp_ident "sod" (typing/typemod.ml[203,6589+37]..[203,6589+40])
                              "popen_attributes" (typing/typemod.ml[203,6589+41]..[203,6589+57])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[204,6647+6]..[207,6768+7])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typemod.ml[204,6647+11]..[204,6647+13])
                                Ppat_construct "()" (typing/typemod.ml[204,6647+11]..[204,6647+13])
                                None
                              expression (typing/typemod.ml[205,6664+9]..[206,6742+25])
                                Pexp_apply
                                expression (typing/typemod.ml[205,6664+9]..[205,6664+19])
                                  Pexp_ident "type_open_" (typing/typemod.ml[205,6664+9]..[205,6664+19])
                                [
                                  <arg>
                                  Optional "used_slot"
                                    expression (typing/typemod.ml[205,6664+21]..[205,6664+30])
                                      Pexp_ident "used_slot" (typing/typemod.ml[205,6664+21]..[205,6664+30])
                                  <arg>
                                  Optional "toplevel"
                                    expression (typing/typemod.ml[205,6664+32]..[205,6664+40])
                                      Pexp_ident "toplevel" (typing/typemod.ml[205,6664+32]..[205,6664+40])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[205,6664+41]..[205,6664+59])
                                      Pexp_field
                                      expression (typing/typemod.ml[205,6664+41]..[205,6664+44])
                                        Pexp_ident "sod" (typing/typemod.ml[205,6664+41]..[205,6664+44])
                                      "popen_override" (typing/typemod.ml[205,6664+45]..[205,6664+59])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[205,6664+60]..[205,6664+63])
                                      Pexp_ident "env" (typing/typemod.ml[205,6664+60]..[205,6664+63])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[205,6664+64]..[205,6664+77])
                                      Pexp_field
                                      expression (typing/typemod.ml[205,6664+64]..[205,6664+67])
                                        Pexp_ident "sod" (typing/typemod.ml[205,6664+64]..[205,6664+67])
                                      "popen_loc" (typing/typemod.ml[205,6664+68]..[205,6664+77])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[206,6742+11]..[206,6742+25])
                                      Pexp_field
                                      expression (typing/typemod.ml[206,6742+11]..[206,6742+14])
                                        Pexp_ident "sod" (typing/typemod.ml[206,6742+11]..[206,6742+14])
                                      "popen_expr" (typing/typemod.ml[206,6742+15]..[206,6742+25])
                                ]
                        ]
                  ]
                  expression (typing/typemod.ml[209,6781+2]..[219,7025+14])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[209,6781+6]..[209,6781+8])
                          Ppat_var "od" (typing/typemod.ml[209,6781+6]..[209,6781+8])
                        expression (typing/typemod.ml[210,6792+4]..[217,7014+5])
                          Pexp_record
                          [
                            "open_expr" (typing/typemod.ml[211,6798+6]..[211,6798+15])
                              expression (typing/typemod.ml[211,6798+18]..[211,6798+40])
                                Pexp_tuple
                                [
                                  expression (typing/typemod.ml[211,6798+19]..[211,6798+23])
                                    Pexp_ident "path" (typing/typemod.ml[211,6798+19]..[211,6798+23])
                                  expression (typing/typemod.ml[211,6798+25]..[211,6798+39])
                                    Pexp_field
                                    expression (typing/typemod.ml[211,6798+25]..[211,6798+28])
                                      Pexp_ident "sod" (typing/typemod.ml[211,6798+25]..[211,6798+28])
                                    "popen_expr" (typing/typemod.ml[211,6798+29]..[211,6798+39])
                                ]
                            "open_bound_items" (typing/typemod.ml[212,6840+6]..[212,6840+22])
                              expression (typing/typemod.ml[212,6840+25]..[212,6840+27])
                                Pexp_construct "[]" (typing/typemod.ml[212,6840+25]..[212,6840+27])
                                None
                            "open_override" (typing/typemod.ml[213,6869+6]..[213,6869+19])
                              expression (typing/typemod.ml[213,6869+22]..[213,6869+40])
                                Pexp_field
                                expression (typing/typemod.ml[213,6869+22]..[213,6869+25])
                                  Pexp_ident "sod" (typing/typemod.ml[213,6869+22]..[213,6869+25])
                                "popen_override" (typing/typemod.ml[213,6869+26]..[213,6869+40])
                            "open_env" (typing/typemod.ml[214,6911+6]..[214,6911+14])
                              expression (typing/typemod.ml[214,6911+17]..[214,6911+23])
                                Pexp_ident "newenv" (typing/typemod.ml[214,6911+17]..[214,6911+23])
                            "open_attributes" (typing/typemod.ml[215,6936+6]..[215,6936+21])
                              expression (typing/typemod.ml[215,6936+24]..[215,6936+44])
                                Pexp_field
                                expression (typing/typemod.ml[215,6936+24]..[215,6936+27])
                                  Pexp_ident "sod" (typing/typemod.ml[215,6936+24]..[215,6936+27])
                                "popen_attributes" (typing/typemod.ml[215,6936+28]..[215,6936+44])
                            "open_loc" (typing/typemod.ml[216,6982+6]..[216,6982+14])
                              expression (typing/typemod.ml[216,6982+17]..[216,6982+30])
                                Pexp_field
                                expression (typing/typemod.ml[216,6982+17]..[216,6982+20])
                                  Pexp_ident "sod" (typing/typemod.ml[216,6982+17]..[216,6982+20])
                                "popen_loc" (typing/typemod.ml[216,6982+21]..[216,6982+30])
                          ]
                          None
                    ]
                    expression (typing/typemod.ml[219,7025+2]..[219,7025+14])
                      Pexp_tuple
                      [
                        expression (typing/typemod.ml[219,7025+3]..[219,7025+5])
                          Pexp_ident "od" (typing/typemod.ml[219,7025+3]..[219,7025+5])
                        expression (typing/typemod.ml[219,7025+7]..[219,7025+13])
                          Pexp_ident "newenv" (typing/typemod.ml[219,7025+7]..[219,7025+13])
                      ]
    ]
  structure_item (typing/typemod.ml[222,7107+0]..[225,7229+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[222,7107+4]..[224,7176+52]) ghost
          Ppat_constraint
          pattern (typing/typemod.ml[222,7107+4]..[222,7107+27])
            Ppat_var "type_module_type_of_fwd" (typing/typemod.ml[222,7107+4]..[222,7107+27])
          core_type (typing/typemod.ml[223,7137+4]..[224,7176+52]) ghost
            Ptyp_poly
            core_type (typing/typemod.ml[223,7137+4]..[224,7176+52])
              Ptyp_constr "ref" (typing/typemod.ml[224,7176+49]..[224,7176+52])
              [
                core_type (typing/typemod.ml[223,7137+5]..[224,7176+47])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/typemod.ml[223,7137+5]..[223,7137+10])
                    Ptyp_constr "Env.t" (typing/typemod.ml[223,7137+5]..[223,7137+10])
                    []
                  core_type (typing/typemod.ml[223,7137+14]..[224,7176+47])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/typemod.ml[223,7137+14]..[223,7137+35])
                      Ptyp_constr "Parsetree.module_expr" (typing/typemod.ml[223,7137+14]..[223,7137+35])
                      []
                    core_type (typing/typemod.ml[224,7176+6]..[224,7176+47])
                      Ptyp_tuple
                      [
                        core_type (typing/typemod.ml[224,7176+6]..[224,7176+27])
                          Ptyp_constr "Typedtree.module_expr" (typing/typemod.ml[224,7176+6]..[224,7176+27])
                          []
                        core_type (typing/typemod.ml[224,7176+30]..[224,7176+47])
                          Ptyp_constr "Types.module_type" (typing/typemod.ml[224,7176+30]..[224,7176+47])
                          []
                      ]
              ]
        expression (typing/typemod.ml[222,7107+4]..[225,7229+37])
          Pexp_constraint
          expression (typing/typemod.ml[225,7229+4]..[225,7229+37])
            Pexp_apply
            expression (typing/typemod.ml[225,7229+4]..[225,7229+7])
              Pexp_ident "ref" (typing/typemod.ml[225,7229+4]..[225,7229+7])
            [
              <arg>
              Nolabel
                expression (typing/typemod.ml[225,7229+8]..[225,7229+37])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[225,7229+13]..[225,7229+17])
                    Ppat_var "_env" (typing/typemod.ml[225,7229+13]..[225,7229+17])
                  expression (typing/typemod.ml[225,7229+18]..[225,7229+36]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[225,7229+18]..[225,7229+20])
                      Ppat_var "_m" (typing/typemod.ml[225,7229+18]..[225,7229+20])
                    expression (typing/typemod.ml[225,7229+24]..[225,7229+36])
                      Pexp_assert
                      expression (typing/typemod.ml[225,7229+31]..[225,7229+36])
                        Pexp_construct "false" (typing/typemod.ml[225,7229+31]..[225,7229+36])
                        None
            ]
          core_type (typing/typemod.ml[223,7137+4]..[224,7176+52])
            Ptyp_constr "ref" (typing/typemod.ml[224,7176+49]..[224,7176+52])
            [
              core_type (typing/typemod.ml[223,7137+5]..[224,7176+47])
                Ptyp_arrow
                Nolabel
                core_type (typing/typemod.ml[223,7137+5]..[223,7137+10])
                  Ptyp_constr "Env.t" (typing/typemod.ml[223,7137+5]..[223,7137+10])
                  []
                core_type (typing/typemod.ml[223,7137+14]..[224,7176+47])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/typemod.ml[223,7137+14]..[223,7137+35])
                    Ptyp_constr "Parsetree.module_expr" (typing/typemod.ml[223,7137+14]..[223,7137+35])
                    []
                  core_type (typing/typemod.ml[224,7176+6]..[224,7176+47])
                    Ptyp_tuple
                    [
                      core_type (typing/typemod.ml[224,7176+6]..[224,7176+27])
                        Ptyp_constr "Typedtree.module_expr" (typing/typemod.ml[224,7176+6]..[224,7176+27])
                        []
                      core_type (typing/typemod.ml[224,7176+30]..[224,7176+47])
                        Ptyp_constr "Types.module_type" (typing/typemod.ml[224,7176+30]..[224,7176+47])
                        []
                    ]
            ]
    ]
  structure_item (typing/typemod.ml[230,7356+0]..[239,7711+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[230,7356+4]..[230,7356+26])
          Ppat_var "check_recmod_typedecls" (typing/typemod.ml[230,7356+4]..[230,7356+26])
        expression (typing/typemod.ml[230,7356+27]..[239,7711+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[230,7356+27]..[230,7356+30])
            Ppat_var "env" (typing/typemod.ml[230,7356+27]..[230,7356+30])
          expression (typing/typemod.ml[230,7356+31]..[239,7711+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[230,7356+31]..[230,7356+36])
              Ppat_var "decls" (typing/typemod.ml[230,7356+31]..[230,7356+36])
            expression (typing/typemod.ml[231,7395+2]..[239,7711+9])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[231,7395+6]..[231,7395+16])
                    Ppat_var "recmod_ids" (typing/typemod.ml[231,7395+6]..[231,7395+16])
                  expression (typing/typemod.ml[231,7395+19]..[231,7395+37])
                    Pexp_apply
                    expression (typing/typemod.ml[231,7395+19]..[231,7395+27])
                      Pexp_ident "List.map" (typing/typemod.ml[231,7395+19]..[231,7395+27])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[231,7395+28]..[231,7395+31])
                          Pexp_ident "fst" (typing/typemod.ml[231,7395+28]..[231,7395+31])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[231,7395+32]..[231,7395+37])
                          Pexp_ident "decls" (typing/typemod.ml[231,7395+32]..[231,7395+37])
                    ]
              ]
              expression (typing/typemod.ml[232,7436+2]..[239,7711+9])
                Pexp_apply
                expression (typing/typemod.ml[232,7436+2]..[232,7436+11])
                  Pexp_ident "List.iter" (typing/typemod.ml[232,7436+2]..[232,7436+11])
                [
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[233,7448+4]..[238,7650+60])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[233,7448+9]..[233,7448+17])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[233,7448+10]..[233,7448+12])
                            Ppat_var "id" (typing/typemod.ml[233,7448+10]..[233,7448+12])
                          pattern (typing/typemod.ml[233,7448+14]..[233,7448+16])
                            Ppat_var "md" (typing/typemod.ml[233,7448+14]..[233,7448+16])
                        ]
                      expression (typing/typemod.ml[234,7469+6]..[238,7650+59])
                        Pexp_apply
                        expression (typing/typemod.ml[234,7469+6]..[234,7469+15])
                          Pexp_ident "List.iter" (typing/typemod.ml[234,7469+6]..[234,7469+15])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[235,7485+8]..[237,7578+71])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typemod.ml[235,7485+13]..[235,7485+17])
                                Ppat_var "path" (typing/typemod.ml[235,7485+13]..[235,7485+17])
                              expression (typing/typemod.ml[236,7506+10]..[237,7578+70])
                                Pexp_apply
                                expression (typing/typemod.ml[236,7506+10]..[236,7506+40])
                                  Pexp_ident "Typedecl.check_recmod_typedecl" (typing/typemod.ml[236,7506+10]..[236,7506+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[236,7506+41]..[236,7506+44])
                                      Pexp_ident "env" (typing/typemod.ml[236,7506+41]..[236,7506+44])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[236,7506+45]..[236,7506+60])
                                      Pexp_field
                                      expression (typing/typemod.ml[236,7506+45]..[236,7506+47])
                                        Pexp_ident "md" (typing/typemod.ml[236,7506+45]..[236,7506+47])
                                      "Types.md_loc" (typing/typemod.ml[236,7506+48]..[236,7506+60])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[236,7506+61]..[236,7506+71])
                                      Pexp_ident "recmod_ids" (typing/typemod.ml[236,7506+61]..[236,7506+71])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[237,7578+41]..[237,7578+45])
                                      Pexp_ident "path" (typing/typemod.ml[237,7578+41]..[237,7578+45])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[237,7578+46]..[237,7578+70])
                                      Pexp_apply
                                      expression (typing/typemod.ml[237,7578+47]..[237,7578+60])
                                        Pexp_ident "Env.find_type" (typing/typemod.ml[237,7578+47]..[237,7578+60])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[237,7578+61]..[237,7578+65])
                                            Pexp_ident "path" (typing/typemod.ml[237,7578+61]..[237,7578+65])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[237,7578+66]..[237,7578+69])
                                            Pexp_ident "env" (typing/typemod.ml[237,7578+66]..[237,7578+69])
                                      ]
                                ]
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[238,7650+8]..[238,7650+59])
                              Pexp_apply
                              expression (typing/typemod.ml[238,7650+9]..[238,7650+25])
                                Pexp_ident "Mtype.type_paths" (typing/typemod.ml[238,7650+9]..[238,7650+25])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[238,7650+26]..[238,7650+29])
                                    Pexp_ident "env" (typing/typemod.ml[238,7650+26]..[238,7650+29])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[238,7650+30]..[238,7650+41])
                                    Pexp_construct "Pident" (typing/typemod.ml[238,7650+31]..[238,7650+37])
                                    Some
                                      expression (typing/typemod.ml[238,7650+38]..[238,7650+40])
                                        Pexp_ident "id" (typing/typemod.ml[238,7650+38]..[238,7650+40])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[238,7650+42]..[238,7650+58])
                                    Pexp_field
                                    expression (typing/typemod.ml[238,7650+42]..[238,7650+44])
                                      Pexp_ident "md" (typing/typemod.ml[238,7650+42]..[238,7650+44])
                                    "Types.md_type" (typing/typemod.ml[238,7650+45]..[238,7650+58])
                              ]
                        ]
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[239,7711+4]..[239,7711+9])
                      Pexp_ident "decls" (typing/typemod.ml[239,7711+4]..[239,7711+9])
                ]
    ]
  structure_item (typing/typemod.ml[243,7772+0]..[256,8242+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[243,7772+4]..[243,7772+19])
          Ppat_var "check_type_decl" (typing/typemod.ml[243,7772+4]..[243,7772+19])
        expression (typing/typemod.ml[243,7772+20]..[256,8242+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[243,7772+20]..[243,7772+23])
            Ppat_var "env" (typing/typemod.ml[243,7772+20]..[243,7772+23])
          expression (typing/typemod.ml[243,7772+24]..[256,8242+59]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[243,7772+24]..[243,7772+27])
              Ppat_var "loc" (typing/typemod.ml[243,7772+24]..[243,7772+27])
            expression (typing/typemod.ml[243,7772+28]..[256,8242+59]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[243,7772+28]..[243,7772+30])
                Ppat_var "id" (typing/typemod.ml[243,7772+28]..[243,7772+30])
              expression (typing/typemod.ml[243,7772+31]..[256,8242+59]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[243,7772+31]..[243,7772+37])
                  Ppat_var "row_id" (typing/typemod.ml[243,7772+31]..[243,7772+37])
                expression (typing/typemod.ml[243,7772+38]..[256,8242+59]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[243,7772+38]..[243,7772+45])
                    Ppat_var "newdecl" (typing/typemod.ml[243,7772+38]..[243,7772+45])
                  expression (typing/typemod.ml[243,7772+46]..[256,8242+59]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[243,7772+46]..[243,7772+50])
                      Ppat_var "decl" (typing/typemod.ml[243,7772+46]..[243,7772+50])
                    expression (typing/typemod.ml[243,7772+51]..[256,8242+59]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[243,7772+51]..[243,7772+60])
                        Ppat_var "rec_group" (typing/typemod.ml[243,7772+51]..[243,7772+60])
                      expression (typing/typemod.ml[244,7835+2]..[256,8242+59])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typemod.ml[244,7835+6]..[244,7835+9])
                              Ppat_var "env" (typing/typemod.ml[244,7835+6]..[244,7835+9])
                            expression (typing/typemod.ml[244,7835+12]..[244,7835+51])
                              Pexp_apply
                              expression (typing/typemod.ml[244,7835+12]..[244,7835+24])
                                Pexp_ident "Env.add_type" (typing/typemod.ml[244,7835+12]..[244,7835+24])
                              [
                                <arg>
                                Labelled "check"
                                  expression (typing/typemod.ml[244,7835+32]..[244,7835+36])
                                    Pexp_construct "true" (typing/typemod.ml[244,7835+32]..[244,7835+36])
                                    None
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[244,7835+37]..[244,7835+39])
                                    Pexp_ident "id" (typing/typemod.ml[244,7835+37]..[244,7835+39])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[244,7835+40]..[244,7835+47])
                                    Pexp_ident "newdecl" (typing/typemod.ml[244,7835+40]..[244,7835+47])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[244,7835+48]..[244,7835+51])
                                    Pexp_ident "env" (typing/typemod.ml[244,7835+48]..[244,7835+51])
                              ]
                        ]
                        expression (typing/typemod.ml[245,7890+2]..[256,8242+59])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[245,7890+6]..[245,7890+9])
                                Ppat_var "env" (typing/typemod.ml[245,7890+6]..[245,7890+9])
                              expression (typing/typemod.ml[246,7902+4]..[248,7942+57])
                                Pexp_match
                                expression (typing/typemod.ml[246,7902+10]..[246,7902+16])
                                  Pexp_ident "row_id" (typing/typemod.ml[246,7902+10]..[246,7902+16])
                                [
                                  <case>
                                    pattern (typing/typemod.ml[247,7924+6]..[247,7924+10])
                                      Ppat_construct "None" (typing/typemod.ml[247,7924+6]..[247,7924+10])
                                      None
                                    expression (typing/typemod.ml[247,7924+14]..[247,7924+17])
                                      Pexp_ident "env" (typing/typemod.ml[247,7924+14]..[247,7924+17])
                                  <case>
                                    pattern (typing/typemod.ml[248,7942+6]..[248,7942+13])
                                      Ppat_construct "Some" (typing/typemod.ml[248,7942+6]..[248,7942+10])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[248,7942+11]..[248,7942+13])
                                          Ppat_var "id" (typing/typemod.ml[248,7942+11]..[248,7942+13])
                                    expression (typing/typemod.ml[248,7942+17]..[248,7942+57])
                                      Pexp_apply
                                      expression (typing/typemod.ml[248,7942+17]..[248,7942+29])
                                        Pexp_ident "Env.add_type" (typing/typemod.ml[248,7942+17]..[248,7942+29])
                                      [
                                        <arg>
                                        Labelled "check"
                                          expression (typing/typemod.ml[248,7942+37]..[248,7942+42])
                                            Pexp_construct "false" (typing/typemod.ml[248,7942+37]..[248,7942+42])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[248,7942+43]..[248,7942+45])
                                            Pexp_ident "id" (typing/typemod.ml[248,7942+43]..[248,7942+45])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[248,7942+46]..[248,7942+53])
                                            Pexp_ident "newdecl" (typing/typemod.ml[248,7942+46]..[248,7942+53])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[248,7942+54]..[248,7942+57])
                                            Pexp_ident "env" (typing/typemod.ml[248,7942+54]..[248,7942+57])
                                      ]
                                ]
                          ]
                          expression (typing/typemod.ml[250,8005+2]..[256,8242+59])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[250,8005+6]..[250,8005+9])
                                  Ppat_var "env" (typing/typemod.ml[250,8005+6]..[250,8005+9])
                                expression (typing/typemod.ml[251,8017+4]..[254,8121+44])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typemod.ml[251,8017+8]..[251,8017+19])
                                        Ppat_var "add_sigitem" (typing/typemod.ml[251,8017+8]..[251,8017+19])
                                      expression (typing/typemod.ml[251,8017+20]..[252,8045+68]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/typemod.ml[251,8017+20]..[251,8017+23])
                                          Ppat_var "env" (typing/typemod.ml[251,8017+20]..[251,8017+23])
                                        expression (typing/typemod.ml[251,8017+24]..[252,8045+68]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/typemod.ml[251,8017+24]..[251,8017+25])
                                            Ppat_var "x" (typing/typemod.ml[251,8017+24]..[251,8017+25])
                                          expression (typing/typemod.ml[252,8045+6]..[252,8045+68])
                                            Pexp_apply
                                            expression (typing/typemod.ml[252,8045+6]..[252,8045+23])
                                              Pexp_ident "Env.add_signature" (typing/typemod.ml[252,8045+6]..[252,8045+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[252,8045+24]..[252,8045+64])
                                                  Pexp_open Fresh
                                                  module_expr (typing/typemod.ml[252,8045+24]..[252,8045+39])
                                                    Pmod_ident "Signature_group" (typing/typemod.ml[252,8045+24]..[252,8045+39])
                                                  expression (typing/typemod.ml[252,8045+41]..[252,8045+63])
                                                    Pexp_construct "::" (typing/typemod.ml[252,8045+47]..[252,8045+49])
                                                    Some
                                                      expression (typing/typemod.ml[252,8045+41]..[252,8045+63]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typemod.ml[252,8045+41]..[252,8045+46])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[252,8045+41]..[252,8045+42])
                                                              Pexp_ident "x" (typing/typemod.ml[252,8045+41]..[252,8045+42])
                                                            "src" (typing/typemod.ml[252,8045+43]..[252,8045+46])
                                                          expression (typing/typemod.ml[252,8045+50]..[252,8045+63])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[252,8045+50]..[252,8045+51])
                                                              Pexp_ident "x" (typing/typemod.ml[252,8045+50]..[252,8045+51])
                                                            "post_ghosts" (typing/typemod.ml[252,8045+52]..[252,8045+63])
                                                        ]
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[252,8045+65]..[252,8045+68])
                                                  Pexp_ident "env" (typing/typemod.ml[252,8045+65]..[252,8045+68])
                                            ]
                                  ]
                                  expression (typing/typemod.ml[254,8121+4]..[254,8121+44])
                                    Pexp_apply
                                    expression (typing/typemod.ml[254,8121+4]..[254,8121+18])
                                      Pexp_ident "List.fold_left" (typing/typemod.ml[254,8121+4]..[254,8121+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[254,8121+19]..[254,8121+30])
                                          Pexp_ident "add_sigitem" (typing/typemod.ml[254,8121+19]..[254,8121+30])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[254,8121+31]..[254,8121+34])
                                          Pexp_ident "env" (typing/typemod.ml[254,8121+31]..[254,8121+34])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[254,8121+35]..[254,8121+44])
                                          Pexp_ident "rec_group" (typing/typemod.ml[254,8121+35]..[254,8121+44])
                                    ]
                            ]
                            expression (typing/typemod.ml[255,8169+2]..[256,8242+59])
                              Pexp_sequence
                              expression (typing/typemod.ml[255,8169+2]..[255,8169+71])
                                Pexp_apply
                                expression (typing/typemod.ml[255,8169+2]..[255,8169+30])
                                  Pexp_ident "Includemod.type_declarations" (typing/typemod.ml[255,8169+2]..[255,8169+30])
                                [
                                  <arg>
                                  Labelled "mark"
                                    expression (typing/typemod.ml[255,8169+37]..[255,8169+46])
                                      Pexp_construct "Mark_both" (typing/typemod.ml[255,8169+37]..[255,8169+46])
                                      None
                                  <arg>
                                  Labelled "loc"
                                    expression (typing/typemod.ml[255,8169+48]..[255,8169+51])
                                      Pexp_ident "loc" (typing/typemod.ml[255,8169+48]..[255,8169+51])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[255,8169+52]..[255,8169+55])
                                      Pexp_ident "env" (typing/typemod.ml[255,8169+52]..[255,8169+55])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[255,8169+56]..[255,8169+58])
                                      Pexp_ident "id" (typing/typemod.ml[255,8169+56]..[255,8169+58])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[255,8169+59]..[255,8169+66])
                                      Pexp_ident "newdecl" (typing/typemod.ml[255,8169+59]..[255,8169+66])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[255,8169+67]..[255,8169+71])
                                      Pexp_ident "decl" (typing/typemod.ml[255,8169+67]..[255,8169+71])
                                ]
                              expression (typing/typemod.ml[256,8242+2]..[256,8242+59])
                                Pexp_apply
                                expression (typing/typemod.ml[256,8242+2]..[256,8242+26])
                                  Pexp_ident "Typedecl.check_coherence" (typing/typemod.ml[256,8242+2]..[256,8242+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[256,8242+27]..[256,8242+30])
                                      Pexp_ident "env" (typing/typemod.ml[256,8242+27]..[256,8242+30])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[256,8242+31]..[256,8242+34])
                                      Pexp_ident "loc" (typing/typemod.ml[256,8242+31]..[256,8242+34])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[256,8242+35]..[256,8242+51])
                                      Pexp_construct "Path.Pident" (typing/typemod.ml[256,8242+36]..[256,8242+47])
                                      Some
                                        expression (typing/typemod.ml[256,8242+48]..[256,8242+50])
                                          Pexp_ident "id" (typing/typemod.ml[256,8242+48]..[256,8242+50])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[256,8242+52]..[256,8242+59])
                                      Pexp_ident "newdecl" (typing/typemod.ml[256,8242+52]..[256,8242+59])
                                ]
    ]
  structure_item (typing/typemod.ml[258,8303+0]..[260,8352+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[258,8303+4]..[258,8303+17])
          Ppat_var "make_variance" (typing/typemod.ml[258,8303+4]..[258,8303+17])
        expression (typing/typemod.ml[258,8303+18]..[260,8352+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[258,8303+18]..[258,8303+19])
            Ppat_var "p" (typing/typemod.ml[258,8303+18]..[258,8303+19])
          expression (typing/typemod.ml[258,8303+20]..[260,8352+65]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[258,8303+20]..[258,8303+21])
              Ppat_var "n" (typing/typemod.ml[258,8303+20]..[258,8303+21])
            expression (typing/typemod.ml[258,8303+22]..[260,8352+65]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[258,8303+22]..[258,8303+23])
                Ppat_var "i" (typing/typemod.ml[258,8303+22]..[258,8303+23])
              expression (typing/typemod.ml[259,8329+2]..[260,8352+65])
                Pexp_open Fresh
                module_expr (typing/typemod.ml[259,8329+11]..[259,8329+19])
                  Pmod_ident "Variance" (typing/typemod.ml[259,8329+11]..[259,8329+19])
                expression (typing/typemod.ml[260,8352+2]..[260,8352+65])
                  Pexp_apply
                  expression (typing/typemod.ml[260,8352+2]..[260,8352+5])
                    Pexp_ident "set" (typing/typemod.ml[260,8352+2]..[260,8352+5])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[260,8352+6]..[260,8352+13])
                        Pexp_construct "May_pos" (typing/typemod.ml[260,8352+6]..[260,8352+13])
                        None
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[260,8352+14]..[260,8352+15])
                        Pexp_ident "p" (typing/typemod.ml[260,8352+14]..[260,8352+15])
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[260,8352+16]..[260,8352+65])
                        Pexp_apply
                        expression (typing/typemod.ml[260,8352+17]..[260,8352+20])
                          Pexp_ident "set" (typing/typemod.ml[260,8352+17]..[260,8352+20])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[260,8352+21]..[260,8352+28])
                              Pexp_construct "May_neg" (typing/typemod.ml[260,8352+21]..[260,8352+28])
                              None
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[260,8352+29]..[260,8352+30])
                              Pexp_ident "n" (typing/typemod.ml[260,8352+29]..[260,8352+30])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[260,8352+31]..[260,8352+64])
                              Pexp_apply
                              expression (typing/typemod.ml[260,8352+32]..[260,8352+35])
                                Pexp_ident "set" (typing/typemod.ml[260,8352+32]..[260,8352+35])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[260,8352+36]..[260,8352+44])
                                    Pexp_construct "May_weak" (typing/typemod.ml[260,8352+36]..[260,8352+44])
                                    None
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[260,8352+45]..[260,8352+46])
                                    Pexp_ident "n" (typing/typemod.ml[260,8352+45]..[260,8352+46])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[260,8352+47]..[260,8352+63])
                                    Pexp_apply
                                    expression (typing/typemod.ml[260,8352+48]..[260,8352+51])
                                      Pexp_ident "set" (typing/typemod.ml[260,8352+48]..[260,8352+51])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[260,8352+52]..[260,8352+55])
                                          Pexp_construct "Inj" (typing/typemod.ml[260,8352+52]..[260,8352+55])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[260,8352+56]..[260,8352+57])
                                          Pexp_ident "i" (typing/typemod.ml[260,8352+56]..[260,8352+57])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[260,8352+58]..[260,8352+62])
                                          Pexp_ident "null" (typing/typemod.ml[260,8352+58]..[260,8352+62])
                                    ]
                              ]
                        ]
                  ]
    ]
  structure_item (typing/typemod.ml[262,8419+0]..[269,8603+12])
    Pstr_value Rec
    [
      <def>
        pattern (typing/typemod.ml[262,8419+8]..[262,8419+23])
          Ppat_var "iter_path_apply" (typing/typemod.ml[262,8419+8]..[262,8419+23])
        expression (typing/typemod.ml[262,8419+24]..[269,8603+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[262,8419+24]..[262,8419+25])
            Ppat_var "p" (typing/typemod.ml[262,8419+24]..[262,8419+25])
          expression (typing/typemod.ml[262,8419+26]..[269,8603+12]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (typing/typemod.ml[262,8419+27]..[262,8419+28])
              Ppat_var "f" (typing/typemod.ml[262,8419+27]..[262,8419+28])
            expression (typing/typemod.ml[263,8450+2]..[269,8603+12])
              Pexp_match
              expression (typing/typemod.ml[263,8450+8]..[263,8450+9])
                Pexp_ident "p" (typing/typemod.ml[263,8450+8]..[263,8450+9])
              [
                <case>
                  pattern (typing/typemod.ml[264,8465+4]..[264,8465+12])
                    Ppat_construct "Pident" (typing/typemod.ml[264,8465+4]..[264,8465+10])
                    Some
                      []
                      pattern (typing/typemod.ml[264,8465+11]..[264,8465+12])
                        Ppat_any
                  expression (typing/typemod.ml[264,8465+16]..[264,8465+18])
                    Pexp_construct "()" (typing/typemod.ml[264,8465+16]..[264,8465+18])
                    None
                <case>
                  pattern (typing/typemod.ml[265,8484+4]..[265,8484+15])
                    Ppat_construct "Pdot" (typing/typemod.ml[265,8484+4]..[265,8484+8])
                    Some
                      []
                      pattern (typing/typemod.ml[265,8484+9]..[265,8484+15])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[265,8484+10]..[265,8484+11])
                            Ppat_var "p" (typing/typemod.ml[265,8484+10]..[265,8484+11])
                          pattern (typing/typemod.ml[265,8484+13]..[265,8484+14])
                            Ppat_any
                        ]
                  expression (typing/typemod.ml[265,8484+19]..[265,8484+39])
                    Pexp_apply
                    expression (typing/typemod.ml[265,8484+19]..[265,8484+34])
                      Pexp_ident "iter_path_apply" (typing/typemod.ml[265,8484+19]..[265,8484+34])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[265,8484+35]..[265,8484+36])
                          Pexp_ident "p" (typing/typemod.ml[265,8484+35]..[265,8484+36])
                      <arg>
                      Labelled "f"
                        expression (typing/typemod.ml[265,8484+38]..[265,8484+39])
                          Pexp_ident "f" (typing/typemod.ml[265,8484+38]..[265,8484+39])
                    ]
                <case>
                  pattern (typing/typemod.ml[266,8524+4]..[266,8524+19])
                    Ppat_construct "Papply" (typing/typemod.ml[266,8524+4]..[266,8524+10])
                    Some
                      []
                      pattern (typing/typemod.ml[266,8524+11]..[266,8524+19])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[266,8524+12]..[266,8524+14])
                            Ppat_var "p1" (typing/typemod.ml[266,8524+12]..[266,8524+14])
                          pattern (typing/typemod.ml[266,8524+16]..[266,8524+18])
                            Ppat_var "p2" (typing/typemod.ml[266,8524+16]..[266,8524+18])
                        ]
                  expression (typing/typemod.ml[267,8547+5]..[269,8603+12])
                    Pexp_sequence
                    expression (typing/typemod.ml[267,8547+5]..[267,8547+26])
                      Pexp_apply
                      expression (typing/typemod.ml[267,8547+5]..[267,8547+20])
                        Pexp_ident "iter_path_apply" (typing/typemod.ml[267,8547+5]..[267,8547+20])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[267,8547+21]..[267,8547+23])
                            Pexp_ident "p1" (typing/typemod.ml[267,8547+21]..[267,8547+23])
                        <arg>
                        Labelled "f"
                          expression (typing/typemod.ml[267,8547+25]..[267,8547+26])
                            Pexp_ident "f" (typing/typemod.ml[267,8547+25]..[267,8547+26])
                      ]
                    expression (typing/typemod.ml[268,8575+5]..[269,8603+12])
                      Pexp_sequence
                      expression (typing/typemod.ml[268,8575+5]..[268,8575+26])
                        Pexp_apply
                        expression (typing/typemod.ml[268,8575+5]..[268,8575+20])
                          Pexp_ident "iter_path_apply" (typing/typemod.ml[268,8575+5]..[268,8575+20])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[268,8575+21]..[268,8575+23])
                              Pexp_ident "p2" (typing/typemod.ml[268,8575+21]..[268,8575+23])
                          <arg>
                          Labelled "f"
                            expression (typing/typemod.ml[268,8575+25]..[268,8575+26])
                              Pexp_ident "f" (typing/typemod.ml[268,8575+25]..[268,8575+26])
                        ]
                      expression (typing/typemod.ml[269,8603+5]..[269,8603+12])
                        Pexp_apply
                        expression (typing/typemod.ml[269,8603+5]..[269,8603+6])
                          Pexp_ident "f" (typing/typemod.ml[269,8603+5]..[269,8603+6])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[269,8603+7]..[269,8603+9])
                              Pexp_ident "p1" (typing/typemod.ml[269,8603+7]..[269,8603+9])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[269,8603+10]..[269,8603+12])
                              Pexp_ident "p2" (typing/typemod.ml[269,8603+10]..[269,8603+12])
                        ]
              ]
    ]
  structure_item (typing/typemod.ml[271,8677+0]..[285,9152+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[271,8677+4]..[271,8677+25])
          Ppat_var "path_is_strict_prefix" (typing/typemod.ml[271,8677+4]..[271,8677+25])
        expression (typing/typemod.ml[272,8705+2]..[285,9152+45])
          Pexp_let Rec
          [
            <def>
              pattern (typing/typemod.ml[272,8705+10]..[272,8705+31])
                Ppat_var "list_is_strict_prefix" (typing/typemod.ml[272,8705+10]..[272,8705+31])
              expression (typing/typemod.ml[272,8705+32]..[278,8875+64]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[272,8705+32]..[272,8705+33])
                  Ppat_var "l" (typing/typemod.ml[272,8705+32]..[272,8705+33])
                expression (typing/typemod.ml[272,8705+34]..[278,8875+64]) ghost
                  Pexp_fun
                  Labelled "prefix"
                  None
                  pattern (typing/typemod.ml[272,8705+35]..[272,8705+41])
                    Ppat_var "prefix" (typing/typemod.ml[272,8705+35]..[272,8705+41])
                  expression (typing/typemod.ml[273,8749+4]..[278,8875+64])
                    Pexp_match
                    expression (typing/typemod.ml[273,8749+10]..[273,8749+19])
                      Pexp_tuple
                      [
                        expression (typing/typemod.ml[273,8749+10]..[273,8749+11])
                          Pexp_ident "l" (typing/typemod.ml[273,8749+10]..[273,8749+11])
                        expression (typing/typemod.ml[273,8749+13]..[273,8749+19])
                          Pexp_ident "prefix" (typing/typemod.ml[273,8749+13]..[273,8749+19])
                      ]
                    [
                      <case>
                        pattern (typing/typemod.ml[274,8774+6]..[274,8774+12])
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[274,8774+6]..[274,8774+8])
                              Ppat_construct "[]" (typing/typemod.ml[274,8774+6]..[274,8774+8])
                              None
                            pattern (typing/typemod.ml[274,8774+10]..[274,8774+12])
                              Ppat_construct "[]" (typing/typemod.ml[274,8774+10]..[274,8774+12])
                              None
                          ]
                        expression (typing/typemod.ml[274,8774+16]..[274,8774+21])
                          Pexp_construct "false" (typing/typemod.ml[274,8774+16]..[274,8774+21])
                          None
                      <case>
                        pattern (typing/typemod.ml[275,8796+6]..[275,8796+16])
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[275,8796+6]..[275,8796+12])
                              Ppat_construct "::" (typing/typemod.ml[275,8796+8]..[275,8796+10])
                              Some
                                []
                                pattern (typing/typemod.ml[275,8796+6]..[275,8796+12]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[275,8796+6]..[275,8796+7])
                                      Ppat_any
                                    pattern (typing/typemod.ml[275,8796+11]..[275,8796+12])
                                      Ppat_any
                                  ]
                            pattern (typing/typemod.ml[275,8796+14]..[275,8796+16])
                              Ppat_construct "[]" (typing/typemod.ml[275,8796+14]..[275,8796+16])
                              None
                          ]
                        expression (typing/typemod.ml[275,8796+20]..[275,8796+24])
                          Pexp_construct "true" (typing/typemod.ml[275,8796+20]..[275,8796+24])
                          None
                      <case>
                        pattern (typing/typemod.ml[276,8821+6]..[276,8821+16])
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[276,8821+6]..[276,8821+8])
                              Ppat_construct "[]" (typing/typemod.ml[276,8821+6]..[276,8821+8])
                              None
                            pattern (typing/typemod.ml[276,8821+10]..[276,8821+16])
                              Ppat_construct "::" (typing/typemod.ml[276,8821+12]..[276,8821+14])
                              Some
                                []
                                pattern (typing/typemod.ml[276,8821+10]..[276,8821+16]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[276,8821+10]..[276,8821+11])
                                      Ppat_any
                                    pattern (typing/typemod.ml[276,8821+15]..[276,8821+16])
                                      Ppat_any
                                  ]
                          ]
                        expression (typing/typemod.ml[276,8821+20]..[276,8821+25])
                          Pexp_construct "false" (typing/typemod.ml[276,8821+20]..[276,8821+25])
                          None
                      <case>
                        pattern (typing/typemod.ml[277,8847+6]..[277,8847+24])
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[277,8847+6]..[277,8847+14])
                              Ppat_construct "::" (typing/typemod.ml[277,8847+9]..[277,8847+11])
                              Some
                                []
                                pattern (typing/typemod.ml[277,8847+6]..[277,8847+14]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[277,8847+6]..[277,8847+8])
                                      Ppat_var "s1" (typing/typemod.ml[277,8847+6]..[277,8847+8])
                                    pattern (typing/typemod.ml[277,8847+12]..[277,8847+14])
                                      Ppat_var "t1" (typing/typemod.ml[277,8847+12]..[277,8847+14])
                                  ]
                            pattern (typing/typemod.ml[277,8847+16]..[277,8847+24])
                              Ppat_construct "::" (typing/typemod.ml[277,8847+19]..[277,8847+21])
                              Some
                                []
                                pattern (typing/typemod.ml[277,8847+16]..[277,8847+24]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[277,8847+16]..[277,8847+18])
                                      Ppat_var "s2" (typing/typemod.ml[277,8847+16]..[277,8847+18])
                                    pattern (typing/typemod.ml[277,8847+22]..[277,8847+24])
                                      Ppat_var "t2" (typing/typemod.ml[277,8847+22]..[277,8847+24])
                                  ]
                          ]
                        expression (typing/typemod.ml[278,8875+7]..[278,8875+64])
                          Pexp_apply
                          expression (typing/typemod.ml[278,8875+26]..[278,8875+28])
                            Pexp_ident "&&" (typing/typemod.ml[278,8875+26]..[278,8875+28])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[278,8875+7]..[278,8875+25])
                                Pexp_apply
                                expression (typing/typemod.ml[278,8875+7]..[278,8875+19])
                                  Pexp_ident "String.equal" (typing/typemod.ml[278,8875+7]..[278,8875+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[278,8875+20]..[278,8875+22])
                                      Pexp_ident "s1" (typing/typemod.ml[278,8875+20]..[278,8875+22])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[278,8875+23]..[278,8875+25])
                                      Pexp_ident "s2" (typing/typemod.ml[278,8875+23]..[278,8875+25])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[278,8875+29]..[278,8875+64])
                                Pexp_apply
                                expression (typing/typemod.ml[278,8875+29]..[278,8875+50])
                                  Pexp_ident "list_is_strict_prefix" (typing/typemod.ml[278,8875+29]..[278,8875+50])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[278,8875+51]..[278,8875+53])
                                      Pexp_ident "t1" (typing/typemod.ml[278,8875+51]..[278,8875+53])
                                  <arg>
                                  Labelled "prefix"
                                    expression (typing/typemod.ml[278,8875+62]..[278,8875+64])
                                      Pexp_ident "t2" (typing/typemod.ml[278,8875+62]..[278,8875+64])
                                ]
                          ]
                    ]
          ]
          expression (typing/typemod.ml[280,8945+2]..[285,9152+45])
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[280,8945+6]..[280,8945+10])
              Ppat_var "path" (typing/typemod.ml[280,8945+6]..[280,8945+10])
            expression (typing/typemod.ml[280,8945+11]..[285,9152+45]) ghost
              Pexp_fun
              Labelled "prefix"
              None
              pattern (typing/typemod.ml[280,8945+12]..[280,8945+18])
                Ppat_var "prefix" (typing/typemod.ml[280,8945+12]..[280,8945+18])
              expression (typing/typemod.ml[281,8967+4]..[285,9152+45])
                Pexp_match
                expression (typing/typemod.ml[281,8967+10]..[281,8967+48])
                  Pexp_tuple
                  [
                    expression (typing/typemod.ml[281,8967+10]..[281,8967+27])
                      Pexp_apply
                      expression (typing/typemod.ml[281,8967+10]..[281,8967+22])
                        Pexp_ident "Path.flatten" (typing/typemod.ml[281,8967+10]..[281,8967+22])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[281,8967+23]..[281,8967+27])
                            Pexp_ident "path" (typing/typemod.ml[281,8967+23]..[281,8967+27])
                      ]
                    expression (typing/typemod.ml[281,8967+29]..[281,8967+48])
                      Pexp_apply
                      expression (typing/typemod.ml[281,8967+29]..[281,8967+41])
                        Pexp_ident "Path.flatten" (typing/typemod.ml[281,8967+29]..[281,8967+41])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[281,8967+42]..[281,8967+48])
                            Pexp_ident "prefix" (typing/typemod.ml[281,8967+42]..[281,8967+48])
                      ]
                  ]
                [
                  <case>
                    pattern (typing/typemod.ml[282,9021+6]..[282,9021+45])
                      Ppat_or
                      pattern (typing/typemod.ml[282,9021+6]..[282,9021+24])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[282,9021+6]..[282,9021+21])
                            Ppat_variant "Contains_apply"
                            None
                          pattern (typing/typemod.ml[282,9021+23]..[282,9021+24])
                            Ppat_any
                        ]
                      pattern (typing/typemod.ml[282,9021+27]..[282,9021+45])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[282,9021+27]..[282,9021+28])
                            Ppat_any
                          pattern (typing/typemod.ml[282,9021+30]..[282,9021+45])
                            Ppat_variant "Contains_apply"
                            None
                        ]
                    expression (typing/typemod.ml[282,9021+49]..[282,9021+54])
                      Pexp_construct "false" (typing/typemod.ml[282,9021+49]..[282,9021+54])
                      None
                  <case>
                    pattern (typing/typemod.ml[283,9076+6]..[283,9076+40])
                      Ppat_tuple
                      [
                        pattern (typing/typemod.ml[283,9076+6]..[283,9076+22])
                          Ppat_variant "Ok"
                          Some
                            pattern (typing/typemod.ml[283,9076+10]..[283,9076+22])
                              Ppat_tuple
                              [
                                pattern (typing/typemod.ml[283,9076+11]..[283,9076+17])
                                  Ppat_var "ident1" (typing/typemod.ml[283,9076+11]..[283,9076+17])
                                pattern (typing/typemod.ml[283,9076+19]..[283,9076+21])
                                  Ppat_var "l1" (typing/typemod.ml[283,9076+19]..[283,9076+21])
                              ]
                        pattern (typing/typemod.ml[283,9076+24]..[283,9076+40])
                          Ppat_variant "Ok"
                          Some
                            pattern (typing/typemod.ml[283,9076+28]..[283,9076+40])
                              Ppat_tuple
                              [
                                pattern (typing/typemod.ml[283,9076+29]..[283,9076+35])
                                  Ppat_var "ident2" (typing/typemod.ml[283,9076+29]..[283,9076+35])
                                pattern (typing/typemod.ml[283,9076+37]..[283,9076+39])
                                  Ppat_var "l2" (typing/typemod.ml[283,9076+37]..[283,9076+39])
                              ]
                      ]
                    expression (typing/typemod.ml[284,9120+7]..[285,9152+45])
                      Pexp_apply
                      expression (typing/typemod.ml[285,9152+7]..[285,9152+9])
                        Pexp_ident "&&" (typing/typemod.ml[285,9152+7]..[285,9152+9])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[284,9120+7]..[284,9120+31])
                            Pexp_apply
                            expression (typing/typemod.ml[284,9120+7]..[284,9120+17])
                              Pexp_ident "Ident.same" (typing/typemod.ml[284,9120+7]..[284,9120+17])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[284,9120+18]..[284,9120+24])
                                  Pexp_ident "ident1" (typing/typemod.ml[284,9120+18]..[284,9120+24])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[284,9120+25]..[284,9120+31])
                                  Pexp_ident "ident2" (typing/typemod.ml[284,9120+25]..[284,9120+31])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[285,9152+10]..[285,9152+45])
                            Pexp_apply
                            expression (typing/typemod.ml[285,9152+10]..[285,9152+31])
                              Pexp_ident "list_is_strict_prefix" (typing/typemod.ml[285,9152+10]..[285,9152+31])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[285,9152+32]..[285,9152+34])
                                  Pexp_ident "l1" (typing/typemod.ml[285,9152+32]..[285,9152+34])
                              <arg>
                              Labelled "prefix"
                                expression (typing/typemod.ml[285,9152+43]..[285,9152+45])
                                  Pexp_ident "l2" (typing/typemod.ml[285,9152+43]..[285,9152+45])
                            ]
                      ]
                ]
    ]
  structure_item (typing/typemod.ml[287,9199+0]..[317,10203+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[287,9199+4]..[287,9199+21])
          Ppat_var "iterator_with_env" (typing/typemod.ml[287,9199+4]..[287,9199+21])
        expression (typing/typemod.ml[287,9199+22]..[317,10203+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[287,9199+22]..[287,9199+25])
            Ppat_var "env" (typing/typemod.ml[287,9199+22]..[287,9199+25])
          expression (typing/typemod.ml[288,9227+2]..[317,10203+3])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/typemod.ml[288,9227+6]..[288,9227+9])
                  Ppat_var "env" (typing/typemod.ml[288,9227+6]..[288,9227+9])
                expression (typing/typemod.ml[288,9227+12]..[288,9227+26])
                  Pexp_apply
                  expression (typing/typemod.ml[288,9227+12]..[288,9227+15])
                    Pexp_ident "ref" (typing/typemod.ml[288,9227+12]..[288,9227+15])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[288,9227+16]..[288,9227+26])
                        Pexp_lazy
                        expression (typing/typemod.ml[288,9227+22]..[288,9227+25])
                          Pexp_ident "env" (typing/typemod.ml[288,9227+22]..[288,9227+25])
                  ]
            ]
            expression (typing/typemod.ml[289,9257+2]..[317,10203+3])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[289,9257+6]..[289,9257+11])
                    Ppat_var "super" (typing/typemod.ml[289,9257+6]..[289,9257+11])
                  expression (typing/typemod.ml[289,9257+14]..[289,9257+34])
                    Pexp_ident "Btype.type_iterators" (typing/typemod.ml[289,9257+14]..[289,9257+34])
              ]
              expression (typing/typemod.ml[290,9295+2]..[317,10203+3])
                Pexp_tuple
                [
                  expression (typing/typemod.ml[290,9295+2]..[290,9295+5])
                    Pexp_ident "env" (typing/typemod.ml[290,9295+2]..[290,9295+5])
                  expression (typing/typemod.ml[290,9295+7]..[317,10203+3])
                    Pexp_record
                    [
                      "Btype.it_signature" (typing/typemod.ml[291,9315+4]..[291,9315+22])
                        expression (typing/typemod.ml[291,9315+25]..[298,9618+5])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[291,9315+30]..[291,9315+34])
                            Ppat_var "self" (typing/typemod.ml[291,9315+30]..[291,9315+34])
                          expression (typing/typemod.ml[291,9315+35]..[297,9594+23]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[291,9315+35]..[291,9315+37])
                              Ppat_var "sg" (typing/typemod.ml[291,9315+35]..[291,9315+37])
                            expression (typing/typemod.ml[294,9457+6]..[297,9594+23])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[294,9457+10]..[294,9457+20])
                                    Ppat_var "env_before" (typing/typemod.ml[294,9457+10]..[294,9457+20])
                                  expression (typing/typemod.ml[294,9457+23]..[294,9457+27])
                                    Pexp_apply
                                    expression (typing/typemod.ml[294,9457+23]..[294,9457+24])
                                      Pexp_ident "!" (typing/typemod.ml[294,9457+23]..[294,9457+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[294,9457+24]..[294,9457+27])
                                          Pexp_ident "env" (typing/typemod.ml[294,9457+24]..[294,9457+27])
                                    ]
                              ]
                              expression (typing/typemod.ml[295,9488+6]..[297,9594+23])
                                Pexp_sequence
                                expression (typing/typemod.ml[295,9488+6]..[295,9488+64])
                                  Pexp_apply
                                  expression (typing/typemod.ml[295,9488+10]..[295,9488+12])
                                    Pexp_ident ":=" (typing/typemod.ml[295,9488+10]..[295,9488+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[295,9488+6]..[295,9488+9])
                                        Pexp_ident "env" (typing/typemod.ml[295,9488+6]..[295,9488+9])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[295,9488+13]..[295,9488+64])
                                        Pexp_lazy
                                        expression (typing/typemod.ml[295,9488+18]..[295,9488+64])
                                          Pexp_apply
                                          expression (typing/typemod.ml[295,9488+19]..[295,9488+36])
                                            Pexp_ident "Env.add_signature" (typing/typemod.ml[295,9488+19]..[295,9488+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[295,9488+37]..[295,9488+39])
                                                Pexp_ident "sg" (typing/typemod.ml[295,9488+37]..[295,9488+39])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[295,9488+40]..[295,9488+63])
                                                Pexp_apply
                                                expression (typing/typemod.ml[295,9488+41]..[295,9488+51])
                                                  Pexp_ident "Lazy.force" (typing/typemod.ml[295,9488+41]..[295,9488+51])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[295,9488+52]..[295,9488+62])
                                                      Pexp_ident "env_before" (typing/typemod.ml[295,9488+52]..[295,9488+62])
                                                ]
                                          ]
                                  ]
                                expression (typing/typemod.ml[296,9554+6]..[297,9594+23])
                                  Pexp_sequence
                                  expression (typing/typemod.ml[296,9554+6]..[296,9554+38])
                                    Pexp_apply
                                    expression (typing/typemod.ml[296,9554+6]..[296,9554+30])
                                      Pexp_field
                                      expression (typing/typemod.ml[296,9554+6]..[296,9554+11])
                                        Pexp_ident "super" (typing/typemod.ml[296,9554+6]..[296,9554+11])
                                      "Btype.it_signature" (typing/typemod.ml[296,9554+12]..[296,9554+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[296,9554+31]..[296,9554+35])
                                          Pexp_ident "self" (typing/typemod.ml[296,9554+31]..[296,9554+35])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[296,9554+36]..[296,9554+38])
                                          Pexp_ident "sg" (typing/typemod.ml[296,9554+36]..[296,9554+38])
                                    ]
                                  expression (typing/typemod.ml[297,9594+6]..[297,9594+23])
                                    Pexp_apply
                                    expression (typing/typemod.ml[297,9594+10]..[297,9594+12])
                                      Pexp_ident ":=" (typing/typemod.ml[297,9594+10]..[297,9594+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[297,9594+6]..[297,9594+9])
                                          Pexp_ident "env" (typing/typemod.ml[297,9594+6]..[297,9594+9])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[297,9594+13]..[297,9594+23])
                                          Pexp_ident "env_before" (typing/typemod.ml[297,9594+13]..[297,9594+23])
                                    ]
                      "Btype.it_module_type" (typing/typemod.ml[299,9625+4]..[299,9625+24])
                        expression (typing/typemod.ml[299,9625+27]..[316,10197+5])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[299,9625+32]..[299,9625+36])
                            Ppat_var "self" (typing/typemod.ml[299,9625+32]..[299,9625+36])
                          expression (typing/typemod.ml[299,9625+40]..[315,10155+41])
                            Pexp_function
                            [
                              <case>
                                pattern (typing/typemod.ml[300,9674+6]..[300,9674+35])
                                  Ppat_construct "Mty_functor" (typing/typemod.ml[300,9674+6]..[300,9674+17])
                                  Some
                                    []
                                    pattern (typing/typemod.ml[300,9674+18]..[300,9674+35])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typemod.ml[300,9674+19]..[300,9674+24])
                                          Ppat_var "param" (typing/typemod.ml[300,9674+19]..[300,9674+24])
                                        pattern (typing/typemod.ml[300,9674+26]..[300,9674+34])
                                          Ppat_var "mty_body" (typing/typemod.ml[300,9674+26]..[300,9674+34])
                                      ]
                                expression (typing/typemod.ml[301,9713+6]..[313,10117+24])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typemod.ml[301,9713+10]..[301,9713+20])
                                        Ppat_var "env_before" (typing/typemod.ml[301,9713+10]..[301,9713+20])
                                      expression (typing/typemod.ml[301,9713+23]..[301,9713+27])
                                        Pexp_apply
                                        expression (typing/typemod.ml[301,9713+23]..[301,9713+24])
                                          Pexp_ident "!" (typing/typemod.ml[301,9713+23]..[301,9713+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[301,9713+24]..[301,9713+27])
                                              Pexp_ident "env" (typing/typemod.ml[301,9713+24]..[301,9713+27])
                                        ]
                                  ]
                                  expression (typing/typemod.ml[302,9744+6]..[313,10117+24])
                                    Pexp_sequence
                                    expression (typing/typemod.ml[302,9744+6]..[311,10059+9])
                                      Pexp_match
                                      expression (typing/typemod.ml[302,9744+18]..[302,9744+23])
                                        Pexp_ident "param" (typing/typemod.ml[302,9744+18]..[302,9744+23])
                                      [
                                        <case>
                                          pattern (typing/typemod.ml[303,9773+8]..[303,9773+12])
                                            Ppat_construct "Unit" (typing/typemod.ml[303,9773+8]..[303,9773+12])
                                            None
                                          expression (typing/typemod.ml[303,9773+16]..[303,9773+18])
                                            Pexp_construct "()" (typing/typemod.ml[303,9773+16]..[303,9773+18])
                                            None
                                        <case>
                                          pattern (typing/typemod.ml[304,9792+8]..[304,9792+30])
                                            Ppat_construct "Named" (typing/typemod.ml[304,9792+8]..[304,9792+13])
                                            Some
                                              []
                                              pattern (typing/typemod.ml[304,9792+14]..[304,9792+30])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/typemod.ml[304,9792+15]..[304,9792+20])
                                                    Ppat_var "param" (typing/typemod.ml[304,9792+15]..[304,9792+20])
                                                  pattern (typing/typemod.ml[304,9792+22]..[304,9792+29])
                                                    Ppat_var "mty_arg" (typing/typemod.ml[304,9792+22]..[304,9792+29])
                                                ]
                                          expression (typing/typemod.ml[305,9826+8]..[310,10003+55])
                                            Pexp_sequence
                                            expression (typing/typemod.ml[305,9826+8]..[305,9826+46])
                                              Pexp_apply
                                              expression (typing/typemod.ml[305,9826+8]..[305,9826+33])
                                                Pexp_field
                                                expression (typing/typemod.ml[305,9826+8]..[305,9826+12])
                                                  Pexp_ident "self" (typing/typemod.ml[305,9826+8]..[305,9826+12])
                                                "Btype.it_module_type" (typing/typemod.ml[305,9826+13]..[305,9826+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[305,9826+34]..[305,9826+38])
                                                    Pexp_ident "self" (typing/typemod.ml[305,9826+34]..[305,9826+38])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[305,9826+39]..[305,9826+46])
                                                    Pexp_ident "mty_arg" (typing/typemod.ml[305,9826+39]..[305,9826+46])
                                              ]
                                            expression (typing/typemod.ml[306,9874+8]..[310,10003+55])
                                              Pexp_match
                                              expression (typing/typemod.ml[306,9874+14]..[306,9874+19])
                                                Pexp_ident "param" (typing/typemod.ml[306,9874+14]..[306,9874+19])
                                              [
                                                <case>
                                                  pattern (typing/typemod.ml[307,9899+10]..[307,9899+14])
                                                    Ppat_construct "None" (typing/typemod.ml[307,9899+10]..[307,9899+14])
                                                    None
                                                  expression (typing/typemod.ml[307,9899+18]..[307,9899+20])
                                                    Pexp_construct "()" (typing/typemod.ml[307,9899+18]..[307,9899+20])
                                                    None
                                                <case>
                                                  pattern (typing/typemod.ml[308,9920+10]..[308,9920+17])
                                                    Ppat_construct "Some" (typing/typemod.ml[308,9920+10]..[308,9920+14])
                                                    Some
                                                      []
                                                      pattern (typing/typemod.ml[308,9920+15]..[308,9920+17])
                                                        Ppat_var "id" (typing/typemod.ml[308,9920+15]..[308,9920+17])
                                                  expression (typing/typemod.ml[309,9941+10]..[310,10003+55])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[309,9941+14]..[309,9941+16])
                                                      Pexp_ident ":=" (typing/typemod.ml[309,9941+14]..[309,9941+16])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[309,9941+10]..[309,9941+13])
                                                          Pexp_ident "env" (typing/typemod.ml[309,9941+10]..[309,9941+13])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[309,9941+17]..[310,10003+55])
                                                          Pexp_lazy
                                                          expression (typing/typemod.ml[309,9941+22]..[310,10003+55])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[309,9941+23]..[309,9941+37])
                                                              Pexp_ident "Env.add_module" (typing/typemod.ml[309,9941+23]..[309,9941+37])
                                                            [
                                                              <arg>
                                                              Labelled "arg"
                                                                expression (typing/typemod.ml[309,9941+43]..[309,9941+47])
                                                                  Pexp_construct "true" (typing/typemod.ml[309,9941+43]..[309,9941+47])
                                                                  None
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[309,9941+48]..[309,9941+50])
                                                                  Pexp_ident "id" (typing/typemod.ml[309,9941+48]..[309,9941+50])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[309,9941+51]..[309,9941+61])
                                                                  Pexp_construct "Mp_present" (typing/typemod.ml[309,9941+51]..[309,9941+61])
                                                                  None
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[310,10003+23]..[310,10003+30])
                                                                  Pexp_ident "mty_arg" (typing/typemod.ml[310,10003+23]..[310,10003+30])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[310,10003+31]..[310,10003+54])
                                                                  Pexp_apply
                                                                  expression (typing/typemod.ml[310,10003+32]..[310,10003+42])
                                                                    Pexp_ident "Lazy.force" (typing/typemod.ml[310,10003+32]..[310,10003+42])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[310,10003+43]..[310,10003+53])
Pexp_ident "env_before" (typing/typemod.ml[310,10003+43]..[310,10003+53])
                                                                  ]
                                                            ]
                                                    ]
                                              ]
                                      ]
                                    expression (typing/typemod.ml[312,10070+6]..[313,10117+24])
                                      Pexp_sequence
                                      expression (typing/typemod.ml[312,10070+6]..[312,10070+45])
                                        Pexp_apply
                                        expression (typing/typemod.ml[312,10070+6]..[312,10070+31])
                                          Pexp_field
                                          expression (typing/typemod.ml[312,10070+6]..[312,10070+10])
                                            Pexp_ident "self" (typing/typemod.ml[312,10070+6]..[312,10070+10])
                                          "Btype.it_module_type" (typing/typemod.ml[312,10070+11]..[312,10070+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[312,10070+32]..[312,10070+36])
                                              Pexp_ident "self" (typing/typemod.ml[312,10070+32]..[312,10070+36])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[312,10070+37]..[312,10070+45])
                                              Pexp_ident "mty_body" (typing/typemod.ml[312,10070+37]..[312,10070+45])
                                        ]
                                      expression (typing/typemod.ml[313,10117+6]..[313,10117+23])
                                        Pexp_apply
                                        expression (typing/typemod.ml[313,10117+10]..[313,10117+12])
                                          Pexp_ident ":=" (typing/typemod.ml[313,10117+10]..[313,10117+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[313,10117+6]..[313,10117+9])
                                              Pexp_ident "env" (typing/typemod.ml[313,10117+6]..[313,10117+9])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[313,10117+13]..[313,10117+23])
                                              Pexp_ident "env_before" (typing/typemod.ml[313,10117+13]..[313,10117+23])
                                        ]
                              <case>
                                pattern (typing/typemod.ml[314,10142+6]..[314,10142+9])
                                  Ppat_var "mty" (typing/typemod.ml[314,10142+6]..[314,10142+9])
                                expression (typing/typemod.ml[315,10155+6]..[315,10155+41])
                                  Pexp_apply
                                  expression (typing/typemod.ml[315,10155+6]..[315,10155+32])
                                    Pexp_field
                                    expression (typing/typemod.ml[315,10155+6]..[315,10155+11])
                                      Pexp_ident "super" (typing/typemod.ml[315,10155+6]..[315,10155+11])
                                    "Btype.it_module_type" (typing/typemod.ml[315,10155+12]..[315,10155+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[315,10155+33]..[315,10155+37])
                                        Pexp_ident "self" (typing/typemod.ml[315,10155+33]..[315,10155+37])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[315,10155+38]..[315,10155+41])
                                        Pexp_ident "mty" (typing/typemod.ml[315,10155+38]..[315,10155+41])
                                  ]
                            ]
                    ]
                    Some
                      expression (typing/typemod.ml[290,9295+9]..[290,9295+14])
                        Pexp_ident "super" (typing/typemod.ml[290,9295+9]..[290,9295+14])
                ]
    ]
  structure_item (typing/typemod.ml[319,10208+0]..[327,10565+67])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[319,10208+4]..[319,10208+35])
          Ppat_var "retype_applicative_functor_type" (typing/typemod.ml[319,10208+4]..[319,10208+35])
        expression (typing/typemod.ml[319,10208+36]..[327,10565+67]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (typing/typemod.ml[319,10208+37]..[319,10208+40])
            Ppat_var "loc" (typing/typemod.ml[319,10208+37]..[319,10208+40])
          expression (typing/typemod.ml[319,10208+41]..[327,10565+67]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[319,10208+41]..[319,10208+44])
              Ppat_var "env" (typing/typemod.ml[319,10208+41]..[319,10208+44])
            expression (typing/typemod.ml[319,10208+45]..[327,10565+67]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[319,10208+45]..[319,10208+50])
                Ppat_var "funct" (typing/typemod.ml[319,10208+45]..[319,10208+50])
              expression (typing/typemod.ml[319,10208+51]..[327,10565+67]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[319,10208+51]..[319,10208+54])
                  Ppat_var "arg" (typing/typemod.ml[319,10208+51]..[319,10208+54])
                expression (typing/typemod.ml[320,10265+2]..[327,10565+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typemod.ml[320,10265+6]..[320,10265+17])
                        Ppat_var "mty_functor" (typing/typemod.ml[320,10265+6]..[320,10265+17])
                      expression (typing/typemod.ml[320,10265+20]..[320,10265+55])
                        Pexp_field
                        expression (typing/typemod.ml[320,10265+20]..[320,10265+47])
                          Pexp_apply
                          expression (typing/typemod.ml[320,10265+21]..[320,10265+36])
                            Pexp_ident "Env.find_module" (typing/typemod.ml[320,10265+21]..[320,10265+36])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[320,10265+37]..[320,10265+42])
                                Pexp_ident "funct" (typing/typemod.ml[320,10265+37]..[320,10265+42])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[320,10265+43]..[320,10265+46])
                                Pexp_ident "env" (typing/typemod.ml[320,10265+43]..[320,10265+46])
                          ]
                        "md_type" (typing/typemod.ml[320,10265+48]..[320,10265+55])
                  ]
                  expression (typing/typemod.ml[321,10324+2]..[327,10565+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[321,10324+6]..[321,10324+13])
                          Ppat_var "mty_arg" (typing/typemod.ml[321,10324+6]..[321,10324+13])
                        expression (typing/typemod.ml[321,10324+16]..[321,10324+49])
                          Pexp_field
                          expression (typing/typemod.ml[321,10324+16]..[321,10324+41])
                            Pexp_apply
                            expression (typing/typemod.ml[321,10324+17]..[321,10324+32])
                              Pexp_ident "Env.find_module" (typing/typemod.ml[321,10324+17]..[321,10324+32])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[321,10324+33]..[321,10324+36])
                                  Pexp_ident "arg" (typing/typemod.ml[321,10324+33]..[321,10324+36])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[321,10324+37]..[321,10324+40])
                                  Pexp_ident "env" (typing/typemod.ml[321,10324+37]..[321,10324+40])
                            ]
                          "md_type" (typing/typemod.ml[321,10324+42]..[321,10324+49])
                    ]
                    expression (typing/typemod.ml[322,10377+2]..[327,10565+67])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[322,10377+6]..[322,10377+15])
                            Ppat_var "mty_param" (typing/typemod.ml[322,10377+6]..[322,10377+15])
                          expression (typing/typemod.ml[323,10395+4]..[325,10500+23])
                            Pexp_match
                            expression (typing/typemod.ml[323,10395+10]..[323,10395+42])
                              Pexp_apply
                              expression (typing/typemod.ml[323,10395+10]..[323,10395+26])
                                Pexp_ident "Env.scrape_alias" (typing/typemod.ml[323,10395+10]..[323,10395+26])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[323,10395+27]..[323,10395+30])
                                    Pexp_ident "env" (typing/typemod.ml[323,10395+27]..[323,10395+30])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[323,10395+31]..[323,10395+42])
                                    Pexp_ident "mty_functor" (typing/typemod.ml[323,10395+31]..[323,10395+42])
                              ]
                            [
                              <case>
                                pattern (typing/typemod.ml[324,10443+6]..[324,10443+43])
                                  Ppat_construct "Mty_functor" (typing/typemod.ml[324,10443+6]..[324,10443+17])
                                  Some
                                    []
                                    pattern (typing/typemod.ml[324,10443+18]..[324,10443+43])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typemod.ml[324,10443+19]..[324,10443+39])
                                          Ppat_construct "Named" (typing/typemod.ml[324,10443+19]..[324,10443+24])
                                          Some
                                            []
                                            pattern (typing/typemod.ml[324,10443+25]..[324,10443+39])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[324,10443+26]..[324,10443+27])
                                                  Ppat_any
                                                pattern (typing/typemod.ml[324,10443+29]..[324,10443+38])
                                                  Ppat_var "mty_param" (typing/typemod.ml[324,10443+29]..[324,10443+38])
                                              ]
                                        pattern (typing/typemod.ml[324,10443+41]..[324,10443+42])
                                          Ppat_any
                                      ]
                                expression (typing/typemod.ml[324,10443+47]..[324,10443+56])
                                  Pexp_ident "mty_param" (typing/typemod.ml[324,10443+47]..[324,10443+56])
                              <case>
                                pattern (typing/typemod.ml[325,10500+6]..[325,10500+7])
                                  Ppat_any
                                expression (typing/typemod.ml[325,10500+11]..[325,10500+23])
                                  Pexp_assert
                                  expression (typing/typemod.ml[325,10500+18]..[325,10500+23])
                                    Pexp_construct "false" (typing/typemod.ml[325,10500+18]..[325,10500+23])
                                    None
                            ]
                      ]
                      expression (typing/typemod.ml[327,10565+2]..[327,10565+67])
                        Pexp_apply
                        expression (typing/typemod.ml[327,10565+2]..[327,10565+36])
                          Pexp_ident "Includemod.check_modtype_inclusion" (typing/typemod.ml[327,10565+2]..[327,10565+36])
                        [
                          <arg>
                          Labelled "loc"
                            expression (typing/typemod.ml[327,10565+38]..[327,10565+41])
                              Pexp_ident "loc" (typing/typemod.ml[327,10565+38]..[327,10565+41])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[327,10565+42]..[327,10565+45])
                              Pexp_ident "env" (typing/typemod.ml[327,10565+42]..[327,10565+45])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[327,10565+46]..[327,10565+53])
                              Pexp_ident "mty_arg" (typing/typemod.ml[327,10565+46]..[327,10565+53])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[327,10565+54]..[327,10565+57])
                              Pexp_ident "arg" (typing/typemod.ml[327,10565+54]..[327,10565+57])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[327,10565+58]..[327,10565+67])
                              Pexp_ident "mty_param" (typing/typemod.ml[327,10565+58]..[327,10565+67])
                        ]
    ]
  structure_item (typing/typemod.ml[337,11193+0]..[365,12353+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[337,11193+4]..[337,11193+43])
          Ppat_var "check_usage_of_path_of_substituted_item" (typing/typemod.ml[337,11193+4]..[337,11193+43])
        expression (typing/typemod.ml[337,11193+44]..[365,12353+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[337,11193+44]..[337,11193+49])
            Ppat_var "paths" (typing/typemod.ml[337,11193+44]..[337,11193+49])
          expression (typing/typemod.ml[337,11193+50]..[365,12353+5]) ghost
            Pexp_fun
            Labelled "loc"
            None
            pattern (typing/typemod.ml[337,11193+51]..[337,11193+54])
              Ppat_var "loc" (typing/typemod.ml[337,11193+51]..[337,11193+54])
            expression (typing/typemod.ml[337,11193+55]..[365,12353+5]) ghost
              Pexp_fun
              Labelled "lid"
              None
              pattern (typing/typemod.ml[337,11193+56]..[337,11193+59])
                Ppat_var "lid" (typing/typemod.ml[337,11193+56]..[337,11193+59])
              expression (typing/typemod.ml[337,11193+60]..[365,12353+5]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[337,11193+60]..[337,11193+63])
                  Ppat_var "env" (typing/typemod.ml[337,11193+60]..[337,11193+63])
                expression (typing/typemod.ml[337,11193+64]..[365,12353+5]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[337,11193+64]..[337,11193+69])
                    Ppat_var "super" (typing/typemod.ml[337,11193+64]..[337,11193+69])
                  expression (typing/typemod.ml[338,11265+4]..[365,12353+5])
                    Pexp_record
                    [
                      "Btype.it_signature_item" (typing/typemod.ml[339,11282+6]..[339,11282+29])
                        expression (typing/typemod.ml[339,11282+32]..[349,11738+7])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[339,11282+37]..[339,11282+41])
                            Ppat_var "self" (typing/typemod.ml[339,11282+37]..[339,11282+41])
                          expression (typing/typemod.ml[339,11282+45]..[348,11685+52])
                            Pexp_function
                            [
                              <case>
                                pattern (typing/typemod.ml[340,11336+8]..[340,11336+73])
                                  Ppat_construct "Sig_module" (typing/typemod.ml[340,11336+8]..[340,11336+18])
                                  Some
                                    []
                                    pattern (typing/typemod.ml[340,11336+19]..[340,11336+73])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typemod.ml[340,11336+20]..[340,11336+22])
                                          Ppat_var "id" (typing/typemod.ml[340,11336+20]..[340,11336+22])
                                        pattern (typing/typemod.ml[340,11336+24]..[340,11336+25])
                                          Ppat_any
                                        pattern (typing/typemod.ml[340,11336+27]..[340,11336+66])
                                          Ppat_record Open
                                          [
                                            "md_type" (typing/typemod.ml[340,11336+29]..[340,11336+36])
                                              pattern (typing/typemod.ml[340,11336+39]..[340,11336+61])
                                                Ppat_construct "Mty_alias" (typing/typemod.ml[340,11336+39]..[340,11336+48])
                                                Some
                                                  []
                                                  pattern (typing/typemod.ml[340,11336+49]..[340,11336+61])
                                                    Ppat_var "aliased_path" (typing/typemod.ml[340,11336+49]..[340,11336+61])
                                          ]
                                        pattern (typing/typemod.ml[340,11336+68]..[340,11336+69])
                                          Ppat_any
                                        pattern (typing/typemod.ml[340,11336+71]..[340,11336+72])
                                          Ppat_any
                                      ]
                                <when>
                                  expression (typing/typemod.ml[341,11410+13]..[343,11512+20])
                                    Pexp_apply
                                    expression (typing/typemod.ml[341,11410+13]..[341,11410+24])
                                      Pexp_ident "List.exists" (typing/typemod.ml[341,11410+13]..[341,11410+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[342,11435+15]..[342,11435+76])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/typemod.ml[342,11435+20]..[342,11435+24])
                                            Ppat_var "path" (typing/typemod.ml[342,11435+20]..[342,11435+24])
                                          expression (typing/typemod.ml[342,11435+28]..[342,11435+75])
                                            Pexp_apply
                                            expression (typing/typemod.ml[342,11435+28]..[342,11435+49])
                                              Pexp_ident "path_is_strict_prefix" (typing/typemod.ml[342,11435+28]..[342,11435+49])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[342,11435+50]..[342,11435+54])
                                                  Pexp_ident "path" (typing/typemod.ml[342,11435+50]..[342,11435+54])
                                              <arg>
                                              Labelled "prefix"
                                                expression (typing/typemod.ml[342,11435+63]..[342,11435+75])
                                                  Pexp_ident "aliased_path" (typing/typemod.ml[342,11435+63]..[342,11435+75])
                                            ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[343,11512+15]..[343,11512+20])
                                          Pexp_ident "paths" (typing/typemod.ml[343,11512+15]..[343,11512+20])
                                    ]
                                expression (typing/typemod.ml[345,11544+9]..[346,11618+46])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typemod.ml[345,11544+13]..[345,11544+14])
                                        Ppat_var "e" (typing/typemod.ml[345,11544+13]..[345,11544+14])
                                      expression (typing/typemod.ml[345,11544+17]..[345,11544+70])
                                        Pexp_construct "With_changes_module_alias" (typing/typemod.ml[345,11544+17]..[345,11544+42])
                                        Some
                                          expression (typing/typemod.ml[345,11544+43]..[345,11544+70])
                                            Pexp_tuple
                                            [
                                              expression (typing/typemod.ml[345,11544+44]..[345,11544+51])
                                                Pexp_field
                                                expression (typing/typemod.ml[345,11544+44]..[345,11544+47])
                                                  Pexp_ident "lid" (typing/typemod.ml[345,11544+44]..[345,11544+47])
                                                "txt" (typing/typemod.ml[345,11544+48]..[345,11544+51])
                                              expression (typing/typemod.ml[345,11544+53]..[345,11544+55])
                                                Pexp_ident "id" (typing/typemod.ml[345,11544+53]..[345,11544+55])
                                              expression (typing/typemod.ml[345,11544+57]..[345,11544+69])
                                                Pexp_ident "aliased_path" (typing/typemod.ml[345,11544+57]..[345,11544+69])
                                            ]
                                  ]
                                  expression (typing/typemod.ml[346,11618+9]..[346,11618+46])
                                    Pexp_apply
                                    expression (typing/typemod.ml[346,11618+9]..[346,11618+14])
                                      Pexp_ident "raise" (typing/typemod.ml[346,11618+9]..[346,11618+14])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[346,11618+14]..[346,11618+46])
                                          Pexp_construct "Error" (typing/typemod.ml[346,11618+15]..[346,11618+20])
                                          Some
                                            expression (typing/typemod.ml[346,11618+20]..[346,11618+45])
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[346,11618+21]..[346,11618+24])
                                                  Pexp_ident "loc" (typing/typemod.ml[346,11618+21]..[346,11618+24])
                                                expression (typing/typemod.ml[346,11618+26]..[346,11618+41])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[346,11618+26]..[346,11618+36])
                                                    Pexp_ident "Lazy.force" (typing/typemod.ml[346,11618+26]..[346,11618+36])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[346,11618+37]..[346,11618+41])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[346,11618+37]..[346,11618+38])
                                                          Pexp_ident "!" (typing/typemod.ml[346,11618+37]..[346,11618+38])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[346,11618+38]..[346,11618+41])
                                                              Pexp_ident "env" (typing/typemod.ml[346,11618+38]..[346,11618+41])
                                                        ]
                                                  ]
                                                expression (typing/typemod.ml[346,11618+43]..[346,11618+44])
                                                  Pexp_ident "e" (typing/typemod.ml[346,11618+43]..[346,11618+44])
                                              ]
                                    ]
                              <case>
                                pattern (typing/typemod.ml[347,11665+8]..[347,11665+16])
                                  Ppat_var "sig_item" (typing/typemod.ml[347,11665+8]..[347,11665+16])
                                expression (typing/typemod.ml[348,11685+9]..[348,11685+52])
                                  Pexp_apply
                                  expression (typing/typemod.ml[348,11685+9]..[348,11685+38])
                                    Pexp_field
                                    expression (typing/typemod.ml[348,11685+9]..[348,11685+14])
                                      Pexp_ident "super" (typing/typemod.ml[348,11685+9]..[348,11685+14])
                                    "Btype.it_signature_item" (typing/typemod.ml[348,11685+15]..[348,11685+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[348,11685+39]..[348,11685+43])
                                        Pexp_ident "self" (typing/typemod.ml[348,11685+39]..[348,11685+43])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[348,11685+44]..[348,11685+52])
                                        Pexp_ident "sig_item" (typing/typemod.ml[348,11685+44]..[348,11685+52])
                                  ]
                            ]
                      "Btype.it_path" (typing/typemod.ml[350,11747+6]..[350,11747+19])
                        expression (typing/typemod.ml[350,11747+22]..[364,12344+7])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[350,11747+27]..[350,11747+42])
                            Ppat_var "referenced_path" (typing/typemod.ml[350,11747+27]..[350,11747+42])
                          expression (typing/typemod.ml[351,11793+8]..[363,12334+9])
                            Pexp_apply
                            expression (typing/typemod.ml[351,11793+8]..[351,11793+23])
                              Pexp_ident "iter_path_apply" (typing/typemod.ml[351,11793+8]..[351,11793+23])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[351,11793+24]..[351,11793+39])
                                  Pexp_ident "referenced_path" (typing/typemod.ml[351,11793+24]..[351,11793+39])
                              <arg>
                              Labelled "f"
                                expression (typing/typemod.ml[351,11793+43]..[363,12334+9])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typemod.ml[351,11793+48]..[351,11793+53])
                                    Ppat_var "funct" (typing/typemod.ml[351,11793+48]..[351,11793+53])
                                  expression (typing/typemod.ml[351,11793+54]..[362,12264+69]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typemod.ml[351,11793+54]..[351,11793+57])
                                      Ppat_var "arg" (typing/typemod.ml[351,11793+54]..[351,11793+57])
                                    expression (typing/typemod.ml[352,11854+10]..[362,12264+69])
                                      Pexp_ifthenelse
                                      expression (typing/typemod.ml[352,11854+13]..[354,11947+20])
                                        Pexp_apply
                                        expression (typing/typemod.ml[352,11854+13]..[352,11854+24])
                                          Pexp_ident "List.exists" (typing/typemod.ml[352,11854+13]..[352,11854+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[353,11879+15]..[353,11879+67])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (typing/typemod.ml[353,11879+20]..[353,11879+24])
                                                Ppat_var "path" (typing/typemod.ml[353,11879+20]..[353,11879+24])
                                              expression (typing/typemod.ml[353,11879+28]..[353,11879+66])
                                                Pexp_apply
                                                expression (typing/typemod.ml[353,11879+28]..[353,11879+49])
                                                  Pexp_ident "path_is_strict_prefix" (typing/typemod.ml[353,11879+28]..[353,11879+49])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[353,11879+50]..[353,11879+54])
                                                      Pexp_ident "path" (typing/typemod.ml[353,11879+50]..[353,11879+54])
                                                  <arg>
                                                  Labelled "prefix"
                                                    expression (typing/typemod.ml[353,11879+63]..[353,11879+66])
                                                      Pexp_ident "arg" (typing/typemod.ml[353,11879+63]..[353,11879+66])
                                                ]
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[354,11947+15]..[354,11947+20])
                                              Pexp_ident "paths" (typing/typemod.ml[354,11947+15]..[354,11947+20])
                                        ]
                                      expression (typing/typemod.ml[356,11983+12]..[362,12264+69])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[356,11983+16]..[356,11983+19])
                                              Ppat_var "env" (typing/typemod.ml[356,11983+16]..[356,11983+19])
                                            expression (typing/typemod.ml[356,11983+22]..[356,11983+37])
                                              Pexp_apply
                                              expression (typing/typemod.ml[356,11983+22]..[356,11983+32])
                                                Pexp_ident "Lazy.force" (typing/typemod.ml[356,11983+22]..[356,11983+32])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[356,11983+33]..[356,11983+37])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[356,11983+33]..[356,11983+34])
                                                      Pexp_ident "!" (typing/typemod.ml[356,11983+33]..[356,11983+34])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[356,11983+34]..[356,11983+37])
                                                          Pexp_ident "env" (typing/typemod.ml[356,11983+34]..[356,11983+37])
                                                    ]
                                              ]
                                        ]
                                        expression (typing/typemod.ml[357,12024+12]..[362,12264+69])
                                          Pexp_match
                                          expression (typing/typemod.ml[357,12024+18]..[357,12024+68])
                                            Pexp_apply
                                            expression (typing/typemod.ml[357,12024+18]..[357,12024+49])
                                              Pexp_ident "retype_applicative_functor_type" (typing/typemod.ml[357,12024+18]..[357,12024+49])
                                            [
                                              <arg>
                                              Labelled "loc"
                                                expression (typing/typemod.ml[357,12024+51]..[357,12024+54])
                                                  Pexp_ident "loc" (typing/typemod.ml[357,12024+51]..[357,12024+54])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[357,12024+55]..[357,12024+58])
                                                  Pexp_ident "env" (typing/typemod.ml[357,12024+55]..[357,12024+58])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[357,12024+59]..[357,12024+64])
                                                  Pexp_ident "funct" (typing/typemod.ml[357,12024+59]..[357,12024+64])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[357,12024+65]..[357,12024+68])
                                                  Pexp_ident "arg" (typing/typemod.ml[357,12024+65]..[357,12024+68])
                                            ]
                                          [
                                            <case>
                                              pattern (typing/typemod.ml[358,12098+14]..[358,12098+18])
                                                Ppat_construct "None" (typing/typemod.ml[358,12098+14]..[358,12098+18])
                                                None
                                              expression (typing/typemod.ml[358,12098+22]..[358,12098+24])
                                                Pexp_construct "()" (typing/typemod.ml[358,12098+22]..[358,12098+24])
                                                None
                                            <case>
                                              pattern (typing/typemod.ml[359,12123+14]..[359,12123+30])
                                                Ppat_construct "Some" (typing/typemod.ml[359,12123+14]..[359,12123+18])
                                                Some
                                                  []
                                                  pattern (typing/typemod.ml[359,12123+19]..[359,12123+30])
                                                    Ppat_var "explanation" (typing/typemod.ml[359,12123+19]..[359,12123+30])
                                              expression (typing/typemod.ml[360,12157+16]..[362,12264+69])
                                                Pexp_apply
                                                expression (typing/typemod.ml[360,12157+16]..[360,12157+21])
                                                  Pexp_ident "raise" (typing/typemod.ml[360,12157+16]..[360,12157+21])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[360,12157+21]..[362,12264+69])
                                                      Pexp_construct "Error" (typing/typemod.ml[360,12157+22]..[360,12157+27])
                                                      Some
                                                        expression (typing/typemod.ml[360,12157+27]..[362,12264+68])
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/typemod.ml[360,12157+28]..[360,12157+31])
                                                              Pexp_ident "loc" (typing/typemod.ml[360,12157+28]..[360,12157+31])
                                                            expression (typing/typemod.ml[360,12157+33]..[360,12157+36])
                                                              Pexp_ident "env" (typing/typemod.ml[360,12157+33]..[360,12157+36])
                                                            expression (typing/typemod.ml[361,12195+28]..[362,12264+67])
                                                              Pexp_construct "With_makes_applicative_functor_ill_typed" (typing/typemod.ml[361,12195+28]..[361,12195+68])
                                                              Some
                                                                expression (typing/typemod.ml[362,12264+28]..[362,12264+67])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (typing/typemod.ml[362,12264+29]..[362,12264+36])
                                                                      Pexp_field
                                                                      expression (typing/typemod.ml[362,12264+29]..[362,12264+32])
Pexp_ident "lid" (typing/typemod.ml[362,12264+29]..[362,12264+32])
                                                                      "txt" (typing/typemod.ml[362,12264+33]..[362,12264+36])
                                                                    expression (typing/typemod.ml[362,12264+38]..[362,12264+53])
                                                                      Pexp_ident "referenced_path" (typing/typemod.ml[362,12264+38]..[362,12264+53])
                                                                    expression (typing/typemod.ml[362,12264+55]..[362,12264+66])
                                                                      Pexp_ident "explanation" (typing/typemod.ml[362,12264+55]..[362,12264+66])
                                                                  ]
                                                          ]
                                                ]
                                          ]
                                      None
                            ]
                    ]
                    Some
                      expression (typing/typemod.ml[338,11265+6]..[338,11265+11])
                        Pexp_ident "super" (typing/typemod.ml[338,11265+6]..[338,11265+11])
    ]
  structure_item (typing/typemod.ml[371,12569+0]..[379,12937+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[371,12569+4]..[371,12569+31])
          Ppat_var "check_usage_of_module_types" (typing/typemod.ml[371,12569+4]..[371,12569+31])
        expression (typing/typemod.ml[371,12569+32]..[379,12937+38]) ghost
          Pexp_fun
          Labelled "error"
          None
          pattern (typing/typemod.ml[371,12569+33]..[371,12569+38])
            Ppat_var "error" (typing/typemod.ml[371,12569+33]..[371,12569+38])
          expression (typing/typemod.ml[371,12569+39]..[379,12937+38]) ghost
            Pexp_fun
            Labelled "paths"
            None
            pattern (typing/typemod.ml[371,12569+40]..[371,12569+45])
              Ppat_var "paths" (typing/typemod.ml[371,12569+40]..[371,12569+45])
            expression (typing/typemod.ml[371,12569+46]..[379,12937+38]) ghost
              Pexp_fun
              Labelled "loc"
              None
              pattern (typing/typemod.ml[371,12569+47]..[371,12569+50])
                Ppat_var "loc" (typing/typemod.ml[371,12569+47]..[371,12569+50])
              expression (typing/typemod.ml[371,12569+51]..[379,12937+38]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[371,12569+51]..[371,12569+54])
                  Ppat_var "env" (typing/typemod.ml[371,12569+51]..[371,12569+54])
                expression (typing/typemod.ml[371,12569+55]..[379,12937+38]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[371,12569+55]..[371,12569+60])
                    Ppat_var "super" (typing/typemod.ml[371,12569+55]..[371,12569+60])
                  expression (typing/typemod.ml[372,12632+2]..[379,12937+38])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[372,12632+6]..[372,12632+21])
                          Ppat_var "it_do_type_expr" (typing/typemod.ml[372,12632+6]..[372,12632+21])
                        expression (typing/typemod.ml[372,12632+22]..[378,12889+44]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[372,12632+22]..[372,12632+24])
                            Ppat_var "it" (typing/typemod.ml[372,12632+22]..[372,12632+24])
                          expression (typing/typemod.ml[372,12632+25]..[378,12889+44]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[372,12632+25]..[372,12632+27])
                              Ppat_var "ty" (typing/typemod.ml[372,12632+25]..[372,12632+27])
                            expression (typing/typemod.ml[372,12632+30]..[378,12889+44])
                              Pexp_match
                              expression (typing/typemod.ml[372,12632+36]..[372,12632+47])
                                Pexp_apply
                                expression (typing/typemod.ml[372,12632+36]..[372,12632+44])
                                  Pexp_ident "get_desc" (typing/typemod.ml[372,12632+36]..[372,12632+44])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[372,12632+45]..[372,12632+47])
                                      Pexp_ident "ty" (typing/typemod.ml[372,12632+45]..[372,12632+47])
                                ]
                              [
                                <case>
                                  pattern (typing/typemod.ml[373,12685+6]..[373,12685+21])
                                    Ppat_construct "Tpackage" (typing/typemod.ml[373,12685+6]..[373,12685+14])
                                    Some
                                      []
                                      pattern (typing/typemod.ml[373,12685+15]..[373,12685+21])
                                        Ppat_tuple
                                        [
                                          pattern (typing/typemod.ml[373,12685+16]..[373,12685+17])
                                            Ppat_var "p" (typing/typemod.ml[373,12685+16]..[373,12685+17])
                                          pattern (typing/typemod.ml[373,12685+19]..[373,12685+20])
                                            Ppat_any
                                        ]
                                  expression (typing/typemod.ml[374,12710+7]..[377,12878+10])
                                    Pexp_match
                                    expression (typing/typemod.ml[374,12710+19]..[374,12710+52])
                                      Pexp_apply
                                      expression (typing/typemod.ml[374,12710+19]..[374,12710+32])
                                        Pexp_ident "List.find_opt" (typing/typemod.ml[374,12710+19]..[374,12710+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[374,12710+33]..[374,12710+46])
                                            Pexp_apply
                                            expression (typing/typemod.ml[374,12710+34]..[374,12710+43])
                                              Pexp_ident "Path.same" (typing/typemod.ml[374,12710+34]..[374,12710+43])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[374,12710+44]..[374,12710+45])
                                                  Pexp_ident "p" (typing/typemod.ml[374,12710+44]..[374,12710+45])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[374,12710+47]..[374,12710+52])
                                            Pexp_ident "paths" (typing/typemod.ml[374,12710+47]..[374,12710+52])
                                      ]
                                    [
                                      <case>
                                        pattern (typing/typemod.ml[375,12768+9]..[375,12768+15])
                                          Ppat_construct "Some" (typing/typemod.ml[375,12768+9]..[375,12768+13])
                                          Some
                                            []
                                            pattern (typing/typemod.ml[375,12768+14]..[375,12768+15])
                                              Ppat_var "p" (typing/typemod.ml[375,12768+14]..[375,12768+15])
                                        expression (typing/typemod.ml[375,12768+19]..[375,12768+61])
                                          Pexp_apply
                                          expression (typing/typemod.ml[375,12768+19]..[375,12768+24])
                                            Pexp_ident "raise" (typing/typemod.ml[375,12768+19]..[375,12768+24])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[375,12768+25]..[375,12768+61])
                                                Pexp_construct "Error" (typing/typemod.ml[375,12768+26]..[375,12768+31])
                                                Some
                                                  expression (typing/typemod.ml[375,12768+31]..[375,12768+60])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[375,12768+32]..[375,12768+35])
                                                        Pexp_ident "loc" (typing/typemod.ml[375,12768+32]..[375,12768+35])
                                                      expression (typing/typemod.ml[375,12768+36]..[375,12768+51])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[375,12768+36]..[375,12768+46])
                                                          Pexp_ident "Lazy.force" (typing/typemod.ml[375,12768+36]..[375,12768+46])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[375,12768+47]..[375,12768+51])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[375,12768+47]..[375,12768+48])
                                                                Pexp_ident "!" (typing/typemod.ml[375,12768+47]..[375,12768+48])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[375,12768+48]..[375,12768+51])
                                                                    Pexp_ident "env" (typing/typemod.ml[375,12768+48]..[375,12768+51])
                                                              ]
                                                        ]
                                                      expression (typing/typemod.ml[375,12768+52]..[375,12768+59])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[375,12768+52]..[375,12768+57])
                                                          Pexp_ident "error" (typing/typemod.ml[375,12768+52]..[375,12768+57])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[375,12768+58]..[375,12768+59])
                                                              Pexp_ident "p" (typing/typemod.ml[375,12768+58]..[375,12768+59])
                                                        ]
                                                    ]
                                          ]
                                      <case>
                                        pattern (typing/typemod.ml[376,12830+9]..[376,12830+10])
                                          Ppat_any
                                        expression (typing/typemod.ml[376,12830+14]..[376,12830+47])
                                          Pexp_apply
                                          expression (typing/typemod.ml[376,12830+14]..[376,12830+41])
                                            Pexp_field
                                            expression (typing/typemod.ml[376,12830+14]..[376,12830+19])
                                              Pexp_ident "super" (typing/typemod.ml[376,12830+14]..[376,12830+19])
                                            "Btype.it_do_type_expr" (typing/typemod.ml[376,12830+20]..[376,12830+41])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[376,12830+42]..[376,12830+44])
                                                Pexp_ident "it" (typing/typemod.ml[376,12830+42]..[376,12830+44])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[376,12830+45]..[376,12830+47])
                                                Pexp_ident "ty" (typing/typemod.ml[376,12830+45]..[376,12830+47])
                                          ]
                                    ]
                                <case>
                                  pattern (typing/typemod.ml[378,12889+6]..[378,12889+7])
                                    Ppat_any
                                  expression (typing/typemod.ml[378,12889+11]..[378,12889+44])
                                    Pexp_apply
                                    expression (typing/typemod.ml[378,12889+11]..[378,12889+38])
                                      Pexp_field
                                      expression (typing/typemod.ml[378,12889+11]..[378,12889+16])
                                        Pexp_ident "super" (typing/typemod.ml[378,12889+11]..[378,12889+16])
                                      "Btype.it_do_type_expr" (typing/typemod.ml[378,12889+17]..[378,12889+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[378,12889+39]..[378,12889+41])
                                          Pexp_ident "it" (typing/typemod.ml[378,12889+39]..[378,12889+41])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[378,12889+42]..[378,12889+44])
                                          Pexp_ident "ty" (typing/typemod.ml[378,12889+42]..[378,12889+44])
                                    ]
                              ]
                    ]
                    expression (typing/typemod.ml[379,12937+2]..[379,12937+38])
                      Pexp_record
                      [
                        "Btype.it_do_type_expr" (typing/typemod.ml[379,12937+15]..[379,12937+36]) ghost
                          expression (typing/typemod.ml[379,12937+15]..[379,12937+36])
                            Pexp_ident "it_do_type_expr" (typing/typemod.ml[379,12937+15]..[379,12937+36])
                      ]
                      Some
                        expression (typing/typemod.ml[379,12937+4]..[379,12937+9])
                          Pexp_ident "super" (typing/typemod.ml[379,12937+4]..[379,12937+9])
    ]
  structure_item (typing/typemod.ml[381,12977+0]..[402,13831+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[381,12977+4]..[381,12977+31])
          Ppat_var "do_check_after_substitution" (typing/typemod.ml[381,12977+4]..[381,12977+31])
        expression (typing/typemod.ml[381,12977+32]..[402,13831+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[381,12977+32]..[381,12977+35])
            Ppat_var "env" (typing/typemod.ml[381,12977+32]..[381,12977+35])
          expression (typing/typemod.ml[381,12977+36]..[402,13831+59]) ghost
            Pexp_fun
            Labelled "loc"
            None
            pattern (typing/typemod.ml[381,12977+37]..[381,12977+40])
              Ppat_var "loc" (typing/typemod.ml[381,12977+37]..[381,12977+40])
            expression (typing/typemod.ml[381,12977+41]..[402,13831+59]) ghost
              Pexp_fun
              Labelled "lid"
              None
              pattern (typing/typemod.ml[381,12977+42]..[381,12977+45])
                Ppat_var "lid" (typing/typemod.ml[381,12977+42]..[381,12977+45])
              expression (typing/typemod.ml[381,12977+46]..[402,13831+59]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[381,12977+46]..[381,12977+51])
                  Ppat_var "paths" (typing/typemod.ml[381,12977+46]..[381,12977+51])
                expression (typing/typemod.ml[381,12977+52]..[402,13831+59]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[381,12977+52]..[381,12977+70])
                    Ppat_var "unpackable_modtype" (typing/typemod.ml[381,12977+52]..[381,12977+70])
                  expression (typing/typemod.ml[381,12977+71]..[402,13831+59]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[381,12977+71]..[381,12977+73])
                      Ppat_var "sg" (typing/typemod.ml[381,12977+71]..[381,12977+73])
                    expression (typing/typemod.ml[382,13053+2]..[402,13831+59])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[382,13053+6]..[382,13053+19])
                            Ppat_tuple
                            [
                              pattern (typing/typemod.ml[382,13053+6]..[382,13053+9])
                                Ppat_var "env" (typing/typemod.ml[382,13053+6]..[382,13053+9])
                              pattern (typing/typemod.ml[382,13053+11]..[382,13053+19])
                                Ppat_var "iterator" (typing/typemod.ml[382,13053+11]..[382,13053+19])
                            ]
                          expression (typing/typemod.ml[382,13053+22]..[382,13053+43])
                            Pexp_apply
                            expression (typing/typemod.ml[382,13053+22]..[382,13053+39])
                              Pexp_ident "iterator_with_env" (typing/typemod.ml[382,13053+22]..[382,13053+39])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[382,13053+40]..[382,13053+43])
                                  Pexp_ident "env" (typing/typemod.ml[382,13053+40]..[382,13053+43])
                            ]
                      ]
                      expression (typing/typemod.ml[383,13100+2]..[402,13831+59])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typemod.ml[383,13100+6]..[383,13100+16])
                              Ppat_tuple
                              [
                                pattern (typing/typemod.ml[383,13100+6]..[383,13100+10])
                                  Ppat_var "last" (typing/typemod.ml[383,13100+6]..[383,13100+10])
                                pattern (typing/typemod.ml[383,13100+12]..[383,13100+16])
                                  Ppat_var "rest" (typing/typemod.ml[383,13100+12]..[383,13100+16])
                              ]
                            expression (typing/typemod.ml[383,13100+19]..[385,13170+32])
                              Pexp_match
                              expression (typing/typemod.ml[383,13100+25]..[383,13100+39])
                                Pexp_apply
                                expression (typing/typemod.ml[383,13100+25]..[383,13100+33])
                                  Pexp_ident "List.rev" (typing/typemod.ml[383,13100+25]..[383,13100+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[383,13100+34]..[383,13100+39])
                                      Pexp_ident "paths" (typing/typemod.ml[383,13100+34]..[383,13100+39])
                                ]
                              [
                                <case>
                                  pattern (typing/typemod.ml[384,13145+6]..[384,13145+8])
                                    Ppat_construct "[]" (typing/typemod.ml[384,13145+6]..[384,13145+8])
                                    None
                                  expression (typing/typemod.ml[384,13145+12]..[384,13145+24])
                                    Pexp_assert
                                    expression (typing/typemod.ml[384,13145+19]..[384,13145+24])
                                      Pexp_construct "false" (typing/typemod.ml[384,13145+19]..[384,13145+24])
                                      None
                                <case>
                                  pattern (typing/typemod.ml[385,13170+6]..[385,13170+18])
                                    Ppat_construct "::" (typing/typemod.ml[385,13170+11]..[385,13170+13])
                                    Some
                                      []
                                      pattern (typing/typemod.ml[385,13170+6]..[385,13170+18]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (typing/typemod.ml[385,13170+6]..[385,13170+10])
                                            Ppat_var "last" (typing/typemod.ml[385,13170+6]..[385,13170+10])
                                          pattern (typing/typemod.ml[385,13170+14]..[385,13170+18])
                                            Ppat_var "rest" (typing/typemod.ml[385,13170+14]..[385,13170+18])
                                        ]
                                  expression (typing/typemod.ml[385,13170+22]..[385,13170+32])
                                    Pexp_tuple
                                    [
                                      expression (typing/typemod.ml[385,13170+22]..[385,13170+26])
                                        Pexp_ident "last" (typing/typemod.ml[385,13170+22]..[385,13170+26])
                                      expression (typing/typemod.ml[385,13170+28]..[385,13170+32])
                                        Pexp_ident "rest" (typing/typemod.ml[385,13170+28]..[385,13170+32])
                                    ]
                              ]
                        ]
                        expression (typing/typemod.ml[389,13354+2]..[402,13831+59])
                          Pexp_sequence
                          expression (typing/typemod.ml[389,13354+2]..[389,13354+56])
                            Pexp_assert
                            expression (typing/typemod.ml[389,13354+9]..[389,13354+56])
                              Pexp_match
                              expression (typing/typemod.ml[389,13354+16]..[389,13354+20])
                                Pexp_ident "last" (typing/typemod.ml[389,13354+16]..[389,13354+20])
                              [
                                <case>
                                  pattern (typing/typemod.ml[389,13354+26]..[389,13354+34])
                                    Ppat_construct "Pident" (typing/typemod.ml[389,13354+26]..[389,13354+32])
                                    Some
                                      []
                                      pattern (typing/typemod.ml[389,13354+33]..[389,13354+34])
                                        Ppat_any
                                  expression (typing/typemod.ml[389,13354+38]..[389,13354+42])
                                    Pexp_construct "true" (typing/typemod.ml[389,13354+38]..[389,13354+42])
                                    None
                                <case>
                                  pattern (typing/typemod.ml[389,13354+45]..[389,13354+46])
                                    Ppat_any
                                  expression (typing/typemod.ml[389,13354+50]..[389,13354+55])
                                    Pexp_construct "false" (typing/typemod.ml[389,13354+50]..[389,13354+55])
                                    None
                              ]
                          expression (typing/typemod.ml[390,13412+2]..[402,13831+59])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[390,13412+6]..[390,13412+14])
                                  Ppat_var "iterator" (typing/typemod.ml[390,13412+6]..[390,13412+14])
                                expression (typing/typemod.ml[390,13412+17]..[393,13482+75])
                                  Pexp_match
                                  expression (typing/typemod.ml[390,13412+23]..[390,13412+27])
                                    Pexp_ident "rest" (typing/typemod.ml[390,13412+23]..[390,13412+27])
                                  [
                                    <case>
                                      pattern (typing/typemod.ml[391,13445+6]..[391,13445+8])
                                        Ppat_construct "[]" (typing/typemod.ml[391,13445+6]..[391,13445+8])
                                        None
                                      expression (typing/typemod.ml[391,13445+12]..[391,13445+20])
                                        Pexp_ident "iterator" (typing/typemod.ml[391,13445+12]..[391,13445+20])
                                    <case>
                                      pattern (typing/typemod.ml[392,13466+6]..[392,13466+12])
                                        Ppat_construct "::" (typing/typemod.ml[392,13466+8]..[392,13466+10])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[392,13466+6]..[392,13466+12]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[392,13466+6]..[392,13466+7])
                                                Ppat_any
                                              pattern (typing/typemod.ml[392,13466+11]..[392,13466+12])
                                                Ppat_any
                                            ]
                                      expression (typing/typemod.ml[393,13482+8]..[393,13482+75])
                                        Pexp_apply
                                        expression (typing/typemod.ml[393,13482+8]..[393,13482+47])
                                          Pexp_ident "check_usage_of_path_of_substituted_item" (typing/typemod.ml[393,13482+8]..[393,13482+47])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[393,13482+48]..[393,13482+52])
                                              Pexp_ident "rest" (typing/typemod.ml[393,13482+48]..[393,13482+52])
                                          <arg>
                                          Labelled "loc"
                                            expression (typing/typemod.ml[393,13482+54]..[393,13482+57])
                                              Pexp_ident "loc" (typing/typemod.ml[393,13482+54]..[393,13482+57])
                                          <arg>
                                          Labelled "lid"
                                            expression (typing/typemod.ml[393,13482+59]..[393,13482+62])
                                              Pexp_ident "lid" (typing/typemod.ml[393,13482+59]..[393,13482+62])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[393,13482+63]..[393,13482+66])
                                              Pexp_ident "env" (typing/typemod.ml[393,13482+63]..[393,13482+66])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[393,13482+67]..[393,13482+75])
                                              Pexp_ident "iterator" (typing/typemod.ml[393,13482+67]..[393,13482+75])
                                        ]
                                  ]
                            ]
                            expression (typing/typemod.ml[395,13563+2]..[402,13831+59])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[395,13563+6]..[395,13563+14])
                                    Ppat_var "iterator" (typing/typemod.ml[395,13563+6]..[395,13563+14])
                                  expression (typing/typemod.ml[395,13563+17]..[399,13716+66])
                                    Pexp_match
                                    expression (typing/typemod.ml[395,13563+23]..[395,13563+41])
                                      Pexp_ident "unpackable_modtype" (typing/typemod.ml[395,13563+23]..[395,13563+41])
                                    [
                                      <case>
                                        pattern (typing/typemod.ml[396,13610+6]..[396,13610+10])
                                          Ppat_construct "None" (typing/typemod.ml[396,13610+6]..[396,13610+10])
                                          None
                                        expression (typing/typemod.ml[396,13610+14]..[396,13610+22])
                                          Pexp_ident "iterator" (typing/typemod.ml[396,13610+14]..[396,13610+22])
                                      <case>
                                        pattern (typing/typemod.ml[397,13633+6]..[397,13633+14])
                                          Ppat_construct "Some" (typing/typemod.ml[397,13633+6]..[397,13633+10])
                                          Some
                                            []
                                            pattern (typing/typemod.ml[397,13633+11]..[397,13633+14])
                                              Ppat_var "mty" (typing/typemod.ml[397,13633+11]..[397,13633+14])
                                        expression (typing/typemod.ml[398,13651+7]..[399,13716+66])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[398,13651+11]..[398,13651+16])
                                                Ppat_var "error" (typing/typemod.ml[398,13651+11]..[398,13651+16])
                                              expression (typing/typemod.ml[398,13651+17]..[398,13651+61]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/typemod.ml[398,13651+17]..[398,13651+18])
                                                  Ppat_var "p" (typing/typemod.ml[398,13651+17]..[398,13651+18])
                                                expression (typing/typemod.ml[398,13651+21]..[398,13651+61])
                                                  Pexp_construct "With_cannot_remove_packed_modtype" (typing/typemod.ml[398,13651+21]..[398,13651+54])
                                                  Some
                                                    expression (typing/typemod.ml[398,13651+54]..[398,13651+61])
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typemod.ml[398,13651+55]..[398,13651+56])
                                                          Pexp_ident "p" (typing/typemod.ml[398,13651+55]..[398,13651+56])
                                                        expression (typing/typemod.ml[398,13651+57]..[398,13651+60])
                                                          Pexp_ident "mty" (typing/typemod.ml[398,13651+57]..[398,13651+60])
                                                      ]
                                          ]
                                          expression (typing/typemod.ml[399,13716+7]..[399,13716+66])
                                            Pexp_apply
                                            expression (typing/typemod.ml[399,13716+7]..[399,13716+34])
                                              Pexp_ident "check_usage_of_module_types" (typing/typemod.ml[399,13716+7]..[399,13716+34])
                                            [
                                              <arg>
                                              Labelled "error"
                                                expression (typing/typemod.ml[399,13716+36]..[399,13716+41])
                                                  Pexp_ident "error" (typing/typemod.ml[399,13716+36]..[399,13716+41])
                                              <arg>
                                              Labelled "paths"
                                                expression (typing/typemod.ml[399,13716+43]..[399,13716+48])
                                                  Pexp_ident "paths" (typing/typemod.ml[399,13716+43]..[399,13716+48])
                                              <arg>
                                              Labelled "loc"
                                                expression (typing/typemod.ml[399,13716+50]..[399,13716+53])
                                                  Pexp_ident "loc" (typing/typemod.ml[399,13716+50]..[399,13716+53])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[399,13716+54]..[399,13716+57])
                                                  Pexp_ident "env" (typing/typemod.ml[399,13716+54]..[399,13716+57])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[399,13716+58]..[399,13716+66])
                                                  Pexp_ident "iterator" (typing/typemod.ml[399,13716+58]..[399,13716+66])
                                            ]
                                    ]
                              ]
                              expression (typing/typemod.ml[401,13788+2]..[402,13831+59])
                                Pexp_sequence
                                expression (typing/typemod.ml[401,13788+2]..[401,13788+41])
                                  Pexp_apply
                                  expression (typing/typemod.ml[401,13788+2]..[401,13788+29])
                                    Pexp_field
                                    expression (typing/typemod.ml[401,13788+2]..[401,13788+10])
                                      Pexp_ident "iterator" (typing/typemod.ml[401,13788+2]..[401,13788+10])
                                    "Btype.it_signature" (typing/typemod.ml[401,13788+11]..[401,13788+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[401,13788+30]..[401,13788+38])
                                        Pexp_ident "iterator" (typing/typemod.ml[401,13788+30]..[401,13788+38])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[401,13788+39]..[401,13788+41])
                                        Pexp_ident "sg" (typing/typemod.ml[401,13788+39]..[401,13788+41])
                                  ]
                                expression (typing/typemod.ml[402,13831+2]..[402,13831+59])
                                  Pexp_apply
                                  expression (typing/typemod.ml[402,13831+2]..[402,13831+56])
                                    Pexp_open Fresh
                                    module_expr (typing/typemod.ml[402,13831+2]..[402,13831+7])
                                      Pmod_ident "Btype" (typing/typemod.ml[402,13831+2]..[402,13831+7])
                                    expression (typing/typemod.ml[402,13831+9]..[402,13831+55])
                                      Pexp_apply
                                      expression (typing/typemod.ml[402,13831+9]..[402,13831+38])
                                        Pexp_field
                                        expression (typing/typemod.ml[402,13831+9]..[402,13831+25])
                                          Pexp_ident "unmark_iterators" (typing/typemod.ml[402,13831+9]..[402,13831+25])
                                        "it_signature" (typing/typemod.ml[402,13831+26]..[402,13831+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[402,13831+39]..[402,13831+55])
                                            Pexp_ident "unmark_iterators" (typing/typemod.ml[402,13831+39]..[402,13831+55])
                                      ]
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[402,13831+57]..[402,13831+59])
                                        Pexp_ident "sg" (typing/typemod.ml[402,13831+57]..[402,13831+59])
                                  ]
    ]
  structure_item (typing/typemod.ml[404,13892+0]..[407,14030+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[404,13892+4]..[404,13892+34])
          Ppat_var "check_usage_after_substitution" (typing/typemod.ml[404,13892+4]..[404,13892+34])
        expression (typing/typemod.ml[404,13892+35]..[407,14030+78]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[404,13892+35]..[404,13892+38])
            Ppat_var "env" (typing/typemod.ml[404,13892+35]..[404,13892+38])
          expression (typing/typemod.ml[404,13892+39]..[407,14030+78]) ghost
            Pexp_fun
            Labelled "loc"
            None
            pattern (typing/typemod.ml[404,13892+40]..[404,13892+43])
              Ppat_var "loc" (typing/typemod.ml[404,13892+40]..[404,13892+43])
            expression (typing/typemod.ml[404,13892+44]..[407,14030+78]) ghost
              Pexp_fun
              Labelled "lid"
              None
              pattern (typing/typemod.ml[404,13892+45]..[404,13892+48])
                Ppat_var "lid" (typing/typemod.ml[404,13892+45]..[404,13892+48])
              expression (typing/typemod.ml[404,13892+49]..[407,14030+78]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[404,13892+49]..[404,13892+54])
                  Ppat_var "paths" (typing/typemod.ml[404,13892+49]..[404,13892+54])
                expression (typing/typemod.ml[404,13892+55]..[407,14030+78]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[404,13892+55]..[404,13892+73])
                    Ppat_var "unpackable_modtype" (typing/typemod.ml[404,13892+55]..[404,13892+73])
                  expression (typing/typemod.ml[404,13892+74]..[407,14030+78]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[404,13892+74]..[404,13892+76])
                      Ppat_var "sg" (typing/typemod.ml[404,13892+74]..[404,13892+76])
                    expression (typing/typemod.ml[405,13971+2]..[407,14030+78])
                      Pexp_match
                      expression (typing/typemod.ml[405,13971+8]..[405,13971+33])
                        Pexp_tuple
                        [
                          expression (typing/typemod.ml[405,13971+8]..[405,13971+13])
                            Pexp_ident "paths" (typing/typemod.ml[405,13971+8]..[405,13971+13])
                          expression (typing/typemod.ml[405,13971+15]..[405,13971+33])
                            Pexp_ident "unpackable_modtype" (typing/typemod.ml[405,13971+15]..[405,13971+33])
                        ]
                      [
                        <case>
                          pattern (typing/typemod.ml[406,14010+4]..[406,14010+13])
                            Ppat_tuple
                            [
                              pattern (typing/typemod.ml[406,14010+4]..[406,14010+7])
                                Ppat_construct "::" (typing/typemod.ml[406,14010+5]..[406,14010+7]) ghost
                                Some
                                  []
                                  pattern (typing/typemod.ml[406,14010+5]..[406,14010+7]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (typing/typemod.ml[406,14010+5]..[406,14010+6])
                                        Ppat_any
                                      pattern (typing/typemod.ml[406,14010+6]..[406,14010+7]) ghost
                                        Ppat_construct "[]" (typing/typemod.ml[406,14010+6]..[406,14010+7]) ghost
                                        None
                                    ]
                              pattern (typing/typemod.ml[406,14010+9]..[406,14010+13])
                                Ppat_construct "None" (typing/typemod.ml[406,14010+9]..[406,14010+13])
                                None
                            ]
                          expression (typing/typemod.ml[406,14010+17]..[406,14010+19])
                            Pexp_construct "()" (typing/typemod.ml[406,14010+17]..[406,14010+19])
                            None
                        <case>
                          pattern (typing/typemod.ml[407,14030+4]..[407,14030+5])
                            Ppat_any
                          expression (typing/typemod.ml[407,14030+9]..[407,14030+78])
                            Pexp_apply
                            expression (typing/typemod.ml[407,14030+9]..[407,14030+36])
                              Pexp_ident "do_check_after_substitution" (typing/typemod.ml[407,14030+9]..[407,14030+36])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[407,14030+37]..[407,14030+40])
                                  Pexp_ident "env" (typing/typemod.ml[407,14030+37]..[407,14030+40])
                              <arg>
                              Labelled "loc"
                                expression (typing/typemod.ml[407,14030+42]..[407,14030+45])
                                  Pexp_ident "loc" (typing/typemod.ml[407,14030+42]..[407,14030+45])
                              <arg>
                              Labelled "lid"
                                expression (typing/typemod.ml[407,14030+47]..[407,14030+50])
                                  Pexp_ident "lid" (typing/typemod.ml[407,14030+47]..[407,14030+50])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[407,14030+51]..[407,14030+56])
                                  Pexp_ident "paths" (typing/typemod.ml[407,14030+51]..[407,14030+56])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[407,14030+57]..[407,14030+75])
                                  Pexp_ident "unpackable_modtype" (typing/typemod.ml[407,14030+57]..[407,14030+75])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[407,14030+76]..[407,14030+78])
                                  Pexp_ident "sg" (typing/typemod.ml[407,14030+76]..[407,14030+78])
                            ]
                      ]
    ]
  structure_item (typing/typemod.ml[411,14228+0]..[415,14411+18])
    Pstr_value Rec
    [
      <def>
        pattern (typing/typemod.ml[411,14228+8]..[411,14228+28])
          Ppat_var "extract_next_modules" (typing/typemod.ml[411,14228+8]..[411,14228+28])
        expression (typing/typemod.ml[411,14228+31]..[415,14411+18])
          Pexp_function
          [
            <case>
              pattern (typing/typemod.ml[412,14268+4]..[412,14268+48])
                Ppat_construct "::" (typing/typemod.ml[412,14268+42]..[412,14268+44])
                Some
                  []
                  pattern (typing/typemod.ml[412,14268+4]..[412,14268+48]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/typemod.ml[412,14268+4]..[412,14268+41])
                        Ppat_construct "Sig_module" (typing/typemod.ml[412,14268+4]..[412,14268+14])
                        Some
                          []
                          pattern (typing/typemod.ml[412,14268+15]..[412,14268+41])
                            Ppat_tuple
                            [
                              pattern (typing/typemod.ml[412,14268+16]..[412,14268+18])
                                Ppat_var "id" (typing/typemod.ml[412,14268+16]..[412,14268+18])
                              pattern (typing/typemod.ml[412,14268+20]..[412,14268+21])
                                Ppat_any
                              pattern (typing/typemod.ml[412,14268+23]..[412,14268+26])
                                Ppat_var "mty" (typing/typemod.ml[412,14268+23]..[412,14268+26])
                              pattern (typing/typemod.ml[412,14268+28]..[412,14268+37])
                                Ppat_construct "Trec_next" (typing/typemod.ml[412,14268+28]..[412,14268+37])
                                None
                              pattern (typing/typemod.ml[412,14268+39]..[412,14268+40])
                                Ppat_any
                            ]
                      pattern (typing/typemod.ml[412,14268+45]..[412,14268+48])
                        Ppat_var "rem" (typing/typemod.ml[412,14268+45]..[412,14268+48])
                    ]
              expression (typing/typemod.ml[413,14320+6]..[414,14376+34])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/typemod.ml[413,14320+10]..[413,14320+25])
                      Ppat_tuple
                      [
                        pattern (typing/typemod.ml[413,14320+11]..[413,14320+19])
                          Ppat_var "id_mty_l" (typing/typemod.ml[413,14320+11]..[413,14320+19])
                        pattern (typing/typemod.ml[413,14320+21]..[413,14320+24])
                          Ppat_var "rem" (typing/typemod.ml[413,14320+21]..[413,14320+24])
                      ]
                    expression (typing/typemod.ml[413,14320+28]..[413,14320+52])
                      Pexp_apply
                      expression (typing/typemod.ml[413,14320+28]..[413,14320+48])
                        Pexp_ident "extract_next_modules" (typing/typemod.ml[413,14320+28]..[413,14320+48])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[413,14320+49]..[413,14320+52])
                            Pexp_ident "rem" (typing/typemod.ml[413,14320+49]..[413,14320+52])
                      ]
                ]
                expression (typing/typemod.ml[414,14376+6]..[414,14376+34])
                  Pexp_tuple
                  [
                    expression (typing/typemod.ml[414,14376+7]..[414,14376+28])
                      Pexp_construct "::" (typing/typemod.ml[414,14376+17]..[414,14376+19])
                      Some
                        expression (typing/typemod.ml[414,14376+7]..[414,14376+28]) ghost
                          Pexp_tuple
                          [
                            expression (typing/typemod.ml[414,14376+7]..[414,14376+16])
                              Pexp_tuple
                              [
                                expression (typing/typemod.ml[414,14376+8]..[414,14376+10])
                                  Pexp_ident "id" (typing/typemod.ml[414,14376+8]..[414,14376+10])
                                expression (typing/typemod.ml[414,14376+12]..[414,14376+15])
                                  Pexp_ident "mty" (typing/typemod.ml[414,14376+12]..[414,14376+15])
                              ]
                            expression (typing/typemod.ml[414,14376+20]..[414,14376+28])
                              Pexp_ident "id_mty_l" (typing/typemod.ml[414,14376+20]..[414,14376+28])
                          ]
                    expression (typing/typemod.ml[414,14376+30]..[414,14376+33])
                      Pexp_ident "rem" (typing/typemod.ml[414,14376+30]..[414,14376+33])
                  ]
            <case>
              pattern (typing/typemod.ml[415,14411+4]..[415,14411+6])
                Ppat_var "sg" (typing/typemod.ml[415,14411+4]..[415,14411+6])
              expression (typing/typemod.ml[415,14411+10]..[415,14411+18])
                Pexp_tuple
                [
                  expression (typing/typemod.ml[415,14411+11]..[415,14411+13])
                    Pexp_construct "[]" (typing/typemod.ml[415,14411+11]..[415,14411+13])
                    None
                  expression (typing/typemod.ml[415,14411+15]..[415,14411+17])
                    Pexp_ident "sg" (typing/typemod.ml[415,14411+15]..[415,14411+17])
                ]
          ]
    ]
  structure_item (typing/typemod.ml[417,14431+0]..[446,15473+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[417,14431+4]..[417,14431+28])
          Ppat_var "check_well_formed_module" (typing/typemod.ml[417,14431+4]..[417,14431+28])
        expression (typing/typemod.ml[417,14431+29]..[446,15473+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[417,14431+29]..[417,14431+32])
            Ppat_var "env" (typing/typemod.ml[417,14431+29]..[417,14431+32])
          expression (typing/typemod.ml[417,14431+33]..[446,15473+38]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[417,14431+33]..[417,14431+36])
              Ppat_var "loc" (typing/typemod.ml[417,14431+33]..[417,14431+36])
            expression (typing/typemod.ml[417,14431+37]..[446,15473+38]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[417,14431+37]..[417,14431+44])
                Ppat_var "context" (typing/typemod.ml[417,14431+37]..[417,14431+44])
              expression (typing/typemod.ml[417,14431+45]..[446,15473+38]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[417,14431+45]..[417,14431+48])
                  Ppat_var "mty" (typing/typemod.ml[417,14431+45]..[417,14431+48])
                expression (typing/typemod.ml[420,14569+2]..[446,15473+38])
                  Pexp_open Fresh
                  module_expr (typing/typemod.ml[420,14569+11]..[420,14569+16])
                    Pmod_ident "Btype" (typing/typemod.ml[420,14569+11]..[420,14569+16])
                  expression (typing/typemod.ml[421,14589+2]..[446,15473+38])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[421,14589+6]..[421,14589+14])
                          Ppat_var "iterator" (typing/typemod.ml[421,14589+6]..[421,14589+14])
                        expression (typing/typemod.ml[422,14606+4]..[444,15462+5])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (typing/typemod.ml[422,14606+12]..[422,14606+27])
                                Ppat_var "check_signature" (typing/typemod.ml[422,14606+12]..[422,14606+27])
                              expression (typing/typemod.ml[422,14606+28]..[434,15102+33]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/typemod.ml[422,14606+28]..[422,14606+31])
                                  Ppat_var "env" (typing/typemod.ml[422,14606+28]..[422,14606+31])
                                expression (typing/typemod.ml[422,14606+34]..[434,15102+33])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/typemod.ml[423,14649+8]..[423,14649+10])
                                        Ppat_construct "[]" (typing/typemod.ml[423,14649+8]..[423,14649+10])
                                        None
                                      expression (typing/typemod.ml[423,14649+14]..[423,14649+16])
                                        Pexp_construct "()" (typing/typemod.ml[423,14649+14]..[423,14649+16])
                                        None
                                    <case>
                                      pattern (typing/typemod.ml[424,14666+8]..[424,14666+53])
                                        Ppat_construct "::" (typing/typemod.ml[424,14666+47]..[424,14666+49])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[424,14666+8]..[424,14666+53]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[424,14666+8]..[424,14666+46])
                                                Ppat_construct "Sig_module" (typing/typemod.ml[424,14666+8]..[424,14666+18])
                                                Some
                                                  []
                                                  pattern (typing/typemod.ml[424,14666+19]..[424,14666+46])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/typemod.ml[424,14666+20]..[424,14666+22])
                                                        Ppat_var "id" (typing/typemod.ml[424,14666+20]..[424,14666+22])
                                                      pattern (typing/typemod.ml[424,14666+24]..[424,14666+25])
                                                        Ppat_any
                                                      pattern (typing/typemod.ml[424,14666+27]..[424,14666+30])
                                                        Ppat_var "mty" (typing/typemod.ml[424,14666+27]..[424,14666+30])
                                                      pattern (typing/typemod.ml[424,14666+32]..[424,14666+42])
                                                        Ppat_construct "Trec_first" (typing/typemod.ml[424,14666+32]..[424,14666+42])
                                                        None
                                                      pattern (typing/typemod.ml[424,14666+44]..[424,14666+45])
                                                        Ppat_any
                                                    ]
                                              pattern (typing/typemod.ml[424,14666+50]..[424,14666+53])
                                                Ppat_var "rem" (typing/typemod.ml[424,14666+50]..[424,14666+53])
                                            ]
                                      expression (typing/typemod.ml[425,14723+10]..[432,15048+33])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[425,14723+14]..[425,14723+29])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[425,14723+15]..[425,14723+23])
                                                  Ppat_var "id_mty_l" (typing/typemod.ml[425,14723+15]..[425,14723+23])
                                                pattern (typing/typemod.ml[425,14723+25]..[425,14723+28])
                                                  Ppat_var "rem" (typing/typemod.ml[425,14723+25]..[425,14723+28])
                                              ]
                                            expression (typing/typemod.ml[425,14723+32]..[425,14723+56])
                                              Pexp_apply
                                              expression (typing/typemod.ml[425,14723+32]..[425,14723+52])
                                                Pexp_ident "extract_next_modules" (typing/typemod.ml[425,14723+32]..[425,14723+52])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[425,14723+53]..[425,14723+56])
                                                    Pexp_ident "rem" (typing/typemod.ml[425,14723+53]..[425,14723+56])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[426,14783+10]..[432,15048+33])
                                          Pexp_sequence
                                          expression (typing/typemod.ml[426,14783+10]..[431,15033+13])
                                            Pexp_try
                                            expression (typing/typemod.ml[427,14803+12]..[427,14803+75])
                                              Pexp_apply
                                              expression (typing/typemod.ml[427,14803+12]..[427,14803+34])
                                                Pexp_ident "check_recmod_typedecls" (typing/typemod.ml[427,14803+12]..[427,14803+34])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[427,14803+35]..[427,14803+51])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[427,14803+36]..[427,14803+46])
                                                      Pexp_ident "Lazy.force" (typing/typemod.ml[427,14803+36]..[427,14803+46])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[427,14803+47]..[427,14803+50])
                                                          Pexp_ident "env" (typing/typemod.ml[427,14803+47]..[427,14803+50])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[427,14803+52]..[427,14803+75])
                                                    Pexp_construct "::" (typing/typemod.ml[427,14803+63]..[427,14803+65])
                                                    Some
                                                      expression (typing/typemod.ml[427,14803+53]..[427,14803+74]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typemod.ml[427,14803+53]..[427,14803+62])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typemod.ml[427,14803+54]..[427,14803+56])
                                                                Pexp_ident "id" (typing/typemod.ml[427,14803+54]..[427,14803+56])
                                                              expression (typing/typemod.ml[427,14803+58]..[427,14803+61])
                                                                Pexp_ident "mty" (typing/typemod.ml[427,14803+58]..[427,14803+61])
                                                            ]
                                                          expression (typing/typemod.ml[427,14803+66]..[427,14803+74])
                                                            Pexp_ident "id_mty_l" (typing/typemod.ml[427,14803+66]..[427,14803+74])
                                                        ]
                                              ]
                                            [
                                              <case>
                                                pattern (typing/typemod.ml[428,14879+15]..[428,14879+38])
                                                  Ppat_construct "Typedecl.Error" (typing/typemod.ml[428,14879+15]..[428,14879+29])
                                                  Some
                                                    []
                                                    pattern (typing/typemod.ml[428,14879+30]..[428,14879+38])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typemod.ml[428,14879+31]..[428,14879+32])
                                                          Ppat_any
                                                        pattern (typing/typemod.ml[428,14879+34]..[428,14879+37])
                                                          Ppat_var "err" (typing/typemod.ml[428,14879+34]..[428,14879+37])
                                                      ]
                                                expression (typing/typemod.ml[429,14921+12]..[430,14968+64])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[429,14921+12]..[429,14921+17])
                                                    Pexp_ident "raise" (typing/typemod.ml[429,14921+12]..[429,14921+17])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[429,14921+18]..[430,14968+64])
                                                        Pexp_construct "Error" (typing/typemod.ml[429,14921+19]..[429,14921+24])
                                                        Some
                                                          expression (typing/typemod.ml[429,14921+25]..[430,14968+63])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typemod.ml[429,14921+26]..[429,14921+29])
                                                                Pexp_ident "loc" (typing/typemod.ml[429,14921+26]..[429,14921+29])
                                                              expression (typing/typemod.ml[429,14921+31]..[429,14921+45])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[429,14921+31]..[429,14921+41])
                                                                  Pexp_ident "Lazy.force" (typing/typemod.ml[429,14921+31]..[429,14921+41])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[429,14921+42]..[429,14921+45])
                                                                      Pexp_ident "env" (typing/typemod.ml[429,14921+42]..[429,14921+45])
                                                                ]
                                                              expression (typing/typemod.ml[430,14968+26]..[430,14968+62])
                                                                Pexp_construct "Badly_formed_signature" (typing/typemod.ml[430,14968+26]..[430,14968+48])
                                                                Some
                                                                  expression (typing/typemod.ml[430,14968+48]..[430,14968+62])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typemod.ml[430,14968+49]..[430,14968+56])
Pexp_ident "context" (typing/typemod.ml[430,14968+49]..[430,14968+56])
                                                                      expression (typing/typemod.ml[430,14968+58]..[430,14968+61])
Pexp_ident "err" (typing/typemod.ml[430,14968+58]..[430,14968+61])
                                                                    ]
                                                            ]
                                                  ]
                                            ]
                                          expression (typing/typemod.ml[432,15048+10]..[432,15048+33])
                                            Pexp_apply
                                            expression (typing/typemod.ml[432,15048+10]..[432,15048+25])
                                              Pexp_ident "check_signature" (typing/typemod.ml[432,15048+10]..[432,15048+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[432,15048+26]..[432,15048+29])
                                                  Pexp_ident "env" (typing/typemod.ml[432,15048+26]..[432,15048+29])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[432,15048+30]..[432,15048+33])
                                                  Pexp_ident "rem" (typing/typemod.ml[432,15048+30]..[432,15048+33])
                                            ]
                                    <case>
                                      pattern (typing/typemod.ml[433,15082+8]..[433,15082+16])
                                        Ppat_construct "::" (typing/typemod.ml[433,15082+10]..[433,15082+12])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[433,15082+8]..[433,15082+16]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[433,15082+8]..[433,15082+9])
                                                Ppat_any
                                              pattern (typing/typemod.ml[433,15082+13]..[433,15082+16])
                                                Ppat_var "rem" (typing/typemod.ml[433,15082+13]..[433,15082+16])
                                            ]
                                      expression (typing/typemod.ml[434,15102+10]..[434,15102+33])
                                        Pexp_apply
                                        expression (typing/typemod.ml[434,15102+10]..[434,15102+25])
                                          Pexp_ident "check_signature" (typing/typemod.ml[434,15102+10]..[434,15102+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[434,15102+26]..[434,15102+29])
                                              Pexp_ident "env" (typing/typemod.ml[434,15102+26]..[434,15102+29])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[434,15102+30]..[434,15102+33])
                                              Pexp_ident "rem" (typing/typemod.ml[434,15102+30]..[434,15102+33])
                                        ]
                                  ]
                          ]
                          expression (typing/typemod.ml[436,15143+4]..[444,15462+5])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[436,15143+8]..[436,15143+18])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[436,15143+8]..[436,15143+11])
                                      Ppat_var "env" (typing/typemod.ml[436,15143+8]..[436,15143+11])
                                    pattern (typing/typemod.ml[436,15143+13]..[436,15143+18])
                                      Ppat_var "super" (typing/typemod.ml[436,15143+13]..[436,15143+18])
                                  ]
                                expression (typing/typemod.ml[436,15143+21]..[436,15143+42])
                                  Pexp_apply
                                  expression (typing/typemod.ml[436,15143+21]..[436,15143+38])
                                    Pexp_ident "iterator_with_env" (typing/typemod.ml[436,15143+21]..[436,15143+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[436,15143+39]..[436,15143+42])
                                        Pexp_ident "env" (typing/typemod.ml[436,15143+39]..[436,15143+42])
                                  ]
                            ]
                            expression (typing/typemod.ml[437,15189+4]..[444,15462+5])
                              Pexp_record
                              [
                                "it_type_expr" (typing/typemod.ml[438,15206+6]..[438,15206+18])
                                  expression (typing/typemod.ml[438,15206+21]..[438,15206+42])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typemod.ml[438,15206+26]..[438,15206+31])
                                      Ppat_var "_self" (typing/typemod.ml[438,15206+26]..[438,15206+31])
                                    expression (typing/typemod.ml[438,15206+32]..[438,15206+41]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/typemod.ml[438,15206+32]..[438,15206+35])
                                        Ppat_var "_ty" (typing/typemod.ml[438,15206+32]..[438,15206+35])
                                      expression (typing/typemod.ml[438,15206+39]..[438,15206+41])
                                        Pexp_construct "()" (typing/typemod.ml[438,15206+39]..[438,15206+41])
                                        None
                                "it_signature" (typing/typemod.ml[439,15250+6]..[439,15250+18])
                                  expression (typing/typemod.ml[439,15250+21]..[443,15425+35])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typemod.ml[439,15250+26]..[439,15250+30])
                                      Ppat_var "self" (typing/typemod.ml[439,15250+26]..[439,15250+30])
                                    expression (typing/typemod.ml[439,15250+31]..[443,15425+34]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/typemod.ml[439,15250+31]..[439,15250+33])
                                        Ppat_var "sg" (typing/typemod.ml[439,15250+31]..[439,15250+33])
                                      expression (typing/typemod.ml[440,15287+8]..[443,15425+34])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[440,15287+12]..[440,15287+22])
                                              Ppat_var "env_before" (typing/typemod.ml[440,15287+12]..[440,15287+22])
                                            expression (typing/typemod.ml[440,15287+25]..[440,15287+29])
                                              Pexp_apply
                                              expression (typing/typemod.ml[440,15287+25]..[440,15287+26])
                                                Pexp_ident "!" (typing/typemod.ml[440,15287+25]..[440,15287+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[440,15287+26]..[440,15287+29])
                                                    Pexp_ident "env" (typing/typemod.ml[440,15287+26]..[440,15287+29])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[441,15320+8]..[443,15425+34])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[441,15320+12]..[441,15320+15])
                                                Ppat_var "env" (typing/typemod.ml[441,15320+12]..[441,15320+15])
                                              expression (typing/typemod.ml[441,15320+18]..[441,15320+69])
                                                Pexp_lazy
                                                expression (typing/typemod.ml[441,15320+23]..[441,15320+69])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[441,15320+24]..[441,15320+41])
                                                    Pexp_ident "Env.add_signature" (typing/typemod.ml[441,15320+24]..[441,15320+41])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[441,15320+42]..[441,15320+44])
                                                        Pexp_ident "sg" (typing/typemod.ml[441,15320+42]..[441,15320+44])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[441,15320+45]..[441,15320+68])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[441,15320+46]..[441,15320+56])
                                                          Pexp_ident "Lazy.force" (typing/typemod.ml[441,15320+46]..[441,15320+56])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[441,15320+57]..[441,15320+67])
                                                              Pexp_ident "env_before" (typing/typemod.ml[441,15320+57]..[441,15320+67])
                                                        ]
                                                  ]
                                          ]
                                          expression (typing/typemod.ml[442,15393+8]..[443,15425+34])
                                            Pexp_sequence
                                            expression (typing/typemod.ml[442,15393+8]..[442,15393+30])
                                              Pexp_apply
                                              expression (typing/typemod.ml[442,15393+8]..[442,15393+23])
                                                Pexp_ident "check_signature" (typing/typemod.ml[442,15393+8]..[442,15393+23])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[442,15393+24]..[442,15393+27])
                                                    Pexp_ident "env" (typing/typemod.ml[442,15393+24]..[442,15393+27])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[442,15393+28]..[442,15393+30])
                                                    Pexp_ident "sg" (typing/typemod.ml[442,15393+28]..[442,15393+30])
                                              ]
                                            expression (typing/typemod.ml[443,15425+8]..[443,15425+34])
                                              Pexp_apply
                                              expression (typing/typemod.ml[443,15425+8]..[443,15425+26])
                                                Pexp_field
                                                expression (typing/typemod.ml[443,15425+8]..[443,15425+13])
                                                  Pexp_ident "super" (typing/typemod.ml[443,15425+8]..[443,15425+13])
                                                "it_signature" (typing/typemod.ml[443,15425+14]..[443,15425+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[443,15425+27]..[443,15425+31])
                                                    Pexp_ident "self" (typing/typemod.ml[443,15425+27]..[443,15425+31])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[443,15425+32]..[443,15425+34])
                                                    Pexp_ident "sg" (typing/typemod.ml[443,15425+32]..[443,15425+34])
                                              ]
                              ]
                              Some
                                expression (typing/typemod.ml[437,15189+6]..[437,15189+11])
                                  Pexp_ident "super" (typing/typemod.ml[437,15189+6]..[437,15189+11])
                    ]
                    expression (typing/typemod.ml[446,15473+2]..[446,15473+38])
                      Pexp_apply
                      expression (typing/typemod.ml[446,15473+2]..[446,15473+25])
                        Pexp_field
                        expression (typing/typemod.ml[446,15473+2]..[446,15473+10])
                          Pexp_ident "iterator" (typing/typemod.ml[446,15473+2]..[446,15473+10])
                        "it_module_type" (typing/typemod.ml[446,15473+11]..[446,15473+25])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[446,15473+26]..[446,15473+34])
                            Pexp_ident "iterator" (typing/typemod.ml[446,15473+26]..[446,15473+34])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[446,15473+35]..[446,15473+38])
                            Pexp_ident "mty" (typing/typemod.ml[446,15473+35]..[446,15473+38])
                      ]
    ]
  structure_item (typing/typemod.ml[448,15513+0]..[448,15513+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[448,15513+4]..[448,15513+6])
          Ppat_construct "()" (typing/typemod.ml[448,15513+4]..[448,15513+6])
          None
        expression (typing/typemod.ml[448,15513+9]..[448,15513+65])
          Pexp_apply
          expression (typing/typemod.ml[448,15513+38]..[448,15513+40])
            Pexp_ident ":=" (typing/typemod.ml[448,15513+38]..[448,15513+40])
          [
            <arg>
            Nolabel
              expression (typing/typemod.ml[448,15513+9]..[448,15513+37])
                Pexp_ident "Env.check_well_formed_module" (typing/typemod.ml[448,15513+9]..[448,15513+37])
            <arg>
            Nolabel
              expression (typing/typemod.ml[448,15513+41]..[448,15513+65])
                Pexp_ident "check_well_formed_module" (typing/typemod.ml[448,15513+41]..[448,15513+65])
          ]
    ]
  structure_item (typing/typemod.ml[450,15580+0]..[466,16131+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[450,15580+4]..[450,15580+22])
          Ppat_var "type_decl_is_alias" (typing/typemod.ml[450,15580+4]..[450,15580+22])
        expression (typing/typemod.ml[450,15580+23]..[466,16131+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[450,15580+23]..[450,15580+28])
            Ppat_var "sdecl" (typing/typemod.ml[450,15580+23]..[450,15580+28])
          expression (typing/typemod.ml[451,15649+2]..[466,16131+13])
            Pexp_match
            expression (typing/typemod.ml[451,15649+8]..[451,15649+28])
              Pexp_field
              expression (typing/typemod.ml[451,15649+8]..[451,15649+13])
                Pexp_ident "sdecl" (typing/typemod.ml[451,15649+8]..[451,15649+13])
              "ptype_manifest" (typing/typemod.ml[451,15649+14]..[451,15649+28])
            [
              <case>
                pattern (typing/typemod.ml[452,15683+4]..[452,15683+45])
                  Ppat_construct "Some" (typing/typemod.ml[452,15683+4]..[452,15683+8])
                  Some
                    []
                    pattern (typing/typemod.ml[452,15683+9]..[452,15683+45])
                      Ppat_record Closed
                      [
                        "ptyp_desc" (typing/typemod.ml[452,15683+10]..[452,15683+19])
                          pattern (typing/typemod.ml[452,15683+22]..[452,15683+44])
                            Ppat_construct "Ptyp_constr" (typing/typemod.ml[452,15683+22]..[452,15683+33])
                            Some
                              []
                              pattern (typing/typemod.ml[452,15683+34]..[452,15683+44])
                                Ppat_tuple
                                [
                                  pattern (typing/typemod.ml[452,15683+35]..[452,15683+38])
                                    Ppat_var "lid" (typing/typemod.ml[452,15683+35]..[452,15683+38])
                                  pattern (typing/typemod.ml[452,15683+40]..[452,15683+43])
                                    Ppat_var "stl" (typing/typemod.ml[452,15683+40]..[452,15683+43])
                                ]
                      ]
                <when>
                  expression (typing/typemod.ml[453,15729+12]..[453,15729+60])
                    Pexp_apply
                    expression (typing/typemod.ml[453,15729+28]..[453,15729+29])
                      Pexp_ident "=" (typing/typemod.ml[453,15729+28]..[453,15729+29])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[453,15729+12]..[453,15729+27])
                          Pexp_apply
                          expression (typing/typemod.ml[453,15729+12]..[453,15729+23])
                            Pexp_ident "List.length" (typing/typemod.ml[453,15729+12]..[453,15729+23])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[453,15729+24]..[453,15729+27])
                                Pexp_ident "stl" (typing/typemod.ml[453,15729+24]..[453,15729+27])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[453,15729+30]..[453,15729+60])
                          Pexp_apply
                          expression (typing/typemod.ml[453,15729+30]..[453,15729+41])
                            Pexp_ident "List.length" (typing/typemod.ml[453,15729+30]..[453,15729+41])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[453,15729+42]..[453,15729+60])
                                Pexp_field
                                expression (typing/typemod.ml[453,15729+42]..[453,15729+47])
                                  Pexp_ident "sdecl" (typing/typemod.ml[453,15729+42]..[453,15729+47])
                                "ptype_params" (typing/typemod.ml[453,15729+48]..[453,15729+60])
                          ]
                    ]
                expression (typing/typemod.ml[454,15793+5]..[465,16122+8])
                  Pexp_match
                  expression (typing/typemod.ml[456,15817+9]..[461,16019+33])
                    Pexp_apply
                    expression (typing/typemod.ml[456,15817+9]..[456,15817+19])
                      Pexp_ident "List.iter2" (typing/typemod.ml[456,15817+9]..[456,15817+19])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[456,15817+20]..[460,15984+34])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[456,15817+25]..[456,15817+26])
                            Ppat_var "x" (typing/typemod.ml[456,15817+25]..[456,15817+26])
                          expression (typing/typemod.ml[456,15817+27]..[460,15984+33]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[456,15817+27]..[456,15817+33])
                              Ppat_tuple
                              [
                                pattern (typing/typemod.ml[456,15817+28]..[456,15817+29])
                                  Ppat_var "y" (typing/typemod.ml[456,15817+28]..[456,15817+29])
                                pattern (typing/typemod.ml[456,15817+31]..[456,15817+32])
                                  Ppat_any
                              ]
                            expression (typing/typemod.ml[457,15854+13]..[460,15984+33])
                              Pexp_match
                              expression (typing/typemod.ml[457,15854+19]..[457,15854+23])
                                Pexp_tuple
                                [
                                  expression (typing/typemod.ml[457,15854+19]..[457,15854+20])
                                    Pexp_ident "x" (typing/typemod.ml[457,15854+19]..[457,15854+20])
                                  expression (typing/typemod.ml[457,15854+22]..[457,15854+23])
                                    Pexp_ident "y" (typing/typemod.ml[457,15854+22]..[457,15854+23])
                                ]
                              [
                                <case>
                                  pattern (typing/typemod.ml[458,15883+15]..[458,15883+63])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typemod.ml[458,15883+15]..[458,15883+38])
                                        Ppat_record Closed
                                        [
                                          "ptyp_desc" (typing/typemod.ml[458,15883+16]..[458,15883+25])
                                            pattern (typing/typemod.ml[458,15883+26]..[458,15883+37])
                                              Ppat_construct "Ptyp_var" (typing/typemod.ml[458,15883+26]..[458,15883+34])
                                              Some
                                                []
                                                pattern (typing/typemod.ml[458,15883+35]..[458,15883+37])
                                                  Ppat_var "sx" (typing/typemod.ml[458,15883+35]..[458,15883+37])
                                        ]
                                      pattern (typing/typemod.ml[458,15883+40]..[458,15883+63])
                                        Ppat_record Closed
                                        [
                                          "ptyp_desc" (typing/typemod.ml[458,15883+41]..[458,15883+50])
                                            pattern (typing/typemod.ml[458,15883+51]..[458,15883+62])
                                              Ppat_construct "Ptyp_var" (typing/typemod.ml[458,15883+51]..[458,15883+59])
                                              Some
                                                []
                                                pattern (typing/typemod.ml[458,15883+60]..[458,15883+62])
                                                  Ppat_var "sy" (typing/typemod.ml[458,15883+60]..[458,15883+62])
                                        ]
                                    ]
                                  <when>
                                    expression (typing/typemod.ml[459,15947+23]..[459,15947+30])
                                      Pexp_apply
                                      expression (typing/typemod.ml[459,15947+26]..[459,15947+27])
                                        Pexp_ident "=" (typing/typemod.ml[459,15947+26]..[459,15947+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[459,15947+23]..[459,15947+25])
                                            Pexp_ident "sx" (typing/typemod.ml[459,15947+23]..[459,15947+25])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[459,15947+28]..[459,15947+30])
                                            Pexp_ident "sy" (typing/typemod.ml[459,15947+28]..[459,15947+30])
                                      ]
                                  expression (typing/typemod.ml[459,15947+34]..[459,15947+36])
                                    Pexp_construct "()" (typing/typemod.ml[459,15947+34]..[459,15947+36])
                                    None
                                <case>
                                  pattern (typing/typemod.ml[460,15984+15]..[460,15984+19])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typemod.ml[460,15984+15]..[460,15984+16])
                                        Ppat_any
                                      pattern (typing/typemod.ml[460,15984+18]..[460,15984+19])
                                        Ppat_any
                                    ]
                                  expression (typing/typemod.ml[460,15984+23]..[460,15984+33])
                                    Pexp_apply
                                    expression (typing/typemod.ml[460,15984+23]..[460,15984+28])
                                      Pexp_ident "raise" (typing/typemod.ml[460,15984+23]..[460,15984+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[460,15984+29]..[460,15984+33])
                                          Pexp_construct "Exit" (typing/typemod.ml[460,15984+29]..[460,15984+33])
                                          None
                                    ]
                              ]
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[461,16019+11]..[461,16019+14])
                          Pexp_ident "stl" (typing/typemod.ml[461,16019+11]..[461,16019+14])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[461,16019+15]..[461,16019+33])
                          Pexp_field
                          expression (typing/typemod.ml[461,16019+15]..[461,16019+20])
                            Pexp_ident "sdecl" (typing/typemod.ml[461,16019+15]..[461,16019+20])
                          "ptype_params" (typing/typemod.ml[461,16019+21]..[461,16019+33])
                    ]
                  [
                    <case>
                      pattern (typing/typemod.ml[463,16066+9]..[463,16066+23])
                        Ppat_exception
                        pattern (typing/typemod.ml[463,16066+19]..[463,16066+23])
                          Ppat_construct "Exit" (typing/typemod.ml[463,16066+19]..[463,16066+23])
                          None
                      expression (typing/typemod.ml[463,16066+27]..[463,16066+31])
                        Pexp_construct "None" (typing/typemod.ml[463,16066+27]..[463,16066+31])
                        None
                    <case>
                      pattern (typing/typemod.ml[464,16098+9]..[464,16098+11])
                        Ppat_construct "()" (typing/typemod.ml[464,16098+9]..[464,16098+11])
                        None
                      expression (typing/typemod.ml[464,16098+15]..[464,16098+23])
                        Pexp_construct "Some" (typing/typemod.ml[464,16098+15]..[464,16098+19])
                        Some
                          expression (typing/typemod.ml[464,16098+20]..[464,16098+23])
                            Pexp_ident "lid" (typing/typemod.ml[464,16098+20]..[464,16098+23])
                  ]
              <case>
                pattern (typing/typemod.ml[466,16131+4]..[466,16131+5])
                  Ppat_any
                expression (typing/typemod.ml[466,16131+9]..[466,16131+13])
                  Pexp_construct "None" (typing/typemod.ml[466,16131+9]..[466,16131+13])
                  None
            ]
    ]
  structure_item (typing/typemod.ml[469,16149+0]..[477,16340+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[469,16149+4]..[469,16149+26])
          Ppat_var "params_are_constrained" (typing/typemod.ml[469,16149+4]..[469,16149+26])
        expression (typing/typemod.ml[470,16178+2]..[477,16340+6])
          Pexp_let Rec
          [
            <def>
              pattern (typing/typemod.ml[470,16178+10]..[470,16178+14])
                Ppat_var "loop" (typing/typemod.ml[470,16178+10]..[470,16178+14])
              expression (typing/typemod.ml[470,16178+17]..[475,16316+18])
                Pexp_function
                [
                  <case>
                    pattern (typing/typemod.ml[471,16204+6]..[471,16204+8])
                      Ppat_construct "[]" (typing/typemod.ml[471,16204+6]..[471,16204+8])
                      None
                    expression (typing/typemod.ml[471,16204+12]..[471,16204+17])
                      Pexp_construct "false" (typing/typemod.ml[471,16204+12]..[471,16204+17])
                      None
                  <case>
                    pattern (typing/typemod.ml[472,16222+6]..[472,16222+14])
                      Ppat_construct "::" (typing/typemod.ml[472,16222+9]..[472,16222+11])
                      Some
                        []
                        pattern (typing/typemod.ml[472,16222+6]..[472,16222+14]) ghost
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[472,16222+6]..[472,16222+8])
                              Ppat_var "hd" (typing/typemod.ml[472,16222+6]..[472,16222+8])
                            pattern (typing/typemod.ml[472,16222+12]..[472,16222+14])
                              Ppat_var "tl" (typing/typemod.ml[472,16222+12]..[472,16222+14])
                          ]
                    expression (typing/typemod.ml[473,16240+7]..[475,16316+18])
                      Pexp_match
                      expression (typing/typemod.ml[473,16240+13]..[473,16240+24])
                        Pexp_apply
                        expression (typing/typemod.ml[473,16240+13]..[473,16240+21])
                          Pexp_ident "get_desc" (typing/typemod.ml[473,16240+13]..[473,16240+21])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[473,16240+22]..[473,16240+24])
                              Pexp_ident "hd" (typing/typemod.ml[473,16240+22]..[473,16240+24])
                        ]
                      [
                        <case>
                          pattern (typing/typemod.ml[474,16270+9]..[474,16270+15])
                            Ppat_construct "Tvar" (typing/typemod.ml[474,16270+9]..[474,16270+13])
                            Some
                              []
                              pattern (typing/typemod.ml[474,16270+14]..[474,16270+15])
                                Ppat_any
                          expression (typing/typemod.ml[474,16270+19]..[474,16270+45])
                            Pexp_apply
                            expression (typing/typemod.ml[474,16270+35]..[474,16270+37])
                              Pexp_ident "||" (typing/typemod.ml[474,16270+35]..[474,16270+37])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[474,16270+19]..[474,16270+34])
                                  Pexp_apply
                                  expression (typing/typemod.ml[474,16270+19]..[474,16270+28])
                                    Pexp_ident "List.memq" (typing/typemod.ml[474,16270+19]..[474,16270+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[474,16270+29]..[474,16270+31])
                                        Pexp_ident "hd" (typing/typemod.ml[474,16270+29]..[474,16270+31])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[474,16270+32]..[474,16270+34])
                                        Pexp_ident "tl" (typing/typemod.ml[474,16270+32]..[474,16270+34])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[474,16270+38]..[474,16270+45])
                                  Pexp_apply
                                  expression (typing/typemod.ml[474,16270+38]..[474,16270+42])
                                    Pexp_ident "loop" (typing/typemod.ml[474,16270+38]..[474,16270+42])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[474,16270+43]..[474,16270+45])
                                        Pexp_ident "tl" (typing/typemod.ml[474,16270+43]..[474,16270+45])
                                  ]
                            ]
                        <case>
                          pattern (typing/typemod.ml[475,16316+9]..[475,16316+10])
                            Ppat_any
                          expression (typing/typemod.ml[475,16316+14]..[475,16316+18])
                            Pexp_construct "true" (typing/typemod.ml[475,16316+14]..[475,16316+18])
                            None
                      ]
                ]
          ]
          expression (typing/typemod.ml[477,16340+2]..[477,16340+6])
            Pexp_ident "loop" (typing/typemod.ml[477,16340+2]..[477,16340+6])
    ]
  structure_item (typing/typemod.ml[480,16351+0]..[491,16720+46])
    Pstr_type Rec
    [
      type_declaration "with_info" (typing/typemod.ml[480,16351+5]..[480,16351+14]) (typing/typemod.ml[480,16351+0]..[491,16720+46])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/typemod.ml[481,16368+2]..[481,16368+43])
                "With_type" (typing/typemod.ml[481,16368+4]..[481,16368+13])
                [
                  core_type (typing/typemod.ml[481,16368+17]..[481,16368+43])
                    Ptyp_constr "Parsetree.type_declaration" (typing/typemod.ml[481,16368+17]..[481,16368+43])
                    []
                ]
                None
              (typing/typemod.ml[482,16412+2]..[482,16412+48])
                "With_typesubst" (typing/typemod.ml[482,16412+4]..[482,16412+18])
                [
                  core_type (typing/typemod.ml[482,16412+22]..[482,16412+48])
                    Ptyp_constr "Parsetree.type_declaration" (typing/typemod.ml[482,16412+22]..[482,16412+48])
                    []
                ]
                None
              (typing/typemod.ml[483,16461+2]..[488,16597+7])
                "With_module" (typing/typemod.ml[483,16461+4]..[483,16461+15])
                [
                  (typing/typemod.ml[484,16482+8]..[484,16482+28])
                    Immutable
                    "lid" (typing/typemod.ml[484,16482+8]..[484,16482+11])                    core_type (typing/typemod.ml[484,16482+12]..[484,16482+27])
                      Ptyp_constr "loc" (typing/typemod.ml[484,16482+24]..[484,16482+27])
                      [
                        core_type (typing/typemod.ml[484,16482+12]..[484,16482+23])
                          Ptyp_constr "Longident.t" (typing/typemod.ml[484,16482+12]..[484,16482+23])
                          []
                      ]
                  (typing/typemod.ml[485,16511+8]..[485,16511+20])
                    Immutable
                    "path" (typing/typemod.ml[485,16511+8]..[485,16511+12])                    core_type (typing/typemod.ml[485,16511+13]..[485,16511+19])
                      Ptyp_constr "Path.t" (typing/typemod.ml[485,16511+13]..[485,16511+19])
                      []
                  (typing/typemod.ml[486,16532+8]..[486,16532+36])
                    Immutable
                    "md" (typing/typemod.ml[486,16532+8]..[486,16532+10])                    core_type (typing/typemod.ml[486,16532+11]..[486,16532+35])
                      Ptyp_constr "Types.module_declaration" (typing/typemod.ml[486,16532+11]..[486,16532+35])
                      []
                  (typing/typemod.ml[487,16569+8]..[487,16569+27])
                    Immutable
                    "remove_aliases" (typing/typemod.ml[487,16569+8]..[487,16569+22])                    core_type (typing/typemod.ml[487,16569+23]..[487,16569+27])
                      Ptyp_constr "bool" (typing/typemod.ml[487,16569+23]..[487,16569+27])
                      []
                ]
                None
              (typing/typemod.ml[489,16605+2]..[489,16605+72])
                "With_modsubst" (typing/typemod.ml[489,16605+4]..[489,16605+17])
                [
                  core_type (typing/typemod.ml[489,16605+21]..[489,16605+36])
                    Ptyp_constr "loc" (typing/typemod.ml[489,16605+33]..[489,16605+36])
                    [
                      core_type (typing/typemod.ml[489,16605+21]..[489,16605+32])
                        Ptyp_constr "Longident.t" (typing/typemod.ml[489,16605+21]..[489,16605+32])
                        []
                    ]
                  core_type (typing/typemod.ml[489,16605+39]..[489,16605+45])
                    Ptyp_constr "Path.t" (typing/typemod.ml[489,16605+39]..[489,16605+45])
                    []
                  core_type (typing/typemod.ml[489,16605+48]..[489,16605+72])
                    Ptyp_constr "Types.module_declaration" (typing/typemod.ml[489,16605+48]..[489,16605+72])
                    []
                ]
                None
              (typing/typemod.ml[490,16678+2]..[490,16678+41])
                "With_modtype" (typing/typemod.ml[490,16678+4]..[490,16678+16])
                [
                  core_type (typing/typemod.ml[490,16678+20]..[490,16678+41])
                    Ptyp_constr "Typedtree.module_type" (typing/typemod.ml[490,16678+20]..[490,16678+41])
                    []
                ]
                None
              (typing/typemod.ml[491,16720+2]..[491,16720+46])
                "With_modtypesubst" (typing/typemod.ml[491,16720+4]..[491,16720+21])
                [
                  core_type (typing/typemod.ml[491,16720+25]..[491,16720+46])
                    Ptyp_constr "Typedtree.module_type" (typing/typemod.ml[491,16720+25]..[491,16720+46])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/typemod.ml[493,16768+0]..[725,26443+71])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[493,16768+4]..[493,16768+20])
          Ppat_var "merge_constraint" (typing/typemod.ml[493,16768+4]..[493,16768+20])
        expression (typing/typemod.ml[493,16768+21]..[725,26443+71]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[493,16768+21]..[493,16768+32])
            Ppat_var "initial_env" (typing/typemod.ml[493,16768+21]..[493,16768+32])
          expression (typing/typemod.ml[493,16768+33]..[725,26443+71]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[493,16768+33]..[493,16768+36])
              Ppat_var "loc" (typing/typemod.ml[493,16768+33]..[493,16768+36])
            expression (typing/typemod.ml[493,16768+37]..[725,26443+71]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[493,16768+37]..[493,16768+39])
                Ppat_var "sg" (typing/typemod.ml[493,16768+37]..[493,16768+39])
              expression (typing/typemod.ml[493,16768+40]..[725,26443+71]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[493,16768+40]..[493,16768+43])
                  Ppat_var "lid" (typing/typemod.ml[493,16768+40]..[493,16768+43])
                expression (typing/typemod.ml[493,16768+44]..[725,26443+71]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[493,16768+44]..[493,16768+50])
                    Ppat_var "constr" (typing/typemod.ml[493,16768+44]..[493,16768+50])
                  expression (typing/typemod.ml[494,16821+2]..[725,26443+71])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[494,16821+6]..[494,16821+30])
                          Ppat_var "destructive_substitution" (typing/typemod.ml[494,16821+6]..[494,16821+30])
                        expression (typing/typemod.ml[495,16854+4]..[497,16936+71])
                          Pexp_match
                          expression (typing/typemod.ml[495,16854+10]..[495,16854+16])
                            Pexp_ident "constr" (typing/typemod.ml[495,16854+10]..[495,16854+16])
                          [
                            <case>
                              pattern (typing/typemod.ml[496,16876+6]..[496,16876+50])
                                Ppat_or
                                pattern (typing/typemod.ml[496,16876+6]..[496,16876+33])
                                  Ppat_or
                                  pattern (typing/typemod.ml[496,16876+6]..[496,16876+17])
                                    Ppat_construct "With_type" (typing/typemod.ml[496,16876+6]..[496,16876+15])
                                    Some
                                      []
                                      pattern (typing/typemod.ml[496,16876+16]..[496,16876+17])
                                        Ppat_any
                                  pattern (typing/typemod.ml[496,16876+20]..[496,16876+33])
                                    Ppat_construct "With_module" (typing/typemod.ml[496,16876+20]..[496,16876+31])
                                    Some
                                      []
                                      pattern (typing/typemod.ml[496,16876+32]..[496,16876+33])
                                        Ppat_any
                                pattern (typing/typemod.ml[496,16876+36]..[496,16876+50])
                                  Ppat_construct "With_modtype" (typing/typemod.ml[496,16876+36]..[496,16876+48])
                                  Some
                                    []
                                    pattern (typing/typemod.ml[496,16876+49]..[496,16876+50])
                                      Ppat_any
                              expression (typing/typemod.ml[496,16876+54]..[496,16876+59])
                                Pexp_construct "false" (typing/typemod.ml[496,16876+54]..[496,16876+59])
                                None
                            <case>
                              pattern (typing/typemod.ml[497,16936+6]..[497,16936+62])
                                Ppat_or
                                pattern (typing/typemod.ml[497,16936+6]..[497,16936+40])
                                  Ppat_or
                                  pattern (typing/typemod.ml[497,16936+6]..[497,16936+22])
                                    Ppat_construct "With_typesubst" (typing/typemod.ml[497,16936+6]..[497,16936+20])
                                    Some
                                      []
                                      pattern (typing/typemod.ml[497,16936+21]..[497,16936+22])
                                        Ppat_any
                                  pattern (typing/typemod.ml[497,16936+25]..[497,16936+40])
                                    Ppat_construct "With_modsubst" (typing/typemod.ml[497,16936+25]..[497,16936+38])
                                    Some
                                      []
                                      pattern (typing/typemod.ml[497,16936+39]..[497,16936+40])
                                        Ppat_any
                                pattern (typing/typemod.ml[497,16936+43]..[497,16936+62])
                                  Ppat_construct "With_modtypesubst" (typing/typemod.ml[497,16936+43]..[497,16936+60])
                                  Some
                                    []
                                    pattern (typing/typemod.ml[497,16936+61]..[497,16936+62])
                                      Ppat_any
                              expression (typing/typemod.ml[497,16936+67]..[497,16936+71])
                                Pexp_construct "true" (typing/typemod.ml[497,16936+67]..[497,16936+71])
                                None
                          ]
                    ]
                    expression (typing/typemod.ml[499,17013+2]..[725,26443+71])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[499,17013+6]..[499,17013+14])
                            Ppat_var "real_ids" (typing/typemod.ml[499,17013+6]..[499,17013+14])
                          expression (typing/typemod.ml[499,17013+17]..[499,17013+23])
                            Pexp_apply
                            expression (typing/typemod.ml[499,17013+17]..[499,17013+20])
                              Pexp_ident "ref" (typing/typemod.ml[499,17013+17]..[499,17013+20])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[499,17013+21]..[499,17013+23])
                                  Pexp_construct "[]" (typing/typemod.ml[499,17013+21]..[499,17013+23])
                                  None
                            ]
                      ]
                      expression (typing/typemod.ml[500,17040+2]..[725,26443+71])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typemod.ml[500,17040+6]..[500,17040+24])
                              Ppat_var "unpackable_modtype" (typing/typemod.ml[500,17040+6]..[500,17040+24])
                            expression (typing/typemod.ml[500,17040+27]..[500,17040+35])
                              Pexp_apply
                              expression (typing/typemod.ml[500,17040+27]..[500,17040+30])
                                Pexp_ident "ref" (typing/typemod.ml[500,17040+27]..[500,17040+30])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[500,17040+31]..[500,17040+35])
                                    Pexp_construct "None" (typing/typemod.ml[500,17040+31]..[500,17040+35])
                                    None
                              ]
                        ]
                        expression (typing/typemod.ml[501,17079+2]..[725,26443+71])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[501,17079+6]..[501,17079+18])
                                Ppat_var "split_row_id" (typing/typemod.ml[501,17079+6]..[501,17079+18])
                              expression (typing/typemod.ml[501,17079+19]..[509,17360+19]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/typemod.ml[501,17079+19]..[501,17079+20])
                                  Ppat_var "s" (typing/typemod.ml[501,17079+19]..[501,17079+20])
                                expression (typing/typemod.ml[501,17079+21]..[509,17360+19]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typemod.ml[501,17079+21]..[501,17079+27])
                                    Ppat_var "ghosts" (typing/typemod.ml[501,17079+21]..[501,17079+27])
                                  expression (typing/typemod.ml[502,17109+4]..[509,17360+19])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typemod.ml[502,17109+8]..[502,17109+12])
                                          Ppat_var "srow" (typing/typemod.ml[502,17109+8]..[502,17109+12])
                                        expression (typing/typemod.ml[502,17109+15]..[502,17109+25])
                                          Pexp_apply
                                          expression (typing/typemod.ml[502,17109+17]..[502,17109+18])
                                            Pexp_ident "^" (typing/typemod.ml[502,17109+17]..[502,17109+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[502,17109+15]..[502,17109+16])
                                                Pexp_ident "s" (typing/typemod.ml[502,17109+15]..[502,17109+16])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[502,17109+19]..[502,17109+25])
                                                Pexp_constant PConst_string("#row",(typing/typemod.ml[502,17109+20]..[502,17109+24]),None)
                                          ]
                                    ]
                                    expression (typing/typemod.ml[503,17138+4]..[509,17360+19])
                                      Pexp_let Rec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[503,17138+12]..[503,17138+17])
                                            Ppat_var "split" (typing/typemod.ml[503,17138+12]..[503,17138+17])
                                          expression (typing/typemod.ml[503,17138+18]..[507,17320+32]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/typemod.ml[503,17138+18]..[503,17138+24])
                                              Ppat_var "before" (typing/typemod.ml[503,17138+18]..[503,17138+24])
                                            expression (typing/typemod.ml[503,17138+27]..[507,17320+32])
                                              Pexp_function
                                              [
                                                <case>
                                                  pattern (typing/typemod.ml[504,17174+10]..[504,17174+36])
                                                    Ppat_construct "::" (typing/typemod.ml[504,17174+29]..[504,17174+31])
                                                    Some
                                                      []
                                                      pattern (typing/typemod.ml[504,17174+10]..[504,17174+36]) ghost
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typemod.ml[504,17174+10]..[504,17174+28])
                                                            Ppat_construct "Sig_type" (typing/typemod.ml[504,17174+10]..[504,17174+18])
                                                            Some
                                                              []
                                                              pattern (typing/typemod.ml[504,17174+18]..[504,17174+28])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/typemod.ml[504,17174+19]..[504,17174+21])
                                                                    Ppat_var "id" (typing/typemod.ml[504,17174+19]..[504,17174+21])
                                                                  pattern (typing/typemod.ml[504,17174+22]..[504,17174+23])
                                                                    Ppat_any
                                                                  pattern (typing/typemod.ml[504,17174+24]..[504,17174+25])
                                                                    Ppat_any
                                                                  pattern (typing/typemod.ml[504,17174+26]..[504,17174+27])
                                                                    Ppat_any
                                                                ]
                                                          pattern (typing/typemod.ml[504,17174+32]..[504,17174+36])
                                                            Ppat_var "rest" (typing/typemod.ml[504,17174+32]..[504,17174+36])
                                                        ]
                                                  <when>
                                                    expression (typing/typemod.ml[504,17174+42]..[504,17174+62])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[504,17174+56]..[504,17174+57])
                                                        Pexp_ident "=" (typing/typemod.ml[504,17174+56]..[504,17174+57])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[504,17174+42]..[504,17174+55])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[504,17174+42]..[504,17174+52])
                                                              Pexp_ident "Ident.name" (typing/typemod.ml[504,17174+42]..[504,17174+52])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[504,17174+53]..[504,17174+55])
                                                                  Pexp_ident "id" (typing/typemod.ml[504,17174+53]..[504,17174+55])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[504,17174+58]..[504,17174+62])
                                                            Pexp_ident "srow" (typing/typemod.ml[504,17174+58]..[504,17174+62])
                                                      ]
                                                  expression (typing/typemod.ml[505,17240+12]..[505,17240+33])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[505,17240+12]..[505,17240+18])
                                                        Pexp_ident "before" (typing/typemod.ml[505,17240+12]..[505,17240+18])
                                                      expression (typing/typemod.ml[505,17240+20]..[505,17240+27])
                                                        Pexp_construct "Some" (typing/typemod.ml[505,17240+20]..[505,17240+24])
                                                        Some
                                                          expression (typing/typemod.ml[505,17240+25]..[505,17240+27])
                                                            Pexp_ident "id" (typing/typemod.ml[505,17240+25]..[505,17240+27])
                                                      expression (typing/typemod.ml[505,17240+29]..[505,17240+33])
                                                        Pexp_ident "rest" (typing/typemod.ml[505,17240+29]..[505,17240+33])
                                                    ]
                                                <case>
                                                  pattern (typing/typemod.ml[506,17274+10]..[506,17274+19])
                                                    Ppat_construct "::" (typing/typemod.ml[506,17274+12]..[506,17274+14])
                                                    Some
                                                      []
                                                      pattern (typing/typemod.ml[506,17274+10]..[506,17274+19]) ghost
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typemod.ml[506,17274+10]..[506,17274+11])
                                                            Ppat_var "a" (typing/typemod.ml[506,17274+10]..[506,17274+11])
                                                          pattern (typing/typemod.ml[506,17274+15]..[506,17274+19])
                                                            Ppat_var "rest" (typing/typemod.ml[506,17274+15]..[506,17274+19])
                                                        ]
                                                  expression (typing/typemod.ml[506,17274+23]..[506,17274+45])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[506,17274+23]..[506,17274+28])
                                                      Pexp_ident "split" (typing/typemod.ml[506,17274+23]..[506,17274+28])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[506,17274+29]..[506,17274+40])
                                                          Pexp_construct "::" (typing/typemod.ml[506,17274+31]..[506,17274+33])
                                                          Some
                                                            expression (typing/typemod.ml[506,17274+30]..[506,17274+39]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (typing/typemod.ml[506,17274+30]..[506,17274+31])
                                                                  Pexp_ident "a" (typing/typemod.ml[506,17274+30]..[506,17274+31])
                                                                expression (typing/typemod.ml[506,17274+33]..[506,17274+39])
                                                                  Pexp_ident "before" (typing/typemod.ml[506,17274+33]..[506,17274+39])
                                                              ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[506,17274+41]..[506,17274+45])
                                                          Pexp_ident "rest" (typing/typemod.ml[506,17274+41]..[506,17274+45])
                                                    ]
                                                <case>
                                                  pattern (typing/typemod.ml[507,17320+10]..[507,17320+12])
                                                    Ppat_construct "[]" (typing/typemod.ml[507,17320+10]..[507,17320+12])
                                                    None
                                                  expression (typing/typemod.ml[507,17320+16]..[507,17320+32])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[507,17320+16]..[507,17320+22])
                                                        Pexp_ident "before" (typing/typemod.ml[507,17320+16]..[507,17320+22])
                                                      expression (typing/typemod.ml[507,17320+24]..[507,17320+28])
                                                        Pexp_construct "None" (typing/typemod.ml[507,17320+24]..[507,17320+28])
                                                        None
                                                      expression (typing/typemod.ml[507,17320+30]..[507,17320+32])
                                                        Pexp_construct "[]" (typing/typemod.ml[507,17320+30]..[507,17320+32])
                                                        None
                                                    ]
                                              ]
                                      ]
                                      expression (typing/typemod.ml[509,17360+4]..[509,17360+19])
                                        Pexp_apply
                                        expression (typing/typemod.ml[509,17360+4]..[509,17360+9])
                                          Pexp_ident "split" (typing/typemod.ml[509,17360+4]..[509,17360+9])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[509,17360+10]..[509,17360+12])
                                              Pexp_construct "[]" (typing/typemod.ml[509,17360+10]..[509,17360+12])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[509,17360+13]..[509,17360+19])
                                              Pexp_ident "ghosts" (typing/typemod.ml[509,17360+13]..[509,17360+19])
                                        ]
                          ]
                          expression (typing/typemod.ml[511,17385+2]..[725,26443+71])
                            Pexp_let Rec
                            [
                              <def>
                                pattern (typing/typemod.ml[511,17385+10]..[511,17385+20])
                                  Ppat_var "patch_item" (typing/typemod.ml[511,17385+10]..[511,17385+20])
                                expression (typing/typemod.ml[511,17385+21]..[657,23712+15]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typemod.ml[511,17385+21]..[511,17385+27])
                                    Ppat_var "constr" (typing/typemod.ml[511,17385+21]..[511,17385+27])
                                  expression (typing/typemod.ml[511,17385+28]..[657,23712+15]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typemod.ml[511,17385+28]..[511,17385+36])
                                      Ppat_var "namelist" (typing/typemod.ml[511,17385+28]..[511,17385+36])
                                    expression (typing/typemod.ml[511,17385+37]..[657,23712+15]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/typemod.ml[511,17385+37]..[511,17385+44])
                                        Ppat_var "sig_env" (typing/typemod.ml[511,17385+37]..[511,17385+44])
                                      expression (typing/typemod.ml[511,17385+45]..[657,23712+15]) ghost
                                        Pexp_fun
                                        Labelled "rec_group"
                                        None
                                        pattern (typing/typemod.ml[511,17385+46]..[511,17385+55])
                                          Ppat_var "rec_group" (typing/typemod.ml[511,17385+46]..[511,17385+55])
                                        expression (typing/typemod.ml[511,17385+56]..[657,23712+15]) ghost
                                          Pexp_fun
                                          Labelled "ghosts"
                                          None
                                          pattern (typing/typemod.ml[511,17385+57]..[511,17385+63])
                                            Ppat_var "ghosts" (typing/typemod.ml[511,17385+57]..[511,17385+63])
                                          expression (typing/typemod.ml[511,17385+64]..[657,23712+15]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/typemod.ml[511,17385+64]..[511,17385+68])
                                              Ppat_var "item" (typing/typemod.ml[511,17385+64]..[511,17385+68])
                                            expression (typing/typemod.ml[512,17456+4]..[657,23712+15])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typemod.ml[512,17456+8]..[512,17456+14])
                                                    Ppat_var "return" (typing/typemod.ml[512,17456+8]..[512,17456+14])
                                                  expression (typing/typemod.ml[512,17456+15]..[513,17507+55]) ghost
                                                    Pexp_fun
                                                    Optional "ghosts"
                                                    Some
                                                      expression (typing/typemod.ml[512,17456+24]..[512,17456+30])
                                                        Pexp_ident "ghosts" (typing/typemod.ml[512,17456+24]..[512,17456+30])
                                                    pattern (typing/typemod.ml[512,17456+17]..[512,17456+23])
                                                      Ppat_var "ghosts" (typing/typemod.ml[512,17456+17]..[512,17456+23])
                                                    expression (typing/typemod.ml[512,17456+32]..[513,17507+55]) ghost
                                                      Pexp_fun
                                                      Labelled "replace_by"
                                                      None
                                                      pattern (typing/typemod.ml[512,17456+33]..[512,17456+43])
                                                        Ppat_var "replace_by" (typing/typemod.ml[512,17456+33]..[512,17456+43])
                                                      expression (typing/typemod.ml[512,17456+44]..[513,17507+55]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (typing/typemod.ml[512,17456+44]..[512,17456+48])
                                                          Ppat_var "info" (typing/typemod.ml[512,17456+44]..[512,17456+48])
                                                        expression (typing/typemod.ml[513,17507+6]..[513,17507+55])
                                                          Pexp_construct "Some" (typing/typemod.ml[513,17507+6]..[513,17507+10])
                                                          Some
                                                            expression (typing/typemod.ml[513,17507+11]..[513,17507+55])
                                                              Pexp_tuple
                                                              [
                                                                expression (typing/typemod.ml[513,17507+12]..[513,17507+16])
                                                                  Pexp_ident "info" (typing/typemod.ml[513,17507+12]..[513,17507+16])
                                                                expression (typing/typemod.ml[513,17507+18]..[513,17507+54])
                                                                  Pexp_record
                                                                  [
                                                                    "Signature_group.ghosts" (typing/typemod.ml[513,17507+19]..[513,17507+41]) ghost
                                                                      expression (typing/typemod.ml[513,17507+19]..[513,17507+41])
Pexp_ident "ghosts" (typing/typemod.ml[513,17507+19]..[513,17507+41])
                                                                    "replace_by" (typing/typemod.ml[513,17507+43]..[513,17507+53]) ghost
                                                                      expression (typing/typemod.ml[513,17507+43]..[513,17507+53])
Pexp_ident "replace_by" (typing/typemod.ml[513,17507+43]..[513,17507+53])
                                                                  ]
                                                                  None
                                                              ]
                                              ]
                                              expression (typing/typemod.ml[515,17570+4]..[657,23712+15])
                                                Pexp_match
                                                expression (typing/typemod.ml[515,17570+10]..[515,17570+32])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typemod.ml[515,17570+10]..[515,17570+14])
                                                      Pexp_ident "item" (typing/typemod.ml[515,17570+10]..[515,17570+14])
                                                    expression (typing/typemod.ml[515,17570+16]..[515,17570+24])
                                                      Pexp_ident "namelist" (typing/typemod.ml[515,17570+16]..[515,17570+24])
                                                    expression (typing/typemod.ml[515,17570+26]..[515,17570+32])
                                                      Pexp_ident "constr" (typing/typemod.ml[515,17570+26]..[515,17570+32])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (typing/typemod.ml[516,17608+6]..[517,17649+57])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typemod.ml[516,17608+6]..[516,17608+34])
                                                          Ppat_construct "Sig_type" (typing/typemod.ml[516,17608+6]..[516,17608+14])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[516,17608+14]..[516,17608+34])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[516,17608+15]..[516,17608+17])
                                                                  Ppat_var "id" (typing/typemod.ml[516,17608+15]..[516,17608+17])
                                                                pattern (typing/typemod.ml[516,17608+19]..[516,17608+23])
                                                                  Ppat_var "decl" (typing/typemod.ml[516,17608+19]..[516,17608+23])
                                                                pattern (typing/typemod.ml[516,17608+25]..[516,17608+27])
                                                                  Ppat_var "rs" (typing/typemod.ml[516,17608+25]..[516,17608+27])
                                                                pattern (typing/typemod.ml[516,17608+29]..[516,17608+33])
                                                                  Ppat_var "priv" (typing/typemod.ml[516,17608+29]..[516,17608+33])
                                                              ]
                                                        pattern (typing/typemod.ml[516,17608+36]..[516,17608+39])
                                                          Ppat_construct "::" (typing/typemod.ml[516,17608+37]..[516,17608+39]) ghost
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[516,17608+37]..[516,17608+39]) ghost
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[516,17608+37]..[516,17608+38])
                                                                  Ppat_var "s" (typing/typemod.ml[516,17608+37]..[516,17608+38])
                                                                pattern (typing/typemod.ml[516,17608+38]..[516,17608+39]) ghost
                                                                  Ppat_construct "[]" (typing/typemod.ml[516,17608+38]..[516,17608+39]) ghost
                                                                  None
                                                              ]
                                                        pattern (typing/typemod.ml[517,17649+7]..[517,17649+57])
                                                          Ppat_construct "With_type" (typing/typemod.ml[517,17649+7]..[517,17649+16])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[517,17649+17]..[517,17649+57])
                                                              Ppat_alias "sdecl" (typing/typemod.ml[517,17649+51]..[517,17649+56])
                                                              pattern (typing/typemod.ml[517,17649+18]..[517,17649+47])
                                                                Ppat_record Closed
                                                                [
                                                                  "ptype_kind" (typing/typemod.ml[517,17649+19]..[517,17649+29])
                                                                    pattern (typing/typemod.ml[517,17649+32]..[517,17649+46])
                                                                      Ppat_construct "Ptype_abstract" (typing/typemod.ml[517,17649+32]..[517,17649+46])
                                                                      None
                                                                ]
                                                      ]
                                                    <when>
                                                      expression (typing/typemod.ml[518,17707+11]..[518,17707+60])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[518,17707+29]..[518,17707+31])
                                                          Pexp_ident "&&" (typing/typemod.ml[518,17707+29]..[518,17707+31])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[518,17707+11]..[518,17707+28])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[518,17707+25]..[518,17707+26])
                                                                Pexp_ident "=" (typing/typemod.ml[518,17707+25]..[518,17707+26])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[518,17707+11]..[518,17707+24])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[518,17707+11]..[518,17707+21])
                                                                      Pexp_ident "Ident.name" (typing/typemod.ml[518,17707+11]..[518,17707+21])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[518,17707+22]..[518,17707+24])
  Pexp_ident "id" (typing/typemod.ml[518,17707+22]..[518,17707+24])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[518,17707+27]..[518,17707+28])
                                                                    Pexp_ident "s" (typing/typemod.ml[518,17707+27]..[518,17707+28])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[518,17707+32]..[518,17707+60])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[518,17707+32]..[518,17707+54])
                                                                Pexp_ident "Typedecl.is_fixed_type" (typing/typemod.ml[518,17707+32]..[518,17707+54])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[518,17707+55]..[518,17707+60])
                                                                    Pexp_ident "sdecl" (typing/typemod.ml[518,17707+55]..[518,17707+60])
                                                              ]
                                                        ]
                                                    expression (typing/typemod.ml[519,17771+8]..[569,19851+44])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typemod.ml[519,17771+12]..[519,17771+20])
                                                            Ppat_var "decl_row" (typing/typemod.ml[519,17771+12]..[519,17771+20])
                                                          expression (typing/typemod.ml[520,17794+10]..[549,18950+11])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (typing/typemod.ml[520,17794+14]..[520,17794+19])
                                                                  Ppat_var "arity" (typing/typemod.ml[520,17794+14]..[520,17794+19])
                                                                expression (typing/typemod.ml[520,17794+22]..[520,17794+52])
                                                                  Pexp_apply
                                                                  expression (typing/typemod.ml[520,17794+22]..[520,17794+33])
                                                                    Pexp_ident "List.length" (typing/typemod.ml[520,17794+22]..[520,17794+33])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[520,17794+34]..[520,17794+52])
Pexp_field
expression (typing/typemod.ml[520,17794+34]..[520,17794+39])
  Pexp_ident "sdecl" (typing/typemod.ml[520,17794+34]..[520,17794+39])
"ptype_params" (typing/typemod.ml[520,17794+40]..[520,17794+52])
                                                                  ]
                                                            ]
                                                            expression (typing/typemod.ml[521,17850+10]..[549,18950+11])
                                                              Pexp_record
                                                              [
                                                                "type_params" (typing/typemod.ml[522,17862+12]..[522,17862+23])
                                                                  expression (typing/typemod.ml[523,17888+14]..[523,17888+70])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[523,17888+14]..[523,17888+22])
                                                                      Pexp_ident "List.map" (typing/typemod.ml[523,17888+14]..[523,17888+22])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[523,17888+23]..[523,17888+51])
  Pexp_fun
  Nolabel
  None
  pattern (typing/typemod.ml[523,17888+28]..[523,17888+29])
    Ppat_any
  expression (typing/typemod.ml[523,17888+33]..[523,17888+50])
    Pexp_apply
    expression (typing/typemod.ml[523,17888+33]..[523,17888+48])
      Pexp_ident "Btype.newgenvar" (typing/typemod.ml[523,17888+33]..[523,17888+48])
    [
      <arg>
      Nolabel
        expression (typing/typemod.ml[523,17888+48]..[523,17888+50])
          Pexp_construct "()" (typing/typemod.ml[523,17888+48]..[523,17888+50])
          None
    ]
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[523,17888+52]..[523,17888+70])
  Pexp_field
  expression (typing/typemod.ml[523,17888+52]..[523,17888+57])
    Pexp_ident "sdecl" (typing/typemod.ml[523,17888+52]..[523,17888+57])
  "ptype_params" (typing/typemod.ml[523,17888+58]..[523,17888+70])
                                                                    ]
                                                                "type_arity" (typing/typemod.ml[524,17960+12]..[524,17960+22])
                                                                  expression (typing/typemod.ml[524,17960+25]..[524,17960+30])
                                                                    Pexp_ident "arity" (typing/typemod.ml[524,17960+25]..[524,17960+30])
                                                                "type_kind" (typing/typemod.ml[525,17992+12]..[525,17992+21])
                                                                  expression (typing/typemod.ml[525,17992+24]..[525,17992+37])
                                                                    Pexp_construct "Type_abstract" (typing/typemod.ml[525,17992+24]..[525,17992+37])
                                                                    None
                                                                "type_private" (typing/typemod.ml[526,18031+12]..[526,18031+24])
                                                                  expression (typing/typemod.ml[526,18031+27]..[526,18031+34])
                                                                    Pexp_construct "Private" (typing/typemod.ml[526,18031+27]..[526,18031+34])
                                                                    None
                                                                "type_manifest" (typing/typemod.ml[527,18067+12]..[527,18067+25])
                                                                  expression (typing/typemod.ml[527,18067+28]..[527,18067+32])
                                                                    Pexp_construct "None" (typing/typemod.ml[527,18067+28]..[527,18067+32])
                                                                    None
                                                                "type_variance" (typing/typemod.ml[528,18101+12]..[528,18101+25])
                                                                  expression (typing/typemod.ml[529,18129+14]..[539,18509+34])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[529,18129+14]..[529,18129+22])
                                                                      Pexp_ident "List.map" (typing/typemod.ml[529,18129+14]..[529,18129+22])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[530,18152+16]..[538,18491+17])
  Pexp_fun
  Nolabel
  None
  pattern (typing/typemod.ml[530,18152+21]..[530,18152+32])
    Ppat_tuple
    [
      pattern (typing/typemod.ml[530,18152+22]..[530,18152+23])
        Ppat_any
      pattern (typing/typemod.ml[530,18152+25]..[530,18152+31])
        Ppat_tuple
        [
          pattern (typing/typemod.ml[530,18152+26]..[530,18152+27])
            Ppat_var "v" (typing/typemod.ml[530,18152+26]..[530,18152+27])
          pattern (typing/typemod.ml[530,18152+29]..[530,18152+30])
            Ppat_var "i" (typing/typemod.ml[530,18152+29]..[530,18152+30])
        ]
    ]
  expression (typing/typemod.ml[531,18188+19]..[537,18426+64])
    Pexp_let Nonrec
    [
      <def>
        pattern (typing/typemod.ml[531,18188+23]..[531,18188+29])
          Ppat_tuple
          [
            pattern (typing/typemod.ml[531,18188+24]..[531,18188+25])
              Ppat_var "c" (typing/typemod.ml[531,18188+24]..[531,18188+25])
            pattern (typing/typemod.ml[531,18188+27]..[531,18188+28])
              Ppat_var "n" (typing/typemod.ml[531,18188+27]..[531,18188+28])
          ]
        expression (typing/typemod.ml[532,18220+21]..[535,18354+49])
          Pexp_match
          expression (typing/typemod.ml[532,18220+27]..[532,18220+28])
            Pexp_ident "v" (typing/typemod.ml[532,18220+27]..[532,18220+28])
          [
            <case>
              pattern (typing/typemod.ml[533,18254+23]..[533,18254+32])
                Ppat_construct "Covariant" (typing/typemod.ml[533,18254+23]..[533,18254+32])
                None
              expression (typing/typemod.ml[533,18254+36]..[533,18254+47])
                Pexp_tuple
                [
                  expression (typing/typemod.ml[533,18254+36]..[533,18254+40])
                    Pexp_construct "true" (typing/typemod.ml[533,18254+36]..[533,18254+40])
                    None
                  expression (typing/typemod.ml[533,18254+42]..[533,18254+47])
                    Pexp_construct "false" (typing/typemod.ml[533,18254+42]..[533,18254+47])
                    None
                ]
            <case>
              pattern (typing/typemod.ml[534,18302+23]..[534,18302+36])
                Ppat_construct "Contravariant" (typing/typemod.ml[534,18302+23]..[534,18302+36])
                None
              expression (typing/typemod.ml[534,18302+40]..[534,18302+51])
                Pexp_tuple
                [
                  expression (typing/typemod.ml[534,18302+40]..[534,18302+45])
                    Pexp_construct "false" (typing/typemod.ml[534,18302+40]..[534,18302+45])
                    None
                  expression (typing/typemod.ml[534,18302+47]..[534,18302+51])
                    Pexp_construct "true" (typing/typemod.ml[534,18302+47]..[534,18302+51])
                    None
                ]
            <case>
              pattern (typing/typemod.ml[535,18354+23]..[535,18354+33])
                Ppat_construct "NoVariance" (typing/typemod.ml[535,18354+23]..[535,18354+33])
                None
              expression (typing/typemod.ml[535,18354+37]..[535,18354+49])
                Pexp_tuple
                [
                  expression (typing/typemod.ml[535,18354+37]..[535,18354+42])
                    Pexp_construct "false" (typing/typemod.ml[535,18354+37]..[535,18354+42])
                    None
                  expression (typing/typemod.ml[535,18354+44]..[535,18354+49])
                    Pexp_construct "false" (typing/typemod.ml[535,18354+44]..[535,18354+49])
                    None
                ]
          ]
    ]
    expression (typing/typemod.ml[537,18426+19]..[537,18426+64])
      Pexp_apply
      expression (typing/typemod.ml[537,18426+19]..[537,18426+32])
        Pexp_ident "make_variance" (typing/typemod.ml[537,18426+19]..[537,18426+32])
      [
        <arg>
        Nolabel
          expression (typing/typemod.ml[537,18426+33]..[537,18426+40])
            Pexp_apply
            expression (typing/typemod.ml[537,18426+34]..[537,18426+37])
              Pexp_ident "not" (typing/typemod.ml[537,18426+34]..[537,18426+37])
            [
              <arg>
              Nolabel
                expression (typing/typemod.ml[537,18426+38]..[537,18426+39])
                  Pexp_ident "n" (typing/typemod.ml[537,18426+38]..[537,18426+39])
            ]
        <arg>
        Nolabel
          expression (typing/typemod.ml[537,18426+41]..[537,18426+48])
            Pexp_apply
            expression (typing/typemod.ml[537,18426+42]..[537,18426+45])
              Pexp_ident "not" (typing/typemod.ml[537,18426+42]..[537,18426+45])
            [
              <arg>
              Nolabel
                expression (typing/typemod.ml[537,18426+46]..[537,18426+47])
                  Pexp_ident "c" (typing/typemod.ml[537,18426+46]..[537,18426+47])
            ]
        <arg>
        Nolabel
          expression (typing/typemod.ml[537,18426+49]..[537,18426+64])
            Pexp_apply
            expression (typing/typemod.ml[537,18426+52]..[537,18426+53])
              Pexp_ident "=" (typing/typemod.ml[537,18426+52]..[537,18426+53])
            [
              <arg>
              Nolabel
                expression (typing/typemod.ml[537,18426+50]..[537,18426+51])
                  Pexp_ident "i" (typing/typemod.ml[537,18426+50]..[537,18426+51])
              <arg>
              Nolabel
                expression (typing/typemod.ml[537,18426+54]..[537,18426+63])
                  Pexp_construct "Injective" (typing/typemod.ml[537,18426+54]..[537,18426+63])
                  None
            ]
      ]
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[539,18509+16]..[539,18509+34])
  Pexp_field
  expression (typing/typemod.ml[539,18509+16]..[539,18509+21])
    Pexp_ident "sdecl" (typing/typemod.ml[539,18509+16]..[539,18509+21])
  "ptype_params" (typing/typemod.ml[539,18509+22]..[539,18509+34])
                                                                    ]
                                                                "type_separability" (typing/typemod.ml[540,18545+12]..[540,18545+29])
                                                                  expression (typing/typemod.ml[541,18577+14]..[541,18577+57])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[541,18577+14]..[541,18577+50])
                                                                      Pexp_ident "Types.Separability.default_signature" (typing/typemod.ml[541,18577+14]..[541,18577+50])
                                                                    [
                                                                      <arg>
                                                                      Labelled "arity"
expression (typing/typemod.ml[541,18577+52]..[541,18577+57])
  Pexp_ident "arity" (typing/typemod.ml[541,18577+52]..[541,18577+57])
                                                                    ]
                                                                "type_loc" (typing/typemod.ml[542,18636+12]..[542,18636+20])
                                                                  expression (typing/typemod.ml[542,18636+23]..[542,18636+38])
                                                                    Pexp_field
                                                                    expression (typing/typemod.ml[542,18636+23]..[542,18636+28])
                                                                      Pexp_ident "sdecl" (typing/typemod.ml[542,18636+23]..[542,18636+28])
                                                                    "ptype_loc" (typing/typemod.ml[542,18636+29]..[542,18636+38])
                                                                "type_is_newtype" (typing/typemod.ml[543,18676+12]..[543,18676+27])
                                                                  expression (typing/typemod.ml[543,18676+30]..[543,18676+35])
                                                                    Pexp_construct "false" (typing/typemod.ml[543,18676+30]..[543,18676+35])
                                                                    None
                                                                "type_expansion_scope" (typing/typemod.ml[544,18713+12]..[544,18713+32])
                                                                  expression (typing/typemod.ml[544,18713+35]..[544,18713+53])
                                                                    Pexp_ident "Btype.lowest_level" (typing/typemod.ml[544,18713+35]..[544,18713+53])
                                                                "type_attributes" (typing/typemod.ml[545,18768+12]..[545,18768+27])
                                                                  expression (typing/typemod.ml[545,18768+30]..[545,18768+32])
                                                                    Pexp_construct "[]" (typing/typemod.ml[545,18768+30]..[545,18768+32])
                                                                    None
                                                                "type_immediate" (typing/typemod.ml[546,18802+12]..[546,18802+26])
                                                                  expression (typing/typemod.ml[546,18802+29]..[546,18802+36])
                                                                    Pexp_construct "Unknown" (typing/typemod.ml[546,18802+29]..[546,18802+36])
                                                                    None
                                                                "type_unboxed_default" (typing/typemod.ml[547,18840+12]..[547,18840+32])
                                                                  expression (typing/typemod.ml[547,18840+35]..[547,18840+40])
                                                                    Pexp_construct "false" (typing/typemod.ml[547,18840+35]..[547,18840+40])
                                                                    None
                                                                "type_uid" (typing/typemod.ml[548,18882+12]..[548,18882+20])
                                                                  expression (typing/typemod.ml[548,18882+23]..[548,18882+66])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[548,18882+23]..[548,18882+29])
                                                                      Pexp_ident "Uid.mk" (typing/typemod.ml[548,18882+23]..[548,18882+29])
                                                                    [
                                                                      <arg>
                                                                      Labelled "current_unit"
expression (typing/typemod.ml[548,18882+44]..[548,18882+66])
  Pexp_apply
  expression (typing/typemod.ml[548,18882+45]..[548,18882+62])
    Pexp_ident "Env.get_unit_name" (typing/typemod.ml[548,18882+45]..[548,18882+62])
  [
    <arg>
    Nolabel
      expression (typing/typemod.ml[548,18882+63]..[548,18882+65])
        Pexp_construct "()" (typing/typemod.ml[548,18882+63]..[548,18882+65])
        None
  ]
                                                                    ]
                                                              ]
                                                              None
                                                        <def>
                                                          pattern (typing/typemod.ml[550,18962+12]..[550,18962+18])
                                                            Ppat_var "id_row" (typing/typemod.ml[550,18962+12]..[550,18962+18])
                                                          expression (typing/typemod.ml[550,18962+21]..[550,18962+50])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[550,18962+21]..[550,18962+39])
                                                              Pexp_ident "Ident.create_local" (typing/typemod.ml[550,18962+21]..[550,18962+39])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[550,18962+40]..[550,18962+50])
                                                                  Pexp_apply
                                                                  expression (typing/typemod.ml[550,18962+42]..[550,18962+43])
                                                                    Pexp_ident "^" (typing/typemod.ml[550,18962+42]..[550,18962+43])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[550,18962+41]..[550,18962+42])
Pexp_ident "s" (typing/typemod.ml[550,18962+41]..[550,18962+42])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[550,18962+43]..[550,18962+49])
Pexp_constant PConst_string("#row",(typing/typemod.ml[550,18962+44]..[550,18962+48]),None)
                                                                  ]
                                                            ]
                                                      ]
                                                      expression (typing/typemod.ml[551,19016+8]..[569,19851+44])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (typing/typemod.ml[551,19016+12]..[551,19016+23])
                                                              Ppat_var "initial_env" (typing/typemod.ml[551,19016+12]..[551,19016+23])
                                                            expression (typing/typemod.ml[552,19042+10]..[552,19042+63])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[552,19042+10]..[552,19042+22])
                                                                Pexp_ident "Env.add_type" (typing/typemod.ml[552,19042+10]..[552,19042+22])
                                                              [
                                                                <arg>
                                                                Labelled "check"
                                                                  expression (typing/typemod.ml[552,19042+30]..[552,19042+35])
                                                                    Pexp_construct "false" (typing/typemod.ml[552,19042+30]..[552,19042+35])
                                                                    None
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[552,19042+36]..[552,19042+42])
                                                                    Pexp_ident "id_row" (typing/typemod.ml[552,19042+36]..[552,19042+42])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[552,19042+43]..[552,19042+51])
                                                                    Pexp_ident "decl_row" (typing/typemod.ml[552,19042+43]..[552,19042+51])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[552,19042+52]..[552,19042+63])
                                                                    Pexp_ident "initial_env" (typing/typemod.ml[552,19042+52]..[552,19042+63])
                                                              ]
                                                        ]
                                                        expression (typing/typemod.ml[554,19117+8]..[569,19851+44])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (typing/typemod.ml[554,19117+12]..[554,19117+17])
                                                                Ppat_var "tdecl" (typing/typemod.ml[554,19117+12]..[554,19117+17])
                                                              expression (typing/typemod.ml[555,19137+10]..[556,19214+64])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[555,19137+10]..[555,19137+41])
                                                                  Pexp_ident "Typedecl.transl_with_constraint" (typing/typemod.ml[555,19137+10]..[555,19137+41])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[555,19137+42]..[555,19137+44])
                                                                      Pexp_ident "id" (typing/typemod.ml[555,19137+42]..[555,19137+44])
                                                                  <arg>
                                                                  Labelled "fixed_row_path"
                                                                    expression (typing/typemod.ml[555,19137+61]..[555,19137+76])
                                                                      Pexp_construct "Pident" (typing/typemod.ml[555,19137+62]..[555,19137+68])
                                                                      Some
expression (typing/typemod.ml[555,19137+69]..[555,19137+75])
  Pexp_ident "id_row" (typing/typemod.ml[555,19137+69]..[555,19137+75])
                                                                  <arg>
                                                                  Labelled "sig_env"
                                                                    expression (typing/typemod.ml[556,19214+13]..[556,19214+20])
                                                                      Pexp_ident "sig_env" (typing/typemod.ml[556,19214+13]..[556,19214+20])
                                                                  <arg>
                                                                  Labelled "sig_decl"
                                                                    expression (typing/typemod.ml[556,19214+31]..[556,19214+35])
                                                                      Pexp_ident "decl" (typing/typemod.ml[556,19214+31]..[556,19214+35])
                                                                  <arg>
                                                                  Labelled "outer_env"
                                                                    expression (typing/typemod.ml[556,19214+47]..[556,19214+58])
                                                                      Pexp_ident "initial_env" (typing/typemod.ml[556,19214+47]..[556,19214+58])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[556,19214+59]..[556,19214+64])
                                                                      Pexp_ident "sdecl" (typing/typemod.ml[556,19214+59]..[556,19214+64])
                                                                ]
                                                          ]
                                                          expression (typing/typemod.ml[557,19282+8]..[569,19851+44])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (typing/typemod.ml[557,19282+12]..[557,19282+19])
                                                                  Ppat_var "newdecl" (typing/typemod.ml[557,19282+12]..[557,19282+19])
                                                                expression (typing/typemod.ml[557,19282+22]..[557,19282+36])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[557,19282+22]..[557,19282+27])
                                                                    Pexp_ident "tdecl" (typing/typemod.ml[557,19282+22]..[557,19282+27])
                                                                  "typ_type" (typing/typemod.ml[557,19282+28]..[557,19282+36])
                                                            ]
                                                            expression (typing/typemod.ml[558,19322+8]..[569,19851+44])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (typing/typemod.ml[558,19322+12]..[558,19322+47])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (typing/typemod.ml[558,19322+12]..[558,19322+25])
Ppat_var "before_ghosts" (typing/typemod.ml[558,19322+12]..[558,19322+25])
                                                                      pattern (typing/typemod.ml[558,19322+27]..[558,19322+33])
Ppat_var "row_id" (typing/typemod.ml[558,19322+27]..[558,19322+33])
                                                                      pattern (typing/typemod.ml[558,19322+35]..[558,19322+47])
Ppat_var "after_ghosts" (typing/typemod.ml[558,19322+35]..[558,19322+47])
                                                                    ]
                                                                  expression (typing/typemod.ml[558,19322+50]..[558,19322+71])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[558,19322+50]..[558,19322+62])
                                                                      Pexp_ident "split_row_id" (typing/typemod.ml[558,19322+50]..[558,19322+62])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[558,19322+63]..[558,19322+64])
  Pexp_ident "s" (typing/typemod.ml[558,19322+63]..[558,19322+64])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[558,19322+65]..[558,19322+71])
  Pexp_ident "ghosts" (typing/typemod.ml[558,19322+65]..[558,19322+71])
                                                                    ]
                                                              ]
                                                              expression (typing/typemod.ml[559,19397+8]..[569,19851+44])
                                                                Pexp_sequence
                                                                expression (typing/typemod.ml[559,19397+8]..[560,19468+19])
                                                                  Pexp_apply
                                                                  expression (typing/typemod.ml[559,19397+8]..[559,19397+23])
                                                                    Pexp_ident "check_type_decl" (typing/typemod.ml[559,19397+8]..[559,19397+23])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[559,19397+24]..[559,19397+31])
Pexp_ident "sig_env" (typing/typemod.ml[559,19397+24]..[559,19397+31])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[559,19397+32]..[559,19397+47])
Pexp_field
expression (typing/typemod.ml[559,19397+32]..[559,19397+37])
  Pexp_ident "sdecl" (typing/typemod.ml[559,19397+32]..[559,19397+37])
"ptype_loc" (typing/typemod.ml[559,19397+38]..[559,19397+47])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[559,19397+48]..[559,19397+50])
Pexp_ident "id" (typing/typemod.ml[559,19397+48]..[559,19397+50])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[559,19397+51]..[559,19397+57])
Pexp_ident "row_id" (typing/typemod.ml[559,19397+51]..[559,19397+57])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[559,19397+58]..[559,19397+65])
Pexp_ident "newdecl" (typing/typemod.ml[559,19397+58]..[559,19397+65])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[559,19397+66]..[559,19397+70])
Pexp_ident "decl" (typing/typemod.ml[559,19397+66]..[559,19397+70])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[560,19468+10]..[560,19468+19])
Pexp_ident "rec_group" (typing/typemod.ml[560,19468+10]..[560,19468+19])
                                                                  ]
                                                                expression (typing/typemod.ml[561,19489+8]..[569,19851+44])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (typing/typemod.ml[561,19489+12]..[561,19489+20])
Ppat_var "decl_row" (typing/typemod.ml[561,19489+12]..[561,19489+20])
                                                                      expression (typing/typemod.ml[561,19489+23]..[561,19489+72])
Pexp_record
[
  "type_params" (typing/typemod.ml[561,19489+38]..[561,19489+49])
    expression (typing/typemod.ml[561,19489+52]..[561,19489+71])
      Pexp_field
      expression (typing/typemod.ml[561,19489+52]..[561,19489+59])
        Pexp_ident "newdecl" (typing/typemod.ml[561,19489+52]..[561,19489+59])
      "type_params" (typing/typemod.ml[561,19489+60]..[561,19489+71])
]
Some
  expression (typing/typemod.ml[561,19489+24]..[561,19489+32])
    Pexp_ident "decl_row" (typing/typemod.ml[561,19489+24]..[561,19489+32])
                                                                  ]
                                                                  expression (typing/typemod.ml[562,19565+8]..[569,19851+44])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (typing/typemod.ml[562,19565+12]..[562,19565+15])
  Ppat_var "rs'" (typing/typemod.ml[562,19565+12]..[562,19565+15])
expression (typing/typemod.ml[562,19565+18]..[562,19565+58])
  Pexp_ifthenelse
  expression (typing/typemod.ml[562,19565+21]..[562,19565+36])
    Pexp_apply
    expression (typing/typemod.ml[562,19565+24]..[562,19565+25])
      Pexp_ident "=" (typing/typemod.ml[562,19565+24]..[562,19565+25])
    [
      <arg>
      Nolabel
        expression (typing/typemod.ml[562,19565+21]..[562,19565+23])
          Pexp_ident "rs" (typing/typemod.ml[562,19565+21]..[562,19565+23])
      <arg>
      Nolabel
        expression (typing/typemod.ml[562,19565+26]..[562,19565+36])
          Pexp_construct "Trec_first" (typing/typemod.ml[562,19565+26]..[562,19565+36])
          None
    ]
  expression (typing/typemod.ml[562,19565+42]..[562,19565+50])
    Pexp_construct "Trec_not" (typing/typemod.ml[562,19565+42]..[562,19565+50])
    None
  Some
    expression (typing/typemod.ml[562,19565+56]..[562,19565+58])
      Pexp_ident "rs" (typing/typemod.ml[562,19565+56]..[562,19565+58])
                                                                    ]
                                                                    expression (typing/typemod.ml[563,19627+8]..[569,19851+44])
                                                                      Pexp_let Nonrec
                                                                      [
<def>
  pattern (typing/typemod.ml[563,19627+12]..[563,19627+18])
    Ppat_var "ghosts" (typing/typemod.ml[563,19627+12]..[563,19627+18])
  expression (typing/typemod.ml[564,19648+10]..[565,19688+65])
    Pexp_apply
    expression (typing/typemod.ml[564,19648+10]..[564,19648+25])
      Pexp_ident "List.rev_append" (typing/typemod.ml[564,19648+10]..[564,19648+25])
    [
      <arg>
      Nolabel
        expression (typing/typemod.ml[564,19648+26]..[564,19648+39])
          Pexp_ident "before_ghosts" (typing/typemod.ml[564,19648+26]..[564,19648+39])
      <arg>
      Nolabel
        expression (typing/typemod.ml[565,19688+12]..[565,19688+65])
          Pexp_construct "::" (typing/typemod.ml[565,19688+50]..[565,19688+52])
          Some
            expression (typing/typemod.ml[565,19688+13]..[565,19688+64]) ghost
              Pexp_tuple
              [
                expression (typing/typemod.ml[565,19688+13]..[565,19688+50])
                  Pexp_construct "Sig_type" (typing/typemod.ml[565,19688+13]..[565,19688+21])
                  Some
                    expression (typing/typemod.ml[565,19688+21]..[565,19688+50])
                      Pexp_tuple
                      [
                        expression (typing/typemod.ml[565,19688+22]..[565,19688+28])
                          Pexp_ident "id_row" (typing/typemod.ml[565,19688+22]..[565,19688+28])
                        expression (typing/typemod.ml[565,19688+30]..[565,19688+38])
                          Pexp_ident "decl_row" (typing/typemod.ml[565,19688+30]..[565,19688+38])
                        expression (typing/typemod.ml[565,19688+40]..[565,19688+43])
                          Pexp_ident "rs'" (typing/typemod.ml[565,19688+40]..[565,19688+43])
                        expression (typing/typemod.ml[565,19688+45]..[565,19688+49])
                          Pexp_ident "priv" (typing/typemod.ml[565,19688+45]..[565,19688+49])
                      ]
                expression (typing/typemod.ml[565,19688+52]..[565,19688+64])
                  Pexp_ident "after_ghosts" (typing/typemod.ml[565,19688+52]..[565,19688+64])
              ]
    ]
                                                                      ]
                                                                      expression (typing/typemod.ml[567,19765+8]..[569,19851+44])
Pexp_apply
expression (typing/typemod.ml[567,19765+8]..[567,19765+14])
  Pexp_ident "return" (typing/typemod.ml[567,19765+8]..[567,19765+14])
[
  <arg>
  Labelled "ghosts"
    expression (typing/typemod.ml[567,19765+16]..[567,19765+22])
      Pexp_ident "ghosts" (typing/typemod.ml[567,19765+16]..[567,19765+22])
  <arg>
  Labelled "replace_by"
    expression (typing/typemod.ml[568,19788+22]..[568,19788+62])
      Pexp_construct "Some" (typing/typemod.ml[568,19788+23]..[568,19788+27])
      Some
        expression (typing/typemod.ml[568,19788+28]..[568,19788+61])
          Pexp_construct "Sig_type" (typing/typemod.ml[568,19788+29]..[568,19788+37])
          Some
            expression (typing/typemod.ml[568,19788+37]..[568,19788+60])
              Pexp_tuple
              [
                expression (typing/typemod.ml[568,19788+38]..[568,19788+40])
                  Pexp_ident "id" (typing/typemod.ml[568,19788+38]..[568,19788+40])
                expression (typing/typemod.ml[568,19788+42]..[568,19788+49])
                  Pexp_ident "newdecl" (typing/typemod.ml[568,19788+42]..[568,19788+49])
                expression (typing/typemod.ml[568,19788+51]..[568,19788+53])
                  Pexp_ident "rs" (typing/typemod.ml[568,19788+51]..[568,19788+53])
                expression (typing/typemod.ml[568,19788+55]..[568,19788+59])
                  Pexp_ident "priv" (typing/typemod.ml[568,19788+55]..[568,19788+59])
              ]
  <arg>
  Nolabel
    expression (typing/typemod.ml[569,19851+10]..[569,19851+44])
      Pexp_tuple
      [
        expression (typing/typemod.ml[569,19851+11]..[569,19851+20])
          Pexp_construct "Pident" (typing/typemod.ml[569,19851+11]..[569,19851+17])
          Some
            expression (typing/typemod.ml[569,19851+18]..[569,19851+20])
              Pexp_ident "id" (typing/typemod.ml[569,19851+18]..[569,19851+20])
        expression (typing/typemod.ml[569,19851+22]..[569,19851+25])
          Pexp_ident "lid" (typing/typemod.ml[569,19851+22]..[569,19851+25])
        expression (typing/typemod.ml[569,19851+27]..[569,19851+43])
          Pexp_construct "Twith_type" (typing/typemod.ml[569,19851+27]..[569,19851+37])
          Some
            expression (typing/typemod.ml[569,19851+38]..[569,19851+43])
              Pexp_ident "tdecl" (typing/typemod.ml[569,19851+38]..[569,19851+43])
      ]
]
                                                  <case>
                                                    pattern (typing/typemod.ml[570,19896+6]..[571,19942+57])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typemod.ml[570,19896+6]..[570,19896+38])
                                                          Ppat_construct "Sig_type" (typing/typemod.ml[570,19896+6]..[570,19896+14])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[570,19896+14]..[570,19896+38])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[570,19896+15]..[570,19896+17])
                                                                  Ppat_var "id" (typing/typemod.ml[570,19896+15]..[570,19896+17])
                                                                pattern (typing/typemod.ml[570,19896+19]..[570,19896+27])
                                                                  Ppat_var "sig_decl" (typing/typemod.ml[570,19896+19]..[570,19896+27])
                                                                pattern (typing/typemod.ml[570,19896+29]..[570,19896+31])
                                                                  Ppat_var "rs" (typing/typemod.ml[570,19896+29]..[570,19896+31])
                                                                pattern (typing/typemod.ml[570,19896+33]..[570,19896+37])
                                                                  Ppat_var "priv" (typing/typemod.ml[570,19896+33]..[570,19896+37])
                                                              ]
                                                        pattern (typing/typemod.ml[570,19896+41]..[570,19896+44])
                                                          Ppat_construct "::" (typing/typemod.ml[570,19896+42]..[570,19896+44]) ghost
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[570,19896+42]..[570,19896+44]) ghost
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[570,19896+42]..[570,19896+43])
                                                                  Ppat_var "s" (typing/typemod.ml[570,19896+42]..[570,19896+43])
                                                                pattern (typing/typemod.ml[570,19896+43]..[570,19896+44]) ghost
                                                                  Ppat_construct "[]" (typing/typemod.ml[570,19896+43]..[570,19896+44]) ghost
                                                                  None
                                                              ]
                                                        pattern (typing/typemod.ml[571,19942+7]..[571,19942+57])
                                                          Ppat_alias "constr" (typing/typemod.ml[571,19942+50]..[571,19942+56])
                                                          pattern (typing/typemod.ml[571,19942+8]..[571,19942+46])
                                                            Ppat_or
                                                            pattern (typing/typemod.ml[571,19942+8]..[571,19942+23])
                                                              Ppat_construct "With_type" (typing/typemod.ml[571,19942+8]..[571,19942+17])
                                                              Some
                                                                []
                                                                pattern (typing/typemod.ml[571,19942+18]..[571,19942+23])
                                                                  Ppat_var "sdecl" (typing/typemod.ml[571,19942+18]..[571,19942+23])
                                                            pattern (typing/typemod.ml[571,19942+26]..[571,19942+46])
                                                              Ppat_construct "With_typesubst" (typing/typemod.ml[571,19942+26]..[571,19942+40])
                                                              Some
                                                                []
                                                                pattern (typing/typemod.ml[571,19942+41]..[571,19942+46])
                                                                  Ppat_var "sdecl" (typing/typemod.ml[571,19942+41]..[571,19942+46])
                                                      ]
                                                    <when>
                                                      expression (typing/typemod.ml[572,20000+11]..[572,20000+28])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[572,20000+25]..[572,20000+26])
                                                          Pexp_ident "=" (typing/typemod.ml[572,20000+25]..[572,20000+26])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[572,20000+11]..[572,20000+24])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[572,20000+11]..[572,20000+21])
                                                                Pexp_ident "Ident.name" (typing/typemod.ml[572,20000+11]..[572,20000+21])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[572,20000+22]..[572,20000+24])
                                                                    Pexp_ident "id" (typing/typemod.ml[572,20000+22]..[572,20000+24])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[572,20000+27]..[572,20000+28])
                                                              Pexp_ident "s" (typing/typemod.ml[572,20000+27]..[572,20000+28])
                                                        ]
                                                    expression (typing/typemod.ml[573,20032+8]..[589,20812+11])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typemod.ml[573,20032+12]..[573,20032+17])
                                                            Ppat_var "tdecl" (typing/typemod.ml[573,20032+12]..[573,20032+17])
                                                          expression (typing/typemod.ml[574,20052+10]..[575,20097+59])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[574,20052+10]..[574,20052+41])
                                                              Pexp_ident "Typedecl.transl_with_constraint" (typing/typemod.ml[574,20052+10]..[574,20052+41])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[574,20052+42]..[574,20052+44])
                                                                  Pexp_ident "id" (typing/typemod.ml[574,20052+42]..[574,20052+44])
                                                              <arg>
                                                              Labelled "sig_env"
                                                                expression (typing/typemod.ml[575,20097+13]..[575,20097+20])
                                                                  Pexp_ident "sig_env" (typing/typemod.ml[575,20097+13]..[575,20097+20])
                                                              <arg>
                                                              Labelled "sig_decl"
                                                                expression (typing/typemod.ml[575,20097+22]..[575,20097+30])
                                                                  Pexp_ident "sig_decl" (typing/typemod.ml[575,20097+22]..[575,20097+30])
                                                              <arg>
                                                              Labelled "outer_env"
                                                                expression (typing/typemod.ml[575,20097+42]..[575,20097+53])
                                                                  Pexp_ident "initial_env" (typing/typemod.ml[575,20097+42]..[575,20097+53])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[575,20097+54]..[575,20097+59])
                                                                  Pexp_ident "sdecl" (typing/typemod.ml[575,20097+54]..[575,20097+59])
                                                            ]
                                                      ]
                                                      expression (typing/typemod.ml[576,20160+8]..[589,20812+11])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (typing/typemod.ml[576,20160+12]..[576,20160+19])
                                                              Ppat_var "newdecl" (typing/typemod.ml[576,20160+12]..[576,20160+19])
                                                            expression (typing/typemod.ml[576,20160+22]..[576,20160+36])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[576,20160+22]..[576,20160+27])
                                                                Pexp_ident "tdecl" (typing/typemod.ml[576,20160+22]..[576,20160+27])
                                                              "typ_type" (typing/typemod.ml[576,20160+28]..[576,20160+36])
                                                          <def>
                                                            pattern (typing/typemod.ml[576,20160+41]..[576,20160+44])
                                                              Ppat_var "loc" (typing/typemod.ml[576,20160+41]..[576,20160+44])
                                                            expression (typing/typemod.ml[576,20160+47]..[576,20160+62])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[576,20160+47]..[576,20160+52])
                                                                Pexp_ident "sdecl" (typing/typemod.ml[576,20160+47]..[576,20160+52])
                                                              "ptype_loc" (typing/typemod.ml[576,20160+53]..[576,20160+62])
                                                        ]
                                                        expression (typing/typemod.ml[577,20226+8]..[589,20812+11])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (typing/typemod.ml[577,20226+12]..[577,20226+47])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/typemod.ml[577,20226+12]..[577,20226+25])
                                                                    Ppat_var "before_ghosts" (typing/typemod.ml[577,20226+12]..[577,20226+25])
                                                                  pattern (typing/typemod.ml[577,20226+27]..[577,20226+33])
                                                                    Ppat_var "row_id" (typing/typemod.ml[577,20226+27]..[577,20226+33])
                                                                  pattern (typing/typemod.ml[577,20226+35]..[577,20226+47])
                                                                    Ppat_var "after_ghosts" (typing/typemod.ml[577,20226+35]..[577,20226+47])
                                                                ]
                                                              expression (typing/typemod.ml[577,20226+50]..[577,20226+71])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[577,20226+50]..[577,20226+62])
                                                                  Pexp_ident "split_row_id" (typing/typemod.ml[577,20226+50]..[577,20226+62])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[577,20226+63]..[577,20226+64])
                                                                      Pexp_ident "s" (typing/typemod.ml[577,20226+63]..[577,20226+64])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[577,20226+65]..[577,20226+71])
                                                                      Pexp_ident "ghosts" (typing/typemod.ml[577,20226+65]..[577,20226+71])
                                                                ]
                                                          ]
                                                          expression (typing/typemod.ml[578,20301+8]..[589,20812+11])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (typing/typemod.ml[578,20301+12]..[578,20301+18])
                                                                  Ppat_var "ghosts" (typing/typemod.ml[578,20301+12]..[578,20301+18])
                                                                expression (typing/typemod.ml[578,20301+21]..[578,20301+63])
                                                                  Pexp_apply
                                                                  expression (typing/typemod.ml[578,20301+21]..[578,20301+36])
                                                                    Pexp_ident "List.rev_append" (typing/typemod.ml[578,20301+21]..[578,20301+36])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[578,20301+37]..[578,20301+50])
Pexp_ident "before_ghosts" (typing/typemod.ml[578,20301+37]..[578,20301+50])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[578,20301+51]..[578,20301+63])
Pexp_ident "after_ghosts" (typing/typemod.ml[578,20301+51]..[578,20301+63])
                                                                  ]
                                                            ]
                                                            expression (typing/typemod.ml[579,20368+8]..[589,20812+11])
                                                              Pexp_sequence
                                                              expression (typing/typemod.ml[579,20368+8]..[579,20368+72])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[579,20368+8]..[579,20368+23])
                                                                  Pexp_ident "check_type_decl" (typing/typemod.ml[579,20368+8]..[579,20368+23])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[579,20368+24]..[579,20368+31])
                                                                      Pexp_ident "sig_env" (typing/typemod.ml[579,20368+24]..[579,20368+31])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[579,20368+32]..[579,20368+35])
                                                                      Pexp_ident "loc" (typing/typemod.ml[579,20368+32]..[579,20368+35])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[579,20368+36]..[579,20368+38])
                                                                      Pexp_ident "id" (typing/typemod.ml[579,20368+36]..[579,20368+38])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[579,20368+39]..[579,20368+45])
                                                                      Pexp_ident "row_id" (typing/typemod.ml[579,20368+39]..[579,20368+45])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[579,20368+46]..[579,20368+53])
                                                                      Pexp_ident "newdecl" (typing/typemod.ml[579,20368+46]..[579,20368+53])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[579,20368+54]..[579,20368+62])
                                                                      Pexp_ident "sig_decl" (typing/typemod.ml[579,20368+54]..[579,20368+62])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[579,20368+63]..[579,20368+72])
                                                                      Pexp_ident "rec_group" (typing/typemod.ml[579,20368+63]..[579,20368+72])
                                                                ]
                                                              expression (typing/typemod.ml[580,20442+8]..[589,20812+11])
                                                                Pexp_match
                                                                expression (typing/typemod.ml[580,20442+20]..[580,20442+26])
                                                                  Pexp_ident "constr" (typing/typemod.ml[580,20442+20]..[580,20442+26])
                                                                [
                                                                  <case>
                                                                    pattern (typing/typemod.ml[581,20474+10]..[581,20474+21])
                                                                      Ppat_construct "With_type" (typing/typemod.ml[581,20474+10]..[581,20474+19])
                                                                      Some
[]
pattern (typing/typemod.ml[581,20474+20]..[581,20474+21])
  Ppat_any
                                                                    expression (typing/typemod.ml[582,20499+12]..[584,20592+48])
                                                                      Pexp_apply
                                                                      expression (typing/typemod.ml[582,20499+12]..[582,20499+18])
Pexp_ident "return" (typing/typemod.ml[582,20499+12]..[582,20499+18])
                                                                      [
<arg>
Labelled "ghosts"
  expression (typing/typemod.ml[582,20499+20]..[582,20499+26])
    Pexp_ident "ghosts" (typing/typemod.ml[582,20499+20]..[582,20499+26])
<arg>
Labelled "replace_by"
  expression (typing/typemod.ml[583,20526+26]..[583,20526+65])
    Pexp_construct "Some" (typing/typemod.ml[583,20526+27]..[583,20526+31])
    Some
      expression (typing/typemod.ml[583,20526+31]..[583,20526+64])
        Pexp_construct "Sig_type" (typing/typemod.ml[583,20526+32]..[583,20526+40])
        Some
          expression (typing/typemod.ml[583,20526+40]..[583,20526+63])
            Pexp_tuple
            [
              expression (typing/typemod.ml[583,20526+41]..[583,20526+43])
                Pexp_ident "id" (typing/typemod.ml[583,20526+41]..[583,20526+43])
              expression (typing/typemod.ml[583,20526+45]..[583,20526+52])
                Pexp_ident "newdecl" (typing/typemod.ml[583,20526+45]..[583,20526+52])
              expression (typing/typemod.ml[583,20526+54]..[583,20526+56])
                Pexp_ident "rs" (typing/typemod.ml[583,20526+54]..[583,20526+56])
              expression (typing/typemod.ml[583,20526+58]..[583,20526+62])
                Pexp_ident "priv" (typing/typemod.ml[583,20526+58]..[583,20526+62])
            ]
<arg>
Nolabel
  expression (typing/typemod.ml[584,20592+14]..[584,20592+48])
    Pexp_tuple
    [
      expression (typing/typemod.ml[584,20592+15]..[584,20592+24])
        Pexp_construct "Pident" (typing/typemod.ml[584,20592+15]..[584,20592+21])
        Some
          expression (typing/typemod.ml[584,20592+22]..[584,20592+24])
            Pexp_ident "id" (typing/typemod.ml[584,20592+22]..[584,20592+24])
      expression (typing/typemod.ml[584,20592+26]..[584,20592+29])
        Pexp_ident "lid" (typing/typemod.ml[584,20592+26]..[584,20592+29])
      expression (typing/typemod.ml[584,20592+31]..[584,20592+47])
        Pexp_construct "Twith_type" (typing/typemod.ml[584,20592+31]..[584,20592+41])
        Some
          expression (typing/typemod.ml[584,20592+42]..[584,20592+47])
            Pexp_ident "tdecl" (typing/typemod.ml[584,20592+42]..[584,20592+47])
    ]
                                                                      ]
                                                                  <case>
                                                                    pattern (typing/typemod.ml[585,20641+31]..[585,20641+32])
                                                                      Ppat_any
                                                                    expression (typing/typemod.ml[586,20677+12]..[588,20758+53])
                                                                      Pexp_sequence
                                                                      expression (typing/typemod.ml[586,20677+12]..[586,20677+35])
Pexp_apply
expression (typing/typemod.ml[586,20677+21]..[586,20677+23])
  Pexp_ident ":=" (typing/typemod.ml[586,20677+21]..[586,20677+23])
[
  <arg>
  Nolabel
    expression (typing/typemod.ml[586,20677+12]..[586,20677+20])
      Pexp_ident "real_ids" (typing/typemod.ml[586,20677+12]..[586,20677+20])
  <arg>
  Nolabel
    expression (typing/typemod.ml[586,20677+24]..[586,20677+35])
      Pexp_construct "::" (typing/typemod.ml[586,20677+25]..[586,20677+35]) ghost
      Some
        expression (typing/typemod.ml[586,20677+25]..[586,20677+35]) ghost
          Pexp_tuple
          [
            expression (typing/typemod.ml[586,20677+25]..[586,20677+34])
              Pexp_construct "Pident" (typing/typemod.ml[586,20677+25]..[586,20677+31])
              Some
                expression (typing/typemod.ml[586,20677+32]..[586,20677+34])
                  Pexp_ident "id" (typing/typemod.ml[586,20677+32]..[586,20677+34])
            expression (typing/typemod.ml[586,20677+34]..[586,20677+35]) ghost
              Pexp_construct "[]" (typing/typemod.ml[586,20677+34]..[586,20677+35]) ghost
              None
          ]
]
                                                                      expression (typing/typemod.ml[587,20714+12]..[588,20758+53])
Pexp_apply
expression (typing/typemod.ml[587,20714+12]..[587,20714+18])
  Pexp_ident "return" (typing/typemod.ml[587,20714+12]..[587,20714+18])
[
  <arg>
  Labelled "ghosts"
    expression (typing/typemod.ml[587,20714+20]..[587,20714+26])
      Pexp_ident "ghosts" (typing/typemod.ml[587,20714+20]..[587,20714+26])
  <arg>
  Labelled "replace_by"
    expression (typing/typemod.ml[587,20714+39]..[587,20714+43])
      Pexp_construct "None" (typing/typemod.ml[587,20714+39]..[587,20714+43])
      None
  <arg>
  Nolabel
    expression (typing/typemod.ml[588,20758+14]..[588,20758+53])
      Pexp_tuple
      [
        expression (typing/typemod.ml[588,20758+15]..[588,20758+24])
          Pexp_construct "Pident" (typing/typemod.ml[588,20758+15]..[588,20758+21])
          Some
            expression (typing/typemod.ml[588,20758+22]..[588,20758+24])
              Pexp_ident "id" (typing/typemod.ml[588,20758+22]..[588,20758+24])
        expression (typing/typemod.ml[588,20758+26]..[588,20758+29])
          Pexp_ident "lid" (typing/typemod.ml[588,20758+26]..[588,20758+29])
        expression (typing/typemod.ml[588,20758+31]..[588,20758+52])
          Pexp_construct "Twith_typesubst" (typing/typemod.ml[588,20758+31]..[588,20758+46])
          Some
            expression (typing/typemod.ml[588,20758+47]..[588,20758+52])
              Pexp_ident "tdecl" (typing/typemod.ml[588,20758+47]..[588,20758+52])
      ]
]
                                                                ]
                                                  <case>
                                                    pattern (typing/typemod.ml[590,20824+6]..[591,20863+48])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typemod.ml[590,20824+6]..[590,20824+32])
                                                          Ppat_construct "Sig_modtype" (typing/typemod.ml[590,20824+6]..[590,20824+17])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[590,20824+17]..[590,20824+32])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[590,20824+18]..[590,20824+20])
                                                                  Ppat_var "id" (typing/typemod.ml[590,20824+18]..[590,20824+20])
                                                                pattern (typing/typemod.ml[590,20824+22]..[590,20824+25])
                                                                  Ppat_var "mtd" (typing/typemod.ml[590,20824+22]..[590,20824+25])
                                                                pattern (typing/typemod.ml[590,20824+27]..[590,20824+31])
                                                                  Ppat_var "priv" (typing/typemod.ml[590,20824+27]..[590,20824+31])
                                                              ]
                                                        pattern (typing/typemod.ml[590,20824+34]..[590,20824+37])
                                                          Ppat_construct "::" (typing/typemod.ml[590,20824+35]..[590,20824+37]) ghost
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[590,20824+35]..[590,20824+37]) ghost
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[590,20824+35]..[590,20824+36])
                                                                  Ppat_var "s" (typing/typemod.ml[590,20824+35]..[590,20824+36])
                                                                pattern (typing/typemod.ml[590,20824+36]..[590,20824+37]) ghost
                                                                  Ppat_construct "[]" (typing/typemod.ml[590,20824+36]..[590,20824+37]) ghost
                                                                  None
                                                              ]
                                                        pattern (typing/typemod.ml[591,20863+6]..[591,20863+48])
                                                          Ppat_or
                                                          pattern (typing/typemod.ml[591,20863+7]..[591,20863+23])
                                                            Ppat_construct "With_modtype" (typing/typemod.ml[591,20863+7]..[591,20863+19])
                                                            Some
                                                              []
                                                              pattern (typing/typemod.ml[591,20863+20]..[591,20863+23])
                                                                Ppat_var "mty" (typing/typemod.ml[591,20863+20]..[591,20863+23])
                                                          pattern (typing/typemod.ml[591,20863+26]..[591,20863+47])
                                                            Ppat_construct "With_modtypesubst" (typing/typemod.ml[591,20863+26]..[591,20863+43])
                                                            Some
                                                              []
                                                              pattern (typing/typemod.ml[591,20863+44]..[591,20863+47])
                                                                Ppat_var "mty" (typing/typemod.ml[591,20863+44]..[591,20863+47])
                                                      ]
                                                    <when>
                                                      expression (typing/typemod.ml[592,20912+11]..[592,20912+28])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[592,20912+25]..[592,20912+26])
                                                          Pexp_ident "=" (typing/typemod.ml[592,20912+25]..[592,20912+26])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[592,20912+11]..[592,20912+24])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[592,20912+11]..[592,20912+21])
                                                                Pexp_ident "Ident.name" (typing/typemod.ml[592,20912+11]..[592,20912+21])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[592,20912+22]..[592,20912+24])
                                                                    Pexp_ident "id" (typing/typemod.ml[592,20912+22]..[592,20912+24])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[592,20912+27]..[592,20912+28])
                                                              Pexp_ident "s" (typing/typemod.ml[592,20912+27]..[592,20912+28])
                                                        ]
                                                    expression (typing/typemod.ml[593,20944+8]..[619,21878+11])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typemod.ml[593,20944+12]..[593,20944+14])
                                                            Ppat_construct "()" (typing/typemod.ml[593,20944+12]..[593,20944+14])
                                                            None
                                                          expression (typing/typemod.ml[593,20944+17]..[597,21099+44])
                                                            Pexp_match
                                                            expression (typing/typemod.ml[593,20944+23]..[593,20944+35])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[593,20944+23]..[593,20944+26])
                                                                Pexp_ident "mtd" (typing/typemod.ml[593,20944+23]..[593,20944+26])
                                                              "mtd_type" (typing/typemod.ml[593,20944+27]..[593,20944+35])
                                                            [
                                                              <case>
                                                                pattern (typing/typemod.ml[594,20985+12]..[594,20985+16])
                                                                  Ppat_construct "None" (typing/typemod.ml[594,20985+12]..[594,20985+16])
                                                                  None
                                                                expression (typing/typemod.ml[594,20985+20]..[594,20985+22])
                                                                  Pexp_construct "()" (typing/typemod.ml[594,20985+20]..[594,20985+22])
                                                                  None
                                                              <case>
                                                                pattern (typing/typemod.ml[595,21008+12]..[595,21008+29])
                                                                  Ppat_construct "Some" (typing/typemod.ml[595,21008+12]..[595,21008+16])
                                                                  Some
                                                                    []
                                                                    pattern (typing/typemod.ml[595,21008+17]..[595,21008+29])
                                                                      Ppat_var "previous_mty" (typing/typemod.ml[595,21008+17]..[595,21008+29])
                                                                expression (typing/typemod.ml[596,21041+14]..[597,21099+44])
                                                                  Pexp_apply
                                                                  expression (typing/typemod.ml[596,21041+14]..[596,21041+44])
                                                                    Pexp_ident "Includemod.check_modtype_equiv" (typing/typemod.ml[596,21041+14]..[596,21041+44])
                                                                  [
                                                                    <arg>
                                                                    Labelled "loc"
                                                                      expression (typing/typemod.ml[596,21041+46]..[596,21041+49])
Pexp_ident "loc" (typing/typemod.ml[596,21041+46]..[596,21041+49])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[596,21041+50]..[596,21041+57])
Pexp_ident "sig_env" (typing/typemod.ml[596,21041+50]..[596,21041+57])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[597,21099+16]..[597,21099+18])
Pexp_ident "id" (typing/typemod.ml[597,21099+16]..[597,21099+18])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[597,21099+19]..[597,21099+31])
Pexp_ident "previous_mty" (typing/typemod.ml[597,21099+19]..[597,21099+31])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[597,21099+32]..[597,21099+44])
Pexp_field
expression (typing/typemod.ml[597,21099+32]..[597,21099+35])
  Pexp_ident "mty" (typing/typemod.ml[597,21099+32]..[597,21099+35])
"mty_type" (typing/typemod.ml[597,21099+36]..[597,21099+44])
                                                                  ]
                                                            ]
                                                      ]
                                                      expression (typing/typemod.ml[599,21155+8]..[619,21878+11])
                                                        Pexp_ifthenelse
                                                        expression (typing/typemod.ml[599,21155+11]..[599,21155+39])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[599,21155+11]..[599,21155+14])
                                                            Pexp_ident "not" (typing/typemod.ml[599,21155+11]..[599,21155+14])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[599,21155+15]..[599,21155+39])
                                                                Pexp_ident "destructive_substitution" (typing/typemod.ml[599,21155+15]..[599,21155+39])
                                                          ]
                                                        expression (typing/typemod.ml[600,21200+10]..[610,21537+47])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (typing/typemod.ml[600,21200+14]..[600,21200+39]) ghost
                                                                Ppat_constraint
                                                                pattern (typing/typemod.ml[600,21200+14]..[600,21200+18])
                                                                  Ppat_var "mtd'" (typing/typemod.ml[600,21200+14]..[600,21200+18])
                                                                core_type (typing/typemod.ml[600,21200+20]..[600,21200+39]) ghost
                                                                  Ptyp_poly
                                                                  core_type (typing/typemod.ml[600,21200+20]..[600,21200+39])
                                                                    Ptyp_constr "modtype_declaration" (typing/typemod.ml[600,21200+20]..[600,21200+39])
                                                                    []
                                                              expression (typing/typemod.ml[600,21200+14]..[606,21433+13])
                                                                Pexp_constraint
                                                                expression (typing/typemod.ml[601,21242+12]..[606,21433+13])
                                                                  Pexp_record
                                                                  [
                                                                    "mtd_uid" (typing/typemod.ml[602,21256+14]..[602,21256+21])
                                                                      expression (typing/typemod.ml[602,21256+24]..[602,21256+67])
Pexp_apply
expression (typing/typemod.ml[602,21256+24]..[602,21256+30])
  Pexp_ident "Uid.mk" (typing/typemod.ml[602,21256+24]..[602,21256+30])
[
  <arg>
  Labelled "current_unit"
    expression (typing/typemod.ml[602,21256+45]..[602,21256+67])
      Pexp_apply
      expression (typing/typemod.ml[602,21256+46]..[602,21256+63])
        Pexp_ident "Env.get_unit_name" (typing/typemod.ml[602,21256+46]..[602,21256+63])
      [
        <arg>
        Nolabel
          expression (typing/typemod.ml[602,21256+64]..[602,21256+66])
            Pexp_construct "()" (typing/typemod.ml[602,21256+64]..[602,21256+66])
            None
      ]
]
                                                                    "mtd_type" (typing/typemod.ml[603,21325+14]..[603,21325+22])
                                                                      expression (typing/typemod.ml[603,21325+25]..[603,21325+42])
Pexp_construct "Some" (typing/typemod.ml[603,21325+25]..[603,21325+29])
Some
  expression (typing/typemod.ml[603,21325+30]..[603,21325+42])
    Pexp_field
    expression (typing/typemod.ml[603,21325+30]..[603,21325+33])
      Pexp_ident "mty" (typing/typemod.ml[603,21325+30]..[603,21325+33])
    "mty_type" (typing/typemod.ml[603,21325+34]..[603,21325+42])
                                                                    "mtd_attributes" (typing/typemod.ml[604,21369+14]..[604,21369+28])
                                                                      expression (typing/typemod.ml[604,21369+31]..[604,21369+33])
Pexp_construct "[]" (typing/typemod.ml[604,21369+31]..[604,21369+33])
None
                                                                    "mtd_loc" (typing/typemod.ml[605,21404+14]..[605,21404+21])
                                                                      expression (typing/typemod.ml[605,21404+24]..[605,21404+27])
Pexp_ident "loc" (typing/typemod.ml[605,21404+24]..[605,21404+27])
                                                                  ]
                                                                  None
                                                                core_type (typing/typemod.ml[600,21200+20]..[600,21200+39])
                                                                  Ptyp_constr "modtype_declaration" (typing/typemod.ml[600,21200+20]..[600,21200+39])
                                                                  []
                                                          ]
                                                          expression (typing/typemod.ml[608,21460+10]..[610,21537+47])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[608,21460+10]..[608,21460+16])
                                                              Pexp_ident "return" (typing/typemod.ml[608,21460+10]..[608,21460+16])
                                                            [
                                                              <arg>
                                                              Labelled "replace_by"
                                                                expression (typing/typemod.ml[609,21477+24]..[609,21477+59])
                                                                  Pexp_construct "Some" (typing/typemod.ml[609,21477+25]..[609,21477+29])
                                                                  Some
                                                                    expression (typing/typemod.ml[609,21477+29]..[609,21477+58])
                                                                      Pexp_construct "Sig_modtype" (typing/typemod.ml[609,21477+30]..[609,21477+41])
                                                                      Some
expression (typing/typemod.ml[609,21477+41]..[609,21477+57])
  Pexp_tuple
  [
    expression (typing/typemod.ml[609,21477+42]..[609,21477+44])
      Pexp_ident "id" (typing/typemod.ml[609,21477+42]..[609,21477+44])
    expression (typing/typemod.ml[609,21477+46]..[609,21477+50])
      Pexp_ident "mtd'" (typing/typemod.ml[609,21477+46]..[609,21477+50])
    expression (typing/typemod.ml[609,21477+52]..[609,21477+56])
      Pexp_ident "priv" (typing/typemod.ml[609,21477+52]..[609,21477+56])
  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[610,21537+12]..[610,21537+47])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (typing/typemod.ml[610,21537+13]..[610,21537+22])
                                                                      Pexp_construct "Pident" (typing/typemod.ml[610,21537+13]..[610,21537+19])
                                                                      Some
expression (typing/typemod.ml[610,21537+20]..[610,21537+22])
  Pexp_ident "id" (typing/typemod.ml[610,21537+20]..[610,21537+22])
                                                                    expression (typing/typemod.ml[610,21537+24]..[610,21537+27])
                                                                      Pexp_ident "lid" (typing/typemod.ml[610,21537+24]..[610,21537+27])
                                                                    expression (typing/typemod.ml[610,21537+29]..[610,21537+46])
                                                                      Pexp_construct "Twith_modtype" (typing/typemod.ml[610,21537+29]..[610,21537+42])
                                                                      Some
expression (typing/typemod.ml[610,21537+43]..[610,21537+46])
  Pexp_ident "mty" (typing/typemod.ml[610,21537+43]..[610,21537+46])
                                                                  ]
                                                            ]
                                                        Some
                                                          expression (typing/typemod.ml[611,21585+13]..[619,21878+11])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (typing/typemod.ml[612,21604+14]..[612,21604+18])
                                                                  Ppat_var "path" (typing/typemod.ml[612,21604+14]..[612,21604+18])
                                                                expression (typing/typemod.ml[612,21604+21]..[612,21604+30])
                                                                  Pexp_construct "Pident" (typing/typemod.ml[612,21604+21]..[612,21604+27])
                                                                  Some
                                                                    expression (typing/typemod.ml[612,21604+28]..[612,21604+30])
                                                                      Pexp_ident "id" (typing/typemod.ml[612,21604+28]..[612,21604+30])
                                                            ]
                                                            expression (typing/typemod.ml[613,21638+10]..[618,21803+74])
                                                              Pexp_sequence
                                                              expression (typing/typemod.ml[613,21638+10]..[613,21638+28])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[613,21638+19]..[613,21638+21])
                                                                  Pexp_ident ":=" (typing/typemod.ml[613,21638+19]..[613,21638+21])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[613,21638+10]..[613,21638+18])
                                                                      Pexp_ident "real_ids" (typing/typemod.ml[613,21638+10]..[613,21638+18])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[613,21638+22]..[613,21638+28])
                                                                      Pexp_construct "::" (typing/typemod.ml[613,21638+23]..[613,21638+28]) ghost
                                                                      Some
expression (typing/typemod.ml[613,21638+23]..[613,21638+28]) ghost
  Pexp_tuple
  [
    expression (typing/typemod.ml[613,21638+23]..[613,21638+27])
      Pexp_ident "path" (typing/typemod.ml[613,21638+23]..[613,21638+27])
    expression (typing/typemod.ml[613,21638+27]..[613,21638+28]) ghost
      Pexp_construct "[]" (typing/typemod.ml[613,21638+27]..[613,21638+28]) ghost
      None
  ]
                                                                ]
                                                              expression (typing/typemod.ml[614,21668+10]..[618,21803+74])
                                                                Pexp_sequence
                                                                expression (typing/typemod.ml[614,21668+10]..[617,21788+13])
                                                                  Pexp_match
                                                                  expression (typing/typemod.ml[614,21668+22]..[614,21668+34])
                                                                    Pexp_field
                                                                    expression (typing/typemod.ml[614,21668+22]..[614,21668+25])
                                                                      Pexp_ident "mty" (typing/typemod.ml[614,21668+22]..[614,21668+25])
                                                                    "mty_type" (typing/typemod.ml[614,21668+26]..[614,21668+34])
                                                                  [
                                                                    <case>
                                                                      pattern (typing/typemod.ml[615,21708+12]..[615,21708+23])
Ppat_construct "Mty_ident" (typing/typemod.ml[615,21708+12]..[615,21708+21])
Some
  []
  pattern (typing/typemod.ml[615,21708+22]..[615,21708+23])
    Ppat_any
                                                                      expression (typing/typemod.ml[615,21708+27]..[615,21708+29])
Pexp_construct "()" (typing/typemod.ml[615,21708+27]..[615,21708+29])
None
                                                                    <case>
                                                                      pattern (typing/typemod.ml[616,21738+12]..[616,21738+15])
Ppat_var "mty" (typing/typemod.ml[616,21738+12]..[616,21738+15])
                                                                      expression (typing/typemod.ml[616,21738+19]..[616,21738+49])
Pexp_apply
expression (typing/typemod.ml[616,21738+38]..[616,21738+40])
  Pexp_ident ":=" (typing/typemod.ml[616,21738+38]..[616,21738+40])
[
  <arg>
  Nolabel
    expression (typing/typemod.ml[616,21738+19]..[616,21738+37])
      Pexp_ident "unpackable_modtype" (typing/typemod.ml[616,21738+19]..[616,21738+37])
  <arg>
  Nolabel
    expression (typing/typemod.ml[616,21738+41]..[616,21738+49])
      Pexp_construct "Some" (typing/typemod.ml[616,21738+41]..[616,21738+45])
      Some
        expression (typing/typemod.ml[616,21738+46]..[616,21738+49])
          Pexp_ident "mty" (typing/typemod.ml[616,21738+46]..[616,21738+49])
]
                                                                  ]
                                                                expression (typing/typemod.ml[618,21803+10]..[618,21803+74])
                                                                  Pexp_apply
                                                                  expression (typing/typemod.ml[618,21803+10]..[618,21803+16])
                                                                    Pexp_ident "return" (typing/typemod.ml[618,21803+10]..[618,21803+16])
                                                                  [
                                                                    <arg>
                                                                    Labelled "replace_by"
                                                                      expression (typing/typemod.ml[618,21803+29]..[618,21803+33])
Pexp_construct "None" (typing/typemod.ml[618,21803+29]..[618,21803+33])
None
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[618,21803+34]..[618,21803+74])
Pexp_tuple
[
  expression (typing/typemod.ml[618,21803+35]..[618,21803+44])
    Pexp_construct "Pident" (typing/typemod.ml[618,21803+35]..[618,21803+41])
    Some
      expression (typing/typemod.ml[618,21803+42]..[618,21803+44])
        Pexp_ident "id" (typing/typemod.ml[618,21803+42]..[618,21803+44])
  expression (typing/typemod.ml[618,21803+46]..[618,21803+49])
    Pexp_ident "lid" (typing/typemod.ml[618,21803+46]..[618,21803+49])
  expression (typing/typemod.ml[618,21803+51]..[618,21803+73])
    Pexp_construct "Twith_modtypesubst" (typing/typemod.ml[618,21803+51]..[618,21803+69])
    Some
      expression (typing/typemod.ml[618,21803+70]..[618,21803+73])
        Pexp_ident "mty" (typing/typemod.ml[618,21803+70]..[618,21803+73])
]
                                                                  ]
                                                  <case>
                                                    pattern (typing/typemod.ml[620,21890+6]..[621,21937+58])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typemod.ml[620,21890+6]..[620,21890+40])
                                                          Ppat_construct "Sig_module" (typing/typemod.ml[620,21890+6]..[620,21890+16])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[620,21890+16]..[620,21890+40])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[620,21890+17]..[620,21890+19])
                                                                  Ppat_var "id" (typing/typemod.ml[620,21890+17]..[620,21890+19])
                                                                pattern (typing/typemod.ml[620,21890+21]..[620,21890+25])
                                                                  Ppat_var "pres" (typing/typemod.ml[620,21890+21]..[620,21890+25])
                                                                pattern (typing/typemod.ml[620,21890+27]..[620,21890+29])
                                                                  Ppat_var "md" (typing/typemod.ml[620,21890+27]..[620,21890+29])
                                                                pattern (typing/typemod.ml[620,21890+31]..[620,21890+33])
                                                                  Ppat_var "rs" (typing/typemod.ml[620,21890+31]..[620,21890+33])
                                                                pattern (typing/typemod.ml[620,21890+35]..[620,21890+39])
                                                                  Ppat_var "priv" (typing/typemod.ml[620,21890+35]..[620,21890+39])
                                                              ]
                                                        pattern (typing/typemod.ml[620,21890+42]..[620,21890+45])
                                                          Ppat_construct "::" (typing/typemod.ml[620,21890+43]..[620,21890+45]) ghost
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[620,21890+43]..[620,21890+45]) ghost
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[620,21890+43]..[620,21890+44])
                                                                  Ppat_var "s" (typing/typemod.ml[620,21890+43]..[620,21890+44])
                                                                pattern (typing/typemod.ml[620,21890+44]..[620,21890+45]) ghost
                                                                  Ppat_construct "[]" (typing/typemod.ml[620,21890+44]..[620,21890+45]) ghost
                                                                  None
                                                              ]
                                                        pattern (typing/typemod.ml[621,21937+6]..[621,21937+58])
                                                          Ppat_construct "With_module" (typing/typemod.ml[621,21937+6]..[621,21937+17])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[621,21937+18]..[621,21937+58])
                                                              Ppat_record Closed
                                                              [
                                                                "lid" (typing/typemod.ml[621,21937+19]..[621,21937+22])
                                                                  pattern (typing/typemod.ml[621,21937+23]..[621,21937+27])
                                                                    Ppat_var "lid'" (typing/typemod.ml[621,21937+23]..[621,21937+27])
                                                                "md" (typing/typemod.ml[621,21937+29]..[621,21937+31])
                                                                  pattern (typing/typemod.ml[621,21937+32]..[621,21937+35])
                                                                    Ppat_var "md'" (typing/typemod.ml[621,21937+32]..[621,21937+35])
                                                                "path" (typing/typemod.ml[621,21937+37]..[621,21937+41]) ghost
                                                                  pattern (typing/typemod.ml[621,21937+37]..[621,21937+41])
                                                                    Ppat_var "path" (typing/typemod.ml[621,21937+37]..[621,21937+41])
                                                                "remove_aliases" (typing/typemod.ml[621,21937+43]..[621,21937+57]) ghost
                                                                  pattern (typing/typemod.ml[621,21937+43]..[621,21937+57])
                                                                    Ppat_var "remove_aliases" (typing/typemod.ml[621,21937+43]..[621,21937+57])
                                                              ]
                                                      ]
                                                    <when>
                                                      expression (typing/typemod.ml[622,21996+11]..[622,21996+28])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[622,21996+25]..[622,21996+26])
                                                          Pexp_ident "=" (typing/typemod.ml[622,21996+25]..[622,21996+26])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[622,21996+11]..[622,21996+24])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[622,21996+11]..[622,21996+21])
                                                                Pexp_ident "Ident.name" (typing/typemod.ml[622,21996+11]..[622,21996+21])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[622,21996+22]..[622,21996+24])
                                                                    Pexp_ident "id" (typing/typemod.ml[622,21996+22]..[622,21996+24])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[622,21996+27]..[622,21996+28])
                                                              Pexp_ident "s" (typing/typemod.ml[622,21996+27]..[622,21996+28])
                                                        ]
                                                    expression (typing/typemod.ml[623,22028+8]..[631,22456+53])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typemod.ml[623,22028+12]..[623,22028+15])
                                                            Ppat_var "mty" (typing/typemod.ml[623,22028+12]..[623,22028+15])
                                                          expression (typing/typemod.ml[623,22028+18]..[623,22028+29])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[623,22028+18]..[623,22028+21])
                                                              Pexp_ident "md'" (typing/typemod.ml[623,22028+18]..[623,22028+21])
                                                            "md_type" (typing/typemod.ml[623,22028+22]..[623,22028+29])
                                                      ]
                                                      expression (typing/typemod.ml[624,22061+8]..[631,22456+53])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (typing/typemod.ml[624,22061+12]..[624,22061+15])
                                                              Ppat_var "mty" (typing/typemod.ml[624,22061+12]..[624,22061+15])
                                                            expression (typing/typemod.ml[624,22061+18]..[624,22061+70])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[624,22061+18]..[624,22061+42])
                                                                Pexp_ident "Mtype.scrape_for_type_of" (typing/typemod.ml[624,22061+18]..[624,22061+42])
                                                              [
                                                                <arg>
                                                                Labelled "remove_aliases"
                                                                  expression (typing/typemod.ml[624,22061+44]..[624,22061+58])
                                                                    Pexp_ident "remove_aliases" (typing/typemod.ml[624,22061+44]..[624,22061+58])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[624,22061+59]..[624,22061+66])
                                                                    Pexp_ident "sig_env" (typing/typemod.ml[624,22061+59]..[624,22061+66])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[624,22061+67]..[624,22061+70])
                                                                    Pexp_ident "mty" (typing/typemod.ml[624,22061+67]..[624,22061+70])
                                                              ]
                                                        ]
                                                        expression (typing/typemod.ml[625,22135+8]..[631,22456+53])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (typing/typemod.ml[625,22135+12]..[625,22135+16])
                                                                Ppat_var "md''" (typing/typemod.ml[625,22135+12]..[625,22135+16])
                                                              expression (typing/typemod.ml[625,22135+19]..[625,22135+45])
                                                                Pexp_record
                                                                [
                                                                  "md_type" (typing/typemod.ml[625,22135+30]..[625,22135+37])
                                                                    expression (typing/typemod.ml[625,22135+40]..[625,22135+43])
                                                                      Pexp_ident "mty" (typing/typemod.ml[625,22135+40]..[625,22135+43])
                                                                ]
                                                                Some
                                                                  expression (typing/typemod.ml[625,22135+21]..[625,22135+24])
                                                                    Pexp_ident "md'" (typing/typemod.ml[625,22135+21]..[625,22135+24])
                                                          ]
                                                          expression (typing/typemod.ml[626,22184+8]..[631,22456+53])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (typing/typemod.ml[626,22184+12]..[626,22184+17])
                                                                  Ppat_var "newmd" (typing/typemod.ml[626,22184+12]..[626,22184+17])
                                                                expression (typing/typemod.ml[626,22184+20]..[626,22184+76])
                                                                  Pexp_apply
                                                                  expression (typing/typemod.ml[626,22184+20]..[626,22184+41])
                                                                    Pexp_ident "Mtype.strengthen_decl" (typing/typemod.ml[626,22184+20]..[626,22184+41])
                                                                  [
                                                                    <arg>
                                                                    Labelled "aliasable"
                                                                      expression (typing/typemod.ml[626,22184+53]..[626,22184+58])
Pexp_construct "false" (typing/typemod.ml[626,22184+53]..[626,22184+58])
None
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[626,22184+59]..[626,22184+66])
Pexp_ident "sig_env" (typing/typemod.ml[626,22184+59]..[626,22184+66])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[626,22184+67]..[626,22184+71])
Pexp_ident "md''" (typing/typemod.ml[626,22184+67]..[626,22184+71])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[626,22184+72]..[626,22184+76])
Pexp_ident "path" (typing/typemod.ml[626,22184+72]..[626,22184+76])
                                                                  ]
                                                            ]
                                                            expression (typing/typemod.ml[627,22264+8]..[631,22456+53])
                                                              Pexp_sequence
                                                              expression (typing/typemod.ml[627,22264+8]..[628,22329+42])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[627,22264+8]..[627,22264+14])
                                                                  Pexp_ident "ignore" (typing/typemod.ml[627,22264+8]..[627,22264+14])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[627,22264+14]..[628,22329+42])
                                                                      Pexp_apply
                                                                      expression (typing/typemod.ml[627,22264+15]..[627,22264+34])
Pexp_ident "Includemod.modtypes" (typing/typemod.ml[627,22264+15]..[627,22264+34])
                                                                      [
<arg>
Labelled "mark"
  expression (typing/typemod.ml[627,22264+42]..[627,22264+51])
    Pexp_construct "Mark_both" (typing/typemod.ml[627,22264+42]..[627,22264+51])
    None
<arg>
Labelled "loc"
  expression (typing/typemod.ml[627,22264+53]..[627,22264+56])
    Pexp_ident "loc" (typing/typemod.ml[627,22264+53]..[627,22264+56])
<arg>
Nolabel
  expression (typing/typemod.ml[627,22264+57]..[627,22264+64])
    Pexp_ident "sig_env" (typing/typemod.ml[627,22264+57]..[627,22264+64])
<arg>
Nolabel
  expression (typing/typemod.ml[628,22329+17]..[628,22329+30])
    Pexp_field
    expression (typing/typemod.ml[628,22329+17]..[628,22329+22])
      Pexp_ident "newmd" (typing/typemod.ml[628,22329+17]..[628,22329+22])
    "md_type" (typing/typemod.ml[628,22329+23]..[628,22329+30])
<arg>
Nolabel
  expression (typing/typemod.ml[628,22329+31]..[628,22329+41])
    Pexp_field
    expression (typing/typemod.ml[628,22329+31]..[628,22329+33])
      Pexp_ident "md" (typing/typemod.ml[628,22329+31]..[628,22329+33])
    "md_type" (typing/typemod.ml[628,22329+34]..[628,22329+41])
                                                                      ]
                                                                ]
                                                              expression (typing/typemod.ml[629,22373+8]..[631,22456+53])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[629,22373+8]..[629,22373+14])
                                                                  Pexp_ident "return" (typing/typemod.ml[629,22373+8]..[629,22373+14])
                                                                [
                                                                  <arg>
                                                                  Labelled "replace_by"
                                                                    expression (typing/typemod.ml[630,22388+22]..[630,22388+67])
                                                                      Pexp_construct "Some" (typing/typemod.ml[630,22388+23]..[630,22388+27])
                                                                      Some
expression (typing/typemod.ml[630,22388+27]..[630,22388+66])
  Pexp_construct "Sig_module" (typing/typemod.ml[630,22388+28]..[630,22388+38])
  Some
    expression (typing/typemod.ml[630,22388+38]..[630,22388+65])
      Pexp_tuple
      [
        expression (typing/typemod.ml[630,22388+39]..[630,22388+41])
          Pexp_ident "id" (typing/typemod.ml[630,22388+39]..[630,22388+41])
        expression (typing/typemod.ml[630,22388+43]..[630,22388+47])
          Pexp_ident "pres" (typing/typemod.ml[630,22388+43]..[630,22388+47])
        expression (typing/typemod.ml[630,22388+49]..[630,22388+54])
          Pexp_ident "newmd" (typing/typemod.ml[630,22388+49]..[630,22388+54])
        expression (typing/typemod.ml[630,22388+56]..[630,22388+58])
          Pexp_ident "rs" (typing/typemod.ml[630,22388+56]..[630,22388+58])
        expression (typing/typemod.ml[630,22388+60]..[630,22388+64])
          Pexp_ident "priv" (typing/typemod.ml[630,22388+60]..[630,22388+64])
      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[631,22456+10]..[631,22456+53])
                                                                      Pexp_tuple
                                                                      [
expression (typing/typemod.ml[631,22456+11]..[631,22456+20])
  Pexp_construct "Pident" (typing/typemod.ml[631,22456+11]..[631,22456+17])
  Some
    expression (typing/typemod.ml[631,22456+18]..[631,22456+20])
      Pexp_ident "id" (typing/typemod.ml[631,22456+18]..[631,22456+20])
expression (typing/typemod.ml[631,22456+22]..[631,22456+25])
  Pexp_ident "lid" (typing/typemod.ml[631,22456+22]..[631,22456+25])
expression (typing/typemod.ml[631,22456+27]..[631,22456+52])
  Pexp_construct "Twith_module" (typing/typemod.ml[631,22456+27]..[631,22456+39])
  Some
    expression (typing/typemod.ml[631,22456+40]..[631,22456+52])
      Pexp_tuple
      [
        expression (typing/typemod.ml[631,22456+41]..[631,22456+45])
          Pexp_ident "path" (typing/typemod.ml[631,22456+41]..[631,22456+45])
        expression (typing/typemod.ml[631,22456+47]..[631,22456+51])
          Pexp_ident "lid'" (typing/typemod.ml[631,22456+47]..[631,22456+51])
      ]
                                                                      ]
                                                                ]
                                                  <case>
                                                    pattern (typing/typemod.ml[632,22510+6]..[632,22510+71])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typemod.ml[632,22510+6]..[632,22510+35])
                                                          Ppat_construct "Sig_module" (typing/typemod.ml[632,22510+6]..[632,22510+16])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[632,22510+16]..[632,22510+35])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[632,22510+17]..[632,22510+19])
                                                                  Ppat_var "id" (typing/typemod.ml[632,22510+17]..[632,22510+19])
                                                                pattern (typing/typemod.ml[632,22510+21]..[632,22510+22])
                                                                  Ppat_any
                                                                pattern (typing/typemod.ml[632,22510+24]..[632,22510+26])
                                                                  Ppat_var "md" (typing/typemod.ml[632,22510+24]..[632,22510+26])
                                                                pattern (typing/typemod.ml[632,22510+28]..[632,22510+31])
                                                                  Ppat_var "_rs" (typing/typemod.ml[632,22510+28]..[632,22510+31])
                                                                pattern (typing/typemod.ml[632,22510+33]..[632,22510+34])
                                                                  Ppat_any
                                                              ]
                                                        pattern (typing/typemod.ml[632,22510+37]..[632,22510+40])
                                                          Ppat_construct "::" (typing/typemod.ml[632,22510+38]..[632,22510+40]) ghost
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[632,22510+38]..[632,22510+40]) ghost
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[632,22510+38]..[632,22510+39])
                                                                  Ppat_var "s" (typing/typemod.ml[632,22510+38]..[632,22510+39])
                                                                pattern (typing/typemod.ml[632,22510+39]..[632,22510+40]) ghost
                                                                  Ppat_construct "[]" (typing/typemod.ml[632,22510+39]..[632,22510+40]) ghost
                                                                  None
                                                              ]
                                                        pattern (typing/typemod.ml[632,22510+42]..[632,22510+71])
                                                          Ppat_construct "With_modsubst" (typing/typemod.ml[632,22510+42]..[632,22510+55])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[632,22510+56]..[632,22510+71])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[632,22510+57]..[632,22510+61])
                                                                  Ppat_var "lid'" (typing/typemod.ml[632,22510+57]..[632,22510+61])
                                                                pattern (typing/typemod.ml[632,22510+62]..[632,22510+66])
                                                                  Ppat_var "path" (typing/typemod.ml[632,22510+62]..[632,22510+66])
                                                                pattern (typing/typemod.ml[632,22510+67]..[632,22510+70])
                                                                  Ppat_var "md'" (typing/typemod.ml[632,22510+67]..[632,22510+70])
                                                              ]
                                                      ]
                                                    <when>
                                                      expression (typing/typemod.ml[633,22582+11]..[633,22582+28])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[633,22582+25]..[633,22582+26])
                                                          Pexp_ident "=" (typing/typemod.ml[633,22582+25]..[633,22582+26])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[633,22582+11]..[633,22582+24])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[633,22582+11]..[633,22582+21])
                                                                Pexp_ident "Ident.name" (typing/typemod.ml[633,22582+11]..[633,22582+21])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[633,22582+22]..[633,22582+24])
                                                                    Pexp_ident "id" (typing/typemod.ml[633,22582+22]..[633,22582+24])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[633,22582+27]..[633,22582+28])
                                                              Pexp_ident "s" (typing/typemod.ml[633,22582+27]..[633,22582+28])
                                                        ]
                                                    expression (typing/typemod.ml[634,22614+8]..[639,22841+77])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typemod.ml[634,22614+12]..[634,22614+21])
                                                            Ppat_var "aliasable" (typing/typemod.ml[634,22614+12]..[634,22614+21])
                                                          expression (typing/typemod.ml[634,22614+24]..[634,22614+61])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[634,22614+24]..[634,22614+27])
                                                              Pexp_ident "not" (typing/typemod.ml[634,22614+24]..[634,22614+27])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[634,22614+28]..[634,22614+61])
                                                                  Pexp_apply
                                                                  expression (typing/typemod.ml[634,22614+29]..[634,22614+47])
                                                                    Pexp_ident "Env.is_functor_arg" (typing/typemod.ml[634,22614+29]..[634,22614+47])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[634,22614+48]..[634,22614+52])
Pexp_ident "path" (typing/typemod.ml[634,22614+48]..[634,22614+52])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[634,22614+53]..[634,22614+60])
Pexp_ident "sig_env" (typing/typemod.ml[634,22614+53]..[634,22614+60])
                                                                  ]
                                                            ]
                                                      ]
                                                      expression (typing/typemod.ml[635,22679+8]..[639,22841+77])
                                                        Pexp_sequence
                                                        expression (typing/typemod.ml[635,22679+8]..[637,22762+44])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[635,22679+8]..[635,22679+14])
                                                            Pexp_ident "ignore" (typing/typemod.ml[635,22679+8]..[635,22679+14])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[636,22694+10]..[637,22762+44])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[636,22694+11]..[636,22694+46])
                                                                  Pexp_ident "Includemod.strengthened_module_decl" (typing/typemod.ml[636,22694+11]..[636,22694+46])
                                                                [
                                                                  <arg>
                                                                  Labelled "loc"
                                                                    expression (typing/typemod.ml[636,22694+48]..[636,22694+51])
                                                                      Pexp_ident "loc" (typing/typemod.ml[636,22694+48]..[636,22694+51])
                                                                  <arg>
                                                                  Labelled "mark"
                                                                    expression (typing/typemod.ml[636,22694+58]..[636,22694+67])
                                                                      Pexp_construct "Mark_both" (typing/typemod.ml[636,22694+58]..[636,22694+67])
                                                                      None
                                                                  <arg>
                                                                  Labelled "aliasable"
                                                                    expression (typing/typemod.ml[637,22762+14]..[637,22762+23])
                                                                      Pexp_ident "aliasable" (typing/typemod.ml[637,22762+14]..[637,22762+23])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[637,22762+24]..[637,22762+31])
                                                                      Pexp_ident "sig_env" (typing/typemod.ml[637,22762+24]..[637,22762+31])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[637,22762+32]..[637,22762+35])
                                                                      Pexp_ident "md'" (typing/typemod.ml[637,22762+32]..[637,22762+35])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[637,22762+36]..[637,22762+40])
                                                                      Pexp_ident "path" (typing/typemod.ml[637,22762+36]..[637,22762+40])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[637,22762+41]..[637,22762+43])
                                                                      Pexp_ident "md" (typing/typemod.ml[637,22762+41]..[637,22762+43])
                                                                ]
                                                          ]
                                                        expression (typing/typemod.ml[638,22808+8]..[639,22841+77])
                                                          Pexp_sequence
                                                          expression (typing/typemod.ml[638,22808+8]..[638,22808+31])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[638,22808+17]..[638,22808+19])
                                                              Pexp_ident ":=" (typing/typemod.ml[638,22808+17]..[638,22808+19])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[638,22808+8]..[638,22808+16])
                                                                  Pexp_ident "real_ids" (typing/typemod.ml[638,22808+8]..[638,22808+16])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[638,22808+20]..[638,22808+31])
                                                                  Pexp_construct "::" (typing/typemod.ml[638,22808+21]..[638,22808+31]) ghost
                                                                  Some
                                                                    expression (typing/typemod.ml[638,22808+21]..[638,22808+31]) ghost
                                                                      Pexp_tuple
                                                                      [
expression (typing/typemod.ml[638,22808+21]..[638,22808+30])
  Pexp_construct "Pident" (typing/typemod.ml[638,22808+21]..[638,22808+27])
  Some
    expression (typing/typemod.ml[638,22808+28]..[638,22808+30])
      Pexp_ident "id" (typing/typemod.ml[638,22808+28]..[638,22808+30])
expression (typing/typemod.ml[638,22808+30]..[638,22808+31]) ghost
  Pexp_construct "[]" (typing/typemod.ml[638,22808+30]..[638,22808+31]) ghost
  None
                                                                      ]
                                                            ]
                                                          expression (typing/typemod.ml[639,22841+8]..[639,22841+77])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[639,22841+8]..[639,22841+14])
                                                              Pexp_ident "return" (typing/typemod.ml[639,22841+8]..[639,22841+14])
                                                            [
                                                              <arg>
                                                              Labelled "replace_by"
                                                                expression (typing/typemod.ml[639,22841+27]..[639,22841+31])
                                                                  Pexp_construct "None" (typing/typemod.ml[639,22841+27]..[639,22841+31])
                                                                  None
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[639,22841+32]..[639,22841+77])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (typing/typemod.ml[639,22841+33]..[639,22841+42])
                                                                      Pexp_construct "Pident" (typing/typemod.ml[639,22841+33]..[639,22841+39])
                                                                      Some
expression (typing/typemod.ml[639,22841+40]..[639,22841+42])
  Pexp_ident "id" (typing/typemod.ml[639,22841+40]..[639,22841+42])
                                                                    expression (typing/typemod.ml[639,22841+44]..[639,22841+47])
                                                                      Pexp_ident "lid" (typing/typemod.ml[639,22841+44]..[639,22841+47])
                                                                    expression (typing/typemod.ml[639,22841+49]..[639,22841+76])
                                                                      Pexp_construct "Twith_modsubst" (typing/typemod.ml[639,22841+49]..[639,22841+63])
                                                                      Some
expression (typing/typemod.ml[639,22841+64]..[639,22841+76])
  Pexp_tuple
  [
    expression (typing/typemod.ml[639,22841+65]..[639,22841+69])
      Pexp_ident "path" (typing/typemod.ml[639,22841+65]..[639,22841+69])
    expression (typing/typemod.ml[639,22841+71]..[639,22841+75])
      Pexp_ident "lid'" (typing/typemod.ml[639,22841+71]..[639,22841+75])
  ]
                                                                  ]
                                                            ]
                                                  <case>
                                                    pattern (typing/typemod.ml[640,22919+6]..[640,22919+68])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typemod.ml[640,22919+6]..[640,22919+45])
                                                          Ppat_alias "item" (typing/typemod.ml[640,22919+41]..[640,22919+45])
                                                          pattern (typing/typemod.ml[640,22919+6]..[640,22919+37])
                                                            Ppat_construct "Sig_module" (typing/typemod.ml[640,22919+6]..[640,22919+16])
                                                            Some
                                                              []
                                                              pattern (typing/typemod.ml[640,22919+16]..[640,22919+37])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/typemod.ml[640,22919+17]..[640,22919+19])
                                                                    Ppat_var "id" (typing/typemod.ml[640,22919+17]..[640,22919+19])
                                                                  pattern (typing/typemod.ml[640,22919+21]..[640,22919+22])
                                                                    Ppat_any
                                                                  pattern (typing/typemod.ml[640,22919+24]..[640,22919+26])
                                                                    Ppat_var "md" (typing/typemod.ml[640,22919+24]..[640,22919+26])
                                                                  pattern (typing/typemod.ml[640,22919+28]..[640,22919+30])
                                                                    Ppat_var "rs" (typing/typemod.ml[640,22919+28]..[640,22919+30])
                                                                  pattern (typing/typemod.ml[640,22919+32]..[640,22919+36])
                                                                    Ppat_var "priv" (typing/typemod.ml[640,22919+32]..[640,22919+36])
                                                                ]
                                                        pattern (typing/typemod.ml[640,22919+47]..[640,22919+60])
                                                          Ppat_construct "::" (typing/typemod.ml[640,22919+49]..[640,22919+51])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[640,22919+47]..[640,22919+60]) ghost
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[640,22919+47]..[640,22919+48])
                                                                  Ppat_var "s" (typing/typemod.ml[640,22919+47]..[640,22919+48])
                                                                pattern (typing/typemod.ml[640,22919+52]..[640,22919+60])
                                                                  Ppat_var "namelist" (typing/typemod.ml[640,22919+52]..[640,22919+60])
                                                              ]
                                                        pattern (typing/typemod.ml[640,22919+62]..[640,22919+68])
                                                          Ppat_var "constr" (typing/typemod.ml[640,22919+62]..[640,22919+68])
                                                      ]
                                                    <when>
                                                      expression (typing/typemod.ml[641,22988+11]..[641,22988+28])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[641,22988+25]..[641,22988+26])
                                                          Pexp_ident "=" (typing/typemod.ml[641,22988+25]..[641,22988+26])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[641,22988+11]..[641,22988+24])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[641,22988+11]..[641,22988+21])
                                                                Pexp_ident "Ident.name" (typing/typemod.ml[641,22988+11]..[641,22988+21])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[641,22988+22]..[641,22988+24])
                                                                    Pexp_ident "id" (typing/typemod.ml[641,22988+22]..[641,22988+24])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[641,22988+27]..[641,22988+28])
                                                              Pexp_ident "s" (typing/typemod.ml[641,22988+27]..[641,22988+28])
                                                        ]
                                                    expression (typing/typemod.ml[642,23020+8]..[656,23654+57])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typemod.ml[642,23020+12]..[642,23020+14])
                                                            Ppat_var "sg" (typing/typemod.ml[642,23020+12]..[642,23020+14])
                                                          expression (typing/typemod.ml[642,23020+17]..[642,23020+51])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[642,23020+17]..[642,23020+28])
                                                              Pexp_ident "extract_sig" (typing/typemod.ml[642,23020+17]..[642,23020+28])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[642,23020+29]..[642,23020+36])
                                                                  Pexp_ident "sig_env" (typing/typemod.ml[642,23020+29]..[642,23020+36])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[642,23020+37]..[642,23020+40])
                                                                  Pexp_ident "loc" (typing/typemod.ml[642,23020+37]..[642,23020+40])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[642,23020+41]..[642,23020+51])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[642,23020+41]..[642,23020+43])
                                                                    Pexp_ident "md" (typing/typemod.ml[642,23020+41]..[642,23020+43])
                                                                  "md_type" (typing/typemod.ml[642,23020+44]..[642,23020+51])
                                                            ]
                                                      ]
                                                      expression (typing/typemod.ml[643,23075+8]..[656,23654+57])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (typing/typemod.ml[643,23075+12]..[643,23075+37])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[643,23075+13]..[643,23075+29])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (typing/typemod.ml[643,23075+14]..[643,23075+18])
                                                                      Ppat_var "path" (typing/typemod.ml[643,23075+14]..[643,23075+18])
                                                                    pattern (typing/typemod.ml[643,23075+20]..[643,23075+21])
                                                                      Ppat_any
                                                                    pattern (typing/typemod.ml[643,23075+23]..[643,23075+28])
                                                                      Ppat_var "tcstr" (typing/typemod.ml[643,23075+23]..[643,23075+28])
                                                                  ]
                                                                pattern (typing/typemod.ml[643,23075+31]..[643,23075+36])
                                                                  Ppat_var "newsg" (typing/typemod.ml[643,23075+31]..[643,23075+36])
                                                              ]
                                                            expression (typing/typemod.ml[643,23075+40]..[643,23075+75])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[643,23075+40]..[643,23075+55])
                                                                Pexp_ident "merge_signature" (typing/typemod.ml[643,23075+40]..[643,23075+55])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[643,23075+56]..[643,23075+63])
                                                                    Pexp_ident "sig_env" (typing/typemod.ml[643,23075+56]..[643,23075+63])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[643,23075+64]..[643,23075+66])
                                                                    Pexp_ident "sg" (typing/typemod.ml[643,23075+64]..[643,23075+66])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[643,23075+67]..[643,23075+75])
                                                                    Pexp_ident "namelist" (typing/typemod.ml[643,23075+67]..[643,23075+75])
                                                              ]
                                                        ]
                                                        expression (typing/typemod.ml[644,23154+8]..[656,23654+57])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (typing/typemod.ml[644,23154+12]..[644,23154+16])
                                                                Ppat_var "path" (typing/typemod.ml[644,23154+12]..[644,23154+16])
                                                              expression (typing/typemod.ml[644,23154+19]..[644,23154+38])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[644,23154+19]..[644,23154+30])
                                                                  Pexp_ident "path_concat" (typing/typemod.ml[644,23154+19]..[644,23154+30])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[644,23154+31]..[644,23154+33])
                                                                      Pexp_ident "id" (typing/typemod.ml[644,23154+31]..[644,23154+33])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[644,23154+34]..[644,23154+38])
                                                                      Pexp_ident "path" (typing/typemod.ml[644,23154+34]..[644,23154+38])
                                                                ]
                                                          ]
                                                          expression (typing/typemod.ml[645,23196+8]..[656,23654+57])
                                                            Pexp_sequence
                                                            expression (typing/typemod.ml[645,23196+8]..[645,23196+37])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[645,23196+17]..[645,23196+19])
                                                                Pexp_ident ":=" (typing/typemod.ml[645,23196+17]..[645,23196+19])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[645,23196+8]..[645,23196+16])
                                                                    Pexp_ident "real_ids" (typing/typemod.ml[645,23196+8]..[645,23196+16])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[645,23196+20]..[645,23196+37])
                                                                    Pexp_construct "::" (typing/typemod.ml[645,23196+25]..[645,23196+27])
                                                                    Some
                                                                      expression (typing/typemod.ml[645,23196+20]..[645,23196+37]) ghost
Pexp_tuple
[
  expression (typing/typemod.ml[645,23196+20]..[645,23196+24])
    Pexp_ident "path" (typing/typemod.ml[645,23196+20]..[645,23196+24])
  expression (typing/typemod.ml[645,23196+28]..[645,23196+37])
    Pexp_apply
    expression (typing/typemod.ml[645,23196+28]..[645,23196+29])
      Pexp_ident "!" (typing/typemod.ml[645,23196+28]..[645,23196+29])
    [
      <arg>
      Nolabel
        expression (typing/typemod.ml[645,23196+29]..[645,23196+37])
          Pexp_ident "real_ids" (typing/typemod.ml[645,23196+29]..[645,23196+37])
    ]
]
                                                              ]
                                                            expression (typing/typemod.ml[646,23235+8]..[656,23654+57])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (typing/typemod.ml[646,23235+12]..[646,23235+16])
                                                                    Ppat_var "item" (typing/typemod.ml[646,23235+12]..[646,23235+16])
                                                                  expression (typing/typemod.ml[647,23254+10]..[654,23585+57])
                                                                    Pexp_match
                                                                    expression (typing/typemod.ml[647,23254+16]..[647,23254+34])
                                                                      Pexp_tuple
                                                                      [
expression (typing/typemod.ml[647,23254+16]..[647,23254+26])
  Pexp_field
  expression (typing/typemod.ml[647,23254+16]..[647,23254+18])
    Pexp_ident "md" (typing/typemod.ml[647,23254+16]..[647,23254+18])
  "md_type" (typing/typemod.ml[647,23254+19]..[647,23254+26])
expression (typing/typemod.ml[647,23254+28]..[647,23254+34])
  Pexp_ident "constr" (typing/typemod.ml[647,23254+28]..[647,23254+34])
                                                                      ]
                                                                    [
                                                                      <case>
pattern (typing/typemod.ml[648,23294+12]..[648,23294+54])
  Ppat_tuple
  [
    pattern (typing/typemod.ml[648,23294+12]..[648,23294+23])
      Ppat_construct "Mty_alias" (typing/typemod.ml[648,23294+12]..[648,23294+21])
      Some
        []
        pattern (typing/typemod.ml[648,23294+22]..[648,23294+23])
          Ppat_any
    pattern (typing/typemod.ml[648,23294+25]..[648,23294+54])
      Ppat_or
      pattern (typing/typemod.ml[648,23294+26]..[648,23294+39])
        Ppat_construct "With_module" (typing/typemod.ml[648,23294+26]..[648,23294+37])
        Some
          []
          pattern (typing/typemod.ml[648,23294+38]..[648,23294+39])
            Ppat_any
      pattern (typing/typemod.ml[648,23294+42]..[648,23294+53])
        Ppat_construct "With_type" (typing/typemod.ml[648,23294+42]..[648,23294+51])
        Some
          []
          pattern (typing/typemod.ml[648,23294+52]..[648,23294+53])
            Ppat_any
  ]
expression (typing/typemod.ml[651,23480+14]..[651,23480+18])
  Pexp_ident "item" (typing/typemod.ml[651,23480+14]..[651,23480+18])
                                                                      <case>
pattern (typing/typemod.ml[652,23499+12]..[652,23499+13])
  Ppat_any
expression (typing/typemod.ml[653,23516+14]..[654,23585+57])
  Pexp_let Nonrec
  [
    <def>
      pattern (typing/typemod.ml[653,23516+18]..[653,23516+23])
        Ppat_var "newmd" (typing/typemod.ml[653,23516+18]..[653,23516+23])
      expression (typing/typemod.ml[653,23516+26]..[653,23516+65])
        Pexp_record
        [
          "md_type" (typing/typemod.ml[653,23516+35]..[653,23516+42])
            expression (typing/typemod.ml[653,23516+45]..[653,23516+64])
              Pexp_construct "Mty_signature" (typing/typemod.ml[653,23516+45]..[653,23516+58])
              Some
                expression (typing/typemod.ml[653,23516+59]..[653,23516+64])
                  Pexp_ident "newsg" (typing/typemod.ml[653,23516+59]..[653,23516+64])
        ]
        Some
          expression (typing/typemod.ml[653,23516+27]..[653,23516+29])
            Pexp_ident "md" (typing/typemod.ml[653,23516+27]..[653,23516+29])
  ]
  expression (typing/typemod.ml[654,23585+14]..[654,23585+57])
    Pexp_construct "Sig_module" (typing/typemod.ml[654,23585+14]..[654,23585+24])
    Some
      expression (typing/typemod.ml[654,23585+24]..[654,23585+57])
        Pexp_tuple
        [
          expression (typing/typemod.ml[654,23585+25]..[654,23585+27])
            Pexp_ident "id" (typing/typemod.ml[654,23585+25]..[654,23585+27])
          expression (typing/typemod.ml[654,23585+29]..[654,23585+39])
            Pexp_construct "Mp_present" (typing/typemod.ml[654,23585+29]..[654,23585+39])
            None
          expression (typing/typemod.ml[654,23585+41]..[654,23585+46])
            Pexp_ident "newmd" (typing/typemod.ml[654,23585+41]..[654,23585+46])
          expression (typing/typemod.ml[654,23585+48]..[654,23585+50])
            Pexp_ident "rs" (typing/typemod.ml[654,23585+48]..[654,23585+50])
          expression (typing/typemod.ml[654,23585+52]..[654,23585+56])
            Pexp_ident "priv" (typing/typemod.ml[654,23585+52]..[654,23585+56])
        ]
                                                                    ]
                                                              ]
                                                              expression (typing/typemod.ml[656,23654+8]..[656,23654+57])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[656,23654+8]..[656,23654+14])
                                                                  Pexp_ident "return" (typing/typemod.ml[656,23654+8]..[656,23654+14])
                                                                [
                                                                  <arg>
                                                                  Labelled "replace_by"
                                                                    expression (typing/typemod.ml[656,23654+27]..[656,23654+38])
                                                                      Pexp_construct "Some" (typing/typemod.ml[656,23654+28]..[656,23654+32])
                                                                      Some
expression (typing/typemod.ml[656,23654+33]..[656,23654+37])
  Pexp_ident "item" (typing/typemod.ml[656,23654+33]..[656,23654+37])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[656,23654+39]..[656,23654+57])
                                                                      Pexp_tuple
                                                                      [
expression (typing/typemod.ml[656,23654+40]..[656,23654+44])
  Pexp_ident "path" (typing/typemod.ml[656,23654+40]..[656,23654+44])
expression (typing/typemod.ml[656,23654+46]..[656,23654+49])
  Pexp_ident "lid" (typing/typemod.ml[656,23654+46]..[656,23654+49])
expression (typing/typemod.ml[656,23654+51]..[656,23654+56])
  Pexp_ident "tcstr" (typing/typemod.ml[656,23654+51]..[656,23654+56])
                                                                      ]
                                                                ]
                                                  <case>
                                                    pattern (typing/typemod.ml[657,23712+6]..[657,23712+7])
                                                      Ppat_any
                                                    expression (typing/typemod.ml[657,23712+11]..[657,23712+15])
                                                      Pexp_construct "None" (typing/typemod.ml[657,23712+11]..[657,23712+15])
                                                      None
                                                ]
                              <def>
                                pattern (typing/typemod.ml[658,23728+6]..[658,23728+21])
                                  Ppat_var "merge_signature" (typing/typemod.ml[658,23728+6]..[658,23728+21])
                                expression (typing/typemod.ml[658,23728+22]..[664,23939+67]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typemod.ml[658,23728+22]..[658,23728+25])
                                    Ppat_var "env" (typing/typemod.ml[658,23728+22]..[658,23728+25])
                                  expression (typing/typemod.ml[658,23728+26]..[664,23939+67]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typemod.ml[658,23728+26]..[658,23728+28])
                                      Ppat_var "sg" (typing/typemod.ml[658,23728+26]..[658,23728+28])
                                    expression (typing/typemod.ml[658,23728+29]..[664,23939+67]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/typemod.ml[658,23728+29]..[658,23728+37])
                                        Ppat_var "namelist" (typing/typemod.ml[658,23728+29]..[658,23728+37])
                                      expression (typing/typemod.ml[659,23768+4]..[664,23939+67])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[659,23768+8]..[659,23768+15])
                                              Ppat_var "sig_env" (typing/typemod.ml[659,23768+8]..[659,23768+15])
                                            expression (typing/typemod.ml[659,23768+18]..[659,23768+42])
                                              Pexp_apply
                                              expression (typing/typemod.ml[659,23768+18]..[659,23768+35])
                                                Pexp_ident "Env.add_signature" (typing/typemod.ml[659,23768+18]..[659,23768+35])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[659,23768+36]..[659,23768+38])
                                                    Pexp_ident "sg" (typing/typemod.ml[659,23768+36]..[659,23768+38])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[659,23768+39]..[659,23768+42])
                                                    Pexp_ident "env" (typing/typemod.ml[659,23768+39]..[659,23768+42])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[660,23814+4]..[664,23939+67])
                                          Pexp_match
                                          expression (typing/typemod.ml[661,23824+6]..[661,23824+78])
                                            Pexp_apply
                                            expression (typing/typemod.ml[661,23824+6]..[661,23824+38])
                                              Pexp_ident "Signature_group.replace_in_place" (typing/typemod.ml[661,23824+6]..[661,23824+38])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[661,23824+39]..[661,23824+75])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[661,23824+40]..[661,23824+50])
                                                    Pexp_ident "patch_item" (typing/typemod.ml[661,23824+40]..[661,23824+50])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[661,23824+51]..[661,23824+57])
                                                        Pexp_ident "constr" (typing/typemod.ml[661,23824+51]..[661,23824+57])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[661,23824+58]..[661,23824+66])
                                                        Pexp_ident "namelist" (typing/typemod.ml[661,23824+58]..[661,23824+66])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[661,23824+67]..[661,23824+74])
                                                        Pexp_ident "sig_env" (typing/typemod.ml[661,23824+67]..[661,23824+74])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[661,23824+76]..[661,23824+78])
                                                  Pexp_ident "sg" (typing/typemod.ml[661,23824+76]..[661,23824+78])
                                            ]
                                          [
                                            <case>
                                              pattern (typing/typemod.ml[663,23912+6]..[663,23912+17])
                                                Ppat_construct "Some" (typing/typemod.ml[663,23912+6]..[663,23912+10])
                                                Some
                                                  []
                                                  pattern (typing/typemod.ml[663,23912+11]..[663,23912+17])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/typemod.ml[663,23912+12]..[663,23912+13])
                                                        Ppat_var "x" (typing/typemod.ml[663,23912+12]..[663,23912+13])
                                                      pattern (typing/typemod.ml[663,23912+14]..[663,23912+16])
                                                        Ppat_var "sg" (typing/typemod.ml[663,23912+14]..[663,23912+16])
                                                    ]
                                              expression (typing/typemod.ml[663,23912+21]..[663,23912+26])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typemod.ml[663,23912+21]..[663,23912+22])
                                                    Pexp_ident "x" (typing/typemod.ml[663,23912+21]..[663,23912+22])
                                                  expression (typing/typemod.ml[663,23912+24]..[663,23912+26])
                                                    Pexp_ident "sg" (typing/typemod.ml[663,23912+24]..[663,23912+26])
                                                ]
                                            <case>
                                              pattern (typing/typemod.ml[664,23939+6]..[664,23939+10])
                                                Ppat_construct "None" (typing/typemod.ml[664,23939+6]..[664,23939+10])
                                                None
                                              expression (typing/typemod.ml[664,23939+14]..[664,23939+67])
                                                Pexp_apply
                                                expression (typing/typemod.ml[664,23939+14]..[664,23939+19])
                                                  Pexp_ident "raise" (typing/typemod.ml[664,23939+14]..[664,23939+19])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[664,23939+19]..[664,23939+67])
                                                      Pexp_construct "Error" (typing/typemod.ml[664,23939+20]..[664,23939+25])
                                                      Some
                                                        expression (typing/typemod.ml[664,23939+25]..[664,23939+66])
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/typemod.ml[664,23939+26]..[664,23939+29])
                                                              Pexp_ident "loc" (typing/typemod.ml[664,23939+26]..[664,23939+29])
                                                            expression (typing/typemod.ml[664,23939+31]..[664,23939+38])
                                                              Pexp_ident "sig_env" (typing/typemod.ml[664,23939+31]..[664,23939+38])
                                                            expression (typing/typemod.ml[664,23939+40]..[664,23939+65])
                                                              Pexp_construct "With_no_component" (typing/typemod.ml[664,23939+40]..[664,23939+57])
                                                              Some
                                                                expression (typing/typemod.ml[664,23939+58]..[664,23939+65])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[664,23939+58]..[664,23939+61])
                                                                    Pexp_ident "lid" (typing/typemod.ml[664,23939+58]..[664,23939+61])
                                                                  "txt" (typing/typemod.ml[664,23939+62]..[664,23939+65])
                                                          ]
                                                ]
                                          ]
                            ]
                            expression (typing/typemod.ml[666,24012+2]..[725,26443+71])
                              Pexp_try
                              expression (typing/typemod.ml[667,24018+4]..[723,26388+15])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[667,24018+8]..[667,24018+13])
                                      Ppat_var "names" (typing/typemod.ml[667,24018+8]..[667,24018+13])
                                    expression (typing/typemod.ml[667,24018+16]..[667,24018+41])
                                      Pexp_apply
                                      expression (typing/typemod.ml[667,24018+16]..[667,24018+33])
                                        Pexp_ident "Longident.flatten" (typing/typemod.ml[667,24018+16]..[667,24018+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[667,24018+34]..[667,24018+41])
                                            Pexp_field
                                            expression (typing/typemod.ml[667,24018+34]..[667,24018+37])
                                              Pexp_ident "lid" (typing/typemod.ml[667,24018+34]..[667,24018+37])
                                            "txt" (typing/typemod.ml[667,24018+38]..[667,24018+41])
                                      ]
                                ]
                                expression (typing/typemod.ml[668,24063+4]..[723,26388+15])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typemod.ml[668,24063+8]..[668,24063+19])
                                        Ppat_tuple
                                        [
                                          pattern (typing/typemod.ml[668,24063+9]..[668,24063+14])
                                            Ppat_var "tcstr" (typing/typemod.ml[668,24063+9]..[668,24063+14])
                                          pattern (typing/typemod.ml[668,24063+16]..[668,24063+18])
                                            Ppat_var "sg" (typing/typemod.ml[668,24063+16]..[668,24063+18])
                                        ]
                                      expression (typing/typemod.ml[668,24063+22]..[668,24063+58])
                                        Pexp_apply
                                        expression (typing/typemod.ml[668,24063+22]..[668,24063+37])
                                          Pexp_ident "merge_signature" (typing/typemod.ml[668,24063+22]..[668,24063+37])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[668,24063+38]..[668,24063+49])
                                              Pexp_ident "initial_env" (typing/typemod.ml[668,24063+38]..[668,24063+49])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[668,24063+50]..[668,24063+52])
                                              Pexp_ident "sg" (typing/typemod.ml[668,24063+50]..[668,24063+52])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[668,24063+53]..[668,24063+58])
                                              Pexp_ident "names" (typing/typemod.ml[668,24063+53]..[668,24063+58])
                                        ]
                                  ]
                                  expression (typing/typemod.ml[669,24125+4]..[723,26388+15])
                                    Pexp_sequence
                                    expression (typing/typemod.ml[669,24125+4]..[671,24231+30])
                                      Pexp_ifthenelse
                                      expression (typing/typemod.ml[669,24125+7]..[669,24125+31])
                                        Pexp_ident "destructive_substitution" (typing/typemod.ml[669,24125+7]..[669,24125+31])
                                      expression (typing/typemod.ml[670,24162+6]..[671,24231+30])
                                        Pexp_apply
                                        expression (typing/typemod.ml[670,24162+6]..[670,24162+36])
                                          Pexp_ident "check_usage_after_substitution" (typing/typemod.ml[670,24162+6]..[670,24162+36])
                                        [
                                          <arg>
                                          Labelled "loc"
                                            expression (typing/typemod.ml[670,24162+38]..[670,24162+41])
                                              Pexp_ident "loc" (typing/typemod.ml[670,24162+38]..[670,24162+41])
                                          <arg>
                                          Labelled "lid"
                                            expression (typing/typemod.ml[670,24162+43]..[670,24162+46])
                                              Pexp_ident "lid" (typing/typemod.ml[670,24162+43]..[670,24162+46])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[670,24162+47]..[670,24162+58])
                                              Pexp_ident "initial_env" (typing/typemod.ml[670,24162+47]..[670,24162+58])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[670,24162+59]..[670,24162+68])
                                              Pexp_apply
                                              expression (typing/typemod.ml[670,24162+59]..[670,24162+60])
                                                Pexp_ident "!" (typing/typemod.ml[670,24162+59]..[670,24162+60])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[670,24162+60]..[670,24162+68])
                                                    Pexp_ident "real_ids" (typing/typemod.ml[670,24162+60]..[670,24162+68])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[671,24231+8]..[671,24231+27])
                                              Pexp_apply
                                              expression (typing/typemod.ml[671,24231+8]..[671,24231+9])
                                                Pexp_ident "!" (typing/typemod.ml[671,24231+8]..[671,24231+9])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[671,24231+9]..[671,24231+27])
                                                    Pexp_ident "unpackable_modtype" (typing/typemod.ml[671,24231+9]..[671,24231+27])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[671,24231+28]..[671,24231+30])
                                              Pexp_ident "sg" (typing/typemod.ml[671,24231+28]..[671,24231+30])
                                        ]
                                      None
                                    expression (typing/typemod.ml[672,24263+4]..[723,26388+15])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[672,24263+8]..[672,24263+10])
                                            Ppat_var "sg" (typing/typemod.ml[672,24263+8]..[672,24263+10])
                                          expression (typing/typemod.ml[673,24276+4]..[719,26270+9])
                                            Pexp_match
                                            expression (typing/typemod.ml[673,24276+10]..[673,24276+15])
                                              Pexp_ident "tcstr" (typing/typemod.ml[673,24276+10]..[673,24276+15])
                                            [
                                              <case>
                                                pattern (typing/typemod.ml[674,24297+6]..[674,24297+35])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typemod.ml[674,24297+7]..[674,24297+8])
                                                      Ppat_any
                                                    pattern (typing/typemod.ml[674,24297+10]..[674,24297+11])
                                                      Ppat_any
                                                    pattern (typing/typemod.ml[674,24297+13]..[674,24297+34])
                                                      Ppat_construct "Twith_typesubst" (typing/typemod.ml[674,24297+13]..[674,24297+28])
                                                      Some
                                                        []
                                                        pattern (typing/typemod.ml[674,24297+29]..[674,24297+34])
                                                          Ppat_var "tdecl" (typing/typemod.ml[674,24297+29]..[674,24297+34])
                                                  ]
                                                expression (typing/typemod.ml[675,24336+7]..[702,25593+40])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typemod.ml[675,24336+11]..[675,24336+30])
                                                        Ppat_var "how_to_extend_subst" (typing/typemod.ml[675,24336+11]..[675,24336+30])
                                                      expression (typing/typemod.ml[676,24369+9]..[694,25091+70])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (typing/typemod.ml[676,24369+13]..[676,24369+18])
                                                              Ppat_var "sdecl" (typing/typemod.ml[676,24369+13]..[676,24369+18])
                                                            expression (typing/typemod.ml[677,24390+11]..[679,24462+30])
                                                              Pexp_match
                                                              expression (typing/typemod.ml[677,24390+17]..[677,24390+23])
                                                                Pexp_ident "constr" (typing/typemod.ml[677,24390+17]..[677,24390+23])
                                                              [
                                                                <case>
                                                                  pattern (typing/typemod.ml[678,24419+13]..[678,24419+33])
                                                                    Ppat_construct "With_typesubst" (typing/typemod.ml[678,24419+13]..[678,24419+27])
                                                                    Some
                                                                      []
                                                                      pattern (typing/typemod.ml[678,24419+28]..[678,24419+33])
Ppat_var "sdecl" (typing/typemod.ml[678,24419+28]..[678,24419+33])
                                                                  expression (typing/typemod.ml[678,24419+37]..[678,24419+42])
                                                                    Pexp_ident "sdecl" (typing/typemod.ml[678,24419+37]..[678,24419+42])
                                                                <case>
                                                                  pattern (typing/typemod.ml[679,24462+13]..[679,24462+14])
                                                                    Ppat_any
                                                                  expression (typing/typemod.ml[679,24462+18]..[679,24462+30])
                                                                    Pexp_assert
                                                                    expression (typing/typemod.ml[679,24462+25]..[679,24462+30])
                                                                      Pexp_construct "false" (typing/typemod.ml[679,24462+25]..[679,24462+30])
                                                                      None
                                                              ]
                                                        ]
                                                        expression (typing/typemod.ml[681,24505+9]..[694,25091+70])
                                                          Pexp_match
                                                          expression (typing/typemod.ml[681,24505+15]..[681,24505+39])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[681,24505+15]..[681,24505+33])
                                                              Pexp_ident "type_decl_is_alias" (typing/typemod.ml[681,24505+15]..[681,24505+33])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[681,24505+34]..[681,24505+39])
                                                                  Pexp_ident "sdecl" (typing/typemod.ml[681,24505+34]..[681,24505+39])
                                                            ]
                                                          [
                                                            <case>
                                                              pattern (typing/typemod.ml[682,24550+11]..[682,24550+19])
                                                                Ppat_construct "Some" (typing/typemod.ml[682,24550+11]..[682,24550+15])
                                                                Some
                                                                  []
                                                                  pattern (typing/typemod.ml[682,24550+16]..[682,24550+19])
                                                                    Ppat_var "lid" (typing/typemod.ml[682,24550+16]..[682,24550+19])
                                                              expression (typing/typemod.ml[683,24573+12]..[687,24726+64])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (typing/typemod.ml[683,24573+16]..[683,24573+30])
                                                                      Ppat_tuple
                                                                      [
pattern (typing/typemod.ml[683,24573+16]..[683,24573+27])
  Ppat_var "replacement" (typing/typemod.ml[683,24573+16]..[683,24573+27])
pattern (typing/typemod.ml[683,24573+29]..[683,24573+30])
  Ppat_any
                                                                      ]
                                                                    expression (typing/typemod.ml[684,24606+14]..[685,24666+44])
                                                                      Pexp_try
                                                                      expression (typing/typemod.ml[684,24606+18]..[684,24606+59])
Pexp_apply
expression (typing/typemod.ml[684,24606+18]..[684,24606+39])
  Pexp_ident "Env.find_type_by_name" (typing/typemod.ml[684,24606+18]..[684,24606+39])
[
  <arg>
  Nolabel
    expression (typing/typemod.ml[684,24606+40]..[684,24606+47])
      Pexp_field
      expression (typing/typemod.ml[684,24606+40]..[684,24606+43])
        Pexp_ident "lid" (typing/typemod.ml[684,24606+40]..[684,24606+43])
      "txt" (typing/typemod.ml[684,24606+44]..[684,24606+47])
  <arg>
  Nolabel
    expression (typing/typemod.ml[684,24606+48]..[684,24606+59])
      Pexp_ident "initial_env" (typing/typemod.ml[684,24606+48]..[684,24606+59])
]
                                                                      [
<case>
  pattern (typing/typemod.ml[685,24666+19]..[685,24666+28])
    Ppat_construct "Not_found" (typing/typemod.ml[685,24666+19]..[685,24666+28])
    None
  expression (typing/typemod.ml[685,24666+32]..[685,24666+44])
    Pexp_assert
    expression (typing/typemod.ml[685,24666+39]..[685,24666+44])
      Pexp_construct "false" (typing/typemod.ml[685,24666+39]..[685,24666+44])
      None
                                                                      ]
                                                                ]
                                                                expression (typing/typemod.ml[687,24726+12]..[687,24726+64])
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (typing/typemod.ml[687,24726+16]..[687,24726+17])
                                                                    Ppat_var "s" (typing/typemod.ml[687,24726+16]..[687,24726+17])
                                                                  expression (typing/typemod.ml[687,24726+18]..[687,24726+64]) ghost
                                                                    Pexp_fun
                                                                    Nolabel
                                                                    None
                                                                    pattern (typing/typemod.ml[687,24726+18]..[687,24726+22])
                                                                      Ppat_var "path" (typing/typemod.ml[687,24726+18]..[687,24726+22])
                                                                    expression (typing/typemod.ml[687,24726+26]..[687,24726+64])
                                                                      Pexp_apply
                                                                      expression (typing/typemod.ml[687,24726+26]..[687,24726+45])
Pexp_ident "Subst.add_type_path" (typing/typemod.ml[687,24726+26]..[687,24726+45])
                                                                      [
<arg>
Nolabel
  expression (typing/typemod.ml[687,24726+46]..[687,24726+50])
    Pexp_ident "path" (typing/typemod.ml[687,24726+46]..[687,24726+50])
<arg>
Nolabel
  expression (typing/typemod.ml[687,24726+51]..[687,24726+62])
    Pexp_ident "replacement" (typing/typemod.ml[687,24726+51]..[687,24726+62])
<arg>
Nolabel
  expression (typing/typemod.ml[687,24726+63]..[687,24726+64])
    Pexp_ident "s" (typing/typemod.ml[687,24726+63]..[687,24726+64])
                                                                      ]
                                                            <case>
                                                              pattern (typing/typemod.ml[688,24791+11]..[688,24791+15])
                                                                Ppat_construct "None" (typing/typemod.ml[688,24791+11]..[688,24791+15])
                                                                None
                                                              expression (typing/typemod.ml[689,24810+12]..[694,25091+70])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (typing/typemod.ml[689,24810+16]..[689,24810+20])
                                                                      Ppat_var "body" (typing/typemod.ml[689,24810+16]..[689,24810+20])
                                                                    expression (typing/typemod.ml[689,24810+23]..[689,24810+62])
                                                                      Pexp_apply
                                                                      expression (typing/typemod.ml[689,24810+23]..[689,24810+33])
Pexp_ident "Option.get" (typing/typemod.ml[689,24810+23]..[689,24810+33])
                                                                      [
<arg>
Nolabel
  expression (typing/typemod.ml[689,24810+34]..[689,24810+62])
    Pexp_field
    expression (typing/typemod.ml[689,24810+34]..[689,24810+48])
      Pexp_field
      expression (typing/typemod.ml[689,24810+34]..[689,24810+39])
        Pexp_ident "tdecl" (typing/typemod.ml[689,24810+34]..[689,24810+39])
      "typ_type" (typing/typemod.ml[689,24810+40]..[689,24810+48])
    "type_manifest" (typing/typemod.ml[689,24810+49]..[689,24810+62])
                                                                      ]
                                                                ]
                                                                expression (typing/typemod.ml[690,24876+12]..[694,25091+70])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (typing/typemod.ml[690,24876+16]..[690,24876+22])
Ppat_var "params" (typing/typemod.ml[690,24876+16]..[690,24876+22])
                                                                      expression (typing/typemod.ml[690,24876+25]..[690,24876+51])
Pexp_field
expression (typing/typemod.ml[690,24876+25]..[690,24876+39])
  Pexp_field
  expression (typing/typemod.ml[690,24876+25]..[690,24876+30])
    Pexp_ident "tdecl" (typing/typemod.ml[690,24876+25]..[690,24876+30])
  "typ_type" (typing/typemod.ml[690,24876+31]..[690,24876+39])
"type_params" (typing/typemod.ml[690,24876+40]..[690,24876+51])
                                                                  ]
                                                                  expression (typing/typemod.ml[691,24931+12]..[694,25091+70])
                                                                    Pexp_sequence
                                                                    expression (typing/typemod.ml[691,24931+12]..[693,25023+66])
                                                                      Pexp_ifthenelse
                                                                      expression (typing/typemod.ml[691,24931+15]..[691,24931+44])
Pexp_apply
expression (typing/typemod.ml[691,24931+15]..[691,24931+37])
  Pexp_ident "params_are_constrained" (typing/typemod.ml[691,24931+15]..[691,24931+37])
[
  <arg>
  Nolabel
    expression (typing/typemod.ml[691,24931+38]..[691,24931+44])
      Pexp_ident "params" (typing/typemod.ml[691,24931+38]..[691,24931+44])
]
                                                                      expression (typing/typemod.ml[692,24976+17]..[693,25023+66])
Pexp_apply
expression (typing/typemod.ml[692,24976+17]..[692,24976+22])
  Pexp_ident "raise" (typing/typemod.ml[692,24976+17]..[692,24976+22])
[
  <arg>
  Nolabel
    expression (typing/typemod.ml[692,24976+22]..[693,25023+66])
      Pexp_construct "Error" (typing/typemod.ml[692,24976+23]..[692,24976+28])
      Some
        expression (typing/typemod.ml[692,24976+28]..[693,25023+65])
          Pexp_tuple
          [
            expression (typing/typemod.ml[692,24976+29]..[692,24976+32])
              Pexp_ident "loc" (typing/typemod.ml[692,24976+29]..[692,24976+32])
            expression (typing/typemod.ml[692,24976+34]..[692,24976+45])
              Pexp_ident "initial_env" (typing/typemod.ml[692,24976+34]..[692,24976+45])
            expression (typing/typemod.ml[693,25023+29]..[693,25023+64])
              Pexp_construct "With_cannot_remove_constrained_type" (typing/typemod.ml[693,25023+29]..[693,25023+64])
              None
          ]
]
                                                                      None
                                                                    expression (typing/typemod.ml[694,25091+12]..[694,25091+70])
                                                                      Pexp_fun
                                                                      Nolabel
                                                                      None
                                                                      pattern (typing/typemod.ml[694,25091+16]..[694,25091+17])
Ppat_var "s" (typing/typemod.ml[694,25091+16]..[694,25091+17])
                                                                      expression (typing/typemod.ml[694,25091+18]..[694,25091+70]) ghost
Pexp_fun
Nolabel
None
pattern (typing/typemod.ml[694,25091+18]..[694,25091+22])
  Ppat_var "path" (typing/typemod.ml[694,25091+18]..[694,25091+22])
expression (typing/typemod.ml[694,25091+26]..[694,25091+70])
  Pexp_apply
  expression (typing/typemod.ml[694,25091+26]..[694,25091+49])
    Pexp_ident "Subst.add_type_function" (typing/typemod.ml[694,25091+26]..[694,25091+49])
  [
    <arg>
    Nolabel
      expression (typing/typemod.ml[694,25091+50]..[694,25091+54])
        Pexp_ident "path" (typing/typemod.ml[694,25091+50]..[694,25091+54])
    <arg>
    Labelled "params"
      expression (typing/typemod.ml[694,25091+56]..[694,25091+62])
        Pexp_ident "params" (typing/typemod.ml[694,25091+56]..[694,25091+62])
    <arg>
    Labelled "body"
      expression (typing/typemod.ml[694,25091+64]..[694,25091+68])
        Pexp_ident "body" (typing/typemod.ml[694,25091+64]..[694,25091+68])
    <arg>
    Nolabel
      expression (typing/typemod.ml[694,25091+69]..[694,25091+70])
        Pexp_ident "s" (typing/typemod.ml[694,25091+69]..[694,25091+70])
  ]
                                                          ]
                                                  ]
                                                  expression (typing/typemod.ml[696,25172+7]..[702,25593+40])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typemod.ml[696,25172+11]..[696,25172+14])
                                                          Ppat_var "sub" (typing/typemod.ml[696,25172+11]..[696,25172+14])
                                                        expression (typing/typemod.ml[696,25172+17]..[696,25172+53])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[696,25172+17]..[696,25172+34])
                                                            Pexp_ident "Subst.change_locs" (typing/typemod.ml[696,25172+17]..[696,25172+34])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[696,25172+35]..[696,25172+49])
                                                                Pexp_ident "Subst.identity" (typing/typemod.ml[696,25172+35]..[696,25172+49])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[696,25172+50]..[696,25172+53])
                                                                Pexp_ident "loc" (typing/typemod.ml[696,25172+50]..[696,25172+53])
                                                          ]
                                                    ]
                                                    expression (typing/typemod.ml[697,25229+7]..[702,25593+40])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typemod.ml[697,25229+11]..[697,25229+14])
                                                            Ppat_var "sub" (typing/typemod.ml[697,25229+11]..[697,25229+14])
                                                          expression (typing/typemod.ml[697,25229+17]..[697,25229+65])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[697,25229+17]..[697,25229+31])
                                                              Pexp_ident "List.fold_left" (typing/typemod.ml[697,25229+17]..[697,25229+31])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[697,25229+32]..[697,25229+51])
                                                                  Pexp_ident "how_to_extend_subst" (typing/typemod.ml[697,25229+32]..[697,25229+51])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[697,25229+52]..[697,25229+55])
                                                                  Pexp_ident "sub" (typing/typemod.ml[697,25229+52]..[697,25229+55])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[697,25229+56]..[697,25229+65])
                                                                  Pexp_apply
                                                                  expression (typing/typemod.ml[697,25229+56]..[697,25229+57])
                                                                    Pexp_ident "!" (typing/typemod.ml[697,25229+56]..[697,25229+57])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[697,25229+57]..[697,25229+65])
Pexp_ident "real_ids" (typing/typemod.ml[697,25229+57]..[697,25229+65])
                                                                  ]
                                                            ]
                                                      ]
                                                      expression (typing/typemod.ml[702,25593+7]..[702,25593+40])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[702,25593+7]..[702,25593+22])
                                                          Pexp_ident "Subst.signature" (typing/typemod.ml[702,25593+7]..[702,25593+22])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[702,25593+23]..[702,25593+33])
                                                              Pexp_construct "Make_local" (typing/typemod.ml[702,25593+23]..[702,25593+33])
                                                              None
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[702,25593+34]..[702,25593+37])
                                                              Pexp_ident "sub" (typing/typemod.ml[702,25593+34]..[702,25593+37])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[702,25593+38]..[702,25593+40])
                                                              Pexp_ident "sg" (typing/typemod.ml[702,25593+38]..[702,25593+40])
                                                        ]
                                              <case>
                                                pattern (typing/typemod.ml[703,25634+6]..[703,25634+43])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typemod.ml[703,25634+7]..[703,25634+8])
                                                      Ppat_any
                                                    pattern (typing/typemod.ml[703,25634+10]..[703,25634+11])
                                                      Ppat_any
                                                    pattern (typing/typemod.ml[703,25634+13]..[703,25634+42])
                                                      Ppat_construct "Twith_modsubst" (typing/typemod.ml[703,25634+13]..[703,25634+27])
                                                      Some
                                                        []
                                                        pattern (typing/typemod.ml[703,25634+28]..[703,25634+42])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/typemod.ml[703,25634+29]..[703,25634+38])
                                                              Ppat_var "real_path" (typing/typemod.ml[703,25634+29]..[703,25634+38])
                                                            pattern (typing/typemod.ml[703,25634+40]..[703,25634+41])
                                                              Ppat_any
                                                          ]
                                                  ]
                                                expression (typing/typemod.ml[704,25681+7]..[712,25957+40])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typemod.ml[704,25681+11]..[704,25681+14])
                                                        Ppat_var "sub" (typing/typemod.ml[704,25681+11]..[704,25681+14])
                                                      expression (typing/typemod.ml[704,25681+17]..[704,25681+53])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[704,25681+17]..[704,25681+34])
                                                          Pexp_ident "Subst.change_locs" (typing/typemod.ml[704,25681+17]..[704,25681+34])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[704,25681+35]..[704,25681+49])
                                                              Pexp_ident "Subst.identity" (typing/typemod.ml[704,25681+35]..[704,25681+49])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[704,25681+50]..[704,25681+53])
                                                              Pexp_ident "loc" (typing/typemod.ml[704,25681+50]..[704,25681+53])
                                                        ]
                                                  ]
                                                  expression (typing/typemod.ml[705,25738+7]..[712,25957+40])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typemod.ml[705,25738+11]..[705,25738+14])
                                                          Ppat_var "sub" (typing/typemod.ml[705,25738+11]..[705,25738+14])
                                                        expression (typing/typemod.ml[706,25755+9]..[709,25860+20])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[706,25755+9]..[706,25755+23])
                                                            Pexp_ident "List.fold_left" (typing/typemod.ml[706,25755+9]..[706,25755+23])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[707,25779+11]..[707,25779+65])
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (typing/typemod.ml[707,25779+16]..[707,25779+17])
                                                                  Ppat_var "s" (typing/typemod.ml[707,25779+16]..[707,25779+17])
                                                                expression (typing/typemod.ml[707,25779+18]..[707,25779+64]) ghost
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (typing/typemod.ml[707,25779+18]..[707,25779+22])
                                                                    Ppat_var "path" (typing/typemod.ml[707,25779+18]..[707,25779+22])
                                                                  expression (typing/typemod.ml[707,25779+26]..[707,25779+64])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[707,25779+26]..[707,25779+47])
                                                                      Pexp_ident "Subst.add_module_path" (typing/typemod.ml[707,25779+26]..[707,25779+47])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[707,25779+48]..[707,25779+52])
  Pexp_ident "path" (typing/typemod.ml[707,25779+48]..[707,25779+52])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[707,25779+53]..[707,25779+62])
  Pexp_ident "real_path" (typing/typemod.ml[707,25779+53]..[707,25779+62])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[707,25779+63]..[707,25779+64])
  Pexp_ident "s" (typing/typemod.ml[707,25779+63]..[707,25779+64])
                                                                    ]
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[708,25845+11]..[708,25845+14])
                                                                Pexp_ident "sub" (typing/typemod.ml[708,25845+11]..[708,25845+14])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[709,25860+11]..[709,25860+20])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[709,25860+11]..[709,25860+12])
                                                                  Pexp_ident "!" (typing/typemod.ml[709,25860+11]..[709,25860+12])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[709,25860+12]..[709,25860+20])
                                                                      Pexp_ident "real_ids" (typing/typemod.ml[709,25860+12]..[709,25860+20])
                                                                ]
                                                          ]
                                                    ]
                                                    expression (typing/typemod.ml[712,25957+7]..[712,25957+40])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[712,25957+7]..[712,25957+22])
                                                        Pexp_ident "Subst.signature" (typing/typemod.ml[712,25957+7]..[712,25957+22])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[712,25957+23]..[712,25957+33])
                                                            Pexp_construct "Make_local" (typing/typemod.ml[712,25957+23]..[712,25957+33])
                                                            None
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[712,25957+34]..[712,25957+37])
                                                            Pexp_ident "sub" (typing/typemod.ml[712,25957+34]..[712,25957+37])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[712,25957+38]..[712,25957+40])
                                                            Pexp_ident "sg" (typing/typemod.ml[712,25957+38]..[712,25957+40])
                                                      ]
                                              <case>
                                                pattern (typing/typemod.ml[713,25998+6]..[713,25998+37])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typemod.ml[713,25998+7]..[713,25998+8])
                                                      Ppat_any
                                                    pattern (typing/typemod.ml[713,25998+10]..[713,25998+11])
                                                      Ppat_any
                                                    pattern (typing/typemod.ml[713,25998+13]..[713,25998+36])
                                                      Ppat_construct "Twith_modtypesubst" (typing/typemod.ml[713,25998+13]..[713,25998+31])
                                                      Some
                                                        []
                                                        pattern (typing/typemod.ml[713,25998+32]..[713,25998+36])
                                                          Ppat_var "tmty" (typing/typemod.ml[713,25998+32]..[713,25998+36])
                                                  ]
                                                expression (typing/typemod.ml[714,26039+8]..[717,26217+41])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typemod.ml[714,26039+12]..[714,26039+15])
                                                        Ppat_var "add" (typing/typemod.ml[714,26039+12]..[714,26039+15])
                                                      expression (typing/typemod.ml[714,26039+16]..[714,26039+62]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (typing/typemod.ml[714,26039+16]..[714,26039+17])
                                                          Ppat_var "s" (typing/typemod.ml[714,26039+16]..[714,26039+17])
                                                        expression (typing/typemod.ml[714,26039+18]..[714,26039+62]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (typing/typemod.ml[714,26039+18]..[714,26039+19])
                                                            Ppat_var "p" (typing/typemod.ml[714,26039+18]..[714,26039+19])
                                                          expression (typing/typemod.ml[714,26039+22]..[714,26039+62])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[714,26039+22]..[714,26039+44])
                                                              Pexp_ident "Subst.add_modtype_path" (typing/typemod.ml[714,26039+22]..[714,26039+44])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[714,26039+45]..[714,26039+46])
                                                                  Pexp_ident "p" (typing/typemod.ml[714,26039+45]..[714,26039+46])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[714,26039+47]..[714,26039+60])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[714,26039+47]..[714,26039+51])
                                                                    Pexp_ident "tmty" (typing/typemod.ml[714,26039+47]..[714,26039+51])
                                                                  "mty_type" (typing/typemod.ml[714,26039+52]..[714,26039+60])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[714,26039+61]..[714,26039+62])
                                                                  Pexp_ident "s" (typing/typemod.ml[714,26039+61]..[714,26039+62])
                                                            ]
                                                  ]
                                                  expression (typing/typemod.ml[715,26105+8]..[717,26217+41])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typemod.ml[715,26105+12]..[715,26105+15])
                                                          Ppat_var "sub" (typing/typemod.ml[715,26105+12]..[715,26105+15])
                                                        expression (typing/typemod.ml[715,26105+18]..[715,26105+54])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[715,26105+18]..[715,26105+35])
                                                            Pexp_ident "Subst.change_locs" (typing/typemod.ml[715,26105+18]..[715,26105+35])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[715,26105+36]..[715,26105+50])
                                                                Pexp_ident "Subst.identity" (typing/typemod.ml[715,26105+36]..[715,26105+50])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[715,26105+51]..[715,26105+54])
                                                                Pexp_ident "loc" (typing/typemod.ml[715,26105+51]..[715,26105+54])
                                                          ]
                                                    ]
                                                    expression (typing/typemod.ml[716,26163+8]..[717,26217+41])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typemod.ml[716,26163+12]..[716,26163+15])
                                                            Ppat_var "sub" (typing/typemod.ml[716,26163+12]..[716,26163+15])
                                                          expression (typing/typemod.ml[716,26163+18]..[716,26163+50])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[716,26163+18]..[716,26163+32])
                                                              Pexp_ident "List.fold_left" (typing/typemod.ml[716,26163+18]..[716,26163+32])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[716,26163+33]..[716,26163+36])
                                                                  Pexp_ident "add" (typing/typemod.ml[716,26163+33]..[716,26163+36])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[716,26163+37]..[716,26163+40])
                                                                  Pexp_ident "sub" (typing/typemod.ml[716,26163+37]..[716,26163+40])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[716,26163+41]..[716,26163+50])
                                                                  Pexp_apply
                                                                  expression (typing/typemod.ml[716,26163+41]..[716,26163+42])
                                                                    Pexp_ident "!" (typing/typemod.ml[716,26163+41]..[716,26163+42])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[716,26163+42]..[716,26163+50])
Pexp_ident "real_ids" (typing/typemod.ml[716,26163+42]..[716,26163+50])
                                                                  ]
                                                            ]
                                                      ]
                                                      expression (typing/typemod.ml[717,26217+8]..[717,26217+41])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[717,26217+8]..[717,26217+23])
                                                          Pexp_ident "Subst.signature" (typing/typemod.ml[717,26217+8]..[717,26217+23])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[717,26217+24]..[717,26217+34])
                                                              Pexp_construct "Make_local" (typing/typemod.ml[717,26217+24]..[717,26217+34])
                                                              None
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[717,26217+35]..[717,26217+38])
                                                              Pexp_ident "sub" (typing/typemod.ml[717,26217+35]..[717,26217+38])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[717,26217+39]..[717,26217+41])
                                                              Pexp_ident "sg" (typing/typemod.ml[717,26217+39]..[717,26217+41])
                                                        ]
                                              <case>
                                                pattern (typing/typemod.ml[718,26259+6]..[718,26259+7])
                                                  Ppat_any
                                                expression (typing/typemod.ml[719,26270+7]..[719,26270+9])
                                                  Pexp_ident "sg" (typing/typemod.ml[719,26270+7]..[719,26270+9])
                                            ]
                                      ]
                                      expression (typing/typemod.ml[721,26287+4]..[723,26388+15])
                                        Pexp_sequence
                                        expression (typing/typemod.ml[721,26287+4]..[722,26362+24])
                                          Pexp_apply
                                          expression (typing/typemod.ml[721,26287+4]..[721,26287+28])
                                            Pexp_ident "check_well_formed_module" (typing/typemod.ml[721,26287+4]..[721,26287+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[721,26287+29]..[721,26287+40])
                                                Pexp_ident "initial_env" (typing/typemod.ml[721,26287+29]..[721,26287+40])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[721,26287+41]..[721,26287+44])
                                                Pexp_ident "loc" (typing/typemod.ml[721,26287+41]..[721,26287+44])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[721,26287+45]..[721,26287+74])
                                                Pexp_constant PConst_string("this instantiated signature",(typing/typemod.ml[721,26287+46]..[721,26287+73]),None)
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[722,26362+6]..[722,26362+24])
                                                Pexp_construct "Mty_signature" (typing/typemod.ml[722,26362+7]..[722,26362+20])
                                                Some
                                                  expression (typing/typemod.ml[722,26362+21]..[722,26362+23])
                                                    Pexp_ident "sg" (typing/typemod.ml[722,26362+21]..[722,26362+23])
                                          ]
                                        expression (typing/typemod.ml[723,26388+4]..[723,26388+15])
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[723,26388+5]..[723,26388+10])
                                              Pexp_ident "tcstr" (typing/typemod.ml[723,26388+5]..[723,26388+10])
                                            expression (typing/typemod.ml[723,26388+12]..[723,26388+14])
                                              Pexp_ident "sg" (typing/typemod.ml[723,26388+12]..[723,26388+14])
                                          ]
                              [
                                <case>
                                  pattern (typing/typemod.ml[724,26404+7]..[724,26404+35])
                                    Ppat_construct "Includemod.Error" (typing/typemod.ml[724,26404+7]..[724,26404+23])
                                    Some
                                      []
                                      pattern (typing/typemod.ml[724,26404+24]..[724,26404+35])
                                        Ppat_var "explanation" (typing/typemod.ml[724,26404+24]..[724,26404+35])
                                  expression (typing/typemod.ml[725,26443+4]..[725,26443+71])
                                    Pexp_apply
                                    expression (typing/typemod.ml[725,26443+4]..[725,26443+9])
                                      Pexp_ident "raise" (typing/typemod.ml[725,26443+4]..[725,26443+9])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[725,26443+9]..[725,26443+71])
                                          Pexp_construct "Error" (typing/typemod.ml[725,26443+10]..[725,26443+15])
                                          Some
                                            expression (typing/typemod.ml[725,26443+15]..[725,26443+70])
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[725,26443+16]..[725,26443+19])
                                                  Pexp_ident "loc" (typing/typemod.ml[725,26443+16]..[725,26443+19])
                                                expression (typing/typemod.ml[725,26443+21]..[725,26443+32])
                                                  Pexp_ident "initial_env" (typing/typemod.ml[725,26443+21]..[725,26443+32])
                                                expression (typing/typemod.ml[725,26443+34]..[725,26443+69])
                                                  Pexp_construct "With_mismatch" (typing/typemod.ml[725,26443+34]..[725,26443+47])
                                                  Some
                                                    expression (typing/typemod.ml[725,26443+47]..[725,26443+69])
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typemod.ml[725,26443+48]..[725,26443+55])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[725,26443+48]..[725,26443+51])
                                                            Pexp_ident "lid" (typing/typemod.ml[725,26443+48]..[725,26443+51])
                                                          "txt" (typing/typemod.ml[725,26443+52]..[725,26443+55])
                                                        expression (typing/typemod.ml[725,26443+57]..[725,26443+68])
                                                          Pexp_ident "explanation" (typing/typemod.ml[725,26443+57]..[725,26443+68])
                                                      ]
                                              ]
                                    ]
                              ]
    ]
  structure_item (typing/typemod.ml[730,26603+0]..[733,26663+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[730,26603+4]..[730,26603+11])
          Ppat_var "map_rec" (typing/typemod.ml[730,26603+4]..[730,26603+11])
        expression (typing/typemod.ml[730,26603+12]..[733,26663+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[730,26603+12]..[730,26603+14])
            Ppat_var "fn" (typing/typemod.ml[730,26603+12]..[730,26603+14])
          expression (typing/typemod.ml[730,26603+15]..[733,26663+65]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[730,26603+15]..[730,26603+20])
              Ppat_var "decls" (typing/typemod.ml[730,26603+15]..[730,26603+20])
            expression (typing/typemod.ml[730,26603+21]..[733,26663+65]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[730,26603+21]..[730,26603+24])
                Ppat_var "rem" (typing/typemod.ml[730,26603+21]..[730,26603+24])
              expression (typing/typemod.ml[731,26630+2]..[733,26663+65])
                Pexp_match
                expression (typing/typemod.ml[731,26630+8]..[731,26630+13])
                  Pexp_ident "decls" (typing/typemod.ml[731,26630+8]..[731,26630+13])
                [
                  <case>
                    pattern (typing/typemod.ml[732,26649+4]..[732,26649+6])
                      Ppat_construct "[]" (typing/typemod.ml[732,26649+4]..[732,26649+6])
                      None
                    expression (typing/typemod.ml[732,26649+10]..[732,26649+13])
                      Pexp_ident "rem" (typing/typemod.ml[732,26649+10]..[732,26649+13])
                  <case>
                    pattern (typing/typemod.ml[733,26663+4]..[733,26663+12])
                      Ppat_construct "::" (typing/typemod.ml[733,26663+7]..[733,26663+9])
                      Some
                        []
                        pattern (typing/typemod.ml[733,26663+4]..[733,26663+12]) ghost
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[733,26663+4]..[733,26663+6])
                              Ppat_var "d1" (typing/typemod.ml[733,26663+4]..[733,26663+6])
                            pattern (typing/typemod.ml[733,26663+10]..[733,26663+12])
                              Ppat_var "dl" (typing/typemod.ml[733,26663+10]..[733,26663+12])
                          ]
                    expression (typing/typemod.ml[733,26663+16]..[733,26663+65])
                      Pexp_construct "::" (typing/typemod.ml[733,26663+33]..[733,26663+35])
                      Some
                        expression (typing/typemod.ml[733,26663+16]..[733,26663+65]) ghost
                          Pexp_tuple
                          [
                            expression (typing/typemod.ml[733,26663+16]..[733,26663+32])
                              Pexp_apply
                              expression (typing/typemod.ml[733,26663+16]..[733,26663+18])
                                Pexp_ident "fn" (typing/typemod.ml[733,26663+16]..[733,26663+18])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[733,26663+19]..[733,26663+29])
                                    Pexp_construct "Trec_first" (typing/typemod.ml[733,26663+19]..[733,26663+29])
                                    None
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[733,26663+30]..[733,26663+32])
                                    Pexp_ident "d1" (typing/typemod.ml[733,26663+30]..[733,26663+32])
                              ]
                            expression (typing/typemod.ml[733,26663+36]..[733,26663+65])
                              Pexp_apply
                              expression (typing/typemod.ml[733,26663+36]..[733,26663+43])
                                Pexp_ident "map_end" (typing/typemod.ml[733,26663+36]..[733,26663+43])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[733,26663+44]..[733,26663+58])
                                    Pexp_apply
                                    expression (typing/typemod.ml[733,26663+45]..[733,26663+47])
                                      Pexp_ident "fn" (typing/typemod.ml[733,26663+45]..[733,26663+47])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[733,26663+48]..[733,26663+57])
                                          Pexp_construct "Trec_next" (typing/typemod.ml[733,26663+48]..[733,26663+57])
                                          None
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[733,26663+59]..[733,26663+61])
                                    Pexp_ident "dl" (typing/typemod.ml[733,26663+59]..[733,26663+61])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[733,26663+62]..[733,26663+65])
                                    Pexp_ident "rem" (typing/typemod.ml[733,26663+62]..[733,26663+65])
                              ]
                          ]
                ]
    ]
  structure_item (typing/typemod.ml[735,26730+0]..[744,26945+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[735,26730+4]..[735,26730+16])
          Ppat_var "map_rec_type" (typing/typemod.ml[735,26730+4]..[735,26730+16])
        expression (typing/typemod.ml[735,26730+17]..[744,26945+50]) ghost
          Pexp_fun
          Labelled "rec_flag"
          None
          pattern (typing/typemod.ml[735,26730+18]..[735,26730+26])
            Ppat_var "rec_flag" (typing/typemod.ml[735,26730+18]..[735,26730+26])
          expression (typing/typemod.ml[735,26730+27]..[744,26945+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[735,26730+27]..[735,26730+29])
              Ppat_var "fn" (typing/typemod.ml[735,26730+27]..[735,26730+29])
            expression (typing/typemod.ml[735,26730+30]..[744,26945+50]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[735,26730+30]..[735,26730+35])
                Ppat_var "decls" (typing/typemod.ml[735,26730+30]..[735,26730+35])
              expression (typing/typemod.ml[735,26730+36]..[744,26945+50]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[735,26730+36]..[735,26730+39])
                  Ppat_var "rem" (typing/typemod.ml[735,26730+36]..[735,26730+39])
                expression (typing/typemod.ml[736,26772+2]..[744,26945+50])
                  Pexp_match
                  expression (typing/typemod.ml[736,26772+8]..[736,26772+13])
                    Pexp_ident "decls" (typing/typemod.ml[736,26772+8]..[736,26772+13])
                  [
                    <case>
                      pattern (typing/typemod.ml[737,26791+4]..[737,26791+6])
                        Ppat_construct "[]" (typing/typemod.ml[737,26791+4]..[737,26791+6])
                        None
                      expression (typing/typemod.ml[737,26791+10]..[737,26791+13])
                        Pexp_ident "rem" (typing/typemod.ml[737,26791+10]..[737,26791+13])
                    <case>
                      pattern (typing/typemod.ml[738,26805+4]..[738,26805+12])
                        Ppat_construct "::" (typing/typemod.ml[738,26805+7]..[738,26805+9])
                        Some
                          []
                          pattern (typing/typemod.ml[738,26805+4]..[738,26805+12]) ghost
                            Ppat_tuple
                            [
                              pattern (typing/typemod.ml[738,26805+4]..[738,26805+6])
                                Ppat_var "d1" (typing/typemod.ml[738,26805+4]..[738,26805+6])
                              pattern (typing/typemod.ml[738,26805+10]..[738,26805+12])
                                Ppat_var "dl" (typing/typemod.ml[738,26805+10]..[738,26805+12])
                            ]
                      expression (typing/typemod.ml[739,26821+6]..[744,26945+50])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typemod.ml[739,26821+10]..[739,26821+15])
                              Ppat_var "first" (typing/typemod.ml[739,26821+10]..[739,26821+15])
                            expression (typing/typemod.ml[740,26839+8]..[742,26901+34])
                              Pexp_match
                              expression (typing/typemod.ml[740,26839+14]..[740,26839+22])
                                Pexp_ident "rec_flag" (typing/typemod.ml[740,26839+14]..[740,26839+22])
                              [
                                <case>
                                  pattern (typing/typemod.ml[741,26867+10]..[741,26867+19])
                                    Ppat_construct "Recursive" (typing/typemod.ml[741,26867+10]..[741,26867+19])
                                    None
                                  expression (typing/typemod.ml[741,26867+23]..[741,26867+33])
                                    Pexp_construct "Trec_first" (typing/typemod.ml[741,26867+23]..[741,26867+33])
                                    None
                                <case>
                                  pattern (typing/typemod.ml[742,26901+10]..[742,26901+22])
                                    Ppat_construct "Nonrecursive" (typing/typemod.ml[742,26901+10]..[742,26901+22])
                                    None
                                  expression (typing/typemod.ml[742,26901+26]..[742,26901+34])
                                    Pexp_construct "Trec_not" (typing/typemod.ml[742,26901+26]..[742,26901+34])
                                    None
                              ]
                        ]
                        expression (typing/typemod.ml[744,26945+6]..[744,26945+50])
                          Pexp_construct "::" (typing/typemod.ml[744,26945+18]..[744,26945+20])
                          Some
                            expression (typing/typemod.ml[744,26945+6]..[744,26945+50]) ghost
                              Pexp_tuple
                              [
                                expression (typing/typemod.ml[744,26945+6]..[744,26945+17])
                                  Pexp_apply
                                  expression (typing/typemod.ml[744,26945+6]..[744,26945+8])
                                    Pexp_ident "fn" (typing/typemod.ml[744,26945+6]..[744,26945+8])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[744,26945+9]..[744,26945+14])
                                        Pexp_ident "first" (typing/typemod.ml[744,26945+9]..[744,26945+14])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[744,26945+15]..[744,26945+17])
                                        Pexp_ident "d1" (typing/typemod.ml[744,26945+15]..[744,26945+17])
                                  ]
                                expression (typing/typemod.ml[744,26945+21]..[744,26945+50])
                                  Pexp_apply
                                  expression (typing/typemod.ml[744,26945+21]..[744,26945+28])
                                    Pexp_ident "map_end" (typing/typemod.ml[744,26945+21]..[744,26945+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[744,26945+29]..[744,26945+43])
                                        Pexp_apply
                                        expression (typing/typemod.ml[744,26945+30]..[744,26945+32])
                                          Pexp_ident "fn" (typing/typemod.ml[744,26945+30]..[744,26945+32])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[744,26945+33]..[744,26945+42])
                                              Pexp_construct "Trec_next" (typing/typemod.ml[744,26945+33]..[744,26945+42])
                                              None
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[744,26945+44]..[744,26945+46])
                                        Pexp_ident "dl" (typing/typemod.ml[744,26945+44]..[744,26945+46])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[744,26945+47]..[744,26945+50])
                                        Pexp_ident "rem" (typing/typemod.ml[744,26945+47]..[744,26945+50])
                                  ]
                              ]
                  ]
    ]
  structure_item (typing/typemod.ml[746,26997+0]..[753,27247+43])
    Pstr_value Rec
    [
      <def>
        pattern (typing/typemod.ml[746,26997+8]..[746,26997+35])
          Ppat_var "map_rec_type_with_row_types" (typing/typemod.ml[746,26997+8]..[746,26997+35])
        expression (typing/typemod.ml[746,26997+36]..[753,27247+43]) ghost
          Pexp_fun
          Labelled "rec_flag"
          None
          pattern (typing/typemod.ml[746,26997+37]..[746,26997+45])
            Ppat_var "rec_flag" (typing/typemod.ml[746,26997+37]..[746,26997+45])
          expression (typing/typemod.ml[746,26997+46]..[753,27247+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[746,26997+46]..[746,26997+48])
              Ppat_var "fn" (typing/typemod.ml[746,26997+46]..[746,26997+48])
            expression (typing/typemod.ml[746,26997+49]..[753,27247+43]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[746,26997+49]..[746,26997+54])
                Ppat_var "decls" (typing/typemod.ml[746,26997+49]..[746,26997+54])
              expression (typing/typemod.ml[746,26997+55]..[753,27247+43]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[746,26997+55]..[746,26997+58])
                  Ppat_var "rem" (typing/typemod.ml[746,26997+55]..[746,26997+58])
                expression (typing/typemod.ml[747,27058+2]..[753,27247+43])
                  Pexp_match
                  expression (typing/typemod.ml[747,27058+8]..[747,27058+13])
                    Pexp_ident "decls" (typing/typemod.ml[747,27058+8]..[747,27058+13])
                  [
                    <case>
                      pattern (typing/typemod.ml[748,27077+4]..[748,27077+6])
                        Ppat_construct "[]" (typing/typemod.ml[748,27077+4]..[748,27077+6])
                        None
                      expression (typing/typemod.ml[748,27077+10]..[748,27077+13])
                        Pexp_ident "rem" (typing/typemod.ml[748,27077+10]..[748,27077+13])
                    <case>
                      pattern (typing/typemod.ml[749,27091+4]..[749,27091+12])
                        Ppat_construct "::" (typing/typemod.ml[749,27091+7]..[749,27091+9])
                        Some
                          []
                          pattern (typing/typemod.ml[749,27091+4]..[749,27091+12]) ghost
                            Ppat_tuple
                            [
                              pattern (typing/typemod.ml[749,27091+4]..[749,27091+6])
                                Ppat_var "d1" (typing/typemod.ml[749,27091+4]..[749,27091+6])
                              pattern (typing/typemod.ml[749,27091+10]..[749,27091+12])
                                Ppat_var "dl" (typing/typemod.ml[749,27091+10]..[749,27091+12])
                            ]
                      expression (typing/typemod.ml[750,27107+6]..[753,27247+43])
                        Pexp_ifthenelse
                        expression (typing/typemod.ml[750,27107+9]..[750,27107+49])
                          Pexp_apply
                          expression (typing/typemod.ml[750,27107+9]..[750,27107+26])
                            Pexp_ident "Btype.is_row_name" (typing/typemod.ml[750,27107+9]..[750,27107+26])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[750,27107+27]..[750,27107+49])
                                Pexp_apply
                                expression (typing/typemod.ml[750,27107+28]..[750,27107+38])
                                  Pexp_ident "Ident.name" (typing/typemod.ml[750,27107+28]..[750,27107+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[750,27107+39]..[750,27107+48])
                                      Pexp_field
                                      expression (typing/typemod.ml[750,27107+39]..[750,27107+41])
                                        Pexp_ident "d1" (typing/typemod.ml[750,27107+39]..[750,27107+41])
                                      "typ_id" (typing/typemod.ml[750,27107+42]..[750,27107+48])
                                ]
                          ]
                        expression (typing/typemod.ml[751,27162+8]..[751,27162+73])
                          Pexp_construct "::" (typing/typemod.ml[751,27162+23]..[751,27162+25])
                          Some
                            expression (typing/typemod.ml[751,27162+8]..[751,27162+73]) ghost
                              Pexp_tuple
                              [
                                expression (typing/typemod.ml[751,27162+8]..[751,27162+22])
                                  Pexp_apply
                                  expression (typing/typemod.ml[751,27162+8]..[751,27162+10])
                                    Pexp_ident "fn" (typing/typemod.ml[751,27162+8]..[751,27162+10])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[751,27162+11]..[751,27162+19])
                                        Pexp_construct "Trec_not" (typing/typemod.ml[751,27162+11]..[751,27162+19])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[751,27162+20]..[751,27162+22])
                                        Pexp_ident "d1" (typing/typemod.ml[751,27162+20]..[751,27162+22])
                                  ]
                                expression (typing/typemod.ml[751,27162+26]..[751,27162+73])
                                  Pexp_apply
                                  expression (typing/typemod.ml[751,27162+26]..[751,27162+53])
                                    Pexp_ident "map_rec_type_with_row_types" (typing/typemod.ml[751,27162+26]..[751,27162+53])
                                  [
                                    <arg>
                                    Labelled "rec_flag"
                                      expression (typing/typemod.ml[751,27162+55]..[751,27162+63])
                                        Pexp_ident "rec_flag" (typing/typemod.ml[751,27162+55]..[751,27162+63])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[751,27162+64]..[751,27162+66])
                                        Pexp_ident "fn" (typing/typemod.ml[751,27162+64]..[751,27162+66])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[751,27162+67]..[751,27162+69])
                                        Pexp_ident "dl" (typing/typemod.ml[751,27162+67]..[751,27162+69])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[751,27162+70]..[751,27162+73])
                                        Pexp_ident "rem" (typing/typemod.ml[751,27162+70]..[751,27162+73])
                                  ]
                              ]
                        Some
                          expression (typing/typemod.ml[753,27247+8]..[753,27247+43])
                            Pexp_apply
                            expression (typing/typemod.ml[753,27247+8]..[753,27247+20])
                              Pexp_ident "map_rec_type" (typing/typemod.ml[753,27247+8]..[753,27247+20])
                            [
                              <arg>
                              Labelled "rec_flag"
                                expression (typing/typemod.ml[753,27247+22]..[753,27247+30])
                                  Pexp_ident "rec_flag" (typing/typemod.ml[753,27247+22]..[753,27247+30])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[753,27247+31]..[753,27247+33])
                                  Pexp_ident "fn" (typing/typemod.ml[753,27247+31]..[753,27247+33])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[753,27247+34]..[753,27247+39])
                                  Pexp_ident "decls" (typing/typemod.ml[753,27247+34]..[753,27247+39])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[753,27247+40]..[753,27247+43])
                                  Pexp_ident "rem" (typing/typemod.ml[753,27247+40]..[753,27247+43])
                            ]
                  ]
    ]
  structure_item (typing/typemod.ml[756,27349+0]..[759,27407+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[756,27349+4]..[756,27349+11])
          Ppat_var "map_ext" (typing/typemod.ml[756,27349+4]..[756,27349+11])
        expression (typing/typemod.ml[756,27349+12]..[759,27407+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[756,27349+12]..[756,27349+14])
            Ppat_var "fn" (typing/typemod.ml[756,27349+12]..[756,27349+14])
          expression (typing/typemod.ml[756,27349+15]..[759,27407+65]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[756,27349+15]..[756,27349+19])
              Ppat_var "exts" (typing/typemod.ml[756,27349+15]..[756,27349+19])
            expression (typing/typemod.ml[756,27349+20]..[759,27407+65]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[756,27349+20]..[756,27349+23])
                Ppat_var "rem" (typing/typemod.ml[756,27349+20]..[756,27349+23])
              expression (typing/typemod.ml[757,27375+2]..[759,27407+65])
                Pexp_match
                expression (typing/typemod.ml[757,27375+8]..[757,27375+12])
                  Pexp_ident "exts" (typing/typemod.ml[757,27375+8]..[757,27375+12])
                [
                  <case>
                    pattern (typing/typemod.ml[758,27393+4]..[758,27393+6])
                      Ppat_construct "[]" (typing/typemod.ml[758,27393+4]..[758,27393+6])
                      None
                    expression (typing/typemod.ml[758,27393+10]..[758,27393+13])
                      Pexp_ident "rem" (typing/typemod.ml[758,27393+10]..[758,27393+13])
                  <case>
                    pattern (typing/typemod.ml[759,27407+4]..[759,27407+12])
                      Ppat_construct "::" (typing/typemod.ml[759,27407+7]..[759,27407+9])
                      Some
                        []
                        pattern (typing/typemod.ml[759,27407+4]..[759,27407+12]) ghost
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[759,27407+4]..[759,27407+6])
                              Ppat_var "d1" (typing/typemod.ml[759,27407+4]..[759,27407+6])
                            pattern (typing/typemod.ml[759,27407+10]..[759,27407+12])
                              Ppat_var "dl" (typing/typemod.ml[759,27407+10]..[759,27407+12])
                          ]
                    expression (typing/typemod.ml[759,27407+16]..[759,27407+65])
                      Pexp_construct "::" (typing/typemod.ml[759,27407+33]..[759,27407+35])
                      Some
                        expression (typing/typemod.ml[759,27407+16]..[759,27407+65]) ghost
                          Pexp_tuple
                          [
                            expression (typing/typemod.ml[759,27407+16]..[759,27407+32])
                              Pexp_apply
                              expression (typing/typemod.ml[759,27407+16]..[759,27407+18])
                                Pexp_ident "fn" (typing/typemod.ml[759,27407+16]..[759,27407+18])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[759,27407+19]..[759,27407+29])
                                    Pexp_construct "Text_first" (typing/typemod.ml[759,27407+19]..[759,27407+29])
                                    None
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[759,27407+30]..[759,27407+32])
                                    Pexp_ident "d1" (typing/typemod.ml[759,27407+30]..[759,27407+32])
                              ]
                            expression (typing/typemod.ml[759,27407+36]..[759,27407+65])
                              Pexp_apply
                              expression (typing/typemod.ml[759,27407+36]..[759,27407+43])
                                Pexp_ident "map_end" (typing/typemod.ml[759,27407+36]..[759,27407+43])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[759,27407+44]..[759,27407+58])
                                    Pexp_apply
                                    expression (typing/typemod.ml[759,27407+45]..[759,27407+47])
                                      Pexp_ident "fn" (typing/typemod.ml[759,27407+45]..[759,27407+47])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[759,27407+48]..[759,27407+57])
                                          Pexp_construct "Text_next" (typing/typemod.ml[759,27407+48]..[759,27407+57])
                                          None
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[759,27407+59]..[759,27407+61])
                                    Pexp_ident "dl" (typing/typemod.ml[759,27407+59]..[759,27407+61])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[759,27407+62]..[759,27407+65])
                                    Pexp_ident "rem" (typing/typemod.ml[759,27407+62]..[759,27407+65])
                              ]
                          ]
                ]
    ]
  structure_item (typing/typemod.ml[767,27770+0]..[939,33990+3])
    Pstr_value Rec
    [
      <def>
        pattern (typing/typemod.ml[767,27770+8]..[767,27770+22])
          Ppat_var "approx_modtype" (typing/typemod.ml[767,27770+8]..[767,27770+22])
        expression (typing/typemod.ml[767,27770+23]..[821,29640+71]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[767,27770+23]..[767,27770+26])
            Ppat_var "env" (typing/typemod.ml[767,27770+23]..[767,27770+26])
          expression (typing/typemod.ml[767,27770+27]..[821,29640+71]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[767,27770+27]..[767,27770+31])
              Ppat_var "smty" (typing/typemod.ml[767,27770+27]..[767,27770+31])
            expression (typing/typemod.ml[768,27804+2]..[821,29640+71])
              Pexp_match
              expression (typing/typemod.ml[768,27804+8]..[768,27804+22])
                Pexp_field
                expression (typing/typemod.ml[768,27804+8]..[768,27804+12])
                  Pexp_ident "smty" (typing/typemod.ml[768,27804+8]..[768,27804+12])
                "pmty_desc" (typing/typemod.ml[768,27804+13]..[768,27804+22])
              [
                <case>
                  pattern (typing/typemod.ml[769,27832+4]..[769,27832+18])
                    Ppat_construct "Pmty_ident" (typing/typemod.ml[769,27832+4]..[769,27832+14])
                    Some
                      []
                      pattern (typing/typemod.ml[769,27832+15]..[769,27832+18])
                        Ppat_var "lid" (typing/typemod.ml[769,27832+15]..[769,27832+18])
                  expression (typing/typemod.ml[770,27854+6]..[773,27958+20])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[770,27854+10]..[770,27854+23])
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[770,27854+11]..[770,27854+15])
                              Ppat_var "path" (typing/typemod.ml[770,27854+11]..[770,27854+15])
                            pattern (typing/typemod.ml[770,27854+17]..[770,27854+22])
                              Ppat_var "_info" (typing/typemod.ml[770,27854+17]..[770,27854+22])
                          ]
                        expression (typing/typemod.ml[771,27880+8]..[771,27880+68])
                          Pexp_apply
                          expression (typing/typemod.ml[771,27880+8]..[771,27880+26])
                            Pexp_ident "Env.lookup_modtype" (typing/typemod.ml[771,27880+8]..[771,27880+26])
                          [
                            <arg>
                            Labelled "use"
                              expression (typing/typemod.ml[771,27880+32]..[771,27880+37])
                                Pexp_construct "false" (typing/typemod.ml[771,27880+32]..[771,27880+37])
                                None
                            <arg>
                            Labelled "loc"
                              expression (typing/typemod.ml[771,27880+43]..[771,27880+56])
                                Pexp_field
                                expression (typing/typemod.ml[771,27880+43]..[771,27880+47])
                                  Pexp_ident "smty" (typing/typemod.ml[771,27880+43]..[771,27880+47])
                                "pmty_loc" (typing/typemod.ml[771,27880+48]..[771,27880+56])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[771,27880+57]..[771,27880+64])
                                Pexp_field
                                expression (typing/typemod.ml[771,27880+57]..[771,27880+60])
                                  Pexp_ident "lid" (typing/typemod.ml[771,27880+57]..[771,27880+60])
                                "txt" (typing/typemod.ml[771,27880+61]..[771,27880+64])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[771,27880+65]..[771,27880+68])
                                Pexp_ident "env" (typing/typemod.ml[771,27880+65]..[771,27880+68])
                          ]
                    ]
                    expression (typing/typemod.ml[773,27958+6]..[773,27958+20])
                      Pexp_construct "Mty_ident" (typing/typemod.ml[773,27958+6]..[773,27958+15])
                      Some
                        expression (typing/typemod.ml[773,27958+16]..[773,27958+20])
                          Pexp_ident "path" (typing/typemod.ml[773,27958+16]..[773,27958+20])
                <case>
                  pattern (typing/typemod.ml[774,27979+4]..[774,27979+18])
                    Ppat_construct "Pmty_alias" (typing/typemod.ml[774,27979+4]..[774,27979+14])
                    Some
                      []
                      pattern (typing/typemod.ml[774,27979+15]..[774,27979+18])
                        Ppat_var "lid" (typing/typemod.ml[774,27979+15]..[774,27979+18])
                  expression (typing/typemod.ml[775,28001+6]..[779,28122+21])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[775,28001+10]..[775,28001+14])
                          Ppat_var "path" (typing/typemod.ml[775,28001+10]..[775,28001+14])
                        expression (typing/typemod.ml[776,28018+8]..[777,28072+40])
                          Pexp_apply
                          expression (typing/typemod.ml[776,28018+8]..[776,28018+30])
                            Pexp_ident "Env.lookup_module_path" (typing/typemod.ml[776,28018+8]..[776,28018+30])
                          [
                            <arg>
                            Labelled "use"
                              expression (typing/typemod.ml[776,28018+36]..[776,28018+41])
                                Pexp_construct "false" (typing/typemod.ml[776,28018+36]..[776,28018+41])
                                None
                            <arg>
                            Labelled "load"
                              expression (typing/typemod.ml[776,28018+48]..[776,28018+53])
                                Pexp_construct "false" (typing/typemod.ml[776,28018+48]..[776,28018+53])
                                None
                            <arg>
                            Labelled "loc"
                              expression (typing/typemod.ml[777,28072+15]..[777,28072+28])
                                Pexp_field
                                expression (typing/typemod.ml[777,28072+15]..[777,28072+19])
                                  Pexp_ident "smty" (typing/typemod.ml[777,28072+15]..[777,28072+19])
                                "pmty_loc" (typing/typemod.ml[777,28072+20]..[777,28072+28])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[777,28072+29]..[777,28072+36])
                                Pexp_field
                                expression (typing/typemod.ml[777,28072+29]..[777,28072+32])
                                  Pexp_ident "lid" (typing/typemod.ml[777,28072+29]..[777,28072+32])
                                "txt" (typing/typemod.ml[777,28072+33]..[777,28072+36])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[777,28072+37]..[777,28072+40])
                                Pexp_ident "env" (typing/typemod.ml[777,28072+37]..[777,28072+40])
                          ]
                    ]
                    expression (typing/typemod.ml[779,28122+6]..[779,28122+21])
                      Pexp_construct "Mty_alias" (typing/typemod.ml[779,28122+6]..[779,28122+15])
                      Some
                        expression (typing/typemod.ml[779,28122+15]..[779,28122+21])
                          Pexp_ident "path" (typing/typemod.ml[779,28122+16]..[779,28122+20])
                <case>
                  pattern (typing/typemod.ml[780,28144+4]..[780,28144+22])
                    Ppat_construct "Pmty_signature" (typing/typemod.ml[780,28144+4]..[780,28144+18])
                    Some
                      []
                      pattern (typing/typemod.ml[780,28144+19]..[780,28144+22])
                        Ppat_var "ssg" (typing/typemod.ml[780,28144+19]..[780,28144+22])
                  expression (typing/typemod.ml[781,28170+6]..[781,28170+39])
                    Pexp_construct "Mty_signature" (typing/typemod.ml[781,28170+6]..[781,28170+19])
                    Some
                      expression (typing/typemod.ml[781,28170+19]..[781,28170+39])
                        Pexp_apply
                        expression (typing/typemod.ml[781,28170+20]..[781,28170+30])
                          Pexp_ident "approx_sig" (typing/typemod.ml[781,28170+20]..[781,28170+30])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[781,28170+31]..[781,28170+34])
                              Pexp_ident "env" (typing/typemod.ml[781,28170+31]..[781,28170+34])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[781,28170+35]..[781,28170+38])
                              Pexp_ident "ssg" (typing/typemod.ml[781,28170+35]..[781,28170+38])
                        ]
                <case>
                  pattern (typing/typemod.ml[782,28210+4]..[782,28210+29])
                    Ppat_construct "Pmty_functor" (typing/typemod.ml[782,28210+4]..[782,28210+16])
                    Some
                      []
                      pattern (typing/typemod.ml[782,28210+16]..[782,28210+29])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[782,28210+17]..[782,28210+22])
                            Ppat_var "param" (typing/typemod.ml[782,28210+17]..[782,28210+22])
                          pattern (typing/typemod.ml[782,28210+24]..[782,28210+28])
                            Ppat_var "sres" (typing/typemod.ml[782,28210+24]..[782,28210+28])
                        ]
                  expression (typing/typemod.ml[783,28243+6]..[799,28848+29])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[783,28243+10]..[783,28243+25])
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[783,28243+11]..[783,28243+16])
                              Ppat_var "param" (typing/typemod.ml[783,28243+11]..[783,28243+16])
                            pattern (typing/typemod.ml[783,28243+18]..[783,28243+24])
                              Ppat_var "newenv" (typing/typemod.ml[783,28243+18]..[783,28243+24])
                          ]
                        expression (typing/typemod.ml[784,28271+8]..[796,28746+46])
                          Pexp_match
                          expression (typing/typemod.ml[784,28271+14]..[784,28271+19])
                            Pexp_ident "param" (typing/typemod.ml[784,28271+14]..[784,28271+19])
                          [
                            <case>
                              pattern (typing/typemod.ml[785,28296+10]..[785,28296+14])
                                Ppat_construct "Unit" (typing/typemod.ml[785,28296+10]..[785,28296+14])
                                None
                              expression (typing/typemod.ml[785,28296+18]..[785,28296+33])
                                Pexp_tuple
                                [
                                  expression (typing/typemod.ml[785,28296+18]..[785,28296+28])
                                    Pexp_construct "Types.Unit" (typing/typemod.ml[785,28296+18]..[785,28296+28])
                                    None
                                  expression (typing/typemod.ml[785,28296+30]..[785,28296+33])
                                    Pexp_ident "env" (typing/typemod.ml[785,28296+30]..[785,28296+33])
                                ]
                            <case>
                              pattern (typing/typemod.ml[786,28330+10]..[786,28330+29])
                                Ppat_construct "Named" (typing/typemod.ml[786,28330+10]..[786,28330+15])
                                Some
                                  []
                                  pattern (typing/typemod.ml[786,28330+16]..[786,28330+29])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typemod.ml[786,28330+17]..[786,28330+22])
                                        Ppat_var "param" (typing/typemod.ml[786,28330+17]..[786,28330+22])
                                      pattern (typing/typemod.ml[786,28330+24]..[786,28330+28])
                                        Ppat_var "sarg" (typing/typemod.ml[786,28330+24]..[786,28330+28])
                                    ]
                              expression (typing/typemod.ml[787,28363+10]..[796,28746+46])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[787,28363+14]..[787,28363+17])
                                      Ppat_var "arg" (typing/typemod.ml[787,28363+14]..[787,28363+17])
                                    expression (typing/typemod.ml[787,28363+20]..[787,28363+43])
                                      Pexp_apply
                                      expression (typing/typemod.ml[787,28363+20]..[787,28363+34])
                                        Pexp_ident "approx_modtype" (typing/typemod.ml[787,28363+20]..[787,28363+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[787,28363+35]..[787,28363+38])
                                            Pexp_ident "env" (typing/typemod.ml[787,28363+35]..[787,28363+38])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[787,28363+39]..[787,28363+43])
                                            Pexp_ident "sarg" (typing/typemod.ml[787,28363+39]..[787,28363+43])
                                      ]
                                ]
                                expression (typing/typemod.ml[788,28410+10]..[796,28746+46])
                                  Pexp_match
                                  expression (typing/typemod.ml[788,28410+16]..[788,28410+25])
                                    Pexp_field
                                    expression (typing/typemod.ml[788,28410+16]..[788,28410+21])
                                      Pexp_ident "param" (typing/typemod.ml[788,28410+16]..[788,28410+21])
                                    "txt" (typing/typemod.ml[788,28410+22]..[788,28410+25])
                                  [
                                    <case>
                                      pattern (typing/typemod.ml[789,28441+12]..[789,28441+16])
                                        Ppat_construct "None" (typing/typemod.ml[789,28441+12]..[789,28441+16])
                                        None
                                      expression (typing/typemod.ml[789,28441+20]..[789,28441+48])
                                        Pexp_tuple
                                        [
                                          expression (typing/typemod.ml[789,28441+20]..[789,28441+43])
                                            Pexp_construct "Types.Named" (typing/typemod.ml[789,28441+20]..[789,28441+31])
                                            Some
                                              expression (typing/typemod.ml[789,28441+32]..[789,28441+43])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typemod.ml[789,28441+33]..[789,28441+37])
                                                    Pexp_construct "None" (typing/typemod.ml[789,28441+33]..[789,28441+37])
                                                    None
                                                  expression (typing/typemod.ml[789,28441+39]..[789,28441+42])
                                                    Pexp_ident "arg" (typing/typemod.ml[789,28441+39]..[789,28441+42])
                                                ]
                                          expression (typing/typemod.ml[789,28441+45]..[789,28441+48])
                                            Pexp_ident "env" (typing/typemod.ml[789,28441+45]..[789,28441+48])
                                        ]
                                    <case>
                                      pattern (typing/typemod.ml[790,28490+12]..[790,28490+21])
                                        Ppat_construct "Some" (typing/typemod.ml[790,28490+12]..[790,28490+16])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[790,28490+17]..[790,28490+21])
                                            Ppat_var "name" (typing/typemod.ml[790,28490+17]..[790,28490+21])
                                      expression (typing/typemod.ml[791,28515+12]..[796,28746+46])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[791,28515+16]..[791,28515+20])
                                              Ppat_var "rarg" (typing/typemod.ml[791,28515+16]..[791,28515+20])
                                            expression (typing/typemod.ml[791,28515+23]..[791,28515+59])
                                              Pexp_apply
                                              expression (typing/typemod.ml[791,28515+23]..[791,28515+51])
                                                Pexp_ident "Mtype.scrape_for_functor_arg" (typing/typemod.ml[791,28515+23]..[791,28515+51])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[791,28515+52]..[791,28515+55])
                                                    Pexp_ident "env" (typing/typemod.ml[791,28515+52]..[791,28515+55])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[791,28515+56]..[791,28515+59])
                                                    Pexp_ident "arg" (typing/typemod.ml[791,28515+56]..[791,28515+59])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[792,28578+12]..[796,28746+46])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[792,28578+16]..[792,28578+21])
                                                Ppat_var "scope" (typing/typemod.ml[792,28578+16]..[792,28578+21])
                                              expression (typing/typemod.ml[792,28578+24]..[792,28578+45])
                                                Pexp_apply
                                                expression (typing/typemod.ml[792,28578+24]..[792,28578+42])
                                                  Pexp_ident "Ctype.create_scope" (typing/typemod.ml[792,28578+24]..[792,28578+42])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[792,28578+43]..[792,28578+45])
                                                      Pexp_construct "()" (typing/typemod.ml[792,28578+43]..[792,28578+45])
                                                      None
                                                ]
                                          ]
                                          expression (typing/typemod.ml[793,28627+12]..[796,28746+46])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[793,28627+16]..[793,28627+28])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typemod.ml[793,28627+17]..[793,28627+19])
                                                      Ppat_var "id" (typing/typemod.ml[793,28627+17]..[793,28627+19])
                                                    pattern (typing/typemod.ml[793,28627+21]..[793,28627+27])
                                                      Ppat_var "newenv" (typing/typemod.ml[793,28627+21]..[793,28627+27])
                                                  ]
                                                expression (typing/typemod.ml[794,28658+14]..[794,28658+72])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[794,28658+14]..[794,28658+30])
                                                    Pexp_ident "Env.enter_module" (typing/typemod.ml[794,28658+14]..[794,28658+30])
                                                  [
                                                    <arg>
                                                    Labelled "scope"
                                                      expression (typing/typemod.ml[794,28658+32]..[794,28658+37])
                                                        Pexp_ident "scope" (typing/typemod.ml[794,28658+32]..[794,28658+37])
                                                    <arg>
                                                    Labelled "arg"
                                                      expression (typing/typemod.ml[794,28658+43]..[794,28658+47])
                                                        Pexp_construct "true" (typing/typemod.ml[794,28658+43]..[794,28658+47])
                                                        None
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[794,28658+48]..[794,28658+52])
                                                        Pexp_ident "name" (typing/typemod.ml[794,28658+48]..[794,28658+52])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[794,28658+53]..[794,28658+63])
                                                        Pexp_construct "Mp_present" (typing/typemod.ml[794,28658+53]..[794,28658+63])
                                                        None
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[794,28658+64]..[794,28658+68])
                                                        Pexp_ident "rarg" (typing/typemod.ml[794,28658+64]..[794,28658+68])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[794,28658+69]..[794,28658+72])
                                                        Pexp_ident "env" (typing/typemod.ml[794,28658+69]..[794,28658+72])
                                                  ]
                                            ]
                                            expression (typing/typemod.ml[796,28746+12]..[796,28746+46])
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[796,28746+12]..[796,28746+38])
                                                  Pexp_construct "Types.Named" (typing/typemod.ml[796,28746+12]..[796,28746+23])
                                                  Some
                                                    expression (typing/typemod.ml[796,28746+24]..[796,28746+38])
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typemod.ml[796,28746+25]..[796,28746+32])
                                                          Pexp_construct "Some" (typing/typemod.ml[796,28746+25]..[796,28746+29])
                                                          Some
                                                            expression (typing/typemod.ml[796,28746+30]..[796,28746+32])
                                                              Pexp_ident "id" (typing/typemod.ml[796,28746+30]..[796,28746+32])
                                                        expression (typing/typemod.ml[796,28746+34]..[796,28746+37])
                                                          Pexp_ident "arg" (typing/typemod.ml[796,28746+34]..[796,28746+37])
                                                      ]
                                                expression (typing/typemod.ml[796,28746+40]..[796,28746+46])
                                                  Pexp_ident "newenv" (typing/typemod.ml[796,28746+40]..[796,28746+46])
                                              ]
                                  ]
                          ]
                    ]
                    expression (typing/typemod.ml[798,28802+6]..[799,28848+29])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[798,28802+10]..[798,28802+13])
                            Ppat_var "res" (typing/typemod.ml[798,28802+10]..[798,28802+13])
                          expression (typing/typemod.ml[798,28802+16]..[798,28802+42])
                            Pexp_apply
                            expression (typing/typemod.ml[798,28802+16]..[798,28802+30])
                              Pexp_ident "approx_modtype" (typing/typemod.ml[798,28802+16]..[798,28802+30])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[798,28802+31]..[798,28802+37])
                                  Pexp_ident "newenv" (typing/typemod.ml[798,28802+31]..[798,28802+37])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[798,28802+38]..[798,28802+42])
                                  Pexp_ident "sres" (typing/typemod.ml[798,28802+38]..[798,28802+42])
                            ]
                      ]
                      expression (typing/typemod.ml[799,28848+6]..[799,28848+29])
                        Pexp_construct "Mty_functor" (typing/typemod.ml[799,28848+6]..[799,28848+17])
                        Some
                          expression (typing/typemod.ml[799,28848+17]..[799,28848+29])
                            Pexp_tuple
                            [
                              expression (typing/typemod.ml[799,28848+18]..[799,28848+23])
                                Pexp_ident "param" (typing/typemod.ml[799,28848+18]..[799,28848+23])
                              expression (typing/typemod.ml[799,28848+25]..[799,28848+28])
                                Pexp_ident "res" (typing/typemod.ml[799,28848+25]..[799,28848+28])
                            ]
                <case>
                  pattern (typing/typemod.ml[800,28878+4]..[800,28878+33])
                    Ppat_construct "Pmty_with" (typing/typemod.ml[800,28878+4]..[800,28878+13])
                    Some
                      []
                      pattern (typing/typemod.ml[800,28878+13]..[800,28878+33])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[800,28878+14]..[800,28878+19])
                            Ppat_var "sbody" (typing/typemod.ml[800,28878+14]..[800,28878+19])
                          pattern (typing/typemod.ml[800,28878+21]..[800,28878+32])
                            Ppat_var "constraints" (typing/typemod.ml[800,28878+21]..[800,28878+32])
                        ]
                  expression (typing/typemod.ml[801,28915+6]..[816,29511+10])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[801,28915+10]..[801,28915+14])
                          Ppat_var "body" (typing/typemod.ml[801,28915+10]..[801,28915+14])
                        expression (typing/typemod.ml[801,28915+17]..[801,28915+41])
                          Pexp_apply
                          expression (typing/typemod.ml[801,28915+17]..[801,28915+31])
                            Pexp_ident "approx_modtype" (typing/typemod.ml[801,28915+17]..[801,28915+31])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[801,28915+32]..[801,28915+35])
                                Pexp_ident "env" (typing/typemod.ml[801,28915+32]..[801,28915+35])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[801,28915+36]..[801,28915+41])
                                Pexp_ident "sbody" (typing/typemod.ml[801,28915+36]..[801,28915+41])
                          ]
                    ]
                    expression (typing/typemod.ml[802,28960+6]..[816,29511+10])
                      Pexp_sequence
                      expression (typing/typemod.ml[802,28960+6]..[815,29490+19])
                        Pexp_apply
                        expression (typing/typemod.ml[802,28960+6]..[802,28960+15])
                          Pexp_ident "List.iter" (typing/typemod.ml[802,28960+6]..[802,28960+15])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[803,28976+8]..[814,29410+79])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typemod.ml[803,28976+13]..[803,28976+18])
                                Ppat_var "sdecl" (typing/typemod.ml[803,28976+13]..[803,28976+18])
                              expression (typing/typemod.ml[804,28998+10]..[814,29410+78])
                                Pexp_match
                                expression (typing/typemod.ml[804,28998+16]..[804,28998+21])
                                  Pexp_ident "sdecl" (typing/typemod.ml[804,28998+16]..[804,28998+21])
                                [
                                  <case>
                                    pattern (typing/typemod.ml[805,29025+12]..[808,29108+32])
                                      Ppat_or
                                      pattern (typing/typemod.ml[805,29025+12]..[807,29080+27])
                                        Ppat_or
                                        pattern (typing/typemod.ml[805,29025+12]..[806,29050+29])
                                          Ppat_or
                                          pattern (typing/typemod.ml[805,29025+12]..[805,29025+24])
                                            Ppat_construct "Pwith_type" (typing/typemod.ml[805,29025+12]..[805,29025+22])
                                            Some
                                              []
                                              pattern (typing/typemod.ml[805,29025+23]..[805,29025+24])
                                                Ppat_any
                                          pattern (typing/typemod.ml[806,29050+12]..[806,29050+29])
                                            Ppat_construct "Pwith_typesubst" (typing/typemod.ml[806,29050+12]..[806,29050+27])
                                            Some
                                              []
                                              pattern (typing/typemod.ml[806,29050+28]..[806,29050+29])
                                                Ppat_any
                                        pattern (typing/typemod.ml[807,29080+12]..[807,29080+27])
                                          Ppat_construct "Pwith_modtype" (typing/typemod.ml[807,29080+12]..[807,29080+25])
                                          Some
                                            []
                                            pattern (typing/typemod.ml[807,29080+26]..[807,29080+27])
                                              Ppat_any
                                      pattern (typing/typemod.ml[808,29108+12]..[808,29108+32])
                                        Ppat_construct "Pwith_modtypesubst" (typing/typemod.ml[808,29108+12]..[808,29108+30])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[808,29108+31]..[808,29108+32])
                                            Ppat_any
                                    expression (typing/typemod.ml[808,29108+37]..[808,29108+39])
                                      Pexp_construct "()" (typing/typemod.ml[808,29108+37]..[808,29108+39])
                                      None
                                  <case>
                                    pattern (typing/typemod.ml[809,29148+12]..[809,29148+34])
                                      Ppat_construct "Pwith_module" (typing/typemod.ml[809,29148+12]..[809,29148+24])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[809,29148+25]..[809,29148+34])
                                          Ppat_tuple
                                          [
                                            pattern (typing/typemod.ml[809,29148+26]..[809,29148+27])
                                              Ppat_any
                                            pattern (typing/typemod.ml[809,29148+29]..[809,29148+33])
                                              Ppat_var "lid'" (typing/typemod.ml[809,29148+29]..[809,29148+33])
                                          ]
                                    expression (typing/typemod.ml[812,29291+14]..[812,29291+78])
                                      Pexp_apply
                                      expression (typing/typemod.ml[812,29291+14]..[812,29291+20])
                                        Pexp_ident "ignore" (typing/typemod.ml[812,29291+14]..[812,29291+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[812,29291+21]..[812,29291+78])
                                            Pexp_apply
                                            expression (typing/typemod.ml[812,29291+22]..[812,29291+39])
                                              Pexp_ident "Env.lookup_module" (typing/typemod.ml[812,29291+22]..[812,29291+39])
                                            [
                                              <arg>
                                              Labelled "use"
                                                expression (typing/typemod.ml[812,29291+45]..[812,29291+50])
                                                  Pexp_construct "false" (typing/typemod.ml[812,29291+45]..[812,29291+50])
                                                  None
                                              <arg>
                                              Labelled "loc"
                                                expression (typing/typemod.ml[812,29291+56]..[812,29291+64])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[812,29291+56]..[812,29291+60])
                                                    Pexp_ident "lid'" (typing/typemod.ml[812,29291+56]..[812,29291+60])
                                                  "loc" (typing/typemod.ml[812,29291+61]..[812,29291+64])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[812,29291+65]..[812,29291+73])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[812,29291+65]..[812,29291+69])
                                                    Pexp_ident "lid'" (typing/typemod.ml[812,29291+65]..[812,29291+69])
                                                  "txt" (typing/typemod.ml[812,29291+70]..[812,29291+73])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[812,29291+74]..[812,29291+77])
                                                  Pexp_ident "env" (typing/typemod.ml[812,29291+74]..[812,29291+77])
                                            ]
                                      ]
                                  <case>
                                    pattern (typing/typemod.ml[813,29370+12]..[813,29370+36])
                                      Ppat_construct "Pwith_modsubst" (typing/typemod.ml[813,29370+12]..[813,29370+26])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[813,29370+27]..[813,29370+36])
                                          Ppat_tuple
                                          [
                                            pattern (typing/typemod.ml[813,29370+28]..[813,29370+29])
                                              Ppat_any
                                            pattern (typing/typemod.ml[813,29370+31]..[813,29370+35])
                                              Ppat_var "lid'" (typing/typemod.ml[813,29370+31]..[813,29370+35])
                                          ]
                                    expression (typing/typemod.ml[814,29410+14]..[814,29410+78])
                                      Pexp_apply
                                      expression (typing/typemod.ml[814,29410+14]..[814,29410+20])
                                        Pexp_ident "ignore" (typing/typemod.ml[814,29410+14]..[814,29410+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[814,29410+21]..[814,29410+78])
                                            Pexp_apply
                                            expression (typing/typemod.ml[814,29410+22]..[814,29410+39])
                                              Pexp_ident "Env.lookup_module" (typing/typemod.ml[814,29410+22]..[814,29410+39])
                                            [
                                              <arg>
                                              Labelled "use"
                                                expression (typing/typemod.ml[814,29410+45]..[814,29410+50])
                                                  Pexp_construct "false" (typing/typemod.ml[814,29410+45]..[814,29410+50])
                                                  None
                                              <arg>
                                              Labelled "loc"
                                                expression (typing/typemod.ml[814,29410+56]..[814,29410+64])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[814,29410+56]..[814,29410+60])
                                                    Pexp_ident "lid'" (typing/typemod.ml[814,29410+56]..[814,29410+60])
                                                  "loc" (typing/typemod.ml[814,29410+61]..[814,29410+64])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[814,29410+65]..[814,29410+73])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[814,29410+65]..[814,29410+69])
                                                    Pexp_ident "lid'" (typing/typemod.ml[814,29410+65]..[814,29410+69])
                                                  "txt" (typing/typemod.ml[814,29410+70]..[814,29410+73])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[814,29410+74]..[814,29410+77])
                                                  Pexp_ident "env" (typing/typemod.ml[814,29410+74]..[814,29410+77])
                                            ]
                                      ]
                                ]
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[815,29490+8]..[815,29490+19])
                              Pexp_ident "constraints" (typing/typemod.ml[815,29490+8]..[815,29490+19])
                        ]
                      expression (typing/typemod.ml[816,29511+6]..[816,29511+10])
                        Pexp_ident "body" (typing/typemod.ml[816,29511+6]..[816,29511+10])
                <case>
                  pattern (typing/typemod.ml[817,29522+4]..[817,29522+20])
                    Ppat_construct "Pmty_typeof" (typing/typemod.ml[817,29522+4]..[817,29522+15])
                    Some
                      []
                      pattern (typing/typemod.ml[817,29522+16]..[817,29522+20])
                        Ppat_var "smod" (typing/typemod.ml[817,29522+16]..[817,29522+20])
                  expression (typing/typemod.ml[818,29546+6]..[819,29604+9])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[818,29546+10]..[818,29546+18])
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[818,29546+11]..[818,29546+12])
                              Ppat_any
                            pattern (typing/typemod.ml[818,29546+14]..[818,29546+17])
                              Ppat_var "mty" (typing/typemod.ml[818,29546+14]..[818,29546+17])
                          ]
                        expression (typing/typemod.ml[818,29546+21]..[818,29546+54])
                          Pexp_apply
                          expression (typing/typemod.ml[818,29546+21]..[818,29546+45])
                            Pexp_apply
                            expression (typing/typemod.ml[818,29546+21]..[818,29546+22])
                              Pexp_ident "!" (typing/typemod.ml[818,29546+21]..[818,29546+22])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[818,29546+22]..[818,29546+45])
                                  Pexp_ident "type_module_type_of_fwd" (typing/typemod.ml[818,29546+22]..[818,29546+45])
                            ]
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[818,29546+46]..[818,29546+49])
                                Pexp_ident "env" (typing/typemod.ml[818,29546+46]..[818,29546+49])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[818,29546+50]..[818,29546+54])
                                Pexp_ident "smod" (typing/typemod.ml[818,29546+50]..[818,29546+54])
                          ]
                    ]
                    expression (typing/typemod.ml[819,29604+6]..[819,29604+9])
                      Pexp_ident "mty" (typing/typemod.ml[819,29604+6]..[819,29604+9])
                <case>
                  pattern (typing/typemod.ml[820,29614+4]..[820,29614+22])
                    Ppat_construct "Pmty_extension" (typing/typemod.ml[820,29614+4]..[820,29614+18])
                    Some
                      []
                      pattern (typing/typemod.ml[820,29614+19]..[820,29614+22])
                        Ppat_var "ext" (typing/typemod.ml[820,29614+19]..[820,29614+22])
                  expression (typing/typemod.ml[821,29640+6]..[821,29640+71])
                    Pexp_apply
                    expression (typing/typemod.ml[821,29640+6]..[821,29640+11])
                      Pexp_ident "raise" (typing/typemod.ml[821,29640+6]..[821,29640+11])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[821,29640+12]..[821,29640+71])
                          Pexp_construct "Error_forward" (typing/typemod.ml[821,29640+13]..[821,29640+26])
                          Some
                            expression (typing/typemod.ml[821,29640+27]..[821,29640+70])
                              Pexp_apply
                              expression (typing/typemod.ml[821,29640+28]..[821,29640+65])
                                Pexp_ident "Builtin_attributes.error_of_extension" (typing/typemod.ml[821,29640+28]..[821,29640+65])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[821,29640+66]..[821,29640+69])
                                    Pexp_ident "ext" (typing/typemod.ml[821,29640+66]..[821,29640+69])
                              ]
                    ]
              ]
      <def>
        pattern (typing/typemod.ml[823,29713+4]..[823,29713+29])
          Ppat_var "approx_module_declaration" (typing/typemod.ml[823,29713+4]..[823,29713+29])
        expression (typing/typemod.ml[823,29713+30]..[829,29923+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[823,29713+30]..[823,29713+33])
            Ppat_var "env" (typing/typemod.ml[823,29713+30]..[823,29713+33])
          expression (typing/typemod.ml[823,29713+34]..[829,29923+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[823,29713+34]..[823,29713+37])
              Ppat_var "pmd" (typing/typemod.ml[823,29713+34]..[823,29713+37])
            expression (typing/typemod.ml[824,29753+2]..[829,29923+3])
              Pexp_record
              [
                "Types.md_type" (typing/typemod.ml[825,29757+4]..[825,29757+17])
                  expression (typing/typemod.ml[825,29757+20]..[825,29757+51])
                    Pexp_apply
                    expression (typing/typemod.ml[825,29757+20]..[825,29757+34])
                      Pexp_ident "approx_modtype" (typing/typemod.ml[825,29757+20]..[825,29757+34])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[825,29757+35]..[825,29757+38])
                          Pexp_ident "env" (typing/typemod.ml[825,29757+35]..[825,29757+38])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[825,29757+39]..[825,29757+51])
                          Pexp_field
                          expression (typing/typemod.ml[825,29757+39]..[825,29757+42])
                            Pexp_ident "pmd" (typing/typemod.ml[825,29757+39]..[825,29757+42])
                          "pmd_type" (typing/typemod.ml[825,29757+43]..[825,29757+51])
                    ]
                "md_attributes" (typing/typemod.ml[826,29810+4]..[826,29810+17])
                  expression (typing/typemod.ml[826,29810+20]..[826,29810+38])
                    Pexp_field
                    expression (typing/typemod.ml[826,29810+20]..[826,29810+23])
                      Pexp_ident "pmd" (typing/typemod.ml[826,29810+20]..[826,29810+23])
                    "pmd_attributes" (typing/typemod.ml[826,29810+24]..[826,29810+38])
                "md_loc" (typing/typemod.ml[827,29850+4]..[827,29850+10])
                  expression (typing/typemod.ml[827,29850+13]..[827,29850+24])
                    Pexp_field
                    expression (typing/typemod.ml[827,29850+13]..[827,29850+16])
                      Pexp_ident "pmd" (typing/typemod.ml[827,29850+13]..[827,29850+16])
                    "pmd_loc" (typing/typemod.ml[827,29850+17]..[827,29850+24])
                "md_uid" (typing/typemod.ml[828,29876+4]..[828,29876+10])
                  expression (typing/typemod.ml[828,29876+13]..[828,29876+45])
                    Pexp_ident "Uid.internal_not_actually_unique" (typing/typemod.ml[828,29876+13]..[828,29876+45])
              ]
              None
      <def>
        pattern (typing/typemod.ml[831,29928+4]..[831,29928+14])
          Ppat_var "approx_sig" (typing/typemod.ml[831,29928+4]..[831,29928+14])
        expression (typing/typemod.ml[831,29928+15]..[931,33737+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[831,29928+15]..[831,29928+18])
            Ppat_var "env" (typing/typemod.ml[831,29928+15]..[831,29928+18])
          expression (typing/typemod.ml[831,29928+19]..[931,33737+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[831,29928+19]..[831,29928+22])
              Ppat_var "ssg" (typing/typemod.ml[831,29928+19]..[831,29928+22])
            expression (typing/typemod.ml[832,29953+2]..[931,33737+29])
              Pexp_match
              expression (typing/typemod.ml[832,29953+8]..[832,29953+11])
                Pexp_ident "ssg" (typing/typemod.ml[832,29953+8]..[832,29953+11])
              [
                <case>
                  pattern (typing/typemod.ml[833,29970+4]..[833,29970+6])
                    Ppat_construct "[]" (typing/typemod.ml[833,29970+4]..[833,29970+6])
                    None
                  expression (typing/typemod.ml[833,29970+10]..[833,29970+12])
                    Pexp_construct "[]" (typing/typemod.ml[833,29970+10]..[833,29970+12])
                    None
                <case>
                  pattern (typing/typemod.ml[834,29983+4]..[834,29983+16])
                    Ppat_construct "::" (typing/typemod.ml[834,29983+9]..[834,29983+11])
                    Some
                      []
                      pattern (typing/typemod.ml[834,29983+4]..[834,29983+16]) ghost
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[834,29983+4]..[834,29983+8])
                            Ppat_var "item" (typing/typemod.ml[834,29983+4]..[834,29983+8])
                          pattern (typing/typemod.ml[834,29983+12]..[834,29983+16])
                            Ppat_var "srem" (typing/typemod.ml[834,29983+12]..[834,29983+16])
                        ]
                  expression (typing/typemod.ml[835,30003+6]..[931,33737+29])
                    Pexp_match
                    expression (typing/typemod.ml[835,30003+12]..[835,30003+26])
                      Pexp_field
                      expression (typing/typemod.ml[835,30003+12]..[835,30003+16])
                        Pexp_ident "item" (typing/typemod.ml[835,30003+12]..[835,30003+16])
                      "psig_desc" (typing/typemod.ml[835,30003+17]..[835,30003+26])
                    [
                      <case>
                        pattern (typing/typemod.ml[836,30035+8]..[836,30035+36])
                          Ppat_construct "Psig_type" (typing/typemod.ml[836,30035+8]..[836,30035+17])
                          Some
                            []
                            pattern (typing/typemod.ml[836,30035+18]..[836,30035+36])
                              Ppat_tuple
                              [
                                pattern (typing/typemod.ml[836,30035+19]..[836,30035+27])
                                  Ppat_var "rec_flag" (typing/typemod.ml[836,30035+19]..[836,30035+27])
                                pattern (typing/typemod.ml[836,30035+29]..[836,30035+35])
                                  Ppat_var "sdecls" (typing/typemod.ml[836,30035+29]..[836,30035+35])
                              ]
                        expression (typing/typemod.ml[837,30075+10]..[840,30209+77])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[837,30075+14]..[837,30075+19])
                                Ppat_var "decls" (typing/typemod.ml[837,30075+14]..[837,30075+19])
                              expression (typing/typemod.ml[837,30075+22]..[837,30075+54])
                                Pexp_apply
                                expression (typing/typemod.ml[837,30075+22]..[837,30075+47])
                                  Pexp_ident "Typedecl.approx_type_decl" (typing/typemod.ml[837,30075+22]..[837,30075+47])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[837,30075+48]..[837,30075+54])
                                      Pexp_ident "sdecls" (typing/typemod.ml[837,30075+48]..[837,30075+54])
                                ]
                          ]
                          expression (typing/typemod.ml[838,30133+10]..[840,30209+77])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[838,30133+14]..[838,30133+17])
                                  Ppat_var "rem" (typing/typemod.ml[838,30133+14]..[838,30133+17])
                                expression (typing/typemod.ml[838,30133+20]..[838,30133+39])
                                  Pexp_apply
                                  expression (typing/typemod.ml[838,30133+20]..[838,30133+30])
                                    Pexp_ident "approx_sig" (typing/typemod.ml[838,30133+20]..[838,30133+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[838,30133+31]..[838,30133+34])
                                        Pexp_ident "env" (typing/typemod.ml[838,30133+31]..[838,30133+34])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[838,30133+35]..[838,30133+39])
                                        Pexp_ident "srem" (typing/typemod.ml[838,30133+35]..[838,30133+39])
                                  ]
                            ]
                            expression (typing/typemod.ml[839,30176+10]..[840,30209+77])
                              Pexp_apply
                              expression (typing/typemod.ml[839,30176+10]..[839,30176+22])
                                Pexp_ident "map_rec_type" (typing/typemod.ml[839,30176+10]..[839,30176+22])
                              [
                                <arg>
                                Labelled "rec_flag"
                                  expression (typing/typemod.ml[839,30176+24]..[839,30176+32])
                                    Pexp_ident "rec_flag" (typing/typemod.ml[839,30176+24]..[839,30176+32])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[840,30209+12]..[840,30209+67])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typemod.ml[840,30209+17]..[840,30209+19])
                                      Ppat_var "rs" (typing/typemod.ml[840,30209+17]..[840,30209+19])
                                    expression (typing/typemod.ml[840,30209+20]..[840,30209+66]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/typemod.ml[840,30209+20]..[840,30209+30])
                                        Ppat_tuple
                                        [
                                          pattern (typing/typemod.ml[840,30209+21]..[840,30209+23])
                                            Ppat_var "id" (typing/typemod.ml[840,30209+21]..[840,30209+23])
                                          pattern (typing/typemod.ml[840,30209+25]..[840,30209+29])
                                            Ppat_var "info" (typing/typemod.ml[840,30209+25]..[840,30209+29])
                                        ]
                                      expression (typing/typemod.ml[840,30209+34]..[840,30209+66])
                                        Pexp_construct "Sig_type" (typing/typemod.ml[840,30209+34]..[840,30209+42])
                                        Some
                                          expression (typing/typemod.ml[840,30209+42]..[840,30209+66])
                                            Pexp_tuple
                                            [
                                              expression (typing/typemod.ml[840,30209+43]..[840,30209+45])
                                                Pexp_ident "id" (typing/typemod.ml[840,30209+43]..[840,30209+45])
                                              expression (typing/typemod.ml[840,30209+47]..[840,30209+51])
                                                Pexp_ident "info" (typing/typemod.ml[840,30209+47]..[840,30209+51])
                                              expression (typing/typemod.ml[840,30209+53]..[840,30209+55])
                                                Pexp_ident "rs" (typing/typemod.ml[840,30209+53]..[840,30209+55])
                                              expression (typing/typemod.ml[840,30209+57]..[840,30209+65])
                                                Pexp_construct "Exported" (typing/typemod.ml[840,30209+57]..[840,30209+65])
                                                None
                                            ]
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[840,30209+68]..[840,30209+73])
                                    Pexp_ident "decls" (typing/typemod.ml[840,30209+68]..[840,30209+73])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[840,30209+74]..[840,30209+77])
                                    Pexp_ident "rem" (typing/typemod.ml[840,30209+74]..[840,30209+77])
                              ]
                      <case>
                        pattern (typing/typemod.ml[841,30287+8]..[841,30287+24])
                          Ppat_construct "Psig_typesubst" (typing/typemod.ml[841,30287+8]..[841,30287+22])
                          Some
                            []
                            pattern (typing/typemod.ml[841,30287+23]..[841,30287+24])
                              Ppat_any
                        expression (typing/typemod.ml[841,30287+28]..[841,30287+47])
                          Pexp_apply
                          expression (typing/typemod.ml[841,30287+28]..[841,30287+38])
                            Pexp_ident "approx_sig" (typing/typemod.ml[841,30287+28]..[841,30287+38])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[841,30287+39]..[841,30287+42])
                                Pexp_ident "env" (typing/typemod.ml[841,30287+39]..[841,30287+42])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[841,30287+43]..[841,30287+47])
                                Pexp_ident "srem" (typing/typemod.ml[841,30287+43]..[841,30287+47])
                          ]
                      <case>
                        pattern (typing/typemod.ml[842,30335+8]..[842,30335+55])
                          Ppat_construct "Psig_module" (typing/typemod.ml[842,30335+8]..[842,30335+19])
                          Some
                            []
                            pattern (typing/typemod.ml[842,30335+20]..[842,30335+55])
                              Ppat_record Open
                              [
                                "pmd_name" (typing/typemod.ml[842,30335+22]..[842,30335+30])
                                  pattern (typing/typemod.ml[842,30335+33]..[842,30335+50])
                                    Ppat_record Open
                                    [
                                      "txt" (typing/typemod.ml[842,30335+35]..[842,30335+38])
                                        pattern (typing/typemod.ml[842,30335+41]..[842,30335+45])
                                          Ppat_construct "None" (typing/typemod.ml[842,30335+41]..[842,30335+45])
                                          None
                                    ]
                              ]
                        expression (typing/typemod.ml[843,30394+10]..[843,30394+29])
                          Pexp_apply
                          expression (typing/typemod.ml[843,30394+10]..[843,30394+20])
                            Pexp_ident "approx_sig" (typing/typemod.ml[843,30394+10]..[843,30394+20])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[843,30394+21]..[843,30394+24])
                                Pexp_ident "env" (typing/typemod.ml[843,30394+21]..[843,30394+24])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[843,30394+25]..[843,30394+29])
                                Pexp_ident "srem" (typing/typemod.ml[843,30394+25]..[843,30394+29])
                          ]
                      <case>
                        pattern (typing/typemod.ml[844,30424+8]..[844,30424+23])
                          Ppat_construct "Psig_module" (typing/typemod.ml[844,30424+8]..[844,30424+19])
                          Some
                            []
                            pattern (typing/typemod.ml[844,30424+20]..[844,30424+23])
                              Ppat_var "pmd" (typing/typemod.ml[844,30424+20]..[844,30424+23])
                        expression (typing/typemod.ml[845,30451+10]..[856,30841+80])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[845,30451+14]..[845,30451+19])
                                Ppat_var "scope" (typing/typemod.ml[845,30451+14]..[845,30451+19])
                              expression (typing/typemod.ml[845,30451+22]..[845,30451+43])
                                Pexp_apply
                                expression (typing/typemod.ml[845,30451+22]..[845,30451+40])
                                  Pexp_ident "Ctype.create_scope" (typing/typemod.ml[845,30451+22]..[845,30451+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[845,30451+41]..[845,30451+43])
                                      Pexp_construct "()" (typing/typemod.ml[845,30451+41]..[845,30451+43])
                                      None
                                ]
                          ]
                          expression (typing/typemod.ml[846,30498+10]..[856,30841+80])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[846,30498+14]..[846,30498+16])
                                  Ppat_var "md" (typing/typemod.ml[846,30498+14]..[846,30498+16])
                                expression (typing/typemod.ml[846,30498+19]..[846,30498+52])
                                  Pexp_apply
                                  expression (typing/typemod.ml[846,30498+19]..[846,30498+44])
                                    Pexp_ident "approx_module_declaration" (typing/typemod.ml[846,30498+19]..[846,30498+44])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[846,30498+45]..[846,30498+48])
                                        Pexp_ident "env" (typing/typemod.ml[846,30498+45]..[846,30498+48])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[846,30498+49]..[846,30498+52])
                                        Pexp_ident "pmd" (typing/typemod.ml[846,30498+49]..[846,30498+52])
                                  ]
                            ]
                            expression (typing/typemod.ml[847,30554+10]..[856,30841+80])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[847,30554+14]..[847,30554+18])
                                    Ppat_var "pres" (typing/typemod.ml[847,30554+14]..[847,30554+18])
                                  expression (typing/typemod.ml[848,30575+12]..[850,30654+29])
                                    Pexp_match
                                    expression (typing/typemod.ml[848,30575+18]..[848,30575+34])
                                      Pexp_field
                                      expression (typing/typemod.ml[848,30575+18]..[848,30575+20])
                                        Pexp_ident "md" (typing/typemod.ml[848,30575+18]..[848,30575+20])
                                      "Types.md_type" (typing/typemod.ml[848,30575+21]..[848,30575+34])
                                    [
                                      <case>
                                        pattern (typing/typemod.ml[849,30615+14]..[849,30615+25])
                                          Ppat_construct "Mty_alias" (typing/typemod.ml[849,30615+14]..[849,30615+23])
                                          Some
                                            []
                                            pattern (typing/typemod.ml[849,30615+24]..[849,30615+25])
                                              Ppat_any
                                        expression (typing/typemod.ml[849,30615+29]..[849,30615+38])
                                          Pexp_construct "Mp_absent" (typing/typemod.ml[849,30615+29]..[849,30615+38])
                                          None
                                      <case>
                                        pattern (typing/typemod.ml[850,30654+14]..[850,30654+15])
                                          Ppat_any
                                        expression (typing/typemod.ml[850,30654+19]..[850,30654+29])
                                          Pexp_construct "Mp_present" (typing/typemod.ml[850,30654+19]..[850,30654+29])
                                          None
                                    ]
                              ]
                              expression (typing/typemod.ml[852,30697+10]..[856,30841+80])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[852,30697+14]..[852,30697+24])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typemod.ml[852,30697+14]..[852,30697+16])
                                          Ppat_var "id" (typing/typemod.ml[852,30697+14]..[852,30697+16])
                                        pattern (typing/typemod.ml[852,30697+18]..[852,30697+24])
                                          Ppat_var "newenv" (typing/typemod.ml[852,30697+18]..[852,30697+24])
                                      ]
                                    expression (typing/typemod.ml[853,30724+12]..[854,30802+25])
                                      Pexp_apply
                                      expression (typing/typemod.ml[853,30724+12]..[853,30724+40])
                                        Pexp_ident "Env.enter_module_declaration" (typing/typemod.ml[853,30724+12]..[853,30724+40])
                                      [
                                        <arg>
                                        Labelled "scope"
                                          expression (typing/typemod.ml[853,30724+42]..[853,30724+47])
                                            Pexp_ident "scope" (typing/typemod.ml[853,30724+42]..[853,30724+47])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[853,30724+48]..[853,30724+77])
                                            Pexp_apply
                                            expression (typing/typemod.ml[853,30724+49]..[853,30724+59])
                                              Pexp_ident "Option.get" (typing/typemod.ml[853,30724+49]..[853,30724+59])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[853,30724+60]..[853,30724+76])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[853,30724+60]..[853,30724+72])
                                                    Pexp_field
                                                    expression (typing/typemod.ml[853,30724+60]..[853,30724+63])
                                                      Pexp_ident "pmd" (typing/typemod.ml[853,30724+60]..[853,30724+63])
                                                    "pmd_name" (typing/typemod.ml[853,30724+64]..[853,30724+72])
                                                  "txt" (typing/typemod.ml[853,30724+73]..[853,30724+76])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[854,30802+14]..[854,30802+18])
                                            Pexp_ident "pres" (typing/typemod.ml[854,30802+14]..[854,30802+18])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[854,30802+19]..[854,30802+21])
                                            Pexp_ident "md" (typing/typemod.ml[854,30802+19]..[854,30802+21])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[854,30802+22]..[854,30802+25])
                                            Pexp_ident "env" (typing/typemod.ml[854,30802+22]..[854,30802+25])
                                      ]
                                ]
                                expression (typing/typemod.ml[856,30841+10]..[856,30841+80])
                                  Pexp_construct "::" (typing/typemod.ml[856,30841+55]..[856,30841+57])
                                  Some
                                    expression (typing/typemod.ml[856,30841+10]..[856,30841+80]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/typemod.ml[856,30841+10]..[856,30841+54])
                                          Pexp_construct "Sig_module" (typing/typemod.ml[856,30841+10]..[856,30841+20])
                                          Some
                                            expression (typing/typemod.ml[856,30841+20]..[856,30841+54])
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[856,30841+21]..[856,30841+23])
                                                  Pexp_ident "id" (typing/typemod.ml[856,30841+21]..[856,30841+23])
                                                expression (typing/typemod.ml[856,30841+25]..[856,30841+29])
                                                  Pexp_ident "pres" (typing/typemod.ml[856,30841+25]..[856,30841+29])
                                                expression (typing/typemod.ml[856,30841+31]..[856,30841+33])
                                                  Pexp_ident "md" (typing/typemod.ml[856,30841+31]..[856,30841+33])
                                                expression (typing/typemod.ml[856,30841+35]..[856,30841+43])
                                                  Pexp_construct "Trec_not" (typing/typemod.ml[856,30841+35]..[856,30841+43])
                                                  None
                                                expression (typing/typemod.ml[856,30841+45]..[856,30841+53])
                                                  Pexp_construct "Exported" (typing/typemod.ml[856,30841+45]..[856,30841+53])
                                                  None
                                              ]
                                        expression (typing/typemod.ml[856,30841+58]..[856,30841+80])
                                          Pexp_apply
                                          expression (typing/typemod.ml[856,30841+58]..[856,30841+68])
                                            Pexp_ident "approx_sig" (typing/typemod.ml[856,30841+58]..[856,30841+68])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[856,30841+69]..[856,30841+75])
                                                Pexp_ident "newenv" (typing/typemod.ml[856,30841+69]..[856,30841+75])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[856,30841+76]..[856,30841+80])
                                                Pexp_ident "srem" (typing/typemod.ml[856,30841+76]..[856,30841+80])
                                          ]
                                      ]
                      <case>
                        pattern (typing/typemod.ml[857,30922+8]..[857,30922+25])
                          Ppat_construct "Psig_modsubst" (typing/typemod.ml[857,30922+8]..[857,30922+21])
                          Some
                            []
                            pattern (typing/typemod.ml[857,30922+22]..[857,30922+25])
                              Ppat_var "pms" (typing/typemod.ml[857,30922+22]..[857,30922+25])
                        expression (typing/typemod.ml[858,30951+10]..[871,31399+32])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[858,30951+14]..[858,30951+19])
                                Ppat_var "scope" (typing/typemod.ml[858,30951+14]..[858,30951+19])
                              expression (typing/typemod.ml[858,30951+22]..[858,30951+43])
                                Pexp_apply
                                expression (typing/typemod.ml[858,30951+22]..[858,30951+40])
                                  Pexp_ident "Ctype.create_scope" (typing/typemod.ml[858,30951+22]..[858,30951+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[858,30951+41]..[858,30951+43])
                                      Pexp_construct "()" (typing/typemod.ml[858,30951+41]..[858,30951+43])
                                      None
                                ]
                          ]
                          expression (typing/typemod.ml[859,30998+10]..[871,31399+32])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[859,30998+14]..[859,30998+19])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[859,30998+14]..[859,30998+15])
                                      Ppat_any
                                    pattern (typing/typemod.ml[859,30998+17]..[859,30998+19])
                                      Ppat_var "md" (typing/typemod.ml[859,30998+17]..[859,30998+19])
                                  ]
                                expression (typing/typemod.ml[860,31020+12]..[861,31087+39])
                                  Pexp_apply
                                  expression (typing/typemod.ml[860,31020+12]..[860,31020+29])
                                    Pexp_ident "Env.lookup_module" (typing/typemod.ml[860,31020+12]..[860,31020+29])
                                  [
                                    <arg>
                                    Labelled "use"
                                      expression (typing/typemod.ml[860,31020+35]..[860,31020+40])
                                        Pexp_construct "false" (typing/typemod.ml[860,31020+35]..[860,31020+40])
                                        None
                                    <arg>
                                    Labelled "loc"
                                      expression (typing/typemod.ml[860,31020+46]..[860,31020+66])
                                        Pexp_field
                                        expression (typing/typemod.ml[860,31020+46]..[860,31020+62])
                                          Pexp_field
                                          expression (typing/typemod.ml[860,31020+46]..[860,31020+49])
                                            Pexp_ident "pms" (typing/typemod.ml[860,31020+46]..[860,31020+49])
                                          "pms_manifest" (typing/typemod.ml[860,31020+50]..[860,31020+62])
                                        "loc" (typing/typemod.ml[860,31020+63]..[860,31020+66])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[861,31087+15]..[861,31087+35])
                                        Pexp_field
                                        expression (typing/typemod.ml[861,31087+15]..[861,31087+31])
                                          Pexp_field
                                          expression (typing/typemod.ml[861,31087+15]..[861,31087+18])
                                            Pexp_ident "pms" (typing/typemod.ml[861,31087+15]..[861,31087+18])
                                          "pms_manifest" (typing/typemod.ml[861,31087+19]..[861,31087+31])
                                        "txt" (typing/typemod.ml[861,31087+32]..[861,31087+35])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[861,31087+36]..[861,31087+39])
                                        Pexp_ident "env" (typing/typemod.ml[861,31087+36]..[861,31087+39])
                                  ]
                            ]
                            expression (typing/typemod.ml[863,31140+10]..[871,31399+32])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[863,31140+14]..[863,31140+18])
                                    Ppat_var "pres" (typing/typemod.ml[863,31140+14]..[863,31140+18])
                                  expression (typing/typemod.ml[864,31161+12]..[866,31240+29])
                                    Pexp_match
                                    expression (typing/typemod.ml[864,31161+18]..[864,31161+34])
                                      Pexp_field
                                      expression (typing/typemod.ml[864,31161+18]..[864,31161+20])
                                        Pexp_ident "md" (typing/typemod.ml[864,31161+18]..[864,31161+20])
                                      "Types.md_type" (typing/typemod.ml[864,31161+21]..[864,31161+34])
                                    [
                                      <case>
                                        pattern (typing/typemod.ml[865,31201+14]..[865,31201+25])
                                          Ppat_construct "Mty_alias" (typing/typemod.ml[865,31201+14]..[865,31201+23])
                                          Some
                                            []
                                            pattern (typing/typemod.ml[865,31201+24]..[865,31201+25])
                                              Ppat_any
                                        expression (typing/typemod.ml[865,31201+29]..[865,31201+38])
                                          Pexp_construct "Mp_absent" (typing/typemod.ml[865,31201+29]..[865,31201+38])
                                          None
                                      <case>
                                        pattern (typing/typemod.ml[866,31240+14]..[866,31240+15])
                                          Ppat_any
                                        expression (typing/typemod.ml[866,31240+19]..[866,31240+29])
                                          Pexp_construct "Mp_present" (typing/typemod.ml[866,31240+19]..[866,31240+29])
                                          None
                                    ]
                              ]
                              expression (typing/typemod.ml[868,31283+10]..[871,31399+32])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[868,31283+14]..[868,31283+23])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typemod.ml[868,31283+14]..[868,31283+15])
                                          Ppat_any
                                        pattern (typing/typemod.ml[868,31283+17]..[868,31283+23])
                                          Ppat_var "newenv" (typing/typemod.ml[868,31283+17]..[868,31283+23])
                                      ]
                                    expression (typing/typemod.ml[869,31309+12]..[869,31309+76])
                                      Pexp_apply
                                      expression (typing/typemod.ml[869,31309+12]..[869,31309+40])
                                        Pexp_ident "Env.enter_module_declaration" (typing/typemod.ml[869,31309+12]..[869,31309+40])
                                      [
                                        <arg>
                                        Labelled "scope"
                                          expression (typing/typemod.ml[869,31309+42]..[869,31309+47])
                                            Pexp_ident "scope" (typing/typemod.ml[869,31309+42]..[869,31309+47])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[869,31309+48]..[869,31309+64])
                                            Pexp_field
                                            expression (typing/typemod.ml[869,31309+48]..[869,31309+60])
                                              Pexp_field
                                              expression (typing/typemod.ml[869,31309+48]..[869,31309+51])
                                                Pexp_ident "pms" (typing/typemod.ml[869,31309+48]..[869,31309+51])
                                              "pms_name" (typing/typemod.ml[869,31309+52]..[869,31309+60])
                                            "txt" (typing/typemod.ml[869,31309+61]..[869,31309+64])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[869,31309+65]..[869,31309+69])
                                            Pexp_ident "pres" (typing/typemod.ml[869,31309+65]..[869,31309+69])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[869,31309+70]..[869,31309+72])
                                            Pexp_ident "md" (typing/typemod.ml[869,31309+70]..[869,31309+72])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[869,31309+73]..[869,31309+76])
                                            Pexp_ident "env" (typing/typemod.ml[869,31309+73]..[869,31309+76])
                                      ]
                                ]
                                expression (typing/typemod.ml[871,31399+10]..[871,31399+32])
                                  Pexp_apply
                                  expression (typing/typemod.ml[871,31399+10]..[871,31399+20])
                                    Pexp_ident "approx_sig" (typing/typemod.ml[871,31399+10]..[871,31399+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[871,31399+21]..[871,31399+27])
                                        Pexp_ident "newenv" (typing/typemod.ml[871,31399+21]..[871,31399+27])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[871,31399+28]..[871,31399+32])
                                        Pexp_ident "srem" (typing/typemod.ml[871,31399+28]..[871,31399+32])
                                  ]
                      <case>
                        pattern (typing/typemod.ml[872,31432+8]..[872,31432+29])
                          Ppat_construct "Psig_recmodule" (typing/typemod.ml[872,31432+8]..[872,31432+22])
                          Some
                            []
                            pattern (typing/typemod.ml[872,31432+23]..[872,31432+29])
                              Ppat_var "sdecls" (typing/typemod.ml[872,31432+23]..[872,31432+29])
                        expression (typing/typemod.ml[873,31465+10]..[893,32136+36])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[873,31465+14]..[873,31465+19])
                                Ppat_var "scope" (typing/typemod.ml[873,31465+14]..[873,31465+19])
                              expression (typing/typemod.ml[873,31465+22]..[873,31465+43])
                                Pexp_apply
                                expression (typing/typemod.ml[873,31465+22]..[873,31465+40])
                                  Pexp_ident "Ctype.create_scope" (typing/typemod.ml[873,31465+22]..[873,31465+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[873,31465+41]..[873,31465+43])
                                      Pexp_construct "()" (typing/typemod.ml[873,31465+41]..[873,31465+43])
                                      None
                                ]
                          ]
                          expression (typing/typemod.ml[874,31512+10]..[893,32136+36])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[874,31512+14]..[874,31512+19])
                                  Ppat_var "decls" (typing/typemod.ml[874,31512+14]..[874,31512+19])
                                expression (typing/typemod.ml[875,31534+12]..[882,31786+20])
                                  Pexp_apply
                                  expression (typing/typemod.ml[875,31534+12]..[875,31534+27])
                                    Pexp_ident "List.filter_map" (typing/typemod.ml[875,31534+12]..[875,31534+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[876,31562+14]..[881,31770+15])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/typemod.ml[876,31562+19]..[876,31562+22])
                                          Ppat_var "pmd" (typing/typemod.ml[876,31562+19]..[876,31562+22])
                                        expression (typing/typemod.ml[877,31588+17]..[880,31734+35])
                                          Pexp_apply
                                          expression (typing/typemod.ml[877,31588+17]..[877,31588+27])
                                            Pexp_ident "Option.map" (typing/typemod.ml[877,31588+17]..[877,31588+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[877,31588+28]..[880,31734+18])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/typemod.ml[877,31588+33]..[877,31588+37])
                                                  Ppat_var "name" (typing/typemod.ml[877,31588+33]..[877,31588+37])
                                                expression (typing/typemod.ml[878,31629+19]..[879,31681+52])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typemod.ml[878,31629+19]..[878,31629+50])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[878,31629+19]..[878,31629+38])
                                                        Pexp_ident "Ident.create_scoped" (typing/typemod.ml[878,31629+19]..[878,31629+38])
                                                      [
                                                        <arg>
                                                        Labelled "scope"
                                                          expression (typing/typemod.ml[878,31629+40]..[878,31629+45])
                                                            Pexp_ident "scope" (typing/typemod.ml[878,31629+40]..[878,31629+45])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[878,31629+46]..[878,31629+50])
                                                            Pexp_ident "name" (typing/typemod.ml[878,31629+46]..[878,31629+50])
                                                      ]
                                                    expression (typing/typemod.ml[879,31681+19]..[879,31681+52])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[879,31681+19]..[879,31681+44])
                                                        Pexp_ident "approx_module_declaration" (typing/typemod.ml[879,31681+19]..[879,31681+44])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[879,31681+45]..[879,31681+48])
                                                            Pexp_ident "env" (typing/typemod.ml[879,31681+45]..[879,31681+48])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[879,31681+49]..[879,31681+52])
                                                            Pexp_ident "pmd" (typing/typemod.ml[879,31681+49]..[879,31681+52])
                                                      ]
                                                  ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[880,31734+19]..[880,31734+35])
                                                Pexp_field
                                                expression (typing/typemod.ml[880,31734+19]..[880,31734+31])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[880,31734+19]..[880,31734+22])
                                                    Pexp_ident "pmd" (typing/typemod.ml[880,31734+19]..[880,31734+22])
                                                  "pmd_name" (typing/typemod.ml[880,31734+23]..[880,31734+31])
                                                "txt" (typing/typemod.ml[880,31734+32]..[880,31734+35])
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[882,31786+14]..[882,31786+20])
                                        Pexp_ident "sdecls" (typing/typemod.ml[882,31786+14]..[882,31786+20])
                                  ]
                            ]
                            expression (typing/typemod.ml[884,31820+10]..[893,32136+36])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[884,31820+14]..[884,31820+20])
                                    Ppat_var "newenv" (typing/typemod.ml[884,31820+14]..[884,31820+20])
                                  expression (typing/typemod.ml[885,31843+12]..[888,31985+23])
                                    Pexp_apply
                                    expression (typing/typemod.ml[885,31843+12]..[885,31843+26])
                                      Pexp_ident "List.fold_left" (typing/typemod.ml[885,31843+12]..[885,31843+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[886,31870+14]..[887,31945+39])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/typemod.ml[886,31870+19]..[886,31870+22])
                                            Ppat_var "env" (typing/typemod.ml[886,31870+19]..[886,31870+22])
                                          expression (typing/typemod.ml[886,31870+23]..[887,31945+38]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/typemod.ml[886,31870+23]..[886,31870+31])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[886,31870+24]..[886,31870+26])
                                                  Ppat_var "id" (typing/typemod.ml[886,31870+24]..[886,31870+26])
                                                pattern (typing/typemod.ml[886,31870+28]..[886,31870+30])
                                                  Ppat_var "md" (typing/typemod.ml[886,31870+28]..[886,31870+30])
                                              ]
                                            expression (typing/typemod.ml[886,31870+35]..[887,31945+38])
                                              Pexp_apply
                                              expression (typing/typemod.ml[886,31870+35]..[886,31870+61])
                                                Pexp_ident "Env.add_module_declaration" (typing/typemod.ml[886,31870+35]..[886,31870+61])
                                              [
                                                <arg>
                                                Labelled "check"
                                                  expression (typing/typemod.ml[886,31870+69]..[886,31870+74])
                                                    Pexp_construct "false" (typing/typemod.ml[886,31870+69]..[886,31870+74])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[887,31945+18]..[887,31945+20])
                                                    Pexp_ident "id" (typing/typemod.ml[887,31945+18]..[887,31945+20])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[887,31945+21]..[887,31945+31])
                                                    Pexp_construct "Mp_present" (typing/typemod.ml[887,31945+21]..[887,31945+31])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[887,31945+32]..[887,31945+34])
                                                    Pexp_ident "md" (typing/typemod.ml[887,31945+32]..[887,31945+34])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[887,31945+35]..[887,31945+38])
                                                    Pexp_ident "env" (typing/typemod.ml[887,31945+35]..[887,31945+38])
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[888,31985+14]..[888,31985+17])
                                          Pexp_ident "env" (typing/typemod.ml[888,31985+14]..[888,31985+17])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[888,31985+18]..[888,31985+23])
                                          Pexp_ident "decls" (typing/typemod.ml[888,31985+18]..[888,31985+23])
                                    ]
                              ]
                              expression (typing/typemod.ml[890,32022+10]..[893,32136+36])
                                Pexp_apply
                                expression (typing/typemod.ml[890,32022+10]..[890,32022+17])
                                  Pexp_ident "map_rec" (typing/typemod.ml[890,32022+10]..[890,32022+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[891,32040+12]..[891,32040+77])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/typemod.ml[891,32040+17]..[891,32040+19])
                                        Ppat_var "rs" (typing/typemod.ml[891,32040+17]..[891,32040+19])
                                      expression (typing/typemod.ml[891,32040+20]..[891,32040+76]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/typemod.ml[891,32040+20]..[891,32040+28])
                                          Ppat_tuple
                                          [
                                            pattern (typing/typemod.ml[891,32040+21]..[891,32040+23])
                                              Ppat_var "id" (typing/typemod.ml[891,32040+21]..[891,32040+23])
                                            pattern (typing/typemod.ml[891,32040+25]..[891,32040+27])
                                              Ppat_var "md" (typing/typemod.ml[891,32040+25]..[891,32040+27])
                                          ]
                                        expression (typing/typemod.ml[891,32040+32]..[891,32040+76])
                                          Pexp_construct "Sig_module" (typing/typemod.ml[891,32040+32]..[891,32040+42])
                                          Some
                                            expression (typing/typemod.ml[891,32040+42]..[891,32040+76])
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[891,32040+43]..[891,32040+45])
                                                  Pexp_ident "id" (typing/typemod.ml[891,32040+43]..[891,32040+45])
                                                expression (typing/typemod.ml[891,32040+47]..[891,32040+57])
                                                  Pexp_construct "Mp_present" (typing/typemod.ml[891,32040+47]..[891,32040+57])
                                                  None
                                                expression (typing/typemod.ml[891,32040+59]..[891,32040+61])
                                                  Pexp_ident "md" (typing/typemod.ml[891,32040+59]..[891,32040+61])
                                                expression (typing/typemod.ml[891,32040+63]..[891,32040+65])
                                                  Pexp_ident "rs" (typing/typemod.ml[891,32040+63]..[891,32040+65])
                                                expression (typing/typemod.ml[891,32040+67]..[891,32040+75])
                                                  Pexp_construct "Exported" (typing/typemod.ml[891,32040+67]..[891,32040+75])
                                                  None
                                              ]
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[892,32118+12]..[892,32118+17])
                                      Pexp_ident "decls" (typing/typemod.ml[892,32118+12]..[892,32118+17])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[893,32136+12]..[893,32136+36])
                                      Pexp_apply
                                      expression (typing/typemod.ml[893,32136+13]..[893,32136+23])
                                        Pexp_ident "approx_sig" (typing/typemod.ml[893,32136+13]..[893,32136+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[893,32136+24]..[893,32136+30])
                                            Pexp_ident "newenv" (typing/typemod.ml[893,32136+24]..[893,32136+30])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[893,32136+31]..[893,32136+35])
                                            Pexp_ident "srem" (typing/typemod.ml[893,32136+31]..[893,32136+35])
                                      ]
                                ]
                      <case>
                        pattern (typing/typemod.ml[894,32173+8]..[894,32173+22])
                          Ppat_construct "Psig_modtype" (typing/typemod.ml[894,32173+8]..[894,32173+20])
                          Some
                            []
                            pattern (typing/typemod.ml[894,32173+21]..[894,32173+22])
                              Ppat_var "d" (typing/typemod.ml[894,32173+21]..[894,32173+22])
                        expression (typing/typemod.ml[895,32199+10]..[900,32400+67])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[895,32199+14]..[895,32199+18])
                                Ppat_var "info" (typing/typemod.ml[895,32199+14]..[895,32199+18])
                              expression (typing/typemod.ml[895,32199+21]..[895,32199+46])
                                Pexp_apply
                                expression (typing/typemod.ml[895,32199+21]..[895,32199+40])
                                  Pexp_ident "approx_modtype_info" (typing/typemod.ml[895,32199+21]..[895,32199+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[895,32199+41]..[895,32199+44])
                                      Pexp_ident "env" (typing/typemod.ml[895,32199+41]..[895,32199+44])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[895,32199+45]..[895,32199+46])
                                      Pexp_ident "d" (typing/typemod.ml[895,32199+45]..[895,32199+46])
                                ]
                          ]
                          expression (typing/typemod.ml[896,32249+10]..[900,32400+67])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[896,32249+14]..[896,32249+19])
                                  Ppat_var "scope" (typing/typemod.ml[896,32249+14]..[896,32249+19])
                                expression (typing/typemod.ml[896,32249+22]..[896,32249+43])
                                  Pexp_apply
                                  expression (typing/typemod.ml[896,32249+22]..[896,32249+40])
                                    Pexp_ident "Ctype.create_scope" (typing/typemod.ml[896,32249+22]..[896,32249+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[896,32249+41]..[896,32249+43])
                                        Pexp_construct "()" (typing/typemod.ml[896,32249+41]..[896,32249+43])
                                        None
                                  ]
                            ]
                            expression (typing/typemod.ml[897,32296+10]..[900,32400+67])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[897,32296+14]..[897,32296+26])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typemod.ml[897,32296+15]..[897,32296+17])
                                        Ppat_var "id" (typing/typemod.ml[897,32296+15]..[897,32296+17])
                                      pattern (typing/typemod.ml[897,32296+19]..[897,32296+25])
                                        Ppat_var "newenv" (typing/typemod.ml[897,32296+19]..[897,32296+25])
                                    ]
                                  expression (typing/typemod.ml[898,32325+12]..[898,32325+61])
                                    Pexp_apply
                                    expression (typing/typemod.ml[898,32325+12]..[898,32325+29])
                                      Pexp_ident "Env.enter_modtype" (typing/typemod.ml[898,32325+12]..[898,32325+29])
                                    [
                                      <arg>
                                      Labelled "scope"
                                        expression (typing/typemod.ml[898,32325+31]..[898,32325+36])
                                          Pexp_ident "scope" (typing/typemod.ml[898,32325+31]..[898,32325+36])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[898,32325+37]..[898,32325+52])
                                          Pexp_field
                                          expression (typing/typemod.ml[898,32325+37]..[898,32325+48])
                                            Pexp_field
                                            expression (typing/typemod.ml[898,32325+37]..[898,32325+38])
                                              Pexp_ident "d" (typing/typemod.ml[898,32325+37]..[898,32325+38])
                                            "pmtd_name" (typing/typemod.ml[898,32325+39]..[898,32325+48])
                                          "txt" (typing/typemod.ml[898,32325+49]..[898,32325+52])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[898,32325+53]..[898,32325+57])
                                          Pexp_ident "info" (typing/typemod.ml[898,32325+53]..[898,32325+57])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[898,32325+58]..[898,32325+61])
                                          Pexp_ident "env" (typing/typemod.ml[898,32325+58]..[898,32325+61])
                                    ]
                              ]
                              expression (typing/typemod.ml[900,32400+10]..[900,32400+67])
                                Pexp_construct "::" (typing/typemod.ml[900,32400+42]..[900,32400+44])
                                Some
                                  expression (typing/typemod.ml[900,32400+10]..[900,32400+67]) ghost
                                    Pexp_tuple
                                    [
                                      expression (typing/typemod.ml[900,32400+10]..[900,32400+41])
                                        Pexp_construct "Sig_modtype" (typing/typemod.ml[900,32400+10]..[900,32400+21])
                                        Some
                                          expression (typing/typemod.ml[900,32400+21]..[900,32400+41])
                                            Pexp_tuple
                                            [
                                              expression (typing/typemod.ml[900,32400+22]..[900,32400+24])
                                                Pexp_ident "id" (typing/typemod.ml[900,32400+22]..[900,32400+24])
                                              expression (typing/typemod.ml[900,32400+26]..[900,32400+30])
                                                Pexp_ident "info" (typing/typemod.ml[900,32400+26]..[900,32400+30])
                                              expression (typing/typemod.ml[900,32400+32]..[900,32400+40])
                                                Pexp_construct "Exported" (typing/typemod.ml[900,32400+32]..[900,32400+40])
                                                None
                                            ]
                                      expression (typing/typemod.ml[900,32400+45]..[900,32400+67])
                                        Pexp_apply
                                        expression (typing/typemod.ml[900,32400+45]..[900,32400+55])
                                          Pexp_ident "approx_sig" (typing/typemod.ml[900,32400+45]..[900,32400+55])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[900,32400+56]..[900,32400+62])
                                              Pexp_ident "newenv" (typing/typemod.ml[900,32400+56]..[900,32400+62])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[900,32400+63]..[900,32400+67])
                                              Pexp_ident "srem" (typing/typemod.ml[900,32400+63]..[900,32400+67])
                                        ]
                                    ]
                      <case>
                        pattern (typing/typemod.ml[901,32468+8]..[901,32468+27])
                          Ppat_construct "Psig_modtypesubst" (typing/typemod.ml[901,32468+8]..[901,32468+25])
                          Some
                            []
                            pattern (typing/typemod.ml[901,32468+26]..[901,32468+27])
                              Ppat_var "d" (typing/typemod.ml[901,32468+26]..[901,32468+27])
                        expression (typing/typemod.ml[902,32499+10]..[907,32701+32])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[902,32499+14]..[902,32499+18])
                                Ppat_var "info" (typing/typemod.ml[902,32499+14]..[902,32499+18])
                              expression (typing/typemod.ml[902,32499+21]..[902,32499+46])
                                Pexp_apply
                                expression (typing/typemod.ml[902,32499+21]..[902,32499+40])
                                  Pexp_ident "approx_modtype_info" (typing/typemod.ml[902,32499+21]..[902,32499+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[902,32499+41]..[902,32499+44])
                                      Pexp_ident "env" (typing/typemod.ml[902,32499+41]..[902,32499+44])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[902,32499+45]..[902,32499+46])
                                      Pexp_ident "d" (typing/typemod.ml[902,32499+45]..[902,32499+46])
                                ]
                          ]
                          expression (typing/typemod.ml[903,32549+10]..[907,32701+32])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[903,32549+14]..[903,32549+19])
                                  Ppat_var "scope" (typing/typemod.ml[903,32549+14]..[903,32549+19])
                                expression (typing/typemod.ml[903,32549+22]..[903,32549+43])
                                  Pexp_apply
                                  expression (typing/typemod.ml[903,32549+22]..[903,32549+40])
                                    Pexp_ident "Ctype.create_scope" (typing/typemod.ml[903,32549+22]..[903,32549+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[903,32549+41]..[903,32549+43])
                                        Pexp_construct "()" (typing/typemod.ml[903,32549+41]..[903,32549+43])
                                        None
                                  ]
                            ]
                            expression (typing/typemod.ml[904,32596+10]..[907,32701+32])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[904,32596+14]..[904,32596+27])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typemod.ml[904,32596+15]..[904,32596+18])
                                        Ppat_var "_id" (typing/typemod.ml[904,32596+15]..[904,32596+18])
                                      pattern (typing/typemod.ml[904,32596+20]..[904,32596+26])
                                        Ppat_var "newenv" (typing/typemod.ml[904,32596+20]..[904,32596+26])
                                    ]
                                  expression (typing/typemod.ml[905,32626+12]..[905,32626+61])
                                    Pexp_apply
                                    expression (typing/typemod.ml[905,32626+12]..[905,32626+29])
                                      Pexp_ident "Env.enter_modtype" (typing/typemod.ml[905,32626+12]..[905,32626+29])
                                    [
                                      <arg>
                                      Labelled "scope"
                                        expression (typing/typemod.ml[905,32626+31]..[905,32626+36])
                                          Pexp_ident "scope" (typing/typemod.ml[905,32626+31]..[905,32626+36])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[905,32626+37]..[905,32626+52])
                                          Pexp_field
                                          expression (typing/typemod.ml[905,32626+37]..[905,32626+48])
                                            Pexp_field
                                            expression (typing/typemod.ml[905,32626+37]..[905,32626+38])
                                              Pexp_ident "d" (typing/typemod.ml[905,32626+37]..[905,32626+38])
                                            "pmtd_name" (typing/typemod.ml[905,32626+39]..[905,32626+48])
                                          "txt" (typing/typemod.ml[905,32626+49]..[905,32626+52])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[905,32626+53]..[905,32626+57])
                                          Pexp_ident "info" (typing/typemod.ml[905,32626+53]..[905,32626+57])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[905,32626+58]..[905,32626+61])
                                          Pexp_ident "env" (typing/typemod.ml[905,32626+58]..[905,32626+61])
                                    ]
                              ]
                              expression (typing/typemod.ml[907,32701+10]..[907,32701+32])
                                Pexp_apply
                                expression (typing/typemod.ml[907,32701+10]..[907,32701+20])
                                  Pexp_ident "approx_sig" (typing/typemod.ml[907,32701+10]..[907,32701+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[907,32701+21]..[907,32701+27])
                                      Pexp_ident "newenv" (typing/typemod.ml[907,32701+21]..[907,32701+27])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[907,32701+28]..[907,32701+32])
                                      Pexp_ident "srem" (typing/typemod.ml[907,32701+28]..[907,32701+32])
                                ]
                      <case>
                        pattern (typing/typemod.ml[908,32734+8]..[908,32734+21])
                          Ppat_construct "Psig_open" (typing/typemod.ml[908,32734+8]..[908,32734+17])
                          Some
                            []
                            pattern (typing/typemod.ml[908,32734+18]..[908,32734+21])
                              Ppat_var "sod" (typing/typemod.ml[908,32734+18]..[908,32734+21])
                        expression (typing/typemod.ml[909,32759+10]..[910,32809+29])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[909,32759+14]..[909,32759+20])
                                Ppat_tuple
                                [
                                  pattern (typing/typemod.ml[909,32759+14]..[909,32759+15])
                                    Ppat_any
                                  pattern (typing/typemod.ml[909,32759+17]..[909,32759+20])
                                    Ppat_var "env" (typing/typemod.ml[909,32759+17]..[909,32759+20])
                                ]
                              expression (typing/typemod.ml[909,32759+23]..[909,32759+46])
                                Pexp_apply
                                expression (typing/typemod.ml[909,32759+23]..[909,32759+38])
                                  Pexp_ident "type_open_descr" (typing/typemod.ml[909,32759+23]..[909,32759+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[909,32759+39]..[909,32759+42])
                                      Pexp_ident "env" (typing/typemod.ml[909,32759+39]..[909,32759+42])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[909,32759+43]..[909,32759+46])
                                      Pexp_ident "sod" (typing/typemod.ml[909,32759+43]..[909,32759+46])
                                ]
                          ]
                          expression (typing/typemod.ml[910,32809+10]..[910,32809+29])
                            Pexp_apply
                            expression (typing/typemod.ml[910,32809+10]..[910,32809+20])
                              Pexp_ident "approx_sig" (typing/typemod.ml[910,32809+10]..[910,32809+20])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[910,32809+21]..[910,32809+24])
                                  Pexp_ident "env" (typing/typemod.ml[910,32809+21]..[910,32809+24])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[910,32809+25]..[910,32809+29])
                                  Pexp_ident "srem" (typing/typemod.ml[910,32809+25]..[910,32809+29])
                            ]
                      <case>
                        pattern (typing/typemod.ml[911,32839+8]..[911,32839+26])
                          Ppat_construct "Psig_include" (typing/typemod.ml[911,32839+8]..[911,32839+20])
                          Some
                            []
                            pattern (typing/typemod.ml[911,32839+21]..[911,32839+26])
                              Ppat_var "sincl" (typing/typemod.ml[911,32839+21]..[911,32839+26])
                        expression (typing/typemod.ml[912,32869+10]..[917,33114+37])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[912,32869+14]..[912,32869+18])
                                Ppat_var "smty" (typing/typemod.ml[912,32869+14]..[912,32869+18])
                              expression (typing/typemod.ml[912,32869+21]..[912,32869+36])
                                Pexp_field
                                expression (typing/typemod.ml[912,32869+21]..[912,32869+26])
                                  Pexp_ident "sincl" (typing/typemod.ml[912,32869+21]..[912,32869+26])
                                "pincl_mod" (typing/typemod.ml[912,32869+27]..[912,32869+36])
                          ]
                          expression (typing/typemod.ml[913,32909+10]..[917,33114+37])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[913,32909+14]..[913,32909+17])
                                  Ppat_var "mty" (typing/typemod.ml[913,32909+14]..[913,32909+17])
                                expression (typing/typemod.ml[913,32909+20]..[913,32909+43])
                                  Pexp_apply
                                  expression (typing/typemod.ml[913,32909+20]..[913,32909+34])
                                    Pexp_ident "approx_modtype" (typing/typemod.ml[913,32909+20]..[913,32909+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[913,32909+35]..[913,32909+38])
                                        Pexp_ident "env" (typing/typemod.ml[913,32909+35]..[913,32909+38])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[913,32909+39]..[913,32909+43])
                                        Pexp_ident "smty" (typing/typemod.ml[913,32909+39]..[913,32909+43])
                                  ]
                            ]
                            expression (typing/typemod.ml[914,32956+10]..[917,33114+37])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[914,32956+14]..[914,32956+19])
                                    Ppat_var "scope" (typing/typemod.ml[914,32956+14]..[914,32956+19])
                                  expression (typing/typemod.ml[914,32956+22]..[914,32956+43])
                                    Pexp_apply
                                    expression (typing/typemod.ml[914,32956+22]..[914,32956+40])
                                      Pexp_ident "Ctype.create_scope" (typing/typemod.ml[914,32956+22]..[914,32956+40])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[914,32956+41]..[914,32956+43])
                                          Pexp_construct "()" (typing/typemod.ml[914,32956+41]..[914,32956+43])
                                          None
                                    ]
                              ]
                              expression (typing/typemod.ml[915,33003+10]..[917,33114+37])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[915,33003+14]..[915,33003+24])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typemod.ml[915,33003+14]..[915,33003+16])
                                          Ppat_var "sg" (typing/typemod.ml[915,33003+14]..[915,33003+16])
                                        pattern (typing/typemod.ml[915,33003+18]..[915,33003+24])
                                          Ppat_var "newenv" (typing/typemod.ml[915,33003+18]..[915,33003+24])
                                      ]
                                    expression (typing/typemod.ml[915,33003+27]..[916,33057+53])
                                      Pexp_apply
                                      expression (typing/typemod.ml[915,33003+27]..[915,33003+46])
                                        Pexp_ident "Env.enter_signature" (typing/typemod.ml[915,33003+27]..[915,33003+46])
                                      [
                                        <arg>
                                        Labelled "scope"
                                          expression (typing/typemod.ml[915,33003+48]..[915,33003+53])
                                            Pexp_ident "scope" (typing/typemod.ml[915,33003+48]..[915,33003+53])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[916,33057+14]..[916,33057+49])
                                            Pexp_apply
                                            expression (typing/typemod.ml[916,33057+15]..[916,33057+26])
                                              Pexp_ident "extract_sig" (typing/typemod.ml[916,33057+15]..[916,33057+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[916,33057+27]..[916,33057+30])
                                                  Pexp_ident "env" (typing/typemod.ml[916,33057+27]..[916,33057+30])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[916,33057+31]..[916,33057+44])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[916,33057+31]..[916,33057+35])
                                                    Pexp_ident "smty" (typing/typemod.ml[916,33057+31]..[916,33057+35])
                                                  "pmty_loc" (typing/typemod.ml[916,33057+36]..[916,33057+44])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[916,33057+45]..[916,33057+48])
                                                  Pexp_ident "mty" (typing/typemod.ml[916,33057+45]..[916,33057+48])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[916,33057+50]..[916,33057+53])
                                            Pexp_ident "env" (typing/typemod.ml[916,33057+50]..[916,33057+53])
                                      ]
                                ]
                                expression (typing/typemod.ml[917,33114+10]..[917,33114+37])
                                  Pexp_apply
                                  expression (typing/typemod.ml[917,33114+13]..[917,33114+14])
                                    Pexp_ident "@" (typing/typemod.ml[917,33114+13]..[917,33114+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[917,33114+10]..[917,33114+12])
                                        Pexp_ident "sg" (typing/typemod.ml[917,33114+10]..[917,33114+12])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[917,33114+15]..[917,33114+37])
                                        Pexp_apply
                                        expression (typing/typemod.ml[917,33114+15]..[917,33114+25])
                                          Pexp_ident "approx_sig" (typing/typemod.ml[917,33114+15]..[917,33114+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[917,33114+26]..[917,33114+32])
                                              Pexp_ident "newenv" (typing/typemod.ml[917,33114+26]..[917,33114+32])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[917,33114+33]..[917,33114+37])
                                              Pexp_ident "srem" (typing/typemod.ml[917,33114+33]..[917,33114+37])
                                        ]
                                  ]
                      <case>
                        pattern (typing/typemod.ml[918,33152+8]..[918,33152+50])
                          Ppat_or
                          pattern (typing/typemod.ml[918,33152+8]..[918,33152+25])
                            Ppat_construct "Psig_class" (typing/typemod.ml[918,33152+8]..[918,33152+18])
                            Some
                              []
                              pattern (typing/typemod.ml[918,33152+19]..[918,33152+25])
                                Ppat_var "sdecls" (typing/typemod.ml[918,33152+19]..[918,33152+25])
                          pattern (typing/typemod.ml[918,33152+28]..[918,33152+50])
                            Ppat_construct "Psig_class_type" (typing/typemod.ml[918,33152+28]..[918,33152+43])
                            Some
                              []
                              pattern (typing/typemod.ml[918,33152+44]..[918,33152+50])
                                Ppat_var "sdecls" (typing/typemod.ml[918,33152+44]..[918,33152+50])
                        expression (typing/typemod.ml[919,33206+10]..[929,33698+25])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[919,33206+14]..[919,33206+19])
                                Ppat_var "decls" (typing/typemod.ml[919,33206+14]..[919,33206+19])
                              expression (typing/typemod.ml[919,33206+22]..[919,33206+68])
                                Pexp_apply
                                expression (typing/typemod.ml[919,33206+22]..[919,33206+57])
                                  Pexp_ident "Typeclass.approx_class_declarations" (typing/typemod.ml[919,33206+22]..[919,33206+57])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[919,33206+58]..[919,33206+61])
                                      Pexp_ident "env" (typing/typemod.ml[919,33206+58]..[919,33206+61])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[919,33206+62]..[919,33206+68])
                                      Pexp_ident "sdecls" (typing/typemod.ml[919,33206+62]..[919,33206+68])
                                ]
                          ]
                          expression (typing/typemod.ml[920,33278+10]..[929,33698+25])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[920,33278+14]..[920,33278+17])
                                  Ppat_var "rem" (typing/typemod.ml[920,33278+14]..[920,33278+17])
                                expression (typing/typemod.ml[920,33278+20]..[920,33278+39])
                                  Pexp_apply
                                  expression (typing/typemod.ml[920,33278+20]..[920,33278+30])
                                    Pexp_ident "approx_sig" (typing/typemod.ml[920,33278+20]..[920,33278+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[920,33278+31]..[920,33278+34])
                                        Pexp_ident "env" (typing/typemod.ml[920,33278+31]..[920,33278+34])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[920,33278+35]..[920,33278+39])
                                        Pexp_ident "srem" (typing/typemod.ml[920,33278+35]..[920,33278+39])
                                  ]
                            ]
                            expression (typing/typemod.ml[921,33321+10]..[929,33698+25])
                              Pexp_apply
                              expression (typing/typemod.ml[929,33698+10]..[929,33698+12])
                                Pexp_ident "|>" (typing/typemod.ml[929,33698+10]..[929,33698+12])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[921,33321+10]..[928,33674+23])
                                    Pexp_apply
                                    expression (typing/typemod.ml[921,33321+10]..[921,33321+17])
                                      Pexp_ident "map_rec" (typing/typemod.ml[921,33321+10]..[921,33321+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[921,33321+18]..[928,33674+11])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/typemod.ml[921,33321+23]..[921,33321+25])
                                            Ppat_var "rs" (typing/typemod.ml[921,33321+23]..[921,33321+25])
                                          expression (typing/typemod.ml[921,33321+26]..[927,33660+13]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/typemod.ml[921,33321+26]..[921,33321+30])
                                              Ppat_var "decl" (typing/typemod.ml[921,33321+26]..[921,33321+30])
                                            expression (typing/typemod.ml[922,33355+12]..[927,33660+13])
                                              Pexp_open Fresh
                                              module_expr (typing/typemod.ml[922,33355+21]..[922,33355+30])
                                                Pmod_ident "Typeclass" (typing/typemod.ml[922,33355+21]..[922,33355+30])
                                              expression (typing/typemod.ml[922,33355+34]..[927,33660+13])
                                                Pexp_construct "::" (typing/typemod.ml[923,33391+14]..[927,33660+13]) ghost
                                                Some
                                                  expression (typing/typemod.ml[923,33391+14]..[927,33660+13]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[923,33391+14]..[924,33462+38])
                                                        Pexp_construct "Sig_class_type" (typing/typemod.ml[923,33391+14]..[923,33391+28])
                                                        Some
                                                          expression (typing/typemod.ml[923,33391+28]..[924,33462+38])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typemod.ml[923,33391+29]..[923,33391+45])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[923,33391+29]..[923,33391+33])
                                                                  Pexp_ident "decl" (typing/typemod.ml[923,33391+29]..[923,33391+33])
                                                                "clsty_ty_id" (typing/typemod.ml[923,33391+34]..[923,33391+45])
                                                              expression (typing/typemod.ml[923,33391+47]..[923,33391+65])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[923,33391+47]..[923,33391+51])
                                                                  Pexp_ident "decl" (typing/typemod.ml[923,33391+47]..[923,33391+51])
                                                                "clsty_ty_decl" (typing/typemod.ml[923,33391+52]..[923,33391+65])
                                                              expression (typing/typemod.ml[923,33391+67]..[923,33391+69])
                                                                Pexp_ident "rs" (typing/typemod.ml[923,33391+67]..[923,33391+69])
                                                              expression (typing/typemod.ml[924,33462+29]..[924,33462+37])
                                                                Pexp_construct "Exported" (typing/typemod.ml[924,33462+29]..[924,33462+37])
                                                                None
                                                            ]
                                                      expression (typing/typemod.ml[925,33502+14]..[927,33660+13]) ghost
                                                        Pexp_construct "::" (typing/typemod.ml[925,33502+14]..[927,33660+13]) ghost
                                                        Some
                                                          expression (typing/typemod.ml[925,33502+14]..[927,33660+13]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typemod.ml[925,33502+14]..[925,33502+76])
                                                                Pexp_construct "Sig_type" (typing/typemod.ml[925,33502+14]..[925,33502+22])
                                                                Some
                                                                  expression (typing/typemod.ml[925,33502+22]..[925,33502+76])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typemod.ml[925,33502+23]..[925,33502+40])
Pexp_field
expression (typing/typemod.ml[925,33502+23]..[925,33502+27])
  Pexp_ident "decl" (typing/typemod.ml[925,33502+23]..[925,33502+27])
"clsty_obj_id" (typing/typemod.ml[925,33502+28]..[925,33502+40])
                                                                      expression (typing/typemod.ml[925,33502+42]..[925,33502+61])
Pexp_field
expression (typing/typemod.ml[925,33502+42]..[925,33502+46])
  Pexp_ident "decl" (typing/typemod.ml[925,33502+42]..[925,33502+46])
"clsty_obj_abbr" (typing/typemod.ml[925,33502+47]..[925,33502+61])
                                                                      expression (typing/typemod.ml[925,33502+63]..[925,33502+65])
Pexp_ident "rs" (typing/typemod.ml[925,33502+63]..[925,33502+65])
                                                                      expression (typing/typemod.ml[925,33502+67]..[925,33502+75])
Pexp_construct "Exported" (typing/typemod.ml[925,33502+67]..[925,33502+75])
None
                                                                    ]
                                                              expression (typing/typemod.ml[926,33580+14]..[927,33660+13]) ghost
                                                                Pexp_construct "::" (typing/typemod.ml[926,33580+14]..[927,33660+13]) ghost
                                                                Some
                                                                  expression (typing/typemod.ml[926,33580+14]..[927,33660+13]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typemod.ml[926,33580+14]..[926,33580+78])
Pexp_construct "Sig_type" (typing/typemod.ml[926,33580+14]..[926,33580+22])
Some
  expression (typing/typemod.ml[926,33580+22]..[926,33580+78])
    Pexp_tuple
    [
      expression (typing/typemod.ml[926,33580+23]..[926,33580+46])
        Pexp_field
        expression (typing/typemod.ml[926,33580+23]..[926,33580+27])
          Pexp_ident "decl" (typing/typemod.ml[926,33580+23]..[926,33580+27])
        "clsty_typesharp_id" (typing/typemod.ml[926,33580+28]..[926,33580+46])
      expression (typing/typemod.ml[926,33580+48]..[926,33580+63])
        Pexp_field
        expression (typing/typemod.ml[926,33580+48]..[926,33580+52])
          Pexp_ident "decl" (typing/typemod.ml[926,33580+48]..[926,33580+52])
        "clsty_abbr" (typing/typemod.ml[926,33580+53]..[926,33580+63])
      expression (typing/typemod.ml[926,33580+65]..[926,33580+67])
        Pexp_ident "rs" (typing/typemod.ml[926,33580+65]..[926,33580+67])
      expression (typing/typemod.ml[926,33580+69]..[926,33580+77])
        Pexp_construct "Exported" (typing/typemod.ml[926,33580+69]..[926,33580+77])
        None
    ]
                                                                      expression (typing/typemod.ml[927,33660+12]..[927,33660+13]) ghost
Pexp_construct "[]" (typing/typemod.ml[927,33660+12]..[927,33660+13]) ghost
None
                                                                    ]
                                                            ]
                                                    ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[928,33674+12]..[928,33674+17])
                                          Pexp_ident "decls" (typing/typemod.ml[928,33674+12]..[928,33674+17])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[928,33674+18]..[928,33674+23])
                                          Pexp_construct "::" (typing/typemod.ml[928,33674+19]..[928,33674+23]) ghost
                                          Some
                                            expression (typing/typemod.ml[928,33674+19]..[928,33674+23]) ghost
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[928,33674+19]..[928,33674+22])
                                                  Pexp_ident "rem" (typing/typemod.ml[928,33674+19]..[928,33674+22])
                                                expression (typing/typemod.ml[928,33674+22]..[928,33674+23]) ghost
                                                  Pexp_construct "[]" (typing/typemod.ml[928,33674+22]..[928,33674+23]) ghost
                                                  None
                                              ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[929,33698+13]..[929,33698+25])
                                    Pexp_ident "List.flatten" (typing/typemod.ml[929,33698+13]..[929,33698+25])
                              ]
                      <case>
                        pattern (typing/typemod.ml[930,33724+8]..[930,33724+9])
                          Ppat_any
                        expression (typing/typemod.ml[931,33737+10]..[931,33737+29])
                          Pexp_apply
                          expression (typing/typemod.ml[931,33737+10]..[931,33737+20])
                            Pexp_ident "approx_sig" (typing/typemod.ml[931,33737+10]..[931,33737+20])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[931,33737+21]..[931,33737+24])
                                Pexp_ident "env" (typing/typemod.ml[931,33737+21]..[931,33737+24])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[931,33737+25]..[931,33737+29])
                                Pexp_ident "srem" (typing/typemod.ml[931,33737+25]..[931,33737+29])
                          ]
                    ]
              ]
      <def>
        pattern (typing/typemod.ml[933,33768+4]..[933,33768+23])
          Ppat_var "approx_modtype_info" (typing/typemod.ml[933,33768+4]..[933,33768+23])
        expression (typing/typemod.ml[933,33768+24]..[939,33990+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[933,33768+24]..[933,33768+27])
            Ppat_var "env" (typing/typemod.ml[933,33768+24]..[933,33768+27])
          expression (typing/typemod.ml[933,33768+28]..[939,33990+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[933,33768+28]..[933,33768+33])
              Ppat_var "sinfo" (typing/typemod.ml[933,33768+28]..[933,33768+33])
            expression (typing/typemod.ml[934,33804+2]..[939,33990+3])
              Pexp_record
              [
                "mtd_type" (typing/typemod.ml[935,33808+3]..[935,33808+11])
                  expression (typing/typemod.ml[935,33808+14]..[935,33808+61])
                    Pexp_apply
                    expression (typing/typemod.ml[935,33808+14]..[935,33808+24])
                      Pexp_ident "Option.map" (typing/typemod.ml[935,33808+14]..[935,33808+24])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[935,33808+25]..[935,33808+45])
                          Pexp_apply
                          expression (typing/typemod.ml[935,33808+26]..[935,33808+40])
                            Pexp_ident "approx_modtype" (typing/typemod.ml[935,33808+26]..[935,33808+40])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[935,33808+41]..[935,33808+44])
                                Pexp_ident "env" (typing/typemod.ml[935,33808+41]..[935,33808+44])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[935,33808+46]..[935,33808+61])
                          Pexp_field
                          expression (typing/typemod.ml[935,33808+46]..[935,33808+51])
                            Pexp_ident "sinfo" (typing/typemod.ml[935,33808+46]..[935,33808+51])
                          "pmtd_type" (typing/typemod.ml[935,33808+52]..[935,33808+61])
                    ]
                "mtd_attributes" (typing/typemod.ml[936,33871+3]..[936,33871+17])
                  expression (typing/typemod.ml[936,33871+20]..[936,33871+41])
                    Pexp_field
                    expression (typing/typemod.ml[936,33871+20]..[936,33871+25])
                      Pexp_ident "sinfo" (typing/typemod.ml[936,33871+20]..[936,33871+25])
                    "pmtd_attributes" (typing/typemod.ml[936,33871+26]..[936,33871+41])
                "mtd_loc" (typing/typemod.ml[937,33914+3]..[937,33914+10])
                  expression (typing/typemod.ml[937,33914+13]..[937,33914+27])
                    Pexp_field
                    expression (typing/typemod.ml[937,33914+13]..[937,33914+18])
                      Pexp_ident "sinfo" (typing/typemod.ml[937,33914+13]..[937,33914+18])
                    "pmtd_loc" (typing/typemod.ml[937,33914+19]..[937,33914+27])
                "mtd_uid" (typing/typemod.ml[938,33943+3]..[938,33943+10])
                  expression (typing/typemod.ml[938,33943+13]..[938,33943+45])
                    Pexp_ident "Uid.internal_not_actually_unique" (typing/typemod.ml[938,33943+13]..[938,33943+45])
              ]
              None
    ]
  structure_item (typing/typemod.ml[941,33995+0]..[943,34053+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[941,33995+4]..[941,33995+18])
          Ppat_var "approx_modtype" (typing/typemod.ml[941,33995+4]..[941,33995+18])
        expression (typing/typemod.ml[941,33995+19]..[943,34053+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[941,33995+19]..[941,33995+22])
            Ppat_var "env" (typing/typemod.ml[941,33995+19]..[941,33995+22])
          expression (typing/typemod.ml[941,33995+23]..[943,34053+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[941,33995+23]..[941,33995+27])
              Ppat_var "smty" (typing/typemod.ml[941,33995+23]..[941,33995+27])
            expression (typing/typemod.ml[942,34025+2]..[943,34053+39])
              Pexp_apply
              expression (typing/typemod.ml[942,34025+2]..[942,34025+27])
                Pexp_ident "Warnings.without_warnings" (typing/typemod.ml[942,34025+2]..[942,34025+27])
              [
                <arg>
                Nolabel
                  expression (typing/typemod.ml[943,34053+4]..[943,34053+39])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[943,34053+9]..[943,34053+11])
                      Ppat_construct "()" (typing/typemod.ml[943,34053+9]..[943,34053+11])
                      None
                    expression (typing/typemod.ml[943,34053+15]..[943,34053+38])
                      Pexp_apply
                      expression (typing/typemod.ml[943,34053+15]..[943,34053+29])
                        Pexp_ident "approx_modtype" (typing/typemod.ml[943,34053+15]..[943,34053+29])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[943,34053+30]..[943,34053+33])
                            Pexp_ident "env" (typing/typemod.ml[943,34053+30]..[943,34053+33])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[943,34053+34]..[943,34053+38])
                            Pexp_ident "smty" (typing/typemod.ml[943,34053+34]..[943,34053+38])
                      ]
              ]
    ]
  structure_item (typing/typemod.ml[949,34337+0]..[1251,44549+3])
    Pstr_module
    "Signature_names" (typing/typemod.ml[949,34337+7]..[949,34337+22])
      module_expr (typing/typemod.ml[949,34337+23]..[1251,44549+3])
        Pmod_constraint
        module_expr (typing/typemod.ml[984,35486+6]..[1251,44549+3])
          Pmod_structure
          [
            structure_item (typing/typemod.ml[986,35500+2]..[994,35722+5])
              Pstr_type Rec
              [
                type_declaration "shadowable" (typing/typemod.ml[986,35500+7]..[986,35500+17]) (typing/typemod.ml[986,35500+2]..[994,35722+5])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_record
                      [
                        (typing/typemod.ml[988,35526+6]..[988,35526+20])
                          Immutable
                          "self" (typing/typemod.ml[988,35526+6]..[988,35526+10])                          core_type (typing/typemod.ml[988,35526+12]..[988,35526+19])
                            Ptyp_constr "Ident.t" (typing/typemod.ml[988,35526+12]..[988,35526+19])
                            []
                        (typing/typemod.ml[989,35547+6]..[989,35547+26])
                          attribute "ocaml.doc"
                            [
                              structure_item (typing/typemod.ml[990,35574+6]..[992,35691+8])
                                Pstr_eval
                                expression (typing/typemod.ml[990,35574+6]..[992,35691+8])
                                  Pexp_constant PConst_string(" group includes the element itself and all elements\n                that should be removed at the same time\n      ",(typing/typemod.ml[990,35574+6]..[992,35691+8]),None)
                            ]
                          Immutable
                          "group" (typing/typemod.ml[989,35547+6]..[989,35547+11])                          core_type (typing/typemod.ml[989,35547+13]..[989,35547+25])
                            Ptyp_constr "list" (typing/typemod.ml[989,35547+21]..[989,35547+25])
                            [
                              core_type (typing/typemod.ml[989,35547+13]..[989,35547+20])
                                Ptyp_constr "Ident.t" (typing/typemod.ml[989,35547+13]..[989,35547+20])
                                []
                            ]
                        (typing/typemod.ml[993,35700+6]..[993,35700+21])
                          Immutable
                          "loc" (typing/typemod.ml[993,35700+6]..[993,35700+9])                          core_type (typing/typemod.ml[993,35700+10]..[993,35700+20])
                            Ptyp_constr "Location.t" (typing/typemod.ml[993,35700+10]..[993,35700+20])
                            []
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (typing/typemod.ml[996,35729+2]..[999,35799+3])
              Pstr_type Rec
              [
                type_declaration "bound_info" (typing/typemod.ml[996,35729+7]..[996,35729+17]) (typing/typemod.ml[996,35729+2]..[999,35799+3])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (typing/typemod.ml[996,35729+20]..[999,35799+3])
                        Ptyp_variant closed=Closed
                        [
                          Rtag "Exported" true
                            []
                          Rtag "Shadowable" false
                            [
                              core_type (typing/typemod.ml[998,35767+21]..[998,35767+31])
                                Ptyp_constr "shadowable" (typing/typemod.ml[998,35767+21]..[998,35767+31])
                                []
                            ]
                        ]
                        None
              ]
            structure_item (typing/typemod.ml[1001,35804+2]..[1006,35953+3])
              Pstr_type Rec
              [
                type_declaration "info" (typing/typemod.ml[1001,35804+7]..[1001,35804+11]) (typing/typemod.ml[1001,35804+2]..[1006,35953+3])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (typing/typemod.ml[1001,35804+14]..[1006,35953+3])
                        Ptyp_variant closed=Closed
                        [
                          Rtag "From_open" true
                            []
                          Rtag "Substituted_away" false
                            [
                              core_type (typing/typemod.ml[1003,35837+27]..[1003,35837+34])
                                Ptyp_constr "Subst.t" (typing/typemod.ml[1003,35837+27]..[1003,35837+34])
                                []
                            ]
                          Rtag "Unpackable_modtype_substituted_away" false
                            [
                              core_type (typing/typemod.ml[1004,35872+46]..[1004,35872+63])
                                Ptyp_tuple
                                [
                                  core_type (typing/typemod.ml[1004,35872+46]..[1004,35872+53])
                                    Ptyp_constr "Ident.t" (typing/typemod.ml[1004,35872+46]..[1004,35872+53])
                                    []
                                  core_type (typing/typemod.ml[1004,35872+56]..[1004,35872+63])
                                    Ptyp_constr "Subst.t" (typing/typemod.ml[1004,35872+56]..[1004,35872+63])
                                    []
                                ]
                            ]
                          Rinherit
                            core_type (typing/typemod.ml[1005,35936+6]..[1005,35936+16])
                              Ptyp_constr "bound_info" (typing/typemod.ml[1005,35936+6]..[1005,35936+16])
                              []
                        ]
                        None
              ]
            structure_item (typing/typemod.ml[1008,35958+2]..[1010,35995+41])
              Pstr_type Rec
              [
                type_declaration "hide_reason" (typing/typemod.ml[1008,35958+7]..[1008,35958+18]) (typing/typemod.ml[1008,35958+2]..[1010,35995+41])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_variant
                      [
                        (typing/typemod.ml[1009,35979+4]..[1009,35979+15])
                          "From_open" (typing/typemod.ml[1009,35979+6]..[1009,35979+15])
                          []
                          None
                        (typing/typemod.ml[1010,35995+4]..[1010,35995+41])
                          "Shadowed_by" (typing/typemod.ml[1010,35995+6]..[1010,35995+17])
                          [
                            core_type (typing/typemod.ml[1010,35995+21]..[1010,35995+28])
                              Ptyp_constr "Ident.t" (typing/typemod.ml[1010,35995+21]..[1010,35995+28])
                              []
                            core_type (typing/typemod.ml[1010,35995+31]..[1010,35995+41])
                              Ptyp_constr "Location.t" (typing/typemod.ml[1010,35995+31]..[1010,35995+41])
                              []
                          ]
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (typing/typemod.ml[1012,36038+2]..[1016,36218+3])
              Pstr_type Rec
              [
                type_declaration "to_be_removed" (typing/typemod.ml[1012,36038+7]..[1012,36038+20]) (typing/typemod.ml[1012,36038+2]..[1016,36218+3])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_record
                      [
                        (typing/typemod.ml[1013,36063+4]..[1013,36063+27])
                          Mutable
                          "subst" (typing/typemod.ml[1013,36063+12]..[1013,36063+17])                          core_type (typing/typemod.ml[1013,36063+19]..[1013,36063+26])
                            Ptyp_constr "Subst.t" (typing/typemod.ml[1013,36063+19]..[1013,36063+26])
                            []
                        (typing/typemod.ml[1014,36091+4]..[1014,36091+80])
                          Mutable
                          "hide" (typing/typemod.ml[1014,36091+12]..[1014,36091+16])                          core_type (typing/typemod.ml[1014,36091+18]..[1014,36091+79])
                            Ptyp_constr "Ident.Map.t" (typing/typemod.ml[1014,36091+68]..[1014,36091+79])
                            [
                              core_type (typing/typemod.ml[1014,36091+19]..[1014,36091+66])
                                Ptyp_tuple
                                [
                                  core_type (typing/typemod.ml[1014,36091+19]..[1014,36091+39])
                                    Ptyp_constr "Sig_component_kind.t" (typing/typemod.ml[1014,36091+19]..[1014,36091+39])
                                    []
                                  core_type (typing/typemod.ml[1014,36091+42]..[1014,36091+52])
                                    Ptyp_constr "Location.t" (typing/typemod.ml[1014,36091+42]..[1014,36091+52])
                                    []
                                  core_type (typing/typemod.ml[1014,36091+55]..[1014,36091+66])
                                    Ptyp_constr "hide_reason" (typing/typemod.ml[1014,36091+55]..[1014,36091+66])
                                    []
                                ]
                            ]
                        (typing/typemod.ml[1015,36172+4]..[1015,36172+45])
                          Mutable
                          "unpackable_modtypes" (typing/typemod.ml[1015,36172+12]..[1015,36172+31])                          core_type (typing/typemod.ml[1015,36172+33]..[1015,36172+44])
                            Ptyp_constr "Ident.Set.t" (typing/typemod.ml[1015,36172+33]..[1015,36172+44])
                            []
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (typing/typemod.ml[1018,36223+2]..[1018,36223+51])
              Pstr_type Rec
              [
                type_declaration "names_infos" (typing/typemod.ml[1018,36223+7]..[1018,36223+18]) (typing/typemod.ml[1018,36223+2]..[1018,36223+51])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (typing/typemod.ml[1018,36223+21]..[1018,36223+51])
                        Ptyp_constr "Hashtbl.t" (typing/typemod.ml[1018,36223+42]..[1018,36223+51])
                        [
                          core_type (typing/typemod.ml[1018,36223+22]..[1018,36223+28])
                            Ptyp_constr "string" (typing/typemod.ml[1018,36223+22]..[1018,36223+28])
                            []
                          core_type (typing/typemod.ml[1018,36223+30]..[1018,36223+40])
                            Ptyp_constr "bound_info" (typing/typemod.ml[1018,36223+30]..[1018,36223+40])
                            []
                        ]
              ]
            structure_item (typing/typemod.ml[1020,36276+2]..[1028,36477+3])
              Pstr_type Rec
              [
                type_declaration "names" (typing/typemod.ml[1020,36276+7]..[1020,36276+12]) (typing/typemod.ml[1020,36276+2]..[1028,36477+3])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_record
                      [
                        (typing/typemod.ml[1021,36293+4]..[1021,36293+24])
                          Immutable
                          "values" (typing/typemod.ml[1021,36293+4]..[1021,36293+10])                          core_type (typing/typemod.ml[1021,36293+12]..[1021,36293+23])
                            Ptyp_constr "names_infos" (typing/typemod.ml[1021,36293+12]..[1021,36293+23])
                            []
                        (typing/typemod.ml[1022,36318+4]..[1022,36318+23])
                          Immutable
                          "types" (typing/typemod.ml[1022,36318+4]..[1022,36318+9])                          core_type (typing/typemod.ml[1022,36318+11]..[1022,36318+22])
                            Ptyp_constr "names_infos" (typing/typemod.ml[1022,36318+11]..[1022,36318+22])
                            []
                        (typing/typemod.ml[1023,36342+4]..[1023,36342+25])
                          Immutable
                          "modules" (typing/typemod.ml[1023,36342+4]..[1023,36342+11])                          core_type (typing/typemod.ml[1023,36342+13]..[1023,36342+24])
                            Ptyp_constr "names_infos" (typing/typemod.ml[1023,36342+13]..[1023,36342+24])
                            []
                        (typing/typemod.ml[1024,36368+4]..[1024,36368+26])
                          Immutable
                          "modtypes" (typing/typemod.ml[1024,36368+4]..[1024,36368+12])                          core_type (typing/typemod.ml[1024,36368+14]..[1024,36368+25])
                            Ptyp_constr "names_infos" (typing/typemod.ml[1024,36368+14]..[1024,36368+25])
                            []
                        (typing/typemod.ml[1025,36395+4]..[1025,36395+25])
                          Immutable
                          "typexts" (typing/typemod.ml[1025,36395+4]..[1025,36395+11])                          core_type (typing/typemod.ml[1025,36395+13]..[1025,36395+24])
                            Ptyp_constr "names_infos" (typing/typemod.ml[1025,36395+13]..[1025,36395+24])
                            []
                        (typing/typemod.ml[1026,36421+4]..[1026,36421+25])
                          Immutable
                          "classes" (typing/typemod.ml[1026,36421+4]..[1026,36421+11])                          core_type (typing/typemod.ml[1026,36421+13]..[1026,36421+24])
                            Ptyp_constr "names_infos" (typing/typemod.ml[1026,36421+13]..[1026,36421+24])
                            []
                        (typing/typemod.ml[1027,36447+4]..[1027,36447+29])
                          Immutable
                          "class_types" (typing/typemod.ml[1027,36447+4]..[1027,36447+15])                          core_type (typing/typemod.ml[1027,36447+17]..[1027,36447+28])
                            Ptyp_constr "names_infos" (typing/typemod.ml[1027,36447+17]..[1027,36447+28])
                            []
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (typing/typemod.ml[1030,36482+2]..[1038,36738+3])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1030,36482+6]..[1030,36482+15])
                    Ppat_var "new_names" (typing/typemod.ml[1030,36482+6]..[1030,36482+15])
                  expression (typing/typemod.ml[1030,36482+16]..[1038,36738+3]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[1030,36482+16]..[1030,36482+18])
                      Ppat_construct "()" (typing/typemod.ml[1030,36482+16]..[1030,36482+18])
                      None
                    expression (typing/typemod.ml[1030,36482+21]..[1038,36738+3])
                      Pexp_record
                      [
                        "values" (typing/typemod.ml[1031,36505+4]..[1031,36505+10])
                          expression (typing/typemod.ml[1031,36505+13]..[1031,36505+30])
                            Pexp_apply
                            expression (typing/typemod.ml[1031,36505+13]..[1031,36505+27])
                              Pexp_ident "Hashtbl.create" (typing/typemod.ml[1031,36505+13]..[1031,36505+27])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1031,36505+28]..[1031,36505+30])
                                  Pexp_constant PConst_int (16,None)
                            ]
                        "types" (typing/typemod.ml[1032,36537+4]..[1032,36537+9])
                          expression (typing/typemod.ml[1032,36537+12]..[1032,36537+29])
                            Pexp_apply
                            expression (typing/typemod.ml[1032,36537+12]..[1032,36537+26])
                              Pexp_ident "Hashtbl.create" (typing/typemod.ml[1032,36537+12]..[1032,36537+26])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1032,36537+27]..[1032,36537+29])
                                  Pexp_constant PConst_int (16,None)
                            ]
                        "modules" (typing/typemod.ml[1033,36568+4]..[1033,36568+11])
                          expression (typing/typemod.ml[1033,36568+14]..[1033,36568+31])
                            Pexp_apply
                            expression (typing/typemod.ml[1033,36568+14]..[1033,36568+28])
                              Pexp_ident "Hashtbl.create" (typing/typemod.ml[1033,36568+14]..[1033,36568+28])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1033,36568+29]..[1033,36568+31])
                                  Pexp_constant PConst_int (16,None)
                            ]
                        "modtypes" (typing/typemod.ml[1034,36601+4]..[1034,36601+12])
                          expression (typing/typemod.ml[1034,36601+15]..[1034,36601+32])
                            Pexp_apply
                            expression (typing/typemod.ml[1034,36601+15]..[1034,36601+29])
                              Pexp_ident "Hashtbl.create" (typing/typemod.ml[1034,36601+15]..[1034,36601+29])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1034,36601+30]..[1034,36601+32])
                                  Pexp_constant PConst_int (16,None)
                            ]
                        "typexts" (typing/typemod.ml[1035,36635+4]..[1035,36635+11])
                          expression (typing/typemod.ml[1035,36635+14]..[1035,36635+31])
                            Pexp_apply
                            expression (typing/typemod.ml[1035,36635+14]..[1035,36635+28])
                              Pexp_ident "Hashtbl.create" (typing/typemod.ml[1035,36635+14]..[1035,36635+28])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1035,36635+29]..[1035,36635+31])
                                  Pexp_constant PConst_int (16,None)
                            ]
                        "classes" (typing/typemod.ml[1036,36668+4]..[1036,36668+11])
                          expression (typing/typemod.ml[1036,36668+14]..[1036,36668+31])
                            Pexp_apply
                            expression (typing/typemod.ml[1036,36668+14]..[1036,36668+28])
                              Pexp_ident "Hashtbl.create" (typing/typemod.ml[1036,36668+14]..[1036,36668+28])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1036,36668+29]..[1036,36668+31])
                                  Pexp_constant PConst_int (16,None)
                            ]
                        "class_types" (typing/typemod.ml[1037,36701+4]..[1037,36701+15])
                          expression (typing/typemod.ml[1037,36701+18]..[1037,36701+35])
                            Pexp_apply
                            expression (typing/typemod.ml[1037,36701+18]..[1037,36701+32])
                              Pexp_ident "Hashtbl.create" (typing/typemod.ml[1037,36701+18]..[1037,36701+32])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1037,36701+33]..[1037,36701+35])
                                  Pexp_constant PConst_int (16,None)
                            ]
                      ]
                      None
              ]
            structure_item (typing/typemod.ml[1040,36743+2]..[1043,36808+3])
              Pstr_type Rec
              [
                type_declaration "t" (typing/typemod.ml[1040,36743+7]..[1040,36743+8]) (typing/typemod.ml[1040,36743+2]..[1043,36808+3])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_record
                      [
                        (typing/typemod.ml[1041,36756+4]..[1041,36756+17])
                          Immutable
                          "bound" (typing/typemod.ml[1041,36756+4]..[1041,36756+9])                          core_type (typing/typemod.ml[1041,36756+11]..[1041,36756+16])
                            Ptyp_constr "names" (typing/typemod.ml[1041,36756+11]..[1041,36756+16])
                            []
                        (typing/typemod.ml[1042,36774+4]..[1042,36774+33])
                          Immutable
                          "to_be_removed" (typing/typemod.ml[1042,36774+4]..[1042,36774+17])                          core_type (typing/typemod.ml[1042,36774+19]..[1042,36774+32])
                            Ptyp_constr "to_be_removed" (typing/typemod.ml[1042,36774+19]..[1042,36774+32])
                            []
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (typing/typemod.ml[1045,36813+2]..[1052,36993+3])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1045,36813+6]..[1045,36813+12])
                    Ppat_var "create" (typing/typemod.ml[1045,36813+6]..[1045,36813+12])
                  expression (typing/typemod.ml[1045,36813+13]..[1052,36993+3]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[1045,36813+13]..[1045,36813+15])
                      Ppat_construct "()" (typing/typemod.ml[1045,36813+13]..[1045,36813+15])
                      None
                    expression (typing/typemod.ml[1045,36813+18]..[1052,36993+3])
                      Pexp_record
                      [
                        "bound" (typing/typemod.ml[1046,36833+4]..[1046,36833+9])
                          expression (typing/typemod.ml[1046,36833+12]..[1046,36833+24])
                            Pexp_apply
                            expression (typing/typemod.ml[1046,36833+12]..[1046,36833+21])
                              Pexp_ident "new_names" (typing/typemod.ml[1046,36833+12]..[1046,36833+21])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1046,36833+22]..[1046,36833+24])
                                  Pexp_construct "()" (typing/typemod.ml[1046,36833+22]..[1046,36833+24])
                                  None
                            ]
                        "to_be_removed" (typing/typemod.ml[1047,36859+4]..[1047,36859+17])
                          expression (typing/typemod.ml[1047,36859+20]..[1051,36986+5])
                            Pexp_record
                            [
                              "subst" (typing/typemod.ml[1048,36881+6]..[1048,36881+11])
                                expression (typing/typemod.ml[1048,36881+14]..[1048,36881+28])
                                  Pexp_ident "Subst.identity" (typing/typemod.ml[1048,36881+14]..[1048,36881+28])
                              "hide" (typing/typemod.ml[1049,36911+6]..[1049,36911+10])
                                expression (typing/typemod.ml[1049,36911+13]..[1049,36911+28])
                                  Pexp_ident "Ident.Map.empty" (typing/typemod.ml[1049,36911+13]..[1049,36911+28])
                              "unpackable_modtypes" (typing/typemod.ml[1050,36941+6]..[1050,36941+25])
                                expression (typing/typemod.ml[1050,36941+28]..[1050,36941+43])
                                  Pexp_ident "Ident.Set.empty" (typing/typemod.ml[1050,36941+28]..[1050,36941+43])
                            ]
                            None
                      ]
                      None
              ]
            structure_item (typing/typemod.ml[1054,36998+2]..[1063,37286+37])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1054,36998+6]..[1054,36998+15])
                    Ppat_var "table_for" (typing/typemod.ml[1054,36998+6]..[1054,36998+15])
                  expression (typing/typemod.ml[1054,36998+16]..[1063,37286+37]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[1054,36998+16]..[1054,36998+25])
                      Ppat_var "component" (typing/typemod.ml[1054,36998+16]..[1054,36998+25])
                    expression (typing/typemod.ml[1054,36998+26]..[1063,37286+37]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[1054,36998+26]..[1054,36998+31])
                        Ppat_var "names" (typing/typemod.ml[1054,36998+26]..[1054,36998+31])
                      expression (typing/typemod.ml[1055,37032+4]..[1063,37286+37])
                        Pexp_open Fresh
                        module_expr (typing/typemod.ml[1055,37032+13]..[1055,37032+31])
                          Pmod_ident "Sig_component_kind" (typing/typemod.ml[1055,37032+13]..[1055,37032+31])
                        expression (typing/typemod.ml[1056,37067+4]..[1063,37286+37])
                          Pexp_match
                          expression (typing/typemod.ml[1056,37067+10]..[1056,37067+19])
                            Pexp_ident "component" (typing/typemod.ml[1056,37067+10]..[1056,37067+19])
                          [
                            <case>
                              pattern (typing/typemod.ml[1057,37092+6]..[1057,37092+11])
                                Ppat_construct "Value" (typing/typemod.ml[1057,37092+6]..[1057,37092+11])
                                None
                              expression (typing/typemod.ml[1057,37092+15]..[1057,37092+27])
                                Pexp_field
                                expression (typing/typemod.ml[1057,37092+15]..[1057,37092+20])
                                  Pexp_ident "names" (typing/typemod.ml[1057,37092+15]..[1057,37092+20])
                                "values" (typing/typemod.ml[1057,37092+21]..[1057,37092+27])
                            <case>
                              pattern (typing/typemod.ml[1058,37120+6]..[1058,37120+10])
                                Ppat_construct "Type" (typing/typemod.ml[1058,37120+6]..[1058,37120+10])
                                None
                              expression (typing/typemod.ml[1058,37120+14]..[1058,37120+25])
                                Pexp_field
                                expression (typing/typemod.ml[1058,37120+14]..[1058,37120+19])
                                  Pexp_ident "names" (typing/typemod.ml[1058,37120+14]..[1058,37120+19])
                                "types" (typing/typemod.ml[1058,37120+20]..[1058,37120+25])
                            <case>
                              pattern (typing/typemod.ml[1059,37146+6]..[1059,37146+12])
                                Ppat_construct "Module" (typing/typemod.ml[1059,37146+6]..[1059,37146+12])
                                None
                              expression (typing/typemod.ml[1059,37146+16]..[1059,37146+29])
                                Pexp_field
                                expression (typing/typemod.ml[1059,37146+16]..[1059,37146+21])
                                  Pexp_ident "names" (typing/typemod.ml[1059,37146+16]..[1059,37146+21])
                                "modules" (typing/typemod.ml[1059,37146+22]..[1059,37146+29])
                            <case>
                              pattern (typing/typemod.ml[1060,37176+6]..[1060,37176+17])
                                Ppat_construct "Module_type" (typing/typemod.ml[1060,37176+6]..[1060,37176+17])
                                None
                              expression (typing/typemod.ml[1060,37176+21]..[1060,37176+35])
                                Pexp_field
                                expression (typing/typemod.ml[1060,37176+21]..[1060,37176+26])
                                  Pexp_ident "names" (typing/typemod.ml[1060,37176+21]..[1060,37176+26])
                                "modtypes" (typing/typemod.ml[1060,37176+27]..[1060,37176+35])
                            <case>
                              pattern (typing/typemod.ml[1061,37212+6]..[1061,37212+27])
                                Ppat_construct "Extension_constructor" (typing/typemod.ml[1061,37212+6]..[1061,37212+27])
                                None
                              expression (typing/typemod.ml[1061,37212+31]..[1061,37212+44])
                                Pexp_field
                                expression (typing/typemod.ml[1061,37212+31]..[1061,37212+36])
                                  Pexp_ident "names" (typing/typemod.ml[1061,37212+31]..[1061,37212+36])
                                "typexts" (typing/typemod.ml[1061,37212+37]..[1061,37212+44])
                            <case>
                              pattern (typing/typemod.ml[1062,37257+6]..[1062,37257+11])
                                Ppat_construct "Class" (typing/typemod.ml[1062,37257+6]..[1062,37257+11])
                                None
                              expression (typing/typemod.ml[1062,37257+15]..[1062,37257+28])
                                Pexp_field
                                expression (typing/typemod.ml[1062,37257+15]..[1062,37257+20])
                                  Pexp_ident "names" (typing/typemod.ml[1062,37257+15]..[1062,37257+20])
                                "classes" (typing/typemod.ml[1062,37257+21]..[1062,37257+28])
                            <case>
                              pattern (typing/typemod.ml[1063,37286+6]..[1063,37286+16])
                                Ppat_construct "Class_type" (typing/typemod.ml[1063,37286+6]..[1063,37286+16])
                                None
                              expression (typing/typemod.ml[1063,37286+20]..[1063,37286+37])
                                Pexp_field
                                expression (typing/typemod.ml[1063,37286+20]..[1063,37286+25])
                                  Pexp_ident "names" (typing/typemod.ml[1063,37286+20]..[1063,37286+25])
                                "class_types" (typing/typemod.ml[1063,37286+26]..[1063,37286+37])
                          ]
              ]
            structure_item (typing/typemod.ml[1065,37325+2]..[1091,38433+65])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1065,37325+6]..[1065,37325+11])
                    Ppat_var "check" (typing/typemod.ml[1065,37325+6]..[1065,37325+11])
                  expression (typing/typemod.ml[1065,37325+12]..[1091,38433+65]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[1065,37325+12]..[1065,37325+14])
                      Ppat_var "cl" (typing/typemod.ml[1065,37325+12]..[1065,37325+14])
                    expression (typing/typemod.ml[1065,37325+15]..[1091,38433+65]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[1065,37325+15]..[1065,37325+16])
                        Ppat_var "t" (typing/typemod.ml[1065,37325+15]..[1065,37325+16])
                      expression (typing/typemod.ml[1065,37325+17]..[1091,38433+65]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1065,37325+17]..[1065,37325+20])
                          Ppat_var "loc" (typing/typemod.ml[1065,37325+17]..[1065,37325+20])
                        expression (typing/typemod.ml[1065,37325+21]..[1091,38433+65]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[1065,37325+21]..[1065,37325+23])
                            Ppat_var "id" (typing/typemod.ml[1065,37325+21]..[1065,37325+23])
                          expression (typing/typemod.ml[1065,37325+24]..[1091,38433+65]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[1065,37325+24]..[1065,37325+37])
                              Ppat_constraint
                              pattern (typing/typemod.ml[1065,37325+25]..[1065,37325+29])
                                Ppat_var "info" (typing/typemod.ml[1065,37325+25]..[1065,37325+29])
                              core_type (typing/typemod.ml[1065,37325+32]..[1065,37325+36])
                                Ptyp_constr "info" (typing/typemod.ml[1065,37325+32]..[1065,37325+36])
                                []
                            expression (typing/typemod.ml[1066,37365+4]..[1091,38433+65])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[1066,37365+8]..[1066,37365+21])
                                    Ppat_var "to_be_removed" (typing/typemod.ml[1066,37365+8]..[1066,37365+21])
                                  expression (typing/typemod.ml[1066,37365+24]..[1066,37365+39])
                                    Pexp_field
                                    expression (typing/typemod.ml[1066,37365+24]..[1066,37365+25])
                                      Pexp_ident "t" (typing/typemod.ml[1066,37365+24]..[1066,37365+25])
                                    "to_be_removed" (typing/typemod.ml[1066,37365+26]..[1066,37365+39])
                              ]
                              expression (typing/typemod.ml[1067,37408+4]..[1091,38433+65])
                                Pexp_match
                                expression (typing/typemod.ml[1067,37408+10]..[1067,37408+14])
                                  Pexp_ident "info" (typing/typemod.ml[1067,37408+10]..[1067,37408+14])
                                [
                                  <case>
                                    pattern (typing/typemod.ml[1068,37428+6]..[1068,37428+25])
                                      Ppat_variant "Substituted_away"
                                      Some
                                        pattern (typing/typemod.ml[1068,37428+24]..[1068,37428+25])
                                          Ppat_var "s" (typing/typemod.ml[1068,37428+24]..[1068,37428+25])
                                    expression (typing/typemod.ml[1069,37457+8]..[1069,37457+66])
                                      Pexp_setfield
                                      expression (typing/typemod.ml[1069,37457+8]..[1069,37457+21])
                                        Pexp_ident "to_be_removed" (typing/typemod.ml[1069,37457+8]..[1069,37457+21])
                                      "subst" (typing/typemod.ml[1069,37457+22]..[1069,37457+27])
                                      expression (typing/typemod.ml[1069,37457+31]..[1069,37457+66])
                                        Pexp_apply
                                        expression (typing/typemod.ml[1069,37457+31]..[1069,37457+44])
                                          Pexp_ident "Subst.compose" (typing/typemod.ml[1069,37457+31]..[1069,37457+44])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1069,37457+45]..[1069,37457+46])
                                              Pexp_ident "s" (typing/typemod.ml[1069,37457+45]..[1069,37457+46])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1069,37457+47]..[1069,37457+66])
                                              Pexp_field
                                              expression (typing/typemod.ml[1069,37457+47]..[1069,37457+60])
                                                Pexp_ident "to_be_removed" (typing/typemod.ml[1069,37457+47]..[1069,37457+60])
                                              "subst" (typing/typemod.ml[1069,37457+61]..[1069,37457+66])
                                        ]
                                  <case>
                                    pattern (typing/typemod.ml[1070,37525+6]..[1070,37525+49])
                                      Ppat_variant "Unpackable_modtype_substituted_away"
                                      Some
                                        pattern (typing/typemod.ml[1070,37525+43]..[1070,37525+49])
                                          Ppat_tuple
                                          [
                                            pattern (typing/typemod.ml[1070,37525+44]..[1070,37525+46])
                                              Ppat_var "id" (typing/typemod.ml[1070,37525+44]..[1070,37525+46])
                                            pattern (typing/typemod.ml[1070,37525+47]..[1070,37525+48])
                                              Ppat_var "s" (typing/typemod.ml[1070,37525+47]..[1070,37525+48])
                                          ]
                                    expression (typing/typemod.ml[1071,37578+8]..[1073,37691+60])
                                      Pexp_sequence
                                      expression (typing/typemod.ml[1071,37578+8]..[1071,37578+66])
                                        Pexp_setfield
                                        expression (typing/typemod.ml[1071,37578+8]..[1071,37578+21])
                                          Pexp_ident "to_be_removed" (typing/typemod.ml[1071,37578+8]..[1071,37578+21])
                                        "subst" (typing/typemod.ml[1071,37578+22]..[1071,37578+27])
                                        expression (typing/typemod.ml[1071,37578+31]..[1071,37578+66])
                                          Pexp_apply
                                          expression (typing/typemod.ml[1071,37578+31]..[1071,37578+44])
                                            Pexp_ident "Subst.compose" (typing/typemod.ml[1071,37578+31]..[1071,37578+44])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1071,37578+45]..[1071,37578+46])
                                                Pexp_ident "s" (typing/typemod.ml[1071,37578+45]..[1071,37578+46])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1071,37578+47]..[1071,37578+66])
                                                Pexp_field
                                                expression (typing/typemod.ml[1071,37578+47]..[1071,37578+60])
                                                  Pexp_ident "to_be_removed" (typing/typemod.ml[1071,37578+47]..[1071,37578+60])
                                                "subst" (typing/typemod.ml[1071,37578+61]..[1071,37578+66])
                                          ]
                                      expression (typing/typemod.ml[1072,37646+8]..[1073,37691+60])
                                        Pexp_setfield
                                        expression (typing/typemod.ml[1072,37646+8]..[1072,37646+21])
                                          Pexp_ident "to_be_removed" (typing/typemod.ml[1072,37646+8]..[1072,37646+21])
                                        "unpackable_modtypes" (typing/typemod.ml[1072,37646+22]..[1072,37646+41])
                                        expression (typing/typemod.ml[1073,37691+10]..[1073,37691+60])
                                          Pexp_apply
                                          expression (typing/typemod.ml[1073,37691+10]..[1073,37691+23])
                                            Pexp_ident "Ident.Set.add" (typing/typemod.ml[1073,37691+10]..[1073,37691+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1073,37691+24]..[1073,37691+26])
                                                Pexp_ident "id" (typing/typemod.ml[1073,37691+24]..[1073,37691+26])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1073,37691+27]..[1073,37691+60])
                                                Pexp_field
                                                expression (typing/typemod.ml[1073,37691+27]..[1073,37691+40])
                                                  Pexp_ident "to_be_removed" (typing/typemod.ml[1073,37691+27]..[1073,37691+40])
                                                "unpackable_modtypes" (typing/typemod.ml[1073,37691+41]..[1073,37691+60])
                                          ]
                                  <case>
                                    pattern (typing/typemod.ml[1074,37752+6]..[1074,37752+16])
                                      Ppat_variant "From_open"
                                      None
                                    expression (typing/typemod.ml[1075,37772+8]..[1076,37802+66])
                                      Pexp_setfield
                                      expression (typing/typemod.ml[1075,37772+8]..[1075,37772+21])
                                        Pexp_ident "to_be_removed" (typing/typemod.ml[1075,37772+8]..[1075,37772+21])
                                      "hide" (typing/typemod.ml[1075,37772+22]..[1075,37772+26])
                                      expression (typing/typemod.ml[1076,37802+10]..[1076,37802+66])
                                        Pexp_apply
                                        expression (typing/typemod.ml[1076,37802+10]..[1076,37802+23])
                                          Pexp_ident "Ident.Map.add" (typing/typemod.ml[1076,37802+10]..[1076,37802+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1076,37802+24]..[1076,37802+26])
                                              Pexp_ident "id" (typing/typemod.ml[1076,37802+24]..[1076,37802+26])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1076,37802+27]..[1076,37802+47])
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[1076,37802+28]..[1076,37802+30])
                                                  Pexp_ident "cl" (typing/typemod.ml[1076,37802+28]..[1076,37802+30])
                                                expression (typing/typemod.ml[1076,37802+32]..[1076,37802+35])
                                                  Pexp_ident "loc" (typing/typemod.ml[1076,37802+32]..[1076,37802+35])
                                                expression (typing/typemod.ml[1076,37802+37]..[1076,37802+46])
                                                  Pexp_construct "From_open" (typing/typemod.ml[1076,37802+37]..[1076,37802+46])
                                                  None
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1076,37802+48]..[1076,37802+66])
                                              Pexp_field
                                              expression (typing/typemod.ml[1076,37802+48]..[1076,37802+61])
                                                Pexp_ident "to_be_removed" (typing/typemod.ml[1076,37802+48]..[1076,37802+61])
                                              "hide" (typing/typemod.ml[1076,37802+62]..[1076,37802+66])
                                        ]
                                  <case>
                                    pattern (typing/typemod.ml[1077,37869+6]..[1077,37869+31])
                                      Ppat_alias "bound_info" (typing/typemod.ml[1077,37869+21]..[1077,37869+31])
                                      pattern (typing/typemod.ml[1077,37869+6]..[1077,37869+17])
                                        Ppat_type
                                        "bound_info" (typing/typemod.ml[1077,37869+7]..[1077,37869+17])
                                    expression (typing/typemod.ml[1078,37904+8]..[1091,38433+65])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[1078,37904+12]..[1078,37904+15])
                                            Ppat_var "tbl" (typing/typemod.ml[1078,37904+12]..[1078,37904+15])
                                          expression (typing/typemod.ml[1078,37904+18]..[1078,37904+38])
                                            Pexp_apply
                                            expression (typing/typemod.ml[1078,37904+18]..[1078,37904+27])
                                              Pexp_ident "table_for" (typing/typemod.ml[1078,37904+18]..[1078,37904+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1078,37904+28]..[1078,37904+30])
                                                  Pexp_ident "cl" (typing/typemod.ml[1078,37904+28]..[1078,37904+30])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1078,37904+31]..[1078,37904+38])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[1078,37904+31]..[1078,37904+32])
                                                    Pexp_ident "t" (typing/typemod.ml[1078,37904+31]..[1078,37904+32])
                                                  "bound" (typing/typemod.ml[1078,37904+33]..[1078,37904+38])
                                            ]
                                      ]
                                      expression (typing/typemod.ml[1079,37946+8]..[1091,38433+65])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[1079,37946+12]..[1079,37946+16])
                                              Ppat_var "name" (typing/typemod.ml[1079,37946+12]..[1079,37946+16])
                                            expression (typing/typemod.ml[1079,37946+19]..[1079,37946+32])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1079,37946+19]..[1079,37946+29])
                                                Pexp_ident "Ident.name" (typing/typemod.ml[1079,37946+19]..[1079,37946+29])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1079,37946+30]..[1079,37946+32])
                                                    Pexp_ident "id" (typing/typemod.ml[1079,37946+30]..[1079,37946+32])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[1080,37982+8]..[1091,38433+65])
                                          Pexp_match
                                          expression (typing/typemod.ml[1080,37982+14]..[1080,37982+39])
                                            Pexp_apply
                                            expression (typing/typemod.ml[1080,37982+14]..[1080,37982+30])
                                              Pexp_ident "Hashtbl.find_opt" (typing/typemod.ml[1080,37982+14]..[1080,37982+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1080,37982+31]..[1080,37982+34])
                                                  Pexp_ident "tbl" (typing/typemod.ml[1080,37982+31]..[1080,37982+34])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1080,37982+35]..[1080,37982+39])
                                                  Pexp_ident "name" (typing/typemod.ml[1080,37982+35]..[1080,37982+39])
                                            ]
                                          [
                                            <case>
                                              pattern (typing/typemod.ml[1081,38027+10]..[1081,38027+14])
                                                Ppat_construct "None" (typing/typemod.ml[1081,38027+10]..[1081,38027+14])
                                                None
                                              expression (typing/typemod.ml[1081,38027+18]..[1081,38027+49])
                                                Pexp_apply
                                                expression (typing/typemod.ml[1081,38027+18]..[1081,38027+29])
                                                  Pexp_ident "Hashtbl.add" (typing/typemod.ml[1081,38027+18]..[1081,38027+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1081,38027+30]..[1081,38027+33])
                                                      Pexp_ident "tbl" (typing/typemod.ml[1081,38027+30]..[1081,38027+33])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1081,38027+34]..[1081,38027+38])
                                                      Pexp_ident "name" (typing/typemod.ml[1081,38027+34]..[1081,38027+38])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1081,38027+39]..[1081,38027+49])
                                                      Pexp_ident "bound_info" (typing/typemod.ml[1081,38027+39]..[1081,38027+49])
                                                ]
                                            <case>
                                              pattern (typing/typemod.ml[1082,38077+10]..[1082,38077+30])
                                                Ppat_construct "Some" (typing/typemod.ml[1082,38077+10]..[1082,38077+14])
                                                Some
                                                  []
                                                  pattern (typing/typemod.ml[1082,38077+15]..[1082,38077+30])
                                                    Ppat_variant "Shadowable"
                                                    Some
                                                      pattern (typing/typemod.ml[1082,38077+28]..[1082,38077+29])
                                                        Ppat_var "s" (typing/typemod.ml[1082,38077+28]..[1082,38077+29])
                                              expression (typing/typemod.ml[1083,38111+12]..[1089,38381+23])
                                                Pexp_sequence
                                                expression (typing/typemod.ml[1083,38111+12]..[1083,38111+47])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[1083,38111+12]..[1083,38111+27])
                                                    Pexp_ident "Hashtbl.replace" (typing/typemod.ml[1083,38111+12]..[1083,38111+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1083,38111+28]..[1083,38111+31])
                                                        Pexp_ident "tbl" (typing/typemod.ml[1083,38111+28]..[1083,38111+31])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1083,38111+32]..[1083,38111+36])
                                                        Pexp_ident "name" (typing/typemod.ml[1083,38111+32]..[1083,38111+36])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1083,38111+37]..[1083,38111+47])
                                                        Pexp_ident "bound_info" (typing/typemod.ml[1083,38111+37]..[1083,38111+47])
                                                  ]
                                                expression (typing/typemod.ml[1084,38160+12]..[1089,38381+23])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typemod.ml[1084,38160+16]..[1084,38160+22])
                                                        Ppat_var "reason" (typing/typemod.ml[1084,38160+16]..[1084,38160+22])
                                                      expression (typing/typemod.ml[1084,38160+25]..[1084,38160+46])
                                                        Pexp_construct "Shadowed_by" (typing/typemod.ml[1084,38160+25]..[1084,38160+36])
                                                        Some
                                                          expression (typing/typemod.ml[1084,38160+37]..[1084,38160+46])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typemod.ml[1084,38160+38]..[1084,38160+40])
                                                                Pexp_ident "id" (typing/typemod.ml[1084,38160+38]..[1084,38160+40])
                                                              expression (typing/typemod.ml[1084,38160+42]..[1084,38160+45])
                                                                Pexp_ident "loc" (typing/typemod.ml[1084,38160+42]..[1084,38160+45])
                                                            ]
                                                  ]
                                                  expression (typing/typemod.ml[1085,38210+12]..[1089,38381+23])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[1085,38210+12]..[1085,38210+21])
                                                      Pexp_ident "List.iter" (typing/typemod.ml[1085,38210+12]..[1085,38210+21])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1085,38210+22]..[1089,38381+15])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (typing/typemod.ml[1085,38210+27]..[1085,38210+38])
                                                            Ppat_var "shadowed_id" (typing/typemod.ml[1085,38210+27]..[1085,38210+38])
                                                          expression (typing/typemod.ml[1086,38252+12]..[1088,38346+34])
                                                            Pexp_setfield
                                                            expression (typing/typemod.ml[1086,38252+12]..[1086,38252+25])
                                                              Pexp_ident "to_be_removed" (typing/typemod.ml[1086,38252+12]..[1086,38252+25])
                                                            "hide" (typing/typemod.ml[1086,38252+26]..[1086,38252+30])
                                                            expression (typing/typemod.ml[1087,38286+14]..[1088,38346+34])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[1087,38286+14]..[1087,38286+27])
                                                                Pexp_ident "Ident.Map.add" (typing/typemod.ml[1087,38286+14]..[1087,38286+27])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1087,38286+28]..[1087,38286+39])
                                                                    Pexp_ident "shadowed_id" (typing/typemod.ml[1087,38286+28]..[1087,38286+39])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1087,38286+40]..[1087,38286+59])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typemod.ml[1087,38286+41]..[1087,38286+43])
Pexp_ident "cl" (typing/typemod.ml[1087,38286+41]..[1087,38286+43])
                                                                      expression (typing/typemod.ml[1087,38286+45]..[1087,38286+50])
Pexp_field
expression (typing/typemod.ml[1087,38286+45]..[1087,38286+46])
  Pexp_ident "s" (typing/typemod.ml[1087,38286+45]..[1087,38286+46])
"loc" (typing/typemod.ml[1087,38286+47]..[1087,38286+50])
                                                                      expression (typing/typemod.ml[1087,38286+52]..[1087,38286+58])
Pexp_ident "reason" (typing/typemod.ml[1087,38286+52]..[1087,38286+58])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1088,38346+16]..[1088,38346+34])
                                                                    Pexp_field
                                                                    expression (typing/typemod.ml[1088,38346+16]..[1088,38346+29])
                                                                      Pexp_ident "to_be_removed" (typing/typemod.ml[1088,38346+16]..[1088,38346+29])
                                                                    "hide" (typing/typemod.ml[1088,38346+30]..[1088,38346+34])
                                                              ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1089,38381+16]..[1089,38381+23])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[1089,38381+16]..[1089,38381+17])
                                                            Pexp_ident "s" (typing/typemod.ml[1089,38381+16]..[1089,38381+17])
                                                          "group" (typing/typemod.ml[1089,38381+18]..[1089,38381+23])
                                                    ]
                                            <case>
                                              pattern (typing/typemod.ml[1090,38405+10]..[1090,38405+24])
                                                Ppat_construct "Some" (typing/typemod.ml[1090,38405+10]..[1090,38405+14])
                                                Some
                                                  []
                                                  pattern (typing/typemod.ml[1090,38405+15]..[1090,38405+24])
                                                    Ppat_variant "Exported"
                                                    None
                                              expression (typing/typemod.ml[1091,38433+12]..[1091,38433+65])
                                                Pexp_apply
                                                expression (typing/typemod.ml[1091,38433+12]..[1091,38433+17])
                                                  Pexp_ident "raise" (typing/typemod.ml[1091,38433+12]..[1091,38433+17])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1091,38433+17]..[1091,38433+65])
                                                      Pexp_construct "Error" (typing/typemod.ml[1091,38433+18]..[1091,38433+23])
                                                      Some
                                                        expression (typing/typemod.ml[1091,38433+23]..[1091,38433+64])
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/typemod.ml[1091,38433+24]..[1091,38433+27])
                                                              Pexp_ident "loc" (typing/typemod.ml[1091,38433+24]..[1091,38433+27])
                                                            expression (typing/typemod.ml[1091,38433+29]..[1091,38433+38])
                                                              Pexp_ident "Env.empty" (typing/typemod.ml[1091,38433+29]..[1091,38433+38])
                                                            expression (typing/typemod.ml[1091,38433+40]..[1091,38433+63])
                                                              Pexp_construct "Repeated_name" (typing/typemod.ml[1091,38433+40]..[1091,38433+53])
                                                              Some
                                                                expression (typing/typemod.ml[1091,38433+53]..[1091,38433+63])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (typing/typemod.ml[1091,38433+54]..[1091,38433+56])
                                                                      Pexp_ident "cl" (typing/typemod.ml[1091,38433+54]..[1091,38433+56])
                                                                    expression (typing/typemod.ml[1091,38433+58]..[1091,38433+62])
                                                                      Pexp_ident "name" (typing/typemod.ml[1091,38433+58]..[1091,38433+62])
                                                                  ]
                                                          ]
                                                ]
                                          ]
                                ]
              ]
            structure_item (typing/typemod.ml[1093,38500+2]..[1099,38654+48])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1093,38500+6]..[1093,38500+17])
                    Ppat_var "check_value" (typing/typemod.ml[1093,38500+6]..[1093,38500+17])
                  expression (typing/typemod.ml[1093,38500+18]..[1099,38654+48]) ghost
                    Pexp_fun
                    Optional "info"
                    None
                    pattern (typing/typemod.ml[1093,38500+19]..[1093,38500+23])
                      Ppat_var "info" (typing/typemod.ml[1093,38500+19]..[1093,38500+23])
                    expression (typing/typemod.ml[1093,38500+24]..[1099,38654+48]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[1093,38500+24]..[1093,38500+25])
                        Ppat_var "t" (typing/typemod.ml[1093,38500+24]..[1093,38500+25])
                      expression (typing/typemod.ml[1093,38500+26]..[1099,38654+48]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1093,38500+26]..[1093,38500+29])
                          Ppat_var "loc" (typing/typemod.ml[1093,38500+26]..[1093,38500+29])
                        expression (typing/typemod.ml[1093,38500+30]..[1099,38654+48]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[1093,38500+30]..[1093,38500+32])
                            Ppat_var "id" (typing/typemod.ml[1093,38500+30]..[1093,38500+32])
                          expression (typing/typemod.ml[1094,38535+4]..[1099,38654+48])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[1094,38535+8]..[1094,38535+12])
                                  Ppat_var "info" (typing/typemod.ml[1094,38535+8]..[1094,38535+12])
                                expression (typing/typemod.ml[1095,38550+6]..[1097,38592+54])
                                  Pexp_match
                                  expression (typing/typemod.ml[1095,38550+12]..[1095,38550+16])
                                    Pexp_ident "info" (typing/typemod.ml[1095,38550+12]..[1095,38550+16])
                                  [
                                    <case>
                                      pattern (typing/typemod.ml[1096,38572+8]..[1096,38572+14])
                                        Ppat_construct "Some" (typing/typemod.ml[1096,38572+8]..[1096,38572+12])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1096,38572+13]..[1096,38572+14])
                                            Ppat_var "i" (typing/typemod.ml[1096,38572+13]..[1096,38572+14])
                                      expression (typing/typemod.ml[1096,38572+18]..[1096,38572+19])
                                        Pexp_ident "i" (typing/typemod.ml[1096,38572+18]..[1096,38572+19])
                                    <case>
                                      pattern (typing/typemod.ml[1097,38592+8]..[1097,38592+12])
                                        Ppat_construct "None" (typing/typemod.ml[1097,38592+8]..[1097,38592+12])
                                        None
                                      expression (typing/typemod.ml[1097,38592+16]..[1097,38592+54])
                                        Pexp_variant "Shadowable"
                                        Some
                                          expression (typing/typemod.ml[1097,38592+28]..[1097,38592+54])
                                            Pexp_record
                                            [
                                              "self" (typing/typemod.ml[1097,38592+29]..[1097,38592+33])
                                                expression (typing/typemod.ml[1097,38592+34]..[1097,38592+36])
                                                  Pexp_ident "id" (typing/typemod.ml[1097,38592+34]..[1097,38592+36])
                                              "group" (typing/typemod.ml[1097,38592+38]..[1097,38592+43])
                                                expression (typing/typemod.ml[1097,38592+44]..[1097,38592+48])
                                                  Pexp_construct "::" (typing/typemod.ml[1097,38592+45]..[1097,38592+48]) ghost
                                                  Some
                                                    expression (typing/typemod.ml[1097,38592+45]..[1097,38592+48]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typemod.ml[1097,38592+45]..[1097,38592+47])
                                                          Pexp_ident "id" (typing/typemod.ml[1097,38592+45]..[1097,38592+47])
                                                        expression (typing/typemod.ml[1097,38592+47]..[1097,38592+48]) ghost
                                                          Pexp_construct "[]" (typing/typemod.ml[1097,38592+47]..[1097,38592+48]) ghost
                                                          None
                                                      ]
                                              "loc" (typing/typemod.ml[1097,38592+50]..[1097,38592+53]) ghost
                                                expression (typing/typemod.ml[1097,38592+50]..[1097,38592+53])
                                                  Pexp_ident "loc" (typing/typemod.ml[1097,38592+50]..[1097,38592+53])
                                            ]
                                            None
                                  ]
                            ]
                            expression (typing/typemod.ml[1099,38654+4]..[1099,38654+48])
                              Pexp_apply
                              expression (typing/typemod.ml[1099,38654+4]..[1099,38654+9])
                                Pexp_ident "check" (typing/typemod.ml[1099,38654+4]..[1099,38654+9])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1099,38654+10]..[1099,38654+34])
                                    Pexp_construct "Sig_component_kind.Value" (typing/typemod.ml[1099,38654+10]..[1099,38654+34])
                                    None
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1099,38654+35]..[1099,38654+36])
                                    Pexp_ident "t" (typing/typemod.ml[1099,38654+35]..[1099,38654+36])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1099,38654+37]..[1099,38654+40])
                                    Pexp_ident "loc" (typing/typemod.ml[1099,38654+37]..[1099,38654+40])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1099,38654+41]..[1099,38654+43])
                                    Pexp_ident "id" (typing/typemod.ml[1099,38654+41]..[1099,38654+43])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1099,38654+44]..[1099,38654+48])
                                    Pexp_ident "info" (typing/typemod.ml[1099,38654+44]..[1099,38654+48])
                              ]
              ]
            structure_item (typing/typemod.ml[1100,38703+2]..[1101,38749+47])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1100,38703+6]..[1100,38703+16])
                    Ppat_var "check_type" (typing/typemod.ml[1100,38703+6]..[1100,38703+16])
                  expression (typing/typemod.ml[1100,38703+17]..[1101,38749+47]) ghost
                    Pexp_fun
                    Optional "info"
                    Some
                      expression (typing/typemod.ml[1100,38703+24]..[1100,38703+33])
                        Pexp_variant "Exported"
                        None
                    pattern (typing/typemod.ml[1100,38703+19]..[1100,38703+23])
                      Ppat_var "info" (typing/typemod.ml[1100,38703+19]..[1100,38703+23])
                    expression (typing/typemod.ml[1100,38703+35]..[1101,38749+47]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[1100,38703+35]..[1100,38703+36])
                        Ppat_var "t" (typing/typemod.ml[1100,38703+35]..[1100,38703+36])
                      expression (typing/typemod.ml[1100,38703+37]..[1101,38749+47]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1100,38703+37]..[1100,38703+40])
                          Ppat_var "loc" (typing/typemod.ml[1100,38703+37]..[1100,38703+40])
                        expression (typing/typemod.ml[1100,38703+41]..[1101,38749+47]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[1100,38703+41]..[1100,38703+43])
                            Ppat_var "id" (typing/typemod.ml[1100,38703+41]..[1100,38703+43])
                          expression (typing/typemod.ml[1101,38749+4]..[1101,38749+47])
                            Pexp_apply
                            expression (typing/typemod.ml[1101,38749+4]..[1101,38749+9])
                              Pexp_ident "check" (typing/typemod.ml[1101,38749+4]..[1101,38749+9])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1101,38749+10]..[1101,38749+33])
                                  Pexp_construct "Sig_component_kind.Type" (typing/typemod.ml[1101,38749+10]..[1101,38749+33])
                                  None
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1101,38749+34]..[1101,38749+35])
                                  Pexp_ident "t" (typing/typemod.ml[1101,38749+34]..[1101,38749+35])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1101,38749+36]..[1101,38749+39])
                                  Pexp_ident "loc" (typing/typemod.ml[1101,38749+36]..[1101,38749+39])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1101,38749+40]..[1101,38749+42])
                                  Pexp_ident "id" (typing/typemod.ml[1101,38749+40]..[1101,38749+42])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1101,38749+43]..[1101,38749+47])
                                  Pexp_ident "info" (typing/typemod.ml[1101,38749+43]..[1101,38749+47])
                            ]
              ]
            structure_item (typing/typemod.ml[1102,38797+2]..[1103,38845+49])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1102,38797+6]..[1102,38797+18])
                    Ppat_var "check_module" (typing/typemod.ml[1102,38797+6]..[1102,38797+18])
                  expression (typing/typemod.ml[1102,38797+19]..[1103,38845+49]) ghost
                    Pexp_fun
                    Optional "info"
                    Some
                      expression (typing/typemod.ml[1102,38797+26]..[1102,38797+35])
                        Pexp_variant "Exported"
                        None
                    pattern (typing/typemod.ml[1102,38797+21]..[1102,38797+25])
                      Ppat_var "info" (typing/typemod.ml[1102,38797+21]..[1102,38797+25])
                    expression (typing/typemod.ml[1102,38797+37]..[1103,38845+49]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[1102,38797+37]..[1102,38797+38])
                        Ppat_var "t" (typing/typemod.ml[1102,38797+37]..[1102,38797+38])
                      expression (typing/typemod.ml[1102,38797+39]..[1103,38845+49]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1102,38797+39]..[1102,38797+42])
                          Ppat_var "loc" (typing/typemod.ml[1102,38797+39]..[1102,38797+42])
                        expression (typing/typemod.ml[1102,38797+43]..[1103,38845+49]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[1102,38797+43]..[1102,38797+45])
                            Ppat_var "id" (typing/typemod.ml[1102,38797+43]..[1102,38797+45])
                          expression (typing/typemod.ml[1103,38845+4]..[1103,38845+49])
                            Pexp_apply
                            expression (typing/typemod.ml[1103,38845+4]..[1103,38845+9])
                              Pexp_ident "check" (typing/typemod.ml[1103,38845+4]..[1103,38845+9])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1103,38845+10]..[1103,38845+35])
                                  Pexp_construct "Sig_component_kind.Module" (typing/typemod.ml[1103,38845+10]..[1103,38845+35])
                                  None
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1103,38845+36]..[1103,38845+37])
                                  Pexp_ident "t" (typing/typemod.ml[1103,38845+36]..[1103,38845+37])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1103,38845+38]..[1103,38845+41])
                                  Pexp_ident "loc" (typing/typemod.ml[1103,38845+38]..[1103,38845+41])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1103,38845+42]..[1103,38845+44])
                                  Pexp_ident "id" (typing/typemod.ml[1103,38845+42]..[1103,38845+44])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1103,38845+45]..[1103,38845+49])
                                  Pexp_ident "info" (typing/typemod.ml[1103,38845+45]..[1103,38845+49])
                            ]
              ]
            structure_item (typing/typemod.ml[1104,38895+2]..[1105,38944+54])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1104,38895+6]..[1104,38895+19])
                    Ppat_var "check_modtype" (typing/typemod.ml[1104,38895+6]..[1104,38895+19])
                  expression (typing/typemod.ml[1104,38895+20]..[1105,38944+54]) ghost
                    Pexp_fun
                    Optional "info"
                    Some
                      expression (typing/typemod.ml[1104,38895+27]..[1104,38895+36])
                        Pexp_variant "Exported"
                        None
                    pattern (typing/typemod.ml[1104,38895+22]..[1104,38895+26])
                      Ppat_var "info" (typing/typemod.ml[1104,38895+22]..[1104,38895+26])
                    expression (typing/typemod.ml[1104,38895+38]..[1105,38944+54]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[1104,38895+38]..[1104,38895+39])
                        Ppat_var "t" (typing/typemod.ml[1104,38895+38]..[1104,38895+39])
                      expression (typing/typemod.ml[1104,38895+40]..[1105,38944+54]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1104,38895+40]..[1104,38895+43])
                          Ppat_var "loc" (typing/typemod.ml[1104,38895+40]..[1104,38895+43])
                        expression (typing/typemod.ml[1104,38895+44]..[1105,38944+54]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[1104,38895+44]..[1104,38895+46])
                            Ppat_var "id" (typing/typemod.ml[1104,38895+44]..[1104,38895+46])
                          expression (typing/typemod.ml[1105,38944+4]..[1105,38944+54])
                            Pexp_apply
                            expression (typing/typemod.ml[1105,38944+4]..[1105,38944+9])
                              Pexp_ident "check" (typing/typemod.ml[1105,38944+4]..[1105,38944+9])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1105,38944+10]..[1105,38944+40])
                                  Pexp_construct "Sig_component_kind.Module_type" (typing/typemod.ml[1105,38944+10]..[1105,38944+40])
                                  None
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1105,38944+41]..[1105,38944+42])
                                  Pexp_ident "t" (typing/typemod.ml[1105,38944+41]..[1105,38944+42])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1105,38944+43]..[1105,38944+46])
                                  Pexp_ident "loc" (typing/typemod.ml[1105,38944+43]..[1105,38944+46])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1105,38944+47]..[1105,38944+49])
                                  Pexp_ident "id" (typing/typemod.ml[1105,38944+47]..[1105,38944+49])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1105,38944+50]..[1105,38944+54])
                                  Pexp_ident "info" (typing/typemod.ml[1105,38944+50]..[1105,38944+54])
                            ]
              ]
            structure_item (typing/typemod.ml[1106,38999+2]..[1107,39047+64])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1106,38999+6]..[1106,38999+18])
                    Ppat_var "check_typext" (typing/typemod.ml[1106,38999+6]..[1106,38999+18])
                  expression (typing/typemod.ml[1106,38999+19]..[1107,39047+64]) ghost
                    Pexp_fun
                    Optional "info"
                    Some
                      expression (typing/typemod.ml[1106,38999+26]..[1106,38999+35])
                        Pexp_variant "Exported"
                        None
                    pattern (typing/typemod.ml[1106,38999+21]..[1106,38999+25])
                      Ppat_var "info" (typing/typemod.ml[1106,38999+21]..[1106,38999+25])
                    expression (typing/typemod.ml[1106,38999+37]..[1107,39047+64]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[1106,38999+37]..[1106,38999+38])
                        Ppat_var "t" (typing/typemod.ml[1106,38999+37]..[1106,38999+38])
                      expression (typing/typemod.ml[1106,38999+39]..[1107,39047+64]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1106,38999+39]..[1106,38999+42])
                          Ppat_var "loc" (typing/typemod.ml[1106,38999+39]..[1106,38999+42])
                        expression (typing/typemod.ml[1106,38999+43]..[1107,39047+64]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[1106,38999+43]..[1106,38999+45])
                            Ppat_var "id" (typing/typemod.ml[1106,38999+43]..[1106,38999+45])
                          expression (typing/typemod.ml[1107,39047+4]..[1107,39047+64])
                            Pexp_apply
                            expression (typing/typemod.ml[1107,39047+4]..[1107,39047+9])
                              Pexp_ident "check" (typing/typemod.ml[1107,39047+4]..[1107,39047+9])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1107,39047+10]..[1107,39047+50])
                                  Pexp_construct "Sig_component_kind.Extension_constructor" (typing/typemod.ml[1107,39047+10]..[1107,39047+50])
                                  None
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1107,39047+51]..[1107,39047+52])
                                  Pexp_ident "t" (typing/typemod.ml[1107,39047+51]..[1107,39047+52])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1107,39047+53]..[1107,39047+56])
                                  Pexp_ident "loc" (typing/typemod.ml[1107,39047+53]..[1107,39047+56])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1107,39047+57]..[1107,39047+59])
                                  Pexp_ident "id" (typing/typemod.ml[1107,39047+57]..[1107,39047+59])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1107,39047+60]..[1107,39047+64])
                                  Pexp_ident "info" (typing/typemod.ml[1107,39047+60]..[1107,39047+64])
                            ]
              ]
            structure_item (typing/typemod.ml[1108,39112+2]..[1109,39159+48])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1108,39112+6]..[1108,39112+17])
                    Ppat_var "check_class" (typing/typemod.ml[1108,39112+6]..[1108,39112+17])
                  expression (typing/typemod.ml[1108,39112+18]..[1109,39159+48]) ghost
                    Pexp_fun
                    Optional "info"
                    Some
                      expression (typing/typemod.ml[1108,39112+25]..[1108,39112+34])
                        Pexp_variant "Exported"
                        None
                    pattern (typing/typemod.ml[1108,39112+20]..[1108,39112+24])
                      Ppat_var "info" (typing/typemod.ml[1108,39112+20]..[1108,39112+24])
                    expression (typing/typemod.ml[1108,39112+36]..[1109,39159+48]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[1108,39112+36]..[1108,39112+37])
                        Ppat_var "t" (typing/typemod.ml[1108,39112+36]..[1108,39112+37])
                      expression (typing/typemod.ml[1108,39112+38]..[1109,39159+48]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1108,39112+38]..[1108,39112+41])
                          Ppat_var "loc" (typing/typemod.ml[1108,39112+38]..[1108,39112+41])
                        expression (typing/typemod.ml[1108,39112+42]..[1109,39159+48]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[1108,39112+42]..[1108,39112+44])
                            Ppat_var "id" (typing/typemod.ml[1108,39112+42]..[1108,39112+44])
                          expression (typing/typemod.ml[1109,39159+4]..[1109,39159+48])
                            Pexp_apply
                            expression (typing/typemod.ml[1109,39159+4]..[1109,39159+9])
                              Pexp_ident "check" (typing/typemod.ml[1109,39159+4]..[1109,39159+9])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1109,39159+10]..[1109,39159+34])
                                  Pexp_construct "Sig_component_kind.Class" (typing/typemod.ml[1109,39159+10]..[1109,39159+34])
                                  None
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1109,39159+35]..[1109,39159+36])
                                  Pexp_ident "t" (typing/typemod.ml[1109,39159+35]..[1109,39159+36])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1109,39159+37]..[1109,39159+40])
                                  Pexp_ident "loc" (typing/typemod.ml[1109,39159+37]..[1109,39159+40])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1109,39159+41]..[1109,39159+43])
                                  Pexp_ident "id" (typing/typemod.ml[1109,39159+41]..[1109,39159+43])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1109,39159+44]..[1109,39159+48])
                                  Pexp_ident "info" (typing/typemod.ml[1109,39159+44]..[1109,39159+48])
                            ]
              ]
            structure_item (typing/typemod.ml[1110,39208+2]..[1111,39260+53])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1110,39208+6]..[1110,39208+22])
                    Ppat_var "check_class_type" (typing/typemod.ml[1110,39208+6]..[1110,39208+22])
                  expression (typing/typemod.ml[1110,39208+23]..[1111,39260+53]) ghost
                    Pexp_fun
                    Optional "info"
                    Some
                      expression (typing/typemod.ml[1110,39208+30]..[1110,39208+39])
                        Pexp_variant "Exported"
                        None
                    pattern (typing/typemod.ml[1110,39208+25]..[1110,39208+29])
                      Ppat_var "info" (typing/typemod.ml[1110,39208+25]..[1110,39208+29])
                    expression (typing/typemod.ml[1110,39208+41]..[1111,39260+53]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[1110,39208+41]..[1110,39208+42])
                        Ppat_var "t" (typing/typemod.ml[1110,39208+41]..[1110,39208+42])
                      expression (typing/typemod.ml[1110,39208+43]..[1111,39260+53]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1110,39208+43]..[1110,39208+46])
                          Ppat_var "loc" (typing/typemod.ml[1110,39208+43]..[1110,39208+46])
                        expression (typing/typemod.ml[1110,39208+47]..[1111,39260+53]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[1110,39208+47]..[1110,39208+49])
                            Ppat_var "id" (typing/typemod.ml[1110,39208+47]..[1110,39208+49])
                          expression (typing/typemod.ml[1111,39260+4]..[1111,39260+53])
                            Pexp_apply
                            expression (typing/typemod.ml[1111,39260+4]..[1111,39260+9])
                              Pexp_ident "check" (typing/typemod.ml[1111,39260+4]..[1111,39260+9])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1111,39260+10]..[1111,39260+39])
                                  Pexp_construct "Sig_component_kind.Class_type" (typing/typemod.ml[1111,39260+10]..[1111,39260+39])
                                  None
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1111,39260+40]..[1111,39260+41])
                                  Pexp_ident "t" (typing/typemod.ml[1111,39260+40]..[1111,39260+41])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1111,39260+42]..[1111,39260+45])
                                  Pexp_ident "loc" (typing/typemod.ml[1111,39260+42]..[1111,39260+45])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1111,39260+46]..[1111,39260+48])
                                  Pexp_ident "id" (typing/typemod.ml[1111,39260+46]..[1111,39260+48])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1111,39260+49]..[1111,39260+53])
                                  Pexp_ident "info" (typing/typemod.ml[1111,39260+49]..[1111,39260+53])
                            ]
              ]
            structure_item (typing/typemod.ml[1113,39315+2]..[1122,39656+52])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1113,39315+6]..[1113,39315+14])
                    Ppat_var "classify" (typing/typemod.ml[1113,39315+6]..[1113,39315+14])
                  expression (typing/typemod.ml[1114,39332+4]..[1122,39656+52])
                    Pexp_open Fresh
                    module_expr (typing/typemod.ml[1114,39332+13]..[1114,39332+31])
                      Pmod_ident "Sig_component_kind" (typing/typemod.ml[1114,39332+13]..[1114,39332+31])
                    expression (typing/typemod.ml[1115,39367+4]..[1122,39656+52])
                      Pexp_function
                      [
                        <case>
                          pattern (typing/typemod.ml[1116,39380+6]..[1116,39380+27])
                            Ppat_construct "Sig_type" (typing/typemod.ml[1116,39380+6]..[1116,39380+14])
                            Some
                              []
                              pattern (typing/typemod.ml[1116,39380+14]..[1116,39380+27])
                                Ppat_tuple
                                [
                                  pattern (typing/typemod.ml[1116,39380+15]..[1116,39380+17])
                                    Ppat_var "id" (typing/typemod.ml[1116,39380+15]..[1116,39380+17])
                                  pattern (typing/typemod.ml[1116,39380+19]..[1116,39380+20])
                                    Ppat_any
                                  pattern (typing/typemod.ml[1116,39380+22]..[1116,39380+23])
                                    Ppat_any
                                  pattern (typing/typemod.ml[1116,39380+25]..[1116,39380+26])
                                    Ppat_any
                                ]
                          expression (typing/typemod.ml[1116,39380+31]..[1116,39380+39])
                            Pexp_tuple
                            [
                              expression (typing/typemod.ml[1116,39380+31]..[1116,39380+35])
                                Pexp_construct "Type" (typing/typemod.ml[1116,39380+31]..[1116,39380+35])
                                None
                              expression (typing/typemod.ml[1116,39380+37]..[1116,39380+39])
                                Pexp_ident "id" (typing/typemod.ml[1116,39380+37]..[1116,39380+39])
                            ]
                        <case>
                          pattern (typing/typemod.ml[1117,39420+6]..[1117,39420+32])
                            Ppat_construct "Sig_module" (typing/typemod.ml[1117,39420+6]..[1117,39420+16])
                            Some
                              []
                              pattern (typing/typemod.ml[1117,39420+16]..[1117,39420+32])
                                Ppat_tuple
                                [
                                  pattern (typing/typemod.ml[1117,39420+17]..[1117,39420+19])
                                    Ppat_var "id" (typing/typemod.ml[1117,39420+17]..[1117,39420+19])
                                  pattern (typing/typemod.ml[1117,39420+21]..[1117,39420+22])
                                    Ppat_any
                                  pattern (typing/typemod.ml[1117,39420+24]..[1117,39420+25])
                                    Ppat_any
                                  pattern (typing/typemod.ml[1117,39420+27]..[1117,39420+28])
                                    Ppat_any
                                  pattern (typing/typemod.ml[1117,39420+30]..[1117,39420+31])
                                    Ppat_any
                                ]
                          expression (typing/typemod.ml[1117,39420+36]..[1117,39420+46])
                            Pexp_tuple
                            [
                              expression (typing/typemod.ml[1117,39420+36]..[1117,39420+42])
                                Pexp_construct "Module" (typing/typemod.ml[1117,39420+36]..[1117,39420+42])
                                None
                              expression (typing/typemod.ml[1117,39420+44]..[1117,39420+46])
                                Pexp_ident "id" (typing/typemod.ml[1117,39420+44]..[1117,39420+46])
                            ]
                        <case>
                          pattern (typing/typemod.ml[1118,39467+6]..[1118,39467+27])
                            Ppat_construct "Sig_modtype" (typing/typemod.ml[1118,39467+6]..[1118,39467+17])
                            Some
                              []
                              pattern (typing/typemod.ml[1118,39467+17]..[1118,39467+27])
                                Ppat_tuple
                                [
                                  pattern (typing/typemod.ml[1118,39467+18]..[1118,39467+20])
                                    Ppat_var "id" (typing/typemod.ml[1118,39467+18]..[1118,39467+20])
                                  pattern (typing/typemod.ml[1118,39467+22]..[1118,39467+23])
                                    Ppat_any
                                  pattern (typing/typemod.ml[1118,39467+25]..[1118,39467+26])
                                    Ppat_any
                                ]
                          expression (typing/typemod.ml[1118,39467+31]..[1118,39467+46])
                            Pexp_tuple
                            [
                              expression (typing/typemod.ml[1118,39467+31]..[1118,39467+42])
                                Pexp_construct "Module_type" (typing/typemod.ml[1118,39467+31]..[1118,39467+42])
                                None
                              expression (typing/typemod.ml[1118,39467+44]..[1118,39467+46])
                                Pexp_ident "id" (typing/typemod.ml[1118,39467+44]..[1118,39467+46])
                            ]
                        <case>
                          pattern (typing/typemod.ml[1119,39514+6]..[1119,39514+29])
                            Ppat_construct "Sig_typext" (typing/typemod.ml[1119,39514+6]..[1119,39514+16])
                            Some
                              []
                              pattern (typing/typemod.ml[1119,39514+16]..[1119,39514+29])
                                Ppat_tuple
                                [
                                  pattern (typing/typemod.ml[1119,39514+17]..[1119,39514+19])
                                    Ppat_var "id" (typing/typemod.ml[1119,39514+17]..[1119,39514+19])
                                  pattern (typing/typemod.ml[1119,39514+21]..[1119,39514+22])
                                    Ppat_any
                                  pattern (typing/typemod.ml[1119,39514+24]..[1119,39514+25])
                                    Ppat_any
                                  pattern (typing/typemod.ml[1119,39514+27]..[1119,39514+28])
                                    Ppat_any
                                ]
                          expression (typing/typemod.ml[1119,39514+33]..[1119,39514+58])
                            Pexp_tuple
                            [
                              expression (typing/typemod.ml[1119,39514+33]..[1119,39514+54])
                                Pexp_construct "Extension_constructor" (typing/typemod.ml[1119,39514+33]..[1119,39514+54])
                                None
                              expression (typing/typemod.ml[1119,39514+56]..[1119,39514+58])
                                Pexp_ident "id" (typing/typemod.ml[1119,39514+56]..[1119,39514+58])
                            ]
                        <case>
                          pattern (typing/typemod.ml[1120,39573+6]..[1120,39573+26])
                            Ppat_construct "Sig_value" (typing/typemod.ml[1120,39573+6]..[1120,39573+15])
                            Some
                              []
                              pattern (typing/typemod.ml[1120,39573+16]..[1120,39573+26])
                                Ppat_tuple
                                [
                                  pattern (typing/typemod.ml[1120,39573+17]..[1120,39573+19])
                                    Ppat_var "id" (typing/typemod.ml[1120,39573+17]..[1120,39573+19])
                                  pattern (typing/typemod.ml[1120,39573+21]..[1120,39573+22])
                                    Ppat_any
                                  pattern (typing/typemod.ml[1120,39573+24]..[1120,39573+25])
                                    Ppat_any
                                ]
                          expression (typing/typemod.ml[1120,39573+30]..[1120,39573+39])
                            Pexp_tuple
                            [
                              expression (typing/typemod.ml[1120,39573+30]..[1120,39573+35])
                                Pexp_construct "Value" (typing/typemod.ml[1120,39573+30]..[1120,39573+35])
                                None
                              expression (typing/typemod.ml[1120,39573+37]..[1120,39573+39])
                                Pexp_ident "id" (typing/typemod.ml[1120,39573+37]..[1120,39573+39])
                            ]
                        <case>
                          pattern (typing/typemod.ml[1121,39613+6]..[1121,39613+29])
                            Ppat_construct "Sig_class" (typing/typemod.ml[1121,39613+6]..[1121,39613+15])
                            Some
                              []
                              pattern (typing/typemod.ml[1121,39613+16]..[1121,39613+29])
                                Ppat_tuple
                                [
                                  pattern (typing/typemod.ml[1121,39613+17]..[1121,39613+19])
                                    Ppat_var "id" (typing/typemod.ml[1121,39613+17]..[1121,39613+19])
                                  pattern (typing/typemod.ml[1121,39613+21]..[1121,39613+22])
                                    Ppat_any
                                  pattern (typing/typemod.ml[1121,39613+24]..[1121,39613+25])
                                    Ppat_any
                                  pattern (typing/typemod.ml[1121,39613+27]..[1121,39613+28])
                                    Ppat_any
                                ]
                          expression (typing/typemod.ml[1121,39613+33]..[1121,39613+42])
                            Pexp_tuple
                            [
                              expression (typing/typemod.ml[1121,39613+33]..[1121,39613+38])
                                Pexp_construct "Class" (typing/typemod.ml[1121,39613+33]..[1121,39613+38])
                                None
                              expression (typing/typemod.ml[1121,39613+40]..[1121,39613+42])
                                Pexp_ident "id" (typing/typemod.ml[1121,39613+40]..[1121,39613+42])
                            ]
                        <case>
                          pattern (typing/typemod.ml[1122,39656+6]..[1122,39656+34])
                            Ppat_construct "Sig_class_type" (typing/typemod.ml[1122,39656+6]..[1122,39656+20])
                            Some
                              []
                              pattern (typing/typemod.ml[1122,39656+21]..[1122,39656+34])
                                Ppat_tuple
                                [
                                  pattern (typing/typemod.ml[1122,39656+22]..[1122,39656+24])
                                    Ppat_var "id" (typing/typemod.ml[1122,39656+22]..[1122,39656+24])
                                  pattern (typing/typemod.ml[1122,39656+26]..[1122,39656+27])
                                    Ppat_any
                                  pattern (typing/typemod.ml[1122,39656+29]..[1122,39656+30])
                                    Ppat_any
                                  pattern (typing/typemod.ml[1122,39656+32]..[1122,39656+33])
                                    Ppat_any
                                ]
                          expression (typing/typemod.ml[1122,39656+38]..[1122,39656+52])
                            Pexp_tuple
                            [
                              expression (typing/typemod.ml[1122,39656+38]..[1122,39656+48])
                                Pexp_construct "Class_type" (typing/typemod.ml[1122,39656+38]..[1122,39656+48])
                                None
                              expression (typing/typemod.ml[1122,39656+50]..[1122,39656+52])
                                Pexp_ident "id" (typing/typemod.ml[1122,39656+50]..[1122,39656+52])
                            ]
                      ]
              ]
            structure_item (typing/typemod.ml[1124,39710+2]..[1130,39875+32])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1124,39710+6]..[1124,39710+16])
                    Ppat_var "check_item" (typing/typemod.ml[1124,39710+6]..[1124,39710+16])
                  expression (typing/typemod.ml[1124,39710+17]..[1130,39875+32]) ghost
                    Pexp_fun
                    Optional "info"
                    None
                    pattern (typing/typemod.ml[1124,39710+18]..[1124,39710+22])
                      Ppat_var "info" (typing/typemod.ml[1124,39710+18]..[1124,39710+22])
                    expression (typing/typemod.ml[1124,39710+23]..[1130,39875+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[1124,39710+23]..[1124,39710+28])
                        Ppat_var "names" (typing/typemod.ml[1124,39710+23]..[1124,39710+28])
                      expression (typing/typemod.ml[1124,39710+29]..[1130,39875+32]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1124,39710+29]..[1124,39710+32])
                          Ppat_var "loc" (typing/typemod.ml[1124,39710+29]..[1124,39710+32])
                        expression (typing/typemod.ml[1124,39710+33]..[1130,39875+32]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[1124,39710+33]..[1124,39710+37])
                            Ppat_var "kind" (typing/typemod.ml[1124,39710+33]..[1124,39710+37])
                          expression (typing/typemod.ml[1124,39710+38]..[1130,39875+32]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[1124,39710+38]..[1124,39710+40])
                              Ppat_var "id" (typing/typemod.ml[1124,39710+38]..[1124,39710+40])
                            expression (typing/typemod.ml[1124,39710+41]..[1130,39875+32]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typemod.ml[1124,39710+41]..[1124,39710+44])
                                Ppat_var "ids" (typing/typemod.ml[1124,39710+41]..[1124,39710+44])
                              expression (typing/typemod.ml[1125,39757+4]..[1130,39875+32])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[1125,39757+8]..[1125,39757+12])
                                      Ppat_var "info" (typing/typemod.ml[1125,39757+8]..[1125,39757+12])
                                    expression (typing/typemod.ml[1126,39772+6]..[1128,39848+19])
                                      Pexp_match
                                      expression (typing/typemod.ml[1126,39772+12]..[1126,39772+16])
                                        Pexp_ident "info" (typing/typemod.ml[1126,39772+12]..[1126,39772+16])
                                      [
                                        <case>
                                          pattern (typing/typemod.ml[1127,39794+8]..[1127,39794+12])
                                            Ppat_construct "None" (typing/typemod.ml[1127,39794+8]..[1127,39794+12])
                                            None
                                          expression (typing/typemod.ml[1127,39794+16]..[1127,39794+53])
                                            Pexp_variant "Shadowable"
                                            Some
                                              expression (typing/typemod.ml[1127,39794+28]..[1127,39794+53])
                                                Pexp_record
                                                [
                                                  "self" (typing/typemod.ml[1127,39794+29]..[1127,39794+33])
                                                    expression (typing/typemod.ml[1127,39794+34]..[1127,39794+36])
                                                      Pexp_ident "id" (typing/typemod.ml[1127,39794+34]..[1127,39794+36])
                                                  "group" (typing/typemod.ml[1127,39794+38]..[1127,39794+43])
                                                    expression (typing/typemod.ml[1127,39794+44]..[1127,39794+47])
                                                      Pexp_ident "ids" (typing/typemod.ml[1127,39794+44]..[1127,39794+47])
                                                  "loc" (typing/typemod.ml[1127,39794+49]..[1127,39794+52]) ghost
                                                    expression (typing/typemod.ml[1127,39794+49]..[1127,39794+52])
                                                      Pexp_ident "loc" (typing/typemod.ml[1127,39794+49]..[1127,39794+52])
                                                ]
                                                None
                                        <case>
                                          pattern (typing/typemod.ml[1128,39848+8]..[1128,39848+14])
                                            Ppat_construct "Some" (typing/typemod.ml[1128,39848+8]..[1128,39848+12])
                                            Some
                                              []
                                              pattern (typing/typemod.ml[1128,39848+13]..[1128,39848+14])
                                                Ppat_var "i" (typing/typemod.ml[1128,39848+13]..[1128,39848+14])
                                          expression (typing/typemod.ml[1128,39848+18]..[1128,39848+19])
                                            Pexp_ident "i" (typing/typemod.ml[1128,39848+18]..[1128,39848+19])
                                      ]
                                ]
                                expression (typing/typemod.ml[1130,39875+4]..[1130,39875+32])
                                  Pexp_apply
                                  expression (typing/typemod.ml[1130,39875+4]..[1130,39875+9])
                                    Pexp_ident "check" (typing/typemod.ml[1130,39875+4]..[1130,39875+9])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1130,39875+10]..[1130,39875+14])
                                        Pexp_ident "kind" (typing/typemod.ml[1130,39875+10]..[1130,39875+14])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1130,39875+15]..[1130,39875+20])
                                        Pexp_ident "names" (typing/typemod.ml[1130,39875+15]..[1130,39875+20])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1130,39875+21]..[1130,39875+24])
                                        Pexp_ident "loc" (typing/typemod.ml[1130,39875+21]..[1130,39875+24])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1130,39875+25]..[1130,39875+27])
                                        Pexp_ident "id" (typing/typemod.ml[1130,39875+25]..[1130,39875+27])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1130,39875+28]..[1130,39875+32])
                                        Pexp_ident "info" (typing/typemod.ml[1130,39875+28]..[1130,39875+32])
                                  ]
              ]
            structure_item (typing/typemod.ml[1132,39909+2]..[1141,40336+77])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1132,39909+6]..[1132,39909+20])
                    Ppat_var "check_sig_item" (typing/typemod.ml[1132,39909+6]..[1132,39909+20])
                  expression (typing/typemod.ml[1132,39909+21]..[1141,40336+77]) ghost
                    Pexp_fun
                    Optional "info"
                    None
                    pattern (typing/typemod.ml[1132,39909+22]..[1132,39909+26])
                      Ppat_var "info" (typing/typemod.ml[1132,39909+22]..[1132,39909+26])
                    expression (typing/typemod.ml[1132,39909+27]..[1141,40336+77]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[1132,39909+27]..[1132,39909+32])
                        Ppat_var "names" (typing/typemod.ml[1132,39909+27]..[1132,39909+32])
                      expression (typing/typemod.ml[1132,39909+33]..[1141,40336+77]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1132,39909+33]..[1132,39909+36])
                          Ppat_var "loc" (typing/typemod.ml[1132,39909+33]..[1132,39909+36])
                        expression (typing/typemod.ml[1132,39909+37]..[1141,40336+77]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[1132,39909+37]..[1132,39909+69])
                            Ppat_constraint
                            pattern (typing/typemod.ml[1132,39909+38]..[1132,39909+42])
                              Ppat_var "item" (typing/typemod.ml[1132,39909+38]..[1132,39909+42])
                            core_type (typing/typemod.ml[1132,39909+43]..[1132,39909+68])
                              Ptyp_constr "Signature_group.rec_group" (typing/typemod.ml[1132,39909+43]..[1132,39909+68])
                              []
                          expression (typing/typemod.ml[1133,39981+4]..[1141,40336+77])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[1133,39981+8]..[1133,39981+13])
                                  Ppat_var "check" (typing/typemod.ml[1133,39981+8]..[1133,39981+13])
                                expression (typing/typemod.ml[1133,39981+14]..[1137,40200+11]) ghost
                                  Pexp_fun
                                  Optional "info"
                                  None
                                  pattern (typing/typemod.ml[1133,39981+15]..[1133,39981+19])
                                    Ppat_var "info" (typing/typemod.ml[1133,39981+15]..[1133,39981+19])
                                  expression (typing/typemod.ml[1133,39981+20]..[1137,40200+11]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typemod.ml[1133,39981+20]..[1133,39981+25])
                                      Ppat_var "names" (typing/typemod.ml[1133,39981+20]..[1133,39981+25])
                                    expression (typing/typemod.ml[1133,39981+26]..[1137,40200+11]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/typemod.ml[1133,39981+26]..[1133,39981+29])
                                        Ppat_var "loc" (typing/typemod.ml[1133,39981+26]..[1133,39981+29])
                                      expression (typing/typemod.ml[1133,39981+30]..[1137,40200+11]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/typemod.ml[1133,39981+30]..[1133,39981+34])
                                          Ppat_var "item" (typing/typemod.ml[1133,39981+30]..[1133,39981+34])
                                        expression (typing/typemod.ml[1134,40018+6]..[1137,40200+11])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[1134,40018+10]..[1134,40018+13])
                                                Ppat_var "all" (typing/typemod.ml[1134,40018+10]..[1134,40018+13])
                                              expression (typing/typemod.ml[1134,40018+16]..[1134,40018+64])
                                                Pexp_apply
                                                expression (typing/typemod.ml[1134,40018+16]..[1134,40018+24])
                                                  Pexp_ident "List.map" (typing/typemod.ml[1134,40018+16]..[1134,40018+24])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1134,40018+25]..[1134,40018+33])
                                                      Pexp_ident "classify" (typing/typemod.ml[1134,40018+25]..[1134,40018+33])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1134,40018+34]..[1134,40018+64])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[1134,40018+35]..[1134,40018+58])
                                                        Pexp_ident "Signature_group.flatten" (typing/typemod.ml[1134,40018+35]..[1134,40018+58])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1134,40018+59]..[1134,40018+63])
                                                            Pexp_ident "item" (typing/typemod.ml[1134,40018+59]..[1134,40018+63])
                                                      ]
                                                ]
                                          ]
                                          expression (typing/typemod.ml[1135,40086+6]..[1137,40200+11])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[1135,40086+10]..[1135,40086+15])
                                                  Ppat_var "group" (typing/typemod.ml[1135,40086+10]..[1135,40086+15])
                                                expression (typing/typemod.ml[1135,40086+18]..[1135,40086+34])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[1135,40086+18]..[1135,40086+26])
                                                    Pexp_ident "List.map" (typing/typemod.ml[1135,40086+18]..[1135,40086+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1135,40086+27]..[1135,40086+30])
                                                        Pexp_ident "snd" (typing/typemod.ml[1135,40086+27]..[1135,40086+30])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1135,40086+31]..[1135,40086+34])
                                                        Pexp_ident "all" (typing/typemod.ml[1135,40086+31]..[1135,40086+34])
                                                  ]
                                            ]
                                            expression (typing/typemod.ml[1136,40124+6]..[1137,40200+11])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1136,40124+6]..[1136,40124+15])
                                                Pexp_ident "List.iter" (typing/typemod.ml[1136,40124+6]..[1136,40124+15])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1136,40124+16]..[1136,40124+75])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (typing/typemod.ml[1136,40124+21]..[1136,40124+30])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typemod.ml[1136,40124+22]..[1136,40124+26])
                                                          Ppat_var "kind" (typing/typemod.ml[1136,40124+22]..[1136,40124+26])
                                                        pattern (typing/typemod.ml[1136,40124+27]..[1136,40124+29])
                                                          Ppat_var "id" (typing/typemod.ml[1136,40124+27]..[1136,40124+29])
                                                      ]
                                                    expression (typing/typemod.ml[1136,40124+34]..[1136,40124+74])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[1136,40124+34]..[1136,40124+44])
                                                        Pexp_ident "check_item" (typing/typemod.ml[1136,40124+34]..[1136,40124+44])
                                                      [
                                                        <arg>
                                                        Optional "info"
                                                          expression (typing/typemod.ml[1136,40124+46]..[1136,40124+50])
                                                            Pexp_ident "info" (typing/typemod.ml[1136,40124+46]..[1136,40124+50])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1136,40124+51]..[1136,40124+56])
                                                            Pexp_ident "names" (typing/typemod.ml[1136,40124+51]..[1136,40124+56])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1136,40124+57]..[1136,40124+60])
                                                            Pexp_ident "loc" (typing/typemod.ml[1136,40124+57]..[1136,40124+60])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1136,40124+61]..[1136,40124+65])
                                                            Pexp_ident "kind" (typing/typemod.ml[1136,40124+61]..[1136,40124+65])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1136,40124+66]..[1136,40124+68])
                                                            Pexp_ident "id" (typing/typemod.ml[1136,40124+66]..[1136,40124+68])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1136,40124+69]..[1136,40124+74])
                                                            Pexp_ident "group" (typing/typemod.ml[1136,40124+69]..[1136,40124+74])
                                                      ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1137,40200+8]..[1137,40200+11])
                                                    Pexp_ident "all" (typing/typemod.ml[1137,40200+8]..[1137,40200+11])
                                              ]
                            ]
                            expression (typing/typemod.ml[1141,40336+5]..[1141,40336+77])
                              Pexp_apply
                              expression (typing/typemod.ml[1141,40336+5]..[1141,40336+14])
                                Pexp_ident "List.iter" (typing/typemod.ml[1141,40336+5]..[1141,40336+14])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1141,40336+15]..[1141,40336+38])
                                    Pexp_apply
                                    expression (typing/typemod.ml[1141,40336+16]..[1141,40336+21])
                                      Pexp_ident "check" (typing/typemod.ml[1141,40336+16]..[1141,40336+21])
                                    [
                                      <arg>
                                      Optional "info"
                                        expression (typing/typemod.ml[1141,40336+23]..[1141,40336+27])
                                          Pexp_ident "info" (typing/typemod.ml[1141,40336+23]..[1141,40336+27])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1141,40336+28]..[1141,40336+33])
                                          Pexp_ident "names" (typing/typemod.ml[1141,40336+28]..[1141,40336+33])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1141,40336+34]..[1141,40336+37])
                                          Pexp_ident "loc" (typing/typemod.ml[1141,40336+34]..[1141,40336+37])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1141,40336+39]..[1141,40336+77])
                                    Pexp_apply
                                    expression (typing/typemod.ml[1141,40336+40]..[1141,40336+65])
                                      Pexp_ident "Signature_group.rec_items" (typing/typemod.ml[1141,40336+40]..[1141,40336+65])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1141,40336+66]..[1141,40336+76])
                                          Pexp_field
                                          expression (typing/typemod.ml[1141,40336+66]..[1141,40336+70])
                                            Pexp_ident "item" (typing/typemod.ml[1141,40336+66]..[1141,40336+70])
                                          "group" (typing/typemod.ml[1141,40336+71]..[1141,40336+76])
                                    ]
                              ]
              ]
            structure_item (typing/typemod.ml[1153,40706+2]..[1166,41304+7])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1153,40706+6]..[1153,40706+31])
                    Ppat_var "check_unpackable_modtypes" (typing/typemod.ml[1153,40706+6]..[1153,40706+31])
                  expression (typing/typemod.ml[1153,40706+32]..[1166,41304+7]) ghost
                    Pexp_fun
                    Labelled "loc"
                    None
                    pattern (typing/typemod.ml[1153,40706+33]..[1153,40706+36])
                      Ppat_var "loc" (typing/typemod.ml[1153,40706+33]..[1153,40706+36])
                    expression (typing/typemod.ml[1153,40706+37]..[1166,41304+7]) ghost
                      Pexp_fun
                      Labelled "env"
                      None
                      pattern (typing/typemod.ml[1153,40706+38]..[1153,40706+41])
                        Ppat_var "env" (typing/typemod.ml[1153,40706+38]..[1153,40706+41])
                      expression (typing/typemod.ml[1153,40706+42]..[1166,41304+7]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1153,40706+42]..[1153,40706+51])
                          Ppat_var "to_remove" (typing/typemod.ml[1153,40706+42]..[1153,40706+51])
                        expression (typing/typemod.ml[1153,40706+52]..[1166,41304+7]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[1153,40706+52]..[1153,40706+61])
                            Ppat_var "component" (typing/typemod.ml[1153,40706+52]..[1153,40706+61])
                          expression (typing/typemod.ml[1154,40770+4]..[1166,41304+7])
                            Pexp_ifthenelse
                            expression (typing/typemod.ml[1154,40770+7]..[1154,40770+61])
                              Pexp_apply
                              expression (typing/typemod.ml[1154,40770+7]..[1154,40770+10])
                                Pexp_ident "not" (typing/typemod.ml[1154,40770+7]..[1154,40770+10])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1154,40770+11]..[1154,40770+61])
                                    Pexp_apply
                                    expression (typing/typemod.ml[1154,40770+12]..[1154,40770+30])
                                      Pexp_ident "Ident.Set.is_empty" (typing/typemod.ml[1154,40770+12]..[1154,40770+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1154,40770+31]..[1154,40770+60])
                                          Pexp_field
                                          expression (typing/typemod.ml[1154,40770+31]..[1154,40770+40])
                                            Pexp_ident "to_remove" (typing/typemod.ml[1154,40770+31]..[1154,40770+40])
                                          "unpackable_modtypes" (typing/typemod.ml[1154,40770+41]..[1154,40770+60])
                                    ]
                              ]
                            expression (typing/typemod.ml[1154,40770+67]..[1166,41304+7])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[1155,40843+10]..[1155,40843+18])
                                    Ppat_var "iterator" (typing/typemod.ml[1155,40843+10]..[1155,40843+18])
                                  expression (typing/typemod.ml[1156,40864+8]..[1162,41112+47])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typemod.ml[1156,40864+12]..[1156,40864+17])
                                          Ppat_var "error" (typing/typemod.ml[1156,40864+12]..[1156,40864+17])
                                        expression (typing/typemod.ml[1156,40864+18]..[1156,40864+54]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/typemod.ml[1156,40864+18]..[1156,40864+19])
                                            Ppat_var "p" (typing/typemod.ml[1156,40864+18]..[1156,40864+19])
                                          expression (typing/typemod.ml[1156,40864+22]..[1156,40864+54])
                                            Pexp_construct "Unpackable_local_modtype_subst" (typing/typemod.ml[1156,40864+22]..[1156,40864+52])
                                            Some
                                              expression (typing/typemod.ml[1156,40864+53]..[1156,40864+54])
                                                Pexp_ident "p" (typing/typemod.ml[1156,40864+53]..[1156,40864+54])
                                    ]
                                    expression (typing/typemod.ml[1157,40922+8]..[1162,41112+47])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[1157,40922+12]..[1157,40922+17])
                                            Ppat_var "paths" (typing/typemod.ml[1157,40922+12]..[1157,40922+17])
                                          expression (typing/typemod.ml[1158,40942+10]..[1159,40983+62])
                                            Pexp_apply
                                            expression (typing/typemod.ml[1158,40942+10]..[1158,40942+18])
                                              Pexp_ident "List.map" (typing/typemod.ml[1158,40942+10]..[1158,40942+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1158,40942+19]..[1158,40942+40])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/typemod.ml[1158,40942+24]..[1158,40942+26])
                                                    Ppat_var "id" (typing/typemod.ml[1158,40942+24]..[1158,40942+26])
                                                  expression (typing/typemod.ml[1158,40942+30]..[1158,40942+39])
                                                    Pexp_construct "Pident" (typing/typemod.ml[1158,40942+30]..[1158,40942+36])
                                                    Some
                                                      expression (typing/typemod.ml[1158,40942+37]..[1158,40942+39])
                                                        Pexp_ident "id" (typing/typemod.ml[1158,40942+37]..[1158,40942+39])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1159,40983+12]..[1159,40983+62])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[1159,40983+13]..[1159,40983+31])
                                                    Pexp_ident "Ident.Set.elements" (typing/typemod.ml[1159,40983+13]..[1159,40983+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1159,40983+32]..[1159,40983+61])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[1159,40983+32]..[1159,40983+41])
                                                          Pexp_ident "to_remove" (typing/typemod.ml[1159,40983+32]..[1159,40983+41])
                                                        "unpackable_modtypes" (typing/typemod.ml[1159,40983+42]..[1159,40983+61])
                                                  ]
                                            ]
                                      ]
                                      expression (typing/typemod.ml[1161,41057+8]..[1162,41112+47])
                                        Pexp_apply
                                        expression (typing/typemod.ml[1161,41057+8]..[1161,41057+35])
                                          Pexp_ident "check_usage_of_module_types" (typing/typemod.ml[1161,41057+8]..[1161,41057+35])
                                        [
                                          <arg>
                                          Labelled "loc"
                                            expression (typing/typemod.ml[1161,41057+37]..[1161,41057+40])
                                              Pexp_ident "loc" (typing/typemod.ml[1161,41057+37]..[1161,41057+40])
                                          <arg>
                                          Labelled "error"
                                            expression (typing/typemod.ml[1161,41057+42]..[1161,41057+47])
                                              Pexp_ident "error" (typing/typemod.ml[1161,41057+42]..[1161,41057+47])
                                          <arg>
                                          Labelled "paths"
                                            expression (typing/typemod.ml[1161,41057+49]..[1161,41057+54])
                                              Pexp_ident "paths" (typing/typemod.ml[1161,41057+49]..[1161,41057+54])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1162,41112+10]..[1162,41112+26])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1162,41112+11]..[1162,41112+14])
                                                Pexp_ident "ref" (typing/typemod.ml[1162,41112+11]..[1162,41112+14])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1162,41112+15]..[1162,41112+25])
                                                    Pexp_lazy
                                                    expression (typing/typemod.ml[1162,41112+21]..[1162,41112+24])
                                                      Pexp_ident "env" (typing/typemod.ml[1162,41112+21]..[1162,41112+24])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1162,41112+27]..[1162,41112+47])
                                              Pexp_ident "Btype.type_iterators" (typing/typemod.ml[1162,41112+27]..[1162,41112+47])
                                        ]
                              ]
                              expression (typing/typemod.ml[1164,41169+6]..[1165,41228+75])
                                Pexp_sequence
                                expression (typing/typemod.ml[1164,41169+6]..[1164,41169+57])
                                  Pexp_apply
                                  expression (typing/typemod.ml[1164,41169+6]..[1164,41169+38])
                                    Pexp_field
                                    expression (typing/typemod.ml[1164,41169+6]..[1164,41169+14])
                                      Pexp_ident "iterator" (typing/typemod.ml[1164,41169+6]..[1164,41169+14])
                                    "Btype.it_signature_item" (typing/typemod.ml[1164,41169+15]..[1164,41169+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1164,41169+39]..[1164,41169+47])
                                        Pexp_ident "iterator" (typing/typemod.ml[1164,41169+39]..[1164,41169+47])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1164,41169+48]..[1164,41169+57])
                                        Pexp_ident "component" (typing/typemod.ml[1164,41169+48]..[1164,41169+57])
                                  ]
                                expression (typing/typemod.ml[1165,41228+6]..[1165,41228+75])
                                  Pexp_apply
                                  expression (typing/typemod.ml[1165,41228+6]..[1165,41228+65])
                                    Pexp_open Fresh
                                    module_expr (typing/typemod.ml[1165,41228+6]..[1165,41228+11])
                                      Pmod_ident "Btype" (typing/typemod.ml[1165,41228+6]..[1165,41228+11])
                                    expression (typing/typemod.ml[1165,41228+13]..[1165,41228+64])
                                      Pexp_apply
                                      expression (typing/typemod.ml[1165,41228+13]..[1165,41228+47])
                                        Pexp_field
                                        expression (typing/typemod.ml[1165,41228+13]..[1165,41228+29])
                                          Pexp_ident "unmark_iterators" (typing/typemod.ml[1165,41228+13]..[1165,41228+29])
                                        "it_signature_item" (typing/typemod.ml[1165,41228+30]..[1165,41228+47])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1165,41228+48]..[1165,41228+64])
                                            Pexp_ident "unmark_iterators" (typing/typemod.ml[1165,41228+48]..[1165,41228+64])
                                      ]
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1165,41228+66]..[1165,41228+75])
                                        Pexp_ident "component" (typing/typemod.ml[1165,41228+66]..[1165,41228+75])
                                  ]
                            None
              ]
            structure_item (typing/typemod.ml[1179,41858+2]..[1250,44512+36])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1179,41858+6]..[1179,41858+14])
                    Ppat_var "simplify" (typing/typemod.ml[1179,41858+6]..[1179,41858+14])
                  expression (typing/typemod.ml[1179,41858+15]..[1250,44512+36]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[1179,41858+15]..[1179,41858+18])
                      Ppat_var "env" (typing/typemod.ml[1179,41858+15]..[1179,41858+18])
                    expression (typing/typemod.ml[1179,41858+19]..[1250,44512+36]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[1179,41858+19]..[1179,41858+20])
                        Ppat_var "t" (typing/typemod.ml[1179,41858+19]..[1179,41858+20])
                      expression (typing/typemod.ml[1179,41858+21]..[1250,44512+36]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1179,41858+21]..[1179,41858+23])
                          Ppat_var "sg" (typing/typemod.ml[1179,41858+21]..[1179,41858+23])
                        expression (typing/typemod.ml[1180,41884+4]..[1250,44512+36])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[1180,41884+8]..[1180,41884+17])
                                Ppat_var "to_remove" (typing/typemod.ml[1180,41884+8]..[1180,41884+17])
                              expression (typing/typemod.ml[1180,41884+20]..[1180,41884+35])
                                Pexp_field
                                expression (typing/typemod.ml[1180,41884+20]..[1180,41884+21])
                                  Pexp_ident "t" (typing/typemod.ml[1180,41884+20]..[1180,41884+21])
                                "to_be_removed" (typing/typemod.ml[1180,41884+22]..[1180,41884+35])
                          ]
                          expression (typing/typemod.ml[1181,41923+4]..[1250,44512+36])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[1181,41923+8]..[1181,41923+21])
                                  Ppat_var "ids_to_remove" (typing/typemod.ml[1181,41923+8]..[1181,41923+21])
                                expression (typing/typemod.ml[1182,41947+6]..[1187,42104+25])
                                  Pexp_apply
                                  expression (typing/typemod.ml[1182,41947+6]..[1182,41947+20])
                                    Pexp_ident "Ident.Map.fold" (typing/typemod.ml[1182,41947+6]..[1182,41947+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1182,41947+21]..[1187,42104+7])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/typemod.ml[1182,41947+26]..[1182,41947+28])
                                          Ppat_var "id" (typing/typemod.ml[1182,41947+26]..[1182,41947+28])
                                        expression (typing/typemod.ml[1182,41947+29]..[1186,42090+13]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/typemod.ml[1182,41947+29]..[1182,41947+42])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[1182,41947+30]..[1182,41947+34])
                                                Ppat_var "kind" (typing/typemod.ml[1182,41947+30]..[1182,41947+34])
                                              pattern (typing/typemod.ml[1182,41947+37]..[1182,41947+38])
                                                Ppat_any
                                              pattern (typing/typemod.ml[1182,41947+40]..[1182,41947+41])
                                                Ppat_any
                                            ]
                                          expression (typing/typemod.ml[1182,41947+43]..[1186,42090+13]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/typemod.ml[1182,41947+43]..[1182,41947+46])
                                              Ppat_var "lst" (typing/typemod.ml[1182,41947+43]..[1182,41947+46])
                                            expression (typing/typemod.ml[1183,41997+8]..[1186,42090+13])
                                              Pexp_ifthenelse
                                              expression (typing/typemod.ml[1183,41997+11]..[1183,41997+54])
                                                Pexp_apply
                                                expression (typing/typemod.ml[1183,41997+11]..[1183,41997+49])
                                                  Pexp_ident "Sig_component_kind.can_appear_in_types" (typing/typemod.ml[1183,41997+11]..[1183,41997+49])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1183,41997+50]..[1183,41997+54])
                                                      Pexp_ident "kind" (typing/typemod.ml[1183,41997+50]..[1183,41997+54])
                                                ]
                                              expression (typing/typemod.ml[1184,42057+10]..[1184,42057+19])
                                                Pexp_construct "::" (typing/typemod.ml[1184,42057+13]..[1184,42057+15])
                                                Some
                                                  expression (typing/typemod.ml[1184,42057+10]..[1184,42057+19]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[1184,42057+10]..[1184,42057+12])
                                                        Pexp_ident "id" (typing/typemod.ml[1184,42057+10]..[1184,42057+12])
                                                      expression (typing/typemod.ml[1184,42057+16]..[1184,42057+19])
                                                        Pexp_ident "lst" (typing/typemod.ml[1184,42057+16]..[1184,42057+19])
                                                    ]
                                              Some
                                                expression (typing/typemod.ml[1186,42090+10]..[1186,42090+13])
                                                  Pexp_ident "lst" (typing/typemod.ml[1186,42090+10]..[1186,42090+13])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1187,42104+8]..[1187,42104+22])
                                        Pexp_field
                                        expression (typing/typemod.ml[1187,42104+8]..[1187,42104+17])
                                          Pexp_ident "to_remove" (typing/typemod.ml[1187,42104+8]..[1187,42104+17])
                                        "hide" (typing/typemod.ml[1187,42104+18]..[1187,42104+22])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1187,42104+23]..[1187,42104+25])
                                        Pexp_construct "[]" (typing/typemod.ml[1187,42104+23]..[1187,42104+25])
                                        None
                                  ]
                            ]
                            expression (typing/typemod.ml[1189,42137+4]..[1250,44512+36])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[1189,42137+8]..[1189,42137+21])
                                    Ppat_var "simplify_item" (typing/typemod.ml[1189,42137+8]..[1189,42137+21])
                                  expression (typing/typemod.ml[1189,42137+22]..[1248,44495+9]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typemod.ml[1189,42137+22]..[1189,42137+55])
                                      Ppat_constraint
                                      pattern (typing/typemod.ml[1189,42137+23]..[1189,42137+32])
                                        Ppat_var "component" (typing/typemod.ml[1189,42137+23]..[1189,42137+32])
                                      core_type (typing/typemod.ml[1189,42137+34]..[1189,42137+54])
                                        Ptyp_constr "Types.signature_item" (typing/typemod.ml[1189,42137+34]..[1189,42137+54])
                                        []
                                    expression (typing/typemod.ml[1190,42195+6]..[1248,44495+9])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[1190,42195+10]..[1190,42195+38])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[1190,42195+10]..[1190,42195+19])
                                                Ppat_var "user_kind" (typing/typemod.ml[1190,42195+10]..[1190,42195+19])
                                              pattern (typing/typemod.ml[1190,42195+21]..[1190,42195+28])
                                                Ppat_var "user_id" (typing/typemod.ml[1190,42195+21]..[1190,42195+28])
                                              pattern (typing/typemod.ml[1190,42195+30]..[1190,42195+38])
                                                Ppat_var "user_loc" (typing/typemod.ml[1190,42195+30]..[1190,42195+38])
                                            ]
                                          expression (typing/typemod.ml[1191,42236+8]..[1199,42683+70])
                                            Pexp_open Fresh
                                            module_expr (typing/typemod.ml[1191,42236+17]..[1191,42236+35])
                                              Pmod_ident "Sig_component_kind" (typing/typemod.ml[1191,42236+17]..[1191,42236+35])
                                            expression (typing/typemod.ml[1192,42275+8]..[1199,42683+70])
                                              Pexp_match
                                              expression (typing/typemod.ml[1192,42275+14]..[1192,42275+23])
                                                Pexp_ident "component" (typing/typemod.ml[1192,42275+14]..[1192,42275+23])
                                              [
                                                <case>
                                                  pattern (typing/typemod.ml[1193,42304+10]..[1193,42304+29])
                                                    Ppat_construct "Sig_value" (typing/typemod.ml[1193,42304+10]..[1193,42304+19])
                                                    Some
                                                      []
                                                      pattern (typing/typemod.ml[1193,42304+19]..[1193,42304+29])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typemod.ml[1193,42304+20]..[1193,42304+22])
                                                            Ppat_var "id" (typing/typemod.ml[1193,42304+20]..[1193,42304+22])
                                                          pattern (typing/typemod.ml[1193,42304+24]..[1193,42304+25])
                                                            Ppat_var "v" (typing/typemod.ml[1193,42304+24]..[1193,42304+25])
                                                          pattern (typing/typemod.ml[1193,42304+27]..[1193,42304+28])
                                                            Ppat_any
                                                        ]
                                                  expression (typing/typemod.ml[1193,42304+33]..[1193,42304+53])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[1193,42304+33]..[1193,42304+38])
                                                        Pexp_construct "Value" (typing/typemod.ml[1193,42304+33]..[1193,42304+38])
                                                        None
                                                      expression (typing/typemod.ml[1193,42304+40]..[1193,42304+42])
                                                        Pexp_ident "id" (typing/typemod.ml[1193,42304+40]..[1193,42304+42])
                                                      expression (typing/typemod.ml[1193,42304+44]..[1193,42304+53])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[1193,42304+44]..[1193,42304+45])
                                                          Pexp_ident "v" (typing/typemod.ml[1193,42304+44]..[1193,42304+45])
                                                        "val_loc" (typing/typemod.ml[1193,42304+46]..[1193,42304+53])
                                                    ]
                                                <case>
                                                  pattern (typing/typemod.ml[1194,42358+10]..[1194,42358+33])
                                                    Ppat_construct "Sig_type" (typing/typemod.ml[1194,42358+10]..[1194,42358+18])
                                                    Some
                                                      []
                                                      pattern (typing/typemod.ml[1194,42358+19]..[1194,42358+33])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typemod.ml[1194,42358+20]..[1194,42358+22])
                                                            Ppat_var "id" (typing/typemod.ml[1194,42358+20]..[1194,42358+22])
                                                          pattern (typing/typemod.ml[1194,42358+24]..[1194,42358+26])
                                                            Ppat_var "td" (typing/typemod.ml[1194,42358+24]..[1194,42358+26])
                                                          pattern (typing/typemod.ml[1194,42358+28]..[1194,42358+29])
                                                            Ppat_any
                                                          pattern (typing/typemod.ml[1194,42358+31]..[1194,42358+32])
                                                            Ppat_any
                                                        ]
                                                  expression (typing/typemod.ml[1194,42358+37]..[1194,42358+58])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[1194,42358+37]..[1194,42358+41])
                                                        Pexp_construct "Type" (typing/typemod.ml[1194,42358+37]..[1194,42358+41])
                                                        None
                                                      expression (typing/typemod.ml[1194,42358+43]..[1194,42358+45])
                                                        Pexp_ident "id" (typing/typemod.ml[1194,42358+43]..[1194,42358+45])
                                                      expression (typing/typemod.ml[1194,42358+47]..[1194,42358+58])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[1194,42358+47]..[1194,42358+49])
                                                          Pexp_ident "td" (typing/typemod.ml[1194,42358+47]..[1194,42358+49])
                                                        "type_loc" (typing/typemod.ml[1194,42358+50]..[1194,42358+58])
                                                    ]
                                                <case>
                                                  pattern (typing/typemod.ml[1195,42417+10]..[1195,42417+35])
                                                    Ppat_construct "Sig_typext" (typing/typemod.ml[1195,42417+10]..[1195,42417+20])
                                                    Some
                                                      []
                                                      pattern (typing/typemod.ml[1195,42417+21]..[1195,42417+35])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typemod.ml[1195,42417+22]..[1195,42417+24])
                                                            Ppat_var "id" (typing/typemod.ml[1195,42417+22]..[1195,42417+24])
                                                          pattern (typing/typemod.ml[1195,42417+26]..[1195,42417+28])
                                                            Ppat_var "te" (typing/typemod.ml[1195,42417+26]..[1195,42417+28])
                                                          pattern (typing/typemod.ml[1195,42417+30]..[1195,42417+31])
                                                            Ppat_any
                                                          pattern (typing/typemod.ml[1195,42417+33]..[1195,42417+34])
                                                            Ppat_any
                                                        ]
                                                  expression (typing/typemod.ml[1195,42417+39]..[1195,42417+76])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[1195,42417+39]..[1195,42417+60])
                                                        Pexp_construct "Extension_constructor" (typing/typemod.ml[1195,42417+39]..[1195,42417+60])
                                                        None
                                                      expression (typing/typemod.ml[1195,42417+62]..[1195,42417+64])
                                                        Pexp_ident "id" (typing/typemod.ml[1195,42417+62]..[1195,42417+64])
                                                      expression (typing/typemod.ml[1195,42417+66]..[1195,42417+76])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[1195,42417+66]..[1195,42417+68])
                                                          Pexp_ident "te" (typing/typemod.ml[1195,42417+66]..[1195,42417+68])
                                                        "ext_loc" (typing/typemod.ml[1195,42417+69]..[1195,42417+76])
                                                    ]
                                                <case>
                                                  pattern (typing/typemod.ml[1196,42494+10]..[1196,42494+38])
                                                    Ppat_construct "Sig_module" (typing/typemod.ml[1196,42494+10]..[1196,42494+20])
                                                    Some
                                                      []
                                                      pattern (typing/typemod.ml[1196,42494+21]..[1196,42494+38])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typemod.ml[1196,42494+22]..[1196,42494+24])
                                                            Ppat_var "id" (typing/typemod.ml[1196,42494+22]..[1196,42494+24])
                                                          pattern (typing/typemod.ml[1196,42494+26]..[1196,42494+27])
                                                            Ppat_any
                                                          pattern (typing/typemod.ml[1196,42494+29]..[1196,42494+31])
                                                            Ppat_var "md" (typing/typemod.ml[1196,42494+29]..[1196,42494+31])
                                                          pattern (typing/typemod.ml[1196,42494+33]..[1196,42494+34])
                                                            Ppat_any
                                                          pattern (typing/typemod.ml[1196,42494+36]..[1196,42494+37])
                                                            Ppat_any
                                                        ]
                                                  expression (typing/typemod.ml[1196,42494+42]..[1196,42494+63])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[1196,42494+42]..[1196,42494+48])
                                                        Pexp_construct "Module" (typing/typemod.ml[1196,42494+42]..[1196,42494+48])
                                                        None
                                                      expression (typing/typemod.ml[1196,42494+50]..[1196,42494+52])
                                                        Pexp_ident "id" (typing/typemod.ml[1196,42494+50]..[1196,42494+52])
                                                      expression (typing/typemod.ml[1196,42494+54]..[1196,42494+63])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[1196,42494+54]..[1196,42494+56])
                                                          Pexp_ident "md" (typing/typemod.ml[1196,42494+54]..[1196,42494+56])
                                                        "md_loc" (typing/typemod.ml[1196,42494+57]..[1196,42494+63])
                                                    ]
                                                <case>
                                                  pattern (typing/typemod.ml[1197,42558+10]..[1197,42558+34])
                                                    Ppat_construct "Sig_modtype" (typing/typemod.ml[1197,42558+10]..[1197,42558+21])
                                                    Some
                                                      []
                                                      pattern (typing/typemod.ml[1197,42558+22]..[1197,42558+34])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typemod.ml[1197,42558+23]..[1197,42558+25])
                                                            Ppat_var "id" (typing/typemod.ml[1197,42558+23]..[1197,42558+25])
                                                          pattern (typing/typemod.ml[1197,42558+27]..[1197,42558+30])
                                                            Ppat_var "mtd" (typing/typemod.ml[1197,42558+27]..[1197,42558+30])
                                                          pattern (typing/typemod.ml[1197,42558+32]..[1197,42558+33])
                                                            Ppat_any
                                                        ]
                                                  expression (typing/typemod.ml[1197,42558+38]..[1197,42558+66])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[1197,42558+38]..[1197,42558+49])
                                                        Pexp_construct "Module_type" (typing/typemod.ml[1197,42558+38]..[1197,42558+49])
                                                        None
                                                      expression (typing/typemod.ml[1197,42558+51]..[1197,42558+53])
                                                        Pexp_ident "id" (typing/typemod.ml[1197,42558+51]..[1197,42558+53])
                                                      expression (typing/typemod.ml[1197,42558+55]..[1197,42558+66])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[1197,42558+55]..[1197,42558+58])
                                                          Pexp_ident "mtd" (typing/typemod.ml[1197,42558+55]..[1197,42558+58])
                                                        "mtd_loc" (typing/typemod.ml[1197,42558+59]..[1197,42558+66])
                                                    ]
                                                <case>
                                                  pattern (typing/typemod.ml[1198,42625+10]..[1198,42625+33])
                                                    Ppat_construct "Sig_class" (typing/typemod.ml[1198,42625+10]..[1198,42625+19])
                                                    Some
                                                      []
                                                      pattern (typing/typemod.ml[1198,42625+20]..[1198,42625+33])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typemod.ml[1198,42625+21]..[1198,42625+23])
                                                            Ppat_var "id" (typing/typemod.ml[1198,42625+21]..[1198,42625+23])
                                                          pattern (typing/typemod.ml[1198,42625+25]..[1198,42625+26])
                                                            Ppat_var "c" (typing/typemod.ml[1198,42625+25]..[1198,42625+26])
                                                          pattern (typing/typemod.ml[1198,42625+28]..[1198,42625+29])
                                                            Ppat_any
                                                          pattern (typing/typemod.ml[1198,42625+31]..[1198,42625+32])
                                                            Ppat_any
                                                        ]
                                                  expression (typing/typemod.ml[1198,42625+37]..[1198,42625+57])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[1198,42625+37]..[1198,42625+42])
                                                        Pexp_construct "Class" (typing/typemod.ml[1198,42625+37]..[1198,42625+42])
                                                        None
                                                      expression (typing/typemod.ml[1198,42625+44]..[1198,42625+46])
                                                        Pexp_ident "id" (typing/typemod.ml[1198,42625+44]..[1198,42625+46])
                                                      expression (typing/typemod.ml[1198,42625+48]..[1198,42625+57])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[1198,42625+48]..[1198,42625+49])
                                                          Pexp_ident "c" (typing/typemod.ml[1198,42625+48]..[1198,42625+49])
                                                        "cty_loc" (typing/typemod.ml[1198,42625+50]..[1198,42625+57])
                                                    ]
                                                <case>
                                                  pattern (typing/typemod.ml[1199,42683+10]..[1199,42683+39])
                                                    Ppat_construct "Sig_class_type" (typing/typemod.ml[1199,42683+10]..[1199,42683+24])
                                                    Some
                                                      []
                                                      pattern (typing/typemod.ml[1199,42683+25]..[1199,42683+39])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typemod.ml[1199,42683+26]..[1199,42683+28])
                                                            Ppat_var "id" (typing/typemod.ml[1199,42683+26]..[1199,42683+28])
                                                          pattern (typing/typemod.ml[1199,42683+30]..[1199,42683+32])
                                                            Ppat_var "ct" (typing/typemod.ml[1199,42683+30]..[1199,42683+32])
                                                          pattern (typing/typemod.ml[1199,42683+34]..[1199,42683+35])
                                                            Ppat_any
                                                          pattern (typing/typemod.ml[1199,42683+37]..[1199,42683+38])
                                                            Ppat_any
                                                        ]
                                                  expression (typing/typemod.ml[1199,42683+43]..[1199,42683+70])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[1199,42683+43]..[1199,42683+53])
                                                        Pexp_construct "Class_type" (typing/typemod.ml[1199,42683+43]..[1199,42683+53])
                                                        None
                                                      expression (typing/typemod.ml[1199,42683+55]..[1199,42683+57])
                                                        Pexp_ident "id" (typing/typemod.ml[1199,42683+55]..[1199,42683+57])
                                                      expression (typing/typemod.ml[1199,42683+59]..[1199,42683+70])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[1199,42683+59]..[1199,42683+61])
                                                          Pexp_ident "ct" (typing/typemod.ml[1199,42683+59]..[1199,42683+61])
                                                        "clty_loc" (typing/typemod.ml[1199,42683+62]..[1199,42683+70])
                                                    ]
                                              ]
                                      ]
                                      expression (typing/typemod.ml[1201,42763+6]..[1248,44495+9])
                                        Pexp_ifthenelse
                                        expression (typing/typemod.ml[1201,42763+9]..[1201,42763+45])
                                          Pexp_apply
                                          expression (typing/typemod.ml[1201,42763+9]..[1201,42763+22])
                                            Pexp_ident "Ident.Map.mem" (typing/typemod.ml[1201,42763+9]..[1201,42763+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1201,42763+23]..[1201,42763+30])
                                                Pexp_ident "user_id" (typing/typemod.ml[1201,42763+23]..[1201,42763+30])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1201,42763+31]..[1201,42763+45])
                                                Pexp_field
                                                expression (typing/typemod.ml[1201,42763+31]..[1201,42763+40])
                                                  Pexp_ident "to_remove" (typing/typemod.ml[1201,42763+31]..[1201,42763+40])
                                                "hide" (typing/typemod.ml[1201,42763+41]..[1201,42763+45])
                                          ]
                                        expression (typing/typemod.ml[1202,42814+8]..[1202,42814+12])
                                          Pexp_construct "None" (typing/typemod.ml[1202,42814+8]..[1202,42814+12])
                                          None
                                        Some
                                          expression (typing/typemod.ml[1203,42827+11]..[1248,44495+9])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[1204,42844+12]..[1204,42844+21])
                                                  Ppat_var "component" (typing/typemod.ml[1204,42844+12]..[1204,42844+21])
                                                expression (typing/typemod.ml[1205,42868+10]..[1211,43121+15])
                                                  Pexp_ifthenelse
                                                  expression (typing/typemod.ml[1205,42868+13]..[1205,42868+46])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[1205,42868+29]..[1205,42868+31])
                                                      Pexp_ident "==" (typing/typemod.ml[1205,42868+29]..[1205,42868+31])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1205,42868+13]..[1205,42868+28])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[1205,42868+13]..[1205,42868+22])
                                                            Pexp_ident "to_remove" (typing/typemod.ml[1205,42868+13]..[1205,42868+22])
                                                          "subst" (typing/typemod.ml[1205,42868+23]..[1205,42868+28])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1205,42868+32]..[1205,42868+46])
                                                          Pexp_ident "Subst.identity" (typing/typemod.ml[1205,42868+32]..[1205,42868+46])
                                                    ]
                                                  expression (typing/typemod.ml[1206,42920+12]..[1206,42920+21])
                                                    Pexp_ident "component" (typing/typemod.ml[1206,42920+12]..[1206,42920+21])
                                                  Some
                                                    expression (typing/typemod.ml[1208,42957+12]..[1211,43121+15])
                                                      Pexp_sequence
                                                      expression (typing/typemod.ml[1209,42975+14]..[1209,42975+78])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[1209,42975+14]..[1209,42975+39])
                                                          Pexp_ident "check_unpackable_modtypes" (typing/typemod.ml[1209,42975+14]..[1209,42975+39])
                                                        [
                                                          <arg>
                                                          Labelled "loc"
                                                            expression (typing/typemod.ml[1209,42975+45]..[1209,42975+53])
                                                              Pexp_ident "user_loc" (typing/typemod.ml[1209,42975+45]..[1209,42975+53])
                                                          <arg>
                                                          Labelled "env"
                                                            expression (typing/typemod.ml[1209,42975+55]..[1209,42975+58])
                                                              Pexp_ident "env" (typing/typemod.ml[1209,42975+55]..[1209,42975+58])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1209,42975+59]..[1209,42975+68])
                                                              Pexp_ident "to_remove" (typing/typemod.ml[1209,42975+59]..[1209,42975+68])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1209,42975+69]..[1209,42975+78])
                                                              Pexp_ident "component" (typing/typemod.ml[1209,42975+69]..[1209,42975+78])
                                                        ]
                                                      expression (typing/typemod.ml[1210,43055+14]..[1210,43055+65])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[1210,43055+14]..[1210,43055+34])
                                                          Pexp_ident "Subst.signature_item" (typing/typemod.ml[1210,43055+14]..[1210,43055+34])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1210,43055+35]..[1210,43055+39])
                                                              Pexp_construct "Keep" (typing/typemod.ml[1210,43055+35]..[1210,43055+39])
                                                              None
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1210,43055+40]..[1210,43055+55])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[1210,43055+40]..[1210,43055+49])
                                                                Pexp_ident "to_remove" (typing/typemod.ml[1210,43055+40]..[1210,43055+49])
                                                              "subst" (typing/typemod.ml[1210,43055+50]..[1210,43055+55])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1210,43055+56]..[1210,43055+65])
                                                              Pexp_ident "component" (typing/typemod.ml[1210,43055+56]..[1210,43055+65])
                                                        ]
                                            ]
                                            expression (typing/typemod.ml[1213,43148+8]..[1247,44472+22])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typemod.ml[1213,43148+12]..[1213,43148+21])
                                                    Ppat_var "component" (typing/typemod.ml[1213,43148+12]..[1213,43148+21])
                                                  expression (typing/typemod.ml[1214,43172+10]..[1245,44390+70])
                                                    Pexp_match
                                                    expression (typing/typemod.ml[1214,43172+16]..[1214,43172+29])
                                                      Pexp_ident "ids_to_remove" (typing/typemod.ml[1214,43172+16]..[1214,43172+29])
                                                    [
                                                      <case>
                                                        pattern (typing/typemod.ml[1215,43207+12]..[1215,43207+14])
                                                          Ppat_construct "[]" (typing/typemod.ml[1215,43207+12]..[1215,43207+14])
                                                          None
                                                        expression (typing/typemod.ml[1215,43207+18]..[1215,43207+27])
                                                          Pexp_ident "component" (typing/typemod.ml[1215,43207+18]..[1215,43207+27])
                                                      <case>
                                                        pattern (typing/typemod.ml[1216,43235+12]..[1216,43235+15])
                                                          Ppat_var "ids" (typing/typemod.ml[1216,43235+12]..[1216,43235+15])
                                                        expression (typing/typemod.ml[1217,43254+12]..[1245,44390+70])
                                                          Pexp_try
                                                          expression (typing/typemod.ml[1217,43254+16]..[1217,43254+55])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1217,43254+16]..[1217,43254+37])
                                                              Pexp_ident "Mtype.nondep_sig_item" (typing/typemod.ml[1217,43254+16]..[1217,43254+37])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1217,43254+38]..[1217,43254+41])
                                                                  Pexp_ident "env" (typing/typemod.ml[1217,43254+38]..[1217,43254+41])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1217,43254+42]..[1217,43254+45])
                                                                  Pexp_ident "ids" (typing/typemod.ml[1217,43254+42]..[1217,43254+45])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1217,43254+46]..[1217,43254+55])
                                                                  Pexp_ident "component" (typing/typemod.ml[1217,43254+46]..[1217,43254+55])
                                                            ]
                                                          [
                                                            <case>
                                                              pattern (typing/typemod.ml[1218,43315+14]..[1218,43315+55])
                                                                Ppat_construct "Ctype.Nondep_cannot_erase" (typing/typemod.ml[1218,43315+14]..[1218,43315+39])
                                                                Some
                                                                  []
                                                                  pattern (typing/typemod.ml[1218,43315+40]..[1218,43315+55])
                                                                    Ppat_var "removed_item_id" (typing/typemod.ml[1218,43315+40]..[1218,43315+55])
                                                              expression (typing/typemod.ml[1219,43374+14]..[1245,44390+70])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (typing/typemod.ml[1219,43374+18]..[1219,43374+63])
                                                                      Ppat_tuple
                                                                      [
pattern (typing/typemod.ml[1219,43374+19]..[1219,43374+36])
  Ppat_var "removed_item_kind" (typing/typemod.ml[1219,43374+19]..[1219,43374+36])
pattern (typing/typemod.ml[1219,43374+38]..[1219,43374+54])
  Ppat_var "removed_item_loc" (typing/typemod.ml[1219,43374+38]..[1219,43374+54])
pattern (typing/typemod.ml[1219,43374+56]..[1219,43374+62])
  Ppat_var "reason" (typing/typemod.ml[1219,43374+56]..[1219,43374+62])
                                                                      ]
                                                                    expression (typing/typemod.ml[1220,43440+16]..[1220,43440+61])
                                                                      Pexp_apply
                                                                      expression (typing/typemod.ml[1220,43440+16]..[1220,43440+30])
Pexp_ident "Ident.Map.find" (typing/typemod.ml[1220,43440+16]..[1220,43440+30])
                                                                      [
<arg>
Nolabel
  expression (typing/typemod.ml[1220,43440+31]..[1220,43440+46])
    Pexp_ident "removed_item_id" (typing/typemod.ml[1220,43440+31]..[1220,43440+46])
<arg>
Nolabel
  expression (typing/typemod.ml[1220,43440+47]..[1220,43440+61])
    Pexp_field
    expression (typing/typemod.ml[1220,43440+47]..[1220,43440+56])
      Pexp_ident "to_remove" (typing/typemod.ml[1220,43440+47]..[1220,43440+56])
    "hide" (typing/typemod.ml[1220,43440+57]..[1220,43440+61])
                                                                      ]
                                                                ]
                                                                expression (typing/typemod.ml[1222,43519+14]..[1245,44390+70])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (typing/typemod.ml[1222,43519+18]..[1222,43519+39])
Ppat_tuple
[
  pattern (typing/typemod.ml[1222,43519+18]..[1222,43519+25])
    Ppat_var "err_loc" (typing/typemod.ml[1222,43519+18]..[1222,43519+25])
  pattern (typing/typemod.ml[1222,43519+27]..[1222,43519+39])
    Ppat_var "hiding_error" (typing/typemod.ml[1222,43519+27]..[1222,43519+39])
]
                                                                      expression (typing/typemod.ml[1223,43561+16]..[1243,44353+19])
Pexp_match
expression (typing/typemod.ml[1223,43561+22]..[1223,43561+28])
  Pexp_ident "reason" (typing/typemod.ml[1223,43561+22]..[1223,43561+28])
[
  <case>
    pattern (typing/typemod.ml[1224,43595+18]..[1224,43595+27])
      Ppat_construct "From_open" (typing/typemod.ml[1224,43595+18]..[1224,43595+27])
      None
    expression (typing/typemod.ml[1225,43626+18]..[1232,43905+19])
      Pexp_tuple
      [
        expression (typing/typemod.ml[1225,43626+18]..[1225,43626+34])
          Pexp_ident "removed_item_loc" (typing/typemod.ml[1225,43626+18]..[1225,43626+34])
        expression (typing/typemod.ml[1226,43662+18]..[1232,43905+19])
          Pexp_construct "Appears_in_signature" (typing/typemod.ml[1226,43662+18]..[1226,43662+38])
          Some
            expression (typing/typemod.ml[1226,43662+39]..[1232,43905+19])
              Pexp_record
              [
                "opened_item_kind" (typing/typemod.ml[1227,43703+20]..[1227,43703+36])
                  expression (typing/typemod.ml[1227,43703+39]..[1227,43703+56])
                    Pexp_ident "removed_item_kind" (typing/typemod.ml[1227,43703+39]..[1227,43703+56])
                "opened_item_id" (typing/typemod.ml[1228,43761+20]..[1228,43761+34])
                  expression (typing/typemod.ml[1228,43761+37]..[1228,43761+52])
                    Pexp_ident "removed_item_id" (typing/typemod.ml[1228,43761+37]..[1228,43761+52])
                "user_id" (typing/typemod.ml[1229,43815+20]..[1229,43815+27]) ghost
                  expression (typing/typemod.ml[1229,43815+20]..[1229,43815+27])
                    Pexp_ident "user_id" (typing/typemod.ml[1229,43815+20]..[1229,43815+27])
                "user_kind" (typing/typemod.ml[1230,43844+20]..[1230,43844+29]) ghost
                  expression (typing/typemod.ml[1230,43844+20]..[1230,43844+29])
                    Pexp_ident "user_kind" (typing/typemod.ml[1230,43844+20]..[1230,43844+29])
                "user_loc" (typing/typemod.ml[1231,43875+20]..[1231,43875+28]) ghost
                  expression (typing/typemod.ml[1231,43875+20]..[1231,43875+28])
                    Pexp_ident "user_loc" (typing/typemod.ml[1231,43875+20]..[1231,43875+28])
              ]
              None
      ]
  <case>
    pattern (typing/typemod.ml[1233,43925+18]..[1233,43925+57])
      Ppat_construct "Shadowed_by" (typing/typemod.ml[1233,43925+18]..[1233,43925+29])
      Some
        []
        pattern (typing/typemod.ml[1233,43925+30]..[1233,43925+57])
          Ppat_tuple
          [
            pattern (typing/typemod.ml[1233,43925+31]..[1233,43925+42])
              Ppat_var "shadower_id" (typing/typemod.ml[1233,43925+31]..[1233,43925+42])
            pattern (typing/typemod.ml[1233,43925+44]..[1233,43925+56])
              Ppat_var "shadower_loc" (typing/typemod.ml[1233,43925+44]..[1233,43925+56])
          ]
    expression (typing/typemod.ml[1234,43986+18]..[1243,44353+19])
      Pexp_tuple
      [
        expression (typing/typemod.ml[1234,43986+18]..[1234,43986+30])
          Pexp_ident "shadower_loc" (typing/typemod.ml[1234,43986+18]..[1234,43986+30])
        expression (typing/typemod.ml[1235,44018+18]..[1243,44353+19])
          Pexp_construct "Illegal_shadowing" (typing/typemod.ml[1235,44018+18]..[1235,44018+35])
          Some
            expression (typing/typemod.ml[1235,44018+36]..[1243,44353+19])
              Pexp_record
              [
                "shadowed_item_kind" (typing/typemod.ml[1236,44056+20]..[1236,44056+38])
                  expression (typing/typemod.ml[1236,44056+41]..[1236,44056+58])
                    Pexp_ident "removed_item_kind" (typing/typemod.ml[1236,44056+41]..[1236,44056+58])
                "shadowed_item_id" (typing/typemod.ml[1237,44116+20]..[1237,44116+36])
                  expression (typing/typemod.ml[1237,44116+39]..[1237,44116+54])
                    Pexp_ident "removed_item_id" (typing/typemod.ml[1237,44116+39]..[1237,44116+54])
                "shadowed_item_loc" (typing/typemod.ml[1238,44172+20]..[1238,44172+37])
                  expression (typing/typemod.ml[1238,44172+40]..[1238,44172+56])
                    Pexp_ident "removed_item_loc" (typing/typemod.ml[1238,44172+40]..[1238,44172+56])
                "shadower_id" (typing/typemod.ml[1239,44230+20]..[1239,44230+31]) ghost
                  expression (typing/typemod.ml[1239,44230+20]..[1239,44230+31])
                    Pexp_ident "shadower_id" (typing/typemod.ml[1239,44230+20]..[1239,44230+31])
                "user_id" (typing/typemod.ml[1240,44263+20]..[1240,44263+27]) ghost
                  expression (typing/typemod.ml[1240,44263+20]..[1240,44263+27])
                    Pexp_ident "user_id" (typing/typemod.ml[1240,44263+20]..[1240,44263+27])
                "user_kind" (typing/typemod.ml[1241,44292+20]..[1241,44292+29]) ghost
                  expression (typing/typemod.ml[1241,44292+20]..[1241,44292+29])
                    Pexp_ident "user_kind" (typing/typemod.ml[1241,44292+20]..[1241,44292+29])
                "user_loc" (typing/typemod.ml[1242,44323+20]..[1242,44323+28]) ghost
                  expression (typing/typemod.ml[1242,44323+20]..[1242,44323+28])
                    Pexp_ident "user_loc" (typing/typemod.ml[1242,44323+20]..[1242,44323+28])
              ]
              None
      ]
]
                                                                  ]
                                                                  expression (typing/typemod.ml[1245,44390+14]..[1245,44390+70])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[1245,44390+14]..[1245,44390+19])
                                                                      Pexp_ident "raise" (typing/typemod.ml[1245,44390+14]..[1245,44390+19])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[1245,44390+20]..[1245,44390+70])
  Pexp_construct "Error" (typing/typemod.ml[1245,44390+21]..[1245,44390+26])
  Some
    expression (typing/typemod.ml[1245,44390+26]..[1245,44390+69])
      Pexp_tuple
      [
        expression (typing/typemod.ml[1245,44390+27]..[1245,44390+34])
          Pexp_ident "err_loc" (typing/typemod.ml[1245,44390+27]..[1245,44390+34])
        expression (typing/typemod.ml[1245,44390+36]..[1245,44390+39])
          Pexp_ident "env" (typing/typemod.ml[1245,44390+36]..[1245,44390+39])
        expression (typing/typemod.ml[1245,44390+41]..[1245,44390+68])
          Pexp_construct "Cannot_hide_id" (typing/typemod.ml[1245,44390+41]..[1245,44390+55])
          Some
            expression (typing/typemod.ml[1245,44390+56]..[1245,44390+68])
              Pexp_ident "hiding_error" (typing/typemod.ml[1245,44390+56]..[1245,44390+68])
      ]
                                                                    ]
                                                          ]
                                                    ]
                                              ]
                                              expression (typing/typemod.ml[1247,44472+8]..[1247,44472+22])
                                                Pexp_construct "Some" (typing/typemod.ml[1247,44472+8]..[1247,44472+12])
                                                Some
                                                  expression (typing/typemod.ml[1247,44472+13]..[1247,44472+22])
                                                    Pexp_ident "component" (typing/typemod.ml[1247,44472+13]..[1247,44472+22])
                              ]
                              expression (typing/typemod.ml[1250,44512+4]..[1250,44512+36])
                                Pexp_apply
                                expression (typing/typemod.ml[1250,44512+4]..[1250,44512+19])
                                  Pexp_ident "List.filter_map" (typing/typemod.ml[1250,44512+4]..[1250,44512+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[1250,44512+20]..[1250,44512+33])
                                      Pexp_ident "simplify_item" (typing/typemod.ml[1250,44512+20]..[1250,44512+33])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[1250,44512+34]..[1250,44512+36])
                                      Pexp_ident "sg" (typing/typemod.ml[1250,44512+34]..[1250,44512+36])
                                ]
              ]
          ]
        module_type (typing/typemod.ml[949,34337+25]..[984,35486+3])
          Pmty_signature
          [
            signature_item (typing/typemod.ml[950,34366+2]..[950,34366+8])
              Psig_type Rec
              [
                type_declaration "t" (typing/typemod.ml[950,34366+7]..[950,34366+8]) (typing/typemod.ml[950,34366+2]..[950,34366+8])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (typing/typemod.ml[952,34376+1]..[960,34597+5])
              Psig_type Rec
              [
                type_declaration "shadowable" (typing/typemod.ml[952,34376+6]..[952,34376+16]) (typing/typemod.ml[952,34376+1]..[960,34597+5])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_record
                      [
                        (typing/typemod.ml[954,34401+6]..[954,34401+20])
                          Immutable
                          "self" (typing/typemod.ml[954,34401+6]..[954,34401+10])                          core_type (typing/typemod.ml[954,34401+12]..[954,34401+19])
                            Ptyp_constr "Ident.t" (typing/typemod.ml[954,34401+12]..[954,34401+19])
                            []
                        (typing/typemod.ml[955,34422+6]..[955,34422+26])
                          attribute "ocaml.doc"
                            [
                              structure_item (typing/typemod.ml[956,34449+6]..[958,34566+8])
                                Pstr_eval
                                expression (typing/typemod.ml[956,34449+6]..[958,34566+8])
                                  Pexp_constant PConst_string(" group includes the element itself and all elements\n                that should be removed at the same time\n      ",(typing/typemod.ml[956,34449+6]..[958,34566+8]),None)
                            ]
                          Immutable
                          "group" (typing/typemod.ml[955,34422+6]..[955,34422+11])                          core_type (typing/typemod.ml[955,34422+13]..[955,34422+25])
                            Ptyp_constr "list" (typing/typemod.ml[955,34422+21]..[955,34422+25])
                            [
                              core_type (typing/typemod.ml[955,34422+13]..[955,34422+20])
                                Ptyp_constr "Ident.t" (typing/typemod.ml[955,34422+13]..[955,34422+20])
                                []
                            ]
                        (typing/typemod.ml[959,34575+6]..[959,34575+21])
                          Immutable
                          "loc" (typing/typemod.ml[959,34575+6]..[959,34575+9])                          core_type (typing/typemod.ml[959,34575+10]..[959,34575+20])
                            Ptyp_constr "Location.t" (typing/typemod.ml[959,34575+10]..[959,34575+20])
                            []
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (typing/typemod.ml[962,34604+2]..[968,34784+3])
              Psig_type Rec
              [
                type_declaration "info" (typing/typemod.ml[962,34604+7]..[962,34604+11]) (typing/typemod.ml[962,34604+2]..[968,34784+3])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (typing/typemod.ml[962,34604+14]..[968,34784+3])
                        Ptyp_variant closed=Closed
                        [
                          Rtag "Exported" true
                            []
                          Rtag "From_open" true
                            []
                          Rtag "Shadowable" false
                            [
                              core_type (typing/typemod.ml[965,34653+21]..[965,34653+31])
                                Ptyp_constr "shadowable" (typing/typemod.ml[965,34653+21]..[965,34653+31])
                                []
                            ]
                          Rtag "Substituted_away" false
                            [
                              core_type (typing/typemod.ml[966,34685+27]..[966,34685+34])
                                Ptyp_constr "Subst.t" (typing/typemod.ml[966,34685+27]..[966,34685+34])
                                []
                            ]
                          Rtag "Unpackable_modtype_substituted_away" false
                            [
                              core_type (typing/typemod.ml[967,34720+46]..[967,34720+63])
                                Ptyp_tuple
                                [
                                  core_type (typing/typemod.ml[967,34720+46]..[967,34720+53])
                                    Ptyp_constr "Ident.t" (typing/typemod.ml[967,34720+46]..[967,34720+53])
                                    []
                                  core_type (typing/typemod.ml[967,34720+56]..[967,34720+63])
                                    Ptyp_constr "Subst.t" (typing/typemod.ml[967,34720+56]..[967,34720+63])
                                    []
                                ]
                            ]
                        ]
                        None
              ]
            signature_item (typing/typemod.ml[970,34789+2]..[970,34789+24])
              Psig_value
              value_description "create" (typing/typemod.ml[970,34789+6]..[970,34789+12]) (typing/typemod.ml[970,34789+2]..[970,34789+24])
                core_type (typing/typemod.ml[970,34789+15]..[970,34789+24])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/typemod.ml[970,34789+15]..[970,34789+19])
                    Ptyp_constr "unit" (typing/typemod.ml[970,34789+15]..[970,34789+19])
                    []
                  core_type (typing/typemod.ml[970,34789+23]..[970,34789+24])
                    Ptyp_constr "t" (typing/typemod.ml[970,34789+23]..[970,34789+24])
                    []
                []
            signature_item (typing/typemod.ml[972,34815+2]..[972,34815+72])
              Psig_value
              value_description "check_value" (typing/typemod.ml[972,34815+6]..[972,34815+17]) (typing/typemod.ml[972,34815+2]..[972,34815+72])
                core_type (typing/typemod.ml[972,34815+24]..[972,34815+72])
                  Ptyp_arrow
                  Optional "info"
                  core_type (typing/typemod.ml[972,34815+30]..[972,34815+34])
                    Ptyp_constr "info" (typing/typemod.ml[972,34815+30]..[972,34815+34])
                    []
                  core_type (typing/typemod.ml[972,34815+38]..[972,34815+72])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/typemod.ml[972,34815+38]..[972,34815+39])
                      Ptyp_constr "t" (typing/typemod.ml[972,34815+38]..[972,34815+39])
                      []
                    core_type (typing/typemod.ml[972,34815+43]..[972,34815+72])
                      Ptyp_arrow
                      Nolabel
                      core_type (typing/typemod.ml[972,34815+43]..[972,34815+53])
                        Ptyp_constr "Location.t" (typing/typemod.ml[972,34815+43]..[972,34815+53])
                        []
                      core_type (typing/typemod.ml[972,34815+57]..[972,34815+72])
                        Ptyp_arrow
                        Nolabel
                        core_type (typing/typemod.ml[972,34815+57]..[972,34815+64])
                          Ptyp_constr "Ident.t" (typing/typemod.ml[972,34815+57]..[972,34815+64])
                          []
                        core_type (typing/typemod.ml[972,34815+68]..[972,34815+72])
                          Ptyp_constr "unit" (typing/typemod.ml[972,34815+68]..[972,34815+72])
                          []
                []
            signature_item (typing/typemod.ml[973,34888+2]..[973,34888+72])
              Psig_value
              value_description "check_type" (typing/typemod.ml[973,34888+6]..[973,34888+16]) (typing/typemod.ml[973,34888+2]..[973,34888+72])
                core_type (typing/typemod.ml[973,34888+24]..[973,34888+72])
                  Ptyp_arrow
                  Optional "info"
                  core_type (typing/typemod.ml[973,34888+30]..[973,34888+34])
                    Ptyp_constr "info" (typing/typemod.ml[973,34888+30]..[973,34888+34])
                    []
                  core_type (typing/typemod.ml[973,34888+38]..[973,34888+72])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/typemod.ml[973,34888+38]..[973,34888+39])
                      Ptyp_constr "t" (typing/typemod.ml[973,34888+38]..[973,34888+39])
                      []
                    core_type (typing/typemod.ml[973,34888+43]..[973,34888+72])
                      Ptyp_arrow
                      Nolabel
                      core_type (typing/typemod.ml[973,34888+43]..[973,34888+53])
                        Ptyp_constr "Location.t" (typing/typemod.ml[973,34888+43]..[973,34888+53])
                        []
                      core_type (typing/typemod.ml[973,34888+57]..[973,34888+72])
                        Ptyp_arrow
                        Nolabel
                        core_type (typing/typemod.ml[973,34888+57]..[973,34888+64])
                          Ptyp_constr "Ident.t" (typing/typemod.ml[973,34888+57]..[973,34888+64])
                          []
                        core_type (typing/typemod.ml[973,34888+68]..[973,34888+72])
                          Ptyp_constr "unit" (typing/typemod.ml[973,34888+68]..[973,34888+72])
                          []
                []
            signature_item (typing/typemod.ml[974,34961+2]..[974,34961+72])
              Psig_value
              value_description "check_typext" (typing/typemod.ml[974,34961+6]..[974,34961+18]) (typing/typemod.ml[974,34961+2]..[974,34961+72])
                core_type (typing/typemod.ml[974,34961+24]..[974,34961+72])
                  Ptyp_arrow
                  Optional "info"
                  core_type (typing/typemod.ml[974,34961+30]..[974,34961+34])
                    Ptyp_constr "info" (typing/typemod.ml[974,34961+30]..[974,34961+34])
                    []
                  core_type (typing/typemod.ml[974,34961+38]..[974,34961+72])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/typemod.ml[974,34961+38]..[974,34961+39])
                      Ptyp_constr "t" (typing/typemod.ml[974,34961+38]..[974,34961+39])
                      []
                    core_type (typing/typemod.ml[974,34961+43]..[974,34961+72])
                      Ptyp_arrow
                      Nolabel
                      core_type (typing/typemod.ml[974,34961+43]..[974,34961+53])
                        Ptyp_constr "Location.t" (typing/typemod.ml[974,34961+43]..[974,34961+53])
                        []
                      core_type (typing/typemod.ml[974,34961+57]..[974,34961+72])
                        Ptyp_arrow
                        Nolabel
                        core_type (typing/typemod.ml[974,34961+57]..[974,34961+64])
                          Ptyp_constr "Ident.t" (typing/typemod.ml[974,34961+57]..[974,34961+64])
                          []
                        core_type (typing/typemod.ml[974,34961+68]..[974,34961+72])
                          Ptyp_constr "unit" (typing/typemod.ml[974,34961+68]..[974,34961+72])
                          []
                []
            signature_item (typing/typemod.ml[975,35034+2]..[975,35034+72])
              Psig_value
              value_description "check_module" (typing/typemod.ml[975,35034+6]..[975,35034+18]) (typing/typemod.ml[975,35034+2]..[975,35034+72])
                core_type (typing/typemod.ml[975,35034+24]..[975,35034+72])
                  Ptyp_arrow
                  Optional "info"
                  core_type (typing/typemod.ml[975,35034+30]..[975,35034+34])
                    Ptyp_constr "info" (typing/typemod.ml[975,35034+30]..[975,35034+34])
                    []
                  core_type (typing/typemod.ml[975,35034+38]..[975,35034+72])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/typemod.ml[975,35034+38]..[975,35034+39])
                      Ptyp_constr "t" (typing/typemod.ml[975,35034+38]..[975,35034+39])
                      []
                    core_type (typing/typemod.ml[975,35034+43]..[975,35034+72])
                      Ptyp_arrow
                      Nolabel
                      core_type (typing/typemod.ml[975,35034+43]..[975,35034+53])
                        Ptyp_constr "Location.t" (typing/typemod.ml[975,35034+43]..[975,35034+53])
                        []
                      core_type (typing/typemod.ml[975,35034+57]..[975,35034+72])
                        Ptyp_arrow
                        Nolabel
                        core_type (typing/typemod.ml[975,35034+57]..[975,35034+64])
                          Ptyp_constr "Ident.t" (typing/typemod.ml[975,35034+57]..[975,35034+64])
                          []
                        core_type (typing/typemod.ml[975,35034+68]..[975,35034+72])
                          Ptyp_constr "unit" (typing/typemod.ml[975,35034+68]..[975,35034+72])
                          []
                []
            signature_item (typing/typemod.ml[976,35107+2]..[976,35107+72])
              Psig_value
              value_description "check_modtype" (typing/typemod.ml[976,35107+6]..[976,35107+19]) (typing/typemod.ml[976,35107+2]..[976,35107+72])
                core_type (typing/typemod.ml[976,35107+24]..[976,35107+72])
                  Ptyp_arrow
                  Optional "info"
                  core_type (typing/typemod.ml[976,35107+30]..[976,35107+34])
                    Ptyp_constr "info" (typing/typemod.ml[976,35107+30]..[976,35107+34])
                    []
                  core_type (typing/typemod.ml[976,35107+38]..[976,35107+72])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/typemod.ml[976,35107+38]..[976,35107+39])
                      Ptyp_constr "t" (typing/typemod.ml[976,35107+38]..[976,35107+39])
                      []
                    core_type (typing/typemod.ml[976,35107+43]..[976,35107+72])
                      Ptyp_arrow
                      Nolabel
                      core_type (typing/typemod.ml[976,35107+43]..[976,35107+53])
                        Ptyp_constr "Location.t" (typing/typemod.ml[976,35107+43]..[976,35107+53])
                        []
                      core_type (typing/typemod.ml[976,35107+57]..[976,35107+72])
                        Ptyp_arrow
                        Nolabel
                        core_type (typing/typemod.ml[976,35107+57]..[976,35107+64])
                          Ptyp_constr "Ident.t" (typing/typemod.ml[976,35107+57]..[976,35107+64])
                          []
                        core_type (typing/typemod.ml[976,35107+68]..[976,35107+72])
                          Ptyp_constr "unit" (typing/typemod.ml[976,35107+68]..[976,35107+72])
                          []
                []
            signature_item (typing/typemod.ml[977,35180+2]..[977,35180+72])
              Psig_value
              value_description "check_class" (typing/typemod.ml[977,35180+6]..[977,35180+17]) (typing/typemod.ml[977,35180+2]..[977,35180+72])
                core_type (typing/typemod.ml[977,35180+24]..[977,35180+72])
                  Ptyp_arrow
                  Optional "info"
                  core_type (typing/typemod.ml[977,35180+30]..[977,35180+34])
                    Ptyp_constr "info" (typing/typemod.ml[977,35180+30]..[977,35180+34])
                    []
                  core_type (typing/typemod.ml[977,35180+38]..[977,35180+72])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/typemod.ml[977,35180+38]..[977,35180+39])
                      Ptyp_constr "t" (typing/typemod.ml[977,35180+38]..[977,35180+39])
                      []
                    core_type (typing/typemod.ml[977,35180+43]..[977,35180+72])
                      Ptyp_arrow
                      Nolabel
                      core_type (typing/typemod.ml[977,35180+43]..[977,35180+53])
                        Ptyp_constr "Location.t" (typing/typemod.ml[977,35180+43]..[977,35180+53])
                        []
                      core_type (typing/typemod.ml[977,35180+57]..[977,35180+72])
                        Ptyp_arrow
                        Nolabel
                        core_type (typing/typemod.ml[977,35180+57]..[977,35180+64])
                          Ptyp_constr "Ident.t" (typing/typemod.ml[977,35180+57]..[977,35180+64])
                          []
                        core_type (typing/typemod.ml[977,35180+68]..[977,35180+72])
                          Ptyp_constr "unit" (typing/typemod.ml[977,35180+68]..[977,35180+72])
                          []
                []
            signature_item (typing/typemod.ml[978,35253+2]..[978,35253+72])
              Psig_value
              value_description "check_class_type" (typing/typemod.ml[978,35253+6]..[978,35253+22]) (typing/typemod.ml[978,35253+2]..[978,35253+72])
                core_type (typing/typemod.ml[978,35253+24]..[978,35253+72])
                  Ptyp_arrow
                  Optional "info"
                  core_type (typing/typemod.ml[978,35253+30]..[978,35253+34])
                    Ptyp_constr "info" (typing/typemod.ml[978,35253+30]..[978,35253+34])
                    []
                  core_type (typing/typemod.ml[978,35253+38]..[978,35253+72])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/typemod.ml[978,35253+38]..[978,35253+39])
                      Ptyp_constr "t" (typing/typemod.ml[978,35253+38]..[978,35253+39])
                      []
                    core_type (typing/typemod.ml[978,35253+43]..[978,35253+72])
                      Ptyp_arrow
                      Nolabel
                      core_type (typing/typemod.ml[978,35253+43]..[978,35253+53])
                        Ptyp_constr "Location.t" (typing/typemod.ml[978,35253+43]..[978,35253+53])
                        []
                      core_type (typing/typemod.ml[978,35253+57]..[978,35253+72])
                        Ptyp_arrow
                        Nolabel
                        core_type (typing/typemod.ml[978,35253+57]..[978,35253+64])
                          Ptyp_constr "Ident.t" (typing/typemod.ml[978,35253+57]..[978,35253+64])
                          []
                        core_type (typing/typemod.ml[978,35253+68]..[978,35253+72])
                          Ptyp_constr "unit" (typing/typemod.ml[978,35253+68]..[978,35253+72])
                          []
                []
            signature_item (typing/typemod.ml[980,35327+2]..[981,35349+70])
              Psig_value
              value_description "check_sig_item" (typing/typemod.ml[980,35327+6]..[980,35327+20]) (typing/typemod.ml[980,35327+2]..[981,35349+70])
                core_type (typing/typemod.ml[981,35349+4]..[981,35349+70])
                  Ptyp_arrow
                  Optional "info"
                  core_type (typing/typemod.ml[981,35349+10]..[981,35349+14])
                    Ptyp_constr "info" (typing/typemod.ml[981,35349+10]..[981,35349+14])
                    []
                  core_type (typing/typemod.ml[981,35349+18]..[981,35349+70])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/typemod.ml[981,35349+18]..[981,35349+19])
                      Ptyp_constr "t" (typing/typemod.ml[981,35349+18]..[981,35349+19])
                      []
                    core_type (typing/typemod.ml[981,35349+23]..[981,35349+70])
                      Ptyp_arrow
                      Nolabel
                      core_type (typing/typemod.ml[981,35349+23]..[981,35349+33])
                        Ptyp_constr "Location.t" (typing/typemod.ml[981,35349+23]..[981,35349+33])
                        []
                      core_type (typing/typemod.ml[981,35349+37]..[981,35349+70])
                        Ptyp_arrow
                        Nolabel
                        core_type (typing/typemod.ml[981,35349+37]..[981,35349+62])
                          Ptyp_constr "Signature_group.rec_group" (typing/typemod.ml[981,35349+37]..[981,35349+62])
                          []
                        core_type (typing/typemod.ml[981,35349+66]..[981,35349+70])
                          Ptyp_constr "unit" (typing/typemod.ml[981,35349+66]..[981,35349+70])
                          []
                []
            signature_item (typing/typemod.ml[983,35421+2]..[983,35421+64])
              Psig_value
              value_description "simplify" (typing/typemod.ml[983,35421+6]..[983,35421+14]) (typing/typemod.ml[983,35421+2]..[983,35421+64])
                core_type (typing/typemod.ml[983,35421+16]..[983,35421+64])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/typemod.ml[983,35421+16]..[983,35421+21])
                    Ptyp_constr "Env.t" (typing/typemod.ml[983,35421+16]..[983,35421+21])
                    []
                  core_type (typing/typemod.ml[983,35421+25]..[983,35421+64])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/typemod.ml[983,35421+25]..[983,35421+26])
                      Ptyp_constr "t" (typing/typemod.ml[983,35421+25]..[983,35421+26])
                      []
                    core_type (typing/typemod.ml[983,35421+30]..[983,35421+64])
                      Ptyp_arrow
                      Nolabel
                      core_type (typing/typemod.ml[983,35421+30]..[983,35421+45])
                        Ptyp_constr "Types.signature" (typing/typemod.ml[983,35421+30]..[983,35421+45])
                        []
                      core_type (typing/typemod.ml[983,35421+49]..[983,35421+64])
                        Ptyp_constr "Types.signature" (typing/typemod.ml[983,35421+49]..[983,35421+64])
                        []
                []
          ]
  structure_item (typing/typemod.ml[1253,44554+0]..[1260,44763+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[1253,44554+4]..[1253,44554+32])
          Ppat_var "has_remove_aliases_attribute" (typing/typemod.ml[1253,44554+4]..[1253,44554+32])
        expression (typing/typemod.ml[1253,44554+33]..[1260,44763+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1253,44554+33]..[1253,44554+37])
            Ppat_var "attr" (typing/typemod.ml[1253,44554+33]..[1253,44554+37])
          expression (typing/typemod.ml[1254,44594+2]..[1260,44763+18])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/typemod.ml[1254,44594+6]..[1254,44594+20])
                  Ppat_var "remove_aliases" (typing/typemod.ml[1254,44594+6]..[1254,44594+20])
                expression (typing/typemod.ml[1255,44617+4]..[1256,44658+53])
                  Pexp_apply
                  expression (typing/typemod.ml[1255,44617+4]..[1255,44617+40])
                    Pexp_ident "Attr_helper.get_no_payload_attribute" (typing/typemod.ml[1255,44617+4]..[1255,44617+40])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[1256,44658+6]..[1256,44658+48])
                        Pexp_construct "::" (typing/typemod.ml[1256,44658+7]..[1256,44658+48]) ghost
                        Some
                          expression (typing/typemod.ml[1256,44658+7]..[1256,44658+48]) ghost
                            Pexp_tuple
                            [
                              expression (typing/typemod.ml[1256,44658+7]..[1256,44658+23])
                                Pexp_constant PConst_string("remove_aliases",(typing/typemod.ml[1256,44658+8]..[1256,44658+22]),None)
                              expression (typing/typemod.ml[1256,44658+25]..[1256,44658+48]) ghost
                                Pexp_construct "::" (typing/typemod.ml[1256,44658+25]..[1256,44658+48]) ghost
                                Some
                                  expression (typing/typemod.ml[1256,44658+25]..[1256,44658+48]) ghost
                                    Pexp_tuple
                                    [
                                      expression (typing/typemod.ml[1256,44658+25]..[1256,44658+47])
                                        Pexp_constant PConst_string("ocaml.remove_aliases",(typing/typemod.ml[1256,44658+26]..[1256,44658+46]),None)
                                      expression (typing/typemod.ml[1256,44658+47]..[1256,44658+48]) ghost
                                        Pexp_construct "[]" (typing/typemod.ml[1256,44658+47]..[1256,44658+48]) ghost
                                        None
                                    ]
                            ]
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[1256,44658+49]..[1256,44658+53])
                        Pexp_ident "attr" (typing/typemod.ml[1256,44658+49]..[1256,44658+53])
                  ]
            ]
            expression (typing/typemod.ml[1258,44717+2]..[1260,44763+18])
              Pexp_match
              expression (typing/typemod.ml[1258,44717+8]..[1258,44717+22])
                Pexp_ident "remove_aliases" (typing/typemod.ml[1258,44717+8]..[1258,44717+22])
              [
                <case>
                  pattern (typing/typemod.ml[1259,44745+4]..[1259,44745+8])
                    Ppat_construct "None" (typing/typemod.ml[1259,44745+4]..[1259,44745+8])
                    None
                  expression (typing/typemod.ml[1259,44745+12]..[1259,44745+17])
                    Pexp_construct "false" (typing/typemod.ml[1259,44745+12]..[1259,44745+17])
                    None
                <case>
                  pattern (typing/typemod.ml[1260,44763+4]..[1260,44763+10])
                    Ppat_construct "Some" (typing/typemod.ml[1260,44763+4]..[1260,44763+8])
                    Some
                      []
                      pattern (typing/typemod.ml[1260,44763+9]..[1260,44763+10])
                        Ppat_any
                  expression (typing/typemod.ml[1260,44763+14]..[1260,44763+18])
                    Pexp_construct "true" (typing/typemod.ml[1260,44763+14]..[1260,44763+18])
                    None
              ]
    ]
  structure_item (typing/typemod.ml[1264,44835+0]..[1266,44935+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[1264,44835+4]..[1264,44835+28])
          Ppat_var "transl_modtype_longident" (typing/typemod.ml[1264,44835+4]..[1264,44835+28])
        expression (typing/typemod.ml[1264,44835+29]..[1266,44935+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1264,44835+29]..[1264,44835+32])
            Ppat_var "loc" (typing/typemod.ml[1264,44835+29]..[1264,44835+32])
          expression (typing/typemod.ml[1264,44835+33]..[1266,44935+6]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1264,44835+33]..[1264,44835+36])
              Ppat_var "env" (typing/typemod.ml[1264,44835+33]..[1264,44835+36])
            expression (typing/typemod.ml[1264,44835+37]..[1266,44935+6]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[1264,44835+37]..[1264,44835+40])
                Ppat_var "lid" (typing/typemod.ml[1264,44835+37]..[1264,44835+40])
              expression (typing/typemod.ml[1265,44878+2]..[1266,44935+6])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/typemod.ml[1265,44878+6]..[1265,44878+19])
                      Ppat_tuple
                      [
                        pattern (typing/typemod.ml[1265,44878+7]..[1265,44878+11])
                          Ppat_var "path" (typing/typemod.ml[1265,44878+7]..[1265,44878+11])
                        pattern (typing/typemod.ml[1265,44878+13]..[1265,44878+18])
                          Ppat_var "_info" (typing/typemod.ml[1265,44878+13]..[1265,44878+18])
                      ]
                    expression (typing/typemod.ml[1265,44878+22]..[1265,44878+53])
                      Pexp_apply
                      expression (typing/typemod.ml[1265,44878+22]..[1265,44878+40])
                        Pexp_ident "Env.lookup_modtype" (typing/typemod.ml[1265,44878+22]..[1265,44878+40])
                      [
                        <arg>
                        Labelled "loc"
                          expression (typing/typemod.ml[1265,44878+42]..[1265,44878+45])
                            Pexp_ident "loc" (typing/typemod.ml[1265,44878+42]..[1265,44878+45])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1265,44878+46]..[1265,44878+49])
                            Pexp_ident "lid" (typing/typemod.ml[1265,44878+46]..[1265,44878+49])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1265,44878+50]..[1265,44878+53])
                            Pexp_ident "env" (typing/typemod.ml[1265,44878+50]..[1265,44878+53])
                      ]
                ]
                expression (typing/typemod.ml[1266,44935+2]..[1266,44935+6])
                  Pexp_ident "path" (typing/typemod.ml[1266,44935+2]..[1266,44935+6])
    ]
  structure_item (typing/typemod.ml[1268,44943+0]..[1269,44981+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[1268,44943+4]..[1268,44943+23])
          Ppat_var "transl_module_alias" (typing/typemod.ml[1268,44943+4]..[1268,44943+23])
        expression (typing/typemod.ml[1268,44943+24]..[1269,44981+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1268,44943+24]..[1268,44943+27])
            Ppat_var "loc" (typing/typemod.ml[1268,44943+24]..[1268,44943+27])
          expression (typing/typemod.ml[1268,44943+28]..[1269,44981+49]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1268,44943+28]..[1268,44943+31])
              Ppat_var "env" (typing/typemod.ml[1268,44943+28]..[1268,44943+31])
            expression (typing/typemod.ml[1268,44943+32]..[1269,44981+49]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[1268,44943+32]..[1268,44943+35])
                Ppat_var "lid" (typing/typemod.ml[1268,44943+32]..[1268,44943+35])
              expression (typing/typemod.ml[1269,44981+2]..[1269,44981+49])
                Pexp_apply
                expression (typing/typemod.ml[1269,44981+2]..[1269,44981+24])
                  Pexp_ident "Env.lookup_module_path" (typing/typemod.ml[1269,44981+2]..[1269,44981+24])
                [
                  <arg>
                  Labelled "load"
                    expression (typing/typemod.ml[1269,44981+31]..[1269,44981+36])
                      Pexp_construct "false" (typing/typemod.ml[1269,44981+31]..[1269,44981+36])
                      None
                  <arg>
                  Labelled "loc"
                    expression (typing/typemod.ml[1269,44981+38]..[1269,44981+41])
                      Pexp_ident "loc" (typing/typemod.ml[1269,44981+38]..[1269,44981+41])
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[1269,44981+42]..[1269,44981+45])
                      Pexp_ident "lid" (typing/typemod.ml[1269,44981+42]..[1269,44981+45])
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[1269,44981+46]..[1269,44981+49])
                      Pexp_ident "env" (typing/typemod.ml[1269,44981+46]..[1269,44981+49])
                ]
    ]
  structure_item (typing/typemod.ml[1271,45032+0]..[1280,45263+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[1271,45032+4]..[1271,45032+9])
          Ppat_var "mkmty" (typing/typemod.ml[1271,45032+4]..[1271,45032+9])
        expression (typing/typemod.ml[1271,45032+10]..[1280,45263+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1271,45032+10]..[1271,45032+14])
            Ppat_var "desc" (typing/typemod.ml[1271,45032+10]..[1271,45032+14])
          expression (typing/typemod.ml[1271,45032+15]..[1280,45263+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1271,45032+15]..[1271,45032+18])
              Ppat_var "typ" (typing/typemod.ml[1271,45032+15]..[1271,45032+18])
            expression (typing/typemod.ml[1271,45032+19]..[1280,45263+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[1271,45032+19]..[1271,45032+22])
                Ppat_var "env" (typing/typemod.ml[1271,45032+19]..[1271,45032+22])
              expression (typing/typemod.ml[1271,45032+23]..[1280,45263+5]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[1271,45032+23]..[1271,45032+26])
                  Ppat_var "loc" (typing/typemod.ml[1271,45032+23]..[1271,45032+26])
                expression (typing/typemod.ml[1271,45032+27]..[1280,45263+5]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[1271,45032+27]..[1271,45032+32])
                    Ppat_var "attrs" (typing/typemod.ml[1271,45032+27]..[1271,45032+32])
                  expression (typing/typemod.ml[1272,45067+2]..[1280,45263+5])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[1272,45067+6]..[1272,45067+9])
                          Ppat_var "mty" (typing/typemod.ml[1272,45067+6]..[1272,45067+9])
                        expression (typing/typemod.ml[1272,45067+12]..[1278,45188+5])
                          Pexp_record
                          [
                            "mty_desc" (typing/typemod.ml[1273,45081+4]..[1273,45081+12])
                              expression (typing/typemod.ml[1273,45081+15]..[1273,45081+19])
                                Pexp_ident "desc" (typing/typemod.ml[1273,45081+15]..[1273,45081+19])
                            "mty_type" (typing/typemod.ml[1274,45102+4]..[1274,45102+12])
                              expression (typing/typemod.ml[1274,45102+15]..[1274,45102+18])
                                Pexp_ident "typ" (typing/typemod.ml[1274,45102+15]..[1274,45102+18])
                            "mty_loc" (typing/typemod.ml[1275,45122+4]..[1275,45122+11])
                              expression (typing/typemod.ml[1275,45122+14]..[1275,45122+17])
                                Pexp_ident "loc" (typing/typemod.ml[1275,45122+14]..[1275,45122+17])
                            "mty_env" (typing/typemod.ml[1276,45141+4]..[1276,45141+11])
                              expression (typing/typemod.ml[1276,45141+14]..[1276,45141+17])
                                Pexp_ident "env" (typing/typemod.ml[1276,45141+14]..[1276,45141+17])
                            "mty_attributes" (typing/typemod.ml[1277,45160+4]..[1277,45160+18])
                              expression (typing/typemod.ml[1277,45160+21]..[1277,45160+26])
                                Pexp_ident "attrs" (typing/typemod.ml[1277,45160+21]..[1277,45160+26])
                          ]
                          None
                    ]
                    expression (typing/typemod.ml[1279,45197+2]..[1280,45263+5])
                      Pexp_sequence
                      expression (typing/typemod.ml[1279,45197+2]..[1279,45197+64])
                        Pexp_apply
                        expression (typing/typemod.ml[1279,45197+2]..[1279,45197+27])
                          Pexp_ident "Cmt_format.add_saved_type" (typing/typemod.ml[1279,45197+2]..[1279,45197+27])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1279,45197+28]..[1279,45197+64])
                              Pexp_construct "Cmt_format.Partial_module_type" (typing/typemod.ml[1279,45197+29]..[1279,45197+59])
                              Some
                                expression (typing/typemod.ml[1279,45197+60]..[1279,45197+63])
                                  Pexp_ident "mty" (typing/typemod.ml[1279,45197+60]..[1279,45197+63])
                        ]
                      expression (typing/typemod.ml[1280,45263+2]..[1280,45263+5])
                        Pexp_ident "mty" (typing/typemod.ml[1280,45263+2]..[1280,45263+5])
    ]
  structure_item (typing/typemod.ml[1282,45270+0]..[1285,45427+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[1282,45270+4]..[1282,45270+9])
          Ppat_var "mksig" (typing/typemod.ml[1282,45270+4]..[1282,45270+9])
        expression (typing/typemod.ml[1282,45270+10]..[1285,45427+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1282,45270+10]..[1282,45270+14])
            Ppat_var "desc" (typing/typemod.ml[1282,45270+10]..[1282,45270+14])
          expression (typing/typemod.ml[1282,45270+15]..[1285,45427+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1282,45270+15]..[1282,45270+18])
              Ppat_var "env" (typing/typemod.ml[1282,45270+15]..[1282,45270+18])
            expression (typing/typemod.ml[1282,45270+19]..[1285,45427+4]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[1282,45270+19]..[1282,45270+22])
                Ppat_var "loc" (typing/typemod.ml[1282,45270+19]..[1282,45270+22])
              expression (typing/typemod.ml[1283,45295+2]..[1285,45427+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/typemod.ml[1283,45295+6]..[1283,45295+8])
                      Ppat_var "sg" (typing/typemod.ml[1283,45295+6]..[1283,45295+8])
                    expression (typing/typemod.ml[1283,45295+11]..[1283,45295+60])
                      Pexp_record
                      [
                        "sig_desc" (typing/typemod.ml[1283,45295+13]..[1283,45295+21])
                          expression (typing/typemod.ml[1283,45295+24]..[1283,45295+28])
                            Pexp_ident "desc" (typing/typemod.ml[1283,45295+24]..[1283,45295+28])
                        "sig_loc" (typing/typemod.ml[1283,45295+30]..[1283,45295+37])
                          expression (typing/typemod.ml[1283,45295+40]..[1283,45295+43])
                            Pexp_ident "loc" (typing/typemod.ml[1283,45295+40]..[1283,45295+43])
                        "sig_env" (typing/typemod.ml[1283,45295+45]..[1283,45295+52])
                          expression (typing/typemod.ml[1283,45295+55]..[1283,45295+58])
                            Pexp_ident "env" (typing/typemod.ml[1283,45295+55]..[1283,45295+58])
                      ]
                      None
                ]
                expression (typing/typemod.ml[1284,45359+2]..[1285,45427+4])
                  Pexp_sequence
                  expression (typing/typemod.ml[1284,45359+2]..[1284,45359+66])
                    Pexp_apply
                    expression (typing/typemod.ml[1284,45359+2]..[1284,45359+27])
                      Pexp_ident "Cmt_format.add_saved_type" (typing/typemod.ml[1284,45359+2]..[1284,45359+27])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[1284,45359+28]..[1284,45359+66])
                          Pexp_construct "Cmt_format.Partial_signature_item" (typing/typemod.ml[1284,45359+29]..[1284,45359+62])
                          Some
                            expression (typing/typemod.ml[1284,45359+63]..[1284,45359+65])
                              Pexp_ident "sg" (typing/typemod.ml[1284,45359+63]..[1284,45359+65])
                    ]
                  expression (typing/typemod.ml[1285,45427+2]..[1285,45427+4])
                    Pexp_ident "sg" (typing/typemod.ml[1285,45427+2]..[1285,45427+4])
    ]
  structure_item (typing/typemod.ml[1289,45499+0]..[1808,65760+14])
    Pstr_value Rec
    [
      <def>
        pattern (typing/typemod.ml[1289,45499+8]..[1289,45499+22])
          Ppat_var "transl_modtype" (typing/typemod.ml[1289,45499+8]..[1289,45499+22])
        expression (typing/typemod.ml[1289,45499+23]..[1291,45589+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1289,45499+23]..[1289,45499+26])
            Ppat_var "env" (typing/typemod.ml[1289,45499+23]..[1289,45499+26])
          expression (typing/typemod.ml[1289,45499+27]..[1291,45589+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1289,45499+27]..[1289,45499+31])
              Ppat_var "smty" (typing/typemod.ml[1289,45499+27]..[1289,45499+31])
            expression (typing/typemod.ml[1290,45533+2]..[1291,45589+43])
              Pexp_apply
              expression (typing/typemod.ml[1290,45533+2]..[1290,45533+34])
                Pexp_ident "Builtin_attributes.warning_scope" (typing/typemod.ml[1290,45533+2]..[1290,45533+34])
              [
                <arg>
                Nolabel
                  expression (typing/typemod.ml[1290,45533+35]..[1290,45533+55])
                    Pexp_field
                    expression (typing/typemod.ml[1290,45533+35]..[1290,45533+39])
                      Pexp_ident "smty" (typing/typemod.ml[1290,45533+35]..[1290,45533+39])
                    "pmty_attributes" (typing/typemod.ml[1290,45533+40]..[1290,45533+55])
                <arg>
                Nolabel
                  expression (typing/typemod.ml[1291,45589+4]..[1291,45589+43])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[1291,45589+9]..[1291,45589+11])
                      Ppat_construct "()" (typing/typemod.ml[1291,45589+9]..[1291,45589+11])
                      None
                    expression (typing/typemod.ml[1291,45589+15]..[1291,45589+42])
                      Pexp_apply
                      expression (typing/typemod.ml[1291,45589+15]..[1291,45589+33])
                        Pexp_ident "transl_modtype_aux" (typing/typemod.ml[1291,45589+15]..[1291,45589+33])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1291,45589+34]..[1291,45589+37])
                            Pexp_ident "env" (typing/typemod.ml[1291,45589+34]..[1291,45589+37])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1291,45589+38]..[1291,45589+42])
                            Pexp_ident "smty" (typing/typemod.ml[1291,45589+38]..[1291,45589+42])
                      ]
              ]
      <def>
        pattern (typing/typemod.ml[1293,45634+4]..[1293,45634+30])
          Ppat_var "transl_modtype_functor_arg" (typing/typemod.ml[1293,45634+4]..[1293,45634+30])
        expression (typing/typemod.ml[1293,45634+31]..[1295,45715+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1293,45634+31]..[1293,45634+34])
            Ppat_var "env" (typing/typemod.ml[1293,45634+31]..[1293,45634+34])
          expression (typing/typemod.ml[1293,45634+35]..[1295,45715+69]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1293,45634+35]..[1293,45634+39])
              Ppat_var "sarg" (typing/typemod.ml[1293,45634+35]..[1293,45634+39])
            expression (typing/typemod.ml[1294,45676+2]..[1295,45715+69])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1294,45676+6]..[1294,45676+9])
                    Ppat_var "mty" (typing/typemod.ml[1294,45676+6]..[1294,45676+9])
                  expression (typing/typemod.ml[1294,45676+12]..[1294,45676+35])
                    Pexp_apply
                    expression (typing/typemod.ml[1294,45676+12]..[1294,45676+26])
                      Pexp_ident "transl_modtype" (typing/typemod.ml[1294,45676+12]..[1294,45676+26])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[1294,45676+27]..[1294,45676+30])
                          Pexp_ident "env" (typing/typemod.ml[1294,45676+27]..[1294,45676+30])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[1294,45676+31]..[1294,45676+35])
                          Pexp_ident "sarg" (typing/typemod.ml[1294,45676+31]..[1294,45676+35])
                    ]
              ]
              expression (typing/typemod.ml[1295,45715+2]..[1295,45715+69])
                Pexp_record
                [
                  "mty_type" (typing/typemod.ml[1295,45715+12]..[1295,45715+20])
                    expression (typing/typemod.ml[1295,45715+23]..[1295,45715+68])
                      Pexp_apply
                      expression (typing/typemod.ml[1295,45715+23]..[1295,45715+51])
                        Pexp_ident "Mtype.scrape_for_functor_arg" (typing/typemod.ml[1295,45715+23]..[1295,45715+51])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1295,45715+52]..[1295,45715+55])
                            Pexp_ident "env" (typing/typemod.ml[1295,45715+52]..[1295,45715+55])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1295,45715+56]..[1295,45715+68])
                            Pexp_field
                            expression (typing/typemod.ml[1295,45715+56]..[1295,45715+59])
                              Pexp_ident "mty" (typing/typemod.ml[1295,45715+56]..[1295,45715+59])
                            "mty_type" (typing/typemod.ml[1295,45715+60]..[1295,45715+68])
                      ]
                ]
                Some
                  expression (typing/typemod.ml[1295,45715+3]..[1295,45715+6])
                    Pexp_ident "mty" (typing/typemod.ml[1295,45715+3]..[1295,45715+6])
      <def>
        pattern (typing/typemod.ml[1297,45786+4]..[1297,45786+22])
          Ppat_var "transl_modtype_aux" (typing/typemod.ml[1297,45786+4]..[1297,45786+22])
        expression (typing/typemod.ml[1297,45786+23]..[1358,48285+71]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1297,45786+23]..[1297,45786+26])
            Ppat_var "env" (typing/typemod.ml[1297,45786+23]..[1297,45786+26])
          expression (typing/typemod.ml[1297,45786+27]..[1358,48285+71]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1297,45786+27]..[1297,45786+31])
              Ppat_var "smty" (typing/typemod.ml[1297,45786+27]..[1297,45786+31])
            expression (typing/typemod.ml[1298,45820+2]..[1358,48285+71])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1298,45820+6]..[1298,45820+9])
                    Ppat_var "loc" (typing/typemod.ml[1298,45820+6]..[1298,45820+9])
                  expression (typing/typemod.ml[1298,45820+12]..[1298,45820+25])
                    Pexp_field
                    expression (typing/typemod.ml[1298,45820+12]..[1298,45820+16])
                      Pexp_ident "smty" (typing/typemod.ml[1298,45820+12]..[1298,45820+16])
                    "pmty_loc" (typing/typemod.ml[1298,45820+17]..[1298,45820+25])
              ]
              expression (typing/typemod.ml[1299,45849+2]..[1358,48285+71])
                Pexp_match
                expression (typing/typemod.ml[1299,45849+8]..[1299,45849+22])
                  Pexp_field
                  expression (typing/typemod.ml[1299,45849+8]..[1299,45849+12])
                    Pexp_ident "smty" (typing/typemod.ml[1299,45849+8]..[1299,45849+12])
                  "pmty_desc" (typing/typemod.ml[1299,45849+13]..[1299,45849+22])
                [
                  <case>
                    pattern (typing/typemod.ml[1300,45877+4]..[1300,45877+18])
                      Ppat_construct "Pmty_ident" (typing/typemod.ml[1300,45877+4]..[1300,45877+14])
                      Some
                        []
                        pattern (typing/typemod.ml[1300,45877+15]..[1300,45877+18])
                          Ppat_var "lid" (typing/typemod.ml[1300,45877+15]..[1300,45877+18])
                    expression (typing/typemod.ml[1301,45899+6]..[1303,46022+28])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[1301,45899+10]..[1301,45899+14])
                            Ppat_var "path" (typing/typemod.ml[1301,45899+10]..[1301,45899+14])
                          expression (typing/typemod.ml[1301,45899+17]..[1301,45899+57])
                            Pexp_apply
                            expression (typing/typemod.ml[1301,45899+17]..[1301,45899+41])
                              Pexp_ident "transl_modtype_longident" (typing/typemod.ml[1301,45899+17]..[1301,45899+41])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1301,45899+42]..[1301,45899+45])
                                  Pexp_ident "loc" (typing/typemod.ml[1301,45899+42]..[1301,45899+45])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1301,45899+46]..[1301,45899+49])
                                  Pexp_ident "env" (typing/typemod.ml[1301,45899+46]..[1301,45899+49])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1301,45899+50]..[1301,45899+57])
                                  Pexp_field
                                  expression (typing/typemod.ml[1301,45899+50]..[1301,45899+53])
                                    Pexp_ident "lid" (typing/typemod.ml[1301,45899+50]..[1301,45899+53])
                                  "txt" (typing/typemod.ml[1301,45899+54]..[1301,45899+57])
                            ]
                      ]
                      expression (typing/typemod.ml[1302,45960+6]..[1303,46022+28])
                        Pexp_apply
                        expression (typing/typemod.ml[1302,45960+6]..[1302,45960+11])
                          Pexp_ident "mkmty" (typing/typemod.ml[1302,45960+6]..[1302,45960+11])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1302,45960+12]..[1302,45960+36])
                              Pexp_construct "Tmty_ident" (typing/typemod.ml[1302,45960+13]..[1302,45960+23])
                              Some
                                expression (typing/typemod.ml[1302,45960+24]..[1302,45960+35])
                                  Pexp_tuple
                                  [
                                    expression (typing/typemod.ml[1302,45960+25]..[1302,45960+29])
                                      Pexp_ident "path" (typing/typemod.ml[1302,45960+25]..[1302,45960+29])
                                    expression (typing/typemod.ml[1302,45960+31]..[1302,45960+34])
                                      Pexp_ident "lid" (typing/typemod.ml[1302,45960+31]..[1302,45960+34])
                                  ]
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1302,45960+37]..[1302,45960+53])
                              Pexp_construct "Mty_ident" (typing/typemod.ml[1302,45960+38]..[1302,45960+47])
                              Some
                                expression (typing/typemod.ml[1302,45960+48]..[1302,45960+52])
                                  Pexp_ident "path" (typing/typemod.ml[1302,45960+48]..[1302,45960+52])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1302,45960+54]..[1302,45960+57])
                              Pexp_ident "env" (typing/typemod.ml[1302,45960+54]..[1302,45960+57])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1302,45960+58]..[1302,45960+61])
                              Pexp_ident "loc" (typing/typemod.ml[1302,45960+58]..[1302,45960+61])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1303,46022+8]..[1303,46022+28])
                              Pexp_field
                              expression (typing/typemod.ml[1303,46022+8]..[1303,46022+12])
                                Pexp_ident "smty" (typing/typemod.ml[1303,46022+8]..[1303,46022+12])
                              "pmty_attributes" (typing/typemod.ml[1303,46022+13]..[1303,46022+28])
                        ]
                  <case>
                    pattern (typing/typemod.ml[1304,46051+4]..[1304,46051+18])
                      Ppat_construct "Pmty_alias" (typing/typemod.ml[1304,46051+4]..[1304,46051+14])
                      Some
                        []
                        pattern (typing/typemod.ml[1304,46051+15]..[1304,46051+18])
                          Ppat_var "lid" (typing/typemod.ml[1304,46051+15]..[1304,46051+18])
                    expression (typing/typemod.ml[1305,46073+6]..[1307,46191+28])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[1305,46073+10]..[1305,46073+14])
                            Ppat_var "path" (typing/typemod.ml[1305,46073+10]..[1305,46073+14])
                          expression (typing/typemod.ml[1305,46073+17]..[1305,46073+52])
                            Pexp_apply
                            expression (typing/typemod.ml[1305,46073+17]..[1305,46073+36])
                              Pexp_ident "transl_module_alias" (typing/typemod.ml[1305,46073+17]..[1305,46073+36])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1305,46073+37]..[1305,46073+40])
                                  Pexp_ident "loc" (typing/typemod.ml[1305,46073+37]..[1305,46073+40])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1305,46073+41]..[1305,46073+44])
                                  Pexp_ident "env" (typing/typemod.ml[1305,46073+41]..[1305,46073+44])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1305,46073+45]..[1305,46073+52])
                                  Pexp_field
                                  expression (typing/typemod.ml[1305,46073+45]..[1305,46073+48])
                                    Pexp_ident "lid" (typing/typemod.ml[1305,46073+45]..[1305,46073+48])
                                  "txt" (typing/typemod.ml[1305,46073+49]..[1305,46073+52])
                            ]
                      ]
                      expression (typing/typemod.ml[1306,46129+6]..[1307,46191+28])
                        Pexp_apply
                        expression (typing/typemod.ml[1306,46129+6]..[1306,46129+11])
                          Pexp_ident "mkmty" (typing/typemod.ml[1306,46129+6]..[1306,46129+11])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1306,46129+12]..[1306,46129+36])
                              Pexp_construct "Tmty_alias" (typing/typemod.ml[1306,46129+13]..[1306,46129+23])
                              Some
                                expression (typing/typemod.ml[1306,46129+24]..[1306,46129+35])
                                  Pexp_tuple
                                  [
                                    expression (typing/typemod.ml[1306,46129+25]..[1306,46129+29])
                                      Pexp_ident "path" (typing/typemod.ml[1306,46129+25]..[1306,46129+29])
                                    expression (typing/typemod.ml[1306,46129+31]..[1306,46129+34])
                                      Pexp_ident "lid" (typing/typemod.ml[1306,46129+31]..[1306,46129+34])
                                  ]
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1306,46129+37]..[1306,46129+53])
                              Pexp_construct "Mty_alias" (typing/typemod.ml[1306,46129+38]..[1306,46129+47])
                              Some
                                expression (typing/typemod.ml[1306,46129+48]..[1306,46129+52])
                                  Pexp_ident "path" (typing/typemod.ml[1306,46129+48]..[1306,46129+52])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1306,46129+54]..[1306,46129+57])
                              Pexp_ident "env" (typing/typemod.ml[1306,46129+54]..[1306,46129+57])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1306,46129+58]..[1306,46129+61])
                              Pexp_ident "loc" (typing/typemod.ml[1306,46129+58]..[1306,46129+61])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1307,46191+8]..[1307,46191+28])
                              Pexp_field
                              expression (typing/typemod.ml[1307,46191+8]..[1307,46191+12])
                                Pexp_ident "smty" (typing/typemod.ml[1307,46191+8]..[1307,46191+12])
                              "pmty_attributes" (typing/typemod.ml[1307,46191+13]..[1307,46191+28])
                        ]
                  <case>
                    pattern (typing/typemod.ml[1308,46220+4]..[1308,46220+22])
                      Ppat_construct "Pmty_signature" (typing/typemod.ml[1308,46220+4]..[1308,46220+18])
                      Some
                        []
                        pattern (typing/typemod.ml[1308,46220+19]..[1308,46220+22])
                          Ppat_var "ssg" (typing/typemod.ml[1308,46220+19]..[1308,46220+22])
                    expression (typing/typemod.ml[1309,46246+6]..[1311,46357+28])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[1309,46246+10]..[1309,46246+12])
                            Ppat_var "sg" (typing/typemod.ml[1309,46246+10]..[1309,46246+12])
                          expression (typing/typemod.ml[1309,46246+15]..[1309,46246+39])
                            Pexp_apply
                            expression (typing/typemod.ml[1309,46246+15]..[1309,46246+31])
                              Pexp_ident "transl_signature" (typing/typemod.ml[1309,46246+15]..[1309,46246+31])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1309,46246+32]..[1309,46246+35])
                                  Pexp_ident "env" (typing/typemod.ml[1309,46246+32]..[1309,46246+35])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1309,46246+36]..[1309,46246+39])
                                  Pexp_ident "ssg" (typing/typemod.ml[1309,46246+36]..[1309,46246+39])
                            ]
                      ]
                      expression (typing/typemod.ml[1310,46289+6]..[1311,46357+28])
                        Pexp_apply
                        expression (typing/typemod.ml[1310,46289+6]..[1310,46289+11])
                          Pexp_ident "mkmty" (typing/typemod.ml[1310,46289+6]..[1310,46289+11])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1310,46289+12]..[1310,46289+31])
                              Pexp_construct "Tmty_signature" (typing/typemod.ml[1310,46289+13]..[1310,46289+27])
                              Some
                                expression (typing/typemod.ml[1310,46289+28]..[1310,46289+30])
                                  Pexp_ident "sg" (typing/typemod.ml[1310,46289+28]..[1310,46289+30])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1310,46289+32]..[1310,46289+59])
                              Pexp_construct "Mty_signature" (typing/typemod.ml[1310,46289+33]..[1310,46289+46])
                              Some
                                expression (typing/typemod.ml[1310,46289+47]..[1310,46289+58])
                                  Pexp_field
                                  expression (typing/typemod.ml[1310,46289+47]..[1310,46289+49])
                                    Pexp_ident "sg" (typing/typemod.ml[1310,46289+47]..[1310,46289+49])
                                  "sig_type" (typing/typemod.ml[1310,46289+50]..[1310,46289+58])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1310,46289+60]..[1310,46289+63])
                              Pexp_ident "env" (typing/typemod.ml[1310,46289+60]..[1310,46289+63])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1310,46289+64]..[1310,46289+67])
                              Pexp_ident "loc" (typing/typemod.ml[1310,46289+64]..[1310,46289+67])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1311,46357+8]..[1311,46357+28])
                              Pexp_field
                              expression (typing/typemod.ml[1311,46357+8]..[1311,46357+12])
                                Pexp_ident "smty" (typing/typemod.ml[1311,46357+8]..[1311,46357+12])
                              "pmty_attributes" (typing/typemod.ml[1311,46357+13]..[1311,46357+28])
                        ]
                  <case>
                    pattern (typing/typemod.ml[1312,46386+4]..[1312,46386+32])
                      Ppat_construct "Pmty_functor" (typing/typemod.ml[1312,46386+4]..[1312,46386+16])
                      Some
                        []
                        pattern (typing/typemod.ml[1312,46386+16]..[1312,46386+32])
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[1312,46386+17]..[1312,46386+25])
                              Ppat_var "sarg_opt" (typing/typemod.ml[1312,46386+17]..[1312,46386+25])
                            pattern (typing/typemod.ml[1312,46386+27]..[1312,46386+31])
                              Ppat_var "sres" (typing/typemod.ml[1312,46386+27]..[1312,46386+31])
                          ]
                    expression (typing/typemod.ml[1313,46422+6]..[1341,47472+28])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[1313,46422+10]..[1313,46422+31])
                            Ppat_tuple
                            [
                              pattern (typing/typemod.ml[1313,46422+10]..[1313,46422+15])
                                Ppat_var "t_arg" (typing/typemod.ml[1313,46422+10]..[1313,46422+15])
                              pattern (typing/typemod.ml[1313,46422+17]..[1313,46422+23])
                                Ppat_var "ty_arg" (typing/typemod.ml[1313,46422+17]..[1313,46422+23])
                              pattern (typing/typemod.ml[1313,46422+25]..[1313,46422+31])
                                Ppat_var "newenv" (typing/typemod.ml[1313,46422+25]..[1313,46422+31])
                            ]
                          expression (typing/typemod.ml[1314,46456+8]..[1336,47252+72])
                            Pexp_match
                            expression (typing/typemod.ml[1314,46456+14]..[1314,46456+22])
                              Pexp_ident "sarg_opt" (typing/typemod.ml[1314,46456+14]..[1314,46456+22])
                            [
                              <case>
                                pattern (typing/typemod.ml[1315,46484+10]..[1315,46484+14])
                                  Ppat_construct "Unit" (typing/typemod.ml[1315,46484+10]..[1315,46484+14])
                                  None
                                expression (typing/typemod.ml[1315,46484+18]..[1315,46484+39])
                                  Pexp_tuple
                                  [
                                    expression (typing/typemod.ml[1315,46484+18]..[1315,46484+22])
                                      Pexp_construct "Unit" (typing/typemod.ml[1315,46484+18]..[1315,46484+22])
                                      None
                                    expression (typing/typemod.ml[1315,46484+24]..[1315,46484+34])
                                      Pexp_construct "Types.Unit" (typing/typemod.ml[1315,46484+24]..[1315,46484+34])
                                      None
                                    expression (typing/typemod.ml[1315,46484+36]..[1315,46484+39])
                                      Pexp_ident "env" (typing/typemod.ml[1315,46484+36]..[1315,46484+39])
                                  ]
                              <case>
                                pattern (typing/typemod.ml[1316,46524+10]..[1316,46524+29])
                                  Ppat_construct "Named" (typing/typemod.ml[1316,46524+10]..[1316,46524+15])
                                  Some
                                    []
                                    pattern (typing/typemod.ml[1316,46524+16]..[1316,46524+29])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typemod.ml[1316,46524+17]..[1316,46524+22])
                                          Ppat_var "param" (typing/typemod.ml[1316,46524+17]..[1316,46524+22])
                                        pattern (typing/typemod.ml[1316,46524+24]..[1316,46524+28])
                                          Ppat_var "sarg" (typing/typemod.ml[1316,46524+24]..[1316,46524+28])
                                      ]
                                expression (typing/typemod.ml[1317,46557+10]..[1336,47252+72])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typemod.ml[1317,46557+14]..[1317,46557+17])
                                        Ppat_var "arg" (typing/typemod.ml[1317,46557+14]..[1317,46557+17])
                                      expression (typing/typemod.ml[1317,46557+20]..[1317,46557+55])
                                        Pexp_apply
                                        expression (typing/typemod.ml[1317,46557+20]..[1317,46557+46])
                                          Pexp_ident "transl_modtype_functor_arg" (typing/typemod.ml[1317,46557+20]..[1317,46557+46])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1317,46557+47]..[1317,46557+50])
                                              Pexp_ident "env" (typing/typemod.ml[1317,46557+47]..[1317,46557+50])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1317,46557+51]..[1317,46557+55])
                                              Pexp_ident "sarg" (typing/typemod.ml[1317,46557+51]..[1317,46557+55])
                                        ]
                                  ]
                                  expression (typing/typemod.ml[1318,46616+10]..[1336,47252+72])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typemod.ml[1318,46616+14]..[1318,46616+26])
                                          Ppat_tuple
                                          [
                                            pattern (typing/typemod.ml[1318,46616+15]..[1318,46616+17])
                                              Ppat_var "id" (typing/typemod.ml[1318,46616+15]..[1318,46616+17])
                                            pattern (typing/typemod.ml[1318,46616+19]..[1318,46616+25])
                                              Ppat_var "newenv" (typing/typemod.ml[1318,46616+19]..[1318,46616+25])
                                          ]
                                        expression (typing/typemod.ml[1319,46645+12]..[1334,47209+29])
                                          Pexp_match
                                          expression (typing/typemod.ml[1319,46645+18]..[1319,46645+27])
                                            Pexp_field
                                            expression (typing/typemod.ml[1319,46645+18]..[1319,46645+23])
                                              Pexp_ident "param" (typing/typemod.ml[1319,46645+18]..[1319,46645+23])
                                            "txt" (typing/typemod.ml[1319,46645+24]..[1319,46645+27])
                                          [
                                            <case>
                                              pattern (typing/typemod.ml[1320,46678+14]..[1320,46678+18])
                                                Ppat_construct "None" (typing/typemod.ml[1320,46678+14]..[1320,46678+18])
                                                None
                                              expression (typing/typemod.ml[1320,46678+22]..[1320,46678+31])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typemod.ml[1320,46678+22]..[1320,46678+26])
                                                    Pexp_construct "None" (typing/typemod.ml[1320,46678+22]..[1320,46678+26])
                                                    None
                                                  expression (typing/typemod.ml[1320,46678+28]..[1320,46678+31])
                                                    Pexp_ident "env" (typing/typemod.ml[1320,46678+28]..[1320,46678+31])
                                                ]
                                            <case>
                                              pattern (typing/typemod.ml[1321,46710+14]..[1321,46710+23])
                                                Ppat_construct "Some" (typing/typemod.ml[1321,46710+14]..[1321,46710+18])
                                                Some
                                                  []
                                                  pattern (typing/typemod.ml[1321,46710+19]..[1321,46710+23])
                                                    Ppat_var "name" (typing/typemod.ml[1321,46710+19]..[1321,46710+23])
                                              expression (typing/typemod.ml[1322,46737+14]..[1334,47209+29])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typemod.ml[1322,46737+18]..[1322,46737+23])
                                                      Ppat_var "scope" (typing/typemod.ml[1322,46737+18]..[1322,46737+23])
                                                    expression (typing/typemod.ml[1322,46737+26]..[1322,46737+47])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[1322,46737+26]..[1322,46737+44])
                                                        Pexp_ident "Ctype.create_scope" (typing/typemod.ml[1322,46737+26]..[1322,46737+44])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1322,46737+45]..[1322,46737+47])
                                                            Pexp_construct "()" (typing/typemod.ml[1322,46737+45]..[1322,46737+47])
                                                            None
                                                      ]
                                                ]
                                                expression (typing/typemod.ml[1323,46788+14]..[1334,47209+29])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typemod.ml[1323,46788+18]..[1323,46788+28])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typemod.ml[1323,46788+18]..[1323,46788+20])
                                                            Ppat_var "id" (typing/typemod.ml[1323,46788+18]..[1323,46788+20])
                                                          pattern (typing/typemod.ml[1323,46788+22]..[1323,46788+28])
                                                            Ppat_var "newenv" (typing/typemod.ml[1323,46788+22]..[1323,46788+28])
                                                        ]
                                                      expression (typing/typemod.ml[1324,46819+16]..[1332,47163+28])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (typing/typemod.ml[1324,46819+20]..[1324,46819+26])
                                                              Ppat_var "arg_md" (typing/typemod.ml[1324,46819+20]..[1324,46819+26])
                                                            expression (typing/typemod.ml[1325,46848+18]..[1329,47046+19])
                                                              Pexp_record
                                                              [
                                                                "md_type" (typing/typemod.ml[1325,46848+20]..[1325,46848+27])
                                                                  expression (typing/typemod.ml[1325,46848+30]..[1325,46848+42])
                                                                    Pexp_field
                                                                    expression (typing/typemod.ml[1325,46848+30]..[1325,46848+33])
                                                                      Pexp_ident "arg" (typing/typemod.ml[1325,46848+30]..[1325,46848+33])
                                                                    "mty_type" (typing/typemod.ml[1325,46848+34]..[1325,46848+42])
                                                                "md_attributes" (typing/typemod.ml[1326,46892+20]..[1326,46892+33])
                                                                  expression (typing/typemod.ml[1326,46892+36]..[1326,46892+38])
                                                                    Pexp_construct "[]" (typing/typemod.ml[1326,46892+36]..[1326,46892+38])
                                                                    None
                                                                "md_loc" (typing/typemod.ml[1327,46932+20]..[1327,46932+26])
                                                                  expression (typing/typemod.ml[1327,46932+29]..[1327,46932+38])
                                                                    Pexp_field
                                                                    expression (typing/typemod.ml[1327,46932+29]..[1327,46932+34])
                                                                      Pexp_ident "param" (typing/typemod.ml[1327,46932+29]..[1327,46932+34])
                                                                    "loc" (typing/typemod.ml[1327,46932+35]..[1327,46932+38])
                                                                "md_uid" (typing/typemod.ml[1328,46972+20]..[1328,46972+26])
                                                                  expression (typing/typemod.ml[1328,46972+29]..[1328,46972+72])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[1328,46972+29]..[1328,46972+35])
                                                                      Pexp_ident "Uid.mk" (typing/typemod.ml[1328,46972+29]..[1328,46972+35])
                                                                    [
                                                                      <arg>
                                                                      Labelled "current_unit"
expression (typing/typemod.ml[1328,46972+50]..[1328,46972+72])
  Pexp_apply
  expression (typing/typemod.ml[1328,46972+51]..[1328,46972+68])
    Pexp_ident "Env.get_unit_name" (typing/typemod.ml[1328,46972+51]..[1328,46972+68])
  [
    <arg>
    Nolabel
      expression (typing/typemod.ml[1328,46972+69]..[1328,46972+71])
        Pexp_construct "()" (typing/typemod.ml[1328,46972+69]..[1328,46972+71])
        None
  ]
                                                                    ]
                                                              ]
                                                              None
                                                        ]
                                                        expression (typing/typemod.ml[1331,47085+16]..[1332,47163+28])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[1331,47085+16]..[1331,47085+44])
                                                            Pexp_ident "Env.enter_module_declaration" (typing/typemod.ml[1331,47085+16]..[1331,47085+44])
                                                          [
                                                            <arg>
                                                            Labelled "scope"
                                                              expression (typing/typemod.ml[1331,47085+46]..[1331,47085+51])
                                                                Pexp_ident "scope" (typing/typemod.ml[1331,47085+46]..[1331,47085+51])
                                                            <arg>
                                                            Labelled "arg"
                                                              expression (typing/typemod.ml[1331,47085+57]..[1331,47085+61])
                                                                Pexp_construct "true" (typing/typemod.ml[1331,47085+57]..[1331,47085+61])
                                                                None
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1331,47085+62]..[1331,47085+66])
                                                                Pexp_ident "name" (typing/typemod.ml[1331,47085+62]..[1331,47085+66])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1331,47085+67]..[1331,47085+77])
                                                                Pexp_construct "Mp_present" (typing/typemod.ml[1331,47085+67]..[1331,47085+77])
                                                                None
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1332,47163+18]..[1332,47163+24])
                                                                Pexp_ident "arg_md" (typing/typemod.ml[1332,47163+18]..[1332,47163+24])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1332,47163+25]..[1332,47163+28])
                                                                Pexp_ident "env" (typing/typemod.ml[1332,47163+25]..[1332,47163+28])
                                                          ]
                                                  ]
                                                  expression (typing/typemod.ml[1334,47209+14]..[1334,47209+29])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[1334,47209+14]..[1334,47209+21])
                                                        Pexp_construct "Some" (typing/typemod.ml[1334,47209+14]..[1334,47209+18])
                                                        Some
                                                          expression (typing/typemod.ml[1334,47209+19]..[1334,47209+21])
                                                            Pexp_ident "id" (typing/typemod.ml[1334,47209+19]..[1334,47209+21])
                                                      expression (typing/typemod.ml[1334,47209+23]..[1334,47209+29])
                                                        Pexp_ident "newenv" (typing/typemod.ml[1334,47209+23]..[1334,47209+29])
                                                    ]
                                          ]
                                    ]
                                    expression (typing/typemod.ml[1336,47252+10]..[1336,47252+72])
                                      Pexp_tuple
                                      [
                                        expression (typing/typemod.ml[1336,47252+10]..[1336,47252+32])
                                          Pexp_construct "Named" (typing/typemod.ml[1336,47252+10]..[1336,47252+15])
                                          Some
                                            expression (typing/typemod.ml[1336,47252+16]..[1336,47252+32])
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[1336,47252+17]..[1336,47252+19])
                                                  Pexp_ident "id" (typing/typemod.ml[1336,47252+17]..[1336,47252+19])
                                                expression (typing/typemod.ml[1336,47252+21]..[1336,47252+26])
                                                  Pexp_ident "param" (typing/typemod.ml[1336,47252+21]..[1336,47252+26])
                                                expression (typing/typemod.ml[1336,47252+28]..[1336,47252+31])
                                                  Pexp_ident "arg" (typing/typemod.ml[1336,47252+28]..[1336,47252+31])
                                              ]
                                        expression (typing/typemod.ml[1336,47252+34]..[1336,47252+64])
                                          Pexp_construct "Types.Named" (typing/typemod.ml[1336,47252+34]..[1336,47252+45])
                                          Some
                                            expression (typing/typemod.ml[1336,47252+46]..[1336,47252+64])
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[1336,47252+47]..[1336,47252+49])
                                                  Pexp_ident "id" (typing/typemod.ml[1336,47252+47]..[1336,47252+49])
                                                expression (typing/typemod.ml[1336,47252+51]..[1336,47252+63])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[1336,47252+51]..[1336,47252+54])
                                                    Pexp_ident "arg" (typing/typemod.ml[1336,47252+51]..[1336,47252+54])
                                                  "mty_type" (typing/typemod.ml[1336,47252+55]..[1336,47252+63])
                                              ]
                                        expression (typing/typemod.ml[1336,47252+66]..[1336,47252+72])
                                          Pexp_ident "newenv" (typing/typemod.ml[1336,47252+66]..[1336,47252+72])
                                      ]
                            ]
                      ]
                      expression (typing/typemod.ml[1338,47334+6]..[1341,47472+28])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typemod.ml[1338,47334+10]..[1338,47334+13])
                              Ppat_var "res" (typing/typemod.ml[1338,47334+10]..[1338,47334+13])
                            expression (typing/typemod.ml[1338,47334+16]..[1338,47334+42])
                              Pexp_apply
                              expression (typing/typemod.ml[1338,47334+16]..[1338,47334+30])
                                Pexp_ident "transl_modtype" (typing/typemod.ml[1338,47334+16]..[1338,47334+30])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1338,47334+31]..[1338,47334+37])
                                    Pexp_ident "newenv" (typing/typemod.ml[1338,47334+31]..[1338,47334+37])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1338,47334+38]..[1338,47334+42])
                                    Pexp_ident "sres" (typing/typemod.ml[1338,47334+38]..[1338,47334+42])
                              ]
                        ]
                        expression (typing/typemod.ml[1339,47380+6]..[1341,47472+28])
                          Pexp_apply
                          expression (typing/typemod.ml[1339,47380+6]..[1339,47380+11])
                            Pexp_ident "mkmty" (typing/typemod.ml[1339,47380+6]..[1339,47380+11])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1339,47380+12]..[1339,47380+39])
                                Pexp_construct "Tmty_functor" (typing/typemod.ml[1339,47380+13]..[1339,47380+25])
                                Some
                                  expression (typing/typemod.ml[1339,47380+26]..[1339,47380+38])
                                    Pexp_tuple
                                    [
                                      expression (typing/typemod.ml[1339,47380+27]..[1339,47380+32])
                                        Pexp_ident "t_arg" (typing/typemod.ml[1339,47380+27]..[1339,47380+32])
                                      expression (typing/typemod.ml[1339,47380+34]..[1339,47380+37])
                                        Pexp_ident "res" (typing/typemod.ml[1339,47380+34]..[1339,47380+37])
                                    ]
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1340,47420+8]..[1340,47420+43])
                                Pexp_construct "Mty_functor" (typing/typemod.ml[1340,47420+9]..[1340,47420+20])
                                Some
                                  expression (typing/typemod.ml[1340,47420+20]..[1340,47420+42])
                                    Pexp_tuple
                                    [
                                      expression (typing/typemod.ml[1340,47420+21]..[1340,47420+27])
                                        Pexp_ident "ty_arg" (typing/typemod.ml[1340,47420+21]..[1340,47420+27])
                                      expression (typing/typemod.ml[1340,47420+29]..[1340,47420+41])
                                        Pexp_field
                                        expression (typing/typemod.ml[1340,47420+29]..[1340,47420+32])
                                          Pexp_ident "res" (typing/typemod.ml[1340,47420+29]..[1340,47420+32])
                                        "mty_type" (typing/typemod.ml[1340,47420+33]..[1340,47420+41])
                                    ]
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1340,47420+44]..[1340,47420+47])
                                Pexp_ident "env" (typing/typemod.ml[1340,47420+44]..[1340,47420+47])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1340,47420+48]..[1340,47420+51])
                                Pexp_ident "loc" (typing/typemod.ml[1340,47420+48]..[1340,47420+51])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1341,47472+8]..[1341,47472+28])
                                Pexp_field
                                expression (typing/typemod.ml[1341,47472+8]..[1341,47472+12])
                                  Pexp_ident "smty" (typing/typemod.ml[1341,47472+8]..[1341,47472+12])
                                "pmty_attributes" (typing/typemod.ml[1341,47472+13]..[1341,47472+28])
                          ]
                  <case>
                    pattern (typing/typemod.ml[1342,47501+4]..[1342,47501+33])
                      Ppat_construct "Pmty_with" (typing/typemod.ml[1342,47501+4]..[1342,47501+13])
                      Some
                        []
                        pattern (typing/typemod.ml[1342,47501+13]..[1342,47501+33])
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[1342,47501+14]..[1342,47501+19])
                              Ppat_var "sbody" (typing/typemod.ml[1342,47501+14]..[1342,47501+19])
                            pattern (typing/typemod.ml[1342,47501+21]..[1342,47501+32])
                              Ppat_var "constraints" (typing/typemod.ml[1342,47501+21]..[1342,47501+32])
                          ]
                    expression (typing/typemod.ml[1343,47538+6]..[1352,48037+28])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[1343,47538+10]..[1343,47538+14])
                            Ppat_var "body" (typing/typemod.ml[1343,47538+10]..[1343,47538+14])
                          expression (typing/typemod.ml[1343,47538+17]..[1343,47538+41])
                            Pexp_apply
                            expression (typing/typemod.ml[1343,47538+17]..[1343,47538+31])
                              Pexp_ident "transl_modtype" (typing/typemod.ml[1343,47538+17]..[1343,47538+31])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1343,47538+32]..[1343,47538+35])
                                  Pexp_ident "env" (typing/typemod.ml[1343,47538+32]..[1343,47538+35])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1343,47538+36]..[1343,47538+41])
                                  Pexp_ident "sbody" (typing/typemod.ml[1343,47538+36]..[1343,47538+41])
                            ]
                      ]
                      expression (typing/typemod.ml[1344,47583+6]..[1352,48037+28])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typemod.ml[1344,47583+10]..[1344,47583+17])
                              Ppat_var "init_sg" (typing/typemod.ml[1344,47583+10]..[1344,47583+17])
                            expression (typing/typemod.ml[1344,47583+20]..[1344,47583+64])
                              Pexp_apply
                              expression (typing/typemod.ml[1344,47583+20]..[1344,47583+31])
                                Pexp_ident "extract_sig" (typing/typemod.ml[1344,47583+20]..[1344,47583+31])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1344,47583+32]..[1344,47583+35])
                                    Pexp_ident "env" (typing/typemod.ml[1344,47583+32]..[1344,47583+35])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1344,47583+36]..[1344,47583+50])
                                    Pexp_field
                                    expression (typing/typemod.ml[1344,47583+36]..[1344,47583+41])
                                      Pexp_ident "sbody" (typing/typemod.ml[1344,47583+36]..[1344,47583+41])
                                    "pmty_loc" (typing/typemod.ml[1344,47583+42]..[1344,47583+50])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1344,47583+51]..[1344,47583+64])
                                    Pexp_field
                                    expression (typing/typemod.ml[1344,47583+51]..[1344,47583+55])
                                      Pexp_ident "body" (typing/typemod.ml[1344,47583+51]..[1344,47583+55])
                                    "mty_type" (typing/typemod.ml[1344,47583+56]..[1344,47583+64])
                              ]
                        ]
                        expression (typing/typemod.ml[1345,47651+6]..[1352,48037+28])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[1345,47651+10]..[1345,47651+24])
                                Ppat_var "remove_aliases" (typing/typemod.ml[1345,47651+10]..[1345,47651+24])
                              expression (typing/typemod.ml[1345,47651+27]..[1345,47651+76])
                                Pexp_apply
                                expression (typing/typemod.ml[1345,47651+27]..[1345,47651+55])
                                  Pexp_ident "has_remove_aliases_attribute" (typing/typemod.ml[1345,47651+27]..[1345,47651+55])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[1345,47651+56]..[1345,47651+76])
                                      Pexp_field
                                      expression (typing/typemod.ml[1345,47651+56]..[1345,47651+60])
                                        Pexp_ident "smty" (typing/typemod.ml[1345,47651+56]..[1345,47651+60])
                                      "pmty_attributes" (typing/typemod.ml[1345,47651+61]..[1345,47651+76])
                                ]
                          ]
                          expression (typing/typemod.ml[1346,47731+6]..[1352,48037+28])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[1346,47731+10]..[1346,47731+32])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[1346,47731+11]..[1346,47731+21])
                                      Ppat_var "rev_tcstrs" (typing/typemod.ml[1346,47731+11]..[1346,47731+21])
                                    pattern (typing/typemod.ml[1346,47731+23]..[1346,47731+31])
                                      Ppat_var "final_sg" (typing/typemod.ml[1346,47731+23]..[1346,47731+31])
                                  ]
                                expression (typing/typemod.ml[1347,47766+8]..[1348,47841+32])
                                  Pexp_apply
                                  expression (typing/typemod.ml[1347,47766+8]..[1347,47766+22])
                                    Pexp_ident "List.fold_left" (typing/typemod.ml[1347,47766+8]..[1347,47766+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1347,47766+23]..[1347,47766+74])
                                        Pexp_apply
                                        expression (typing/typemod.ml[1347,47766+24]..[1347,47766+35])
                                          Pexp_ident "transl_with" (typing/typemod.ml[1347,47766+24]..[1347,47766+35])
                                        [
                                          <arg>
                                          Labelled "loc"
                                            expression (typing/typemod.ml[1347,47766+41]..[1347,47766+54])
                                              Pexp_field
                                              expression (typing/typemod.ml[1347,47766+41]..[1347,47766+45])
                                                Pexp_ident "smty" (typing/typemod.ml[1347,47766+41]..[1347,47766+45])
                                              "pmty_loc" (typing/typemod.ml[1347,47766+46]..[1347,47766+54])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1347,47766+55]..[1347,47766+58])
                                              Pexp_ident "env" (typing/typemod.ml[1347,47766+55]..[1347,47766+58])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1347,47766+59]..[1347,47766+73])
                                              Pexp_ident "remove_aliases" (typing/typemod.ml[1347,47766+59]..[1347,47766+73])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1348,47841+8]..[1348,47841+20])
                                        Pexp_tuple
                                        [
                                          expression (typing/typemod.ml[1348,47841+9]..[1348,47841+11])
                                            Pexp_construct "[]" (typing/typemod.ml[1348,47841+9]..[1348,47841+11])
                                            None
                                          expression (typing/typemod.ml[1348,47841+12]..[1348,47841+19])
                                            Pexp_ident "init_sg" (typing/typemod.ml[1348,47841+12]..[1348,47841+19])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1348,47841+21]..[1348,47841+32])
                                        Pexp_ident "constraints" (typing/typemod.ml[1348,47841+21]..[1348,47841+32])
                                  ]
                            ]
                            expression (typing/typemod.ml[1349,47877+6]..[1352,48037+28])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[1349,47877+10]..[1349,47877+15])
                                    Ppat_var "scope" (typing/typemod.ml[1349,47877+10]..[1349,47877+15])
                                  expression (typing/typemod.ml[1349,47877+18]..[1349,47877+39])
                                    Pexp_apply
                                    expression (typing/typemod.ml[1349,47877+18]..[1349,47877+36])
                                      Pexp_ident "Ctype.create_scope" (typing/typemod.ml[1349,47877+18]..[1349,47877+36])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1349,47877+37]..[1349,47877+39])
                                          Pexp_construct "()" (typing/typemod.ml[1349,47877+37]..[1349,47877+39])
                                          None
                                    ]
                              ]
                              expression (typing/typemod.ml[1350,47920+6]..[1352,48037+28])
                                Pexp_apply
                                expression (typing/typemod.ml[1350,47920+6]..[1350,47920+11])
                                  Pexp_ident "mkmty" (typing/typemod.ml[1350,47920+6]..[1350,47920+11])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[1350,47920+12]..[1350,47920+52])
                                      Pexp_construct "Tmty_with" (typing/typemod.ml[1350,47920+13]..[1350,47920+22])
                                      Some
                                        expression (typing/typemod.ml[1350,47920+23]..[1350,47920+51])
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[1350,47920+25]..[1350,47920+29])
                                              Pexp_ident "body" (typing/typemod.ml[1350,47920+25]..[1350,47920+29])
                                            expression (typing/typemod.ml[1350,47920+31]..[1350,47920+50])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1350,47920+31]..[1350,47920+39])
                                                Pexp_ident "List.rev" (typing/typemod.ml[1350,47920+31]..[1350,47920+39])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1350,47920+40]..[1350,47920+50])
                                                    Pexp_ident "rev_tcstrs" (typing/typemod.ml[1350,47920+40]..[1350,47920+50])
                                              ]
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[1351,47973+8]..[1351,47973+55])
                                      Pexp_apply
                                      expression (typing/typemod.ml[1351,47973+9]..[1351,47973+22])
                                        Pexp_ident "Mtype.freshen" (typing/typemod.ml[1351,47973+9]..[1351,47973+22])
                                      [
                                        <arg>
                                        Labelled "scope"
                                          expression (typing/typemod.ml[1351,47973+24]..[1351,47973+29])
                                            Pexp_ident "scope" (typing/typemod.ml[1351,47973+24]..[1351,47973+29])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1351,47973+30]..[1351,47973+54])
                                            Pexp_construct "Mty_signature" (typing/typemod.ml[1351,47973+31]..[1351,47973+44])
                                            Some
                                              expression (typing/typemod.ml[1351,47973+45]..[1351,47973+53])
                                                Pexp_ident "final_sg" (typing/typemod.ml[1351,47973+45]..[1351,47973+53])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[1351,47973+56]..[1351,47973+59])
                                      Pexp_ident "env" (typing/typemod.ml[1351,47973+56]..[1351,47973+59])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[1351,47973+60]..[1351,47973+63])
                                      Pexp_ident "loc" (typing/typemod.ml[1351,47973+60]..[1351,47973+63])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[1352,48037+8]..[1352,48037+28])
                                      Pexp_field
                                      expression (typing/typemod.ml[1352,48037+8]..[1352,48037+12])
                                        Pexp_ident "smty" (typing/typemod.ml[1352,48037+8]..[1352,48037+12])
                                      "pmty_attributes" (typing/typemod.ml[1352,48037+13]..[1352,48037+28])
                                ]
                  <case>
                    pattern (typing/typemod.ml[1353,48066+4]..[1353,48066+20])
                      Ppat_construct "Pmty_typeof" (typing/typemod.ml[1353,48066+4]..[1353,48066+15])
                      Some
                        []
                        pattern (typing/typemod.ml[1353,48066+16]..[1353,48066+20])
                          Ppat_var "smod" (typing/typemod.ml[1353,48066+16]..[1353,48066+20])
                    expression (typing/typemod.ml[1354,48090+6]..[1356,48195+63])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[1354,48090+10]..[1354,48090+13])
                            Ppat_var "env" (typing/typemod.ml[1354,48090+10]..[1354,48090+13])
                          expression (typing/typemod.ml[1354,48090+16]..[1354,48090+42])
                            Pexp_apply
                            expression (typing/typemod.ml[1354,48090+16]..[1354,48090+32])
                              Pexp_ident "Env.in_signature" (typing/typemod.ml[1354,48090+16]..[1354,48090+32])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1354,48090+33]..[1354,48090+38])
                                  Pexp_construct "false" (typing/typemod.ml[1354,48090+33]..[1354,48090+38])
                                  None
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1354,48090+39]..[1354,48090+42])
                                  Pexp_ident "env" (typing/typemod.ml[1354,48090+39]..[1354,48090+42])
                            ]
                      ]
                      expression (typing/typemod.ml[1355,48136+6]..[1356,48195+63])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typemod.ml[1355,48136+10]..[1355,48136+19])
                              Ppat_tuple
                              [
                                pattern (typing/typemod.ml[1355,48136+10]..[1355,48136+14])
                                  Ppat_var "tmty" (typing/typemod.ml[1355,48136+10]..[1355,48136+14])
                                pattern (typing/typemod.ml[1355,48136+16]..[1355,48136+19])
                                  Ppat_var "mty" (typing/typemod.ml[1355,48136+16]..[1355,48136+19])
                              ]
                            expression (typing/typemod.ml[1355,48136+22]..[1355,48136+55])
                              Pexp_apply
                              expression (typing/typemod.ml[1355,48136+22]..[1355,48136+46])
                                Pexp_apply
                                expression (typing/typemod.ml[1355,48136+22]..[1355,48136+23])
                                  Pexp_ident "!" (typing/typemod.ml[1355,48136+22]..[1355,48136+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[1355,48136+23]..[1355,48136+46])
                                      Pexp_ident "type_module_type_of_fwd" (typing/typemod.ml[1355,48136+23]..[1355,48136+46])
                                ]
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1355,48136+47]..[1355,48136+50])
                                    Pexp_ident "env" (typing/typemod.ml[1355,48136+47]..[1355,48136+50])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1355,48136+51]..[1355,48136+55])
                                    Pexp_ident "smod" (typing/typemod.ml[1355,48136+51]..[1355,48136+55])
                              ]
                        ]
                        expression (typing/typemod.ml[1356,48195+6]..[1356,48195+63])
                          Pexp_apply
                          expression (typing/typemod.ml[1356,48195+6]..[1356,48195+11])
                            Pexp_ident "mkmty" (typing/typemod.ml[1356,48195+6]..[1356,48195+11])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1356,48195+12]..[1356,48195+30])
                                Pexp_construct "Tmty_typeof" (typing/typemod.ml[1356,48195+13]..[1356,48195+24])
                                Some
                                  expression (typing/typemod.ml[1356,48195+25]..[1356,48195+29])
                                    Pexp_ident "tmty" (typing/typemod.ml[1356,48195+25]..[1356,48195+29])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1356,48195+31]..[1356,48195+34])
                                Pexp_ident "mty" (typing/typemod.ml[1356,48195+31]..[1356,48195+34])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1356,48195+35]..[1356,48195+38])
                                Pexp_ident "env" (typing/typemod.ml[1356,48195+35]..[1356,48195+38])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1356,48195+39]..[1356,48195+42])
                                Pexp_ident "loc" (typing/typemod.ml[1356,48195+39]..[1356,48195+42])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1356,48195+43]..[1356,48195+63])
                                Pexp_field
                                expression (typing/typemod.ml[1356,48195+43]..[1356,48195+47])
                                  Pexp_ident "smty" (typing/typemod.ml[1356,48195+43]..[1356,48195+47])
                                "pmty_attributes" (typing/typemod.ml[1356,48195+48]..[1356,48195+63])
                          ]
                  <case>
                    pattern (typing/typemod.ml[1357,48259+4]..[1357,48259+22])
                      Ppat_construct "Pmty_extension" (typing/typemod.ml[1357,48259+4]..[1357,48259+18])
                      Some
                        []
                        pattern (typing/typemod.ml[1357,48259+19]..[1357,48259+22])
                          Ppat_var "ext" (typing/typemod.ml[1357,48259+19]..[1357,48259+22])
                    expression (typing/typemod.ml[1358,48285+6]..[1358,48285+71])
                      Pexp_apply
                      expression (typing/typemod.ml[1358,48285+6]..[1358,48285+11])
                        Pexp_ident "raise" (typing/typemod.ml[1358,48285+6]..[1358,48285+11])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1358,48285+12]..[1358,48285+71])
                            Pexp_construct "Error_forward" (typing/typemod.ml[1358,48285+13]..[1358,48285+26])
                            Some
                              expression (typing/typemod.ml[1358,48285+27]..[1358,48285+70])
                                Pexp_apply
                                expression (typing/typemod.ml[1358,48285+28]..[1358,48285+65])
                                  Pexp_ident "Builtin_attributes.error_of_extension" (typing/typemod.ml[1358,48285+28]..[1358,48285+65])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[1358,48285+66]..[1358,48285+69])
                                      Pexp_ident "ext" (typing/typemod.ml[1358,48285+66]..[1358,48285+69])
                                ]
                      ]
                ]
      <def>
        pattern (typing/typemod.ml[1360,48358+4]..[1360,48358+15])
          Ppat_var "transl_with" (typing/typemod.ml[1360,48358+4]..[1360,48358+15])
        expression (typing/typemod.ml[1360,48358+16]..[1378,49136+27]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (typing/typemod.ml[1360,48358+17]..[1360,48358+20])
            Ppat_var "loc" (typing/typemod.ml[1360,48358+17]..[1360,48358+20])
          expression (typing/typemod.ml[1360,48358+21]..[1378,49136+27]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1360,48358+21]..[1360,48358+24])
              Ppat_var "env" (typing/typemod.ml[1360,48358+21]..[1360,48358+24])
            expression (typing/typemod.ml[1360,48358+25]..[1378,49136+27]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[1360,48358+25]..[1360,48358+39])
                Ppat_var "remove_aliases" (typing/typemod.ml[1360,48358+25]..[1360,48358+39])
              expression (typing/typemod.ml[1360,48358+40]..[1378,49136+27]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[1360,48358+40]..[1360,48358+55])
                  Ppat_tuple
                  [
                    pattern (typing/typemod.ml[1360,48358+41]..[1360,48358+51])
                      Ppat_var "rev_tcstrs" (typing/typemod.ml[1360,48358+41]..[1360,48358+51])
                    pattern (typing/typemod.ml[1360,48358+52]..[1360,48358+54])
                      Ppat_var "sg" (typing/typemod.ml[1360,48358+52]..[1360,48358+54])
                  ]
                expression (typing/typemod.ml[1360,48358+56]..[1378,49136+27]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[1360,48358+56]..[1360,48358+62])
                    Ppat_var "constr" (typing/typemod.ml[1360,48358+56]..[1360,48358+62])
                  expression (typing/typemod.ml[1361,48423+2]..[1378,49136+27])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[1361,48423+6]..[1361,48423+20])
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[1361,48423+6]..[1361,48423+9])
                              Ppat_var "lid" (typing/typemod.ml[1361,48423+6]..[1361,48423+9])
                            pattern (typing/typemod.ml[1361,48423+11]..[1361,48423+20])
                              Ppat_var "with_info" (typing/typemod.ml[1361,48423+11]..[1361,48423+20])
                          ]
                        expression (typing/typemod.ml[1361,48423+23]..[1375,49033+32])
                          Pexp_match
                          expression (typing/typemod.ml[1361,48423+29]..[1361,48423+35])
                            Pexp_ident "constr" (typing/typemod.ml[1361,48423+29]..[1361,48423+35])
                          [
                            <case>
                              pattern (typing/typemod.ml[1362,48464+6]..[1362,48464+25])
                                Ppat_construct "Pwith_type" (typing/typemod.ml[1362,48464+6]..[1362,48464+16])
                                Some
                                  []
                                  pattern (typing/typemod.ml[1362,48464+17]..[1362,48464+25])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typemod.ml[1362,48464+18]..[1362,48464+19])
                                        Ppat_var "l" (typing/typemod.ml[1362,48464+18]..[1362,48464+19])
                                      pattern (typing/typemod.ml[1362,48464+20]..[1362,48464+24])
                                        Ppat_var "decl" (typing/typemod.ml[1362,48464+20]..[1362,48464+24])
                                    ]
                              expression (typing/typemod.ml[1362,48464+28]..[1362,48464+46])
                                Pexp_tuple
                                [
                                  expression (typing/typemod.ml[1362,48464+28]..[1362,48464+29])
                                    Pexp_ident "l" (typing/typemod.ml[1362,48464+28]..[1362,48464+29])
                                  expression (typing/typemod.ml[1362,48464+32]..[1362,48464+46])
                                    Pexp_construct "With_type" (typing/typemod.ml[1362,48464+32]..[1362,48464+41])
                                    Some
                                      expression (typing/typemod.ml[1362,48464+42]..[1362,48464+46])
                                        Pexp_ident "decl" (typing/typemod.ml[1362,48464+42]..[1362,48464+46])
                                ]
                            <case>
                              pattern (typing/typemod.ml[1363,48511+6]..[1363,48511+30])
                                Ppat_construct "Pwith_typesubst" (typing/typemod.ml[1363,48511+6]..[1363,48511+21])
                                Some
                                  []
                                  pattern (typing/typemod.ml[1363,48511+22]..[1363,48511+30])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typemod.ml[1363,48511+23]..[1363,48511+24])
                                        Ppat_var "l" (typing/typemod.ml[1363,48511+23]..[1363,48511+24])
                                      pattern (typing/typemod.ml[1363,48511+25]..[1363,48511+29])
                                        Ppat_var "decl" (typing/typemod.ml[1363,48511+25]..[1363,48511+29])
                                    ]
                              expression (typing/typemod.ml[1363,48511+33]..[1363,48511+56])
                                Pexp_tuple
                                [
                                  expression (typing/typemod.ml[1363,48511+33]..[1363,48511+34])
                                    Pexp_ident "l" (typing/typemod.ml[1363,48511+33]..[1363,48511+34])
                                  expression (typing/typemod.ml[1363,48511+37]..[1363,48511+56])
                                    Pexp_construct "With_typesubst" (typing/typemod.ml[1363,48511+37]..[1363,48511+51])
                                    Some
                                      expression (typing/typemod.ml[1363,48511+52]..[1363,48511+56])
                                        Pexp_ident "decl" (typing/typemod.ml[1363,48511+52]..[1363,48511+56])
                                ]
                            <case>
                              pattern (typing/typemod.ml[1364,48568+6]..[1364,48568+25])
                                Ppat_construct "Pwith_module" (typing/typemod.ml[1364,48568+6]..[1364,48568+18])
                                Some
                                  []
                                  pattern (typing/typemod.ml[1364,48568+19]..[1364,48568+25])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typemod.ml[1364,48568+20]..[1364,48568+21])
                                        Ppat_var "l" (typing/typemod.ml[1364,48568+20]..[1364,48568+21])
                                      pattern (typing/typemod.ml[1364,48568+22]..[1364,48568+24])
                                        Ppat_var "l'" (typing/typemod.ml[1364,48568+22]..[1364,48568+24])
                                    ]
                              expression (typing/typemod.ml[1365,48597+8]..[1366,48657+56])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[1365,48597+12]..[1365,48597+20])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typemod.ml[1365,48597+12]..[1365,48597+16])
                                          Ppat_var "path" (typing/typemod.ml[1365,48597+12]..[1365,48597+16])
                                        pattern (typing/typemod.ml[1365,48597+18]..[1365,48597+20])
                                          Ppat_var "md" (typing/typemod.ml[1365,48597+18]..[1365,48597+20])
                                      ]
                                    expression (typing/typemod.ml[1365,48597+23]..[1365,48597+56])
                                      Pexp_apply
                                      expression (typing/typemod.ml[1365,48597+23]..[1365,48597+40])
                                        Pexp_ident "Env.lookup_module" (typing/typemod.ml[1365,48597+23]..[1365,48597+40])
                                      [
                                        <arg>
                                        Labelled "loc"
                                          expression (typing/typemod.ml[1365,48597+42]..[1365,48597+45])
                                            Pexp_ident "loc" (typing/typemod.ml[1365,48597+42]..[1365,48597+45])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1365,48597+46]..[1365,48597+52])
                                            Pexp_field
                                            expression (typing/typemod.ml[1365,48597+46]..[1365,48597+48])
                                              Pexp_ident "l'" (typing/typemod.ml[1365,48597+46]..[1365,48597+48])
                                            "txt" (typing/typemod.ml[1365,48597+49]..[1365,48597+52])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1365,48597+53]..[1365,48597+56])
                                            Pexp_ident "env" (typing/typemod.ml[1365,48597+53]..[1365,48597+56])
                                      ]
                                ]
                                expression (typing/typemod.ml[1366,48657+8]..[1366,48657+56])
                                  Pexp_tuple
                                  [
                                    expression (typing/typemod.ml[1366,48657+8]..[1366,48657+9])
                                      Pexp_ident "l" (typing/typemod.ml[1366,48657+8]..[1366,48657+9])
                                    expression (typing/typemod.ml[1366,48657+12]..[1366,48657+56])
                                      Pexp_construct "With_module" (typing/typemod.ml[1366,48657+12]..[1366,48657+23])
                                      Some
                                        expression (typing/typemod.ml[1366,48657+24]..[1366,48657+56])
                                          Pexp_record
                                          [
                                            "lid" (typing/typemod.ml[1366,48657+25]..[1366,48657+28])
                                              expression (typing/typemod.ml[1366,48657+29]..[1366,48657+31])
                                                Pexp_ident "l'" (typing/typemod.ml[1366,48657+29]..[1366,48657+31])
                                            "path" (typing/typemod.ml[1366,48657+32]..[1366,48657+36]) ghost
                                              expression (typing/typemod.ml[1366,48657+32]..[1366,48657+36])
                                                Pexp_ident "path" (typing/typemod.ml[1366,48657+32]..[1366,48657+36])
                                            "md" (typing/typemod.ml[1366,48657+37]..[1366,48657+39]) ghost
                                              expression (typing/typemod.ml[1366,48657+37]..[1366,48657+39])
                                                Pexp_ident "md" (typing/typemod.ml[1366,48657+37]..[1366,48657+39])
                                            "remove_aliases" (typing/typemod.ml[1366,48657+41]..[1366,48657+55]) ghost
                                              expression (typing/typemod.ml[1366,48657+41]..[1366,48657+55])
                                                Pexp_ident "remove_aliases" (typing/typemod.ml[1366,48657+41]..[1366,48657+55])
                                          ]
                                          None
                                  ]
                            <case>
                              pattern (typing/typemod.ml[1367,48714+6]..[1367,48714+27])
                                Ppat_construct "Pwith_modsubst" (typing/typemod.ml[1367,48714+6]..[1367,48714+20])
                                Some
                                  []
                                  pattern (typing/typemod.ml[1367,48714+21]..[1367,48714+27])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typemod.ml[1367,48714+22]..[1367,48714+23])
                                        Ppat_var "l" (typing/typemod.ml[1367,48714+22]..[1367,48714+23])
                                      pattern (typing/typemod.ml[1367,48714+24]..[1367,48714+26])
                                        Ppat_var "l'" (typing/typemod.ml[1367,48714+24]..[1367,48714+26])
                                    ]
                              expression (typing/typemod.ml[1368,48745+8]..[1369,48806+39])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[1368,48745+12]..[1368,48745+21])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typemod.ml[1368,48745+12]..[1368,48745+16])
                                          Ppat_var "path" (typing/typemod.ml[1368,48745+12]..[1368,48745+16])
                                        pattern (typing/typemod.ml[1368,48745+18]..[1368,48745+21])
                                          Ppat_var "md'" (typing/typemod.ml[1368,48745+18]..[1368,48745+21])
                                      ]
                                    expression (typing/typemod.ml[1368,48745+24]..[1368,48745+57])
                                      Pexp_apply
                                      expression (typing/typemod.ml[1368,48745+24]..[1368,48745+41])
                                        Pexp_ident "Env.lookup_module" (typing/typemod.ml[1368,48745+24]..[1368,48745+41])
                                      [
                                        <arg>
                                        Labelled "loc"
                                          expression (typing/typemod.ml[1368,48745+43]..[1368,48745+46])
                                            Pexp_ident "loc" (typing/typemod.ml[1368,48745+43]..[1368,48745+46])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1368,48745+47]..[1368,48745+53])
                                            Pexp_field
                                            expression (typing/typemod.ml[1368,48745+47]..[1368,48745+49])
                                              Pexp_ident "l'" (typing/typemod.ml[1368,48745+47]..[1368,48745+49])
                                            "txt" (typing/typemod.ml[1368,48745+50]..[1368,48745+53])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1368,48745+54]..[1368,48745+57])
                                            Pexp_ident "env" (typing/typemod.ml[1368,48745+54]..[1368,48745+57])
                                      ]
                                ]
                                expression (typing/typemod.ml[1369,48806+8]..[1369,48806+39])
                                  Pexp_tuple
                                  [
                                    expression (typing/typemod.ml[1369,48806+8]..[1369,48806+9])
                                      Pexp_ident "l" (typing/typemod.ml[1369,48806+8]..[1369,48806+9])
                                    expression (typing/typemod.ml[1369,48806+12]..[1369,48806+39])
                                      Pexp_construct "With_modsubst" (typing/typemod.ml[1369,48806+12]..[1369,48806+25])
                                      Some
                                        expression (typing/typemod.ml[1369,48806+26]..[1369,48806+39])
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[1369,48806+27]..[1369,48806+29])
                                              Pexp_ident "l'" (typing/typemod.ml[1369,48806+27]..[1369,48806+29])
                                            expression (typing/typemod.ml[1369,48806+30]..[1369,48806+34])
                                              Pexp_ident "path" (typing/typemod.ml[1369,48806+30]..[1369,48806+34])
                                            expression (typing/typemod.ml[1369,48806+35]..[1369,48806+38])
                                              Pexp_ident "md'" (typing/typemod.ml[1369,48806+35]..[1369,48806+38])
                                          ]
                                  ]
                            <case>
                              pattern (typing/typemod.ml[1370,48846+6]..[1370,48846+28])
                                Ppat_construct "Pwith_modtype" (typing/typemod.ml[1370,48846+6]..[1370,48846+19])
                                Some
                                  []
                                  pattern (typing/typemod.ml[1370,48846+20]..[1370,48846+28])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typemod.ml[1370,48846+21]..[1370,48846+22])
                                        Ppat_var "l" (typing/typemod.ml[1370,48846+21]..[1370,48846+22])
                                      pattern (typing/typemod.ml[1370,48846+23]..[1370,48846+27])
                                        Ppat_var "smty" (typing/typemod.ml[1370,48846+23]..[1370,48846+27])
                                    ]
                              expression (typing/typemod.ml[1371,48878+8]..[1372,48923+27])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[1371,48878+12]..[1371,48878+15])
                                      Ppat_var "mty" (typing/typemod.ml[1371,48878+12]..[1371,48878+15])
                                    expression (typing/typemod.ml[1371,48878+18]..[1371,48878+41])
                                      Pexp_apply
                                      expression (typing/typemod.ml[1371,48878+18]..[1371,48878+32])
                                        Pexp_ident "transl_modtype" (typing/typemod.ml[1371,48878+18]..[1371,48878+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1371,48878+33]..[1371,48878+36])
                                            Pexp_ident "env" (typing/typemod.ml[1371,48878+33]..[1371,48878+36])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1371,48878+37]..[1371,48878+41])
                                            Pexp_ident "smty" (typing/typemod.ml[1371,48878+37]..[1371,48878+41])
                                      ]
                                ]
                                expression (typing/typemod.ml[1372,48923+8]..[1372,48923+27])
                                  Pexp_tuple
                                  [
                                    expression (typing/typemod.ml[1372,48923+8]..[1372,48923+9])
                                      Pexp_ident "l" (typing/typemod.ml[1372,48923+8]..[1372,48923+9])
                                    expression (typing/typemod.ml[1372,48923+11]..[1372,48923+27])
                                      Pexp_construct "With_modtype" (typing/typemod.ml[1372,48923+11]..[1372,48923+23])
                                      Some
                                        expression (typing/typemod.ml[1372,48923+24]..[1372,48923+27])
                                          Pexp_ident "mty" (typing/typemod.ml[1372,48923+24]..[1372,48923+27])
                                  ]
                            <case>
                              pattern (typing/typemod.ml[1373,48951+6]..[1373,48951+33])
                                Ppat_construct "Pwith_modtypesubst" (typing/typemod.ml[1373,48951+6]..[1373,48951+24])
                                Some
                                  []
                                  pattern (typing/typemod.ml[1373,48951+25]..[1373,48951+33])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typemod.ml[1373,48951+26]..[1373,48951+27])
                                        Ppat_var "l" (typing/typemod.ml[1373,48951+26]..[1373,48951+27])
                                      pattern (typing/typemod.ml[1373,48951+28]..[1373,48951+32])
                                        Ppat_var "smty" (typing/typemod.ml[1373,48951+28]..[1373,48951+32])
                                    ]
                              expression (typing/typemod.ml[1374,48988+8]..[1375,49033+32])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[1374,48988+12]..[1374,48988+15])
                                      Ppat_var "mty" (typing/typemod.ml[1374,48988+12]..[1374,48988+15])
                                    expression (typing/typemod.ml[1374,48988+18]..[1374,48988+41])
                                      Pexp_apply
                                      expression (typing/typemod.ml[1374,48988+18]..[1374,48988+32])
                                        Pexp_ident "transl_modtype" (typing/typemod.ml[1374,48988+18]..[1374,48988+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1374,48988+33]..[1374,48988+36])
                                            Pexp_ident "env" (typing/typemod.ml[1374,48988+33]..[1374,48988+36])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1374,48988+37]..[1374,48988+41])
                                            Pexp_ident "smty" (typing/typemod.ml[1374,48988+37]..[1374,48988+41])
                                      ]
                                ]
                                expression (typing/typemod.ml[1375,49033+8]..[1375,49033+32])
                                  Pexp_tuple
                                  [
                                    expression (typing/typemod.ml[1375,49033+8]..[1375,49033+9])
                                      Pexp_ident "l" (typing/typemod.ml[1375,49033+8]..[1375,49033+9])
                                    expression (typing/typemod.ml[1375,49033+11]..[1375,49033+32])
                                      Pexp_construct "With_modtypesubst" (typing/typemod.ml[1375,49033+11]..[1375,49033+28])
                                      Some
                                        expression (typing/typemod.ml[1375,49033+29]..[1375,49033+32])
                                          Pexp_ident "mty" (typing/typemod.ml[1375,49033+29]..[1375,49033+32])
                                  ]
                          ]
                    ]
                    expression (typing/typemod.ml[1377,49071+2]..[1378,49136+27])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[1377,49071+6]..[1377,49071+17])
                            Ppat_tuple
                            [
                              pattern (typing/typemod.ml[1377,49071+7]..[1377,49071+12])
                                Ppat_var "tcstr" (typing/typemod.ml[1377,49071+7]..[1377,49071+12])
                              pattern (typing/typemod.ml[1377,49071+14]..[1377,49071+16])
                                Ppat_var "sg" (typing/typemod.ml[1377,49071+14]..[1377,49071+16])
                            ]
                          expression (typing/typemod.ml[1377,49071+20]..[1377,49071+61])
                            Pexp_apply
                            expression (typing/typemod.ml[1377,49071+20]..[1377,49071+36])
                              Pexp_ident "merge_constraint" (typing/typemod.ml[1377,49071+20]..[1377,49071+36])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1377,49071+37]..[1377,49071+40])
                                  Pexp_ident "env" (typing/typemod.ml[1377,49071+37]..[1377,49071+40])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1377,49071+41]..[1377,49071+44])
                                  Pexp_ident "loc" (typing/typemod.ml[1377,49071+41]..[1377,49071+44])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1377,49071+45]..[1377,49071+47])
                                  Pexp_ident "sg" (typing/typemod.ml[1377,49071+45]..[1377,49071+47])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1377,49071+48]..[1377,49071+51])
                                  Pexp_ident "lid" (typing/typemod.ml[1377,49071+48]..[1377,49071+51])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1377,49071+52]..[1377,49071+61])
                                  Pexp_ident "with_info" (typing/typemod.ml[1377,49071+52]..[1377,49071+61])
                            ]
                      ]
                      expression (typing/typemod.ml[1378,49136+2]..[1378,49136+27])
                        Pexp_tuple
                        [
                          expression (typing/typemod.ml[1378,49136+3]..[1378,49136+22])
                            Pexp_construct "::" (typing/typemod.ml[1378,49136+9]..[1378,49136+11])
                            Some
                              expression (typing/typemod.ml[1378,49136+3]..[1378,49136+22]) ghost
                                Pexp_tuple
                                [
                                  expression (typing/typemod.ml[1378,49136+3]..[1378,49136+8])
                                    Pexp_ident "tcstr" (typing/typemod.ml[1378,49136+3]..[1378,49136+8])
                                  expression (typing/typemod.ml[1378,49136+12]..[1378,49136+22])
                                    Pexp_ident "rev_tcstrs" (typing/typemod.ml[1378,49136+12]..[1378,49136+22])
                                ]
                          expression (typing/typemod.ml[1378,49136+24]..[1378,49136+26])
                            Pexp_ident "sg" (typing/typemod.ml[1378,49136+24]..[1378,49136+26])
                        ]
      <def>
        pattern (typing/typemod.ml[1382,49167+4]..[1382,49167+20])
          Ppat_var "transl_signature" (typing/typemod.ml[1382,49167+4]..[1382,49167+20])
        expression (typing/typemod.ml[1382,49167+21]..[1700,62689+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1382,49167+21]..[1382,49167+24])
            Ppat_var "env" (typing/typemod.ml[1382,49167+21]..[1382,49167+24])
          expression (typing/typemod.ml[1382,49167+25]..[1700,62689+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1382,49167+25]..[1382,49167+27])
              Ppat_var "sg" (typing/typemod.ml[1382,49167+25]..[1382,49167+27])
            expression (typing/typemod.ml[1383,49197+2]..[1700,62689+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1383,49197+6]..[1383,49197+11])
                    Ppat_var "names" (typing/typemod.ml[1383,49197+6]..[1383,49197+11])
                  expression (typing/typemod.ml[1383,49197+14]..[1383,49197+39])
                    Pexp_apply
                    expression (typing/typemod.ml[1383,49197+14]..[1383,49197+36])
                      Pexp_ident "Signature_names.create" (typing/typemod.ml[1383,49197+14]..[1383,49197+36])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[1383,49197+37]..[1383,49197+39])
                          Pexp_construct "()" (typing/typemod.ml[1383,49197+37]..[1383,49197+39])
                          None
                    ]
              ]
              expression (typing/typemod.ml[1384,49240+2]..[1700,62689+5])
                Pexp_let Rec
                [
                  <def>
                    pattern (typing/typemod.ml[1384,49240+10]..[1384,49240+20])
                      Ppat_var "transl_sig" (typing/typemod.ml[1384,49240+10]..[1384,49240+20])
                    expression (typing/typemod.ml[1384,49240+21]..[1687,62132+77]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[1384,49240+21]..[1384,49240+24])
                        Ppat_var "env" (typing/typemod.ml[1384,49240+21]..[1384,49240+24])
                      expression (typing/typemod.ml[1384,49240+25]..[1687,62132+77]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1384,49240+25]..[1384,49240+27])
                          Ppat_var "sg" (typing/typemod.ml[1384,49240+25]..[1384,49240+27])
                        expression (typing/typemod.ml[1385,49270+4]..[1687,62132+77])
                          Pexp_match
                          expression (typing/typemod.ml[1385,49270+10]..[1385,49270+12])
                            Pexp_ident "sg" (typing/typemod.ml[1385,49270+10]..[1385,49270+12])
                          [
                            <case>
                              pattern (typing/typemod.ml[1386,49288+6]..[1386,49288+8])
                                Ppat_construct "[]" (typing/typemod.ml[1386,49288+6]..[1386,49288+8])
                                None
                              expression (typing/typemod.ml[1386,49288+12]..[1386,49288+23])
                                Pexp_tuple
                                [
                                  expression (typing/typemod.ml[1386,49288+12]..[1386,49288+14])
                                    Pexp_construct "[]" (typing/typemod.ml[1386,49288+12]..[1386,49288+14])
                                    None
                                  expression (typing/typemod.ml[1386,49288+16]..[1386,49288+18])
                                    Pexp_construct "[]" (typing/typemod.ml[1386,49288+16]..[1386,49288+18])
                                    None
                                  expression (typing/typemod.ml[1386,49288+20]..[1386,49288+23])
                                    Pexp_ident "env" (typing/typemod.ml[1386,49288+20]..[1386,49288+23])
                                ]
                            <case>
                              pattern (typing/typemod.ml[1387,49312+6]..[1387,49312+18])
                                Ppat_construct "::" (typing/typemod.ml[1387,49312+11]..[1387,49312+13])
                                Some
                                  []
                                  pattern (typing/typemod.ml[1387,49312+6]..[1387,49312+18]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (typing/typemod.ml[1387,49312+6]..[1387,49312+10])
                                        Ppat_var "item" (typing/typemod.ml[1387,49312+6]..[1387,49312+10])
                                      pattern (typing/typemod.ml[1387,49312+14]..[1387,49312+18])
                                        Ppat_var "srem" (typing/typemod.ml[1387,49312+14]..[1387,49312+18])
                                    ]
                              expression (typing/typemod.ml[1388,49334+8]..[1687,62132+77])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[1388,49334+12]..[1388,49334+15])
                                      Ppat_var "loc" (typing/typemod.ml[1388,49334+12]..[1388,49334+15])
                                    expression (typing/typemod.ml[1388,49334+18]..[1388,49334+31])
                                      Pexp_field
                                      expression (typing/typemod.ml[1388,49334+18]..[1388,49334+22])
                                        Pexp_ident "item" (typing/typemod.ml[1388,49334+18]..[1388,49334+22])
                                      "psig_loc" (typing/typemod.ml[1388,49334+23]..[1388,49334+31])
                                ]
                                expression (typing/typemod.ml[1389,49369+8]..[1687,62132+77])
                                  Pexp_match
                                  expression (typing/typemod.ml[1389,49369+14]..[1389,49369+28])
                                    Pexp_field
                                    expression (typing/typemod.ml[1389,49369+14]..[1389,49369+18])
                                      Pexp_ident "item" (typing/typemod.ml[1389,49369+14]..[1389,49369+18])
                                    "psig_desc" (typing/typemod.ml[1389,49369+19]..[1389,49369+28])
                                  [
                                    <case>
                                      pattern (typing/typemod.ml[1390,49403+10]..[1390,49403+26])
                                        Ppat_construct "Psig_value" (typing/typemod.ml[1390,49403+10]..[1390,49403+20])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1390,49403+21]..[1390,49403+26])
                                            Ppat_var "sdesc" (typing/typemod.ml[1390,49403+21]..[1390,49403+26])
                                      expression (typing/typemod.ml[1391,49433+12]..[1398,49810+23])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[1391,49433+16]..[1391,49433+31])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[1391,49433+17]..[1391,49433+22])
                                                  Ppat_var "tdesc" (typing/typemod.ml[1391,49433+17]..[1391,49433+22])
                                                pattern (typing/typemod.ml[1391,49433+24]..[1391,49433+30])
                                                  Ppat_var "newenv" (typing/typemod.ml[1391,49433+24]..[1391,49433+30])
                                              ]
                                            expression (typing/typemod.ml[1392,49467+14]..[1392,49467+64])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1392,49467+14]..[1392,49467+40])
                                                Pexp_ident "Typedecl.transl_value_decl" (typing/typemod.ml[1392,49467+14]..[1392,49467+40])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1392,49467+41]..[1392,49467+44])
                                                    Pexp_ident "env" (typing/typemod.ml[1392,49467+41]..[1392,49467+44])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1392,49467+45]..[1392,49467+58])
                                                    Pexp_field
                                                    expression (typing/typemod.ml[1392,49467+45]..[1392,49467+49])
                                                      Pexp_ident "item" (typing/typemod.ml[1392,49467+45]..[1392,49467+49])
                                                    "psig_loc" (typing/typemod.ml[1392,49467+50]..[1392,49467+58])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1392,49467+59]..[1392,49467+64])
                                                    Pexp_ident "sdesc" (typing/typemod.ml[1392,49467+59]..[1392,49467+64])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[1394,49547+12]..[1398,49810+23])
                                          Pexp_sequence
                                          expression (typing/typemod.ml[1394,49547+12]..[1394,49547+72])
                                            Pexp_apply
                                            expression (typing/typemod.ml[1394,49547+12]..[1394,49547+39])
                                              Pexp_ident "Signature_names.check_value" (typing/typemod.ml[1394,49547+12]..[1394,49547+39])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1394,49547+40]..[1394,49547+45])
                                                  Pexp_ident "names" (typing/typemod.ml[1394,49547+40]..[1394,49547+45])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1394,49547+46]..[1394,49547+59])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[1394,49547+46]..[1394,49547+51])
                                                    Pexp_ident "tdesc" (typing/typemod.ml[1394,49547+46]..[1394,49547+51])
                                                  "val_loc" (typing/typemod.ml[1394,49547+52]..[1394,49547+59])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1394,49547+60]..[1394,49547+72])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[1394,49547+60]..[1394,49547+65])
                                                    Pexp_ident "tdesc" (typing/typemod.ml[1394,49547+60]..[1394,49547+65])
                                                  "val_id" (typing/typemod.ml[1394,49547+66]..[1394,49547+72])
                                            ]
                                          expression (typing/typemod.ml[1395,49621+12]..[1398,49810+23])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[1395,49621+16]..[1395,49621+37])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typemod.ml[1395,49621+17]..[1395,49621+21])
                                                      Ppat_var "trem" (typing/typemod.ml[1395,49621+17]..[1395,49621+21])
                                                    pattern (typing/typemod.ml[1395,49621+22]..[1395,49621+25])
                                                      Ppat_var "rem" (typing/typemod.ml[1395,49621+22]..[1395,49621+25])
                                                    pattern (typing/typemod.ml[1395,49621+27]..[1395,49621+36])
                                                      Ppat_var "final_env" (typing/typemod.ml[1395,49621+27]..[1395,49621+36])
                                                  ]
                                                expression (typing/typemod.ml[1395,49621+40]..[1395,49621+62])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[1395,49621+40]..[1395,49621+50])
                                                    Pexp_ident "transl_sig" (typing/typemod.ml[1395,49621+40]..[1395,49621+50])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1395,49621+51]..[1395,49621+57])
                                                        Pexp_ident "newenv" (typing/typemod.ml[1395,49621+51]..[1395,49621+57])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1395,49621+58]..[1395,49621+62])
                                                        Pexp_ident "srem" (typing/typemod.ml[1395,49621+58]..[1395,49621+62])
                                                  ]
                                            ]
                                            expression (typing/typemod.ml[1396,49687+12]..[1398,49810+23])
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[1396,49687+12]..[1396,49687+52])
                                                  Pexp_construct "::" (typing/typemod.ml[1396,49687+45]..[1396,49687+47])
                                                  Some
                                                    expression (typing/typemod.ml[1396,49687+12]..[1396,49687+52]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typemod.ml[1396,49687+12]..[1396,49687+44])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[1396,49687+12]..[1396,49687+17])
                                                            Pexp_ident "mksig" (typing/typemod.ml[1396,49687+12]..[1396,49687+17])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1396,49687+18]..[1396,49687+36])
                                                                Pexp_construct "Tsig_value" (typing/typemod.ml[1396,49687+19]..[1396,49687+29])
                                                                Some
                                                                  expression (typing/typemod.ml[1396,49687+30]..[1396,49687+35])
                                                                    Pexp_ident "tdesc" (typing/typemod.ml[1396,49687+30]..[1396,49687+35])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1396,49687+37]..[1396,49687+40])
                                                                Pexp_ident "env" (typing/typemod.ml[1396,49687+37]..[1396,49687+40])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1396,49687+41]..[1396,49687+44])
                                                                Pexp_ident "loc" (typing/typemod.ml[1396,49687+41]..[1396,49687+44])
                                                          ]
                                                        expression (typing/typemod.ml[1396,49687+48]..[1396,49687+52])
                                                          Pexp_ident "trem" (typing/typemod.ml[1396,49687+48]..[1396,49687+52])
                                                      ]
                                                expression (typing/typemod.ml[1397,49741+12]..[1397,49741+67])
                                                  Pexp_construct "::" (typing/typemod.ml[1397,49741+61]..[1397,49741+63])
                                                  Some
                                                    expression (typing/typemod.ml[1397,49741+12]..[1397,49741+67]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typemod.ml[1397,49741+12]..[1397,49741+60])
                                                          Pexp_construct "Sig_value" (typing/typemod.ml[1397,49741+12]..[1397,49741+21])
                                                          Some
                                                            expression (typing/typemod.ml[1397,49741+21]..[1397,49741+60])
                                                              Pexp_tuple
                                                              [
                                                                expression (typing/typemod.ml[1397,49741+22]..[1397,49741+34])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[1397,49741+22]..[1397,49741+27])
                                                                    Pexp_ident "tdesc" (typing/typemod.ml[1397,49741+22]..[1397,49741+27])
                                                                  "val_id" (typing/typemod.ml[1397,49741+28]..[1397,49741+34])
                                                                expression (typing/typemod.ml[1397,49741+36]..[1397,49741+49])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[1397,49741+36]..[1397,49741+41])
                                                                    Pexp_ident "tdesc" (typing/typemod.ml[1397,49741+36]..[1397,49741+41])
                                                                  "val_val" (typing/typemod.ml[1397,49741+42]..[1397,49741+49])
                                                                expression (typing/typemod.ml[1397,49741+51]..[1397,49741+59])
                                                                  Pexp_construct "Exported" (typing/typemod.ml[1397,49741+51]..[1397,49741+59])
                                                                  None
                                                              ]
                                                        expression (typing/typemod.ml[1397,49741+64]..[1397,49741+67])
                                                          Pexp_ident "rem" (typing/typemod.ml[1397,49741+64]..[1397,49741+67])
                                                      ]
                                                expression (typing/typemod.ml[1398,49810+14]..[1398,49810+23])
                                                  Pexp_ident "final_env" (typing/typemod.ml[1398,49810+14]..[1398,49810+23])
                                              ]
                                    <case>
                                      pattern (typing/typemod.ml[1399,49834+10]..[1399,49834+38])
                                        Ppat_construct "Psig_type" (typing/typemod.ml[1399,49834+10]..[1399,49834+19])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1399,49834+20]..[1399,49834+38])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[1399,49834+21]..[1399,49834+29])
                                                Ppat_var "rec_flag" (typing/typemod.ml[1399,49834+21]..[1399,49834+29])
                                              pattern (typing/typemod.ml[1399,49834+31]..[1399,49834+37])
                                                Ppat_var "sdecls" (typing/typemod.ml[1399,49834+31]..[1399,49834+37])
                                            ]
                                      expression (typing/typemod.ml[1400,49876+12]..[1414,50447+21])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[1400,49876+16]..[1400,49876+31])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[1400,49876+17]..[1400,49876+22])
                                                  Ppat_var "decls" (typing/typemod.ml[1400,49876+17]..[1400,49876+22])
                                                pattern (typing/typemod.ml[1400,49876+24]..[1400,49876+30])
                                                  Ppat_var "newenv" (typing/typemod.ml[1400,49876+24]..[1400,49876+30])
                                              ]
                                            expression (typing/typemod.ml[1401,49910+14]..[1401,49910+59])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1401,49910+14]..[1401,49910+39])
                                                Pexp_ident "Typedecl.transl_type_decl" (typing/typemod.ml[1401,49910+14]..[1401,49910+39])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1401,49910+40]..[1401,49910+43])
                                                    Pexp_ident "env" (typing/typemod.ml[1401,49910+40]..[1401,49910+43])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1401,49910+44]..[1401,49910+52])
                                                    Pexp_ident "rec_flag" (typing/typemod.ml[1401,49910+44]..[1401,49910+52])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1401,49910+53]..[1401,49910+59])
                                                    Pexp_ident "sdecls" (typing/typemod.ml[1401,49910+53]..[1401,49910+59])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[1403,49985+12]..[1414,50447+21])
                                          Pexp_sequence
                                          expression (typing/typemod.ml[1403,49985+12]..[1405,50086+19])
                                            Pexp_apply
                                            expression (typing/typemod.ml[1403,49985+12]..[1403,49985+21])
                                              Pexp_ident "List.iter" (typing/typemod.ml[1403,49985+12]..[1403,49985+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1403,49985+22]..[1405,50086+13])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/typemod.ml[1403,49985+27]..[1403,49985+29])
                                                    Ppat_var "td" (typing/typemod.ml[1403,49985+27]..[1403,49985+29])
                                                  expression (typing/typemod.ml[1404,50018+14]..[1404,50018+67])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[1404,50018+14]..[1404,50018+40])
                                                      Pexp_ident "Signature_names.check_type" (typing/typemod.ml[1404,50018+14]..[1404,50018+40])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1404,50018+41]..[1404,50018+46])
                                                          Pexp_ident "names" (typing/typemod.ml[1404,50018+41]..[1404,50018+46])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1404,50018+47]..[1404,50018+57])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[1404,50018+47]..[1404,50018+49])
                                                            Pexp_ident "td" (typing/typemod.ml[1404,50018+47]..[1404,50018+49])
                                                          "typ_loc" (typing/typemod.ml[1404,50018+50]..[1404,50018+57])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1404,50018+58]..[1404,50018+67])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[1404,50018+58]..[1404,50018+60])
                                                            Pexp_ident "td" (typing/typemod.ml[1404,50018+58]..[1404,50018+60])
                                                          "typ_id" (typing/typemod.ml[1404,50018+61]..[1404,50018+67])
                                                    ]
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1405,50086+14]..[1405,50086+19])
                                                  Pexp_ident "decls" (typing/typemod.ml[1405,50086+14]..[1405,50086+19])
                                            ]
                                          expression (typing/typemod.ml[1406,50107+12]..[1414,50447+21])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[1406,50107+16]..[1406,50107+38])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typemod.ml[1406,50107+17]..[1406,50107+21])
                                                      Ppat_var "trem" (typing/typemod.ml[1406,50107+17]..[1406,50107+21])
                                                    pattern (typing/typemod.ml[1406,50107+23]..[1406,50107+26])
                                                      Ppat_var "rem" (typing/typemod.ml[1406,50107+23]..[1406,50107+26])
                                                    pattern (typing/typemod.ml[1406,50107+28]..[1406,50107+37])
                                                      Ppat_var "final_env" (typing/typemod.ml[1406,50107+28]..[1406,50107+37])
                                                  ]
                                                expression (typing/typemod.ml[1406,50107+41]..[1406,50107+63])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[1406,50107+41]..[1406,50107+51])
                                                    Pexp_ident "transl_sig" (typing/typemod.ml[1406,50107+41]..[1406,50107+51])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1406,50107+52]..[1406,50107+58])
                                                        Pexp_ident "newenv" (typing/typemod.ml[1406,50107+52]..[1406,50107+58])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1406,50107+59]..[1406,50107+63])
                                                        Pexp_ident "srem" (typing/typemod.ml[1406,50107+59]..[1406,50107+63])
                                                  ]
                                            ]
                                            expression (typing/typemod.ml[1407,50174+12]..[1414,50447+21])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typemod.ml[1407,50174+16]..[1407,50174+18])
                                                    Ppat_var "sg" (typing/typemod.ml[1407,50174+16]..[1407,50174+18])
                                                  expression (typing/typemod.ml[1408,50195+14]..[1410,50325+25])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[1408,50195+14]..[1408,50195+41])
                                                      Pexp_ident "map_rec_type_with_row_types" (typing/typemod.ml[1408,50195+14]..[1408,50195+41])
                                                    [
                                                      <arg>
                                                      Labelled "rec_flag"
                                                        expression (typing/typemod.ml[1408,50195+43]..[1408,50195+51])
                                                          Pexp_ident "rec_flag" (typing/typemod.ml[1408,50195+43]..[1408,50195+51])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1409,50247+16]..[1409,50247+77])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (typing/typemod.ml[1409,50247+21]..[1409,50247+23])
                                                            Ppat_var "rs" (typing/typemod.ml[1409,50247+21]..[1409,50247+23])
                                                          expression (typing/typemod.ml[1409,50247+24]..[1409,50247+76]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/typemod.ml[1409,50247+24]..[1409,50247+26])
                                                              Ppat_var "td" (typing/typemod.ml[1409,50247+24]..[1409,50247+26])
                                                            expression (typing/typemod.ml[1409,50247+30]..[1409,50247+76])
                                                              Pexp_construct "Sig_type" (typing/typemod.ml[1409,50247+30]..[1409,50247+38])
                                                              Some
                                                                expression (typing/typemod.ml[1409,50247+38]..[1409,50247+76])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (typing/typemod.ml[1409,50247+39]..[1409,50247+48])
                                                                      Pexp_field
                                                                      expression (typing/typemod.ml[1409,50247+39]..[1409,50247+41])
Pexp_ident "td" (typing/typemod.ml[1409,50247+39]..[1409,50247+41])
                                                                      "typ_id" (typing/typemod.ml[1409,50247+42]..[1409,50247+48])
                                                                    expression (typing/typemod.ml[1409,50247+50]..[1409,50247+61])
                                                                      Pexp_field
                                                                      expression (typing/typemod.ml[1409,50247+50]..[1409,50247+52])
Pexp_ident "td" (typing/typemod.ml[1409,50247+50]..[1409,50247+52])
                                                                      "typ_type" (typing/typemod.ml[1409,50247+53]..[1409,50247+61])
                                                                    expression (typing/typemod.ml[1409,50247+63]..[1409,50247+65])
                                                                      Pexp_ident "rs" (typing/typemod.ml[1409,50247+63]..[1409,50247+65])
                                                                    expression (typing/typemod.ml[1409,50247+67]..[1409,50247+75])
                                                                      Pexp_construct "Exported" (typing/typemod.ml[1409,50247+67]..[1409,50247+75])
                                                                      None
                                                                  ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1410,50325+16]..[1410,50325+21])
                                                          Pexp_ident "decls" (typing/typemod.ml[1410,50325+16]..[1410,50325+21])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1410,50325+22]..[1410,50325+25])
                                                          Pexp_ident "rem" (typing/typemod.ml[1410,50325+22]..[1410,50325+25])
                                                    ]
                                              ]
                                              expression (typing/typemod.ml[1412,50366+12]..[1414,50447+21])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typemod.ml[1412,50366+12]..[1412,50366+63])
                                                    Pexp_construct "::" (typing/typemod.ml[1412,50366+56]..[1412,50366+58])
                                                    Some
                                                      expression (typing/typemod.ml[1412,50366+12]..[1412,50366+63]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typemod.ml[1412,50366+12]..[1412,50366+55])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1412,50366+12]..[1412,50366+17])
                                                              Pexp_ident "mksig" (typing/typemod.ml[1412,50366+12]..[1412,50366+17])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1412,50366+18]..[1412,50366+47])
                                                                  Pexp_construct "Tsig_type" (typing/typemod.ml[1412,50366+19]..[1412,50366+28])
                                                                  Some
                                                                    expression (typing/typemod.ml[1412,50366+29]..[1412,50366+46])
                                                                      Pexp_tuple
                                                                      [
expression (typing/typemod.ml[1412,50366+30]..[1412,50366+38])
  Pexp_ident "rec_flag" (typing/typemod.ml[1412,50366+30]..[1412,50366+38])
expression (typing/typemod.ml[1412,50366+40]..[1412,50366+45])
  Pexp_ident "decls" (typing/typemod.ml[1412,50366+40]..[1412,50366+45])
                                                                      ]
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1412,50366+48]..[1412,50366+51])
                                                                  Pexp_ident "env" (typing/typemod.ml[1412,50366+48]..[1412,50366+51])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1412,50366+52]..[1412,50366+55])
                                                                  Pexp_ident "loc" (typing/typemod.ml[1412,50366+52]..[1412,50366+55])
                                                            ]
                                                          expression (typing/typemod.ml[1412,50366+59]..[1412,50366+63])
                                                            Pexp_ident "trem" (typing/typemod.ml[1412,50366+59]..[1412,50366+63])
                                                        ]
                                                  expression (typing/typemod.ml[1413,50431+12]..[1413,50431+14])
                                                    Pexp_ident "sg" (typing/typemod.ml[1413,50431+12]..[1413,50431+14])
                                                  expression (typing/typemod.ml[1414,50447+12]..[1414,50447+21])
                                                    Pexp_ident "final_env" (typing/typemod.ml[1414,50447+12]..[1414,50447+21])
                                                ]
                                    <case>
                                      pattern (typing/typemod.ml[1415,50469+10]..[1415,50469+31])
                                        Ppat_construct "Psig_typesubst" (typing/typemod.ml[1415,50469+10]..[1415,50469+24])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1415,50469+25]..[1415,50469+31])
                                            Ppat_var "sdecls" (typing/typemod.ml[1415,50469+25]..[1415,50469+31])
                                      expression (typing/typemod.ml[1416,50504+12]..[1443,51656+21])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[1416,50504+16]..[1416,50504+31])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[1416,50504+17]..[1416,50504+22])
                                                  Ppat_var "decls" (typing/typemod.ml[1416,50504+17]..[1416,50504+22])
                                                pattern (typing/typemod.ml[1416,50504+24]..[1416,50504+30])
                                                  Ppat_var "newenv" (typing/typemod.ml[1416,50504+24]..[1416,50504+30])
                                              ]
                                            expression (typing/typemod.ml[1417,50538+14]..[1417,50538+63])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1417,50538+14]..[1417,50538+39])
                                                Pexp_ident "Typedecl.transl_type_decl" (typing/typemod.ml[1417,50538+14]..[1417,50538+39])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1417,50538+40]..[1417,50538+43])
                                                    Pexp_ident "env" (typing/typemod.ml[1417,50538+40]..[1417,50538+43])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1417,50538+44]..[1417,50538+56])
                                                    Pexp_construct "Nonrecursive" (typing/typemod.ml[1417,50538+44]..[1417,50538+56])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1417,50538+57]..[1417,50538+63])
                                                    Pexp_ident "sdecls" (typing/typemod.ml[1417,50538+57]..[1417,50538+63])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[1419,50617+12]..[1443,51656+21])
                                          Pexp_sequence
                                          expression (typing/typemod.ml[1419,50617+12]..[1437,51454+19])
                                            Pexp_apply
                                            expression (typing/typemod.ml[1419,50617+12]..[1419,50617+21])
                                              Pexp_ident "List.iter" (typing/typemod.ml[1419,50617+12]..[1419,50617+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1419,50617+22]..[1437,51454+13])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/typemod.ml[1419,50617+27]..[1419,50617+29])
                                                    Ppat_var "td" (typing/typemod.ml[1419,50617+27]..[1419,50617+29])
                                                  expression (typing/typemod.ml[1420,50650+14]..[1436,51380+73])
                                                    Pexp_sequence
                                                    expression (typing/typemod.ml[1420,50650+14]..[1423,50787+71])
                                                      Pexp_ifthenelse
                                                      expression (typing/typemod.ml[1420,50650+17]..[1421,50726+41])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[1420,50650+47]..[1420,50650+49])
                                                          Pexp_ident "||" (typing/typemod.ml[1420,50650+47]..[1420,50650+49])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1420,50650+17]..[1420,50650+46])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[1420,50650+29]..[1420,50650+31])
                                                                Pexp_ident "<>" (typing/typemod.ml[1420,50650+29]..[1420,50650+31])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1420,50650+17]..[1420,50650+28])
                                                                    Pexp_field
                                                                    expression (typing/typemod.ml[1420,50650+17]..[1420,50650+19])
                                                                      Pexp_ident "td" (typing/typemod.ml[1420,50650+17]..[1420,50650+19])
                                                                    "typ_kind" (typing/typemod.ml[1420,50650+20]..[1420,50650+28])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1420,50650+32]..[1420,50650+46])
                                                                    Pexp_construct "Ttype_abstract" (typing/typemod.ml[1420,50650+32]..[1420,50650+46])
                                                                    None
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1420,50650+50]..[1421,50726+41])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[1420,50650+73]..[1420,50650+75])
                                                                Pexp_ident "||" (typing/typemod.ml[1420,50650+73]..[1420,50650+75])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1420,50650+50]..[1420,50650+72])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[1420,50650+66]..[1420,50650+67])
                                                                      Pexp_ident "=" (typing/typemod.ml[1420,50650+66]..[1420,50650+67])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[1420,50650+50]..[1420,50650+65])
  Pexp_field
  expression (typing/typemod.ml[1420,50650+50]..[1420,50650+52])
    Pexp_ident "td" (typing/typemod.ml[1420,50650+50]..[1420,50650+52])
  "typ_manifest" (typing/typemod.ml[1420,50650+53]..[1420,50650+65])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[1420,50650+68]..[1420,50650+72])
  Pexp_construct "None" (typing/typemod.ml[1420,50650+68]..[1420,50650+72])
  None
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1421,50726+17]..[1421,50726+41])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[1421,50726+32]..[1421,50726+33])
                                                                      Pexp_ident "=" (typing/typemod.ml[1421,50726+32]..[1421,50726+33])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[1421,50726+17]..[1421,50726+31])
  Pexp_field
  expression (typing/typemod.ml[1421,50726+17]..[1421,50726+19])
    Pexp_ident "td" (typing/typemod.ml[1421,50726+17]..[1421,50726+19])
  "typ_private" (typing/typemod.ml[1421,50726+20]..[1421,50726+31])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[1421,50726+34]..[1421,50726+41])
  Pexp_construct "Private" (typing/typemod.ml[1421,50726+34]..[1421,50726+41])
  None
                                                                    ]
                                                              ]
                                                        ]
                                                      expression (typing/typemod.ml[1423,50787+16]..[1423,50787+71])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[1423,50787+16]..[1423,50787+21])
                                                          Pexp_ident "raise" (typing/typemod.ml[1423,50787+16]..[1423,50787+21])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1423,50787+22]..[1423,50787+71])
                                                              Pexp_construct "Error" (typing/typemod.ml[1423,50787+23]..[1423,50787+28])
                                                              Some
                                                                expression (typing/typemod.ml[1423,50787+29]..[1423,50787+70])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (typing/typemod.ml[1423,50787+30]..[1423,50787+40])
                                                                      Pexp_field
                                                                      expression (typing/typemod.ml[1423,50787+30]..[1423,50787+32])
Pexp_ident "td" (typing/typemod.ml[1423,50787+30]..[1423,50787+32])
                                                                      "typ_loc" (typing/typemod.ml[1423,50787+33]..[1423,50787+40])
                                                                    expression (typing/typemod.ml[1423,50787+42]..[1423,50787+45])
                                                                      Pexp_ident "env" (typing/typemod.ml[1423,50787+42]..[1423,50787+45])
                                                                    expression (typing/typemod.ml[1423,50787+47]..[1423,50787+69])
                                                                      Pexp_construct "Invalid_type_subst_rhs" (typing/typemod.ml[1423,50787+47]..[1423,50787+69])
                                                                      None
                                                                  ]
                                                        ]
                                                      None
                                                    expression (typing/typemod.ml[1424,50860+14]..[1436,51380+73])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typemod.ml[1424,50860+18]..[1424,50860+24])
                                                            Ppat_var "params" (typing/typemod.ml[1424,50860+18]..[1424,50860+24])
                                                          expression (typing/typemod.ml[1424,50860+27]..[1424,50860+50])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[1424,50860+27]..[1424,50860+38])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[1424,50860+27]..[1424,50860+29])
                                                                Pexp_ident "td" (typing/typemod.ml[1424,50860+27]..[1424,50860+29])
                                                              "typ_type" (typing/typemod.ml[1424,50860+30]..[1424,50860+38])
                                                            "type_params" (typing/typemod.ml[1424,50860+39]..[1424,50860+50])
                                                      ]
                                                      expression (typing/typemod.ml[1425,50914+14]..[1436,51380+73])
                                                        Pexp_sequence
                                                        expression (typing/typemod.ml[1425,50914+14]..[1426,50961+78])
                                                          Pexp_ifthenelse
                                                          expression (typing/typemod.ml[1425,50914+17]..[1425,50914+46])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1425,50914+17]..[1425,50914+39])
                                                              Pexp_ident "params_are_constrained" (typing/typemod.ml[1425,50914+17]..[1425,50914+39])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1425,50914+40]..[1425,50914+46])
                                                                  Pexp_ident "params" (typing/typemod.ml[1425,50914+40]..[1425,50914+46])
                                                            ]
                                                          expression (typing/typemod.ml[1426,50961+19]..[1426,50961+78])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1426,50961+19]..[1426,50961+24])
                                                              Pexp_ident "raise" (typing/typemod.ml[1426,50961+19]..[1426,50961+24])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1426,50961+24]..[1426,50961+78])
                                                                  Pexp_construct "Error" (typing/typemod.ml[1426,50961+25]..[1426,50961+30])
                                                                  Some
                                                                    expression (typing/typemod.ml[1426,50961+30]..[1426,50961+77])
                                                                      Pexp_tuple
                                                                      [
expression (typing/typemod.ml[1426,50961+31]..[1426,50961+34])
  Pexp_ident "loc" (typing/typemod.ml[1426,50961+31]..[1426,50961+34])
expression (typing/typemod.ml[1426,50961+36]..[1426,50961+39])
  Pexp_ident "env" (typing/typemod.ml[1426,50961+36]..[1426,50961+39])
expression (typing/typemod.ml[1426,50961+41]..[1426,50961+76])
  Pexp_construct "With_cannot_remove_constrained_type" (typing/typemod.ml[1426,50961+41]..[1426,50961+76])
  None
                                                                      ]
                                                            ]
                                                          None
                                                        expression (typing/typemod.ml[1427,51041+14]..[1436,51380+73])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (typing/typemod.ml[1427,51041+18]..[1427,51041+22])
                                                                Ppat_var "info" (typing/typemod.ml[1427,51041+18]..[1427,51041+22])
                                                              expression (typing/typemod.ml[1428,51066+18]..[1434,51314+48])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (typing/typemod.ml[1428,51066+22]..[1428,51066+27])
                                                                      Ppat_var "subst" (typing/typemod.ml[1428,51066+22]..[1428,51066+27])
                                                                    expression (typing/typemod.ml[1429,51096+20]..[1432,51256+36])
                                                                      Pexp_apply
                                                                      expression (typing/typemod.ml[1429,51096+20]..[1429,51096+43])
Pexp_ident "Subst.add_type_function" (typing/typemod.ml[1429,51096+20]..[1429,51096+43])
                                                                      [
<arg>
Nolabel
  expression (typing/typemod.ml[1429,51096+44]..[1429,51096+62])
    Pexp_construct "Pident" (typing/typemod.ml[1429,51096+45]..[1429,51096+51])
    Some
      expression (typing/typemod.ml[1429,51096+52]..[1429,51096+61])
        Pexp_field
        expression (typing/typemod.ml[1429,51096+52]..[1429,51096+54])
          Pexp_ident "td" (typing/typemod.ml[1429,51096+52]..[1429,51096+54])
        "typ_id" (typing/typemod.ml[1429,51096+55]..[1429,51096+61])
<arg>
Labelled "params"
  expression (typing/typemod.ml[1430,51159+23]..[1430,51159+29])
    Pexp_ident "params" (typing/typemod.ml[1430,51159+23]..[1430,51159+29])
<arg>
Labelled "body"
  expression (typing/typemod.ml[1431,51189+28]..[1431,51189+66])
    Pexp_apply
    expression (typing/typemod.ml[1431,51189+29]..[1431,51189+39])
      Pexp_ident "Option.get" (typing/typemod.ml[1431,51189+29]..[1431,51189+39])
    [
      <arg>
      Nolabel
        expression (typing/typemod.ml[1431,51189+40]..[1431,51189+65])
          Pexp_field
          expression (typing/typemod.ml[1431,51189+40]..[1431,51189+51])
            Pexp_field
            expression (typing/typemod.ml[1431,51189+40]..[1431,51189+42])
              Pexp_ident "td" (typing/typemod.ml[1431,51189+40]..[1431,51189+42])
            "typ_type" (typing/typemod.ml[1431,51189+43]..[1431,51189+51])
          "type_manifest" (typing/typemod.ml[1431,51189+52]..[1431,51189+65])
    ]
<arg>
Nolabel
  expression (typing/typemod.ml[1432,51256+22]..[1432,51256+36])
    Pexp_ident "Subst.identity" (typing/typemod.ml[1432,51256+22]..[1432,51256+36])
                                                                      ]
                                                                ]
                                                                expression (typing/typemod.ml[1434,51314+18]..[1434,51314+48])
                                                                  Pexp_construct "Some" (typing/typemod.ml[1434,51314+18]..[1434,51314+22])
                                                                  Some
                                                                    expression (typing/typemod.ml[1434,51314+23]..[1434,51314+48])
                                                                      Pexp_variant "Substituted_away"
                                                                      Some
expression (typing/typemod.ml[1434,51314+42]..[1434,51314+47])
  Pexp_ident "subst" (typing/typemod.ml[1434,51314+42]..[1434,51314+47])
                                                          ]
                                                          expression (typing/typemod.ml[1436,51380+14]..[1436,51380+73])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1436,51380+14]..[1436,51380+40])
                                                              Pexp_ident "Signature_names.check_type" (typing/typemod.ml[1436,51380+14]..[1436,51380+40])
                                                            [
                                                              <arg>
                                                              Optional "info"
                                                                expression (typing/typemod.ml[1436,51380+42]..[1436,51380+46])
                                                                  Pexp_ident "info" (typing/typemod.ml[1436,51380+42]..[1436,51380+46])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1436,51380+47]..[1436,51380+52])
                                                                  Pexp_ident "names" (typing/typemod.ml[1436,51380+47]..[1436,51380+52])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1436,51380+53]..[1436,51380+63])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[1436,51380+53]..[1436,51380+55])
                                                                    Pexp_ident "td" (typing/typemod.ml[1436,51380+53]..[1436,51380+55])
                                                                  "typ_loc" (typing/typemod.ml[1436,51380+56]..[1436,51380+63])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1436,51380+64]..[1436,51380+73])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[1436,51380+64]..[1436,51380+66])
                                                                    Pexp_ident "td" (typing/typemod.ml[1436,51380+64]..[1436,51380+66])
                                                                  "typ_id" (typing/typemod.ml[1436,51380+67]..[1436,51380+73])
                                                            ]
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1437,51454+14]..[1437,51454+19])
                                                  Pexp_ident "decls" (typing/typemod.ml[1437,51454+14]..[1437,51454+19])
                                            ]
                                          expression (typing/typemod.ml[1438,51475+12]..[1443,51656+21])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[1438,51475+16]..[1438,51475+38])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typemod.ml[1438,51475+17]..[1438,51475+21])
                                                      Ppat_var "trem" (typing/typemod.ml[1438,51475+17]..[1438,51475+21])
                                                    pattern (typing/typemod.ml[1438,51475+23]..[1438,51475+26])
                                                      Ppat_var "rem" (typing/typemod.ml[1438,51475+23]..[1438,51475+26])
                                                    pattern (typing/typemod.ml[1438,51475+28]..[1438,51475+37])
                                                      Ppat_var "final_env" (typing/typemod.ml[1438,51475+28]..[1438,51475+37])
                                                  ]
                                                expression (typing/typemod.ml[1438,51475+41]..[1438,51475+63])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[1438,51475+41]..[1438,51475+51])
                                                    Pexp_ident "transl_sig" (typing/typemod.ml[1438,51475+41]..[1438,51475+51])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1438,51475+52]..[1438,51475+58])
                                                        Pexp_ident "newenv" (typing/typemod.ml[1438,51475+52]..[1438,51475+58])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1438,51475+59]..[1438,51475+63])
                                                        Pexp_ident "srem" (typing/typemod.ml[1438,51475+59]..[1438,51475+63])
                                                  ]
                                            ]
                                            expression (typing/typemod.ml[1439,51542+12]..[1443,51656+21])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typemod.ml[1439,51542+16]..[1439,51542+18])
                                                    Ppat_var "sg" (typing/typemod.ml[1439,51542+16]..[1439,51542+18])
                                                  expression (typing/typemod.ml[1439,51542+21]..[1439,51542+24])
                                                    Pexp_ident "rem" (typing/typemod.ml[1439,51542+21]..[1439,51542+24])
                                              ]
                                              expression (typing/typemod.ml[1441,51582+12]..[1443,51656+21])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typemod.ml[1441,51582+12]..[1441,51582+56])
                                                    Pexp_construct "::" (typing/typemod.ml[1441,51582+49]..[1441,51582+51])
                                                    Some
                                                      expression (typing/typemod.ml[1441,51582+12]..[1441,51582+56]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typemod.ml[1441,51582+12]..[1441,51582+48])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1441,51582+12]..[1441,51582+17])
                                                              Pexp_ident "mksig" (typing/typemod.ml[1441,51582+12]..[1441,51582+17])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1441,51582+18]..[1441,51582+40])
                                                                  Pexp_construct "Tsig_typesubst" (typing/typemod.ml[1441,51582+19]..[1441,51582+33])
                                                                  Some
                                                                    expression (typing/typemod.ml[1441,51582+34]..[1441,51582+39])
                                                                      Pexp_ident "decls" (typing/typemod.ml[1441,51582+34]..[1441,51582+39])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1441,51582+41]..[1441,51582+44])
                                                                  Pexp_ident "env" (typing/typemod.ml[1441,51582+41]..[1441,51582+44])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1441,51582+45]..[1441,51582+48])
                                                                  Pexp_ident "loc" (typing/typemod.ml[1441,51582+45]..[1441,51582+48])
                                                            ]
                                                          expression (typing/typemod.ml[1441,51582+52]..[1441,51582+56])
                                                            Pexp_ident "trem" (typing/typemod.ml[1441,51582+52]..[1441,51582+56])
                                                        ]
                                                  expression (typing/typemod.ml[1442,51640+12]..[1442,51640+14])
                                                    Pexp_ident "sg" (typing/typemod.ml[1442,51640+12]..[1442,51640+14])
                                                  expression (typing/typemod.ml[1443,51656+12]..[1443,51656+21])
                                                    Pexp_ident "final_env" (typing/typemod.ml[1443,51656+12]..[1443,51656+21])
                                                ]
                                    <case>
                                      pattern (typing/typemod.ml[1444,51678+10]..[1444,51678+28])
                                        Ppat_construct "Psig_typext" (typing/typemod.ml[1444,51678+10]..[1444,51678+21])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1444,51678+22]..[1444,51678+28])
                                            Ppat_var "styext" (typing/typemod.ml[1444,51678+22]..[1444,51678+28])
                                      expression (typing/typemod.ml[1445,51710+12]..[1457,52290+23])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[1445,51710+16]..[1445,51710+31])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[1445,51710+17]..[1445,51710+22])
                                                  Ppat_var "tyext" (typing/typemod.ml[1445,51710+17]..[1445,51710+22])
                                                pattern (typing/typemod.ml[1445,51710+24]..[1445,51710+30])
                                                  Ppat_var "newenv" (typing/typemod.ml[1445,51710+24]..[1445,51710+30])
                                              ]
                                            expression (typing/typemod.ml[1446,51744+14]..[1446,51744+75])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1446,51744+14]..[1446,51744+44])
                                                Pexp_ident "Typedecl.transl_type_extension" (typing/typemod.ml[1446,51744+14]..[1446,51744+44])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1446,51744+45]..[1446,51744+50])
                                                    Pexp_construct "false" (typing/typemod.ml[1446,51744+45]..[1446,51744+50])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1446,51744+51]..[1446,51744+54])
                                                    Pexp_ident "env" (typing/typemod.ml[1446,51744+51]..[1446,51744+54])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1446,51744+55]..[1446,51744+68])
                                                    Pexp_field
                                                    expression (typing/typemod.ml[1446,51744+55]..[1446,51744+59])
                                                      Pexp_ident "item" (typing/typemod.ml[1446,51744+55]..[1446,51744+59])
                                                    "psig_loc" (typing/typemod.ml[1446,51744+60]..[1446,51744+68])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1446,51744+69]..[1446,51744+75])
                                                    Pexp_ident "styext" (typing/typemod.ml[1446,51744+69]..[1446,51744+75])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[1448,51835+12]..[1457,52290+23])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[1448,51835+16]..[1448,51835+28])
                                                Ppat_var "constructors" (typing/typemod.ml[1448,51835+16]..[1448,51835+28])
                                              expression (typing/typemod.ml[1448,51835+31]..[1448,51835+55])
                                                Pexp_field
                                                expression (typing/typemod.ml[1448,51835+31]..[1448,51835+36])
                                                  Pexp_ident "tyext" (typing/typemod.ml[1448,51835+31]..[1448,51835+36])
                                                "tyext_constructors" (typing/typemod.ml[1448,51835+37]..[1448,51835+55])
                                          ]
                                          expression (typing/typemod.ml[1449,51894+12]..[1457,52290+23])
                                            Pexp_sequence
                                            expression (typing/typemod.ml[1449,51894+12]..[1451,52000+26])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1449,51894+12]..[1449,51894+21])
                                                Pexp_ident "List.iter" (typing/typemod.ml[1449,51894+12]..[1449,51894+21])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1449,51894+22]..[1451,52000+13])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (typing/typemod.ml[1449,51894+27]..[1449,51894+30])
                                                      Ppat_var "ext" (typing/typemod.ml[1449,51894+27]..[1449,51894+30])
                                                    expression (typing/typemod.ml[1450,51928+14]..[1450,51928+71])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[1450,51928+14]..[1450,51928+42])
                                                        Pexp_ident "Signature_names.check_typext" (typing/typemod.ml[1450,51928+14]..[1450,51928+42])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1450,51928+43]..[1450,51928+48])
                                                            Pexp_ident "names" (typing/typemod.ml[1450,51928+43]..[1450,51928+48])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1450,51928+49]..[1450,51928+60])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[1450,51928+49]..[1450,51928+52])
                                                              Pexp_ident "ext" (typing/typemod.ml[1450,51928+49]..[1450,51928+52])
                                                            "ext_loc" (typing/typemod.ml[1450,51928+53]..[1450,51928+60])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1450,51928+61]..[1450,51928+71])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[1450,51928+61]..[1450,51928+64])
                                                              Pexp_ident "ext" (typing/typemod.ml[1450,51928+61]..[1450,51928+64])
                                                            "ext_id" (typing/typemod.ml[1450,51928+65]..[1450,51928+71])
                                                      ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1451,52000+14]..[1451,52000+26])
                                                    Pexp_ident "constructors" (typing/typemod.ml[1451,52000+14]..[1451,52000+26])
                                              ]
                                            expression (typing/typemod.ml[1452,52028+12]..[1457,52290+23])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typemod.ml[1452,52028+16]..[1452,52028+38])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/typemod.ml[1452,52028+17]..[1452,52028+21])
                                                        Ppat_var "trem" (typing/typemod.ml[1452,52028+17]..[1452,52028+21])
                                                      pattern (typing/typemod.ml[1452,52028+23]..[1452,52028+26])
                                                        Ppat_var "rem" (typing/typemod.ml[1452,52028+23]..[1452,52028+26])
                                                      pattern (typing/typemod.ml[1452,52028+28]..[1452,52028+37])
                                                        Ppat_var "final_env" (typing/typemod.ml[1452,52028+28]..[1452,52028+37])
                                                    ]
                                                  expression (typing/typemod.ml[1452,52028+41]..[1452,52028+63])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[1452,52028+41]..[1452,52028+51])
                                                      Pexp_ident "transl_sig" (typing/typemod.ml[1452,52028+41]..[1452,52028+51])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1452,52028+52]..[1452,52028+58])
                                                          Pexp_ident "newenv" (typing/typemod.ml[1452,52028+52]..[1452,52028+58])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1452,52028+59]..[1452,52028+63])
                                                          Pexp_ident "srem" (typing/typemod.ml[1452,52028+59]..[1452,52028+63])
                                                    ]
                                              ]
                                              expression (typing/typemod.ml[1453,52095+14]..[1457,52290+23])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typemod.ml[1453,52095+14]..[1453,52095+55])
                                                    Pexp_construct "::" (typing/typemod.ml[1453,52095+48]..[1453,52095+50])
                                                    Some
                                                      expression (typing/typemod.ml[1453,52095+14]..[1453,52095+55]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typemod.ml[1453,52095+14]..[1453,52095+47])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1453,52095+14]..[1453,52095+19])
                                                              Pexp_ident "mksig" (typing/typemod.ml[1453,52095+14]..[1453,52095+19])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1453,52095+20]..[1453,52095+39])
                                                                  Pexp_construct "Tsig_typext" (typing/typemod.ml[1453,52095+21]..[1453,52095+32])
                                                                  Some
                                                                    expression (typing/typemod.ml[1453,52095+33]..[1453,52095+38])
                                                                      Pexp_ident "tyext" (typing/typemod.ml[1453,52095+33]..[1453,52095+38])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1453,52095+40]..[1453,52095+43])
                                                                  Pexp_ident "env" (typing/typemod.ml[1453,52095+40]..[1453,52095+43])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1453,52095+44]..[1453,52095+47])
                                                                  Pexp_ident "loc" (typing/typemod.ml[1453,52095+44]..[1453,52095+47])
                                                            ]
                                                          expression (typing/typemod.ml[1453,52095+51]..[1453,52095+55])
                                                            Pexp_ident "trem" (typing/typemod.ml[1453,52095+51]..[1453,52095+55])
                                                        ]
                                                  expression (typing/typemod.ml[1454,52152+14]..[1456,52256+32])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[1454,52152+14]..[1454,52152+21])
                                                      Pexp_ident "map_ext" (typing/typemod.ml[1454,52152+14]..[1454,52152+21])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1454,52152+22]..[1456,52256+15])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (typing/typemod.ml[1454,52152+27]..[1454,52152+29])
                                                            Ppat_var "es" (typing/typemod.ml[1454,52152+27]..[1454,52152+29])
                                                          expression (typing/typemod.ml[1454,52152+30]..[1455,52189+66]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/typemod.ml[1454,52152+30]..[1454,52152+33])
                                                              Ppat_var "ext" (typing/typemod.ml[1454,52152+30]..[1454,52152+33])
                                                            expression (typing/typemod.ml[1455,52189+16]..[1455,52189+66])
                                                              Pexp_construct "Sig_typext" (typing/typemod.ml[1455,52189+16]..[1455,52189+26])
                                                              Some
                                                                expression (typing/typemod.ml[1455,52189+26]..[1455,52189+66])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (typing/typemod.ml[1455,52189+27]..[1455,52189+37])
                                                                      Pexp_field
                                                                      expression (typing/typemod.ml[1455,52189+27]..[1455,52189+30])
Pexp_ident "ext" (typing/typemod.ml[1455,52189+27]..[1455,52189+30])
                                                                      "ext_id" (typing/typemod.ml[1455,52189+31]..[1455,52189+37])
                                                                    expression (typing/typemod.ml[1455,52189+39]..[1455,52189+51])
                                                                      Pexp_field
                                                                      expression (typing/typemod.ml[1455,52189+39]..[1455,52189+42])
Pexp_ident "ext" (typing/typemod.ml[1455,52189+39]..[1455,52189+42])
                                                                      "ext_type" (typing/typemod.ml[1455,52189+43]..[1455,52189+51])
                                                                    expression (typing/typemod.ml[1455,52189+53]..[1455,52189+55])
                                                                      Pexp_ident "es" (typing/typemod.ml[1455,52189+53]..[1455,52189+55])
                                                                    expression (typing/typemod.ml[1455,52189+57]..[1455,52189+65])
                                                                      Pexp_construct "Exported" (typing/typemod.ml[1455,52189+57]..[1455,52189+65])
                                                                      None
                                                                  ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1456,52256+16]..[1456,52256+28])
                                                          Pexp_ident "constructors" (typing/typemod.ml[1456,52256+16]..[1456,52256+28])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1456,52256+29]..[1456,52256+32])
                                                          Pexp_ident "rem" (typing/typemod.ml[1456,52256+29]..[1456,52256+32])
                                                    ]
                                                  expression (typing/typemod.ml[1457,52290+14]..[1457,52290+23])
                                                    Pexp_ident "final_env" (typing/typemod.ml[1457,52290+14]..[1457,52290+23])
                                                ]
                                    <case>
                                      pattern (typing/typemod.ml[1458,52314+10]..[1458,52314+29])
                                        Ppat_construct "Psig_exception" (typing/typemod.ml[1458,52314+10]..[1458,52314+24])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1458,52314+25]..[1458,52314+29])
                                            Ppat_var "sext" (typing/typemod.ml[1458,52314+25]..[1458,52314+29])
                                      expression (typing/typemod.ml[1459,52347+12]..[1469,52869+21])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[1459,52347+16]..[1459,52347+29])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[1459,52347+17]..[1459,52347+20])
                                                  Ppat_var "ext" (typing/typemod.ml[1459,52347+17]..[1459,52347+20])
                                                pattern (typing/typemod.ml[1459,52347+22]..[1459,52347+28])
                                                  Ppat_var "newenv" (typing/typemod.ml[1459,52347+22]..[1459,52347+28])
                                              ]
                                            expression (typing/typemod.ml[1459,52347+32]..[1459,52347+71])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1459,52347+32]..[1459,52347+62])
                                                Pexp_ident "Typedecl.transl_type_exception" (typing/typemod.ml[1459,52347+32]..[1459,52347+62])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1459,52347+63]..[1459,52347+66])
                                                    Pexp_ident "env" (typing/typemod.ml[1459,52347+63]..[1459,52347+66])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1459,52347+67]..[1459,52347+71])
                                                    Pexp_ident "sext" (typing/typemod.ml[1459,52347+67]..[1459,52347+71])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[1460,52422+12]..[1469,52869+21])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[1460,52422+16]..[1460,52422+27])
                                                Ppat_var "constructor" (typing/typemod.ml[1460,52422+16]..[1460,52422+27])
                                              expression (typing/typemod.ml[1460,52422+30]..[1460,52422+51])
                                                Pexp_field
                                                expression (typing/typemod.ml[1460,52422+30]..[1460,52422+33])
                                                  Pexp_ident "ext" (typing/typemod.ml[1460,52422+30]..[1460,52422+33])
                                                "tyexn_constructor" (typing/typemod.ml[1460,52422+34]..[1460,52422+51])
                                          ]
                                          expression (typing/typemod.ml[1461,52477+12]..[1469,52869+21])
                                            Pexp_sequence
                                            expression (typing/typemod.ml[1461,52477+12]..[1462,52544+32])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1461,52477+12]..[1461,52477+40])
                                                Pexp_ident "Signature_names.check_typext" (typing/typemod.ml[1461,52477+12]..[1461,52477+40])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1461,52477+41]..[1461,52477+46])
                                                    Pexp_ident "names" (typing/typemod.ml[1461,52477+41]..[1461,52477+46])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1461,52477+47]..[1461,52477+66])
                                                    Pexp_field
                                                    expression (typing/typemod.ml[1461,52477+47]..[1461,52477+58])
                                                      Pexp_ident "constructor" (typing/typemod.ml[1461,52477+47]..[1461,52477+58])
                                                    "ext_loc" (typing/typemod.ml[1461,52477+59]..[1461,52477+66])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1462,52544+14]..[1462,52544+32])
                                                    Pexp_field
                                                    expression (typing/typemod.ml[1462,52544+14]..[1462,52544+25])
                                                      Pexp_ident "constructor" (typing/typemod.ml[1462,52544+14]..[1462,52544+25])
                                                    "ext_id" (typing/typemod.ml[1462,52544+26]..[1462,52544+32])
                                              ]
                                            expression (typing/typemod.ml[1463,52578+12]..[1469,52869+21])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typemod.ml[1463,52578+16]..[1463,52578+38])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/typemod.ml[1463,52578+17]..[1463,52578+21])
                                                        Ppat_var "trem" (typing/typemod.ml[1463,52578+17]..[1463,52578+21])
                                                      pattern (typing/typemod.ml[1463,52578+23]..[1463,52578+26])
                                                        Ppat_var "rem" (typing/typemod.ml[1463,52578+23]..[1463,52578+26])
                                                      pattern (typing/typemod.ml[1463,52578+28]..[1463,52578+37])
                                                        Ppat_var "final_env" (typing/typemod.ml[1463,52578+28]..[1463,52578+37])
                                                    ]
                                                  expression (typing/typemod.ml[1463,52578+41]..[1463,52578+63])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[1463,52578+41]..[1463,52578+51])
                                                      Pexp_ident "transl_sig" (typing/typemod.ml[1463,52578+41]..[1463,52578+51])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1463,52578+52]..[1463,52578+58])
                                                          Pexp_ident "newenv" (typing/typemod.ml[1463,52578+52]..[1463,52578+58])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1463,52578+59]..[1463,52578+63])
                                                          Pexp_ident "srem" (typing/typemod.ml[1463,52578+59]..[1463,52578+63])
                                                    ]
                                              ]
                                              expression (typing/typemod.ml[1464,52645+12]..[1469,52869+21])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typemod.ml[1464,52645+12]..[1464,52645+54])
                                                    Pexp_construct "::" (typing/typemod.ml[1464,52645+47]..[1464,52645+49])
                                                    Some
                                                      expression (typing/typemod.ml[1464,52645+12]..[1464,52645+54]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typemod.ml[1464,52645+12]..[1464,52645+46])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1464,52645+12]..[1464,52645+17])
                                                              Pexp_ident "mksig" (typing/typemod.ml[1464,52645+12]..[1464,52645+17])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1464,52645+18]..[1464,52645+38])
                                                                  Pexp_construct "Tsig_exception" (typing/typemod.ml[1464,52645+19]..[1464,52645+33])
                                                                  Some
                                                                    expression (typing/typemod.ml[1464,52645+34]..[1464,52645+37])
                                                                      Pexp_ident "ext" (typing/typemod.ml[1464,52645+34]..[1464,52645+37])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1464,52645+39]..[1464,52645+42])
                                                                  Pexp_ident "env" (typing/typemod.ml[1464,52645+39]..[1464,52645+42])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1464,52645+43]..[1464,52645+46])
                                                                  Pexp_ident "loc" (typing/typemod.ml[1464,52645+43]..[1464,52645+46])
                                                            ]
                                                          expression (typing/typemod.ml[1464,52645+50]..[1464,52645+54])
                                                            Pexp_ident "trem" (typing/typemod.ml[1464,52645+50]..[1464,52645+54])
                                                        ]
                                                  expression (typing/typemod.ml[1465,52701+12]..[1468,52828+39])
                                                    Pexp_construct "::" (typing/typemod.ml[1468,52828+33]..[1468,52828+35])
                                                    Some
                                                      expression (typing/typemod.ml[1465,52701+12]..[1468,52828+39]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typemod.ml[1465,52701+12]..[1468,52828+32])
                                                            Pexp_construct "Sig_typext" (typing/typemod.ml[1465,52701+12]..[1465,52701+22])
                                                            Some
                                                              expression (typing/typemod.ml[1465,52701+22]..[1468,52828+32])
                                                                Pexp_tuple
                                                                [
                                                                  expression (typing/typemod.ml[1465,52701+23]..[1465,52701+41])
                                                                    Pexp_field
                                                                    expression (typing/typemod.ml[1465,52701+23]..[1465,52701+34])
                                                                      Pexp_ident "constructor" (typing/typemod.ml[1465,52701+23]..[1465,52701+34])
                                                                    "ext_id" (typing/typemod.ml[1465,52701+35]..[1465,52701+41])
                                                                  expression (typing/typemod.ml[1466,52744+23]..[1466,52744+43])
                                                                    Pexp_field
                                                                    expression (typing/typemod.ml[1466,52744+23]..[1466,52744+34])
                                                                      Pexp_ident "constructor" (typing/typemod.ml[1466,52744+23]..[1466,52744+34])
                                                                    "ext_type" (typing/typemod.ml[1466,52744+35]..[1466,52744+43])
                                                                  expression (typing/typemod.ml[1467,52789+23]..[1467,52789+37])
                                                                    Pexp_construct "Text_exception" (typing/typemod.ml[1467,52789+23]..[1467,52789+37])
                                                                    None
                                                                  expression (typing/typemod.ml[1468,52828+23]..[1468,52828+31])
                                                                    Pexp_construct "Exported" (typing/typemod.ml[1468,52828+23]..[1468,52828+31])
                                                                    None
                                                                ]
                                                          expression (typing/typemod.ml[1468,52828+36]..[1468,52828+39])
                                                            Pexp_ident "rem" (typing/typemod.ml[1468,52828+36]..[1468,52828+39])
                                                        ]
                                                  expression (typing/typemod.ml[1469,52869+12]..[1469,52869+21])
                                                    Pexp_ident "final_env" (typing/typemod.ml[1469,52869+12]..[1469,52869+21])
                                                ]
                                    <case>
                                      pattern (typing/typemod.ml[1470,52891+10]..[1470,52891+25])
                                        Ppat_construct "Psig_module" (typing/typemod.ml[1470,52891+10]..[1470,52891+21])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1470,52891+22]..[1470,52891+25])
                                            Ppat_var "pmd" (typing/typemod.ml[1470,52891+22]..[1470,52891+25])
                                      expression (typing/typemod.ml[1471,52920+12]..[1507,54377+21])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[1471,52920+16]..[1471,52920+21])
                                              Ppat_var "scope" (typing/typemod.ml[1471,52920+16]..[1471,52920+21])
                                            expression (typing/typemod.ml[1471,52920+24]..[1471,52920+45])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1471,52920+24]..[1471,52920+42])
                                                Pexp_ident "Ctype.create_scope" (typing/typemod.ml[1471,52920+24]..[1471,52920+42])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1471,52920+43]..[1471,52920+45])
                                                    Pexp_construct "()" (typing/typemod.ml[1471,52920+43]..[1471,52920+45])
                                                    None
                                              ]
                                        ]
                                        expression (typing/typemod.ml[1472,52969+12]..[1507,54377+21])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[1472,52969+16]..[1472,52969+20])
                                                Ppat_var "tmty" (typing/typemod.ml[1472,52969+16]..[1472,52969+20])
                                              expression (typing/typemod.ml[1473,52992+14]..[1474,53058+59])
                                                Pexp_apply
                                                expression (typing/typemod.ml[1473,52992+14]..[1473,52992+46])
                                                  Pexp_ident "Builtin_attributes.warning_scope" (typing/typemod.ml[1473,52992+14]..[1473,52992+46])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1473,52992+47]..[1473,52992+65])
                                                      Pexp_field
                                                      expression (typing/typemod.ml[1473,52992+47]..[1473,52992+50])
                                                        Pexp_ident "pmd" (typing/typemod.ml[1473,52992+47]..[1473,52992+50])
                                                      "pmd_attributes" (typing/typemod.ml[1473,52992+51]..[1473,52992+65])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1474,53058+16]..[1474,53058+59])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (typing/typemod.ml[1474,53058+21]..[1474,53058+23])
                                                        Ppat_construct "()" (typing/typemod.ml[1474,53058+21]..[1474,53058+23])
                                                        None
                                                      expression (typing/typemod.ml[1474,53058+27]..[1474,53058+58])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[1474,53058+27]..[1474,53058+41])
                                                          Pexp_ident "transl_modtype" (typing/typemod.ml[1474,53058+27]..[1474,53058+41])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1474,53058+42]..[1474,53058+45])
                                                              Pexp_ident "env" (typing/typemod.ml[1474,53058+42]..[1474,53058+45])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1474,53058+46]..[1474,53058+58])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[1474,53058+46]..[1474,53058+49])
                                                                Pexp_ident "pmd" (typing/typemod.ml[1474,53058+46]..[1474,53058+49])
                                                              "pmd_type" (typing/typemod.ml[1474,53058+50]..[1474,53058+58])
                                                        ]
                                                ]
                                          ]
                                          expression (typing/typemod.ml[1476,53133+12]..[1507,54377+21])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[1476,53133+16]..[1476,53133+20])
                                                  Ppat_var "pres" (typing/typemod.ml[1476,53133+16]..[1476,53133+20])
                                                expression (typing/typemod.ml[1477,53156+14]..[1479,53236+31])
                                                  Pexp_match
                                                  expression (typing/typemod.ml[1477,53156+20]..[1477,53156+33])
                                                    Pexp_field
                                                    expression (typing/typemod.ml[1477,53156+20]..[1477,53156+24])
                                                      Pexp_ident "tmty" (typing/typemod.ml[1477,53156+20]..[1477,53156+24])
                                                    "mty_type" (typing/typemod.ml[1477,53156+25]..[1477,53156+33])
                                                  [
                                                    <case>
                                                      pattern (typing/typemod.ml[1478,53195+16]..[1478,53195+27])
                                                        Ppat_construct "Mty_alias" (typing/typemod.ml[1478,53195+16]..[1478,53195+25])
                                                        Some
                                                          []
                                                          pattern (typing/typemod.ml[1478,53195+26]..[1478,53195+27])
                                                            Ppat_any
                                                      expression (typing/typemod.ml[1478,53195+31]..[1478,53195+40])
                                                        Pexp_construct "Mp_absent" (typing/typemod.ml[1478,53195+31]..[1478,53195+40])
                                                        None
                                                    <case>
                                                      pattern (typing/typemod.ml[1479,53236+16]..[1479,53236+17])
                                                        Ppat_any
                                                      expression (typing/typemod.ml[1479,53236+21]..[1479,53236+31])
                                                        Pexp_construct "Mp_present" (typing/typemod.ml[1479,53236+21]..[1479,53236+31])
                                                        None
                                                  ]
                                            ]
                                            expression (typing/typemod.ml[1481,53283+12]..[1507,54377+21])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typemod.ml[1481,53283+16]..[1481,53283+18])
                                                    Ppat_var "md" (typing/typemod.ml[1481,53283+16]..[1481,53283+18])
                                                  expression (typing/typemod.ml[1481,53283+21]..[1486,53493+13])
                                                    Pexp_record
                                                    [
                                                      "md_type" (typing/typemod.ml[1482,53306+14]..[1482,53306+21])
                                                        expression (typing/typemod.ml[1482,53306+22]..[1482,53306+35])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[1482,53306+22]..[1482,53306+26])
                                                            Pexp_ident "tmty" (typing/typemod.ml[1482,53306+22]..[1482,53306+26])
                                                          "mty_type" (typing/typemod.ml[1482,53306+27]..[1482,53306+35])
                                                      "md_attributes" (typing/typemod.ml[1483,53343+14]..[1483,53343+27])
                                                        expression (typing/typemod.ml[1483,53343+28]..[1483,53343+46])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[1483,53343+28]..[1483,53343+31])
                                                            Pexp_ident "pmd" (typing/typemod.ml[1483,53343+28]..[1483,53343+31])
                                                          "pmd_attributes" (typing/typemod.ml[1483,53343+32]..[1483,53343+46])
                                                      "md_loc" (typing/typemod.ml[1484,53391+14]..[1484,53391+20])
                                                        expression (typing/typemod.ml[1484,53391+21]..[1484,53391+32])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[1484,53391+21]..[1484,53391+24])
                                                            Pexp_ident "pmd" (typing/typemod.ml[1484,53391+21]..[1484,53391+24])
                                                          "pmd_loc" (typing/typemod.ml[1484,53391+25]..[1484,53391+32])
                                                      "md_uid" (typing/typemod.ml[1485,53425+14]..[1485,53425+20])
                                                        expression (typing/typemod.ml[1485,53425+23]..[1485,53425+66])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[1485,53425+23]..[1485,53425+29])
                                                            Pexp_ident "Uid.mk" (typing/typemod.ml[1485,53425+23]..[1485,53425+29])
                                                          [
                                                            <arg>
                                                            Labelled "current_unit"
                                                              expression (typing/typemod.ml[1485,53425+44]..[1485,53425+66])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[1485,53425+45]..[1485,53425+62])
                                                                  Pexp_ident "Env.get_unit_name" (typing/typemod.ml[1485,53425+45]..[1485,53425+62])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[1485,53425+63]..[1485,53425+65])
                                                                      Pexp_construct "()" (typing/typemod.ml[1485,53425+63]..[1485,53425+65])
                                                                      None
                                                                ]
                                                          ]
                                                    ]
                                                    None
                                              ]
                                              expression (typing/typemod.ml[1488,53522+12]..[1507,54377+21])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typemod.ml[1488,53522+16]..[1488,53522+26])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typemod.ml[1488,53522+16]..[1488,53522+18])
                                                          Ppat_var "id" (typing/typemod.ml[1488,53522+16]..[1488,53522+18])
                                                        pattern (typing/typemod.ml[1488,53522+20]..[1488,53522+26])
                                                          Ppat_var "newenv" (typing/typemod.ml[1488,53522+20]..[1488,53522+26])
                                                      ]
                                                    expression (typing/typemod.ml[1489,53551+14]..[1496,53851+31])
                                                      Pexp_match
                                                      expression (typing/typemod.ml[1489,53551+20]..[1489,53551+36])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[1489,53551+20]..[1489,53551+32])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[1489,53551+20]..[1489,53551+23])
                                                            Pexp_ident "pmd" (typing/typemod.ml[1489,53551+20]..[1489,53551+23])
                                                          "pmd_name" (typing/typemod.ml[1489,53551+24]..[1489,53551+32])
                                                        "txt" (typing/typemod.ml[1489,53551+33]..[1489,53551+36])
                                                      [
                                                        <case>
                                                          pattern (typing/typemod.ml[1490,53593+16]..[1490,53593+20])
                                                            Ppat_construct "None" (typing/typemod.ml[1490,53593+16]..[1490,53593+20])
                                                            None
                                                          expression (typing/typemod.ml[1490,53593+24]..[1490,53593+33])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typemod.ml[1490,53593+24]..[1490,53593+28])
                                                                Pexp_construct "None" (typing/typemod.ml[1490,53593+24]..[1490,53593+28])
                                                                None
                                                              expression (typing/typemod.ml[1490,53593+30]..[1490,53593+33])
                                                                Pexp_ident "env" (typing/typemod.ml[1490,53593+30]..[1490,53593+33])
                                                            ]
                                                        <case>
                                                          pattern (typing/typemod.ml[1491,53627+16]..[1491,53627+25])
                                                            Ppat_construct "Some" (typing/typemod.ml[1491,53627+16]..[1491,53627+20])
                                                            Some
                                                              []
                                                              pattern (typing/typemod.ml[1491,53627+21]..[1491,53627+25])
                                                                Ppat_var "name" (typing/typemod.ml[1491,53627+21]..[1491,53627+25])
                                                          expression (typing/typemod.ml[1492,53656+16]..[1496,53851+31])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (typing/typemod.ml[1492,53656+20]..[1492,53656+30])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (typing/typemod.ml[1492,53656+20]..[1492,53656+22])
                                                                      Ppat_var "id" (typing/typemod.ml[1492,53656+20]..[1492,53656+22])
                                                                    pattern (typing/typemod.ml[1492,53656+24]..[1492,53656+30])
                                                                      Ppat_var "newenv" (typing/typemod.ml[1492,53656+24]..[1492,53656+30])
                                                                  ]
                                                                expression (typing/typemod.ml[1493,53689+18]..[1493,53689+70])
                                                                  Pexp_apply
                                                                  expression (typing/typemod.ml[1493,53689+18]..[1493,53689+46])
                                                                    Pexp_ident "Env.enter_module_declaration" (typing/typemod.ml[1493,53689+18]..[1493,53689+46])
                                                                  [
                                                                    <arg>
                                                                    Labelled "scope"
                                                                      expression (typing/typemod.ml[1493,53689+48]..[1493,53689+53])
Pexp_ident "scope" (typing/typemod.ml[1493,53689+48]..[1493,53689+53])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[1493,53689+54]..[1493,53689+58])
Pexp_ident "name" (typing/typemod.ml[1493,53689+54]..[1493,53689+58])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[1493,53689+59]..[1493,53689+63])
Pexp_ident "pres" (typing/typemod.ml[1493,53689+59]..[1493,53689+63])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[1493,53689+64]..[1493,53689+66])
Pexp_ident "md" (typing/typemod.ml[1493,53689+64]..[1493,53689+66])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[1493,53689+67]..[1493,53689+70])
Pexp_ident "env" (typing/typemod.ml[1493,53689+67]..[1493,53689+70])
                                                                  ]
                                                            ]
                                                            expression (typing/typemod.ml[1495,53779+16]..[1496,53851+31])
                                                              Pexp_sequence
                                                              expression (typing/typemod.ml[1495,53779+16]..[1495,53779+70])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[1495,53779+16]..[1495,53779+44])
                                                                  Pexp_ident "Signature_names.check_module" (typing/typemod.ml[1495,53779+16]..[1495,53779+44])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[1495,53779+45]..[1495,53779+50])
                                                                      Pexp_ident "names" (typing/typemod.ml[1495,53779+45]..[1495,53779+50])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[1495,53779+51]..[1495,53779+67])
                                                                      Pexp_field
                                                                      expression (typing/typemod.ml[1495,53779+51]..[1495,53779+63])
Pexp_field
expression (typing/typemod.ml[1495,53779+51]..[1495,53779+54])
  Pexp_ident "pmd" (typing/typemod.ml[1495,53779+51]..[1495,53779+54])
"pmd_name" (typing/typemod.ml[1495,53779+55]..[1495,53779+63])
                                                                      "loc" (typing/typemod.ml[1495,53779+64]..[1495,53779+67])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[1495,53779+68]..[1495,53779+70])
                                                                      Pexp_ident "id" (typing/typemod.ml[1495,53779+68]..[1495,53779+70])
                                                                ]
                                                              expression (typing/typemod.ml[1496,53851+16]..[1496,53851+31])
                                                                Pexp_tuple
                                                                [
                                                                  expression (typing/typemod.ml[1496,53851+16]..[1496,53851+23])
                                                                    Pexp_construct "Some" (typing/typemod.ml[1496,53851+16]..[1496,53851+20])
                                                                    Some
                                                                      expression (typing/typemod.ml[1496,53851+21]..[1496,53851+23])
Pexp_ident "id" (typing/typemod.ml[1496,53851+21]..[1496,53851+23])
                                                                  expression (typing/typemod.ml[1496,53851+25]..[1496,53851+31])
                                                                    Pexp_ident "newenv" (typing/typemod.ml[1496,53851+25]..[1496,53851+31])
                                                                ]
                                                      ]
                                                ]
                                                expression (typing/typemod.ml[1498,53898+12]..[1507,54377+21])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typemod.ml[1498,53898+16]..[1498,53898+38])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typemod.ml[1498,53898+17]..[1498,53898+21])
                                                            Ppat_var "trem" (typing/typemod.ml[1498,53898+17]..[1498,53898+21])
                                                          pattern (typing/typemod.ml[1498,53898+23]..[1498,53898+26])
                                                            Ppat_var "rem" (typing/typemod.ml[1498,53898+23]..[1498,53898+26])
                                                          pattern (typing/typemod.ml[1498,53898+28]..[1498,53898+37])
                                                            Ppat_var "final_env" (typing/typemod.ml[1498,53898+28]..[1498,53898+37])
                                                        ]
                                                      expression (typing/typemod.ml[1498,53898+41]..[1498,53898+63])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[1498,53898+41]..[1498,53898+51])
                                                          Pexp_ident "transl_sig" (typing/typemod.ml[1498,53898+41]..[1498,53898+51])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1498,53898+52]..[1498,53898+58])
                                                              Pexp_ident "newenv" (typing/typemod.ml[1498,53898+52]..[1498,53898+58])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1498,53898+59]..[1498,53898+63])
                                                              Pexp_ident "srem" (typing/typemod.ml[1498,53898+59]..[1498,53898+63])
                                                        ]
                                                  ]
                                                  expression (typing/typemod.ml[1499,53965+12]..[1507,54377+21])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[1499,53965+12]..[1503,54212+29])
                                                        Pexp_construct "::" (typing/typemod.ml[1503,54212+22]..[1503,54212+24])
                                                        Some
                                                          expression (typing/typemod.ml[1499,53965+12]..[1503,54212+29]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typemod.ml[1499,53965+12]..[1503,54212+21])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[1499,53965+12]..[1499,53965+17])
                                                                  Pexp_ident "mksig" (typing/typemod.ml[1499,53965+12]..[1499,53965+17])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[1499,53965+18]..[1502,54145+66])
                                                                      Pexp_construct "Tsig_module" (typing/typemod.ml[1499,53965+19]..[1499,53965+30])
                                                                      Some
expression (typing/typemod.ml[1499,53965+31]..[1502,54145+65])
  Pexp_record
  [
    "md_id" (typing/typemod.ml[1499,53965+32]..[1499,53965+37])
      expression (typing/typemod.ml[1499,53965+38]..[1499,53965+40])
        Pexp_ident "id" (typing/typemod.ml[1499,53965+38]..[1499,53965+40])
    "md_name" (typing/typemod.ml[1499,53965+42]..[1499,53965+49])
      expression (typing/typemod.ml[1499,53965+50]..[1499,53965+62])
        Pexp_field
        expression (typing/typemod.ml[1499,53965+50]..[1499,53965+53])
          Pexp_ident "pmd" (typing/typemod.ml[1499,53965+50]..[1499,53965+53])
        "pmd_name" (typing/typemod.ml[1499,53965+54]..[1499,53965+62])
    "md_presence" (typing/typemod.ml[1500,54029+32]..[1500,54029+43])
      expression (typing/typemod.ml[1500,54029+44]..[1500,54029+48])
        Pexp_ident "pres" (typing/typemod.ml[1500,54029+44]..[1500,54029+48])
    "md_type" (typing/typemod.ml[1500,54029+50]..[1500,54029+57])
      expression (typing/typemod.ml[1500,54029+58]..[1500,54029+62])
        Pexp_ident "tmty" (typing/typemod.ml[1500,54029+58]..[1500,54029+62])
    "md_loc" (typing/typemod.ml[1501,54093+32]..[1501,54093+38])
      expression (typing/typemod.ml[1501,54093+39]..[1501,54093+50])
        Pexp_field
        expression (typing/typemod.ml[1501,54093+39]..[1501,54093+42])
          Pexp_ident "pmd" (typing/typemod.ml[1501,54093+39]..[1501,54093+42])
        "pmd_loc" (typing/typemod.ml[1501,54093+43]..[1501,54093+50])
    "md_attributes" (typing/typemod.ml[1502,54145+32]..[1502,54145+45])
      expression (typing/typemod.ml[1502,54145+46]..[1502,54145+64])
        Pexp_field
        expression (typing/typemod.ml[1502,54145+46]..[1502,54145+49])
          Pexp_ident "pmd" (typing/typemod.ml[1502,54145+46]..[1502,54145+49])
        "pmd_attributes" (typing/typemod.ml[1502,54145+50]..[1502,54145+64])
  ]
  None
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[1503,54212+14]..[1503,54212+17])
                                                                      Pexp_ident "env" (typing/typemod.ml[1503,54212+14]..[1503,54212+17])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[1503,54212+18]..[1503,54212+21])
                                                                      Pexp_ident "loc" (typing/typemod.ml[1503,54212+18]..[1503,54212+21])
                                                                ]
                                                              expression (typing/typemod.ml[1503,54212+25]..[1503,54212+29])
                                                                Pexp_ident "trem" (typing/typemod.ml[1503,54212+25]..[1503,54212+29])
                                                            ]
                                                      expression (typing/typemod.ml[1504,54243+12]..[1506,54297+78])
                                                        Pexp_match
                                                        expression (typing/typemod.ml[1504,54243+19]..[1504,54243+21])
                                                          Pexp_ident "id" (typing/typemod.ml[1504,54243+19]..[1504,54243+21])
                                                        [
                                                          <case>
                                                            pattern (typing/typemod.ml[1505,54270+15]..[1505,54270+19])
                                                              Ppat_construct "None" (typing/typemod.ml[1505,54270+15]..[1505,54270+19])
                                                              None
                                                            expression (typing/typemod.ml[1505,54270+23]..[1505,54270+26])
                                                              Pexp_ident "rem" (typing/typemod.ml[1505,54270+23]..[1505,54270+26])
                                                          <case>
                                                            pattern (typing/typemod.ml[1506,54297+15]..[1506,54297+22])
                                                              Ppat_construct "Some" (typing/typemod.ml[1506,54297+15]..[1506,54297+19])
                                                              Some
                                                                []
                                                                pattern (typing/typemod.ml[1506,54297+20]..[1506,54297+22])
                                                                  Ppat_var "id" (typing/typemod.ml[1506,54297+20]..[1506,54297+22])
                                                            expression (typing/typemod.ml[1506,54297+26]..[1506,54297+77])
                                                              Pexp_construct "::" (typing/typemod.ml[1506,54297+71]..[1506,54297+73])
                                                              Some
                                                                expression (typing/typemod.ml[1506,54297+26]..[1506,54297+77]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (typing/typemod.ml[1506,54297+26]..[1506,54297+70])
                                                                      Pexp_construct "Sig_module" (typing/typemod.ml[1506,54297+26]..[1506,54297+36])
                                                                      Some
expression (typing/typemod.ml[1506,54297+36]..[1506,54297+70])
  Pexp_tuple
  [
    expression (typing/typemod.ml[1506,54297+37]..[1506,54297+39])
      Pexp_ident "id" (typing/typemod.ml[1506,54297+37]..[1506,54297+39])
    expression (typing/typemod.ml[1506,54297+41]..[1506,54297+45])
      Pexp_ident "pres" (typing/typemod.ml[1506,54297+41]..[1506,54297+45])
    expression (typing/typemod.ml[1506,54297+47]..[1506,54297+49])
      Pexp_ident "md" (typing/typemod.ml[1506,54297+47]..[1506,54297+49])
    expression (typing/typemod.ml[1506,54297+51]..[1506,54297+59])
      Pexp_construct "Trec_not" (typing/typemod.ml[1506,54297+51]..[1506,54297+59])
      None
    expression (typing/typemod.ml[1506,54297+61]..[1506,54297+69])
      Pexp_construct "Exported" (typing/typemod.ml[1506,54297+61]..[1506,54297+69])
      None
  ]
                                                                    expression (typing/typemod.ml[1506,54297+74]..[1506,54297+77])
                                                                      Pexp_ident "rem" (typing/typemod.ml[1506,54297+74]..[1506,54297+77])
                                                                  ]
                                                        ]
                                                      expression (typing/typemod.ml[1507,54377+12]..[1507,54377+21])
                                                        Pexp_ident "final_env" (typing/typemod.ml[1507,54377+12]..[1507,54377+21])
                                                    ]
                                    <case>
                                      pattern (typing/typemod.ml[1508,54399+10]..[1508,54399+27])
                                        Ppat_construct "Psig_modsubst" (typing/typemod.ml[1508,54399+10]..[1508,54399+23])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1508,54399+24]..[1508,54399+27])
                                            Ppat_var "pms" (typing/typemod.ml[1508,54399+24]..[1508,54399+27])
                                      expression (typing/typemod.ml[1509,54430+12]..[1544,55860+21])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[1509,54430+16]..[1509,54430+21])
                                              Ppat_var "scope" (typing/typemod.ml[1509,54430+16]..[1509,54430+21])
                                            expression (typing/typemod.ml[1509,54430+24]..[1509,54430+45])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1509,54430+24]..[1509,54430+42])
                                                Pexp_ident "Ctype.create_scope" (typing/typemod.ml[1509,54430+24]..[1509,54430+42])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1509,54430+43]..[1509,54430+45])
                                                    Pexp_construct "()" (typing/typemod.ml[1509,54430+43]..[1509,54430+45])
                                                    None
                                              ]
                                        ]
                                        expression (typing/typemod.ml[1510,54479+12]..[1544,55860+21])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[1510,54479+16]..[1510,54479+24])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/typemod.ml[1510,54479+16]..[1510,54479+20])
                                                    Ppat_var "path" (typing/typemod.ml[1510,54479+16]..[1510,54479+20])
                                                  pattern (typing/typemod.ml[1510,54479+22]..[1510,54479+24])
                                                    Ppat_var "md" (typing/typemod.ml[1510,54479+22]..[1510,54479+24])
                                                ]
                                              expression (typing/typemod.ml[1511,54506+14]..[1512,54564+40])
                                                Pexp_apply
                                                expression (typing/typemod.ml[1511,54506+14]..[1511,54506+31])
                                                  Pexp_ident "Env.lookup_module" (typing/typemod.ml[1511,54506+14]..[1511,54506+31])
                                                [
                                                  <arg>
                                                  Labelled "loc"
                                                    expression (typing/typemod.ml[1511,54506+37]..[1511,54506+57])
                                                      Pexp_field
                                                      expression (typing/typemod.ml[1511,54506+37]..[1511,54506+53])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[1511,54506+37]..[1511,54506+40])
                                                          Pexp_ident "pms" (typing/typemod.ml[1511,54506+37]..[1511,54506+40])
                                                        "pms_manifest" (typing/typemod.ml[1511,54506+41]..[1511,54506+53])
                                                      "loc" (typing/typemod.ml[1511,54506+54]..[1511,54506+57])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1512,54564+16]..[1512,54564+36])
                                                      Pexp_field
                                                      expression (typing/typemod.ml[1512,54564+16]..[1512,54564+32])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[1512,54564+16]..[1512,54564+19])
                                                          Pexp_ident "pms" (typing/typemod.ml[1512,54564+16]..[1512,54564+19])
                                                        "pms_manifest" (typing/typemod.ml[1512,54564+20]..[1512,54564+32])
                                                      "txt" (typing/typemod.ml[1512,54564+33]..[1512,54564+36])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1512,54564+37]..[1512,54564+40])
                                                      Pexp_ident "env" (typing/typemod.ml[1512,54564+37]..[1512,54564+40])
                                                ]
                                          ]
                                          expression (typing/typemod.ml[1514,54620+12]..[1544,55860+21])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[1514,54620+16]..[1514,54620+25])
                                                  Ppat_var "aliasable" (typing/typemod.ml[1514,54620+16]..[1514,54620+25])
                                                expression (typing/typemod.ml[1514,54620+28]..[1514,54620+61])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[1514,54620+28]..[1514,54620+31])
                                                    Pexp_ident "not" (typing/typemod.ml[1514,54620+28]..[1514,54620+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1514,54620+32]..[1514,54620+61])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[1514,54620+33]..[1514,54620+51])
                                                          Pexp_ident "Env.is_functor_arg" (typing/typemod.ml[1514,54620+33]..[1514,54620+51])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1514,54620+52]..[1514,54620+56])
                                                              Pexp_ident "path" (typing/typemod.ml[1514,54620+52]..[1514,54620+56])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1514,54620+57]..[1514,54620+60])
                                                              Pexp_ident "env" (typing/typemod.ml[1514,54620+57]..[1514,54620+60])
                                                        ]
                                                  ]
                                            ]
                                            expression (typing/typemod.ml[1515,54685+12]..[1544,55860+21])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typemod.ml[1515,54685+16]..[1515,54685+18])
                                                    Ppat_var "md" (typing/typemod.ml[1515,54685+16]..[1515,54685+18])
                                                  expression (typing/typemod.ml[1516,54706+14]..[1523,54990+17])
                                                    Pexp_ifthenelse
                                                    expression (typing/typemod.ml[1516,54706+17]..[1516,54706+30])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[1516,54706+17]..[1516,54706+20])
                                                        Pexp_ident "not" (typing/typemod.ml[1516,54706+17]..[1516,54706+20])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1516,54706+21]..[1516,54706+30])
                                                            Pexp_ident "aliasable" (typing/typemod.ml[1516,54706+21]..[1516,54706+30])
                                                      ]
                                                    expression (typing/typemod.ml[1517,54742+16]..[1517,54742+18])
                                                      Pexp_ident "md" (typing/typemod.ml[1517,54742+16]..[1517,54742+18])
                                                    Some
                                                      expression (typing/typemod.ml[1519,54780+16]..[1523,54990+17])
                                                        Pexp_record
                                                        [
                                                          "md_type" (typing/typemod.ml[1519,54780+18]..[1519,54780+25])
                                                            expression (typing/typemod.ml[1519,54780+28]..[1519,54780+42])
                                                              Pexp_construct "Mty_alias" (typing/typemod.ml[1519,54780+28]..[1519,54780+37])
                                                              Some
                                                                expression (typing/typemod.ml[1519,54780+38]..[1519,54780+42])
                                                                  Pexp_ident "path" (typing/typemod.ml[1519,54780+38]..[1519,54780+42])
                                                          "md_attributes" (typing/typemod.ml[1520,54824+18]..[1520,54824+31])
                                                            expression (typing/typemod.ml[1520,54824+34]..[1520,54824+52])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[1520,54824+34]..[1520,54824+37])
                                                                Pexp_ident "pms" (typing/typemod.ml[1520,54824+34]..[1520,54824+37])
                                                              "pms_attributes" (typing/typemod.ml[1520,54824+38]..[1520,54824+52])
                                                          "md_loc" (typing/typemod.ml[1521,54878+18]..[1521,54878+24])
                                                            expression (typing/typemod.ml[1521,54878+27]..[1521,54878+38])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[1521,54878+27]..[1521,54878+30])
                                                                Pexp_ident "pms" (typing/typemod.ml[1521,54878+27]..[1521,54878+30])
                                                              "pms_loc" (typing/typemod.ml[1521,54878+31]..[1521,54878+38])
                                                          "md_uid" (typing/typemod.ml[1522,54918+18]..[1522,54918+24])
                                                            expression (typing/typemod.ml[1522,54918+27]..[1522,54918+70])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[1522,54918+27]..[1522,54918+33])
                                                                Pexp_ident "Uid.mk" (typing/typemod.ml[1522,54918+27]..[1522,54918+33])
                                                              [
                                                                <arg>
                                                                Labelled "current_unit"
                                                                  expression (typing/typemod.ml[1522,54918+48]..[1522,54918+70])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[1522,54918+49]..[1522,54918+66])
                                                                      Pexp_ident "Env.get_unit_name" (typing/typemod.ml[1522,54918+49]..[1522,54918+66])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[1522,54918+67]..[1522,54918+69])
  Pexp_construct "()" (typing/typemod.ml[1522,54918+67]..[1522,54918+69])
  None
                                                                    ]
                                                              ]
                                                        ]
                                                        None
                                              ]
                                              expression (typing/typemod.ml[1525,55023+12]..[1544,55860+21])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typemod.ml[1525,55023+16]..[1525,55023+20])
                                                      Ppat_var "pres" (typing/typemod.ml[1525,55023+16]..[1525,55023+20])
                                                    expression (typing/typemod.ml[1526,55046+14]..[1528,55123+31])
                                                      Pexp_match
                                                      expression (typing/typemod.ml[1526,55046+20]..[1526,55046+30])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[1526,55046+20]..[1526,55046+22])
                                                          Pexp_ident "md" (typing/typemod.ml[1526,55046+20]..[1526,55046+22])
                                                        "md_type" (typing/typemod.ml[1526,55046+23]..[1526,55046+30])
                                                      [
                                                        <case>
                                                          pattern (typing/typemod.ml[1527,55082+16]..[1527,55082+27])
                                                            Ppat_construct "Mty_alias" (typing/typemod.ml[1527,55082+16]..[1527,55082+25])
                                                            Some
                                                              []
                                                              pattern (typing/typemod.ml[1527,55082+26]..[1527,55082+27])
                                                                Ppat_any
                                                          expression (typing/typemod.ml[1527,55082+31]..[1527,55082+40])
                                                            Pexp_construct "Mp_absent" (typing/typemod.ml[1527,55082+31]..[1527,55082+40])
                                                            None
                                                        <case>
                                                          pattern (typing/typemod.ml[1528,55123+16]..[1528,55123+17])
                                                            Ppat_any
                                                          expression (typing/typemod.ml[1528,55123+21]..[1528,55123+31])
                                                            Pexp_construct "Mp_present" (typing/typemod.ml[1528,55123+21]..[1528,55123+31])
                                                            None
                                                      ]
                                                ]
                                                expression (typing/typemod.ml[1530,55170+12]..[1544,55860+21])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typemod.ml[1530,55170+16]..[1530,55170+26])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typemod.ml[1530,55170+16]..[1530,55170+18])
                                                            Ppat_var "id" (typing/typemod.ml[1530,55170+16]..[1530,55170+18])
                                                          pattern (typing/typemod.ml[1530,55170+20]..[1530,55170+26])
                                                            Ppat_var "newenv" (typing/typemod.ml[1530,55170+20]..[1530,55170+26])
                                                        ]
                                                      expression (typing/typemod.ml[1531,55199+14]..[1531,55199+78])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[1531,55199+14]..[1531,55199+42])
                                                          Pexp_ident "Env.enter_module_declaration" (typing/typemod.ml[1531,55199+14]..[1531,55199+42])
                                                        [
                                                          <arg>
                                                          Labelled "scope"
                                                            expression (typing/typemod.ml[1531,55199+44]..[1531,55199+49])
                                                              Pexp_ident "scope" (typing/typemod.ml[1531,55199+44]..[1531,55199+49])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1531,55199+50]..[1531,55199+66])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[1531,55199+50]..[1531,55199+62])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[1531,55199+50]..[1531,55199+53])
                                                                  Pexp_ident "pms" (typing/typemod.ml[1531,55199+50]..[1531,55199+53])
                                                                "pms_name" (typing/typemod.ml[1531,55199+54]..[1531,55199+62])
                                                              "txt" (typing/typemod.ml[1531,55199+63]..[1531,55199+66])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1531,55199+67]..[1531,55199+71])
                                                              Pexp_ident "pres" (typing/typemod.ml[1531,55199+67]..[1531,55199+71])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1531,55199+72]..[1531,55199+74])
                                                              Pexp_ident "md" (typing/typemod.ml[1531,55199+72]..[1531,55199+74])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1531,55199+75]..[1531,55199+78])
                                                              Pexp_ident "env" (typing/typemod.ml[1531,55199+75]..[1531,55199+78])
                                                        ]
                                                  ]
                                                  expression (typing/typemod.ml[1533,55293+12]..[1544,55860+21])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typemod.ml[1533,55293+16]..[1533,55293+20])
                                                          Ppat_var "info" (typing/typemod.ml[1533,55293+16]..[1533,55293+20])
                                                        expression (typing/typemod.ml[1534,55316+14]..[1534,55316+73])
                                                          Pexp_variant "Substituted_away"
                                                          Some
                                                            expression (typing/typemod.ml[1534,55316+32]..[1534,55316+73])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[1534,55316+33]..[1534,55316+49])
                                                                Pexp_ident "Subst.add_module" (typing/typemod.ml[1534,55316+33]..[1534,55316+49])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1534,55316+50]..[1534,55316+52])
                                                                    Pexp_ident "id" (typing/typemod.ml[1534,55316+50]..[1534,55316+52])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1534,55316+53]..[1534,55316+57])
                                                                    Pexp_ident "path" (typing/typemod.ml[1534,55316+53]..[1534,55316+57])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1534,55316+58]..[1534,55316+72])
                                                                    Pexp_ident "Subst.identity" (typing/typemod.ml[1534,55316+58]..[1534,55316+72])
                                                              ]
                                                    ]
                                                    expression (typing/typemod.ml[1536,55405+12]..[1544,55860+21])
                                                      Pexp_sequence
                                                      expression (typing/typemod.ml[1536,55405+12]..[1536,55405+72])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[1536,55405+12]..[1536,55405+40])
                                                          Pexp_ident "Signature_names.check_module" (typing/typemod.ml[1536,55405+12]..[1536,55405+40])
                                                        [
                                                          <arg>
                                                          Labelled "info"
                                                            expression (typing/typemod.ml[1536,55405+42]..[1536,55405+46])
                                                              Pexp_ident "info" (typing/typemod.ml[1536,55405+42]..[1536,55405+46])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1536,55405+47]..[1536,55405+52])
                                                              Pexp_ident "names" (typing/typemod.ml[1536,55405+47]..[1536,55405+52])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1536,55405+53]..[1536,55405+69])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[1536,55405+53]..[1536,55405+65])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[1536,55405+53]..[1536,55405+56])
                                                                  Pexp_ident "pms" (typing/typemod.ml[1536,55405+53]..[1536,55405+56])
                                                                "pms_name" (typing/typemod.ml[1536,55405+57]..[1536,55405+65])
                                                              "loc" (typing/typemod.ml[1536,55405+66]..[1536,55405+69])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1536,55405+70]..[1536,55405+72])
                                                              Pexp_ident "id" (typing/typemod.ml[1536,55405+70]..[1536,55405+72])
                                                        ]
                                                      expression (typing/typemod.ml[1537,55479+12]..[1544,55860+21])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (typing/typemod.ml[1537,55479+16]..[1537,55479+38])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[1537,55479+17]..[1537,55479+21])
                                                                  Ppat_var "trem" (typing/typemod.ml[1537,55479+17]..[1537,55479+21])
                                                                pattern (typing/typemod.ml[1537,55479+23]..[1537,55479+26])
                                                                  Ppat_var "rem" (typing/typemod.ml[1537,55479+23]..[1537,55479+26])
                                                                pattern (typing/typemod.ml[1537,55479+28]..[1537,55479+37])
                                                                  Ppat_var "final_env" (typing/typemod.ml[1537,55479+28]..[1537,55479+37])
                                                              ]
                                                            expression (typing/typemod.ml[1537,55479+41]..[1537,55479+63])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[1537,55479+41]..[1537,55479+51])
                                                                Pexp_ident "transl_sig" (typing/typemod.ml[1537,55479+41]..[1537,55479+51])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1537,55479+52]..[1537,55479+58])
                                                                    Pexp_ident "newenv" (typing/typemod.ml[1537,55479+52]..[1537,55479+58])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1537,55479+59]..[1537,55479+63])
                                                                    Pexp_ident "srem" (typing/typemod.ml[1537,55479+59]..[1537,55479+63])
                                                              ]
                                                        ]
                                                        expression (typing/typemod.ml[1538,55546+12]..[1544,55860+21])
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/typemod.ml[1538,55546+12]..[1542,55812+29])
                                                              Pexp_construct "::" (typing/typemod.ml[1542,55812+22]..[1542,55812+24])
                                                              Some
                                                                expression (typing/typemod.ml[1538,55546+12]..[1542,55812+29]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (typing/typemod.ml[1538,55546+12]..[1542,55812+21])
                                                                      Pexp_apply
                                                                      expression (typing/typemod.ml[1538,55546+12]..[1538,55546+17])
Pexp_ident "mksig" (typing/typemod.ml[1538,55546+12]..[1538,55546+17])
                                                                      [
<arg>
Nolabel
  expression (typing/typemod.ml[1538,55546+18]..[1541,55743+68])
    Pexp_construct "Tsig_modsubst" (typing/typemod.ml[1538,55546+19]..[1538,55546+32])
    Some
      expression (typing/typemod.ml[1538,55546+33]..[1541,55743+67])
        Pexp_record
        [
          "ms_id" (typing/typemod.ml[1538,55546+34]..[1538,55546+39])
            expression (typing/typemod.ml[1538,55546+40]..[1538,55546+42])
              Pexp_ident "id" (typing/typemod.ml[1538,55546+40]..[1538,55546+42])
          "ms_name" (typing/typemod.ml[1538,55546+44]..[1538,55546+51])
            expression (typing/typemod.ml[1538,55546+52]..[1538,55546+64])
              Pexp_field
              expression (typing/typemod.ml[1538,55546+52]..[1538,55546+55])
                Pexp_ident "pms" (typing/typemod.ml[1538,55546+52]..[1538,55546+55])
              "pms_name" (typing/typemod.ml[1538,55546+56]..[1538,55546+64])
          "ms_manifest" (typing/typemod.ml[1539,55612+34]..[1539,55612+45])
            expression (typing/typemod.ml[1539,55612+46]..[1539,55612+50])
              Pexp_ident "path" (typing/typemod.ml[1539,55612+46]..[1539,55612+50])
          "ms_txt" (typing/typemod.ml[1539,55612+52]..[1539,55612+58])
            expression (typing/typemod.ml[1539,55612+59]..[1539,55612+75])
              Pexp_field
              expression (typing/typemod.ml[1539,55612+59]..[1539,55612+62])
                Pexp_ident "pms" (typing/typemod.ml[1539,55612+59]..[1539,55612+62])
              "pms_manifest" (typing/typemod.ml[1539,55612+63]..[1539,55612+75])
          "ms_loc" (typing/typemod.ml[1540,55689+34]..[1540,55689+40])
            expression (typing/typemod.ml[1540,55689+41]..[1540,55689+52])
              Pexp_field
              expression (typing/typemod.ml[1540,55689+41]..[1540,55689+44])
                Pexp_ident "pms" (typing/typemod.ml[1540,55689+41]..[1540,55689+44])
              "pms_loc" (typing/typemod.ml[1540,55689+45]..[1540,55689+52])
          "ms_attributes" (typing/typemod.ml[1541,55743+34]..[1541,55743+47])
            expression (typing/typemod.ml[1541,55743+48]..[1541,55743+66])
              Pexp_field
              expression (typing/typemod.ml[1541,55743+48]..[1541,55743+51])
                Pexp_ident "pms" (typing/typemod.ml[1541,55743+48]..[1541,55743+51])
              "pms_attributes" (typing/typemod.ml[1541,55743+52]..[1541,55743+66])
        ]
        None
<arg>
Nolabel
  expression (typing/typemod.ml[1542,55812+14]..[1542,55812+17])
    Pexp_ident "env" (typing/typemod.ml[1542,55812+14]..[1542,55812+17])
<arg>
Nolabel
  expression (typing/typemod.ml[1542,55812+18]..[1542,55812+21])
    Pexp_ident "loc" (typing/typemod.ml[1542,55812+18]..[1542,55812+21])
                                                                      ]
                                                                    expression (typing/typemod.ml[1542,55812+25]..[1542,55812+29])
                                                                      Pexp_ident "trem" (typing/typemod.ml[1542,55812+25]..[1542,55812+29])
                                                                  ]
                                                            expression (typing/typemod.ml[1543,55843+12]..[1543,55843+15])
                                                              Pexp_ident "rem" (typing/typemod.ml[1543,55843+12]..[1543,55843+15])
                                                            expression (typing/typemod.ml[1544,55860+12]..[1544,55860+21])
                                                              Pexp_ident "final_env" (typing/typemod.ml[1544,55860+12]..[1544,55860+21])
                                                          ]
                                    <case>
                                      pattern (typing/typemod.ml[1545,55882+10]..[1545,55882+31])
                                        Ppat_construct "Psig_recmodule" (typing/typemod.ml[1545,55882+10]..[1545,55882+24])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1545,55882+25]..[1545,55882+31])
                                            Ppat_var "sdecls" (typing/typemod.ml[1545,55882+25]..[1545,55882+31])
                                      expression (typing/typemod.ml[1546,55917+12]..[1568,56862+21])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[1546,55917+16]..[1546,55917+32])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[1546,55917+17]..[1546,55917+23])
                                                  Ppat_var "tdecls" (typing/typemod.ml[1546,55917+17]..[1546,55917+23])
                                                pattern (typing/typemod.ml[1546,55917+25]..[1546,55917+31])
                                                  Ppat_var "newenv" (typing/typemod.ml[1546,55917+25]..[1546,55917+31])
                                              ]
                                            expression (typing/typemod.ml[1547,55952+14]..[1547,55952+50])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1547,55952+14]..[1547,55952+39])
                                                Pexp_ident "transl_recmodule_modtypes" (typing/typemod.ml[1547,55952+14]..[1547,55952+39])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1547,55952+40]..[1547,55952+43])
                                                    Pexp_ident "env" (typing/typemod.ml[1547,55952+40]..[1547,55952+43])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1547,55952+44]..[1547,55952+50])
                                                    Pexp_ident "sdecls" (typing/typemod.ml[1547,55952+44]..[1547,55952+50])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[1548,56006+12]..[1568,56862+21])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[1548,56006+16]..[1548,56006+21])
                                                Ppat_var "decls" (typing/typemod.ml[1548,56006+16]..[1548,56006+21])
                                              expression (typing/typemod.ml[1549,56030+14]..[1553,56193+22])
                                                Pexp_apply
                                                expression (typing/typemod.ml[1549,56030+14]..[1549,56030+29])
                                                  Pexp_ident "List.filter_map" (typing/typemod.ml[1549,56030+14]..[1549,56030+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1549,56030+30]..[1553,56193+15])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (typing/typemod.ml[1549,56030+35]..[1549,56030+44])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typemod.ml[1549,56030+36]..[1549,56030+38])
                                                            Ppat_var "md" (typing/typemod.ml[1549,56030+36]..[1549,56030+38])
                                                          pattern (typing/typemod.ml[1549,56030+40]..[1549,56030+43])
                                                            Ppat_var "uid" (typing/typemod.ml[1549,56030+40]..[1549,56030+43])
                                                        ]
                                                      expression (typing/typemod.ml[1550,56078+16]..[1552,56145+47])
                                                        Pexp_match
                                                        expression (typing/typemod.ml[1550,56078+22]..[1550,56078+30])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[1550,56078+22]..[1550,56078+24])
                                                            Pexp_ident "md" (typing/typemod.ml[1550,56078+22]..[1550,56078+24])
                                                          "md_id" (typing/typemod.ml[1550,56078+25]..[1550,56078+30])
                                                        [
                                                          <case>
                                                            pattern (typing/typemod.ml[1551,56114+18]..[1551,56114+22])
                                                              Ppat_construct "None" (typing/typemod.ml[1551,56114+18]..[1551,56114+22])
                                                              None
                                                            expression (typing/typemod.ml[1551,56114+26]..[1551,56114+30])
                                                              Pexp_construct "None" (typing/typemod.ml[1551,56114+26]..[1551,56114+30])
                                                              None
                                                          <case>
                                                            pattern (typing/typemod.ml[1552,56145+18]..[1552,56145+25])
                                                              Ppat_construct "Some" (typing/typemod.ml[1552,56145+18]..[1552,56145+22])
                                                              Some
                                                                []
                                                                pattern (typing/typemod.ml[1552,56145+23]..[1552,56145+25])
                                                                  Ppat_var "id" (typing/typemod.ml[1552,56145+23]..[1552,56145+25])
                                                            expression (typing/typemod.ml[1552,56145+29]..[1552,56145+47])
                                                              Pexp_construct "Some" (typing/typemod.ml[1552,56145+29]..[1552,56145+33])
                                                              Some
                                                                expression (typing/typemod.ml[1552,56145+34]..[1552,56145+47])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (typing/typemod.ml[1552,56145+35]..[1552,56145+37])
                                                                      Pexp_ident "id" (typing/typemod.ml[1552,56145+35]..[1552,56145+37])
                                                                    expression (typing/typemod.ml[1552,56145+39]..[1552,56145+41])
                                                                      Pexp_ident "md" (typing/typemod.ml[1552,56145+39]..[1552,56145+41])
                                                                    expression (typing/typemod.ml[1552,56145+43]..[1552,56145+46])
                                                                      Pexp_ident "uid" (typing/typemod.ml[1552,56145+43]..[1552,56145+46])
                                                                  ]
                                                        ]
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1553,56193+16]..[1553,56193+22])
                                                      Pexp_ident "tdecls" (typing/typemod.ml[1553,56193+16]..[1553,56193+22])
                                                ]
                                          ]
                                          expression (typing/typemod.ml[1555,56231+12]..[1568,56862+21])
                                            Pexp_sequence
                                            expression (typing/typemod.ml[1555,56231+12]..[1557,56335+19])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1555,56231+12]..[1555,56231+21])
                                                Pexp_ident "List.iter" (typing/typemod.ml[1555,56231+12]..[1555,56231+21])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1555,56231+22]..[1557,56335+13])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (typing/typemod.ml[1555,56231+27]..[1555,56231+38])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typemod.ml[1555,56231+28]..[1555,56231+30])
                                                          Ppat_var "id" (typing/typemod.ml[1555,56231+28]..[1555,56231+30])
                                                        pattern (typing/typemod.ml[1555,56231+32]..[1555,56231+34])
                                                          Ppat_var "md" (typing/typemod.ml[1555,56231+32]..[1555,56231+34])
                                                        pattern (typing/typemod.ml[1555,56231+36]..[1555,56231+37])
                                                          Ppat_any
                                                      ]
                                                    expression (typing/typemod.ml[1556,56273+14]..[1556,56273+61])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[1556,56273+14]..[1556,56273+42])
                                                        Pexp_ident "Signature_names.check_module" (typing/typemod.ml[1556,56273+14]..[1556,56273+42])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1556,56273+43]..[1556,56273+48])
                                                            Pexp_ident "names" (typing/typemod.ml[1556,56273+43]..[1556,56273+48])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1556,56273+49]..[1556,56273+58])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[1556,56273+49]..[1556,56273+51])
                                                              Pexp_ident "md" (typing/typemod.ml[1556,56273+49]..[1556,56273+51])
                                                            "md_loc" (typing/typemod.ml[1556,56273+52]..[1556,56273+58])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1556,56273+59]..[1556,56273+61])
                                                            Pexp_ident "id" (typing/typemod.ml[1556,56273+59]..[1556,56273+61])
                                                      ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1557,56335+14]..[1557,56335+19])
                                                    Pexp_ident "decls" (typing/typemod.ml[1557,56335+14]..[1557,56335+19])
                                              ]
                                            expression (typing/typemod.ml[1558,56356+12]..[1568,56862+21])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typemod.ml[1558,56356+16]..[1558,56356+38])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/typemod.ml[1558,56356+17]..[1558,56356+21])
                                                        Ppat_var "trem" (typing/typemod.ml[1558,56356+17]..[1558,56356+21])
                                                      pattern (typing/typemod.ml[1558,56356+23]..[1558,56356+26])
                                                        Ppat_var "rem" (typing/typemod.ml[1558,56356+23]..[1558,56356+26])
                                                      pattern (typing/typemod.ml[1558,56356+28]..[1558,56356+37])
                                                        Ppat_var "final_env" (typing/typemod.ml[1558,56356+28]..[1558,56356+37])
                                                    ]
                                                  expression (typing/typemod.ml[1558,56356+41]..[1558,56356+63])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[1558,56356+41]..[1558,56356+51])
                                                      Pexp_ident "transl_sig" (typing/typemod.ml[1558,56356+41]..[1558,56356+51])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1558,56356+52]..[1558,56356+58])
                                                          Pexp_ident "newenv" (typing/typemod.ml[1558,56356+52]..[1558,56356+58])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1558,56356+59]..[1558,56356+63])
                                                          Pexp_ident "srem" (typing/typemod.ml[1558,56356+59]..[1558,56356+63])
                                                    ]
                                              ]
                                              expression (typing/typemod.ml[1559,56423+12]..[1568,56862+21])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typemod.ml[1559,56423+12]..[1559,56423+72])
                                                    Pexp_construct "::" (typing/typemod.ml[1559,56423+65]..[1559,56423+67])
                                                    Some
                                                      expression (typing/typemod.ml[1559,56423+12]..[1559,56423+72]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typemod.ml[1559,56423+12]..[1559,56423+64])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1559,56423+12]..[1559,56423+17])
                                                              Pexp_ident "mksig" (typing/typemod.ml[1559,56423+12]..[1559,56423+17])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1559,56423+18]..[1559,56423+56])
                                                                  Pexp_construct "Tsig_recmodule" (typing/typemod.ml[1559,56423+19]..[1559,56423+33])
                                                                  Some
                                                                    expression (typing/typemod.ml[1559,56423+34]..[1559,56423+55])
                                                                      Pexp_apply
                                                                      expression (typing/typemod.ml[1559,56423+35]..[1559,56423+43])
Pexp_ident "List.map" (typing/typemod.ml[1559,56423+35]..[1559,56423+43])
                                                                      [
<arg>
Nolabel
  expression (typing/typemod.ml[1559,56423+44]..[1559,56423+47])
    Pexp_ident "fst" (typing/typemod.ml[1559,56423+44]..[1559,56423+47])
<arg>
Nolabel
  expression (typing/typemod.ml[1559,56423+48]..[1559,56423+54])
    Pexp_ident "tdecls" (typing/typemod.ml[1559,56423+48]..[1559,56423+54])
                                                                      ]
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1559,56423+57]..[1559,56423+60])
                                                                  Pexp_ident "env" (typing/typemod.ml[1559,56423+57]..[1559,56423+60])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1559,56423+61]..[1559,56423+64])
                                                                  Pexp_ident "loc" (typing/typemod.ml[1559,56423+61]..[1559,56423+64])
                                                            ]
                                                          expression (typing/typemod.ml[1559,56423+68]..[1559,56423+72])
                                                            Pexp_ident "trem" (typing/typemod.ml[1559,56423+68]..[1559,56423+72])
                                                        ]
                                                  expression (typing/typemod.ml[1560,56497+12]..[1567,56837+23])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[1560,56497+12]..[1560,56497+19])
                                                      Pexp_ident "map_rec" (typing/typemod.ml[1560,56497+12]..[1560,56497+19])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1560,56497+20]..[1566,56776+60])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (typing/typemod.ml[1560,56497+25]..[1560,56497+27])
                                                            Ppat_var "rs" (typing/typemod.ml[1560,56497+25]..[1560,56497+27])
                                                          expression (typing/typemod.ml[1560,56497+28]..[1566,56776+59]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/typemod.ml[1560,56497+28]..[1560,56497+41])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[1560,56497+29]..[1560,56497+31])
                                                                  Ppat_var "id" (typing/typemod.ml[1560,56497+29]..[1560,56497+31])
                                                                pattern (typing/typemod.ml[1560,56497+33]..[1560,56497+35])
                                                                  Ppat_var "md" (typing/typemod.ml[1560,56497+33]..[1560,56497+35])
                                                                pattern (typing/typemod.ml[1560,56497+37]..[1560,56497+40])
                                                                  Ppat_var "uid" (typing/typemod.ml[1560,56497+37]..[1560,56497+40])
                                                              ]
                                                            expression (typing/typemod.ml[1561,56542+16]..[1566,56776+59])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (typing/typemod.ml[1561,56542+20]..[1561,56542+21])
                                                                    Ppat_var "d" (typing/typemod.ml[1561,56542+20]..[1561,56542+21])
                                                                  expression (typing/typemod.ml[1561,56542+24]..[1565,56747+25])
                                                                    Pexp_record
                                                                    [
                                                                      "Types.md_type" (typing/typemod.ml[1561,56542+25]..[1561,56542+38])
expression (typing/typemod.ml[1561,56542+41]..[1561,56542+60])
  Pexp_field
  expression (typing/typemod.ml[1561,56542+41]..[1561,56542+51])
    Pexp_field
    expression (typing/typemod.ml[1561,56542+41]..[1561,56542+43])
      Pexp_ident "md" (typing/typemod.ml[1561,56542+41]..[1561,56542+43])
    "md_type" (typing/typemod.ml[1561,56542+44]..[1561,56542+51])
  "mty_type" (typing/typemod.ml[1561,56542+52]..[1561,56542+60])
                                                                      "md_attributes" (typing/typemod.ml[1562,56604+25]..[1562,56604+38])
expression (typing/typemod.ml[1562,56604+41]..[1562,56604+57])
  Pexp_field
  expression (typing/typemod.ml[1562,56604+41]..[1562,56604+43])
    Pexp_ident "md" (typing/typemod.ml[1562,56604+41]..[1562,56604+43])
  "md_attributes" (typing/typemod.ml[1562,56604+44]..[1562,56604+57])
                                                                      "md_loc" (typing/typemod.ml[1563,56663+25]..[1563,56663+31])
expression (typing/typemod.ml[1563,56663+34]..[1563,56663+43])
  Pexp_field
  expression (typing/typemod.ml[1563,56663+34]..[1563,56663+36])
    Pexp_ident "md" (typing/typemod.ml[1563,56663+34]..[1563,56663+36])
  "md_loc" (typing/typemod.ml[1563,56663+37]..[1563,56663+43])
                                                                      "md_uid" (typing/typemod.ml[1564,56708+25]..[1564,56708+31])
expression (typing/typemod.ml[1564,56708+34]..[1564,56708+37])
  Pexp_ident "uid" (typing/typemod.ml[1564,56708+34]..[1564,56708+37])
                                                                    ]
                                                                    None
                                                              ]
                                                              expression (typing/typemod.ml[1566,56776+16]..[1566,56776+59])
                                                                Pexp_construct "Sig_module" (typing/typemod.ml[1566,56776+16]..[1566,56776+26])
                                                                Some
                                                                  expression (typing/typemod.ml[1566,56776+26]..[1566,56776+59])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typemod.ml[1566,56776+27]..[1566,56776+29])
Pexp_ident "id" (typing/typemod.ml[1566,56776+27]..[1566,56776+29])
                                                                      expression (typing/typemod.ml[1566,56776+31]..[1566,56776+41])
Pexp_construct "Mp_present" (typing/typemod.ml[1566,56776+31]..[1566,56776+41])
None
                                                                      expression (typing/typemod.ml[1566,56776+43]..[1566,56776+44])
Pexp_ident "d" (typing/typemod.ml[1566,56776+43]..[1566,56776+44])
                                                                      expression (typing/typemod.ml[1566,56776+46]..[1566,56776+48])
Pexp_ident "rs" (typing/typemod.ml[1566,56776+46]..[1566,56776+48])
                                                                      expression (typing/typemod.ml[1566,56776+50]..[1566,56776+58])
Pexp_construct "Exported" (typing/typemod.ml[1566,56776+50]..[1566,56776+58])
None
                                                                    ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1567,56837+14]..[1567,56837+19])
                                                          Pexp_ident "decls" (typing/typemod.ml[1567,56837+14]..[1567,56837+19])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1567,56837+20]..[1567,56837+23])
                                                          Pexp_ident "rem" (typing/typemod.ml[1567,56837+20]..[1567,56837+23])
                                                    ]
                                                  expression (typing/typemod.ml[1568,56862+12]..[1568,56862+21])
                                                    Pexp_ident "final_env" (typing/typemod.ml[1568,56862+12]..[1568,56862+21])
                                                ]
                                    <case>
                                      pattern (typing/typemod.ml[1569,56884+10]..[1569,56884+27])
                                        Ppat_construct "Psig_modtype" (typing/typemod.ml[1569,56884+10]..[1569,56884+22])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1569,56884+23]..[1569,56884+27])
                                            Ppat_var "pmtd" (typing/typemod.ml[1569,56884+23]..[1569,56884+27])
                                      expression (typing/typemod.ml[1570,56915+12]..[1575,57199+21])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[1570,56915+16]..[1570,56915+31])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[1570,56915+16]..[1570,56915+22])
                                                  Ppat_var "newenv" (typing/typemod.ml[1570,56915+16]..[1570,56915+22])
                                                pattern (typing/typemod.ml[1570,56915+24]..[1570,56915+27])
                                                  Ppat_var "mtd" (typing/typemod.ml[1570,56915+24]..[1570,56915+27])
                                                pattern (typing/typemod.ml[1570,56915+29]..[1570,56915+31])
                                                  Ppat_var "sg" (typing/typemod.ml[1570,56915+29]..[1570,56915+31])
                                              ]
                                            expression (typing/typemod.ml[1570,56915+34]..[1570,56915+62])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1570,56915+34]..[1570,56915+53])
                                                Pexp_ident "transl_modtype_decl" (typing/typemod.ml[1570,56915+34]..[1570,56915+53])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1570,56915+54]..[1570,56915+57])
                                                    Pexp_ident "env" (typing/typemod.ml[1570,56915+54]..[1570,56915+57])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1570,56915+58]..[1570,56915+62])
                                                    Pexp_ident "pmtd" (typing/typemod.ml[1570,56915+58]..[1570,56915+62])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[1571,56981+12]..[1575,57199+21])
                                          Pexp_sequence
                                          expression (typing/typemod.ml[1571,56981+12]..[1571,56981+72])
                                            Pexp_apply
                                            expression (typing/typemod.ml[1571,56981+12]..[1571,56981+41])
                                              Pexp_ident "Signature_names.check_modtype" (typing/typemod.ml[1571,56981+12]..[1571,56981+41])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1571,56981+42]..[1571,56981+47])
                                                  Pexp_ident "names" (typing/typemod.ml[1571,56981+42]..[1571,56981+47])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1571,56981+48]..[1571,56981+61])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[1571,56981+48]..[1571,56981+52])
                                                    Pexp_ident "pmtd" (typing/typemod.ml[1571,56981+48]..[1571,56981+52])
                                                  "pmtd_loc" (typing/typemod.ml[1571,56981+53]..[1571,56981+61])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1571,56981+62]..[1571,56981+72])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[1571,56981+62]..[1571,56981+65])
                                                    Pexp_ident "mtd" (typing/typemod.ml[1571,56981+62]..[1571,56981+65])
                                                  "mtd_id" (typing/typemod.ml[1571,56981+66]..[1571,56981+72])
                                            ]
                                          expression (typing/typemod.ml[1572,57055+12]..[1575,57199+21])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[1572,57055+16]..[1572,57055+38])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typemod.ml[1572,57055+17]..[1572,57055+21])
                                                      Ppat_var "trem" (typing/typemod.ml[1572,57055+17]..[1572,57055+21])
                                                    pattern (typing/typemod.ml[1572,57055+23]..[1572,57055+26])
                                                      Ppat_var "rem" (typing/typemod.ml[1572,57055+23]..[1572,57055+26])
                                                    pattern (typing/typemod.ml[1572,57055+28]..[1572,57055+37])
                                                      Ppat_var "final_env" (typing/typemod.ml[1572,57055+28]..[1572,57055+37])
                                                  ]
                                                expression (typing/typemod.ml[1572,57055+41]..[1572,57055+63])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[1572,57055+41]..[1572,57055+51])
                                                    Pexp_ident "transl_sig" (typing/typemod.ml[1572,57055+41]..[1572,57055+51])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1572,57055+52]..[1572,57055+58])
                                                        Pexp_ident "newenv" (typing/typemod.ml[1572,57055+52]..[1572,57055+58])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1572,57055+59]..[1572,57055+63])
                                                        Pexp_ident "srem" (typing/typemod.ml[1572,57055+59]..[1572,57055+63])
                                                  ]
                                            ]
                                            expression (typing/typemod.ml[1573,57122+12]..[1575,57199+21])
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[1573,57122+12]..[1573,57122+52])
                                                  Pexp_construct "::" (typing/typemod.ml[1573,57122+45]..[1573,57122+47])
                                                  Some
                                                    expression (typing/typemod.ml[1573,57122+12]..[1573,57122+52]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typemod.ml[1573,57122+12]..[1573,57122+44])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[1573,57122+12]..[1573,57122+17])
                                                            Pexp_ident "mksig" (typing/typemod.ml[1573,57122+12]..[1573,57122+17])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1573,57122+18]..[1573,57122+36])
                                                                Pexp_construct "Tsig_modtype" (typing/typemod.ml[1573,57122+19]..[1573,57122+31])
                                                                Some
                                                                  expression (typing/typemod.ml[1573,57122+32]..[1573,57122+35])
                                                                    Pexp_ident "mtd" (typing/typemod.ml[1573,57122+32]..[1573,57122+35])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1573,57122+37]..[1573,57122+40])
                                                                Pexp_ident "env" (typing/typemod.ml[1573,57122+37]..[1573,57122+40])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1573,57122+41]..[1573,57122+44])
                                                                Pexp_ident "loc" (typing/typemod.ml[1573,57122+41]..[1573,57122+44])
                                                          ]
                                                        expression (typing/typemod.ml[1573,57122+48]..[1573,57122+52])
                                                          Pexp_ident "trem" (typing/typemod.ml[1573,57122+48]..[1573,57122+52])
                                                      ]
                                                expression (typing/typemod.ml[1574,57176+12]..[1574,57176+21])
                                                  Pexp_construct "::" (typing/typemod.ml[1574,57176+15]..[1574,57176+17])
                                                  Some
                                                    expression (typing/typemod.ml[1574,57176+12]..[1574,57176+21]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typemod.ml[1574,57176+12]..[1574,57176+14])
                                                          Pexp_ident "sg" (typing/typemod.ml[1574,57176+12]..[1574,57176+14])
                                                        expression (typing/typemod.ml[1574,57176+18]..[1574,57176+21])
                                                          Pexp_ident "rem" (typing/typemod.ml[1574,57176+18]..[1574,57176+21])
                                                      ]
                                                expression (typing/typemod.ml[1575,57199+12]..[1575,57199+21])
                                                  Pexp_ident "final_env" (typing/typemod.ml[1575,57199+12]..[1575,57199+21])
                                              ]
                                    <case>
                                      pattern (typing/typemod.ml[1576,57221+10]..[1576,57221+32])
                                        Ppat_construct "Psig_modtypesubst" (typing/typemod.ml[1576,57221+10]..[1576,57221+27])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1576,57221+28]..[1576,57221+32])
                                            Ppat_var "pmtd" (typing/typemod.ml[1576,57221+28]..[1576,57221+32])
                                      expression (typing/typemod.ml[1577,57257+12]..[1594,58058+21])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[1577,57257+16]..[1577,57257+32])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[1577,57257+16]..[1577,57257+22])
                                                  Ppat_var "newenv" (typing/typemod.ml[1577,57257+16]..[1577,57257+22])
                                                pattern (typing/typemod.ml[1577,57257+24]..[1577,57257+27])
                                                  Ppat_var "mtd" (typing/typemod.ml[1577,57257+24]..[1577,57257+27])
                                                pattern (typing/typemod.ml[1577,57257+29]..[1577,57257+32])
                                                  Ppat_var "_sg" (typing/typemod.ml[1577,57257+29]..[1577,57257+32])
                                              ]
                                            expression (typing/typemod.ml[1577,57257+35]..[1577,57257+63])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1577,57257+35]..[1577,57257+54])
                                                Pexp_ident "transl_modtype_decl" (typing/typemod.ml[1577,57257+35]..[1577,57257+54])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1577,57257+55]..[1577,57257+58])
                                                    Pexp_ident "env" (typing/typemod.ml[1577,57257+55]..[1577,57257+58])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1577,57257+59]..[1577,57257+63])
                                                    Pexp_ident "pmtd" (typing/typemod.ml[1577,57257+59]..[1577,57257+63])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[1578,57324+12]..[1594,58058+21])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[1578,57324+16]..[1578,57324+20])
                                                Ppat_var "info" (typing/typemod.ml[1578,57324+16]..[1578,57324+20])
                                              expression (typing/typemod.ml[1579,57347+14]..[1588,57743+76])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typemod.ml[1579,57347+18]..[1579,57347+21])
                                                      Ppat_var "mty" (typing/typemod.ml[1579,57347+18]..[1579,57347+21])
                                                    expression (typing/typemod.ml[1579,57347+24]..[1583,57532+32])
                                                      Pexp_match
                                                      expression (typing/typemod.ml[1579,57347+30]..[1579,57347+42])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[1579,57347+30]..[1579,57347+33])
                                                          Pexp_ident "mtd" (typing/typemod.ml[1579,57347+30]..[1579,57347+33])
                                                        "mtd_type" (typing/typemod.ml[1579,57347+34]..[1579,57347+42])
                                                      [
                                                        <case>
                                                          pattern (typing/typemod.ml[1580,57395+18]..[1580,57395+27])
                                                            Ppat_construct "Some" (typing/typemod.ml[1580,57395+18]..[1580,57395+22])
                                                            Some
                                                              []
                                                              pattern (typing/typemod.ml[1580,57395+23]..[1580,57395+27])
                                                                Ppat_var "tmty" (typing/typemod.ml[1580,57395+23]..[1580,57395+27])
                                                          expression (typing/typemod.ml[1580,57395+31]..[1580,57395+44])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[1580,57395+31]..[1580,57395+35])
                                                              Pexp_ident "tmty" (typing/typemod.ml[1580,57395+31]..[1580,57395+35])
                                                            "mty_type" (typing/typemod.ml[1580,57395+36]..[1580,57395+44])
                                                        <case>
                                                          pattern (typing/typemod.ml[1581,57440+18]..[1581,57440+22])
                                                            Ppat_construct "None" (typing/typemod.ml[1581,57440+18]..[1581,57440+22])
                                                            None
                                                          expression (typing/typemod.ml[1583,57532+20]..[1583,57532+32])
                                                            Pexp_assert
                                                            expression (typing/typemod.ml[1583,57532+27]..[1583,57532+32])
                                                              Pexp_construct "false" (typing/typemod.ml[1583,57532+27]..[1583,57532+32])
                                                              None
                                                      ]
                                                ]
                                                expression (typing/typemod.ml[1585,57582+14]..[1588,57743+76])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typemod.ml[1585,57582+18]..[1585,57582+23])
                                                        Ppat_var "subst" (typing/typemod.ml[1585,57582+18]..[1585,57582+23])
                                                      expression (typing/typemod.ml[1585,57582+26]..[1585,57582+73])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[1585,57582+26]..[1585,57582+43])
                                                          Pexp_ident "Subst.add_modtype" (typing/typemod.ml[1585,57582+26]..[1585,57582+43])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1585,57582+44]..[1585,57582+54])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[1585,57582+44]..[1585,57582+47])
                                                                Pexp_ident "mtd" (typing/typemod.ml[1585,57582+44]..[1585,57582+47])
                                                              "mtd_id" (typing/typemod.ml[1585,57582+48]..[1585,57582+54])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1585,57582+55]..[1585,57582+58])
                                                              Pexp_ident "mty" (typing/typemod.ml[1585,57582+55]..[1585,57582+58])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1585,57582+59]..[1585,57582+73])
                                                              Pexp_ident "Subst.identity" (typing/typemod.ml[1585,57582+59]..[1585,57582+73])
                                                        ]
                                                  ]
                                                  expression (typing/typemod.ml[1586,57659+14]..[1588,57743+76])
                                                    Pexp_match
                                                    expression (typing/typemod.ml[1586,57659+20]..[1586,57659+23])
                                                      Pexp_ident "mty" (typing/typemod.ml[1586,57659+20]..[1586,57659+23])
                                                    [
                                                      <case>
                                                        pattern (typing/typemod.ml[1587,57688+16]..[1587,57688+27])
                                                          Ppat_construct "Mty_ident" (typing/typemod.ml[1587,57688+16]..[1587,57688+25])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[1587,57688+26]..[1587,57688+27])
                                                              Ppat_any
                                                        expression (typing/typemod.ml[1587,57688+31]..[1587,57688+54])
                                                          Pexp_variant "Substituted_away"
                                                          Some
                                                            expression (typing/typemod.ml[1587,57688+49]..[1587,57688+54])
                                                              Pexp_ident "subst" (typing/typemod.ml[1587,57688+49]..[1587,57688+54])
                                                      <case>
                                                        pattern (typing/typemod.ml[1588,57743+16]..[1588,57743+17])
                                                          Ppat_any
                                                        expression (typing/typemod.ml[1588,57743+21]..[1588,57743+76])
                                                          Pexp_variant "Unpackable_modtype_substituted_away"
                                                          Some
                                                            expression (typing/typemod.ml[1588,57743+58]..[1588,57743+76])
                                                              Pexp_tuple
                                                              [
                                                                expression (typing/typemod.ml[1588,57743+59]..[1588,57743+69])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[1588,57743+59]..[1588,57743+62])
                                                                    Pexp_ident "mtd" (typing/typemod.ml[1588,57743+59]..[1588,57743+62])
                                                                  "mtd_id" (typing/typemod.ml[1588,57743+63]..[1588,57743+69])
                                                                expression (typing/typemod.ml[1588,57743+70]..[1588,57743+75])
                                                                  Pexp_ident "subst" (typing/typemod.ml[1588,57743+70]..[1588,57743+75])
                                                              ]
                                                    ]
                                          ]
                                          expression (typing/typemod.ml[1590,57835+12]..[1594,58058+21])
                                            Pexp_sequence
                                            expression (typing/typemod.ml[1590,57835+12]..[1590,57835+78])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1590,57835+12]..[1590,57835+41])
                                                Pexp_ident "Signature_names.check_modtype" (typing/typemod.ml[1590,57835+12]..[1590,57835+41])
                                              [
                                                <arg>
                                                Labelled "info"
                                                  expression (typing/typemod.ml[1590,57835+43]..[1590,57835+47])
                                                    Pexp_ident "info" (typing/typemod.ml[1590,57835+43]..[1590,57835+47])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1590,57835+48]..[1590,57835+53])
                                                    Pexp_ident "names" (typing/typemod.ml[1590,57835+48]..[1590,57835+53])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1590,57835+54]..[1590,57835+67])
                                                    Pexp_field
                                                    expression (typing/typemod.ml[1590,57835+54]..[1590,57835+58])
                                                      Pexp_ident "pmtd" (typing/typemod.ml[1590,57835+54]..[1590,57835+58])
                                                    "pmtd_loc" (typing/typemod.ml[1590,57835+59]..[1590,57835+67])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1590,57835+68]..[1590,57835+78])
                                                    Pexp_field
                                                    expression (typing/typemod.ml[1590,57835+68]..[1590,57835+71])
                                                      Pexp_ident "mtd" (typing/typemod.ml[1590,57835+68]..[1590,57835+71])
                                                    "mtd_id" (typing/typemod.ml[1590,57835+72]..[1590,57835+78])
                                              ]
                                            expression (typing/typemod.ml[1591,57915+12]..[1594,58058+21])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typemod.ml[1591,57915+16]..[1591,57915+38])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/typemod.ml[1591,57915+17]..[1591,57915+21])
                                                        Ppat_var "trem" (typing/typemod.ml[1591,57915+17]..[1591,57915+21])
                                                      pattern (typing/typemod.ml[1591,57915+23]..[1591,57915+26])
                                                        Ppat_var "rem" (typing/typemod.ml[1591,57915+23]..[1591,57915+26])
                                                      pattern (typing/typemod.ml[1591,57915+28]..[1591,57915+37])
                                                        Ppat_var "final_env" (typing/typemod.ml[1591,57915+28]..[1591,57915+37])
                                                    ]
                                                  expression (typing/typemod.ml[1591,57915+41]..[1591,57915+63])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[1591,57915+41]..[1591,57915+51])
                                                      Pexp_ident "transl_sig" (typing/typemod.ml[1591,57915+41]..[1591,57915+51])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1591,57915+52]..[1591,57915+58])
                                                          Pexp_ident "newenv" (typing/typemod.ml[1591,57915+52]..[1591,57915+58])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1591,57915+59]..[1591,57915+63])
                                                          Pexp_ident "srem" (typing/typemod.ml[1591,57915+59]..[1591,57915+63])
                                                    ]
                                              ]
                                              expression (typing/typemod.ml[1592,57982+12]..[1594,58058+21])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typemod.ml[1592,57982+12]..[1592,57982+57])
                                                    Pexp_construct "::" (typing/typemod.ml[1592,57982+50]..[1592,57982+52])
                                                    Some
                                                      expression (typing/typemod.ml[1592,57982+12]..[1592,57982+57]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typemod.ml[1592,57982+12]..[1592,57982+49])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1592,57982+12]..[1592,57982+17])
                                                              Pexp_ident "mksig" (typing/typemod.ml[1592,57982+12]..[1592,57982+17])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1592,57982+18]..[1592,57982+41])
                                                                  Pexp_construct "Tsig_modtypesubst" (typing/typemod.ml[1592,57982+19]..[1592,57982+36])
                                                                  Some
                                                                    expression (typing/typemod.ml[1592,57982+37]..[1592,57982+40])
                                                                      Pexp_ident "mtd" (typing/typemod.ml[1592,57982+37]..[1592,57982+40])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1592,57982+42]..[1592,57982+45])
                                                                  Pexp_ident "env" (typing/typemod.ml[1592,57982+42]..[1592,57982+45])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1592,57982+46]..[1592,57982+49])
                                                                  Pexp_ident "loc" (typing/typemod.ml[1592,57982+46]..[1592,57982+49])
                                                            ]
                                                          expression (typing/typemod.ml[1592,57982+53]..[1592,57982+57])
                                                            Pexp_ident "trem" (typing/typemod.ml[1592,57982+53]..[1592,57982+57])
                                                        ]
                                                  expression (typing/typemod.ml[1593,58041+12]..[1593,58041+15])
                                                    Pexp_ident "rem" (typing/typemod.ml[1593,58041+12]..[1593,58041+15])
                                                  expression (typing/typemod.ml[1594,58058+12]..[1594,58058+21])
                                                    Pexp_ident "final_env" (typing/typemod.ml[1594,58058+12]..[1594,58058+21])
                                                ]
                                    <case>
                                      pattern (typing/typemod.ml[1595,58080+10]..[1595,58080+23])
                                        Ppat_construct "Psig_open" (typing/typemod.ml[1595,58080+10]..[1595,58080+19])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1595,58080+20]..[1595,58080+23])
                                            Ppat_var "sod" (typing/typemod.ml[1595,58080+20]..[1595,58080+23])
                                      expression (typing/typemod.ml[1596,58107+12]..[1599,58282+26])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[1596,58107+16]..[1596,58107+28])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[1596,58107+17]..[1596,58107+19])
                                                  Ppat_var "od" (typing/typemod.ml[1596,58107+17]..[1596,58107+19])
                                                pattern (typing/typemod.ml[1596,58107+21]..[1596,58107+27])
                                                  Ppat_var "newenv" (typing/typemod.ml[1596,58107+21]..[1596,58107+27])
                                              ]
                                            expression (typing/typemod.ml[1596,58107+31]..[1596,58107+54])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1596,58107+31]..[1596,58107+46])
                                                Pexp_ident "type_open_descr" (typing/typemod.ml[1596,58107+31]..[1596,58107+46])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1596,58107+47]..[1596,58107+50])
                                                    Pexp_ident "env" (typing/typemod.ml[1596,58107+47]..[1596,58107+50])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1596,58107+51]..[1596,58107+54])
                                                    Pexp_ident "sod" (typing/typemod.ml[1596,58107+51]..[1596,58107+54])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[1597,58165+12]..[1599,58282+26])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[1597,58165+16]..[1597,58165+38])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/typemod.ml[1597,58165+17]..[1597,58165+21])
                                                    Ppat_var "trem" (typing/typemod.ml[1597,58165+17]..[1597,58165+21])
                                                  pattern (typing/typemod.ml[1597,58165+23]..[1597,58165+26])
                                                    Ppat_var "rem" (typing/typemod.ml[1597,58165+23]..[1597,58165+26])
                                                  pattern (typing/typemod.ml[1597,58165+28]..[1597,58165+37])
                                                    Ppat_var "final_env" (typing/typemod.ml[1597,58165+28]..[1597,58165+37])
                                                ]
                                              expression (typing/typemod.ml[1597,58165+41]..[1597,58165+63])
                                                Pexp_apply
                                                expression (typing/typemod.ml[1597,58165+41]..[1597,58165+51])
                                                  Pexp_ident "transl_sig" (typing/typemod.ml[1597,58165+41]..[1597,58165+51])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1597,58165+52]..[1597,58165+58])
                                                      Pexp_ident "newenv" (typing/typemod.ml[1597,58165+52]..[1597,58165+58])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1597,58165+59]..[1597,58165+63])
                                                      Pexp_ident "srem" (typing/typemod.ml[1597,58165+59]..[1597,58165+63])
                                                ]
                                          ]
                                          expression (typing/typemod.ml[1598,58232+12]..[1599,58282+26])
                                            Pexp_tuple
                                            [
                                              expression (typing/typemod.ml[1598,58232+12]..[1598,58232+48])
                                                Pexp_construct "::" (typing/typemod.ml[1598,58232+41]..[1598,58232+43])
                                                Some
                                                  expression (typing/typemod.ml[1598,58232+12]..[1598,58232+48]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[1598,58232+12]..[1598,58232+40])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[1598,58232+12]..[1598,58232+17])
                                                          Pexp_ident "mksig" (typing/typemod.ml[1598,58232+12]..[1598,58232+17])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1598,58232+18]..[1598,58232+32])
                                                              Pexp_construct "Tsig_open" (typing/typemod.ml[1598,58232+19]..[1598,58232+28])
                                                              Some
                                                                expression (typing/typemod.ml[1598,58232+29]..[1598,58232+31])
                                                                  Pexp_ident "od" (typing/typemod.ml[1598,58232+29]..[1598,58232+31])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1598,58232+33]..[1598,58232+36])
                                                              Pexp_ident "env" (typing/typemod.ml[1598,58232+33]..[1598,58232+36])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1598,58232+37]..[1598,58232+40])
                                                              Pexp_ident "loc" (typing/typemod.ml[1598,58232+37]..[1598,58232+40])
                                                        ]
                                                      expression (typing/typemod.ml[1598,58232+44]..[1598,58232+48])
                                                        Pexp_ident "trem" (typing/typemod.ml[1598,58232+44]..[1598,58232+48])
                                                    ]
                                              expression (typing/typemod.ml[1599,58282+12]..[1599,58282+15])
                                                Pexp_ident "rem" (typing/typemod.ml[1599,58282+12]..[1599,58282+15])
                                              expression (typing/typemod.ml[1599,58282+17]..[1599,58282+26])
                                                Pexp_ident "final_env" (typing/typemod.ml[1599,58282+17]..[1599,58282+26])
                                            ]
                                    <case>
                                      pattern (typing/typemod.ml[1600,58309+10]..[1600,58309+28])
                                        Ppat_construct "Psig_include" (typing/typemod.ml[1600,58309+10]..[1600,58309+22])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1600,58309+23]..[1600,58309+28])
                                            Ppat_var "sincl" (typing/typemod.ml[1600,58309+23]..[1600,58309+28])
                                      expression (typing/typemod.ml[1601,58341+12]..[1623,59237+21])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[1601,58341+16]..[1601,58341+20])
                                              Ppat_var "smty" (typing/typemod.ml[1601,58341+16]..[1601,58341+20])
                                            expression (typing/typemod.ml[1601,58341+23]..[1601,58341+38])
                                              Pexp_field
                                              expression (typing/typemod.ml[1601,58341+23]..[1601,58341+28])
                                                Pexp_ident "sincl" (typing/typemod.ml[1601,58341+23]..[1601,58341+28])
                                              "pincl_mod" (typing/typemod.ml[1601,58341+29]..[1601,58341+38])
                                        ]
                                        expression (typing/typemod.ml[1602,58383+12]..[1623,59237+21])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[1602,58383+16]..[1602,58383+20])
                                                Ppat_var "tmty" (typing/typemod.ml[1602,58383+16]..[1602,58383+20])
                                              expression (typing/typemod.ml[1603,58406+14]..[1604,58476+51])
                                                Pexp_apply
                                                expression (typing/typemod.ml[1603,58406+14]..[1603,58406+46])
                                                  Pexp_ident "Builtin_attributes.warning_scope" (typing/typemod.ml[1603,58406+14]..[1603,58406+46])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1603,58406+47]..[1603,58406+69])
                                                      Pexp_field
                                                      expression (typing/typemod.ml[1603,58406+47]..[1603,58406+52])
                                                        Pexp_ident "sincl" (typing/typemod.ml[1603,58406+47]..[1603,58406+52])
                                                      "pincl_attributes" (typing/typemod.ml[1603,58406+53]..[1603,58406+69])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1604,58476+16]..[1604,58476+51])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (typing/typemod.ml[1604,58476+21]..[1604,58476+23])
                                                        Ppat_construct "()" (typing/typemod.ml[1604,58476+21]..[1604,58476+23])
                                                        None
                                                      expression (typing/typemod.ml[1604,58476+27]..[1604,58476+50])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[1604,58476+27]..[1604,58476+41])
                                                          Pexp_ident "transl_modtype" (typing/typemod.ml[1604,58476+27]..[1604,58476+41])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1604,58476+42]..[1604,58476+45])
                                                              Pexp_ident "env" (typing/typemod.ml[1604,58476+42]..[1604,58476+45])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1604,58476+46]..[1604,58476+50])
                                                              Pexp_ident "smty" (typing/typemod.ml[1604,58476+46]..[1604,58476+50])
                                                        ]
                                                ]
                                          ]
                                          expression (typing/typemod.ml[1606,58543+12]..[1623,59237+21])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[1606,58543+16]..[1606,58543+19])
                                                  Ppat_var "mty" (typing/typemod.ml[1606,58543+16]..[1606,58543+19])
                                                expression (typing/typemod.ml[1606,58543+22]..[1606,58543+35])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[1606,58543+22]..[1606,58543+26])
                                                    Pexp_ident "tmty" (typing/typemod.ml[1606,58543+22]..[1606,58543+26])
                                                  "mty_type" (typing/typemod.ml[1606,58543+27]..[1606,58543+35])
                                            ]
                                            expression (typing/typemod.ml[1607,58582+12]..[1623,59237+21])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typemod.ml[1607,58582+16]..[1607,58582+21])
                                                    Ppat_var "scope" (typing/typemod.ml[1607,58582+16]..[1607,58582+21])
                                                  expression (typing/typemod.ml[1607,58582+24]..[1607,58582+45])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[1607,58582+24]..[1607,58582+42])
                                                      Pexp_ident "Ctype.create_scope" (typing/typemod.ml[1607,58582+24]..[1607,58582+42])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1607,58582+43]..[1607,58582+45])
                                                          Pexp_construct "()" (typing/typemod.ml[1607,58582+43]..[1607,58582+45])
                                                          None
                                                    ]
                                              ]
                                              expression (typing/typemod.ml[1608,58631+12]..[1623,59237+21])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typemod.ml[1608,58631+16]..[1608,58631+26])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typemod.ml[1608,58631+16]..[1608,58631+18])
                                                          Ppat_var "sg" (typing/typemod.ml[1608,58631+16]..[1608,58631+18])
                                                        pattern (typing/typemod.ml[1608,58631+20]..[1608,58631+26])
                                                          Ppat_var "newenv" (typing/typemod.ml[1608,58631+20]..[1608,58631+26])
                                                      ]
                                                    expression (typing/typemod.ml[1608,58631+29]..[1609,58687+62])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[1608,58631+29]..[1608,58631+48])
                                                        Pexp_ident "Env.enter_signature" (typing/typemod.ml[1608,58631+29]..[1608,58631+48])
                                                      [
                                                        <arg>
                                                        Labelled "scope"
                                                          expression (typing/typemod.ml[1608,58631+50]..[1608,58631+55])
                                                            Pexp_ident "scope" (typing/typemod.ml[1608,58631+50]..[1608,58631+55])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1609,58687+23]..[1609,58687+58])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1609,58687+24]..[1609,58687+35])
                                                              Pexp_ident "extract_sig" (typing/typemod.ml[1609,58687+24]..[1609,58687+35])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1609,58687+36]..[1609,58687+39])
                                                                  Pexp_ident "env" (typing/typemod.ml[1609,58687+36]..[1609,58687+39])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1609,58687+40]..[1609,58687+53])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[1609,58687+40]..[1609,58687+44])
                                                                    Pexp_ident "smty" (typing/typemod.ml[1609,58687+40]..[1609,58687+44])
                                                                  "pmty_loc" (typing/typemod.ml[1609,58687+45]..[1609,58687+53])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1609,58687+54]..[1609,58687+57])
                                                                  Pexp_ident "mty" (typing/typemod.ml[1609,58687+54]..[1609,58687+57])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1609,58687+59]..[1609,58687+62])
                                                            Pexp_ident "env" (typing/typemod.ml[1609,58687+59]..[1609,58687+62])
                                                      ]
                                                ]
                                                expression (typing/typemod.ml[1610,58753+12]..[1623,59237+21])
                                                  Pexp_sequence
                                                  expression (typing/typemod.ml[1610,58753+12]..[1612,58853+16])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[1610,58753+12]..[1610,58753+32])
                                                      Pexp_ident "Signature_group.iter" (typing/typemod.ml[1610,58753+12]..[1610,58753+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1611,58786+14]..[1611,58786+66])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[1611,58786+15]..[1611,58786+45])
                                                            Pexp_ident "Signature_names.check_sig_item" (typing/typemod.ml[1611,58786+15]..[1611,58786+45])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1611,58786+46]..[1611,58786+51])
                                                                Pexp_ident "names" (typing/typemod.ml[1611,58786+46]..[1611,58786+51])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1611,58786+52]..[1611,58786+65])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[1611,58786+52]..[1611,58786+56])
                                                                  Pexp_ident "item" (typing/typemod.ml[1611,58786+52]..[1611,58786+56])
                                                                "psig_loc" (typing/typemod.ml[1611,58786+57]..[1611,58786+65])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1612,58853+14]..[1612,58853+16])
                                                          Pexp_ident "sg" (typing/typemod.ml[1612,58853+14]..[1612,58853+16])
                                                    ]
                                                  expression (typing/typemod.ml[1613,58871+12]..[1623,59237+21])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typemod.ml[1613,58871+16]..[1613,58871+20])
                                                          Ppat_var "incl" (typing/typemod.ml[1613,58871+16]..[1613,58871+20])
                                                        expression (typing/typemod.ml[1614,58894+14]..[1618,59061+15])
                                                          Pexp_record
                                                          [
                                                            "incl_mod" (typing/typemod.ml[1614,58894+16]..[1614,58894+24])
                                                              expression (typing/typemod.ml[1614,58894+27]..[1614,58894+31])
                                                                Pexp_ident "tmty" (typing/typemod.ml[1614,58894+27]..[1614,58894+31])
                                                            "incl_type" (typing/typemod.ml[1615,58927+16]..[1615,58927+25])
                                                              expression (typing/typemod.ml[1615,58927+28]..[1615,58927+30])
                                                                Pexp_ident "sg" (typing/typemod.ml[1615,58927+28]..[1615,58927+30])
                                                            "incl_attributes" (typing/typemod.ml[1616,58959+16]..[1616,58959+31])
                                                              expression (typing/typemod.ml[1616,58959+34]..[1616,58959+56])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[1616,58959+34]..[1616,58959+39])
                                                                  Pexp_ident "sincl" (typing/typemod.ml[1616,58959+34]..[1616,58959+39])
                                                                "pincl_attributes" (typing/typemod.ml[1616,58959+40]..[1616,58959+56])
                                                            "incl_loc" (typing/typemod.ml[1617,59017+16]..[1617,59017+24])
                                                              expression (typing/typemod.ml[1617,59017+27]..[1617,59017+42])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[1617,59017+27]..[1617,59017+32])
                                                                  Pexp_ident "sincl" (typing/typemod.ml[1617,59017+27]..[1617,59017+32])
                                                                "pincl_loc" (typing/typemod.ml[1617,59017+33]..[1617,59017+42])
                                                          ]
                                                          None
                                                    ]
                                                    expression (typing/typemod.ml[1620,59092+12]..[1623,59237+21])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typemod.ml[1620,59092+16]..[1620,59092+38])
                                                            Ppat_tuple
                                                            [
                                                              pattern (typing/typemod.ml[1620,59092+17]..[1620,59092+21])
                                                                Ppat_var "trem" (typing/typemod.ml[1620,59092+17]..[1620,59092+21])
                                                              pattern (typing/typemod.ml[1620,59092+23]..[1620,59092+26])
                                                                Ppat_var "rem" (typing/typemod.ml[1620,59092+23]..[1620,59092+26])
                                                              pattern (typing/typemod.ml[1620,59092+28]..[1620,59092+37])
                                                                Ppat_var "final_env" (typing/typemod.ml[1620,59092+28]..[1620,59092+37])
                                                            ]
                                                          expression (typing/typemod.ml[1620,59092+41]..[1620,59092+63])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1620,59092+41]..[1620,59092+51])
                                                              Pexp_ident "transl_sig" (typing/typemod.ml[1620,59092+41]..[1620,59092+51])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1620,59092+52]..[1620,59092+58])
                                                                  Pexp_ident "newenv" (typing/typemod.ml[1620,59092+52]..[1620,59092+58])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1620,59092+59]..[1620,59092+63])
                                                                  Pexp_ident "srem" (typing/typemod.ml[1620,59092+59]..[1620,59092+63])
                                                            ]
                                                      ]
                                                      expression (typing/typemod.ml[1621,59160+12]..[1623,59237+21])
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typemod.ml[1621,59160+12]..[1621,59160+53])
                                                            Pexp_construct "::" (typing/typemod.ml[1621,59160+46]..[1621,59160+48])
                                                            Some
                                                              expression (typing/typemod.ml[1621,59160+12]..[1621,59160+53]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (typing/typemod.ml[1621,59160+12]..[1621,59160+45])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[1621,59160+12]..[1621,59160+17])
                                                                      Pexp_ident "mksig" (typing/typemod.ml[1621,59160+12]..[1621,59160+17])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[1621,59160+18]..[1621,59160+37])
  Pexp_construct "Tsig_include" (typing/typemod.ml[1621,59160+19]..[1621,59160+31])
  Some
    expression (typing/typemod.ml[1621,59160+32]..[1621,59160+36])
      Pexp_ident "incl" (typing/typemod.ml[1621,59160+32]..[1621,59160+36])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[1621,59160+38]..[1621,59160+41])
  Pexp_ident "env" (typing/typemod.ml[1621,59160+38]..[1621,59160+41])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[1621,59160+42]..[1621,59160+45])
  Pexp_ident "loc" (typing/typemod.ml[1621,59160+42]..[1621,59160+45])
                                                                    ]
                                                                  expression (typing/typemod.ml[1621,59160+49]..[1621,59160+53])
                                                                    Pexp_ident "trem" (typing/typemod.ml[1621,59160+49]..[1621,59160+53])
                                                                ]
                                                          expression (typing/typemod.ml[1622,59215+12]..[1622,59215+20])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1622,59215+15]..[1622,59215+16])
                                                              Pexp_ident "@" (typing/typemod.ml[1622,59215+15]..[1622,59215+16])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1622,59215+12]..[1622,59215+14])
                                                                  Pexp_ident "sg" (typing/typemod.ml[1622,59215+12]..[1622,59215+14])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1622,59215+17]..[1622,59215+20])
                                                                  Pexp_ident "rem" (typing/typemod.ml[1622,59215+17]..[1622,59215+20])
                                                            ]
                                                          expression (typing/typemod.ml[1623,59237+12]..[1623,59237+21])
                                                            Pexp_ident "final_env" (typing/typemod.ml[1623,59237+12]..[1623,59237+21])
                                                        ]
                                    <case>
                                      pattern (typing/typemod.ml[1624,59259+10]..[1624,59259+23])
                                        Ppat_construct "Psig_class" (typing/typemod.ml[1624,59259+10]..[1624,59259+20])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1624,59259+21]..[1624,59259+23])
                                            Ppat_var "cl" (typing/typemod.ml[1624,59259+21]..[1624,59259+23])
                                      expression (typing/typemod.ml[1625,59286+12]..[1651,60534+36])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[1625,59286+16]..[1625,59286+33])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[1625,59286+17]..[1625,59286+24])
                                                  Ppat_var "classes" (typing/typemod.ml[1625,59286+17]..[1625,59286+24])
                                                pattern (typing/typemod.ml[1625,59286+26]..[1625,59286+32])
                                                  Ppat_var "newenv" (typing/typemod.ml[1625,59286+26]..[1625,59286+32])
                                              ]
                                            expression (typing/typemod.ml[1625,59286+36]..[1625,59286+71])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1625,59286+36]..[1625,59286+64])
                                                Pexp_ident "Typeclass.class_descriptions" (typing/typemod.ml[1625,59286+36]..[1625,59286+64])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1625,59286+65]..[1625,59286+68])
                                                    Pexp_ident "env" (typing/typemod.ml[1625,59286+65]..[1625,59286+68])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1625,59286+69]..[1625,59286+71])
                                                    Pexp_ident "cl" (typing/typemod.ml[1625,59286+69]..[1625,59286+71])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[1626,59361+12]..[1651,60534+36])
                                          Pexp_sequence
                                          expression (typing/typemod.ml[1626,59361+12]..[1633,59762+21])
                                            Pexp_apply
                                            expression (typing/typemod.ml[1626,59361+12]..[1626,59361+21])
                                              Pexp_ident "List.iter" (typing/typemod.ml[1626,59361+12]..[1626,59361+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1626,59361+22]..[1633,59762+13])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/typemod.ml[1626,59361+27]..[1626,59361+30])
                                                    Ppat_var "cls" (typing/typemod.ml[1626,59361+27]..[1626,59361+30])
                                                  expression (typing/typemod.ml[1627,59395+14]..[1632,59689+72])
                                                    Pexp_open Fresh
                                                    module_expr (typing/typemod.ml[1627,59395+23]..[1627,59395+32])
                                                      Pmod_ident "Typeclass" (typing/typemod.ml[1627,59395+23]..[1627,59395+32])
                                                    expression (typing/typemod.ml[1628,59431+14]..[1632,59689+72])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typemod.ml[1628,59431+18]..[1628,59431+21])
                                                            Ppat_var "loc" (typing/typemod.ml[1628,59431+18]..[1628,59431+21])
                                                          expression (typing/typemod.ml[1628,59431+24]..[1628,59431+51])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[1628,59431+24]..[1628,59431+38])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[1628,59431+24]..[1628,59431+27])
                                                                Pexp_ident "cls" (typing/typemod.ml[1628,59431+24]..[1628,59431+27])
                                                              "cls_id_loc" (typing/typemod.ml[1628,59431+28]..[1628,59431+38])
                                                            "Location.loc" (typing/typemod.ml[1628,59431+39]..[1628,59431+51])
                                                      ]
                                                      expression (typing/typemod.ml[1629,59486+14]..[1632,59689+72])
                                                        Pexp_sequence
                                                        expression (typing/typemod.ml[1629,59486+14]..[1629,59486+65])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[1629,59486+14]..[1629,59486+40])
                                                            Pexp_ident "Signature_names.check_type" (typing/typemod.ml[1629,59486+14]..[1629,59486+40])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1629,59486+41]..[1629,59486+46])
                                                                Pexp_ident "names" (typing/typemod.ml[1629,59486+41]..[1629,59486+46])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1629,59486+47]..[1629,59486+50])
                                                                Pexp_ident "loc" (typing/typemod.ml[1629,59486+47]..[1629,59486+50])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1629,59486+51]..[1629,59486+65])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[1629,59486+51]..[1629,59486+54])
                                                                  Pexp_ident "cls" (typing/typemod.ml[1629,59486+51]..[1629,59486+54])
                                                                "cls_obj_id" (typing/typemod.ml[1629,59486+55]..[1629,59486+65])
                                                          ]
                                                        expression (typing/typemod.ml[1630,59553+14]..[1632,59689+72])
                                                          Pexp_sequence
                                                          expression (typing/typemod.ml[1630,59553+14]..[1630,59553+62])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1630,59553+14]..[1630,59553+41])
                                                              Pexp_ident "Signature_names.check_class" (typing/typemod.ml[1630,59553+14]..[1630,59553+41])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1630,59553+42]..[1630,59553+47])
                                                                  Pexp_ident "names" (typing/typemod.ml[1630,59553+42]..[1630,59553+47])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1630,59553+48]..[1630,59553+51])
                                                                  Pexp_ident "loc" (typing/typemod.ml[1630,59553+48]..[1630,59553+51])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1630,59553+52]..[1630,59553+62])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[1630,59553+52]..[1630,59553+55])
                                                                    Pexp_ident "cls" (typing/typemod.ml[1630,59553+52]..[1630,59553+55])
                                                                  "cls_id" (typing/typemod.ml[1630,59553+56]..[1630,59553+62])
                                                            ]
                                                          expression (typing/typemod.ml[1631,59617+14]..[1632,59689+72])
                                                            Pexp_sequence
                                                            expression (typing/typemod.ml[1631,59617+14]..[1631,59617+70])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[1631,59617+14]..[1631,59617+46])
                                                                Pexp_ident "Signature_names.check_class_type" (typing/typemod.ml[1631,59617+14]..[1631,59617+46])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1631,59617+47]..[1631,59617+52])
                                                                    Pexp_ident "names" (typing/typemod.ml[1631,59617+47]..[1631,59617+52])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1631,59617+53]..[1631,59617+56])
                                                                    Pexp_ident "loc" (typing/typemod.ml[1631,59617+53]..[1631,59617+56])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1631,59617+57]..[1631,59617+70])
                                                                    Pexp_field
                                                                    expression (typing/typemod.ml[1631,59617+57]..[1631,59617+60])
                                                                      Pexp_ident "cls" (typing/typemod.ml[1631,59617+57]..[1631,59617+60])
                                                                    "cls_ty_id" (typing/typemod.ml[1631,59617+61]..[1631,59617+70])
                                                              ]
                                                            expression (typing/typemod.ml[1632,59689+14]..[1632,59689+71])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[1632,59689+14]..[1632,59689+40])
                                                                Pexp_ident "Signature_names.check_type" (typing/typemod.ml[1632,59689+14]..[1632,59689+40])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1632,59689+41]..[1632,59689+46])
                                                                    Pexp_ident "names" (typing/typemod.ml[1632,59689+41]..[1632,59689+46])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1632,59689+47]..[1632,59689+50])
                                                                    Pexp_ident "loc" (typing/typemod.ml[1632,59689+47]..[1632,59689+50])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1632,59689+51]..[1632,59689+71])
                                                                    Pexp_field
                                                                    expression (typing/typemod.ml[1632,59689+51]..[1632,59689+54])
                                                                      Pexp_ident "cls" (typing/typemod.ml[1632,59689+51]..[1632,59689+54])
                                                                    "cls_typesharp_id" (typing/typemod.ml[1632,59689+55]..[1632,59689+71])
                                                              ]
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1633,59762+14]..[1633,59762+21])
                                                  Pexp_ident "classes" (typing/typemod.ml[1633,59762+14]..[1633,59762+21])
                                            ]
                                          expression (typing/typemod.ml[1634,59785+12]..[1651,60534+36])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[1634,59785+16]..[1634,59785+38])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typemod.ml[1634,59785+17]..[1634,59785+21])
                                                      Ppat_var "trem" (typing/typemod.ml[1634,59785+17]..[1634,59785+21])
                                                    pattern (typing/typemod.ml[1634,59785+23]..[1634,59785+26])
                                                      Ppat_var "rem" (typing/typemod.ml[1634,59785+23]..[1634,59785+26])
                                                    pattern (typing/typemod.ml[1634,59785+28]..[1634,59785+37])
                                                      Ppat_var "final_env" (typing/typemod.ml[1634,59785+28]..[1634,59785+37])
                                                  ]
                                                expression (typing/typemod.ml[1634,59785+41]..[1634,59785+63])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[1634,59785+41]..[1634,59785+51])
                                                    Pexp_ident "transl_sig" (typing/typemod.ml[1634,59785+41]..[1634,59785+51])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1634,59785+52]..[1634,59785+58])
                                                        Pexp_ident "newenv" (typing/typemod.ml[1634,59785+52]..[1634,59785+58])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1634,59785+59]..[1634,59785+63])
                                                        Pexp_ident "srem" (typing/typemod.ml[1634,59785+59]..[1634,59785+63])
                                                  ]
                                            ]
                                            expression (typing/typemod.ml[1635,59852+12]..[1651,60534+36])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typemod.ml[1635,59852+16]..[1635,59852+18])
                                                    Ppat_var "sg" (typing/typemod.ml[1635,59852+16]..[1635,59852+18])
                                                  expression (typing/typemod.ml[1636,59873+14]..[1643,60277+29])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[1643,60277+14]..[1643,60277+16])
                                                      Pexp_ident "|>" (typing/typemod.ml[1643,60277+14]..[1643,60277+16])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1636,59873+14]..[1642,60247+29])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[1636,59873+14]..[1636,59873+21])
                                                            Pexp_ident "map_rec" (typing/typemod.ml[1636,59873+14]..[1636,59873+21])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1636,59873+22]..[1642,60247+15])
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (typing/typemod.ml[1636,59873+27]..[1636,59873+29])
                                                                  Ppat_var "rs" (typing/typemod.ml[1636,59873+27]..[1636,59873+29])
                                                                expression (typing/typemod.ml[1636,59873+30]..[1641,60170+76]) ghost
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (typing/typemod.ml[1636,59873+30]..[1636,59873+33])
                                                                    Ppat_var "cls" (typing/typemod.ml[1636,59873+30]..[1636,59873+33])
                                                                  expression (typing/typemod.ml[1637,59910+16]..[1641,60170+76])
                                                                    Pexp_open Fresh
                                                                    module_expr (typing/typemod.ml[1637,59910+25]..[1637,59910+34])
                                                                      Pmod_ident "Typeclass" (typing/typemod.ml[1637,59910+25]..[1637,59910+34])
                                                                    expression (typing/typemod.ml[1638,59948+16]..[1641,60170+76])
                                                                      Pexp_construct "::" (typing/typemod.ml[1638,59948+17]..[1641,60170+76]) ghost
                                                                      Some
expression (typing/typemod.ml[1638,59948+17]..[1641,60170+76]) ghost
  Pexp_tuple
  [
    expression (typing/typemod.ml[1638,59948+17]..[1638,59948+66])
      Pexp_construct "Sig_class" (typing/typemod.ml[1638,59948+17]..[1638,59948+26])
      Some
        expression (typing/typemod.ml[1638,59948+26]..[1638,59948+66])
          Pexp_tuple
          [
            expression (typing/typemod.ml[1638,59948+27]..[1638,59948+37])
              Pexp_field
              expression (typing/typemod.ml[1638,59948+27]..[1638,59948+30])
                Pexp_ident "cls" (typing/typemod.ml[1638,59948+27]..[1638,59948+30])
              "cls_id" (typing/typemod.ml[1638,59948+31]..[1638,59948+37])
            expression (typing/typemod.ml[1638,59948+39]..[1638,59948+51])
              Pexp_field
              expression (typing/typemod.ml[1638,59948+39]..[1638,59948+42])
                Pexp_ident "cls" (typing/typemod.ml[1638,59948+39]..[1638,59948+42])
              "cls_decl" (typing/typemod.ml[1638,59948+43]..[1638,59948+51])
            expression (typing/typemod.ml[1638,59948+53]..[1638,59948+55])
              Pexp_ident "rs" (typing/typemod.ml[1638,59948+53]..[1638,59948+55])
            expression (typing/typemod.ml[1638,59948+57]..[1638,59948+65])
              Pexp_construct "Exported" (typing/typemod.ml[1638,59948+57]..[1638,59948+65])
              None
          ]
    expression (typing/typemod.ml[1639,60016+17]..[1641,60170+76]) ghost
      Pexp_construct "::" (typing/typemod.ml[1639,60016+17]..[1641,60170+76]) ghost
      Some
        expression (typing/typemod.ml[1639,60016+17]..[1641,60170+76]) ghost
          Pexp_tuple
          [
            expression (typing/typemod.ml[1639,60016+17]..[1639,60016+77])
              Pexp_construct "Sig_class_type" (typing/typemod.ml[1639,60016+17]..[1639,60016+31])
              Some
                expression (typing/typemod.ml[1639,60016+31]..[1639,60016+77])
                  Pexp_tuple
                  [
                    expression (typing/typemod.ml[1639,60016+32]..[1639,60016+45])
                      Pexp_field
                      expression (typing/typemod.ml[1639,60016+32]..[1639,60016+35])
                        Pexp_ident "cls" (typing/typemod.ml[1639,60016+32]..[1639,60016+35])
                      "cls_ty_id" (typing/typemod.ml[1639,60016+36]..[1639,60016+45])
                    expression (typing/typemod.ml[1639,60016+47]..[1639,60016+62])
                      Pexp_field
                      expression (typing/typemod.ml[1639,60016+47]..[1639,60016+50])
                        Pexp_ident "cls" (typing/typemod.ml[1639,60016+47]..[1639,60016+50])
                      "cls_ty_decl" (typing/typemod.ml[1639,60016+51]..[1639,60016+62])
                    expression (typing/typemod.ml[1639,60016+64]..[1639,60016+66])
                      Pexp_ident "rs" (typing/typemod.ml[1639,60016+64]..[1639,60016+66])
                    expression (typing/typemod.ml[1639,60016+68]..[1639,60016+76])
                      Pexp_construct "Exported" (typing/typemod.ml[1639,60016+68]..[1639,60016+76])
                      None
                  ]
            expression (typing/typemod.ml[1640,60095+17]..[1641,60170+76]) ghost
              Pexp_construct "::" (typing/typemod.ml[1640,60095+17]..[1641,60170+76]) ghost
              Some
                expression (typing/typemod.ml[1640,60095+17]..[1641,60170+76]) ghost
                  Pexp_tuple
                  [
                    expression (typing/typemod.ml[1640,60095+17]..[1640,60095+73])
                      Pexp_construct "Sig_type" (typing/typemod.ml[1640,60095+17]..[1640,60095+25])
                      Some
                        expression (typing/typemod.ml[1640,60095+25]..[1640,60095+73])
                          Pexp_tuple
                          [
                            expression (typing/typemod.ml[1640,60095+26]..[1640,60095+40])
                              Pexp_field
                              expression (typing/typemod.ml[1640,60095+26]..[1640,60095+29])
                                Pexp_ident "cls" (typing/typemod.ml[1640,60095+26]..[1640,60095+29])
                              "cls_obj_id" (typing/typemod.ml[1640,60095+30]..[1640,60095+40])
                            expression (typing/typemod.ml[1640,60095+42]..[1640,60095+58])
                              Pexp_field
                              expression (typing/typemod.ml[1640,60095+42]..[1640,60095+45])
                                Pexp_ident "cls" (typing/typemod.ml[1640,60095+42]..[1640,60095+45])
                              "cls_obj_abbr" (typing/typemod.ml[1640,60095+46]..[1640,60095+58])
                            expression (typing/typemod.ml[1640,60095+60]..[1640,60095+62])
                              Pexp_ident "rs" (typing/typemod.ml[1640,60095+60]..[1640,60095+62])
                            expression (typing/typemod.ml[1640,60095+64]..[1640,60095+72])
                              Pexp_construct "Exported" (typing/typemod.ml[1640,60095+64]..[1640,60095+72])
                              None
                          ]
                    expression (typing/typemod.ml[1641,60170+17]..[1641,60170+76]) ghost
                      Pexp_construct "::" (typing/typemod.ml[1641,60170+17]..[1641,60170+76]) ghost
                      Some
                        expression (typing/typemod.ml[1641,60170+17]..[1641,60170+76]) ghost
                          Pexp_tuple
                          [
                            expression (typing/typemod.ml[1641,60170+17]..[1641,60170+75])
                              Pexp_construct "Sig_type" (typing/typemod.ml[1641,60170+17]..[1641,60170+25])
                              Some
                                expression (typing/typemod.ml[1641,60170+25]..[1641,60170+75])
                                  Pexp_tuple
                                  [
                                    expression (typing/typemod.ml[1641,60170+26]..[1641,60170+46])
                                      Pexp_field
                                      expression (typing/typemod.ml[1641,60170+26]..[1641,60170+29])
                                        Pexp_ident "cls" (typing/typemod.ml[1641,60170+26]..[1641,60170+29])
                                      "cls_typesharp_id" (typing/typemod.ml[1641,60170+30]..[1641,60170+46])
                                    expression (typing/typemod.ml[1641,60170+48]..[1641,60170+60])
                                      Pexp_field
                                      expression (typing/typemod.ml[1641,60170+48]..[1641,60170+51])
                                        Pexp_ident "cls" (typing/typemod.ml[1641,60170+48]..[1641,60170+51])
                                      "cls_abbr" (typing/typemod.ml[1641,60170+52]..[1641,60170+60])
                                    expression (typing/typemod.ml[1641,60170+62]..[1641,60170+64])
                                      Pexp_ident "rs" (typing/typemod.ml[1641,60170+62]..[1641,60170+64])
                                    expression (typing/typemod.ml[1641,60170+66]..[1641,60170+74])
                                      Pexp_construct "Exported" (typing/typemod.ml[1641,60170+66]..[1641,60170+74])
                                      None
                                  ]
                            expression (typing/typemod.ml[1641,60170+75]..[1641,60170+76]) ghost
                              Pexp_construct "[]" (typing/typemod.ml[1641,60170+75]..[1641,60170+76]) ghost
                              None
                          ]
                  ]
          ]
  ]
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1642,60247+16]..[1642,60247+23])
                                                                Pexp_ident "classes" (typing/typemod.ml[1642,60247+16]..[1642,60247+23])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1642,60247+24]..[1642,60247+29])
                                                                Pexp_construct "::" (typing/typemod.ml[1642,60247+25]..[1642,60247+29]) ghost
                                                                Some
                                                                  expression (typing/typemod.ml[1642,60247+25]..[1642,60247+29]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typemod.ml[1642,60247+25]..[1642,60247+28])
Pexp_ident "rem" (typing/typemod.ml[1642,60247+25]..[1642,60247+28])
                                                                      expression (typing/typemod.ml[1642,60247+28]..[1642,60247+29]) ghost
Pexp_construct "[]" (typing/typemod.ml[1642,60247+28]..[1642,60247+29]) ghost
None
                                                                    ]
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1643,60277+17]..[1643,60277+29])
                                                          Pexp_ident "List.flatten" (typing/typemod.ml[1643,60277+17]..[1643,60277+29])
                                                    ]
                                              ]
                                              expression (typing/typemod.ml[1645,60322+12]..[1651,60534+36])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typemod.ml[1645,60322+16]..[1645,60322+25])
                                                      Ppat_var "typedtree" (typing/typemod.ml[1645,60322+16]..[1645,60322+25])
                                                    expression (typing/typemod.ml[1646,60350+14]..[1649,60497+21])
                                                      Pexp_construct "::" (typing/typemod.ml[1649,60497+14]..[1649,60497+16])
                                                      Some
                                                        expression (typing/typemod.ml[1646,60350+14]..[1649,60497+21]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/typemod.ml[1646,60350+14]..[1648,60428+68])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[1646,60350+14]..[1646,60350+19])
                                                                Pexp_ident "mksig" (typing/typemod.ml[1646,60350+14]..[1646,60350+19])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1646,60350+20]..[1648,60428+60])
                                                                    Pexp_construct "Tsig_class" (typing/typemod.ml[1646,60350+21]..[1646,60350+31])
                                                                    Some
                                                                      expression (typing/typemod.ml[1647,60382+23]..[1648,60428+59])
Pexp_apply
expression (typing/typemod.ml[1647,60382+24]..[1647,60382+32])
  Pexp_ident "List.map" (typing/typemod.ml[1647,60382+24]..[1647,60382+32])
[
  <arg>
  Nolabel
    expression (typing/typemod.ml[1647,60382+33]..[1648,60428+50])
      Pexp_fun
      Nolabel
      None
      pattern (typing/typemod.ml[1647,60382+38]..[1647,60382+42])
        Ppat_var "decr" (typing/typemod.ml[1647,60382+38]..[1647,60382+42])
      expression (typing/typemod.ml[1648,60428+26]..[1648,60428+49])
        Pexp_field
        expression (typing/typemod.ml[1648,60428+26]..[1648,60428+30])
          Pexp_ident "decr" (typing/typemod.ml[1648,60428+26]..[1648,60428+30])
        "Typeclass.cls_info" (typing/typemod.ml[1648,60428+31]..[1648,60428+49])
  <arg>
  Nolabel
    expression (typing/typemod.ml[1648,60428+51]..[1648,60428+58])
      Pexp_ident "classes" (typing/typemod.ml[1648,60428+51]..[1648,60428+58])
]
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1648,60428+61]..[1648,60428+64])
                                                                    Pexp_ident "env" (typing/typemod.ml[1648,60428+61]..[1648,60428+64])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1648,60428+65]..[1648,60428+68])
                                                                    Pexp_ident "loc" (typing/typemod.ml[1648,60428+65]..[1648,60428+68])
                                                              ]
                                                            expression (typing/typemod.ml[1649,60497+17]..[1649,60497+21])
                                                              Pexp_ident "trem" (typing/typemod.ml[1649,60497+17]..[1649,60497+21])
                                                          ]
                                                ]
                                                expression (typing/typemod.ml[1651,60534+12]..[1651,60534+36])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typemod.ml[1651,60534+12]..[1651,60534+21])
                                                      Pexp_ident "typedtree" (typing/typemod.ml[1651,60534+12]..[1651,60534+21])
                                                    expression (typing/typemod.ml[1651,60534+23]..[1651,60534+25])
                                                      Pexp_ident "sg" (typing/typemod.ml[1651,60534+23]..[1651,60534+25])
                                                    expression (typing/typemod.ml[1651,60534+27]..[1651,60534+36])
                                                      Pexp_ident "final_env" (typing/typemod.ml[1651,60534+27]..[1651,60534+36])
                                                  ]
                                    <case>
                                      pattern (typing/typemod.ml[1652,60571+10]..[1652,60571+28])
                                        Ppat_construct "Psig_class_type" (typing/typemod.ml[1652,60571+10]..[1652,60571+25])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1652,60571+26]..[1652,60571+28])
                                            Ppat_var "cl" (typing/typemod.ml[1652,60571+26]..[1652,60571+28])
                                      expression (typing/typemod.ml[1653,60603+12]..[1681,61839+36])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[1653,60603+16]..[1653,60603+33])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[1653,60603+17]..[1653,60603+24])
                                                  Ppat_var "classes" (typing/typemod.ml[1653,60603+17]..[1653,60603+24])
                                                pattern (typing/typemod.ml[1653,60603+26]..[1653,60603+32])
                                                  Ppat_var "newenv" (typing/typemod.ml[1653,60603+26]..[1653,60603+32])
                                              ]
                                            expression (typing/typemod.ml[1653,60603+36]..[1653,60603+76])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1653,60603+36]..[1653,60603+69])
                                                Pexp_ident "Typeclass.class_type_declarations" (typing/typemod.ml[1653,60603+36]..[1653,60603+69])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1653,60603+70]..[1653,60603+73])
                                                    Pexp_ident "env" (typing/typemod.ml[1653,60603+70]..[1653,60603+73])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1653,60603+74]..[1653,60603+76])
                                                    Pexp_ident "cl" (typing/typemod.ml[1653,60603+74]..[1653,60603+76])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[1654,60683+12]..[1681,61839+36])
                                          Pexp_sequence
                                          expression (typing/typemod.ml[1654,60683+12]..[1660,61033+21])
                                            Pexp_apply
                                            expression (typing/typemod.ml[1654,60683+12]..[1654,60683+21])
                                              Pexp_ident "List.iter" (typing/typemod.ml[1654,60683+12]..[1654,60683+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1654,60683+22]..[1660,61033+13])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/typemod.ml[1654,60683+27]..[1654,60683+31])
                                                    Ppat_var "decl" (typing/typemod.ml[1654,60683+27]..[1654,60683+31])
                                                  expression (typing/typemod.ml[1655,60718+14]..[1659,60957+75])
                                                    Pexp_open Fresh
                                                    module_expr (typing/typemod.ml[1655,60718+23]..[1655,60718+32])
                                                      Pmod_ident "Typeclass" (typing/typemod.ml[1655,60718+23]..[1655,60718+32])
                                                    expression (typing/typemod.ml[1656,60754+14]..[1659,60957+75])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typemod.ml[1656,60754+18]..[1656,60754+21])
                                                            Ppat_var "loc" (typing/typemod.ml[1656,60754+18]..[1656,60754+21])
                                                          expression (typing/typemod.ml[1656,60754+24]..[1656,60754+54])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[1656,60754+24]..[1656,60754+41])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[1656,60754+24]..[1656,60754+28])
                                                                Pexp_ident "decl" (typing/typemod.ml[1656,60754+24]..[1656,60754+28])
                                                              "clsty_id_loc" (typing/typemod.ml[1656,60754+29]..[1656,60754+41])
                                                            "Location.loc" (typing/typemod.ml[1656,60754+42]..[1656,60754+54])
                                                      ]
                                                      expression (typing/typemod.ml[1657,60812+14]..[1659,60957+75])
                                                        Pexp_sequence
                                                        expression (typing/typemod.ml[1657,60812+14]..[1657,60812+73])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[1657,60812+14]..[1657,60812+46])
                                                            Pexp_ident "Signature_names.check_class_type" (typing/typemod.ml[1657,60812+14]..[1657,60812+46])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1657,60812+47]..[1657,60812+52])
                                                                Pexp_ident "names" (typing/typemod.ml[1657,60812+47]..[1657,60812+52])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1657,60812+53]..[1657,60812+56])
                                                                Pexp_ident "loc" (typing/typemod.ml[1657,60812+53]..[1657,60812+56])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1657,60812+57]..[1657,60812+73])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[1657,60812+57]..[1657,60812+61])
                                                                  Pexp_ident "decl" (typing/typemod.ml[1657,60812+57]..[1657,60812+61])
                                                                "clsty_ty_id" (typing/typemod.ml[1657,60812+62]..[1657,60812+73])
                                                          ]
                                                        expression (typing/typemod.ml[1658,60887+14]..[1659,60957+75])
                                                          Pexp_sequence
                                                          expression (typing/typemod.ml[1658,60887+14]..[1658,60887+68])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1658,60887+14]..[1658,60887+40])
                                                              Pexp_ident "Signature_names.check_type" (typing/typemod.ml[1658,60887+14]..[1658,60887+40])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1658,60887+41]..[1658,60887+46])
                                                                  Pexp_ident "names" (typing/typemod.ml[1658,60887+41]..[1658,60887+46])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1658,60887+47]..[1658,60887+50])
                                                                  Pexp_ident "loc" (typing/typemod.ml[1658,60887+47]..[1658,60887+50])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1658,60887+51]..[1658,60887+68])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[1658,60887+51]..[1658,60887+55])
                                                                    Pexp_ident "decl" (typing/typemod.ml[1658,60887+51]..[1658,60887+55])
                                                                  "clsty_obj_id" (typing/typemod.ml[1658,60887+56]..[1658,60887+68])
                                                            ]
                                                          expression (typing/typemod.ml[1659,60957+14]..[1659,60957+74])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1659,60957+14]..[1659,60957+40])
                                                              Pexp_ident "Signature_names.check_type" (typing/typemod.ml[1659,60957+14]..[1659,60957+40])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1659,60957+41]..[1659,60957+46])
                                                                  Pexp_ident "names" (typing/typemod.ml[1659,60957+41]..[1659,60957+46])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1659,60957+47]..[1659,60957+50])
                                                                  Pexp_ident "loc" (typing/typemod.ml[1659,60957+47]..[1659,60957+50])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1659,60957+51]..[1659,60957+74])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[1659,60957+51]..[1659,60957+55])
                                                                    Pexp_ident "decl" (typing/typemod.ml[1659,60957+51]..[1659,60957+55])
                                                                  "clsty_typesharp_id" (typing/typemod.ml[1659,60957+56]..[1659,60957+74])
                                                            ]
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1660,61033+14]..[1660,61033+21])
                                                  Pexp_ident "classes" (typing/typemod.ml[1660,61033+14]..[1660,61033+21])
                                            ]
                                          expression (typing/typemod.ml[1661,61056+12]..[1681,61839+36])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[1661,61056+16]..[1661,61056+37])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typemod.ml[1661,61056+17]..[1661,61056+21])
                                                      Ppat_var "trem" (typing/typemod.ml[1661,61056+17]..[1661,61056+21])
                                                    pattern (typing/typemod.ml[1661,61056+22]..[1661,61056+25])
                                                      Ppat_var "rem" (typing/typemod.ml[1661,61056+22]..[1661,61056+25])
                                                    pattern (typing/typemod.ml[1661,61056+27]..[1661,61056+36])
                                                      Ppat_var "final_env" (typing/typemod.ml[1661,61056+27]..[1661,61056+36])
                                                  ]
                                                expression (typing/typemod.ml[1661,61056+40]..[1661,61056+62])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[1661,61056+40]..[1661,61056+50])
                                                    Pexp_ident "transl_sig" (typing/typemod.ml[1661,61056+40]..[1661,61056+50])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1661,61056+51]..[1661,61056+57])
                                                        Pexp_ident "newenv" (typing/typemod.ml[1661,61056+51]..[1661,61056+57])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1661,61056+58]..[1661,61056+62])
                                                        Pexp_ident "srem" (typing/typemod.ml[1661,61056+58]..[1661,61056+62])
                                                  ]
                                            ]
                                            expression (typing/typemod.ml[1662,61122+12]..[1681,61839+36])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typemod.ml[1662,61122+16]..[1662,61122+18])
                                                    Ppat_var "sg" (typing/typemod.ml[1662,61122+16]..[1662,61122+18])
                                                  expression (typing/typemod.ml[1663,61143+14]..[1672,61573+29])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[1672,61573+14]..[1672,61573+16])
                                                      Pexp_ident "|>" (typing/typemod.ml[1672,61573+14]..[1672,61573+16])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1663,61143+14]..[1671,61543+29])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[1663,61143+14]..[1663,61143+21])
                                                            Pexp_ident "map_rec" (typing/typemod.ml[1663,61143+14]..[1663,61143+21])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1663,61143+22]..[1671,61543+15])
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (typing/typemod.ml[1663,61143+27]..[1663,61143+29])
                                                                  Ppat_var "rs" (typing/typemod.ml[1663,61143+27]..[1663,61143+29])
                                                                expression (typing/typemod.ml[1663,61143+30]..[1670,61525+17]) ghost
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (typing/typemod.ml[1663,61143+30]..[1663,61143+34])
                                                                    Ppat_var "decl" (typing/typemod.ml[1663,61143+30]..[1663,61143+34])
                                                                  expression (typing/typemod.ml[1664,61181+16]..[1670,61525+17])
                                                                    Pexp_open Fresh
                                                                    module_expr (typing/typemod.ml[1664,61181+25]..[1664,61181+34])
                                                                      Pmod_ident "Typeclass" (typing/typemod.ml[1664,61181+25]..[1664,61181+34])
                                                                    expression (typing/typemod.ml[1665,61219+16]..[1670,61525+17])
                                                                      Pexp_construct "::" (typing/typemod.ml[1665,61219+17]..[1670,61525+17]) ghost
                                                                      Some
expression (typing/typemod.ml[1665,61219+17]..[1670,61525+17]) ghost
  Pexp_tuple
  [
    expression (typing/typemod.ml[1665,61219+17]..[1666,61293+41])
      Pexp_construct "Sig_class_type" (typing/typemod.ml[1665,61219+17]..[1665,61219+31])
      Some
        expression (typing/typemod.ml[1665,61219+31]..[1666,61293+41])
          Pexp_tuple
          [
            expression (typing/typemod.ml[1665,61219+32]..[1665,61219+48])
              Pexp_field
              expression (typing/typemod.ml[1665,61219+32]..[1665,61219+36])
                Pexp_ident "decl" (typing/typemod.ml[1665,61219+32]..[1665,61219+36])
              "clsty_ty_id" (typing/typemod.ml[1665,61219+37]..[1665,61219+48])
            expression (typing/typemod.ml[1665,61219+50]..[1665,61219+68])
              Pexp_field
              expression (typing/typemod.ml[1665,61219+50]..[1665,61219+54])
                Pexp_ident "decl" (typing/typemod.ml[1665,61219+50]..[1665,61219+54])
              "clsty_ty_decl" (typing/typemod.ml[1665,61219+55]..[1665,61219+68])
            expression (typing/typemod.ml[1665,61219+70]..[1665,61219+72])
              Pexp_ident "rs" (typing/typemod.ml[1665,61219+70]..[1665,61219+72])
            expression (typing/typemod.ml[1666,61293+32]..[1666,61293+40])
              Pexp_construct "Exported" (typing/typemod.ml[1666,61293+32]..[1666,61293+40])
              None
          ]
    expression (typing/typemod.ml[1667,61336+17]..[1670,61525+17]) ghost
      Pexp_construct "::" (typing/typemod.ml[1667,61336+17]..[1670,61525+17]) ghost
      Some
        expression (typing/typemod.ml[1667,61336+17]..[1670,61525+17]) ghost
          Pexp_tuple
          [
            expression (typing/typemod.ml[1667,61336+17]..[1667,61336+79])
              Pexp_construct "Sig_type" (typing/typemod.ml[1667,61336+17]..[1667,61336+25])
              Some
                expression (typing/typemod.ml[1667,61336+25]..[1667,61336+79])
                  Pexp_tuple
                  [
                    expression (typing/typemod.ml[1667,61336+26]..[1667,61336+43])
                      Pexp_field
                      expression (typing/typemod.ml[1667,61336+26]..[1667,61336+30])
                        Pexp_ident "decl" (typing/typemod.ml[1667,61336+26]..[1667,61336+30])
                      "clsty_obj_id" (typing/typemod.ml[1667,61336+31]..[1667,61336+43])
                    expression (typing/typemod.ml[1667,61336+45]..[1667,61336+64])
                      Pexp_field
                      expression (typing/typemod.ml[1667,61336+45]..[1667,61336+49])
                        Pexp_ident "decl" (typing/typemod.ml[1667,61336+45]..[1667,61336+49])
                      "clsty_obj_abbr" (typing/typemod.ml[1667,61336+50]..[1667,61336+64])
                    expression (typing/typemod.ml[1667,61336+66]..[1667,61336+68])
                      Pexp_ident "rs" (typing/typemod.ml[1667,61336+66]..[1667,61336+68])
                    expression (typing/typemod.ml[1667,61336+70]..[1667,61336+78])
                      Pexp_construct "Exported" (typing/typemod.ml[1667,61336+70]..[1667,61336+78])
                      None
                  ]
            expression (typing/typemod.ml[1668,61417+17]..[1670,61525+17]) ghost
              Pexp_construct "::" (typing/typemod.ml[1668,61417+17]..[1670,61525+17]) ghost
              Some
                expression (typing/typemod.ml[1668,61417+17]..[1670,61525+17]) ghost
                  Pexp_tuple
                  [
                    expression (typing/typemod.ml[1668,61417+17]..[1669,61489+35])
                      Pexp_construct "Sig_type" (typing/typemod.ml[1668,61417+17]..[1668,61417+25])
                      Some
                        expression (typing/typemod.ml[1668,61417+25]..[1669,61489+35])
                          Pexp_tuple
                          [
                            expression (typing/typemod.ml[1668,61417+26]..[1668,61417+49])
                              Pexp_field
                              expression (typing/typemod.ml[1668,61417+26]..[1668,61417+30])
                                Pexp_ident "decl" (typing/typemod.ml[1668,61417+26]..[1668,61417+30])
                              "clsty_typesharp_id" (typing/typemod.ml[1668,61417+31]..[1668,61417+49])
                            expression (typing/typemod.ml[1668,61417+51]..[1668,61417+66])
                              Pexp_field
                              expression (typing/typemod.ml[1668,61417+51]..[1668,61417+55])
                                Pexp_ident "decl" (typing/typemod.ml[1668,61417+51]..[1668,61417+55])
                              "clsty_abbr" (typing/typemod.ml[1668,61417+56]..[1668,61417+66])
                            expression (typing/typemod.ml[1668,61417+68]..[1668,61417+70])
                              Pexp_ident "rs" (typing/typemod.ml[1668,61417+68]..[1668,61417+70])
                            expression (typing/typemod.ml[1669,61489+26]..[1669,61489+34])
                              Pexp_construct "Exported" (typing/typemod.ml[1669,61489+26]..[1669,61489+34])
                              None
                          ]
                    expression (typing/typemod.ml[1670,61525+16]..[1670,61525+17]) ghost
                      Pexp_construct "[]" (typing/typemod.ml[1670,61525+16]..[1670,61525+17]) ghost
                      None
                  ]
          ]
  ]
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1671,61543+16]..[1671,61543+23])
                                                                Pexp_ident "classes" (typing/typemod.ml[1671,61543+16]..[1671,61543+23])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1671,61543+24]..[1671,61543+29])
                                                                Pexp_construct "::" (typing/typemod.ml[1671,61543+25]..[1671,61543+29]) ghost
                                                                Some
                                                                  expression (typing/typemod.ml[1671,61543+25]..[1671,61543+29]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typemod.ml[1671,61543+25]..[1671,61543+28])
Pexp_ident "rem" (typing/typemod.ml[1671,61543+25]..[1671,61543+28])
                                                                      expression (typing/typemod.ml[1671,61543+28]..[1671,61543+29]) ghost
Pexp_construct "[]" (typing/typemod.ml[1671,61543+28]..[1671,61543+29]) ghost
None
                                                                    ]
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1672,61573+17]..[1672,61573+29])
                                                          Pexp_ident "List.flatten" (typing/typemod.ml[1672,61573+17]..[1672,61573+29])
                                                    ]
                                              ]
                                              expression (typing/typemod.ml[1674,61618+12]..[1681,61839+36])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typemod.ml[1674,61618+16]..[1674,61618+25])
                                                      Ppat_var "typedtree" (typing/typemod.ml[1674,61618+16]..[1674,61618+25])
                                                    expression (typing/typemod.ml[1675,61646+14]..[1679,61802+21])
                                                      Pexp_construct "::" (typing/typemod.ml[1679,61802+14]..[1679,61802+16])
                                                      Some
                                                        expression (typing/typemod.ml[1675,61646+14]..[1679,61802+21]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/typemod.ml[1675,61646+14]..[1678,61778+23])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[1675,61646+14]..[1675,61646+19])
                                                                Pexp_ident "mksig" (typing/typemod.ml[1675,61646+14]..[1675,61646+19])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1676,61666+16]..[1677,61699+78])
                                                                    Pexp_construct "Tsig_class_type" (typing/typemod.ml[1676,61666+17]..[1676,61666+32])
                                                                    Some
                                                                      expression (typing/typemod.ml[1677,61699+19]..[1677,61699+77])
Pexp_apply
expression (typing/typemod.ml[1677,61699+20]..[1677,61699+28])
  Pexp_ident "List.map" (typing/typemod.ml[1677,61699+20]..[1677,61699+28])
[
  <arg>
  Nolabel
    expression (typing/typemod.ml[1677,61699+29]..[1677,61699+68])
      Pexp_fun
      Nolabel
      None
      pattern (typing/typemod.ml[1677,61699+34]..[1677,61699+38])
        Ppat_var "decl" (typing/typemod.ml[1677,61699+34]..[1677,61699+38])
      expression (typing/typemod.ml[1677,61699+42]..[1677,61699+67])
        Pexp_field
        expression (typing/typemod.ml[1677,61699+42]..[1677,61699+46])
          Pexp_ident "decl" (typing/typemod.ml[1677,61699+42]..[1677,61699+46])
        "Typeclass.clsty_info" (typing/typemod.ml[1677,61699+47]..[1677,61699+67])
  <arg>
  Nolabel
    expression (typing/typemod.ml[1677,61699+69]..[1677,61699+76])
      Pexp_ident "classes" (typing/typemod.ml[1677,61699+69]..[1677,61699+76])
]
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1678,61778+16]..[1678,61778+19])
                                                                    Pexp_ident "env" (typing/typemod.ml[1678,61778+16]..[1678,61778+19])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[1678,61778+20]..[1678,61778+23])
                                                                    Pexp_ident "loc" (typing/typemod.ml[1678,61778+20]..[1678,61778+23])
                                                              ]
                                                            expression (typing/typemod.ml[1679,61802+17]..[1679,61802+21])
                                                              Pexp_ident "trem" (typing/typemod.ml[1679,61802+17]..[1679,61802+21])
                                                          ]
                                                ]
                                                expression (typing/typemod.ml[1681,61839+12]..[1681,61839+36])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typemod.ml[1681,61839+12]..[1681,61839+21])
                                                      Pexp_ident "typedtree" (typing/typemod.ml[1681,61839+12]..[1681,61839+21])
                                                    expression (typing/typemod.ml[1681,61839+23]..[1681,61839+25])
                                                      Pexp_ident "sg" (typing/typemod.ml[1681,61839+23]..[1681,61839+25])
                                                    expression (typing/typemod.ml[1681,61839+27]..[1681,61839+36])
                                                      Pexp_ident "final_env" (typing/typemod.ml[1681,61839+27]..[1681,61839+36])
                                                  ]
                                    <case>
                                      pattern (typing/typemod.ml[1682,61876+10]..[1682,61876+26])
                                        Ppat_construct "Psig_attribute" (typing/typemod.ml[1682,61876+10]..[1682,61876+24])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1682,61876+25]..[1682,61876+26])
                                            Ppat_var "x" (typing/typemod.ml[1682,61876+25]..[1682,61876+26])
                                      expression (typing/typemod.ml[1683,61906+12]..[1685,62021+68])
                                        Pexp_sequence
                                        expression (typing/typemod.ml[1683,61906+12]..[1683,61906+50])
                                          Pexp_apply
                                          expression (typing/typemod.ml[1683,61906+12]..[1683,61906+48])
                                            Pexp_ident "Builtin_attributes.warning_attribute" (typing/typemod.ml[1683,61906+12]..[1683,61906+48])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1683,61906+49]..[1683,61906+50])
                                                Pexp_ident "x" (typing/typemod.ml[1683,61906+49]..[1683,61906+50])
                                          ]
                                        expression (typing/typemod.ml[1684,61958+12]..[1685,62021+68])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[1684,61958+16]..[1684,61958+37])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/typemod.ml[1684,61958+17]..[1684,61958+21])
                                                    Ppat_var "trem" (typing/typemod.ml[1684,61958+17]..[1684,61958+21])
                                                  pattern (typing/typemod.ml[1684,61958+22]..[1684,61958+25])
                                                    Ppat_var "rem" (typing/typemod.ml[1684,61958+22]..[1684,61958+25])
                                                  pattern (typing/typemod.ml[1684,61958+27]..[1684,61958+36])
                                                    Ppat_var "final_env" (typing/typemod.ml[1684,61958+27]..[1684,61958+36])
                                                ]
                                              expression (typing/typemod.ml[1684,61958+40]..[1684,61958+59])
                                                Pexp_apply
                                                expression (typing/typemod.ml[1684,61958+40]..[1684,61958+50])
                                                  Pexp_ident "transl_sig" (typing/typemod.ml[1684,61958+40]..[1684,61958+50])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1684,61958+51]..[1684,61958+54])
                                                      Pexp_ident "env" (typing/typemod.ml[1684,61958+51]..[1684,61958+54])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1684,61958+55]..[1684,61958+59])
                                                      Pexp_ident "srem" (typing/typemod.ml[1684,61958+55]..[1684,61958+59])
                                                ]
                                          ]
                                          expression (typing/typemod.ml[1685,62021+12]..[1685,62021+68])
                                            Pexp_tuple
                                            [
                                              expression (typing/typemod.ml[1685,62021+12]..[1685,62021+52])
                                                Pexp_construct "::" (typing/typemod.ml[1685,62021+45]..[1685,62021+47])
                                                Some
                                                  expression (typing/typemod.ml[1685,62021+12]..[1685,62021+52]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[1685,62021+12]..[1685,62021+44])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[1685,62021+12]..[1685,62021+17])
                                                          Pexp_ident "mksig" (typing/typemod.ml[1685,62021+12]..[1685,62021+17])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1685,62021+18]..[1685,62021+36])
                                                              Pexp_construct "Tsig_attribute" (typing/typemod.ml[1685,62021+19]..[1685,62021+33])
                                                              Some
                                                                expression (typing/typemod.ml[1685,62021+34]..[1685,62021+35])
                                                                  Pexp_ident "x" (typing/typemod.ml[1685,62021+34]..[1685,62021+35])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1685,62021+37]..[1685,62021+40])
                                                              Pexp_ident "env" (typing/typemod.ml[1685,62021+37]..[1685,62021+40])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1685,62021+41]..[1685,62021+44])
                                                              Pexp_ident "loc" (typing/typemod.ml[1685,62021+41]..[1685,62021+44])
                                                        ]
                                                      expression (typing/typemod.ml[1685,62021+48]..[1685,62021+52])
                                                        Pexp_ident "trem" (typing/typemod.ml[1685,62021+48]..[1685,62021+52])
                                                    ]
                                              expression (typing/typemod.ml[1685,62021+54]..[1685,62021+57])
                                                Pexp_ident "rem" (typing/typemod.ml[1685,62021+54]..[1685,62021+57])
                                              expression (typing/typemod.ml[1685,62021+59]..[1685,62021+68])
                                                Pexp_ident "final_env" (typing/typemod.ml[1685,62021+59]..[1685,62021+68])
                                            ]
                                    <case>
                                      pattern (typing/typemod.ml[1686,62090+10]..[1686,62090+38])
                                        Ppat_construct "Psig_extension" (typing/typemod.ml[1686,62090+10]..[1686,62090+24])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[1686,62090+25]..[1686,62090+38])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[1686,62090+26]..[1686,62090+29])
                                                Ppat_var "ext" (typing/typemod.ml[1686,62090+26]..[1686,62090+29])
                                              pattern (typing/typemod.ml[1686,62090+31]..[1686,62090+37])
                                                Ppat_var "_attrs" (typing/typemod.ml[1686,62090+31]..[1686,62090+37])
                                            ]
                                      expression (typing/typemod.ml[1687,62132+12]..[1687,62132+77])
                                        Pexp_apply
                                        expression (typing/typemod.ml[1687,62132+12]..[1687,62132+17])
                                          Pexp_ident "raise" (typing/typemod.ml[1687,62132+12]..[1687,62132+17])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1687,62132+18]..[1687,62132+77])
                                              Pexp_construct "Error_forward" (typing/typemod.ml[1687,62132+19]..[1687,62132+32])
                                              Some
                                                expression (typing/typemod.ml[1687,62132+33]..[1687,62132+76])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[1687,62132+34]..[1687,62132+71])
                                                    Pexp_ident "Builtin_attributes.error_of_extension" (typing/typemod.ml[1687,62132+34]..[1687,62132+71])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1687,62132+72]..[1687,62132+75])
                                                        Pexp_ident "ext" (typing/typemod.ml[1687,62132+72]..[1687,62132+75])
                                                  ]
                                        ]
                                  ]
                          ]
                ]
                expression (typing/typemod.ml[1689,62215+2]..[1700,62689+5])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typemod.ml[1689,62215+6]..[1689,62215+26])
                        Ppat_var "previous_saved_types" (typing/typemod.ml[1689,62215+6]..[1689,62215+26])
                      expression (typing/typemod.ml[1689,62215+29]..[1689,62215+58])
                        Pexp_apply
                        expression (typing/typemod.ml[1689,62215+29]..[1689,62215+55])
                          Pexp_ident "Cmt_format.get_saved_types" (typing/typemod.ml[1689,62215+29]..[1689,62215+55])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1689,62215+56]..[1689,62215+58])
                              Pexp_construct "()" (typing/typemod.ml[1689,62215+56]..[1689,62215+58])
                              None
                        ]
                  ]
                  expression (typing/typemod.ml[1690,62277+2]..[1700,62689+5])
                    Pexp_apply
                    expression (typing/typemod.ml[1690,62277+2]..[1690,62277+34])
                      Pexp_ident "Builtin_attributes.warning_scope" (typing/typemod.ml[1690,62277+2]..[1690,62277+34])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[1690,62277+35]..[1690,62277+37])
                          Pexp_construct "[]" (typing/typemod.ml[1690,62277+35]..[1690,62277+37])
                          None
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[1691,62315+4]..[1700,62689+5])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[1691,62315+9]..[1691,62315+11])
                            Ppat_construct "()" (typing/typemod.ml[1691,62315+9]..[1691,62315+11])
                            None
                          expression (typing/typemod.ml[1692,62330+7]..[1699,62679+9])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[1692,62330+11]..[1692,62330+33])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[1692,62330+12]..[1692,62330+16])
                                      Ppat_var "trem" (typing/typemod.ml[1692,62330+12]..[1692,62330+16])
                                    pattern (typing/typemod.ml[1692,62330+18]..[1692,62330+21])
                                      Ppat_var "rem" (typing/typemod.ml[1692,62330+18]..[1692,62330+21])
                                    pattern (typing/typemod.ml[1692,62330+23]..[1692,62330+32])
                                      Ppat_var "final_env" (typing/typemod.ml[1692,62330+23]..[1692,62330+32])
                                  ]
                                expression (typing/typemod.ml[1692,62330+36]..[1692,62330+77])
                                  Pexp_apply
                                  expression (typing/typemod.ml[1692,62330+36]..[1692,62330+46])
                                    Pexp_ident "transl_sig" (typing/typemod.ml[1692,62330+36]..[1692,62330+46])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1692,62330+47]..[1692,62330+74])
                                        Pexp_apply
                                        expression (typing/typemod.ml[1692,62330+48]..[1692,62330+64])
                                          Pexp_ident "Env.in_signature" (typing/typemod.ml[1692,62330+48]..[1692,62330+64])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1692,62330+65]..[1692,62330+69])
                                              Pexp_construct "true" (typing/typemod.ml[1692,62330+65]..[1692,62330+69])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1692,62330+70]..[1692,62330+73])
                                              Pexp_ident "env" (typing/typemod.ml[1692,62330+70]..[1692,62330+73])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1692,62330+75]..[1692,62330+77])
                                        Pexp_ident "sg" (typing/typemod.ml[1692,62330+75]..[1692,62330+77])
                                  ]
                            ]
                            expression (typing/typemod.ml[1693,62411+7]..[1699,62679+9])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[1693,62411+11]..[1693,62411+14])
                                    Ppat_var "rem" (typing/typemod.ml[1693,62411+11]..[1693,62411+14])
                                  expression (typing/typemod.ml[1693,62411+17]..[1693,62411+61])
                                    Pexp_apply
                                    expression (typing/typemod.ml[1693,62411+17]..[1693,62411+41])
                                      Pexp_ident "Signature_names.simplify" (typing/typemod.ml[1693,62411+17]..[1693,62411+41])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1693,62411+42]..[1693,62411+51])
                                          Pexp_ident "final_env" (typing/typemod.ml[1693,62411+42]..[1693,62411+51])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1693,62411+52]..[1693,62411+57])
                                          Pexp_ident "names" (typing/typemod.ml[1693,62411+52]..[1693,62411+57])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1693,62411+58]..[1693,62411+61])
                                          Pexp_ident "rem" (typing/typemod.ml[1693,62411+58]..[1693,62411+61])
                                    ]
                              ]
                              expression (typing/typemod.ml[1694,62476+7]..[1699,62679+9])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[1694,62476+11]..[1694,62476+13])
                                      Ppat_var "sg" (typing/typemod.ml[1694,62476+11]..[1694,62476+13])
                                    expression (typing/typemod.ml[1695,62492+9]..[1695,62492+72])
                                      Pexp_record
                                      [
                                        "sig_items" (typing/typemod.ml[1695,62492+11]..[1695,62492+20])
                                          expression (typing/typemod.ml[1695,62492+23]..[1695,62492+27])
                                            Pexp_ident "trem" (typing/typemod.ml[1695,62492+23]..[1695,62492+27])
                                        "sig_type" (typing/typemod.ml[1695,62492+29]..[1695,62492+37])
                                          expression (typing/typemod.ml[1695,62492+40]..[1695,62492+43])
                                            Pexp_ident "rem" (typing/typemod.ml[1695,62492+40]..[1695,62492+43])
                                        "sig_final_env" (typing/typemod.ml[1695,62492+45]..[1695,62492+58])
                                          expression (typing/typemod.ml[1695,62492+61]..[1695,62492+70])
                                            Pexp_ident "final_env" (typing/typemod.ml[1695,62492+61]..[1695,62492+70])
                                      ]
                                      None
                                ]
                                expression (typing/typemod.ml[1697,62575+7]..[1699,62679+9])
                                  Pexp_sequence
                                  expression (typing/typemod.ml[1697,62575+7]..[1698,62609+68])
                                    Pexp_apply
                                    expression (typing/typemod.ml[1697,62575+7]..[1697,62575+33])
                                      Pexp_ident "Cmt_format.set_saved_types" (typing/typemod.ml[1697,62575+7]..[1697,62575+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1698,62609+9]..[1698,62609+68])
                                          Pexp_construct "::" (typing/typemod.ml[1698,62609+44]..[1698,62609+46])
                                          Some
                                            expression (typing/typemod.ml[1698,62609+10]..[1698,62609+67]) ghost
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[1698,62609+10]..[1698,62609+43])
                                                  Pexp_construct "Cmt_format.Partial_signature" (typing/typemod.ml[1698,62609+11]..[1698,62609+39])
                                                  Some
                                                    expression (typing/typemod.ml[1698,62609+40]..[1698,62609+42])
                                                      Pexp_ident "sg" (typing/typemod.ml[1698,62609+40]..[1698,62609+42])
                                                expression (typing/typemod.ml[1698,62609+47]..[1698,62609+67])
                                                  Pexp_ident "previous_saved_types" (typing/typemod.ml[1698,62609+47]..[1698,62609+67])
                                              ]
                                    ]
                                  expression (typing/typemod.ml[1699,62679+7]..[1699,62679+9])
                                    Pexp_ident "sg" (typing/typemod.ml[1699,62679+7]..[1699,62679+9])
                    ]
      <def>
        pattern (typing/typemod.ml[1702,62696+4]..[1702,62696+23])
          Ppat_var "transl_modtype_decl" (typing/typemod.ml[1702,62696+4]..[1702,62696+23])
        expression (typing/typemod.ml[1702,62696+24]..[1704,62787+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1702,62696+24]..[1702,62696+27])
            Ppat_var "env" (typing/typemod.ml[1702,62696+24]..[1702,62696+27])
          expression (typing/typemod.ml[1702,62696+28]..[1704,62787+48]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1702,62696+28]..[1702,62696+32])
              Ppat_var "pmtd" (typing/typemod.ml[1702,62696+28]..[1702,62696+32])
            expression (typing/typemod.ml[1703,62731+2]..[1704,62787+48])
              Pexp_apply
              expression (typing/typemod.ml[1703,62731+2]..[1703,62731+34])
                Pexp_ident "Builtin_attributes.warning_scope" (typing/typemod.ml[1703,62731+2]..[1703,62731+34])
              [
                <arg>
                Nolabel
                  expression (typing/typemod.ml[1703,62731+35]..[1703,62731+55])
                    Pexp_field
                    expression (typing/typemod.ml[1703,62731+35]..[1703,62731+39])
                      Pexp_ident "pmtd" (typing/typemod.ml[1703,62731+35]..[1703,62731+39])
                    "pmtd_attributes" (typing/typemod.ml[1703,62731+40]..[1703,62731+55])
                <arg>
                Nolabel
                  expression (typing/typemod.ml[1704,62787+4]..[1704,62787+48])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[1704,62787+9]..[1704,62787+11])
                      Ppat_construct "()" (typing/typemod.ml[1704,62787+9]..[1704,62787+11])
                      None
                    expression (typing/typemod.ml[1704,62787+15]..[1704,62787+47])
                      Pexp_apply
                      expression (typing/typemod.ml[1704,62787+15]..[1704,62787+38])
                        Pexp_ident "transl_modtype_decl_aux" (typing/typemod.ml[1704,62787+15]..[1704,62787+38])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1704,62787+39]..[1704,62787+42])
                            Pexp_ident "env" (typing/typemod.ml[1704,62787+39]..[1704,62787+42])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1704,62787+43]..[1704,62787+47])
                            Pexp_ident "pmtd" (typing/typemod.ml[1704,62787+43]..[1704,62787+47])
                      ]
              ]
      <def>
        pattern (typing/typemod.ml[1706,62837+4]..[1706,62837+27])
          Ppat_var "transl_modtype_decl_aux" (typing/typemod.ml[1706,62837+4]..[1706,62837+27])
        expression (typing/typemod.ml[1706,62837+28]..[1730,63483+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1706,62837+28]..[1706,62837+31])
            Ppat_var "env" (typing/typemod.ml[1706,62837+28]..[1706,62837+31])
          expression (typing/typemod.ml[1707,62869+4]..[1730,63483+46]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1707,62869+4]..[1707,62869+53])
              Ppat_record Closed
              [
                "pmtd_name" (typing/typemod.ml[1707,62869+5]..[1707,62869+14]) ghost
                  pattern (typing/typemod.ml[1707,62869+5]..[1707,62869+14])
                    Ppat_var "pmtd_name" (typing/typemod.ml[1707,62869+5]..[1707,62869+14])
                "pmtd_type" (typing/typemod.ml[1707,62869+16]..[1707,62869+25]) ghost
                  pattern (typing/typemod.ml[1707,62869+16]..[1707,62869+25])
                    Ppat_var "pmtd_type" (typing/typemod.ml[1707,62869+16]..[1707,62869+25])
                "pmtd_attributes" (typing/typemod.ml[1707,62869+27]..[1707,62869+42]) ghost
                  pattern (typing/typemod.ml[1707,62869+27]..[1707,62869+42])
                    Ppat_var "pmtd_attributes" (typing/typemod.ml[1707,62869+27]..[1707,62869+42])
                "pmtd_loc" (typing/typemod.ml[1707,62869+44]..[1707,62869+52]) ghost
                  pattern (typing/typemod.ml[1707,62869+44]..[1707,62869+52])
                    Ppat_var "pmtd_loc" (typing/typemod.ml[1707,62869+44]..[1707,62869+52])
              ]
            expression (typing/typemod.ml[1708,62925+2]..[1730,63483+46])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1708,62925+6]..[1708,62925+10])
                    Ppat_var "tmty" (typing/typemod.ml[1708,62925+6]..[1708,62925+10])
                  expression (typing/typemod.ml[1709,62938+4]..[1709,62938+69])
                    Pexp_apply
                    expression (typing/typemod.ml[1709,62938+4]..[1709,62938+14])
                      Pexp_ident "Option.map" (typing/typemod.ml[1709,62938+4]..[1709,62938+14])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[1709,62938+15]..[1709,62938+59])
                          Pexp_apply
                          expression (typing/typemod.ml[1709,62938+16]..[1709,62938+30])
                            Pexp_ident "transl_modtype" (typing/typemod.ml[1709,62938+16]..[1709,62938+30])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1709,62938+31]..[1709,62938+58])
                                Pexp_apply
                                expression (typing/typemod.ml[1709,62938+32]..[1709,62938+48])
                                  Pexp_ident "Env.in_signature" (typing/typemod.ml[1709,62938+32]..[1709,62938+48])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[1709,62938+49]..[1709,62938+53])
                                      Pexp_construct "true" (typing/typemod.ml[1709,62938+49]..[1709,62938+53])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[1709,62938+54]..[1709,62938+57])
                                      Pexp_ident "env" (typing/typemod.ml[1709,62938+54]..[1709,62938+57])
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[1709,62938+60]..[1709,62938+69])
                          Pexp_ident "pmtd_type" (typing/typemod.ml[1709,62938+60]..[1709,62938+69])
                    ]
              ]
              expression (typing/typemod.ml[1711,63013+2]..[1730,63483+46])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/typemod.ml[1711,63013+6]..[1711,63013+10])
                      Ppat_var "decl" (typing/typemod.ml[1711,63013+6]..[1711,63013+10])
                    expression (typing/typemod.ml[1712,63026+4]..[1717,63211+5])
                      Pexp_record
                      [
                        "Types.mtd_type" (typing/typemod.ml[1713,63032+5]..[1713,63032+19])
                          expression (typing/typemod.ml[1713,63032+20]..[1713,63032+57])
                            Pexp_apply
                            expression (typing/typemod.ml[1713,63032+20]..[1713,63032+30])
                              Pexp_ident "Option.map" (typing/typemod.ml[1713,63032+20]..[1713,63032+30])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1713,63032+31]..[1713,63032+52])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typemod.ml[1713,63032+36]..[1713,63032+37])
                                    Ppat_var "t" (typing/typemod.ml[1713,63032+36]..[1713,63032+37])
                                  expression (typing/typemod.ml[1713,63032+41]..[1713,63032+51])
                                    Pexp_field
                                    expression (typing/typemod.ml[1713,63032+41]..[1713,63032+42])
                                      Pexp_ident "t" (typing/typemod.ml[1713,63032+41]..[1713,63032+42])
                                    "mty_type" (typing/typemod.ml[1713,63032+43]..[1713,63032+51])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1713,63032+53]..[1713,63032+57])
                                  Pexp_ident "tmty" (typing/typemod.ml[1713,63032+53]..[1713,63032+57])
                            ]
                        "mtd_attributes" (typing/typemod.ml[1714,63091+5]..[1714,63091+19])
                          expression (typing/typemod.ml[1714,63091+20]..[1714,63091+35])
                            Pexp_ident "pmtd_attributes" (typing/typemod.ml[1714,63091+20]..[1714,63091+35])
                        "mtd_loc" (typing/typemod.ml[1715,63128+5]..[1715,63128+12])
                          expression (typing/typemod.ml[1715,63128+13]..[1715,63128+21])
                            Pexp_ident "pmtd_loc" (typing/typemod.ml[1715,63128+13]..[1715,63128+21])
                        "mtd_uid" (typing/typemod.ml[1716,63151+5]..[1716,63151+12])
                          expression (typing/typemod.ml[1716,63151+15]..[1716,63151+58])
                            Pexp_apply
                            expression (typing/typemod.ml[1716,63151+15]..[1716,63151+21])
                              Pexp_ident "Uid.mk" (typing/typemod.ml[1716,63151+15]..[1716,63151+21])
                            [
                              <arg>
                              Labelled "current_unit"
                                expression (typing/typemod.ml[1716,63151+36]..[1716,63151+58])
                                  Pexp_apply
                                  expression (typing/typemod.ml[1716,63151+37]..[1716,63151+54])
                                    Pexp_ident "Env.get_unit_name" (typing/typemod.ml[1716,63151+37]..[1716,63151+54])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1716,63151+55]..[1716,63151+57])
                                        Pexp_construct "()" (typing/typemod.ml[1716,63151+55]..[1716,63151+57])
                                        None
                                  ]
                            ]
                      ]
                      None
                ]
                expression (typing/typemod.ml[1719,63222+2]..[1730,63483+46])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typemod.ml[1719,63222+6]..[1719,63222+11])
                        Ppat_var "scope" (typing/typemod.ml[1719,63222+6]..[1719,63222+11])
                      expression (typing/typemod.ml[1719,63222+14]..[1719,63222+35])
                        Pexp_apply
                        expression (typing/typemod.ml[1719,63222+14]..[1719,63222+32])
                          Pexp_ident "Ctype.create_scope" (typing/typemod.ml[1719,63222+14]..[1719,63222+32])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1719,63222+33]..[1719,63222+35])
                              Pexp_construct "()" (typing/typemod.ml[1719,63222+33]..[1719,63222+35])
                              None
                        ]
                  ]
                  expression (typing/typemod.ml[1720,63261+2]..[1730,63483+46])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[1720,63261+6]..[1720,63261+18])
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[1720,63261+7]..[1720,63261+9])
                              Ppat_var "id" (typing/typemod.ml[1720,63261+7]..[1720,63261+9])
                            pattern (typing/typemod.ml[1720,63261+11]..[1720,63261+17])
                              Ppat_var "newenv" (typing/typemod.ml[1720,63261+11]..[1720,63261+17])
                          ]
                        expression (typing/typemod.ml[1720,63261+21]..[1720,63261+68])
                          Pexp_apply
                          expression (typing/typemod.ml[1720,63261+21]..[1720,63261+38])
                            Pexp_ident "Env.enter_modtype" (typing/typemod.ml[1720,63261+21]..[1720,63261+38])
                          [
                            <arg>
                            Labelled "scope"
                              expression (typing/typemod.ml[1720,63261+40]..[1720,63261+45])
                                Pexp_ident "scope" (typing/typemod.ml[1720,63261+40]..[1720,63261+45])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1720,63261+46]..[1720,63261+59])
                                Pexp_field
                                expression (typing/typemod.ml[1720,63261+46]..[1720,63261+55])
                                  Pexp_ident "pmtd_name" (typing/typemod.ml[1720,63261+46]..[1720,63261+55])
                                "txt" (typing/typemod.ml[1720,63261+56]..[1720,63261+59])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1720,63261+60]..[1720,63261+64])
                                Pexp_ident "decl" (typing/typemod.ml[1720,63261+60]..[1720,63261+64])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1720,63261+65]..[1720,63261+68])
                                Pexp_ident "env" (typing/typemod.ml[1720,63261+65]..[1720,63261+68])
                          ]
                    ]
                    expression (typing/typemod.ml[1721,63333+2]..[1730,63483+46])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[1721,63333+6]..[1721,63333+9])
                            Ppat_var "mtd" (typing/typemod.ml[1721,63333+6]..[1721,63333+9])
                          expression (typing/typemod.ml[1722,63345+4]..[1728,63472+5])
                            Pexp_record
                            [
                              "mtd_id" (typing/typemod.ml[1723,63351+5]..[1723,63351+11])
                                expression (typing/typemod.ml[1723,63351+12]..[1723,63351+14])
                                  Pexp_ident "id" (typing/typemod.ml[1723,63351+12]..[1723,63351+14])
                              "mtd_name" (typing/typemod.ml[1724,63367+5]..[1724,63367+13])
                                expression (typing/typemod.ml[1724,63367+14]..[1724,63367+23])
                                  Pexp_ident "pmtd_name" (typing/typemod.ml[1724,63367+14]..[1724,63367+23])
                              "mtd_type" (typing/typemod.ml[1725,63392+5]..[1725,63392+13])
                                expression (typing/typemod.ml[1725,63392+14]..[1725,63392+18])
                                  Pexp_ident "tmty" (typing/typemod.ml[1725,63392+14]..[1725,63392+18])
                              "mtd_attributes" (typing/typemod.ml[1726,63412+5]..[1726,63412+19])
                                expression (typing/typemod.ml[1726,63412+20]..[1726,63412+35])
                                  Pexp_ident "pmtd_attributes" (typing/typemod.ml[1726,63412+20]..[1726,63412+35])
                              "mtd_loc" (typing/typemod.ml[1727,63449+5]..[1727,63449+12])
                                expression (typing/typemod.ml[1727,63449+13]..[1727,63449+21])
                                  Pexp_ident "pmtd_loc" (typing/typemod.ml[1727,63449+13]..[1727,63449+21])
                            ]
                            None
                      ]
                      expression (typing/typemod.ml[1730,63483+2]..[1730,63483+46])
                        Pexp_tuple
                        [
                          expression (typing/typemod.ml[1730,63483+2]..[1730,63483+8])
                            Pexp_ident "newenv" (typing/typemod.ml[1730,63483+2]..[1730,63483+8])
                          expression (typing/typemod.ml[1730,63483+10]..[1730,63483+13])
                            Pexp_ident "mtd" (typing/typemod.ml[1730,63483+10]..[1730,63483+13])
                          expression (typing/typemod.ml[1730,63483+15]..[1730,63483+46])
                            Pexp_construct "Sig_modtype" (typing/typemod.ml[1730,63483+15]..[1730,63483+26])
                            Some
                              expression (typing/typemod.ml[1730,63483+26]..[1730,63483+46])
                                Pexp_tuple
                                [
                                  expression (typing/typemod.ml[1730,63483+27]..[1730,63483+29])
                                    Pexp_ident "id" (typing/typemod.ml[1730,63483+27]..[1730,63483+29])
                                  expression (typing/typemod.ml[1730,63483+31]..[1730,63483+35])
                                    Pexp_ident "decl" (typing/typemod.ml[1730,63483+31]..[1730,63483+35])
                                  expression (typing/typemod.ml[1730,63483+37]..[1730,63483+45])
                                    Pexp_construct "Exported" (typing/typemod.ml[1730,63483+37]..[1730,63483+45])
                                    None
                                ]
                        ]
      <def>
        pattern (typing/typemod.ml[1732,63531+4]..[1732,63531+29])
          Ppat_var "transl_recmodule_modtypes" (typing/typemod.ml[1732,63531+4]..[1732,63531+29])
        expression (typing/typemod.ml[1732,63531+30]..[1808,65760+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1732,63531+30]..[1732,63531+33])
            Ppat_var "env" (typing/typemod.ml[1732,63531+30]..[1732,63531+33])
          expression (typing/typemod.ml[1732,63531+34]..[1808,65760+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1732,63531+34]..[1732,63531+40])
              Ppat_var "sdecls" (typing/typemod.ml[1732,63531+34]..[1732,63531+40])
            expression (typing/typemod.ml[1733,63574+2]..[1808,65760+14])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1733,63574+6]..[1733,63574+14])
                    Ppat_var "make_env" (typing/typemod.ml[1733,63574+6]..[1733,63574+14])
                  expression (typing/typemod.ml[1733,63574+15]..[1739,63812+14]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[1733,63574+15]..[1733,63574+19])
                      Ppat_var "curr" (typing/typemod.ml[1733,63574+15]..[1733,63574+19])
                    expression (typing/typemod.ml[1734,63596+4]..[1739,63812+14])
                      Pexp_apply
                      expression (typing/typemod.ml[1734,63596+4]..[1734,63596+18])
                        Pexp_ident "List.fold_left" (typing/typemod.ml[1734,63596+4]..[1734,63596+18])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1735,63615+6]..[1738,63756+55])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[1735,63615+11]..[1735,63615+14])
                              Ppat_var "env" (typing/typemod.ml[1735,63615+11]..[1735,63615+14])
                            expression (typing/typemod.ml[1735,63615+15]..[1738,63756+54]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typemod.ml[1735,63615+15]..[1735,63615+29])
                                Ppat_tuple
                                [
                                  pattern (typing/typemod.ml[1735,63615+16]..[1735,63615+18])
                                    Ppat_var "id" (typing/typemod.ml[1735,63615+16]..[1735,63615+18])
                                  pattern (typing/typemod.ml[1735,63615+20]..[1735,63615+21])
                                    Ppat_any
                                  pattern (typing/typemod.ml[1735,63615+23]..[1735,63615+25])
                                    Ppat_var "md" (typing/typemod.ml[1735,63615+23]..[1735,63615+25])
                                  pattern (typing/typemod.ml[1735,63615+27]..[1735,63615+28])
                                    Ppat_any
                                ]
                              expression (typing/typemod.ml[1736,63648+9]..[1738,63756+54])
                                Pexp_apply
                                expression (typing/typemod.ml[1736,63648+9]..[1736,63648+20])
                                  Pexp_ident "Option.fold" (typing/typemod.ml[1736,63648+9]..[1736,63648+20])
                                [
                                  <arg>
                                  Labelled "none"
                                    expression (typing/typemod.ml[1736,63648+27]..[1736,63648+30])
                                      Pexp_ident "env" (typing/typemod.ml[1736,63648+27]..[1736,63648+30])
                                  <arg>
                                  Labelled "some"
                                    expression (typing/typemod.ml[1737,63679+17]..[1738,63756+51])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/typemod.ml[1737,63679+22]..[1737,63679+24])
                                        Ppat_var "id" (typing/typemod.ml[1737,63679+22]..[1737,63679+24])
                                      expression (typing/typemod.ml[1737,63679+28]..[1738,63756+50])
                                        Pexp_apply
                                        expression (typing/typemod.ml[1737,63679+28]..[1737,63679+54])
                                          Pexp_ident "Env.add_module_declaration" (typing/typemod.ml[1737,63679+28]..[1737,63679+54])
                                        [
                                          <arg>
                                          Labelled "check"
                                            expression (typing/typemod.ml[1737,63679+62]..[1737,63679+66])
                                              Pexp_construct "true" (typing/typemod.ml[1737,63679+62]..[1737,63679+66])
                                              None
                                          <arg>
                                          Labelled "arg"
                                            expression (typing/typemod.ml[1737,63679+72]..[1737,63679+76])
                                              Pexp_construct "true" (typing/typemod.ml[1737,63679+72]..[1737,63679+76])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1738,63756+30]..[1738,63756+32])
                                              Pexp_ident "id" (typing/typemod.ml[1738,63756+30]..[1738,63756+32])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1738,63756+33]..[1738,63756+43])
                                              Pexp_construct "Mp_present" (typing/typemod.ml[1738,63756+33]..[1738,63756+43])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1738,63756+44]..[1738,63756+46])
                                              Pexp_ident "md" (typing/typemod.ml[1738,63756+44]..[1738,63756+46])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1738,63756+47]..[1738,63756+50])
                                              Pexp_ident "env" (typing/typemod.ml[1738,63756+47]..[1738,63756+50])
                                        ]
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[1738,63756+52]..[1738,63756+54])
                                      Pexp_ident "id" (typing/typemod.ml[1738,63756+52]..[1738,63756+54])
                                ]
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1739,63812+6]..[1739,63812+9])
                            Pexp_ident "env" (typing/typemod.ml[1739,63812+6]..[1739,63812+9])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1739,63812+10]..[1739,63812+14])
                            Pexp_ident "curr" (typing/typemod.ml[1739,63812+10]..[1739,63812+14])
                      ]
              ]
              expression (typing/typemod.ml[1740,63830+2]..[1808,65760+14])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/typemod.ml[1740,63830+6]..[1740,63830+16])
                      Ppat_var "transition" (typing/typemod.ml[1740,63830+6]..[1740,63830+16])
                    expression (typing/typemod.ml[1740,63830+17]..[1749,64156+17]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[1740,63830+17]..[1740,63830+22])
                        Ppat_var "env_c" (typing/typemod.ml[1740,63830+17]..[1740,63830+22])
                      expression (typing/typemod.ml[1740,63830+23]..[1749,64156+17]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1740,63830+23]..[1740,63830+27])
                          Ppat_var "curr" (typing/typemod.ml[1740,63830+23]..[1740,63830+27])
                        expression (typing/typemod.ml[1741,63860+4]..[1749,64156+17])
                          Pexp_apply
                          expression (typing/typemod.ml[1741,63860+4]..[1741,63860+13])
                            Pexp_ident "List.map2" (typing/typemod.ml[1741,63860+4]..[1741,63860+13])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1742,63874+6]..[1748,64124+31])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/typemod.ml[1742,63874+11]..[1742,63874+14])
                                  Ppat_var "pmd" (typing/typemod.ml[1742,63874+11]..[1742,63874+14])
                                expression (typing/typemod.ml[1742,63874+15]..[1748,64124+30]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typemod.ml[1742,63874+15]..[1742,63874+34])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typemod.ml[1742,63874+16]..[1742,63874+18])
                                        Ppat_var "id" (typing/typemod.ml[1742,63874+16]..[1742,63874+18])
                                      pattern (typing/typemod.ml[1742,63874+20]..[1742,63874+26])
                                        Ppat_var "id_loc" (typing/typemod.ml[1742,63874+20]..[1742,63874+26])
                                      pattern (typing/typemod.ml[1742,63874+28]..[1742,63874+30])
                                        Ppat_var "md" (typing/typemod.ml[1742,63874+28]..[1742,63874+30])
                                      pattern (typing/typemod.ml[1742,63874+32]..[1742,63874+33])
                                        Ppat_any
                                    ]
                                  expression (typing/typemod.ml[1743,63912+8]..[1748,64124+30])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typemod.ml[1743,63912+12]..[1743,63912+16])
                                          Ppat_var "tmty" (typing/typemod.ml[1743,63912+12]..[1743,63912+16])
                                        expression (typing/typemod.ml[1744,63931+10]..[1745,63993+57])
                                          Pexp_apply
                                          expression (typing/typemod.ml[1744,63931+10]..[1744,63931+42])
                                            Pexp_ident "Builtin_attributes.warning_scope" (typing/typemod.ml[1744,63931+10]..[1744,63931+42])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1744,63931+43]..[1744,63931+61])
                                                Pexp_field
                                                expression (typing/typemod.ml[1744,63931+43]..[1744,63931+46])
                                                  Pexp_ident "pmd" (typing/typemod.ml[1744,63931+43]..[1744,63931+46])
                                                "pmd_attributes" (typing/typemod.ml[1744,63931+47]..[1744,63931+61])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1745,63993+12]..[1745,63993+57])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/typemod.ml[1745,63993+17]..[1745,63993+19])
                                                  Ppat_construct "()" (typing/typemod.ml[1745,63993+17]..[1745,63993+19])
                                                  None
                                                expression (typing/typemod.ml[1745,63993+23]..[1745,63993+56])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[1745,63993+23]..[1745,63993+37])
                                                    Pexp_ident "transl_modtype" (typing/typemod.ml[1745,63993+23]..[1745,63993+37])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1745,63993+38]..[1745,63993+43])
                                                        Pexp_ident "env_c" (typing/typemod.ml[1745,63993+38]..[1745,63993+43])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1745,63993+44]..[1745,63993+56])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[1745,63993+44]..[1745,63993+47])
                                                          Pexp_ident "pmd" (typing/typemod.ml[1745,63993+44]..[1745,63993+47])
                                                        "pmd_type" (typing/typemod.ml[1745,63993+48]..[1745,63993+56])
                                                  ]
                                          ]
                                    ]
                                    expression (typing/typemod.ml[1747,64062+8]..[1748,64124+30])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[1747,64062+12]..[1747,64062+14])
                                            Ppat_var "md" (typing/typemod.ml[1747,64062+12]..[1747,64062+14])
                                          expression (typing/typemod.ml[1747,64062+17]..[1747,64062+58])
                                            Pexp_record
                                            [
                                              "Types.md_type" (typing/typemod.ml[1747,64062+27]..[1747,64062+40])
                                                expression (typing/typemod.ml[1747,64062+43]..[1747,64062+56])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[1747,64062+43]..[1747,64062+47])
                                                    Pexp_ident "tmty" (typing/typemod.ml[1747,64062+43]..[1747,64062+47])
                                                  "mty_type" (typing/typemod.ml[1747,64062+48]..[1747,64062+56])
                                            ]
                                            Some
                                              expression (typing/typemod.ml[1747,64062+19]..[1747,64062+21])
                                                Pexp_ident "md" (typing/typemod.ml[1747,64062+19]..[1747,64062+21])
                                      ]
                                      expression (typing/typemod.ml[1748,64124+8]..[1748,64124+30])
                                        Pexp_tuple
                                        [
                                          expression (typing/typemod.ml[1748,64124+9]..[1748,64124+11])
                                            Pexp_ident "id" (typing/typemod.ml[1748,64124+9]..[1748,64124+11])
                                          expression (typing/typemod.ml[1748,64124+13]..[1748,64124+19])
                                            Pexp_ident "id_loc" (typing/typemod.ml[1748,64124+13]..[1748,64124+19])
                                          expression (typing/typemod.ml[1748,64124+21]..[1748,64124+23])
                                            Pexp_ident "md" (typing/typemod.ml[1748,64124+21]..[1748,64124+23])
                                          expression (typing/typemod.ml[1748,64124+25]..[1748,64124+29])
                                            Pexp_ident "tmty" (typing/typemod.ml[1748,64124+25]..[1748,64124+29])
                                        ]
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1749,64156+6]..[1749,64156+12])
                                Pexp_ident "sdecls" (typing/typemod.ml[1749,64156+6]..[1749,64156+12])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1749,64156+13]..[1749,64156+17])
                                Pexp_ident "curr" (typing/typemod.ml[1749,64156+13]..[1749,64156+17])
                          ]
                ]
                expression (typing/typemod.ml[1750,64177+2]..[1808,65760+14])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typemod.ml[1750,64177+6]..[1750,64177+14])
                        Ppat_var "map_mtys" (typing/typemod.ml[1750,64177+6]..[1750,64177+14])
                      expression (typing/typemod.ml[1750,64177+15]..[1753,64284+10]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1750,64177+15]..[1750,64177+19])
                          Ppat_var "curr" (typing/typemod.ml[1750,64177+15]..[1750,64177+19])
                        expression (typing/typemod.ml[1751,64199+4]..[1753,64284+10])
                          Pexp_apply
                          expression (typing/typemod.ml[1751,64199+4]..[1751,64199+19])
                            Pexp_ident "List.filter_map" (typing/typemod.ml[1751,64199+4]..[1751,64199+19])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1752,64219+6]..[1752,64219+64])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/typemod.ml[1752,64219+11]..[1752,64219+25])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[1752,64219+12]..[1752,64219+14])
                                      Ppat_var "id" (typing/typemod.ml[1752,64219+12]..[1752,64219+14])
                                    pattern (typing/typemod.ml[1752,64219+16]..[1752,64219+17])
                                      Ppat_any
                                    pattern (typing/typemod.ml[1752,64219+19]..[1752,64219+21])
                                      Ppat_var "md" (typing/typemod.ml[1752,64219+19]..[1752,64219+21])
                                    pattern (typing/typemod.ml[1752,64219+23]..[1752,64219+24])
                                      Ppat_any
                                  ]
                                expression (typing/typemod.ml[1752,64219+29]..[1752,64219+63])
                                  Pexp_apply
                                  expression (typing/typemod.ml[1752,64219+29]..[1752,64219+39])
                                    Pexp_ident "Option.map" (typing/typemod.ml[1752,64219+29]..[1752,64219+39])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1752,64219+40]..[1752,64219+60])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/typemod.ml[1752,64219+45]..[1752,64219+47])
                                          Ppat_var "id" (typing/typemod.ml[1752,64219+45]..[1752,64219+47])
                                        expression (typing/typemod.ml[1752,64219+51]..[1752,64219+59])
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[1752,64219+52]..[1752,64219+54])
                                              Pexp_ident "id" (typing/typemod.ml[1752,64219+52]..[1752,64219+54])
                                            expression (typing/typemod.ml[1752,64219+56]..[1752,64219+58])
                                              Pexp_ident "md" (typing/typemod.ml[1752,64219+56]..[1752,64219+58])
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1752,64219+61]..[1752,64219+63])
                                        Pexp_ident "id" (typing/typemod.ml[1752,64219+61]..[1752,64219+63])
                                  ]
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1753,64284+6]..[1753,64284+10])
                                Pexp_ident "curr" (typing/typemod.ml[1753,64284+6]..[1753,64284+10])
                          ]
                  ]
                  expression (typing/typemod.ml[1755,64300+2]..[1808,65760+14])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[1755,64300+6]..[1755,64300+11])
                          Ppat_var "scope" (typing/typemod.ml[1755,64300+6]..[1755,64300+11])
                        expression (typing/typemod.ml[1755,64300+14]..[1755,64300+35])
                          Pexp_apply
                          expression (typing/typemod.ml[1755,64300+14]..[1755,64300+32])
                            Pexp_ident "Ctype.create_scope" (typing/typemod.ml[1755,64300+14]..[1755,64300+32])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1755,64300+33]..[1755,64300+35])
                                Pexp_construct "()" (typing/typemod.ml[1755,64300+33]..[1755,64300+35])
                                None
                          ]
                    ]
                    expression (typing/typemod.ml[1756,64339+2]..[1808,65760+14])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[1756,64339+6]..[1756,64339+9])
                            Ppat_var "ids" (typing/typemod.ml[1756,64339+6]..[1756,64339+9])
                          expression (typing/typemod.ml[1757,64351+4]..[1758,64430+12])
                            Pexp_apply
                            expression (typing/typemod.ml[1757,64351+4]..[1757,64351+12])
                              Pexp_ident "List.map" (typing/typemod.ml[1757,64351+4]..[1757,64351+12])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1757,64351+13]..[1757,64351+78])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typemod.ml[1757,64351+18]..[1757,64351+19])
                                    Ppat_var "x" (typing/typemod.ml[1757,64351+18]..[1757,64351+19])
                                  expression (typing/typemod.ml[1757,64351+23]..[1757,64351+77])
                                    Pexp_apply
                                    expression (typing/typemod.ml[1757,64351+23]..[1757,64351+33])
                                      Pexp_ident "Option.map" (typing/typemod.ml[1757,64351+23]..[1757,64351+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1757,64351+34]..[1757,64351+62])
                                          Pexp_apply
                                          expression (typing/typemod.ml[1757,64351+35]..[1757,64351+54])
                                            Pexp_ident "Ident.create_scoped" (typing/typemod.ml[1757,64351+35]..[1757,64351+54])
                                          [
                                            <arg>
                                            Labelled "scope"
                                              expression (typing/typemod.ml[1757,64351+56]..[1757,64351+61])
                                                Pexp_ident "scope" (typing/typemod.ml[1757,64351+56]..[1757,64351+61])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1757,64351+63]..[1757,64351+77])
                                          Pexp_field
                                          expression (typing/typemod.ml[1757,64351+63]..[1757,64351+73])
                                            Pexp_field
                                            expression (typing/typemod.ml[1757,64351+63]..[1757,64351+64])
                                              Pexp_ident "x" (typing/typemod.ml[1757,64351+63]..[1757,64351+64])
                                            "pmd_name" (typing/typemod.ml[1757,64351+65]..[1757,64351+73])
                                          "txt" (typing/typemod.ml[1757,64351+74]..[1757,64351+77])
                                    ]
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[1758,64430+6]..[1758,64430+12])
                                  Pexp_ident "sdecls" (typing/typemod.ml[1758,64430+6]..[1758,64430+12])
                            ]
                      ]
                      expression (typing/typemod.ml[1760,64448+2]..[1808,65760+14])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typemod.ml[1760,64448+6]..[1760,64448+16])
                              Ppat_var "approx_env" (typing/typemod.ml[1760,64448+6]..[1760,64448+16])
                            expression (typing/typemod.ml[1761,64467+4]..[1767,64678+13])
                              Pexp_apply
                              expression (typing/typemod.ml[1761,64467+4]..[1761,64467+18])
                                Pexp_ident "List.fold_left" (typing/typemod.ml[1761,64467+4]..[1761,64467+18])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1762,64486+6]..[1766,64666+11])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/typemod.ml[1762,64486+11]..[1762,64486+14])
                                      Ppat_var "env" (typing/typemod.ml[1762,64486+11]..[1762,64486+14])
                                    expression (typing/typemod.ml[1763,64504+9]..[1766,64666+10])
                                      Pexp_apply
                                      expression (typing/typemod.ml[1763,64504+9]..[1763,64504+20])
                                        Pexp_ident "Option.fold" (typing/typemod.ml[1763,64504+9]..[1763,64504+20])
                                      [
                                        <arg>
                                        Labelled "none"
                                          expression (typing/typemod.ml[1763,64504+27]..[1763,64504+30])
                                            Pexp_ident "env" (typing/typemod.ml[1763,64504+27]..[1763,64504+30])
                                        <arg>
                                        Labelled "some"
                                          expression (typing/typemod.ml[1763,64504+37]..[1766,64666+10])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/typemod.ml[1763,64504+42]..[1763,64504+44])
                                              Ppat_var "id" (typing/typemod.ml[1763,64504+42]..[1763,64504+44])
                                            expression (typing/typemod.ml[1764,64567+11]..[1765,64619+46])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1764,64567+11]..[1764,64567+35])
                                                Pexp_ident "Env.enter_unbound_module" (typing/typemod.ml[1764,64567+11]..[1764,64567+35])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1764,64567+36]..[1764,64567+51])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[1764,64567+37]..[1764,64567+47])
                                                      Pexp_ident "Ident.name" (typing/typemod.ml[1764,64567+37]..[1764,64567+47])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[1764,64567+48]..[1764,64567+50])
                                                          Pexp_ident "id" (typing/typemod.ml[1764,64567+48]..[1764,64567+50])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1765,64619+13]..[1765,64619+42])
                                                    Pexp_construct "Mod_unbound_illegal_recursion" (typing/typemod.ml[1765,64619+13]..[1765,64619+42])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1765,64619+43]..[1765,64619+46])
                                                    Pexp_ident "env" (typing/typemod.ml[1765,64619+43]..[1765,64619+46])
                                              ]
                                      ]
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1767,64678+6]..[1767,64678+9])
                                    Pexp_ident "env" (typing/typemod.ml[1767,64678+6]..[1767,64678+9])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1767,64678+10]..[1767,64678+13])
                                    Pexp_ident "ids" (typing/typemod.ml[1767,64678+10]..[1767,64678+13])
                              ]
                        ]
                        expression (typing/typemod.ml[1769,64697+2]..[1808,65760+14])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[1769,64697+6]..[1769,64697+10])
                                Ppat_var "init" (typing/typemod.ml[1769,64697+6]..[1769,64697+10])
                              expression (typing/typemod.ml[1770,64710+4]..[1779,65026+16])
                                Pexp_apply
                                expression (typing/typemod.ml[1770,64710+4]..[1770,64710+13])
                                  Pexp_ident "List.map2" (typing/typemod.ml[1770,64710+4]..[1770,64710+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[1771,64724+6]..[1778,64990+35])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/typemod.ml[1771,64724+11]..[1771,64724+13])
                                        Ppat_var "id" (typing/typemod.ml[1771,64724+11]..[1771,64724+13])
                                      expression (typing/typemod.ml[1771,64724+14]..[1778,64990+34]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/typemod.ml[1771,64724+14]..[1771,64724+17])
                                          Ppat_var "pmd" (typing/typemod.ml[1771,64724+14]..[1771,64724+17])
                                        expression (typing/typemod.ml[1772,64745+9]..[1778,64990+34])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[1772,64745+13]..[1772,64745+15])
                                                Ppat_var "md" (typing/typemod.ml[1772,64745+13]..[1772,64745+15])
                                              expression (typing/typemod.ml[1773,64763+11]..[1776,64910+67])
                                                Pexp_record
                                                [
                                                  "md_type" (typing/typemod.ml[1773,64763+13]..[1773,64763+20])
                                                    expression (typing/typemod.ml[1773,64763+23]..[1773,64763+61])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[1773,64763+23]..[1773,64763+37])
                                                        Pexp_ident "approx_modtype" (typing/typemod.ml[1773,64763+23]..[1773,64763+37])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1773,64763+38]..[1773,64763+48])
                                                            Pexp_ident "approx_env" (typing/typemod.ml[1773,64763+38]..[1773,64763+48])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1773,64763+49]..[1773,64763+61])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[1773,64763+49]..[1773,64763+52])
                                                              Pexp_ident "pmd" (typing/typemod.ml[1773,64763+49]..[1773,64763+52])
                                                            "pmd_type" (typing/typemod.ml[1773,64763+53]..[1773,64763+61])
                                                      ]
                                                  "md_loc" (typing/typemod.ml[1774,64826+13]..[1774,64826+19])
                                                    expression (typing/typemod.ml[1774,64826+22]..[1774,64826+33])
                                                      Pexp_field
                                                      expression (typing/typemod.ml[1774,64826+22]..[1774,64826+25])
                                                        Pexp_ident "pmd" (typing/typemod.ml[1774,64826+22]..[1774,64826+25])
                                                      "pmd_loc" (typing/typemod.ml[1774,64826+26]..[1774,64826+33])
                                                  "md_attributes" (typing/typemod.ml[1775,64861+13]..[1775,64861+26])
                                                    expression (typing/typemod.ml[1775,64861+29]..[1775,64861+47])
                                                      Pexp_field
                                                      expression (typing/typemod.ml[1775,64861+29]..[1775,64861+32])
                                                        Pexp_ident "pmd" (typing/typemod.ml[1775,64861+29]..[1775,64861+32])
                                                      "pmd_attributes" (typing/typemod.ml[1775,64861+33]..[1775,64861+47])
                                                  "md_uid" (typing/typemod.ml[1776,64910+13]..[1776,64910+19])
                                                    expression (typing/typemod.ml[1776,64910+22]..[1776,64910+65])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[1776,64910+22]..[1776,64910+28])
                                                        Pexp_ident "Uid.mk" (typing/typemod.ml[1776,64910+22]..[1776,64910+28])
                                                      [
                                                        <arg>
                                                        Labelled "current_unit"
                                                          expression (typing/typemod.ml[1776,64910+43]..[1776,64910+65])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1776,64910+44]..[1776,64910+61])
                                                              Pexp_ident "Env.get_unit_name" (typing/typemod.ml[1776,64910+44]..[1776,64910+61])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1776,64910+62]..[1776,64910+64])
                                                                  Pexp_construct "()" (typing/typemod.ml[1776,64910+62]..[1776,64910+64])
                                                                  None
                                                            ]
                                                      ]
                                                ]
                                                None
                                          ]
                                          expression (typing/typemod.ml[1778,64990+8]..[1778,64990+34])
                                            Pexp_tuple
                                            [
                                              expression (typing/typemod.ml[1778,64990+9]..[1778,64990+11])
                                                Pexp_ident "id" (typing/typemod.ml[1778,64990+9]..[1778,64990+11])
                                              expression (typing/typemod.ml[1778,64990+13]..[1778,64990+25])
                                                Pexp_field
                                                expression (typing/typemod.ml[1778,64990+13]..[1778,64990+16])
                                                  Pexp_ident "pmd" (typing/typemod.ml[1778,64990+13]..[1778,64990+16])
                                                "pmd_name" (typing/typemod.ml[1778,64990+17]..[1778,64990+25])
                                              expression (typing/typemod.ml[1778,64990+27]..[1778,64990+29])
                                                Pexp_ident "md" (typing/typemod.ml[1778,64990+27]..[1778,64990+29])
                                              expression (typing/typemod.ml[1778,64990+31]..[1778,64990+33])
                                                Pexp_construct "()" (typing/typemod.ml[1778,64990+31]..[1778,64990+33])
                                                None
                                            ]
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[1779,65026+6]..[1779,65026+9])
                                      Pexp_ident "ids" (typing/typemod.ml[1779,65026+6]..[1779,65026+9])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[1779,65026+10]..[1779,65026+16])
                                      Pexp_ident "sdecls" (typing/typemod.ml[1779,65026+10]..[1779,65026+16])
                                ]
                          ]
                          expression (typing/typemod.ml[1781,65048+2]..[1808,65760+14])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[1781,65048+6]..[1781,65048+10])
                                  Ppat_var "env0" (typing/typemod.ml[1781,65048+6]..[1781,65048+10])
                                expression (typing/typemod.ml[1781,65048+13]..[1781,65048+26])
                                  Pexp_apply
                                  expression (typing/typemod.ml[1781,65048+13]..[1781,65048+21])
                                    Pexp_ident "make_env" (typing/typemod.ml[1781,65048+13]..[1781,65048+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1781,65048+22]..[1781,65048+26])
                                        Pexp_ident "init" (typing/typemod.ml[1781,65048+22]..[1781,65048+26])
                                  ]
                            ]
                            expression (typing/typemod.ml[1782,65078+2]..[1808,65760+14])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[1782,65078+6]..[1782,65078+10])
                                    Ppat_var "dcl1" (typing/typemod.ml[1782,65078+6]..[1782,65078+10])
                                  expression (typing/typemod.ml[1783,65091+4]..[1784,65121+38])
                                    Pexp_apply
                                    expression (typing/typemod.ml[1783,65091+4]..[1783,65091+29])
                                      Pexp_ident "Warnings.without_warnings" (typing/typemod.ml[1783,65091+4]..[1783,65091+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1784,65121+6]..[1784,65121+38])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/typemod.ml[1784,65121+11]..[1784,65121+13])
                                            Ppat_construct "()" (typing/typemod.ml[1784,65121+11]..[1784,65121+13])
                                            None
                                          expression (typing/typemod.ml[1784,65121+17]..[1784,65121+37])
                                            Pexp_apply
                                            expression (typing/typemod.ml[1784,65121+17]..[1784,65121+27])
                                              Pexp_ident "transition" (typing/typemod.ml[1784,65121+17]..[1784,65121+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1784,65121+28]..[1784,65121+32])
                                                  Pexp_ident "env0" (typing/typemod.ml[1784,65121+28]..[1784,65121+32])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1784,65121+33]..[1784,65121+37])
                                                  Pexp_ident "init" (typing/typemod.ml[1784,65121+33]..[1784,65121+37])
                                            ]
                                    ]
                              ]
                              expression (typing/typemod.ml[1786,65165+2]..[1808,65760+14])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[1786,65165+6]..[1786,65165+10])
                                      Ppat_var "env1" (typing/typemod.ml[1786,65165+6]..[1786,65165+10])
                                    expression (typing/typemod.ml[1786,65165+13]..[1786,65165+26])
                                      Pexp_apply
                                      expression (typing/typemod.ml[1786,65165+13]..[1786,65165+21])
                                        Pexp_ident "make_env" (typing/typemod.ml[1786,65165+13]..[1786,65165+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1786,65165+22]..[1786,65165+26])
                                            Pexp_ident "dcl1" (typing/typemod.ml[1786,65165+22]..[1786,65165+26])
                                      ]
                                ]
                                expression (typing/typemod.ml[1787,65195+2]..[1808,65760+14])
                                  Pexp_sequence
                                  expression (typing/typemod.ml[1787,65195+2]..[1787,65195+45])
                                    Pexp_apply
                                    expression (typing/typemod.ml[1787,65195+2]..[1787,65195+24])
                                      Pexp_ident "check_recmod_typedecls" (typing/typemod.ml[1787,65195+2]..[1787,65195+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1787,65195+25]..[1787,65195+29])
                                          Pexp_ident "env1" (typing/typemod.ml[1787,65195+25]..[1787,65195+29])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1787,65195+30]..[1787,65195+45])
                                          Pexp_apply
                                          expression (typing/typemod.ml[1787,65195+31]..[1787,65195+39])
                                            Pexp_ident "map_mtys" (typing/typemod.ml[1787,65195+31]..[1787,65195+39])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1787,65195+40]..[1787,65195+44])
                                                Pexp_ident "dcl1" (typing/typemod.ml[1787,65195+40]..[1787,65195+44])
                                          ]
                                    ]
                                  expression (typing/typemod.ml[1788,65242+2]..[1808,65760+14])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typemod.ml[1788,65242+6]..[1788,65242+10])
                                          Ppat_var "dcl2" (typing/typemod.ml[1788,65242+6]..[1788,65242+10])
                                        expression (typing/typemod.ml[1788,65242+13]..[1788,65242+33])
                                          Pexp_apply
                                          expression (typing/typemod.ml[1788,65242+13]..[1788,65242+23])
                                            Pexp_ident "transition" (typing/typemod.ml[1788,65242+13]..[1788,65242+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1788,65242+24]..[1788,65242+28])
                                                Pexp_ident "env1" (typing/typemod.ml[1788,65242+24]..[1788,65242+28])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1788,65242+29]..[1788,65242+33])
                                                Pexp_ident "dcl1" (typing/typemod.ml[1788,65242+29]..[1788,65242+33])
                                          ]
                                    ]
                                    expression (typing/typemod.ml[1795,65400+2]..[1808,65760+14])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[1795,65400+6]..[1795,65400+10])
                                            Ppat_var "env2" (typing/typemod.ml[1795,65400+6]..[1795,65400+10])
                                          expression (typing/typemod.ml[1795,65400+13]..[1795,65400+26])
                                            Pexp_apply
                                            expression (typing/typemod.ml[1795,65400+13]..[1795,65400+21])
                                              Pexp_ident "make_env" (typing/typemod.ml[1795,65400+13]..[1795,65400+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1795,65400+22]..[1795,65400+26])
                                                  Pexp_ident "dcl2" (typing/typemod.ml[1795,65400+22]..[1795,65400+26])
                                            ]
                                      ]
                                      expression (typing/typemod.ml[1796,65430+2]..[1808,65760+14])
                                        Pexp_sequence
                                        expression (typing/typemod.ml[1796,65430+2]..[1796,65430+45])
                                          Pexp_apply
                                          expression (typing/typemod.ml[1796,65430+2]..[1796,65430+24])
                                            Pexp_ident "check_recmod_typedecls" (typing/typemod.ml[1796,65430+2]..[1796,65430+24])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1796,65430+25]..[1796,65430+29])
                                                Pexp_ident "env2" (typing/typemod.ml[1796,65430+25]..[1796,65430+29])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1796,65430+30]..[1796,65430+45])
                                                Pexp_apply
                                                expression (typing/typemod.ml[1796,65430+31]..[1796,65430+39])
                                                  Pexp_ident "map_mtys" (typing/typemod.ml[1796,65430+31]..[1796,65430+39])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1796,65430+40]..[1796,65430+44])
                                                      Pexp_ident "dcl2" (typing/typemod.ml[1796,65430+40]..[1796,65430+44])
                                                ]
                                          ]
                                        expression (typing/typemod.ml[1797,65477+2]..[1808,65760+14])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[1797,65477+6]..[1797,65477+10])
                                                Ppat_var "dcl2" (typing/typemod.ml[1797,65477+6]..[1797,65477+10])
                                              expression (typing/typemod.ml[1798,65490+4]..[1806,65737+17])
                                                Pexp_apply
                                                expression (typing/typemod.ml[1798,65490+4]..[1798,65490+13])
                                                  Pexp_ident "List.map2" (typing/typemod.ml[1798,65490+4]..[1798,65490+13])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1798,65490+14]..[1806,65737+5])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (typing/typemod.ml[1798,65490+19]..[1798,65490+22])
                                                        Ppat_var "pmd" (typing/typemod.ml[1798,65490+19]..[1798,65490+22])
                                                      expression (typing/typemod.ml[1798,65490+23]..[1805,65716+20]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (typing/typemod.ml[1798,65490+23]..[1798,65490+44])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/typemod.ml[1798,65490+24]..[1798,65490+26])
                                                              Ppat_var "id" (typing/typemod.ml[1798,65490+24]..[1798,65490+26])
                                                            pattern (typing/typemod.ml[1798,65490+28]..[1798,65490+34])
                                                              Ppat_var "id_loc" (typing/typemod.ml[1798,65490+28]..[1798,65490+34])
                                                            pattern (typing/typemod.ml[1798,65490+36]..[1798,65490+38])
                                                              Ppat_var "md" (typing/typemod.ml[1798,65490+36]..[1798,65490+38])
                                                            pattern (typing/typemod.ml[1798,65490+40]..[1798,65490+43])
                                                              Ppat_var "mty" (typing/typemod.ml[1798,65490+40]..[1798,65490+43])
                                                          ]
                                                        expression (typing/typemod.ml[1799,65538+6]..[1805,65716+20])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (typing/typemod.ml[1799,65538+10]..[1799,65538+13])
                                                                Ppat_var "tmd" (typing/typemod.ml[1799,65538+10]..[1799,65538+13])
                                                              expression (typing/typemod.ml[1800,65554+8]..[1803,65664+42])
                                                                Pexp_record
                                                                [
                                                                  "md_id" (typing/typemod.ml[1800,65554+9]..[1800,65554+14])
                                                                    expression (typing/typemod.ml[1800,65554+15]..[1800,65554+17])
                                                                      Pexp_ident "id" (typing/typemod.ml[1800,65554+15]..[1800,65554+17])
                                                                  "md_name" (typing/typemod.ml[1800,65554+19]..[1800,65554+26])
                                                                    expression (typing/typemod.ml[1800,65554+27]..[1800,65554+33])
                                                                      Pexp_ident "id_loc" (typing/typemod.ml[1800,65554+27]..[1800,65554+33])
                                                                  "md_type" (typing/typemod.ml[1800,65554+35]..[1800,65554+42])
                                                                    expression (typing/typemod.ml[1800,65554+43]..[1800,65554+46])
                                                                      Pexp_ident "mty" (typing/typemod.ml[1800,65554+43]..[1800,65554+46])
                                                                  "md_presence" (typing/typemod.ml[1801,65602+9]..[1801,65602+20])
                                                                    expression (typing/typemod.ml[1801,65602+21]..[1801,65602+31])
                                                                      Pexp_construct "Mp_present" (typing/typemod.ml[1801,65602+21]..[1801,65602+31])
                                                                      None
                                                                  "md_loc" (typing/typemod.ml[1802,65635+9]..[1802,65635+15])
                                                                    expression (typing/typemod.ml[1802,65635+16]..[1802,65635+27])
                                                                      Pexp_field
                                                                      expression (typing/typemod.ml[1802,65635+16]..[1802,65635+19])
Pexp_ident "pmd" (typing/typemod.ml[1802,65635+16]..[1802,65635+19])
                                                                      "pmd_loc" (typing/typemod.ml[1802,65635+20]..[1802,65635+27])
                                                                  "md_attributes" (typing/typemod.ml[1803,65664+9]..[1803,65664+22])
                                                                    expression (typing/typemod.ml[1803,65664+23]..[1803,65664+41])
                                                                      Pexp_field
                                                                      expression (typing/typemod.ml[1803,65664+23]..[1803,65664+26])
Pexp_ident "pmd" (typing/typemod.ml[1803,65664+23]..[1803,65664+26])
                                                                      "pmd_attributes" (typing/typemod.ml[1803,65664+27]..[1803,65664+41])
                                                                ]
                                                                None
                                                          ]
                                                          expression (typing/typemod.ml[1805,65716+6]..[1805,65716+20])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typemod.ml[1805,65716+6]..[1805,65716+9])
                                                                Pexp_ident "tmd" (typing/typemod.ml[1805,65716+6]..[1805,65716+9])
                                                              expression (typing/typemod.ml[1805,65716+11]..[1805,65716+20])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[1805,65716+11]..[1805,65716+13])
                                                                  Pexp_ident "md" (typing/typemod.ml[1805,65716+11]..[1805,65716+13])
                                                                "md_uid" (typing/typemod.ml[1805,65716+14]..[1805,65716+20])
                                                            ]
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1806,65737+6]..[1806,65737+12])
                                                      Pexp_ident "sdecls" (typing/typemod.ml[1806,65737+6]..[1806,65737+12])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[1806,65737+13]..[1806,65737+17])
                                                      Pexp_ident "dcl2" (typing/typemod.ml[1806,65737+13]..[1806,65737+17])
                                                ]
                                          ]
                                          expression (typing/typemod.ml[1808,65760+2]..[1808,65760+14])
                                            Pexp_tuple
                                            [
                                              expression (typing/typemod.ml[1808,65760+3]..[1808,65760+7])
                                                Pexp_ident "dcl2" (typing/typemod.ml[1808,65760+3]..[1808,65760+7])
                                              expression (typing/typemod.ml[1808,65760+9]..[1808,65760+13])
                                                Pexp_ident "env2" (typing/typemod.ml[1808,65760+9]..[1808,65760+13])
                                            ]
    ]
  structure_item (typing/typemod.ml[1812,65836+0]..[1812,65836+20])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (typing/typemod.ml[1812,65836+0]..[1812,65836+20])
          pext_name = "Not_a_path"
          pext_kind =
            Pext_decl
              []
              None
  structure_item (typing/typemod.ml[1814,65858+0]..[1821,66137+25])
    Pstr_value Rec
    [
      <def>
        pattern (typing/typemod.ml[1814,65858+8]..[1814,65858+22])
          Ppat_var "path_of_module" (typing/typemod.ml[1814,65858+8]..[1814,65858+22])
        expression (typing/typemod.ml[1814,65858+23]..[1821,66137+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1814,65858+23]..[1814,65858+27])
            Ppat_var "mexp" (typing/typemod.ml[1814,65858+23]..[1814,65858+27])
          expression (typing/typemod.ml[1815,65888+2]..[1821,66137+25])
            Pexp_match
            expression (typing/typemod.ml[1815,65888+8]..[1815,65888+21])
              Pexp_field
              expression (typing/typemod.ml[1815,65888+8]..[1815,65888+12])
                Pexp_ident "mexp" (typing/typemod.ml[1815,65888+8]..[1815,65888+12])
              "mod_desc" (typing/typemod.ml[1815,65888+13]..[1815,65888+21])
            [
              <case>
                pattern (typing/typemod.ml[1816,65915+4]..[1816,65915+20])
                  Ppat_construct "Tmod_ident" (typing/typemod.ml[1816,65915+4]..[1816,65915+14])
                  Some
                    []
                    pattern (typing/typemod.ml[1816,65915+15]..[1816,65915+20])
                      Ppat_tuple
                      [
                        pattern (typing/typemod.ml[1816,65915+16]..[1816,65915+17])
                          Ppat_var "p" (typing/typemod.ml[1816,65915+16]..[1816,65915+17])
                        pattern (typing/typemod.ml[1816,65915+18]..[1816,65915+19])
                          Ppat_any
                      ]
                expression (typing/typemod.ml[1816,65915+24]..[1816,65915+25])
                  Pexp_ident "p" (typing/typemod.ml[1816,65915+24]..[1816,65915+25])
              <case>
                pattern (typing/typemod.ml[1817,65941+4]..[1817,65941+37])
                  Ppat_construct "Tmod_apply" (typing/typemod.ml[1817,65941+4]..[1817,65941+14])
                  Some
                    []
                    pattern (typing/typemod.ml[1817,65941+14]..[1817,65941+37])
                      Ppat_tuple
                      [
                        pattern (typing/typemod.ml[1817,65941+15]..[1817,65941+20])
                          Ppat_var "funct" (typing/typemod.ml[1817,65941+15]..[1817,65941+20])
                        pattern (typing/typemod.ml[1817,65941+22]..[1817,65941+25])
                          Ppat_var "arg" (typing/typemod.ml[1817,65941+22]..[1817,65941+25])
                        pattern (typing/typemod.ml[1817,65941+27]..[1817,65941+36])
                          Ppat_var "_coercion" (typing/typemod.ml[1817,65941+27]..[1817,65941+36])
                      ]
                <when>
                  expression (typing/typemod.ml[1817,65941+43]..[1817,65941+72])
                    Pexp_apply
                    expression (typing/typemod.ml[1817,65941+43]..[1817,65941+44])
                      Pexp_ident "!" (typing/typemod.ml[1817,65941+43]..[1817,65941+44])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[1817,65941+44]..[1817,65941+72])
                          Pexp_ident "Clflags.applicative_functors" (typing/typemod.ml[1817,65941+44]..[1817,65941+72])
                    ]
                expression (typing/typemod.ml[1818,66017+6]..[1818,66017+54])
                  Pexp_construct "Papply" (typing/typemod.ml[1818,66017+6]..[1818,66017+12])
                  Some
                    expression (typing/typemod.ml[1818,66017+12]..[1818,66017+54])
                      Pexp_tuple
                      [
                        expression (typing/typemod.ml[1818,66017+13]..[1818,66017+33])
                          Pexp_apply
                          expression (typing/typemod.ml[1818,66017+13]..[1818,66017+27])
                            Pexp_ident "path_of_module" (typing/typemod.ml[1818,66017+13]..[1818,66017+27])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1818,66017+28]..[1818,66017+33])
                                Pexp_ident "funct" (typing/typemod.ml[1818,66017+28]..[1818,66017+33])
                          ]
                        expression (typing/typemod.ml[1818,66017+35]..[1818,66017+53])
                          Pexp_apply
                          expression (typing/typemod.ml[1818,66017+35]..[1818,66017+49])
                            Pexp_ident "path_of_module" (typing/typemod.ml[1818,66017+35]..[1818,66017+49])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1818,66017+50]..[1818,66017+53])
                                Pexp_ident "arg" (typing/typemod.ml[1818,66017+50]..[1818,66017+53])
                          ]
                      ]
              <case>
                pattern (typing/typemod.ml[1819,66072+4]..[1819,66072+35])
                  Ppat_construct "Tmod_constraint" (typing/typemod.ml[1819,66072+4]..[1819,66072+19])
                  Some
                    []
                    pattern (typing/typemod.ml[1819,66072+20]..[1819,66072+35])
                      Ppat_tuple
                      [
                        pattern (typing/typemod.ml[1819,66072+21]..[1819,66072+25])
                          Ppat_var "mexp" (typing/typemod.ml[1819,66072+21]..[1819,66072+25])
                        pattern (typing/typemod.ml[1819,66072+27]..[1819,66072+28])
                          Ppat_any
                        pattern (typing/typemod.ml[1819,66072+30]..[1819,66072+31])
                          Ppat_any
                        pattern (typing/typemod.ml[1819,66072+33]..[1819,66072+34])
                          Ppat_any
                      ]
                expression (typing/typemod.ml[1820,66111+6]..[1820,66111+25])
                  Pexp_apply
                  expression (typing/typemod.ml[1820,66111+6]..[1820,66111+20])
                    Pexp_ident "path_of_module" (typing/typemod.ml[1820,66111+6]..[1820,66111+20])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[1820,66111+21]..[1820,66111+25])
                        Pexp_ident "mexp" (typing/typemod.ml[1820,66111+21]..[1820,66111+25])
                  ]
              <case>
                pattern (typing/typemod.ml[1821,66137+4]..[1821,66137+5])
                  Ppat_any
                expression (typing/typemod.ml[1821,66137+9]..[1821,66137+25])
                  Pexp_apply
                  expression (typing/typemod.ml[1821,66137+9]..[1821,66137+14])
                    Pexp_ident "raise" (typing/typemod.ml[1821,66137+9]..[1821,66137+14])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[1821,66137+15]..[1821,66137+25])
                        Pexp_construct "Not_a_path" (typing/typemod.ml[1821,66137+15]..[1821,66137+25])
                        None
                  ]
            ]
    ]
  structure_item (typing/typemod.ml[1823,66164+0]..[1824,66190+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[1823,66164+4]..[1823,66164+18])
          Ppat_var "path_of_module" (typing/typemod.ml[1823,66164+4]..[1823,66164+18])
        expression (typing/typemod.ml[1823,66164+19]..[1824,66190+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1823,66164+19]..[1823,66164+23])
            Ppat_var "mexp" (typing/typemod.ml[1823,66164+19]..[1823,66164+23])
          expression (typing/typemod.ml[1824,66190+1]..[1824,66190+55])
            Pexp_try
            expression (typing/typemod.ml[1824,66190+5]..[1824,66190+31])
              Pexp_construct "Some" (typing/typemod.ml[1824,66190+5]..[1824,66190+9])
              Some
                expression (typing/typemod.ml[1824,66190+10]..[1824,66190+31])
                  Pexp_apply
                  expression (typing/typemod.ml[1824,66190+11]..[1824,66190+25])
                    Pexp_ident "path_of_module" (typing/typemod.ml[1824,66190+11]..[1824,66190+25])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[1824,66190+26]..[1824,66190+30])
                        Pexp_ident "mexp" (typing/typemod.ml[1824,66190+26]..[1824,66190+30])
                  ]
            [
              <case>
                pattern (typing/typemod.ml[1824,66190+37]..[1824,66190+47])
                  Ppat_construct "Not_a_path" (typing/typemod.ml[1824,66190+37]..[1824,66190+47])
                  None
                expression (typing/typemod.ml[1824,66190+51]..[1824,66190+55])
                  Pexp_construct "None" (typing/typemod.ml[1824,66190+51]..[1824,66190+55])
                  None
            ]
    ]
  structure_item (typing/typemod.ml[1829,66350+0]..[1848,66993+14])
    Pstr_value Rec
    [
      <def>
        pattern (typing/typemod.ml[1829,66350+8]..[1829,66350+22])
          Ppat_var "nongen_modtype" (typing/typemod.ml[1829,66350+8]..[1829,66350+22])
        expression (typing/typemod.ml[1829,66350+23]..[1843,66786+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1829,66350+23]..[1829,66350+26])
            Ppat_var "env" (typing/typemod.ml[1829,66350+23]..[1829,66350+26])
          expression (typing/typemod.ml[1829,66350+29]..[1843,66786+29])
            Pexp_function
            [
              <case>
                pattern (typing/typemod.ml[1830,66388+4]..[1830,66388+15])
                  Ppat_construct "Mty_ident" (typing/typemod.ml[1830,66388+4]..[1830,66388+13])
                  Some
                    []
                    pattern (typing/typemod.ml[1830,66388+14]..[1830,66388+15])
                      Ppat_any
                expression (typing/typemod.ml[1830,66388+19]..[1830,66388+24])
                  Pexp_construct "false" (typing/typemod.ml[1830,66388+19]..[1830,66388+24])
                  None
              <case>
                pattern (typing/typemod.ml[1831,66413+4]..[1831,66413+15])
                  Ppat_construct "Mty_alias" (typing/typemod.ml[1831,66413+4]..[1831,66413+13])
                  Some
                    []
                    pattern (typing/typemod.ml[1831,66413+14]..[1831,66413+15])
                      Ppat_any
                expression (typing/typemod.ml[1831,66413+19]..[1831,66413+24])
                  Pexp_construct "false" (typing/typemod.ml[1831,66413+19]..[1831,66413+24])
                  None
              <case>
                pattern (typing/typemod.ml[1832,66438+4]..[1832,66438+20])
                  Ppat_construct "Mty_signature" (typing/typemod.ml[1832,66438+4]..[1832,66438+17])
                  Some
                    []
                    pattern (typing/typemod.ml[1832,66438+18]..[1832,66438+20])
                      Ppat_var "sg" (typing/typemod.ml[1832,66438+18]..[1832,66438+20])
                expression (typing/typemod.ml[1833,66462+6]..[1834,66506+48])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typemod.ml[1833,66462+10]..[1833,66462+13])
                        Ppat_var "env" (typing/typemod.ml[1833,66462+10]..[1833,66462+13])
                      expression (typing/typemod.ml[1833,66462+16]..[1833,66462+40])
                        Pexp_apply
                        expression (typing/typemod.ml[1833,66462+16]..[1833,66462+33])
                          Pexp_ident "Env.add_signature" (typing/typemod.ml[1833,66462+16]..[1833,66462+33])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1833,66462+34]..[1833,66462+36])
                              Pexp_ident "sg" (typing/typemod.ml[1833,66462+34]..[1833,66462+36])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1833,66462+37]..[1833,66462+40])
                              Pexp_ident "env" (typing/typemod.ml[1833,66462+37]..[1833,66462+40])
                        ]
                  ]
                  expression (typing/typemod.ml[1834,66506+6]..[1834,66506+48])
                    Pexp_apply
                    expression (typing/typemod.ml[1834,66506+6]..[1834,66506+17])
                      Pexp_ident "List.exists" (typing/typemod.ml[1834,66506+6]..[1834,66506+17])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[1834,66506+18]..[1834,66506+45])
                          Pexp_apply
                          expression (typing/typemod.ml[1834,66506+19]..[1834,66506+40])
                            Pexp_ident "nongen_signature_item" (typing/typemod.ml[1834,66506+19]..[1834,66506+40])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[1834,66506+41]..[1834,66506+44])
                                Pexp_ident "env" (typing/typemod.ml[1834,66506+41]..[1834,66506+44])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[1834,66506+46]..[1834,66506+48])
                          Pexp_ident "sg" (typing/typemod.ml[1834,66506+46]..[1834,66506+48])
                    ]
              <case>
                pattern (typing/typemod.ml[1835,66555+4]..[1835,66555+30])
                  Ppat_construct "Mty_functor" (typing/typemod.ml[1835,66555+4]..[1835,66555+15])
                  Some
                    []
                    pattern (typing/typemod.ml[1835,66555+15]..[1835,66555+30])
                      Ppat_tuple
                      [
                        pattern (typing/typemod.ml[1835,66555+16]..[1835,66555+23])
                          Ppat_var "arg_opt" (typing/typemod.ml[1835,66555+16]..[1835,66555+23])
                        pattern (typing/typemod.ml[1835,66555+25]..[1835,66555+29])
                          Ppat_var "body" (typing/typemod.ml[1835,66555+25]..[1835,66555+29])
                      ]
                expression (typing/typemod.ml[1836,66589+6]..[1843,66786+29])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typemod.ml[1836,66589+10]..[1836,66589+13])
                        Ppat_var "env" (typing/typemod.ml[1836,66589+10]..[1836,66589+13])
                      expression (typing/typemod.ml[1837,66605+8]..[1841,66716+60])
                        Pexp_match
                        expression (typing/typemod.ml[1837,66605+14]..[1837,66605+21])
                          Pexp_ident "arg_opt" (typing/typemod.ml[1837,66605+14]..[1837,66605+21])
                        [
                          <case>
                            pattern (typing/typemod.ml[1838,66632+10]..[1839,66647+25])
                              Ppat_or
                              pattern (typing/typemod.ml[1838,66632+10]..[1838,66632+14])
                                Ppat_construct "Unit" (typing/typemod.ml[1838,66632+10]..[1838,66632+14])
                                None
                              pattern (typing/typemod.ml[1839,66647+10]..[1839,66647+25])
                                Ppat_construct "Named" (typing/typemod.ml[1839,66647+10]..[1839,66647+15])
                                Some
                                  []
                                  pattern (typing/typemod.ml[1839,66647+16]..[1839,66647+25])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typemod.ml[1839,66647+17]..[1839,66647+21])
                                        Ppat_construct "None" (typing/typemod.ml[1839,66647+17]..[1839,66647+21])
                                        None
                                      pattern (typing/typemod.ml[1839,66647+23]..[1839,66647+24])
                                        Ppat_any
                                    ]
                            expression (typing/typemod.ml[1839,66647+29]..[1839,66647+32])
                              Pexp_ident "env" (typing/typemod.ml[1839,66647+29]..[1839,66647+32])
                          <case>
                            pattern (typing/typemod.ml[1840,66680+10]..[1840,66680+32])
                              Ppat_construct "Named" (typing/typemod.ml[1840,66680+10]..[1840,66680+15])
                              Some
                                []
                                pattern (typing/typemod.ml[1840,66680+16]..[1840,66680+32])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[1840,66680+17]..[1840,66680+24])
                                      Ppat_construct "Some" (typing/typemod.ml[1840,66680+17]..[1840,66680+21])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[1840,66680+22]..[1840,66680+24])
                                          Ppat_var "id" (typing/typemod.ml[1840,66680+22]..[1840,66680+24])
                                    pattern (typing/typemod.ml[1840,66680+26]..[1840,66680+31])
                                      Ppat_var "param" (typing/typemod.ml[1840,66680+26]..[1840,66680+31])
                                  ]
                            expression (typing/typemod.ml[1841,66716+12]..[1841,66716+60])
                              Pexp_apply
                              expression (typing/typemod.ml[1841,66716+12]..[1841,66716+26])
                                Pexp_ident "Env.add_module" (typing/typemod.ml[1841,66716+12]..[1841,66716+26])
                              [
                                <arg>
                                Labelled "arg"
                                  expression (typing/typemod.ml[1841,66716+32]..[1841,66716+36])
                                    Pexp_construct "true" (typing/typemod.ml[1841,66716+32]..[1841,66716+36])
                                    None
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1841,66716+37]..[1841,66716+39])
                                    Pexp_ident "id" (typing/typemod.ml[1841,66716+37]..[1841,66716+39])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1841,66716+40]..[1841,66716+50])
                                    Pexp_construct "Mp_present" (typing/typemod.ml[1841,66716+40]..[1841,66716+50])
                                    None
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1841,66716+51]..[1841,66716+56])
                                    Pexp_ident "param" (typing/typemod.ml[1841,66716+51]..[1841,66716+56])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[1841,66716+57]..[1841,66716+60])
                                    Pexp_ident "env" (typing/typemod.ml[1841,66716+57]..[1841,66716+60])
                              ]
                        ]
                  ]
                  expression (typing/typemod.ml[1843,66786+6]..[1843,66786+29])
                    Pexp_apply
                    expression (typing/typemod.ml[1843,66786+6]..[1843,66786+20])
                      Pexp_ident "nongen_modtype" (typing/typemod.ml[1843,66786+6]..[1843,66786+20])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[1843,66786+21]..[1843,66786+24])
                          Pexp_ident "env" (typing/typemod.ml[1843,66786+21]..[1843,66786+24])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[1843,66786+25]..[1843,66786+29])
                          Pexp_ident "body" (typing/typemod.ml[1843,66786+25]..[1843,66786+29])
                    ]
            ]
      <def>
        pattern (typing/typemod.ml[1845,66817+4]..[1845,66817+25])
          Ppat_var "nongen_signature_item" (typing/typemod.ml[1845,66817+4]..[1845,66817+25])
        expression (typing/typemod.ml[1845,66817+26]..[1848,66993+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1845,66817+26]..[1845,66817+29])
            Ppat_var "env" (typing/typemod.ml[1845,66817+26]..[1845,66817+29])
          expression (typing/typemod.ml[1845,66817+32]..[1848,66993+14])
            Pexp_function
            [
              <case>
                pattern (typing/typemod.ml[1846,66858+4]..[1846,66858+27])
                  Ppat_construct "Sig_value" (typing/typemod.ml[1846,66858+4]..[1846,66858+13])
                  Some
                    []
                    pattern (typing/typemod.ml[1846,66858+13]..[1846,66858+27])
                      Ppat_tuple
                      [
                        pattern (typing/typemod.ml[1846,66858+14]..[1846,66858+17])
                          Ppat_var "_id" (typing/typemod.ml[1846,66858+14]..[1846,66858+17])
                        pattern (typing/typemod.ml[1846,66858+19]..[1846,66858+23])
                          Ppat_var "desc" (typing/typemod.ml[1846,66858+19]..[1846,66858+23])
                        pattern (typing/typemod.ml[1846,66858+25]..[1846,66858+26])
                          Ppat_any
                      ]
                expression (typing/typemod.ml[1846,66858+31]..[1846,66858+68])
                  Pexp_apply
                  expression (typing/typemod.ml[1846,66858+31]..[1846,66858+50])
                    Pexp_ident "Ctype.nongen_schema" (typing/typemod.ml[1846,66858+31]..[1846,66858+50])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[1846,66858+51]..[1846,66858+54])
                        Pexp_ident "env" (typing/typemod.ml[1846,66858+51]..[1846,66858+54])
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[1846,66858+55]..[1846,66858+68])
                        Pexp_field
                        expression (typing/typemod.ml[1846,66858+55]..[1846,66858+59])
                          Pexp_ident "desc" (typing/typemod.ml[1846,66858+55]..[1846,66858+59])
                        "val_type" (typing/typemod.ml[1846,66858+60]..[1846,66858+68])
                  ]
              <case>
                pattern (typing/typemod.ml[1847,66927+4]..[1847,66927+32])
                  Ppat_construct "Sig_module" (typing/typemod.ml[1847,66927+4]..[1847,66927+14])
                  Some
                    []
                    pattern (typing/typemod.ml[1847,66927+14]..[1847,66927+32])
                      Ppat_tuple
                      [
                        pattern (typing/typemod.ml[1847,66927+15]..[1847,66927+18])
                          Ppat_var "_id" (typing/typemod.ml[1847,66927+15]..[1847,66927+18])
                        pattern (typing/typemod.ml[1847,66927+20]..[1847,66927+21])
                          Ppat_any
                        pattern (typing/typemod.ml[1847,66927+23]..[1847,66927+25])
                          Ppat_var "md" (typing/typemod.ml[1847,66927+23]..[1847,66927+25])
                        pattern (typing/typemod.ml[1847,66927+27]..[1847,66927+28])
                          Ppat_any
                        pattern (typing/typemod.ml[1847,66927+30]..[1847,66927+31])
                          Ppat_any
                      ]
                expression (typing/typemod.ml[1847,66927+36]..[1847,66927+65])
                  Pexp_apply
                  expression (typing/typemod.ml[1847,66927+36]..[1847,66927+50])
                    Pexp_ident "nongen_modtype" (typing/typemod.ml[1847,66927+36]..[1847,66927+50])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[1847,66927+51]..[1847,66927+54])
                        Pexp_ident "env" (typing/typemod.ml[1847,66927+51]..[1847,66927+54])
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[1847,66927+55]..[1847,66927+65])
                        Pexp_field
                        expression (typing/typemod.ml[1847,66927+55]..[1847,66927+57])
                          Pexp_ident "md" (typing/typemod.ml[1847,66927+55]..[1847,66927+57])
                        "md_type" (typing/typemod.ml[1847,66927+58]..[1847,66927+65])
                  ]
              <case>
                pattern (typing/typemod.ml[1848,66993+4]..[1848,66993+5])
                  Ppat_any
                expression (typing/typemod.ml[1848,66993+9]..[1848,66993+14])
                  Pexp_construct "false" (typing/typemod.ml[1848,66993+9]..[1848,66993+14])
                  None
            ]
    ]
  structure_item (typing/typemod.ml[1850,67009+0]..[1858,67383+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[1850,67009+4]..[1850,67009+31])
          Ppat_var "check_nongen_signature_item" (typing/typemod.ml[1850,67009+4]..[1850,67009+31])
        expression (typing/typemod.ml[1850,67009+32]..[1858,67383+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1850,67009+32]..[1850,67009+35])
            Ppat_var "env" (typing/typemod.ml[1850,67009+32]..[1850,67009+35])
          expression (typing/typemod.ml[1850,67009+36]..[1858,67383+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1850,67009+36]..[1850,67009+44])
              Ppat_var "sig_item" (typing/typemod.ml[1850,67009+36]..[1850,67009+44])
            expression (typing/typemod.ml[1851,67056+2]..[1858,67383+11])
              Pexp_match
              expression (typing/typemod.ml[1851,67056+8]..[1851,67056+16])
                Pexp_ident "sig_item" (typing/typemod.ml[1851,67056+8]..[1851,67056+16])
              [
                <case>
                  pattern (typing/typemod.ml[1852,67078+4]..[1852,67078+25])
                    Ppat_construct "Sig_value" (typing/typemod.ml[1852,67078+4]..[1852,67078+13])
                    Some
                      []
                      pattern (typing/typemod.ml[1852,67078+13]..[1852,67078+25])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[1852,67078+14]..[1852,67078+17])
                            Ppat_var "_id" (typing/typemod.ml[1852,67078+14]..[1852,67078+17])
                          pattern (typing/typemod.ml[1852,67078+19]..[1852,67078+21])
                            Ppat_var "vd" (typing/typemod.ml[1852,67078+19]..[1852,67078+21])
                          pattern (typing/typemod.ml[1852,67078+23]..[1852,67078+24])
                            Ppat_any
                        ]
                  expression (typing/typemod.ml[1853,67107+6]..[1854,67157+70])
                    Pexp_ifthenelse
                    expression (typing/typemod.ml[1853,67107+9]..[1853,67107+44])
                      Pexp_apply
                      expression (typing/typemod.ml[1853,67107+9]..[1853,67107+28])
                        Pexp_ident "Ctype.nongen_schema" (typing/typemod.ml[1853,67107+9]..[1853,67107+28])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1853,67107+29]..[1853,67107+32])
                            Pexp_ident "env" (typing/typemod.ml[1853,67107+29]..[1853,67107+32])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1853,67107+33]..[1853,67107+44])
                            Pexp_field
                            expression (typing/typemod.ml[1853,67107+33]..[1853,67107+35])
                              Pexp_ident "vd" (typing/typemod.ml[1853,67107+33]..[1853,67107+35])
                            "val_type" (typing/typemod.ml[1853,67107+36]..[1853,67107+44])
                      ]
                    expression (typing/typemod.ml[1854,67157+8]..[1854,67157+70])
                      Pexp_apply
                      expression (typing/typemod.ml[1854,67157+8]..[1854,67157+13])
                        Pexp_ident "raise" (typing/typemod.ml[1854,67157+8]..[1854,67157+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1854,67157+14]..[1854,67157+70])
                            Pexp_construct "Error" (typing/typemod.ml[1854,67157+15]..[1854,67157+20])
                            Some
                              expression (typing/typemod.ml[1854,67157+21]..[1854,67157+69])
                                Pexp_tuple
                                [
                                  expression (typing/typemod.ml[1854,67157+22]..[1854,67157+32])
                                    Pexp_field
                                    expression (typing/typemod.ml[1854,67157+22]..[1854,67157+24])
                                      Pexp_ident "vd" (typing/typemod.ml[1854,67157+22]..[1854,67157+24])
                                    "val_loc" (typing/typemod.ml[1854,67157+25]..[1854,67157+32])
                                  expression (typing/typemod.ml[1854,67157+34]..[1854,67157+37])
                                    Pexp_ident "env" (typing/typemod.ml[1854,67157+34]..[1854,67157+37])
                                  expression (typing/typemod.ml[1854,67157+39]..[1854,67157+68])
                                    Pexp_construct "Non_generalizable" (typing/typemod.ml[1854,67157+39]..[1854,67157+56])
                                    Some
                                      expression (typing/typemod.ml[1854,67157+57]..[1854,67157+68])
                                        Pexp_field
                                        expression (typing/typemod.ml[1854,67157+57]..[1854,67157+59])
                                          Pexp_ident "vd" (typing/typemod.ml[1854,67157+57]..[1854,67157+59])
                                        "val_type" (typing/typemod.ml[1854,67157+60]..[1854,67157+68])
                                ]
                      ]
                    None
                <case>
                  pattern (typing/typemod.ml[1855,67228+4]..[1855,67228+33])
                    Ppat_construct "Sig_module" (typing/typemod.ml[1855,67228+4]..[1855,67228+14])
                    Some
                      []
                      pattern (typing/typemod.ml[1855,67228+15]..[1855,67228+33])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[1855,67228+16]..[1855,67228+19])
                            Ppat_var "_id" (typing/typemod.ml[1855,67228+16]..[1855,67228+19])
                          pattern (typing/typemod.ml[1855,67228+21]..[1855,67228+22])
                            Ppat_any
                          pattern (typing/typemod.ml[1855,67228+24]..[1855,67228+26])
                            Ppat_var "md" (typing/typemod.ml[1855,67228+24]..[1855,67228+26])
                          pattern (typing/typemod.ml[1855,67228+28]..[1855,67228+29])
                            Ppat_any
                          pattern (typing/typemod.ml[1855,67228+31]..[1855,67228+32])
                            Ppat_any
                        ]
                  expression (typing/typemod.ml[1856,67265+6]..[1857,67309+73])
                    Pexp_ifthenelse
                    expression (typing/typemod.ml[1856,67265+9]..[1856,67265+38])
                      Pexp_apply
                      expression (typing/typemod.ml[1856,67265+9]..[1856,67265+23])
                        Pexp_ident "nongen_modtype" (typing/typemod.ml[1856,67265+9]..[1856,67265+23])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1856,67265+24]..[1856,67265+27])
                            Pexp_ident "env" (typing/typemod.ml[1856,67265+24]..[1856,67265+27])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1856,67265+28]..[1856,67265+38])
                            Pexp_field
                            expression (typing/typemod.ml[1856,67265+28]..[1856,67265+30])
                              Pexp_ident "md" (typing/typemod.ml[1856,67265+28]..[1856,67265+30])
                            "md_type" (typing/typemod.ml[1856,67265+31]..[1856,67265+38])
                      ]
                    expression (typing/typemod.ml[1857,67309+8]..[1857,67309+73])
                      Pexp_apply
                      expression (typing/typemod.ml[1857,67309+8]..[1857,67309+13])
                        Pexp_ident "raise" (typing/typemod.ml[1857,67309+8]..[1857,67309+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[1857,67309+13]..[1857,67309+73])
                            Pexp_construct "Error" (typing/typemod.ml[1857,67309+14]..[1857,67309+19])
                            Some
                              expression (typing/typemod.ml[1857,67309+19]..[1857,67309+72])
                                Pexp_tuple
                                [
                                  expression (typing/typemod.ml[1857,67309+20]..[1857,67309+29])
                                    Pexp_field
                                    expression (typing/typemod.ml[1857,67309+20]..[1857,67309+22])
                                      Pexp_ident "md" (typing/typemod.ml[1857,67309+20]..[1857,67309+22])
                                    "md_loc" (typing/typemod.ml[1857,67309+23]..[1857,67309+29])
                                  expression (typing/typemod.ml[1857,67309+31]..[1857,67309+34])
                                    Pexp_ident "env" (typing/typemod.ml[1857,67309+31]..[1857,67309+34])
                                  expression (typing/typemod.ml[1857,67309+36]..[1857,67309+71])
                                    Pexp_construct "Non_generalizable_module" (typing/typemod.ml[1857,67309+36]..[1857,67309+60])
                                    Some
                                      expression (typing/typemod.ml[1857,67309+61]..[1857,67309+71])
                                        Pexp_field
                                        expression (typing/typemod.ml[1857,67309+61]..[1857,67309+63])
                                          Pexp_ident "md" (typing/typemod.ml[1857,67309+61]..[1857,67309+63])
                                        "md_type" (typing/typemod.ml[1857,67309+64]..[1857,67309+71])
                                ]
                      ]
                    None
                <case>
                  pattern (typing/typemod.ml[1858,67383+4]..[1858,67383+5])
                    Ppat_any
                  expression (typing/typemod.ml[1858,67383+9]..[1858,67383+11])
                    Pexp_construct "()" (typing/typemod.ml[1858,67383+9]..[1858,67383+11])
                    None
              ]
    ]
  structure_item (typing/typemod.ml[1860,67396+0]..[1861,67432+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[1860,67396+4]..[1860,67396+26])
          Ppat_var "check_nongen_signature" (typing/typemod.ml[1860,67396+4]..[1860,67396+26])
        expression (typing/typemod.ml[1860,67396+27]..[1861,67432+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1860,67396+27]..[1860,67396+30])
            Ppat_var "env" (typing/typemod.ml[1860,67396+27]..[1860,67396+30])
          expression (typing/typemod.ml[1860,67396+31]..[1861,67432+48]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1860,67396+31]..[1860,67396+33])
              Ppat_var "sg" (typing/typemod.ml[1860,67396+31]..[1860,67396+33])
            expression (typing/typemod.ml[1861,67432+2]..[1861,67432+48])
              Pexp_apply
              expression (typing/typemod.ml[1861,67432+2]..[1861,67432+11])
                Pexp_ident "List.iter" (typing/typemod.ml[1861,67432+2]..[1861,67432+11])
              [
                <arg>
                Nolabel
                  expression (typing/typemod.ml[1861,67432+12]..[1861,67432+45])
                    Pexp_apply
                    expression (typing/typemod.ml[1861,67432+13]..[1861,67432+40])
                      Pexp_ident "check_nongen_signature_item" (typing/typemod.ml[1861,67432+13]..[1861,67432+40])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[1861,67432+41]..[1861,67432+44])
                          Pexp_ident "env" (typing/typemod.ml[1861,67432+41]..[1861,67432+44])
                    ]
                <arg>
                Nolabel
                  expression (typing/typemod.ml[1861,67432+46]..[1861,67432+48])
                    Pexp_ident "sg" (typing/typemod.ml[1861,67432+46]..[1861,67432+48])
              ]
    ]
  structure_item (typing/typemod.ml[1865,67526+0]..[1871,67650+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[1865,67526+4]..[1865,67526+20])
          Ppat_var "anchor_submodule" (typing/typemod.ml[1865,67526+4]..[1865,67526+20])
        expression (typing/typemod.ml[1865,67526+21]..[1871,67650+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1865,67526+21]..[1865,67526+25])
            Ppat_var "name" (typing/typemod.ml[1865,67526+21]..[1865,67526+25])
          expression (typing/typemod.ml[1865,67526+26]..[1871,67650+25]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1865,67526+26]..[1865,67526+32])
              Ppat_var "anchor" (typing/typemod.ml[1865,67526+26]..[1865,67526+32])
            expression (typing/typemod.ml[1866,67561+2]..[1871,67650+25])
              Pexp_match
              expression (typing/typemod.ml[1866,67561+8]..[1866,67561+20])
                Pexp_tuple
                [
                  expression (typing/typemod.ml[1866,67561+8]..[1866,67561+14])
                    Pexp_ident "anchor" (typing/typemod.ml[1866,67561+8]..[1866,67561+14])
                  expression (typing/typemod.ml[1866,67561+16]..[1866,67561+20])
                    Pexp_ident "name" (typing/typemod.ml[1866,67561+16]..[1866,67561+20])
                ]
              [
                <case>
                  pattern (typing/typemod.ml[1867,67587+4]..[1868,67599+11])
                    Ppat_or
                    pattern (typing/typemod.ml[1867,67587+4]..[1867,67587+11])
                      Ppat_tuple
                      [
                        pattern (typing/typemod.ml[1867,67587+4]..[1867,67587+8])
                          Ppat_construct "None" (typing/typemod.ml[1867,67587+4]..[1867,67587+8])
                          None
                        pattern (typing/typemod.ml[1867,67587+10]..[1867,67587+11])
                          Ppat_any
                      ]
                    pattern (typing/typemod.ml[1868,67599+4]..[1868,67599+11])
                      Ppat_tuple
                      [
                        pattern (typing/typemod.ml[1868,67599+4]..[1868,67599+5])
                          Ppat_any
                        pattern (typing/typemod.ml[1868,67599+7]..[1868,67599+11])
                          Ppat_construct "None" (typing/typemod.ml[1868,67599+7]..[1868,67599+11])
                          None
                      ]
                  expression (typing/typemod.ml[1869,67614+6]..[1869,67614+10])
                    Pexp_construct "None" (typing/typemod.ml[1869,67614+6]..[1869,67614+10])
                    None
                <case>
                  pattern (typing/typemod.ml[1870,67625+4]..[1870,67625+21])
                    Ppat_tuple
                    [
                      pattern (typing/typemod.ml[1870,67625+4]..[1870,67625+10])
                        Ppat_construct "Some" (typing/typemod.ml[1870,67625+4]..[1870,67625+8])
                        Some
                          []
                          pattern (typing/typemod.ml[1870,67625+9]..[1870,67625+10])
                            Ppat_var "p" (typing/typemod.ml[1870,67625+9]..[1870,67625+10])
                      pattern (typing/typemod.ml[1870,67625+12]..[1870,67625+21])
                        Ppat_construct "Some" (typing/typemod.ml[1870,67625+12]..[1870,67625+16])
                        Some
                          []
                          pattern (typing/typemod.ml[1870,67625+17]..[1870,67625+21])
                            Ppat_var "name" (typing/typemod.ml[1870,67625+17]..[1870,67625+21])
                    ]
                  expression (typing/typemod.ml[1871,67650+6]..[1871,67650+25])
                    Pexp_construct "Some" (typing/typemod.ml[1871,67650+6]..[1871,67650+10])
                    Some
                      expression (typing/typemod.ml[1871,67650+10]..[1871,67650+25])
                        Pexp_construct "Pdot" (typing/typemod.ml[1871,67650+11]..[1871,67650+15])
                        Some
                          expression (typing/typemod.ml[1871,67650+15]..[1871,67650+24])
                            Pexp_tuple
                            [
                              expression (typing/typemod.ml[1871,67650+16]..[1871,67650+17])
                                Pexp_ident "p" (typing/typemod.ml[1871,67650+16]..[1871,67650+17])
                              expression (typing/typemod.ml[1871,67650+19]..[1871,67650+23])
                                Pexp_ident "name" (typing/typemod.ml[1871,67650+19]..[1871,67650+23])
                            ]
              ]
    ]
  structure_item (typing/typemod.ml[1873,67677+0]..[1873,67677+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[1873,67677+4]..[1873,67677+20])
          Ppat_var "anchor_recmodule" (typing/typemod.ml[1873,67677+4]..[1873,67677+20])
        expression (typing/typemod.ml[1873,67677+23]..[1873,67677+55])
          Pexp_apply
          expression (typing/typemod.ml[1873,67677+23]..[1873,67677+33])
            Pexp_ident "Option.map" (typing/typemod.ml[1873,67677+23]..[1873,67677+33])
          [
            <arg>
            Nolabel
              expression (typing/typemod.ml[1873,67677+34]..[1873,67677+55])
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[1873,67677+39]..[1873,67677+41])
                  Ppat_var "id" (typing/typemod.ml[1873,67677+39]..[1873,67677+41])
                expression (typing/typemod.ml[1873,67677+45]..[1873,67677+54])
                  Pexp_construct "Pident" (typing/typemod.ml[1873,67677+45]..[1873,67677+51])
                  Some
                    expression (typing/typemod.ml[1873,67677+52]..[1873,67677+54])
                      Pexp_ident "id" (typing/typemod.ml[1873,67677+52]..[1873,67677+54])
          ]
    ]
  structure_item (typing/typemod.ml[1875,67734+0]..[1887,68097+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[1875,67734+4]..[1875,67734+21])
          Ppat_var "enrich_type_decls" (typing/typemod.ml[1875,67734+4]..[1875,67734+21])
        expression (typing/typemod.ml[1875,67734+22]..[1887,68097+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1875,67734+22]..[1875,67734+28])
            Ppat_var "anchor" (typing/typemod.ml[1875,67734+22]..[1875,67734+28])
          expression (typing/typemod.ml[1875,67734+29]..[1887,68097+20]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1875,67734+29]..[1875,67734+34])
              Ppat_var "decls" (typing/typemod.ml[1875,67734+29]..[1875,67734+34])
            expression (typing/typemod.ml[1875,67734+35]..[1887,68097+20]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[1875,67734+35]..[1875,67734+41])
                Ppat_var "oldenv" (typing/typemod.ml[1875,67734+35]..[1875,67734+41])
              expression (typing/typemod.ml[1875,67734+42]..[1887,68097+20]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[1875,67734+42]..[1875,67734+48])
                  Ppat_var "newenv" (typing/typemod.ml[1875,67734+42]..[1875,67734+48])
                expression (typing/typemod.ml[1876,67785+2]..[1887,68097+20])
                  Pexp_match
                  expression (typing/typemod.ml[1876,67785+8]..[1876,67785+14])
                    Pexp_ident "anchor" (typing/typemod.ml[1876,67785+8]..[1876,67785+14])
                  [
                    <case>
                      pattern (typing/typemod.ml[1877,67805+4]..[1877,67805+8])
                        Ppat_construct "None" (typing/typemod.ml[1877,67805+4]..[1877,67805+8])
                        None
                      expression (typing/typemod.ml[1877,67805+12]..[1877,67805+18])
                        Pexp_ident "newenv" (typing/typemod.ml[1877,67805+12]..[1877,67805+18])
                    <case>
                      pattern (typing/typemod.ml[1878,67824+4]..[1878,67824+10])
                        Ppat_construct "Some" (typing/typemod.ml[1878,67824+4]..[1878,67824+8])
                        Some
                          []
                          pattern (typing/typemod.ml[1878,67824+9]..[1878,67824+10])
                            Ppat_var "p" (typing/typemod.ml[1878,67824+9]..[1878,67824+10])
                      expression (typing/typemod.ml[1879,67838+6]..[1887,68097+20])
                        Pexp_apply
                        expression (typing/typemod.ml[1879,67838+6]..[1879,67838+20])
                          Pexp_ident "List.fold_left" (typing/typemod.ml[1879,67838+6]..[1879,67838+20])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1880,67859+8]..[1886,68048+48])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typemod.ml[1880,67859+13]..[1880,67859+14])
                                Ppat_var "e" (typing/typemod.ml[1880,67859+13]..[1880,67859+14])
                              expression (typing/typemod.ml[1880,67859+15]..[1886,68048+47]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/typemod.ml[1880,67859+15]..[1880,67859+19])
                                  Ppat_var "info" (typing/typemod.ml[1880,67859+15]..[1880,67859+19])
                                expression (typing/typemod.ml[1881,67882+10]..[1886,68048+47])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typemod.ml[1881,67882+14]..[1881,67882+16])
                                        Ppat_var "id" (typing/typemod.ml[1881,67882+14]..[1881,67882+16])
                                      expression (typing/typemod.ml[1881,67882+19]..[1881,67882+30])
                                        Pexp_field
                                        expression (typing/typemod.ml[1881,67882+19]..[1881,67882+23])
                                          Pexp_ident "info" (typing/typemod.ml[1881,67882+19]..[1881,67882+23])
                                        "typ_id" (typing/typemod.ml[1881,67882+24]..[1881,67882+30])
                                  ]
                                  expression (typing/typemod.ml[1882,67916+10]..[1886,68048+47])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typemod.ml[1882,67916+14]..[1882,67916+19])
                                          Ppat_var "info'" (typing/typemod.ml[1882,67916+14]..[1882,67916+19])
                                        expression (typing/typemod.ml[1883,67938+12]..[1884,68004+30])
                                          Pexp_apply
                                          expression (typing/typemod.ml[1883,67938+12]..[1883,67938+33])
                                            Pexp_ident "Mtype.enrich_typedecl" (typing/typemod.ml[1883,67938+12]..[1883,67938+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1883,67938+34]..[1883,67938+40])
                                                Pexp_ident "oldenv" (typing/typemod.ml[1883,67938+34]..[1883,67938+40])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1883,67938+41]..[1883,67938+65])
                                                Pexp_construct "Pdot" (typing/typemod.ml[1883,67938+42]..[1883,67938+46])
                                                Some
                                                  expression (typing/typemod.ml[1883,67938+46]..[1883,67938+64])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[1883,67938+47]..[1883,67938+48])
                                                        Pexp_ident "p" (typing/typemod.ml[1883,67938+47]..[1883,67938+48])
                                                      expression (typing/typemod.ml[1883,67938+50]..[1883,67938+63])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[1883,67938+50]..[1883,67938+60])
                                                          Pexp_ident "Ident.name" (typing/typemod.ml[1883,67938+50]..[1883,67938+60])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[1883,67938+61]..[1883,67938+63])
                                                              Pexp_ident "id" (typing/typemod.ml[1883,67938+61]..[1883,67938+63])
                                                        ]
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1884,68004+14]..[1884,68004+16])
                                                Pexp_ident "id" (typing/typemod.ml[1884,68004+14]..[1884,68004+16])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1884,68004+17]..[1884,68004+30])
                                                Pexp_field
                                                expression (typing/typemod.ml[1884,68004+17]..[1884,68004+21])
                                                  Pexp_ident "info" (typing/typemod.ml[1884,68004+17]..[1884,68004+21])
                                                "typ_type" (typing/typemod.ml[1884,68004+22]..[1884,68004+30])
                                          ]
                                    ]
                                    expression (typing/typemod.ml[1886,68048+12]..[1886,68048+47])
                                      Pexp_apply
                                      expression (typing/typemod.ml[1886,68048+12]..[1886,68048+24])
                                        Pexp_ident "Env.add_type" (typing/typemod.ml[1886,68048+12]..[1886,68048+24])
                                      [
                                        <arg>
                                        Labelled "check"
                                          expression (typing/typemod.ml[1886,68048+32]..[1886,68048+36])
                                            Pexp_construct "true" (typing/typemod.ml[1886,68048+32]..[1886,68048+36])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1886,68048+37]..[1886,68048+39])
                                            Pexp_ident "id" (typing/typemod.ml[1886,68048+37]..[1886,68048+39])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1886,68048+40]..[1886,68048+45])
                                            Pexp_ident "info'" (typing/typemod.ml[1886,68048+40]..[1886,68048+45])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1886,68048+46]..[1886,68048+47])
                                            Pexp_ident "e" (typing/typemod.ml[1886,68048+46]..[1886,68048+47])
                                      ]
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1887,68097+8]..[1887,68097+14])
                              Pexp_ident "oldenv" (typing/typemod.ml[1887,68097+8]..[1887,68097+14])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1887,68097+15]..[1887,68097+20])
                              Pexp_ident "decls" (typing/typemod.ml[1887,68097+15]..[1887,68097+20])
                        ]
                  ]
    ]
  structure_item (typing/typemod.ml[1889,68119+0]..[1895,68252+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[1889,68119+4]..[1889,68119+22])
          Ppat_var "enrich_module_type" (typing/typemod.ml[1889,68119+4]..[1889,68119+22])
        expression (typing/typemod.ml[1889,68119+23]..[1895,68252+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1889,68119+23]..[1889,68119+29])
            Ppat_var "anchor" (typing/typemod.ml[1889,68119+23]..[1889,68119+29])
          expression (typing/typemod.ml[1889,68119+30]..[1895,68252+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1889,68119+30]..[1889,68119+34])
              Ppat_var "name" (typing/typemod.ml[1889,68119+30]..[1889,68119+34])
            expression (typing/typemod.ml[1889,68119+35]..[1895,68252+50]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[1889,68119+35]..[1889,68119+38])
                Ppat_var "mty" (typing/typemod.ml[1889,68119+35]..[1889,68119+38])
              expression (typing/typemod.ml[1889,68119+39]..[1895,68252+50]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[1889,68119+39]..[1889,68119+42])
                  Ppat_var "env" (typing/typemod.ml[1889,68119+39]..[1889,68119+42])
                expression (typing/typemod.ml[1890,68164+2]..[1895,68252+50])
                  Pexp_match
                  expression (typing/typemod.ml[1890,68164+8]..[1890,68164+20])
                    Pexp_tuple
                    [
                      expression (typing/typemod.ml[1890,68164+8]..[1890,68164+14])
                        Pexp_ident "anchor" (typing/typemod.ml[1890,68164+8]..[1890,68164+14])
                      expression (typing/typemod.ml[1890,68164+16]..[1890,68164+20])
                        Pexp_ident "name" (typing/typemod.ml[1890,68164+16]..[1890,68164+20])
                    ]
                  [
                    <case>
                      pattern (typing/typemod.ml[1891,68190+4]..[1892,68202+11])
                        Ppat_or
                        pattern (typing/typemod.ml[1891,68190+4]..[1891,68190+11])
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[1891,68190+4]..[1891,68190+8])
                              Ppat_construct "None" (typing/typemod.ml[1891,68190+4]..[1891,68190+8])
                              None
                            pattern (typing/typemod.ml[1891,68190+10]..[1891,68190+11])
                              Ppat_any
                          ]
                        pattern (typing/typemod.ml[1892,68202+4]..[1892,68202+11])
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[1892,68202+4]..[1892,68202+5])
                              Ppat_any
                            pattern (typing/typemod.ml[1892,68202+7]..[1892,68202+11])
                              Ppat_construct "None" (typing/typemod.ml[1892,68202+7]..[1892,68202+11])
                              None
                          ]
                      expression (typing/typemod.ml[1893,68217+6]..[1893,68217+9])
                        Pexp_ident "mty" (typing/typemod.ml[1893,68217+6]..[1893,68217+9])
                    <case>
                      pattern (typing/typemod.ml[1894,68227+4]..[1894,68227+21])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[1894,68227+4]..[1894,68227+10])
                            Ppat_construct "Some" (typing/typemod.ml[1894,68227+4]..[1894,68227+8])
                            Some
                              []
                              pattern (typing/typemod.ml[1894,68227+9]..[1894,68227+10])
                                Ppat_var "p" (typing/typemod.ml[1894,68227+9]..[1894,68227+10])
                          pattern (typing/typemod.ml[1894,68227+12]..[1894,68227+21])
                            Ppat_construct "Some" (typing/typemod.ml[1894,68227+12]..[1894,68227+16])
                            Some
                              []
                              pattern (typing/typemod.ml[1894,68227+17]..[1894,68227+21])
                                Ppat_var "name" (typing/typemod.ml[1894,68227+17]..[1894,68227+21])
                        ]
                      expression (typing/typemod.ml[1895,68252+6]..[1895,68252+50])
                        Pexp_apply
                        expression (typing/typemod.ml[1895,68252+6]..[1895,68252+26])
                          Pexp_ident "Mtype.enrich_modtype" (typing/typemod.ml[1895,68252+6]..[1895,68252+26])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1895,68252+27]..[1895,68252+30])
                              Pexp_ident "env" (typing/typemod.ml[1895,68252+27]..[1895,68252+30])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1895,68252+31]..[1895,68252+46])
                              Pexp_construct "Pdot" (typing/typemod.ml[1895,68252+32]..[1895,68252+36])
                              Some
                                expression (typing/typemod.ml[1895,68252+36]..[1895,68252+45])
                                  Pexp_tuple
                                  [
                                    expression (typing/typemod.ml[1895,68252+37]..[1895,68252+38])
                                      Pexp_ident "p" (typing/typemod.ml[1895,68252+37]..[1895,68252+38])
                                    expression (typing/typemod.ml[1895,68252+40]..[1895,68252+44])
                                      Pexp_ident "name" (typing/typemod.ml[1895,68252+40]..[1895,68252+44])
                                  ]
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[1895,68252+47]..[1895,68252+50])
                              Pexp_ident "mty" (typing/typemod.ml[1895,68252+47]..[1895,68252+50])
                        ]
                  ]
    ]
  structure_item (typing/typemod.ml[1897,68304+0]..[2000,72192+62])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[1897,68304+4]..[1897,68304+29])
          Ppat_var "check_recmodule_inclusion" (typing/typemod.ml[1897,68304+4]..[1897,68304+29])
        expression (typing/typemod.ml[1897,68304+30]..[2000,72192+62]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[1897,68304+30]..[1897,68304+33])
            Ppat_var "env" (typing/typemod.ml[1897,68304+30]..[1897,68304+33])
          expression (typing/typemod.ml[1897,68304+34]..[2000,72192+62]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[1897,68304+34]..[1897,68304+42])
              Ppat_var "bindings" (typing/typemod.ml[1897,68304+34]..[1897,68304+42])
            expression (typing/typemod.ml[1918,69265+2]..[2000,72192+62])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[1918,69265+6]..[1918,69265+26])
                    Ppat_var "subst_and_strengthen" (typing/typemod.ml[1918,69265+6]..[1918,69265+26])
                  expression (typing/typemod.ml[1918,69265+27]..[1924,69469+43]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[1918,69265+27]..[1918,69265+30])
                      Ppat_var "env" (typing/typemod.ml[1918,69265+27]..[1918,69265+30])
                    expression (typing/typemod.ml[1918,69265+31]..[1924,69469+43]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[1918,69265+31]..[1918,69265+36])
                        Ppat_var "scope" (typing/typemod.ml[1918,69265+31]..[1918,69265+36])
                      expression (typing/typemod.ml[1918,69265+37]..[1924,69469+43]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1918,69265+37]..[1918,69265+38])
                          Ppat_var "s" (typing/typemod.ml[1918,69265+37]..[1918,69265+38])
                        expression (typing/typemod.ml[1918,69265+39]..[1924,69469+43]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[1918,69265+39]..[1918,69265+41])
                            Ppat_var "id" (typing/typemod.ml[1918,69265+39]..[1918,69265+41])
                          expression (typing/typemod.ml[1918,69265+42]..[1924,69469+43]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[1918,69265+42]..[1918,69265+45])
                              Ppat_var "mty" (typing/typemod.ml[1918,69265+42]..[1918,69265+45])
                            expression (typing/typemod.ml[1919,69313+4]..[1924,69469+43])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[1919,69313+8]..[1919,69313+11])
                                    Ppat_var "mty" (typing/typemod.ml[1919,69313+8]..[1919,69313+11])
                                  expression (typing/typemod.ml[1919,69313+14]..[1919,69313+49])
                                    Pexp_apply
                                    expression (typing/typemod.ml[1919,69313+14]..[1919,69313+27])
                                      Pexp_ident "Subst.modtype" (typing/typemod.ml[1919,69313+14]..[1919,69313+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1919,69313+28]..[1919,69313+43])
                                          Pexp_construct "Rescope" (typing/typemod.ml[1919,69313+29]..[1919,69313+36])
                                          Some
                                            expression (typing/typemod.ml[1919,69313+37]..[1919,69313+42])
                                              Pexp_ident "scope" (typing/typemod.ml[1919,69313+37]..[1919,69313+42])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1919,69313+44]..[1919,69313+45])
                                          Pexp_ident "s" (typing/typemod.ml[1919,69313+44]..[1919,69313+45])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1919,69313+46]..[1919,69313+49])
                                          Pexp_ident "mty" (typing/typemod.ml[1919,69313+46]..[1919,69313+49])
                                    ]
                              ]
                              expression (typing/typemod.ml[1920,69366+4]..[1924,69469+43])
                                Pexp_match
                                expression (typing/typemod.ml[1920,69366+10]..[1920,69366+12])
                                  Pexp_ident "id" (typing/typemod.ml[1920,69366+10]..[1920,69366+12])
                                [
                                  <case>
                                    pattern (typing/typemod.ml[1921,69384+6]..[1921,69384+10])
                                      Ppat_construct "None" (typing/typemod.ml[1921,69384+6]..[1921,69384+10])
                                      None
                                    expression (typing/typemod.ml[1921,69384+14]..[1921,69384+17])
                                      Pexp_ident "mty" (typing/typemod.ml[1921,69384+14]..[1921,69384+17])
                                  <case>
                                    pattern (typing/typemod.ml[1922,69402+6]..[1922,69402+13])
                                      Ppat_construct "Some" (typing/typemod.ml[1922,69402+6]..[1922,69402+10])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[1922,69402+11]..[1922,69402+13])
                                          Ppat_var "id" (typing/typemod.ml[1922,69402+11]..[1922,69402+13])
                                    expression (typing/typemod.ml[1923,69419+8]..[1924,69469+43])
                                      Pexp_apply
                                      expression (typing/typemod.ml[1923,69419+8]..[1923,69419+24])
                                        Pexp_ident "Mtype.strengthen" (typing/typemod.ml[1923,69419+8]..[1923,69419+24])
                                      [
                                        <arg>
                                        Labelled "aliasable"
                                          expression (typing/typemod.ml[1923,69419+36]..[1923,69419+41])
                                            Pexp_construct "false" (typing/typemod.ml[1923,69419+36]..[1923,69419+41])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1923,69419+42]..[1923,69419+45])
                                            Pexp_ident "env" (typing/typemod.ml[1923,69419+42]..[1923,69419+45])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1923,69419+46]..[1923,69419+49])
                                            Pexp_ident "mty" (typing/typemod.ml[1923,69419+46]..[1923,69419+49])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1924,69469+10]..[1924,69469+43])
                                            Pexp_apply
                                            expression (typing/typemod.ml[1924,69469+11]..[1924,69469+28])
                                              Pexp_ident "Subst.module_path" (typing/typemod.ml[1924,69469+11]..[1924,69469+28])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1924,69469+29]..[1924,69469+30])
                                                  Pexp_ident "s" (typing/typemod.ml[1924,69469+29]..[1924,69469+30])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1924,69469+31]..[1924,69469+42])
                                                  Pexp_construct "Pident" (typing/typemod.ml[1924,69469+32]..[1924,69469+38])
                                                  Some
                                                    expression (typing/typemod.ml[1924,69469+39]..[1924,69469+41])
                                                      Pexp_ident "id" (typing/typemod.ml[1924,69469+39]..[1924,69469+41])
                                            ]
                                      ]
                                ]
              ]
              expression (typing/typemod.ml[1927,69519+2]..[2000,72192+62])
                Pexp_let Rec
                [
                  <def>
                    pattern (typing/typemod.ml[1927,69519+10]..[1927,69519+20])
                      Ppat_var "check_incl" (typing/typemod.ml[1927,69519+10]..[1927,69519+20])
                    expression (typing/typemod.ml[1927,69519+21]..[1999,72184+7]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[1927,69519+21]..[1927,69519+31])
                        Ppat_var "first_time" (typing/typemod.ml[1927,69519+21]..[1927,69519+31])
                      expression (typing/typemod.ml[1927,69519+32]..[1999,72184+7]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[1927,69519+32]..[1927,69519+33])
                          Ppat_var "n" (typing/typemod.ml[1927,69519+32]..[1927,69519+33])
                        expression (typing/typemod.ml[1927,69519+34]..[1999,72184+7]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[1927,69519+34]..[1927,69519+37])
                            Ppat_var "env" (typing/typemod.ml[1927,69519+34]..[1927,69519+37])
                          expression (typing/typemod.ml[1927,69519+38]..[1999,72184+7]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[1927,69519+38]..[1927,69519+39])
                              Ppat_var "s" (typing/typemod.ml[1927,69519+38]..[1927,69519+39])
                            expression (typing/typemod.ml[1928,69561+4]..[1999,72184+7])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[1928,69561+8]..[1928,69561+13])
                                    Ppat_var "scope" (typing/typemod.ml[1928,69561+8]..[1928,69561+13])
                                  expression (typing/typemod.ml[1928,69561+16]..[1928,69561+37])
                                    Pexp_apply
                                    expression (typing/typemod.ml[1928,69561+16]..[1928,69561+34])
                                      Pexp_ident "Ctype.create_scope" (typing/typemod.ml[1928,69561+16]..[1928,69561+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[1928,69561+35]..[1928,69561+37])
                                          Pexp_construct "()" (typing/typemod.ml[1928,69561+35]..[1928,69561+37])
                                          None
                                    ]
                              ]
                              expression (typing/typemod.ml[1929,69602+4]..[1999,72184+7])
                                Pexp_ifthenelse
                                expression (typing/typemod.ml[1929,69602+7]..[1929,69602+12])
                                  Pexp_apply
                                  expression (typing/typemod.ml[1929,69602+9]..[1929,69602+10])
                                    Pexp_ident ">" (typing/typemod.ml[1929,69602+9]..[1929,69602+10])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1929,69602+7]..[1929,69602+8])
                                        Pexp_ident "n" (typing/typemod.ml[1929,69602+7]..[1929,69602+8])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[1929,69602+11]..[1929,69602+12])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                                expression (typing/typemod.ml[1929,69602+18]..[1965,70960+7])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typemod.ml[1931,69700+10]..[1931,69700+19])
                                        Ppat_var "bindings1" (typing/typemod.ml[1931,69700+10]..[1931,69700+19])
                                      expression (typing/typemod.ml[1932,69722+8]..[1939,69997+18])
                                        Pexp_apply
                                        expression (typing/typemod.ml[1932,69722+8]..[1932,69722+16])
                                          Pexp_ident "List.map" (typing/typemod.ml[1932,69722+8]..[1932,69722+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1933,69739+10]..[1938,69965+31])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (typing/typemod.ml[1933,69739+15]..[1933,69739+76])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/typemod.ml[1933,69739+16]..[1933,69739+18])
                                                    Ppat_var "id" (typing/typemod.ml[1933,69739+16]..[1933,69739+18])
                                                  pattern (typing/typemod.ml[1933,69739+20]..[1933,69739+25])
                                                    Ppat_var "_name" (typing/typemod.ml[1933,69739+20]..[1933,69739+25])
                                                  pattern (typing/typemod.ml[1933,69739+27]..[1933,69739+36])
                                                    Ppat_var "_mty_decl" (typing/typemod.ml[1933,69739+27]..[1933,69739+36])
                                                  pattern (typing/typemod.ml[1933,69739+38]..[1933,69739+43])
                                                    Ppat_var "_modl" (typing/typemod.ml[1933,69739+38]..[1933,69739+43])
                                                  pattern (typing/typemod.ml[1933,69739+45]..[1933,69739+55])
                                                    Ppat_var "mty_actual" (typing/typemod.ml[1933,69739+45]..[1933,69739+55])
                                                  pattern (typing/typemod.ml[1933,69739+57]..[1933,69739+63])
                                                    Ppat_var "_attrs" (typing/typemod.ml[1933,69739+57]..[1933,69739+63])
                                                  pattern (typing/typemod.ml[1933,69739+65]..[1933,69739+69])
                                                    Ppat_var "_loc" (typing/typemod.ml[1933,69739+65]..[1933,69739+69])
                                                  pattern (typing/typemod.ml[1933,69739+71]..[1933,69739+75])
                                                    Ppat_var "_uid" (typing/typemod.ml[1933,69739+71]..[1933,69739+75])
                                                ]
                                              expression (typing/typemod.ml[1934,69819+13]..[1938,69965+30])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typemod.ml[1934,69819+17]..[1934,69819+20])
                                                      Ppat_var "ids" (typing/typemod.ml[1934,69819+17]..[1934,69819+20])
                                                    expression (typing/typemod.ml[1935,69842+15]..[1936,69868+80])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[1935,69842+15]..[1935,69842+25])
                                                        Pexp_ident "Option.map" (typing/typemod.ml[1935,69842+15]..[1935,69842+25])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1936,69868+17]..[1936,69868+77])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/typemod.ml[1936,69868+22]..[1936,69868+24])
                                                              Ppat_var "id" (typing/typemod.ml[1936,69868+22]..[1936,69868+24])
                                                            expression (typing/typemod.ml[1936,69868+28]..[1936,69868+76])
                                                              Pexp_tuple
                                                              [
                                                                expression (typing/typemod.ml[1936,69868+29]..[1936,69868+31])
                                                                  Pexp_ident "id" (typing/typemod.ml[1936,69868+29]..[1936,69868+31])
                                                                expression (typing/typemod.ml[1936,69868+33]..[1936,69868+75])
                                                                  Pexp_apply
                                                                  expression (typing/typemod.ml[1936,69868+33]..[1936,69868+52])
                                                                    Pexp_ident "Ident.create_scoped" (typing/typemod.ml[1936,69868+33]..[1936,69868+52])
                                                                  [
                                                                    <arg>
                                                                    Labelled "scope"
                                                                      expression (typing/typemod.ml[1936,69868+54]..[1936,69868+59])
Pexp_ident "scope" (typing/typemod.ml[1936,69868+54]..[1936,69868+59])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[1936,69868+60]..[1936,69868+75])
Pexp_apply
expression (typing/typemod.ml[1936,69868+61]..[1936,69868+71])
  Pexp_ident "Ident.name" (typing/typemod.ml[1936,69868+61]..[1936,69868+71])
[
  <arg>
  Nolabel
    expression (typing/typemod.ml[1936,69868+72]..[1936,69868+74])
      Pexp_ident "id" (typing/typemod.ml[1936,69868+72]..[1936,69868+74])
]
                                                                  ]
                                                              ]
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1936,69868+78]..[1936,69868+80])
                                                            Pexp_ident "id" (typing/typemod.ml[1936,69868+78]..[1936,69868+80])
                                                      ]
                                                ]
                                                expression (typing/typemod.ml[1938,69965+13]..[1938,69965+30])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typemod.ml[1938,69965+14]..[1938,69965+17])
                                                      Pexp_ident "ids" (typing/typemod.ml[1938,69965+14]..[1938,69965+17])
                                                    expression (typing/typemod.ml[1938,69965+19]..[1938,69965+29])
                                                      Pexp_ident "mty_actual" (typing/typemod.ml[1938,69965+19]..[1938,69965+29])
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1939,69997+10]..[1939,69997+18])
                                              Pexp_ident "bindings" (typing/typemod.ml[1939,69997+10]..[1939,69997+18])
                                        ]
                                  ]
                                  expression (typing/typemod.ml[1942,70137+6]..[1964,70923+36])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typemod.ml[1942,70137+10]..[1942,70137+14])
                                          Ppat_var "env'" (typing/typemod.ml[1942,70137+10]..[1942,70137+14])
                                        expression (typing/typemod.ml[1943,70154+8]..[1954,70569+23])
                                          Pexp_apply
                                          expression (typing/typemod.ml[1943,70154+8]..[1943,70154+22])
                                            Pexp_ident "List.fold_left" (typing/typemod.ml[1943,70154+8]..[1943,70154+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1944,70177+10]..[1953,70496+72])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/typemod.ml[1944,70177+15]..[1944,70177+18])
                                                  Ppat_var "env" (typing/typemod.ml[1944,70177+15]..[1944,70177+18])
                                                expression (typing/typemod.ml[1944,70177+19]..[1953,70496+71]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/typemod.ml[1944,70177+19]..[1944,70177+36])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/typemod.ml[1944,70177+20]..[1944,70177+23])
                                                        Ppat_var "ids" (typing/typemod.ml[1944,70177+20]..[1944,70177+23])
                                                      pattern (typing/typemod.ml[1944,70177+25]..[1944,70177+35])
                                                        Ppat_var "mty_actual" (typing/typemod.ml[1944,70177+25]..[1944,70177+35])
                                                    ]
                                                  expression (typing/typemod.ml[1945,70217+13]..[1953,70496+71])
                                                    Pexp_match
                                                    expression (typing/typemod.ml[1945,70217+19]..[1945,70217+22])
                                                      Pexp_ident "ids" (typing/typemod.ml[1945,70217+19]..[1945,70217+22])
                                                    [
                                                      <case>
                                                        pattern (typing/typemod.ml[1946,70245+15]..[1946,70245+19])
                                                          Ppat_construct "None" (typing/typemod.ml[1946,70245+15]..[1946,70245+19])
                                                          None
                                                        expression (typing/typemod.ml[1946,70245+23]..[1946,70245+26])
                                                          Pexp_ident "env" (typing/typemod.ml[1946,70245+23]..[1946,70245+26])
                                                      <case>
                                                        pattern (typing/typemod.ml[1947,70272+15]..[1947,70272+29])
                                                          Ppat_construct "Some" (typing/typemod.ml[1947,70272+15]..[1947,70272+19])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[1947,70272+20]..[1947,70272+29])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[1947,70272+21]..[1947,70272+23])
                                                                  Ppat_var "id" (typing/typemod.ml[1947,70272+21]..[1947,70272+23])
                                                                pattern (typing/typemod.ml[1947,70272+25]..[1947,70272+28])
                                                                  Ppat_var "id'" (typing/typemod.ml[1947,70272+25]..[1947,70272+28])
                                                              ]
                                                        expression (typing/typemod.ml[1948,70305+15]..[1953,70496+71])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (typing/typemod.ml[1948,70305+19]..[1948,70305+30])
                                                                Ppat_var "mty_actual'" (typing/typemod.ml[1948,70305+19]..[1948,70305+30])
                                                              expression (typing/typemod.ml[1949,70338+17]..[1951,70402+75])
                                                                Pexp_ifthenelse
                                                                expression (typing/typemod.ml[1949,70338+20]..[1949,70338+30])
                                                                  Pexp_ident "first_time" (typing/typemod.ml[1949,70338+20]..[1949,70338+30])
                                                                expression (typing/typemod.ml[1950,70369+22]..[1950,70369+32])
                                                                  Pexp_ident "mty_actual" (typing/typemod.ml[1950,70369+22]..[1950,70369+32])
                                                                Some
                                                                  expression (typing/typemod.ml[1951,70402+22]..[1951,70402+75])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[1951,70402+22]..[1951,70402+42])
                                                                      Pexp_ident "subst_and_strengthen" (typing/typemod.ml[1951,70402+22]..[1951,70402+42])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[1951,70402+43]..[1951,70402+46])
  Pexp_ident "env" (typing/typemod.ml[1951,70402+43]..[1951,70402+46])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[1951,70402+47]..[1951,70402+52])
  Pexp_ident "scope" (typing/typemod.ml[1951,70402+47]..[1951,70402+52])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[1951,70402+53]..[1951,70402+54])
  Pexp_ident "s" (typing/typemod.ml[1951,70402+53]..[1951,70402+54])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[1951,70402+55]..[1951,70402+64])
  Pexp_construct "Some" (typing/typemod.ml[1951,70402+56]..[1951,70402+60])
  Some
    expression (typing/typemod.ml[1951,70402+61]..[1951,70402+63])
      Pexp_ident "id" (typing/typemod.ml[1951,70402+61]..[1951,70402+63])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[1951,70402+65]..[1951,70402+75])
  Pexp_ident "mty_actual" (typing/typemod.ml[1951,70402+65]..[1951,70402+75])
                                                                    ]
                                                          ]
                                                          expression (typing/typemod.ml[1953,70496+15]..[1953,70496+71])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1953,70496+15]..[1953,70496+29])
                                                              Pexp_ident "Env.add_module" (typing/typemod.ml[1953,70496+15]..[1953,70496+29])
                                                            [
                                                              <arg>
                                                              Labelled "arg"
                                                                expression (typing/typemod.ml[1953,70496+35]..[1953,70496+40])
                                                                  Pexp_construct "false" (typing/typemod.ml[1953,70496+35]..[1953,70496+40])
                                                                  None
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1953,70496+41]..[1953,70496+44])
                                                                  Pexp_ident "id'" (typing/typemod.ml[1953,70496+41]..[1953,70496+44])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1953,70496+45]..[1953,70496+55])
                                                                  Pexp_construct "Mp_present" (typing/typemod.ml[1953,70496+45]..[1953,70496+55])
                                                                  None
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1953,70496+56]..[1953,70496+67])
                                                                  Pexp_ident "mty_actual'" (typing/typemod.ml[1953,70496+56]..[1953,70496+67])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1953,70496+68]..[1953,70496+71])
                                                                  Pexp_ident "env" (typing/typemod.ml[1953,70496+68]..[1953,70496+71])
                                                            ]
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1954,70569+10]..[1954,70569+13])
                                                Pexp_ident "env" (typing/typemod.ml[1954,70569+10]..[1954,70569+13])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[1954,70569+14]..[1954,70569+23])
                                                Pexp_ident "bindings1" (typing/typemod.ml[1954,70569+14]..[1954,70569+23])
                                          ]
                                    ]
                                    expression (typing/typemod.ml[1956,70649+6]..[1964,70923+36])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[1956,70649+10]..[1956,70649+12])
                                            Ppat_var "s'" (typing/typemod.ml[1956,70649+10]..[1956,70649+12])
                                          expression (typing/typemod.ml[1957,70664+8]..[1962,70848+34])
                                            Pexp_apply
                                            expression (typing/typemod.ml[1957,70664+8]..[1957,70664+22])
                                              Pexp_ident "List.fold_left" (typing/typemod.ml[1957,70664+8]..[1957,70664+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1958,70687+10]..[1961,70779+68])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/typemod.ml[1958,70687+15]..[1958,70687+16])
                                                    Ppat_var "s" (typing/typemod.ml[1958,70687+15]..[1958,70687+16])
                                                  expression (typing/typemod.ml[1958,70687+17]..[1961,70779+67]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (typing/typemod.ml[1958,70687+17]..[1958,70687+35])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typemod.ml[1958,70687+18]..[1958,70687+21])
                                                          Ppat_var "ids" (typing/typemod.ml[1958,70687+18]..[1958,70687+21])
                                                        pattern (typing/typemod.ml[1958,70687+23]..[1958,70687+34])
                                                          Ppat_var "_mty_actual" (typing/typemod.ml[1958,70687+23]..[1958,70687+34])
                                                      ]
                                                    expression (typing/typemod.ml[1959,70726+13]..[1961,70779+67])
                                                      Pexp_match
                                                      expression (typing/typemod.ml[1959,70726+19]..[1959,70726+22])
                                                        Pexp_ident "ids" (typing/typemod.ml[1959,70726+19]..[1959,70726+22])
                                                      [
                                                        <case>
                                                          pattern (typing/typemod.ml[1960,70754+15]..[1960,70754+19])
                                                            Ppat_construct "None" (typing/typemod.ml[1960,70754+15]..[1960,70754+19])
                                                            None
                                                          expression (typing/typemod.ml[1960,70754+23]..[1960,70754+24])
                                                            Pexp_ident "s" (typing/typemod.ml[1960,70754+23]..[1960,70754+24])
                                                        <case>
                                                          pattern (typing/typemod.ml[1961,70779+15]..[1961,70779+29])
                                                            Ppat_construct "Some" (typing/typemod.ml[1961,70779+15]..[1961,70779+19])
                                                            Some
                                                              []
                                                              pattern (typing/typemod.ml[1961,70779+20]..[1961,70779+29])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/typemod.ml[1961,70779+21]..[1961,70779+23])
                                                                    Ppat_var "id" (typing/typemod.ml[1961,70779+21]..[1961,70779+23])
                                                                  pattern (typing/typemod.ml[1961,70779+25]..[1961,70779+28])
                                                                    Ppat_var "id'" (typing/typemod.ml[1961,70779+25]..[1961,70779+28])
                                                                ]
                                                          expression (typing/typemod.ml[1961,70779+33]..[1961,70779+67])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[1961,70779+33]..[1961,70779+49])
                                                              Pexp_ident "Subst.add_module" (typing/typemod.ml[1961,70779+33]..[1961,70779+49])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1961,70779+50]..[1961,70779+52])
                                                                  Pexp_ident "id" (typing/typemod.ml[1961,70779+50]..[1961,70779+52])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1961,70779+53]..[1961,70779+65])
                                                                  Pexp_construct "Pident" (typing/typemod.ml[1961,70779+54]..[1961,70779+60])
                                                                  Some
                                                                    expression (typing/typemod.ml[1961,70779+61]..[1961,70779+64])
                                                                      Pexp_ident "id'" (typing/typemod.ml[1961,70779+61]..[1961,70779+64])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[1961,70779+66]..[1961,70779+67])
                                                                  Pexp_ident "s" (typing/typemod.ml[1961,70779+66]..[1961,70779+67])
                                                            ]
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1962,70848+10]..[1962,70848+24])
                                                  Pexp_ident "Subst.identity" (typing/typemod.ml[1962,70848+10]..[1962,70848+24])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[1962,70848+25]..[1962,70848+34])
                                                  Pexp_ident "bindings1" (typing/typemod.ml[1962,70848+25]..[1962,70848+34])
                                            ]
                                      ]
                                      expression (typing/typemod.ml[1964,70923+6]..[1964,70923+36])
                                        Pexp_apply
                                        expression (typing/typemod.ml[1964,70923+6]..[1964,70923+16])
                                          Pexp_ident "check_incl" (typing/typemod.ml[1964,70923+6]..[1964,70923+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1964,70923+17]..[1964,70923+22])
                                              Pexp_construct "false" (typing/typemod.ml[1964,70923+17]..[1964,70923+22])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1964,70923+23]..[1964,70923+28])
                                              Pexp_apply
                                              expression (typing/typemod.ml[1964,70923+25]..[1964,70923+26])
                                                Pexp_ident "-" (typing/typemod.ml[1964,70923+25]..[1964,70923+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1964,70923+24]..[1964,70923+25])
                                                    Pexp_ident "n" (typing/typemod.ml[1964,70923+24]..[1964,70923+25])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[1964,70923+26]..[1964,70923+27])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1964,70923+29]..[1964,70923+33])
                                              Pexp_ident "env'" (typing/typemod.ml[1964,70923+29]..[1964,70923+33])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[1964,70923+34]..[1964,70923+36])
                                              Pexp_ident "s'" (typing/typemod.ml[1964,70923+34]..[1964,70923+36])
                                        ]
                                Some
                                  expression (typing/typemod.ml[1965,70960+13]..[1999,72184+7])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typemod.ml[1968,71089+10]..[1968,71089+25])
                                          Ppat_var "check_inclusion" (typing/typemod.ml[1968,71089+10]..[1968,71089+25])
                                        expression (typing/typemod.ml[1969,71115+12]..[1996,72119+15]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/typemod.ml[1969,71115+12]..[1969,71115+67])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[1969,71115+13]..[1969,71115+15])
                                                Ppat_var "id" (typing/typemod.ml[1969,71115+13]..[1969,71115+15])
                                              pattern (typing/typemod.ml[1969,71115+17]..[1969,71115+21])
                                                Ppat_var "name" (typing/typemod.ml[1969,71115+17]..[1969,71115+21])
                                              pattern (typing/typemod.ml[1969,71115+23]..[1969,71115+31])
                                                Ppat_var "mty_decl" (typing/typemod.ml[1969,71115+23]..[1969,71115+31])
                                              pattern (typing/typemod.ml[1969,71115+33]..[1969,71115+37])
                                                Ppat_var "modl" (typing/typemod.ml[1969,71115+33]..[1969,71115+37])
                                              pattern (typing/typemod.ml[1969,71115+39]..[1969,71115+49])
                                                Ppat_var "mty_actual" (typing/typemod.ml[1969,71115+39]..[1969,71115+49])
                                              pattern (typing/typemod.ml[1969,71115+51]..[1969,71115+56])
                                                Ppat_var "attrs" (typing/typemod.ml[1969,71115+51]..[1969,71115+56])
                                              pattern (typing/typemod.ml[1969,71115+58]..[1969,71115+61])
                                                Ppat_var "loc" (typing/typemod.ml[1969,71115+58]..[1969,71115+61])
                                              pattern (typing/typemod.ml[1969,71115+63]..[1969,71115+66])
                                                Ppat_var "uid" (typing/typemod.ml[1969,71115+63]..[1969,71115+66])
                                            ]
                                          expression (typing/typemod.ml[1970,71185+8]..[1996,72119+15])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[1970,71185+12]..[1970,71185+21])
                                                  Ppat_var "mty_decl'" (typing/typemod.ml[1970,71185+12]..[1970,71185+21])
                                                expression (typing/typemod.ml[1970,71185+24]..[1970,71185+73])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[1970,71185+24]..[1970,71185+37])
                                                    Pexp_ident "Subst.modtype" (typing/typemod.ml[1970,71185+24]..[1970,71185+37])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1970,71185+38]..[1970,71185+53])
                                                        Pexp_construct "Rescope" (typing/typemod.ml[1970,71185+39]..[1970,71185+46])
                                                        Some
                                                          expression (typing/typemod.ml[1970,71185+47]..[1970,71185+52])
                                                            Pexp_ident "scope" (typing/typemod.ml[1970,71185+47]..[1970,71185+52])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1970,71185+54]..[1970,71185+55])
                                                        Pexp_ident "s" (typing/typemod.ml[1970,71185+54]..[1970,71185+55])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1970,71185+56]..[1970,71185+73])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[1970,71185+56]..[1970,71185+64])
                                                          Pexp_ident "mty_decl" (typing/typemod.ml[1970,71185+56]..[1970,71185+64])
                                                        "mty_type" (typing/typemod.ml[1970,71185+65]..[1970,71185+73])
                                                  ]
                                              <def>
                                                pattern (typing/typemod.ml[1971,71259+12]..[1971,71259+23])
                                                  Ppat_var "mty_actual'" (typing/typemod.ml[1971,71259+12]..[1971,71259+23])
                                                expression (typing/typemod.ml[1971,71259+26]..[1971,71259+72])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[1971,71259+26]..[1971,71259+46])
                                                    Pexp_ident "subst_and_strengthen" (typing/typemod.ml[1971,71259+26]..[1971,71259+46])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1971,71259+47]..[1971,71259+50])
                                                        Pexp_ident "env" (typing/typemod.ml[1971,71259+47]..[1971,71259+50])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1971,71259+51]..[1971,71259+56])
                                                        Pexp_ident "scope" (typing/typemod.ml[1971,71259+51]..[1971,71259+56])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1971,71259+57]..[1971,71259+58])
                                                        Pexp_ident "s" (typing/typemod.ml[1971,71259+57]..[1971,71259+58])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1971,71259+59]..[1971,71259+61])
                                                        Pexp_ident "id" (typing/typemod.ml[1971,71259+59]..[1971,71259+61])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[1971,71259+62]..[1971,71259+72])
                                                        Pexp_ident "mty_actual" (typing/typemod.ml[1971,71259+62]..[1971,71259+72])
                                                  ]
                                            ]
                                            expression (typing/typemod.ml[1972,71335+8]..[1996,72119+15])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typemod.ml[1972,71335+12]..[1972,71335+20])
                                                    Ppat_var "coercion" (typing/typemod.ml[1972,71335+12]..[1972,71335+20])
                                                  expression (typing/typemod.ml[1973,71358+10]..[1977,71517+61])
                                                    Pexp_try
                                                    expression (typing/typemod.ml[1974,71372+12]..[1975,71442+35])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[1974,71372+12]..[1974,71372+31])
                                                        Pexp_ident "Includemod.modtypes" (typing/typemod.ml[1974,71372+12]..[1974,71372+31])
                                                      [
                                                        <arg>
                                                        Labelled "loc"
                                                          expression (typing/typemod.ml[1974,71372+37]..[1974,71372+49])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[1974,71372+37]..[1974,71372+41])
                                                              Pexp_ident "modl" (typing/typemod.ml[1974,71372+37]..[1974,71372+41])
                                                            "mod_loc" (typing/typemod.ml[1974,71372+42]..[1974,71372+49])
                                                        <arg>
                                                        Labelled "mark"
                                                          expression (typing/typemod.ml[1974,71372+56]..[1974,71372+65])
                                                            Pexp_construct "Mark_both" (typing/typemod.ml[1974,71372+56]..[1974,71372+65])
                                                            None
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1974,71372+66]..[1974,71372+69])
                                                            Pexp_ident "env" (typing/typemod.ml[1974,71372+66]..[1974,71372+69])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1975,71442+14]..[1975,71442+25])
                                                            Pexp_ident "mty_actual'" (typing/typemod.ml[1975,71442+14]..[1975,71442+25])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[1975,71442+26]..[1975,71442+35])
                                                            Pexp_ident "mty_decl'" (typing/typemod.ml[1975,71442+26]..[1975,71442+35])
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (typing/typemod.ml[1976,71478+15]..[1976,71478+35])
                                                          Ppat_construct "Includemod.Error" (typing/typemod.ml[1976,71478+15]..[1976,71478+31])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[1976,71478+32]..[1976,71478+35])
                                                              Ppat_var "msg" (typing/typemod.ml[1976,71478+32]..[1976,71478+35])
                                                        expression (typing/typemod.ml[1977,71517+12]..[1977,71517+61])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[1977,71517+12]..[1977,71517+17])
                                                            Pexp_ident "raise" (typing/typemod.ml[1977,71517+12]..[1977,71517+17])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[1977,71517+17]..[1977,71517+61])
                                                                Pexp_construct "Error" (typing/typemod.ml[1977,71517+18]..[1977,71517+23])
                                                                Some
                                                                  expression (typing/typemod.ml[1977,71517+23]..[1977,71517+60])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typemod.ml[1977,71517+24]..[1977,71517+36])
Pexp_field
expression (typing/typemod.ml[1977,71517+24]..[1977,71517+28])
  Pexp_ident "modl" (typing/typemod.ml[1977,71517+24]..[1977,71517+28])
"mod_loc" (typing/typemod.ml[1977,71517+29]..[1977,71517+36])
                                                                      expression (typing/typemod.ml[1977,71517+38]..[1977,71517+41])
Pexp_ident "env" (typing/typemod.ml[1977,71517+38]..[1977,71517+41])
                                                                      expression (typing/typemod.ml[1977,71517+43]..[1977,71517+59])
Pexp_construct "Not_included" (typing/typemod.ml[1977,71517+43]..[1977,71517+55])
Some
  expression (typing/typemod.ml[1977,71517+56]..[1977,71517+59])
    Pexp_ident "msg" (typing/typemod.ml[1977,71517+56]..[1977,71517+59])
                                                                    ]
                                                          ]
                                                    ]
                                              ]
                                              expression (typing/typemod.ml[1978,71582+8]..[1996,72119+15])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typemod.ml[1978,71582+12]..[1978,71582+17])
                                                      Ppat_var "modl'" (typing/typemod.ml[1978,71582+12]..[1978,71582+17])
                                                    expression (typing/typemod.ml[1979,71602+12]..[1985,71869+14])
                                                      Pexp_record
                                                      [
                                                        "mod_desc" (typing/typemod.ml[1979,71602+14]..[1979,71602+22])
                                                          expression (typing/typemod.ml[1979,71602+25]..[1980,71668+53])
                                                            Pexp_construct "Tmod_constraint" (typing/typemod.ml[1979,71602+25]..[1979,71602+40])
                                                            Some
                                                              expression (typing/typemod.ml[1979,71602+40]..[1980,71668+53])
                                                                Pexp_tuple
                                                                [
                                                                  expression (typing/typemod.ml[1979,71602+41]..[1979,71602+45])
                                                                    Pexp_ident "modl" (typing/typemod.ml[1979,71602+41]..[1979,71602+45])
                                                                  expression (typing/typemod.ml[1979,71602+47]..[1979,71602+64])
                                                                    Pexp_field
                                                                    expression (typing/typemod.ml[1979,71602+47]..[1979,71602+55])
                                                                      Pexp_ident "mty_decl" (typing/typemod.ml[1979,71602+47]..[1979,71602+55])
                                                                    "mty_type" (typing/typemod.ml[1979,71602+56]..[1979,71602+64])
                                                                  expression (typing/typemod.ml[1980,71668+16]..[1980,71668+42])
                                                                    Pexp_construct "Tmodtype_explicit" (typing/typemod.ml[1980,71668+16]..[1980,71668+33])
                                                                    Some
                                                                      expression (typing/typemod.ml[1980,71668+34]..[1980,71668+42])
Pexp_ident "mty_decl" (typing/typemod.ml[1980,71668+34]..[1980,71668+42])
                                                                  expression (typing/typemod.ml[1980,71668+44]..[1980,71668+52])
                                                                    Pexp_ident "coercion" (typing/typemod.ml[1980,71668+44]..[1980,71668+52])
                                                                ]
                                                        "mod_type" (typing/typemod.ml[1981,71723+14]..[1981,71723+22])
                                                          expression (typing/typemod.ml[1981,71723+25]..[1981,71723+42])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[1981,71723+25]..[1981,71723+33])
                                                              Pexp_ident "mty_decl" (typing/typemod.ml[1981,71723+25]..[1981,71723+33])
                                                            "mty_type" (typing/typemod.ml[1981,71723+34]..[1981,71723+42])
                                                        "mod_env" (typing/typemod.ml[1982,71767+14]..[1982,71767+21])
                                                          expression (typing/typemod.ml[1982,71767+24]..[1982,71767+27])
                                                            Pexp_ident "env" (typing/typemod.ml[1982,71767+24]..[1982,71767+27])
                                                        "mod_loc" (typing/typemod.ml[1983,71796+14]..[1983,71796+21])
                                                          expression (typing/typemod.ml[1983,71796+24]..[1983,71796+36])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[1983,71796+24]..[1983,71796+28])
                                                              Pexp_ident "modl" (typing/typemod.ml[1983,71796+24]..[1983,71796+28])
                                                            "mod_loc" (typing/typemod.ml[1983,71796+29]..[1983,71796+36])
                                                        "mod_attributes" (typing/typemod.ml[1984,71834+14]..[1984,71834+28])
                                                          expression (typing/typemod.ml[1984,71834+31]..[1984,71834+33])
                                                            Pexp_construct "[]" (typing/typemod.ml[1984,71834+31]..[1984,71834+33])
                                                            None
                                                      ]
                                                      None
                                                ]
                                                expression (typing/typemod.ml[1986,71887+8]..[1996,72119+15])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typemod.ml[1986,71887+12]..[1986,71887+14])
                                                        Ppat_var "mb" (typing/typemod.ml[1986,71887+12]..[1986,71887+14])
                                                      expression (typing/typemod.ml[1987,71904+10]..[1994,72096+11])
                                                        Pexp_record
                                                        [
                                                          "mb_id" (typing/typemod.ml[1988,71916+12]..[1988,71916+17])
                                                            expression (typing/typemod.ml[1988,71916+20]..[1988,71916+22])
                                                              Pexp_ident "id" (typing/typemod.ml[1988,71916+20]..[1988,71916+22])
                                                          "mb_name" (typing/typemod.ml[1989,71940+12]..[1989,71940+19])
                                                            expression (typing/typemod.ml[1989,71940+22]..[1989,71940+26])
                                                              Pexp_ident "name" (typing/typemod.ml[1989,71940+22]..[1989,71940+26])
                                                          "mb_presence" (typing/typemod.ml[1990,71968+12]..[1990,71968+23])
                                                            expression (typing/typemod.ml[1990,71968+26]..[1990,71968+36])
                                                              Pexp_construct "Mp_present" (typing/typemod.ml[1990,71968+26]..[1990,71968+36])
                                                              None
                                                          "mb_expr" (typing/typemod.ml[1991,72006+12]..[1991,72006+19])
                                                            expression (typing/typemod.ml[1991,72006+22]..[1991,72006+27])
                                                              Pexp_ident "modl'" (typing/typemod.ml[1991,72006+22]..[1991,72006+27])
                                                          "mb_attributes" (typing/typemod.ml[1992,72035+12]..[1992,72035+25])
                                                            expression (typing/typemod.ml[1992,72035+28]..[1992,72035+33])
                                                              Pexp_ident "attrs" (typing/typemod.ml[1992,72035+28]..[1992,72035+33])
                                                          "mb_loc" (typing/typemod.ml[1993,72070+12]..[1993,72070+18])
                                                            expression (typing/typemod.ml[1993,72070+21]..[1993,72070+24])
                                                              Pexp_ident "loc" (typing/typemod.ml[1993,72070+21]..[1993,72070+24])
                                                        ]
                                                        None
                                                  ]
                                                  expression (typing/typemod.ml[1996,72119+8]..[1996,72119+15])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[1996,72119+8]..[1996,72119+10])
                                                        Pexp_ident "mb" (typing/typemod.ml[1996,72119+8]..[1996,72119+10])
                                                      expression (typing/typemod.ml[1996,72119+12]..[1996,72119+15])
                                                        Pexp_ident "uid" (typing/typemod.ml[1996,72119+12]..[1996,72119+15])
                                                    ]
                                    ]
                                    expression (typing/typemod.ml[1998,72144+6]..[1998,72144+39])
                                      Pexp_apply
                                      expression (typing/typemod.ml[1998,72144+6]..[1998,72144+14])
                                        Pexp_ident "List.map" (typing/typemod.ml[1998,72144+6]..[1998,72144+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1998,72144+15]..[1998,72144+30])
                                            Pexp_ident "check_inclusion" (typing/typemod.ml[1998,72144+15]..[1998,72144+30])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[1998,72144+31]..[1998,72144+39])
                                            Pexp_ident "bindings" (typing/typemod.ml[1998,72144+31]..[1998,72144+39])
                                      ]
                ]
                expression (typing/typemod.ml[2000,72192+5]..[2000,72192+62])
                  Pexp_apply
                  expression (typing/typemod.ml[2000,72192+5]..[2000,72192+15])
                    Pexp_ident "check_incl" (typing/typemod.ml[2000,72192+5]..[2000,72192+15])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2000,72192+16]..[2000,72192+20])
                        Pexp_construct "true" (typing/typemod.ml[2000,72192+16]..[2000,72192+20])
                        None
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2000,72192+21]..[2000,72192+43])
                        Pexp_apply
                        expression (typing/typemod.ml[2000,72192+22]..[2000,72192+33])
                          Pexp_ident "List.length" (typing/typemod.ml[2000,72192+22]..[2000,72192+33])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[2000,72192+34]..[2000,72192+42])
                              Pexp_ident "bindings" (typing/typemod.ml[2000,72192+34]..[2000,72192+42])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2000,72192+44]..[2000,72192+47])
                        Pexp_ident "env" (typing/typemod.ml[2000,72192+44]..[2000,72192+47])
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2000,72192+48]..[2000,72192+62])
                        Pexp_ident "Subst.identity" (typing/typemod.ml[2000,72192+48]..[2000,72192+62])
                  ]
    ]
  structure_item (typing/typemod.ml[2004,72281+0]..[2036,73422+5])
    Pstr_value Rec
    [
      <def>
        pattern (typing/typemod.ml[2004,72281+8]..[2004,72281+31])
          Ppat_var "package_constraints_sig" (typing/typemod.ml[2004,72281+8]..[2004,72281+31])
        expression (typing/typemod.ml[2004,72281+32]..[2026,73075+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2004,72281+32]..[2004,72281+35])
            Ppat_var "env" (typing/typemod.ml[2004,72281+32]..[2004,72281+35])
          expression (typing/typemod.ml[2004,72281+36]..[2026,73075+6]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2004,72281+36]..[2004,72281+39])
              Ppat_var "loc" (typing/typemod.ml[2004,72281+36]..[2004,72281+39])
            expression (typing/typemod.ml[2004,72281+40]..[2026,73075+6]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2004,72281+40]..[2004,72281+42])
                Ppat_var "sg" (typing/typemod.ml[2004,72281+40]..[2004,72281+42])
              expression (typing/typemod.ml[2004,72281+43]..[2026,73075+6]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2004,72281+43]..[2004,72281+50])
                  Ppat_var "constrs" (typing/typemod.ml[2004,72281+43]..[2004,72281+50])
                expression (typing/typemod.ml[2005,72334+2]..[2026,73075+6])
                  Pexp_apply
                  expression (typing/typemod.ml[2005,72334+2]..[2005,72334+10])
                    Pexp_ident "List.map" (typing/typemod.ml[2005,72334+2]..[2005,72334+10])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2006,72345+4]..[2025,73069+5])
                        Pexp_function
                        [
                          <case>
                            pattern (typing/typemod.ml[2007,72359+8]..[2007,72359+57])
                              Ppat_construct "Sig_type" (typing/typemod.ml[2007,72359+8]..[2007,72359+16])
                              Some
                                []
                                pattern (typing/typemod.ml[2007,72359+17]..[2007,72359+57])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[2007,72359+18]..[2007,72359+20])
                                      Ppat_var "id" (typing/typemod.ml[2007,72359+18]..[2007,72359+20])
                                    pattern (typing/typemod.ml[2007,72359+22]..[2007,72359+46])
                                      Ppat_alias "td" (typing/typemod.ml[2007,72359+43]..[2007,72359+45])
                                      pattern (typing/typemod.ml[2007,72359+23]..[2007,72359+39])
                                        Ppat_record Closed
                                        [
                                          "type_params" (typing/typemod.ml[2007,72359+24]..[2007,72359+35])
                                            pattern (typing/typemod.ml[2007,72359+36]..[2007,72359+38])
                                              Ppat_construct "[]" (typing/typemod.ml[2007,72359+36]..[2007,72359+38])
                                              None
                                        ]
                                    pattern (typing/typemod.ml[2007,72359+48]..[2007,72359+50])
                                      Ppat_var "rs" (typing/typemod.ml[2007,72359+48]..[2007,72359+50])
                                    pattern (typing/typemod.ml[2007,72359+52]..[2007,72359+56])
                                      Ppat_var "priv" (typing/typemod.ml[2007,72359+52]..[2007,72359+56])
                                  ]
                            <when>
                              expression (typing/typemod.ml[2008,72417+13]..[2008,72417+51])
                                Pexp_apply
                                expression (typing/typemod.ml[2008,72417+13]..[2008,72417+27])
                                  Pexp_ident "List.mem_assoc" (typing/typemod.ml[2008,72417+13]..[2008,72417+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2008,72417+28]..[2008,72417+43])
                                      Pexp_construct "::" (typing/typemod.ml[2008,72417+29]..[2008,72417+43]) ghost
                                      Some
                                        expression (typing/typemod.ml[2008,72417+29]..[2008,72417+43]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[2008,72417+29]..[2008,72417+42])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2008,72417+29]..[2008,72417+39])
                                                Pexp_ident "Ident.name" (typing/typemod.ml[2008,72417+29]..[2008,72417+39])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2008,72417+40]..[2008,72417+42])
                                                    Pexp_ident "id" (typing/typemod.ml[2008,72417+40]..[2008,72417+42])
                                              ]
                                            expression (typing/typemod.ml[2008,72417+42]..[2008,72417+43]) ghost
                                              Pexp_construct "[]" (typing/typemod.ml[2008,72417+42]..[2008,72417+43]) ghost
                                              None
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2008,72417+44]..[2008,72417+51])
                                      Pexp_ident "constrs" (typing/typemod.ml[2008,72417+44]..[2008,72417+51])
                                ]
                            expression (typing/typemod.ml[2009,72472+10]..[2010,72529+68])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[2009,72472+14]..[2009,72472+16])
                                    Ppat_var "ty" (typing/typemod.ml[2009,72472+14]..[2009,72472+16])
                                  expression (typing/typemod.ml[2009,72472+19]..[2009,72472+53])
                                    Pexp_apply
                                    expression (typing/typemod.ml[2009,72472+19]..[2009,72472+29])
                                      Pexp_ident "List.assoc" (typing/typemod.ml[2009,72472+19]..[2009,72472+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2009,72472+30]..[2009,72472+45])
                                          Pexp_construct "::" (typing/typemod.ml[2009,72472+31]..[2009,72472+45]) ghost
                                          Some
                                            expression (typing/typemod.ml[2009,72472+31]..[2009,72472+45]) ghost
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[2009,72472+31]..[2009,72472+44])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2009,72472+31]..[2009,72472+41])
                                                    Pexp_ident "Ident.name" (typing/typemod.ml[2009,72472+31]..[2009,72472+41])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2009,72472+42]..[2009,72472+44])
                                                        Pexp_ident "id" (typing/typemod.ml[2009,72472+42]..[2009,72472+44])
                                                  ]
                                                expression (typing/typemod.ml[2009,72472+44]..[2009,72472+45]) ghost
                                                  Pexp_construct "[]" (typing/typemod.ml[2009,72472+44]..[2009,72472+45]) ghost
                                                  None
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2009,72472+46]..[2009,72472+53])
                                          Pexp_ident "constrs" (typing/typemod.ml[2009,72472+46]..[2009,72472+53])
                                    ]
                              ]
                              expression (typing/typemod.ml[2010,72529+10]..[2010,72529+68])
                                Pexp_construct "Sig_type" (typing/typemod.ml[2010,72529+10]..[2010,72529+18])
                                Some
                                  expression (typing/typemod.ml[2010,72529+19]..[2010,72529+68])
                                    Pexp_tuple
                                    [
                                      expression (typing/typemod.ml[2010,72529+20]..[2010,72529+22])
                                        Pexp_ident "id" (typing/typemod.ml[2010,72529+20]..[2010,72529+22])
                                      expression (typing/typemod.ml[2010,72529+24]..[2010,72529+57])
                                        Pexp_record
                                        [
                                          "type_manifest" (typing/typemod.ml[2010,72529+33]..[2010,72529+46])
                                            expression (typing/typemod.ml[2010,72529+49]..[2010,72529+56])
                                              Pexp_construct "Some" (typing/typemod.ml[2010,72529+49]..[2010,72529+53])
                                              Some
                                                expression (typing/typemod.ml[2010,72529+54]..[2010,72529+56])
                                                  Pexp_ident "ty" (typing/typemod.ml[2010,72529+54]..[2010,72529+56])
                                        ]
                                        Some
                                          expression (typing/typemod.ml[2010,72529+25]..[2010,72529+27])
                                            Pexp_ident "td" (typing/typemod.ml[2010,72529+25]..[2010,72529+27])
                                      expression (typing/typemod.ml[2010,72529+59]..[2010,72529+61])
                                        Pexp_ident "rs" (typing/typemod.ml[2010,72529+59]..[2010,72529+61])
                                      expression (typing/typemod.ml[2010,72529+63]..[2010,72529+67])
                                        Pexp_ident "priv" (typing/typemod.ml[2010,72529+63]..[2010,72529+67])
                                    ]
                          <case>
                            pattern (typing/typemod.ml[2011,72598+8]..[2011,72598+43])
                              Ppat_construct "Sig_module" (typing/typemod.ml[2011,72598+8]..[2011,72598+18])
                              Some
                                []
                                pattern (typing/typemod.ml[2011,72598+19]..[2011,72598+43])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[2011,72598+20]..[2011,72598+22])
                                      Ppat_var "id" (typing/typemod.ml[2011,72598+20]..[2011,72598+22])
                                    pattern (typing/typemod.ml[2011,72598+24]..[2011,72598+28])
                                      Ppat_var "pres" (typing/typemod.ml[2011,72598+24]..[2011,72598+28])
                                    pattern (typing/typemod.ml[2011,72598+30]..[2011,72598+32])
                                      Ppat_var "md" (typing/typemod.ml[2011,72598+30]..[2011,72598+32])
                                    pattern (typing/typemod.ml[2011,72598+34]..[2011,72598+36])
                                      Ppat_var "rs" (typing/typemod.ml[2011,72598+34]..[2011,72598+36])
                                    pattern (typing/typemod.ml[2011,72598+38]..[2011,72598+42])
                                      Ppat_var "priv" (typing/typemod.ml[2011,72598+38]..[2011,72598+42])
                                  ]
                            expression (typing/typemod.ml[2012,72645+10]..[2023,73002+45])
                              Pexp_let Rec
                              [
                                <def>
                                  pattern (typing/typemod.ml[2012,72645+18]..[2012,72645+21])
                                    Ppat_var "aux" (typing/typemod.ml[2012,72645+18]..[2012,72645+21])
                                  expression (typing/typemod.ml[2012,72645+24]..[2016,72823+22])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (typing/typemod.ml[2013,72678+14]..[2013,72678+47])
                                          Ppat_construct "::" (typing/typemod.ml[2013,72678+40]..[2013,72678+42])
                                          Some
                                            []
                                            pattern (typing/typemod.ml[2013,72678+14]..[2013,72678+47]) ghost
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[2013,72678+14]..[2013,72678+39])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typemod.ml[2013,72678+15]..[2013,72678+35])
                                                      Ppat_construct "::" (typing/typemod.ml[2013,72678+17]..[2013,72678+19])
                                                      Some
                                                        []
                                                        pattern (typing/typemod.ml[2013,72678+15]..[2013,72678+35]) ghost
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/typemod.ml[2013,72678+15]..[2013,72678+16])
                                                              Ppat_var "m" (typing/typemod.ml[2013,72678+15]..[2013,72678+16])
                                                            pattern (typing/typemod.ml[2013,72678+20]..[2013,72678+35])
                                                              Ppat_alias "l" (typing/typemod.ml[2013,72678+33]..[2013,72678+34])
                                                              pattern (typing/typemod.ml[2013,72678+21]..[2013,72678+29])
                                                                Ppat_construct "::" (typing/typemod.ml[2013,72678+24]..[2013,72678+26])
                                                                Some
                                                                  []
                                                                  pattern (typing/typemod.ml[2013,72678+22]..[2013,72678+28]) ghost
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (typing/typemod.ml[2013,72678+22]..[2013,72678+23])
Ppat_any
                                                                      pattern (typing/typemod.ml[2013,72678+27]..[2013,72678+28])
Ppat_any
                                                                    ]
                                                          ]
                                                    pattern (typing/typemod.ml[2013,72678+37]..[2013,72678+38])
                                                      Ppat_var "t" (typing/typemod.ml[2013,72678+37]..[2013,72678+38])
                                                  ]
                                                pattern (typing/typemod.ml[2013,72678+43]..[2013,72678+47])
                                                  Ppat_var "rest" (typing/typemod.ml[2013,72678+43]..[2013,72678+47])
                                              ]
                                        <when>
                                          expression (typing/typemod.ml[2013,72678+53]..[2013,72678+70])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2013,72678+55]..[2013,72678+56])
                                              Pexp_ident "=" (typing/typemod.ml[2013,72678+55]..[2013,72678+56])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2013,72678+53]..[2013,72678+54])
                                                  Pexp_ident "m" (typing/typemod.ml[2013,72678+53]..[2013,72678+54])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2013,72678+57]..[2013,72678+70])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2013,72678+57]..[2013,72678+67])
                                                    Pexp_ident "Ident.name" (typing/typemod.ml[2013,72678+57]..[2013,72678+67])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2013,72678+68]..[2013,72678+70])
                                                        Pexp_ident "id" (typing/typemod.ml[2013,72678+68]..[2013,72678+70])
                                                  ]
                                            ]
                                        expression (typing/typemod.ml[2014,72752+16]..[2014,72752+34])
                                          Pexp_construct "::" (typing/typemod.ml[2014,72752+23]..[2014,72752+25])
                                          Some
                                            expression (typing/typemod.ml[2014,72752+16]..[2014,72752+34]) ghost
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[2014,72752+16]..[2014,72752+22])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typemod.ml[2014,72752+17]..[2014,72752+18])
                                                      Pexp_ident "l" (typing/typemod.ml[2014,72752+17]..[2014,72752+18])
                                                    expression (typing/typemod.ml[2014,72752+20]..[2014,72752+21])
                                                      Pexp_ident "t" (typing/typemod.ml[2014,72752+20]..[2014,72752+21])
                                                  ]
                                                expression (typing/typemod.ml[2014,72752+26]..[2014,72752+34])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2014,72752+26]..[2014,72752+29])
                                                    Pexp_ident "aux" (typing/typemod.ml[2014,72752+26]..[2014,72752+29])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2014,72752+30]..[2014,72752+34])
                                                        Pexp_ident "rest" (typing/typemod.ml[2014,72752+30]..[2014,72752+34])
                                                  ]
                                              ]
                                      <case>
                                        pattern (typing/typemod.ml[2015,72787+14]..[2015,72787+23])
                                          Ppat_construct "::" (typing/typemod.ml[2015,72787+16]..[2015,72787+18])
                                          Some
                                            []
                                            pattern (typing/typemod.ml[2015,72787+14]..[2015,72787+23]) ghost
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[2015,72787+14]..[2015,72787+15])
                                                  Ppat_any
                                                pattern (typing/typemod.ml[2015,72787+19]..[2015,72787+23])
                                                  Ppat_var "rest" (typing/typemod.ml[2015,72787+19]..[2015,72787+23])
                                              ]
                                        expression (typing/typemod.ml[2015,72787+27]..[2015,72787+35])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2015,72787+27]..[2015,72787+30])
                                            Pexp_ident "aux" (typing/typemod.ml[2015,72787+27]..[2015,72787+30])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2015,72787+31]..[2015,72787+35])
                                                Pexp_ident "rest" (typing/typemod.ml[2015,72787+31]..[2015,72787+35])
                                          ]
                                      <case>
                                        pattern (typing/typemod.ml[2016,72823+14]..[2016,72823+16])
                                          Ppat_construct "[]" (typing/typemod.ml[2016,72823+14]..[2016,72823+16])
                                          None
                                        expression (typing/typemod.ml[2016,72823+20]..[2016,72823+22])
                                          Pexp_construct "[]" (typing/typemod.ml[2016,72823+20]..[2016,72823+22])
                                          None
                                    ]
                              ]
                              expression (typing/typemod.ml[2018,72859+10]..[2023,73002+45])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[2018,72859+14]..[2018,72859+16])
                                      Ppat_var "md" (typing/typemod.ml[2018,72859+14]..[2018,72859+16])
                                    expression (typing/typemod.ml[2019,72878+12]..[2021,72975+13])
                                      Pexp_record
                                      [
                                        "md_type" (typing/typemod.ml[2020,72899+13]..[2020,72899+20])
                                          expression (typing/typemod.ml[2020,72899+23]..[2020,72899+75])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2020,72899+23]..[2020,72899+42])
                                              Pexp_ident "package_constraints" (typing/typemod.ml[2020,72899+23]..[2020,72899+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2020,72899+43]..[2020,72899+46])
                                                  Pexp_ident "env" (typing/typemod.ml[2020,72899+43]..[2020,72899+46])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2020,72899+47]..[2020,72899+50])
                                                  Pexp_ident "loc" (typing/typemod.ml[2020,72899+47]..[2020,72899+50])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2020,72899+51]..[2020,72899+61])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[2020,72899+51]..[2020,72899+53])
                                                    Pexp_ident "md" (typing/typemod.ml[2020,72899+51]..[2020,72899+53])
                                                  "md_type" (typing/typemod.ml[2020,72899+54]..[2020,72899+61])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2020,72899+62]..[2020,72899+75])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2020,72899+63]..[2020,72899+66])
                                                    Pexp_ident "aux" (typing/typemod.ml[2020,72899+63]..[2020,72899+66])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2020,72899+67]..[2020,72899+74])
                                                        Pexp_ident "constrs" (typing/typemod.ml[2020,72899+67]..[2020,72899+74])
                                                  ]
                                            ]
                                      ]
                                      Some
                                        expression (typing/typemod.ml[2019,72878+13]..[2019,72878+15])
                                          Pexp_ident "md" (typing/typemod.ml[2019,72878+13]..[2019,72878+15])
                                ]
                                expression (typing/typemod.ml[2023,73002+10]..[2023,73002+45])
                                  Pexp_construct "Sig_module" (typing/typemod.ml[2023,73002+10]..[2023,73002+20])
                                  Some
                                    expression (typing/typemod.ml[2023,73002+21]..[2023,73002+45])
                                      Pexp_tuple
                                      [
                                        expression (typing/typemod.ml[2023,73002+22]..[2023,73002+24])
                                          Pexp_ident "id" (typing/typemod.ml[2023,73002+22]..[2023,73002+24])
                                        expression (typing/typemod.ml[2023,73002+26]..[2023,73002+30])
                                          Pexp_ident "pres" (typing/typemod.ml[2023,73002+26]..[2023,73002+30])
                                        expression (typing/typemod.ml[2023,73002+32]..[2023,73002+34])
                                          Pexp_ident "md" (typing/typemod.ml[2023,73002+32]..[2023,73002+34])
                                        expression (typing/typemod.ml[2023,73002+36]..[2023,73002+38])
                                          Pexp_ident "rs" (typing/typemod.ml[2023,73002+36]..[2023,73002+38])
                                        expression (typing/typemod.ml[2023,73002+40]..[2023,73002+44])
                                          Pexp_ident "priv" (typing/typemod.ml[2023,73002+40]..[2023,73002+44])
                                      ]
                          <case>
                            pattern (typing/typemod.ml[2024,73048+8]..[2024,73048+12])
                              Ppat_var "item" (typing/typemod.ml[2024,73048+8]..[2024,73048+12])
                            expression (typing/typemod.ml[2024,73048+16]..[2024,73048+20])
                              Pexp_ident "item" (typing/typemod.ml[2024,73048+16]..[2024,73048+20])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2026,73075+4]..[2026,73075+6])
                        Pexp_ident "sg" (typing/typemod.ml[2026,73075+4]..[2026,73075+6])
                  ]
      <def>
        pattern (typing/typemod.ml[2028,73083+4]..[2028,73083+23])
          Ppat_var "package_constraints" (typing/typemod.ml[2028,73083+4]..[2028,73083+23])
        expression (typing/typemod.ml[2028,73083+24]..[2036,73422+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2028,73083+24]..[2028,73083+27])
            Ppat_var "env" (typing/typemod.ml[2028,73083+24]..[2028,73083+27])
          expression (typing/typemod.ml[2028,73083+28]..[2036,73422+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2028,73083+28]..[2028,73083+31])
              Ppat_var "loc" (typing/typemod.ml[2028,73083+28]..[2028,73083+31])
            expression (typing/typemod.ml[2028,73083+32]..[2036,73422+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2028,73083+32]..[2028,73083+35])
                Ppat_var "mty" (typing/typemod.ml[2028,73083+32]..[2028,73083+35])
              expression (typing/typemod.ml[2028,73083+36]..[2036,73422+5]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2028,73083+36]..[2028,73083+43])
                  Ppat_var "constrs" (typing/typemod.ml[2028,73083+36]..[2028,73083+43])
                expression (typing/typemod.ml[2029,73129+2]..[2036,73422+5])
                  Pexp_ifthenelse
                  expression (typing/typemod.ml[2029,73129+5]..[2029,73129+17])
                    Pexp_apply
                    expression (typing/typemod.ml[2029,73129+13]..[2029,73129+14])
                      Pexp_ident "=" (typing/typemod.ml[2029,73129+13]..[2029,73129+14])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[2029,73129+5]..[2029,73129+12])
                          Pexp_ident "constrs" (typing/typemod.ml[2029,73129+5]..[2029,73129+12])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[2029,73129+15]..[2029,73129+17])
                          Pexp_construct "[]" (typing/typemod.ml[2029,73129+15]..[2029,73129+17])
                          None
                    ]
                  expression (typing/typemod.ml[2029,73129+23]..[2029,73129+26])
                    Pexp_ident "mty" (typing/typemod.ml[2029,73129+23]..[2029,73129+26])
                  Some
                    expression (typing/typemod.ml[2030,73156+7]..[2036,73422+5])
                      Pexp_match
                      expression (typing/typemod.ml[2031,73169+10]..[2031,73169+30])
                        Pexp_apply
                        expression (typing/typemod.ml[2031,73169+10]..[2031,73169+22])
                          Pexp_ident "Mtype.scrape" (typing/typemod.ml[2031,73169+10]..[2031,73169+22])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[2031,73169+23]..[2031,73169+26])
                              Pexp_ident "env" (typing/typemod.ml[2031,73169+23]..[2031,73169+26])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[2031,73169+27]..[2031,73169+30])
                              Pexp_ident "mty" (typing/typemod.ml[2031,73169+27]..[2031,73169+30])
                        ]
                      [
                        <case>
                          pattern (typing/typemod.ml[2032,73205+6]..[2032,73205+22])
                            Ppat_construct "Mty_signature" (typing/typemod.ml[2032,73205+6]..[2032,73205+19])
                            Some
                              []
                              pattern (typing/typemod.ml[2032,73205+20]..[2032,73205+22])
                                Ppat_var "sg" (typing/typemod.ml[2032,73205+20]..[2032,73205+22])
                          expression (typing/typemod.ml[2033,73231+8]..[2033,73231+66])
                            Pexp_construct "Mty_signature" (typing/typemod.ml[2033,73231+8]..[2033,73231+21])
                            Some
                              expression (typing/typemod.ml[2033,73231+22]..[2033,73231+66])
                                Pexp_apply
                                expression (typing/typemod.ml[2033,73231+23]..[2033,73231+46])
                                  Pexp_ident "package_constraints_sig" (typing/typemod.ml[2033,73231+23]..[2033,73231+46])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2033,73231+47]..[2033,73231+50])
                                      Pexp_ident "env" (typing/typemod.ml[2033,73231+47]..[2033,73231+50])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2033,73231+51]..[2033,73231+54])
                                      Pexp_ident "loc" (typing/typemod.ml[2033,73231+51]..[2033,73231+54])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2033,73231+55]..[2033,73231+57])
                                      Pexp_ident "sg" (typing/typemod.ml[2033,73231+55]..[2033,73231+57])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2033,73231+58]..[2033,73231+65])
                                      Pexp_ident "constrs" (typing/typemod.ml[2033,73231+58]..[2033,73231+65])
                                ]
                        <case>
                          pattern (typing/typemod.ml[2034,73298+6]..[2034,73298+33])
                            Ppat_or
                            pattern (typing/typemod.ml[2034,73298+6]..[2034,73298+19])
                              Ppat_construct "Mty_functor" (typing/typemod.ml[2034,73298+6]..[2034,73298+17])
                              Some
                                []
                                pattern (typing/typemod.ml[2034,73298+18]..[2034,73298+19])
                                  Ppat_any
                            pattern (typing/typemod.ml[2034,73298+22]..[2034,73298+33])
                              Ppat_construct "Mty_alias" (typing/typemod.ml[2034,73298+22]..[2034,73298+31])
                              Some
                                []
                                pattern (typing/typemod.ml[2034,73298+32]..[2034,73298+33])
                                  Ppat_any
                          expression (typing/typemod.ml[2034,73298+37]..[2034,73298+49])
                            Pexp_assert
                            expression (typing/typemod.ml[2034,73298+44]..[2034,73298+49])
                              Pexp_construct "false" (typing/typemod.ml[2034,73298+44]..[2034,73298+49])
                              None
                        <case>
                          pattern (typing/typemod.ml[2035,73348+6]..[2035,73348+17])
                            Ppat_construct "Mty_ident" (typing/typemod.ml[2035,73348+6]..[2035,73348+15])
                            Some
                              []
                              pattern (typing/typemod.ml[2035,73348+16]..[2035,73348+17])
                                Ppat_var "p" (typing/typemod.ml[2035,73348+16]..[2035,73348+17])
                          expression (typing/typemod.ml[2035,73348+21]..[2035,73348+73])
                            Pexp_apply
                            expression (typing/typemod.ml[2035,73348+21]..[2035,73348+26])
                              Pexp_ident "raise" (typing/typemod.ml[2035,73348+21]..[2035,73348+26])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2035,73348+26]..[2035,73348+73])
                                  Pexp_construct "Error" (typing/typemod.ml[2035,73348+27]..[2035,73348+32])
                                  Some
                                    expression (typing/typemod.ml[2035,73348+32]..[2035,73348+72])
                                      Pexp_tuple
                                      [
                                        expression (typing/typemod.ml[2035,73348+33]..[2035,73348+36])
                                          Pexp_ident "loc" (typing/typemod.ml[2035,73348+33]..[2035,73348+36])
                                        expression (typing/typemod.ml[2035,73348+38]..[2035,73348+41])
                                          Pexp_ident "env" (typing/typemod.ml[2035,73348+38]..[2035,73348+41])
                                        expression (typing/typemod.ml[2035,73348+43]..[2035,73348+71])
                                          Pexp_construct "Cannot_scrape_package_type" (typing/typemod.ml[2035,73348+43]..[2035,73348+69])
                                          Some
                                            expression (typing/typemod.ml[2035,73348+70]..[2035,73348+71])
                                              Pexp_ident "p" (typing/typemod.ml[2035,73348+70]..[2035,73348+71])
                                      ]
                            ]
                      ]
    ]
  structure_item (typing/typemod.ml[2038,73429+0]..[2040,73511+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2038,73429+4]..[2038,73429+22])
          Ppat_var "modtype_of_package" (typing/typemod.ml[2038,73429+4]..[2038,73429+22])
        expression (typing/typemod.ml[2038,73429+23]..[2040,73511+58]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2038,73429+23]..[2038,73429+26])
            Ppat_var "env" (typing/typemod.ml[2038,73429+23]..[2038,73429+26])
          expression (typing/typemod.ml[2038,73429+27]..[2040,73511+58]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2038,73429+27]..[2038,73429+30])
              Ppat_var "loc" (typing/typemod.ml[2038,73429+27]..[2038,73429+30])
            expression (typing/typemod.ml[2038,73429+31]..[2040,73511+58]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2038,73429+31]..[2038,73429+32])
                Ppat_var "p" (typing/typemod.ml[2038,73429+31]..[2038,73429+32])
              expression (typing/typemod.ml[2038,73429+33]..[2040,73511+58]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2038,73429+33]..[2038,73429+35])
                  Ppat_var "fl" (typing/typemod.ml[2038,73429+33]..[2038,73429+35])
                expression (typing/typemod.ml[2039,73467+2]..[2040,73511+58])
                  Pexp_apply
                  expression (typing/typemod.ml[2039,73467+2]..[2039,73467+21])
                    Pexp_ident "package_constraints" (typing/typemod.ml[2039,73467+2]..[2039,73467+21])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2039,73467+22]..[2039,73467+25])
                        Pexp_ident "env" (typing/typemod.ml[2039,73467+22]..[2039,73467+25])
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2039,73467+26]..[2039,73467+29])
                        Pexp_ident "loc" (typing/typemod.ml[2039,73467+26]..[2039,73467+29])
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2039,73467+30]..[2039,73467+43])
                        Pexp_construct "Mty_ident" (typing/typemod.ml[2039,73467+31]..[2039,73467+40])
                        Some
                          expression (typing/typemod.ml[2039,73467+41]..[2039,73467+42])
                            Pexp_ident "p" (typing/typemod.ml[2039,73467+41]..[2039,73467+42])
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2040,73511+4]..[2040,73511+58])
                        Pexp_apply
                        expression (typing/typemod.ml[2040,73511+5]..[2040,73511+13])
                          Pexp_ident "List.map" (typing/typemod.ml[2040,73511+5]..[2040,73511+13])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[2040,73511+14]..[2040,73511+54])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typemod.ml[2040,73511+19]..[2040,73511+25])
                                Ppat_tuple
                                [
                                  pattern (typing/typemod.ml[2040,73511+20]..[2040,73511+21])
                                    Ppat_var "n" (typing/typemod.ml[2040,73511+20]..[2040,73511+21])
                                  pattern (typing/typemod.ml[2040,73511+23]..[2040,73511+24])
                                    Ppat_var "t" (typing/typemod.ml[2040,73511+23]..[2040,73511+24])
                                ]
                              expression (typing/typemod.ml[2040,73511+29]..[2040,73511+53])
                                Pexp_tuple
                                [
                                  expression (typing/typemod.ml[2040,73511+30]..[2040,73511+49])
                                    Pexp_apply
                                    expression (typing/typemod.ml[2040,73511+30]..[2040,73511+47])
                                      Pexp_ident "Longident.flatten" (typing/typemod.ml[2040,73511+30]..[2040,73511+47])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2040,73511+48]..[2040,73511+49])
                                          Pexp_ident "n" (typing/typemod.ml[2040,73511+48]..[2040,73511+49])
                                    ]
                                  expression (typing/typemod.ml[2040,73511+51]..[2040,73511+52])
                                    Pexp_ident "t" (typing/typemod.ml[2040,73511+51]..[2040,73511+52])
                                ]
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[2040,73511+55]..[2040,73511+57])
                              Pexp_ident "fl" (typing/typemod.ml[2040,73511+55]..[2040,73511+57])
                        ]
                  ]
    ]
  structure_item (typing/typemod.ml[2042,73571+0]..[2054,74013+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2042,73571+4]..[2042,73571+19])
          Ppat_var "package_subtype" (typing/typemod.ml[2042,73571+4]..[2042,73571+19])
        expression (typing/typemod.ml[2042,73571+20]..[2054,74013+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2042,73571+20]..[2042,73571+23])
            Ppat_var "env" (typing/typemod.ml[2042,73571+20]..[2042,73571+23])
          expression (typing/typemod.ml[2042,73571+24]..[2054,74013+47]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2042,73571+24]..[2042,73571+26])
              Ppat_var "p1" (typing/typemod.ml[2042,73571+24]..[2042,73571+26])
            expression (typing/typemod.ml[2042,73571+27]..[2054,74013+47]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2042,73571+27]..[2042,73571+30])
                Ppat_var "fl1" (typing/typemod.ml[2042,73571+27]..[2042,73571+30])
              expression (typing/typemod.ml[2042,73571+31]..[2054,74013+47]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2042,73571+31]..[2042,73571+33])
                  Ppat_var "p2" (typing/typemod.ml[2042,73571+31]..[2042,73571+33])
                expression (typing/typemod.ml[2042,73571+34]..[2054,74013+47]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[2042,73571+34]..[2042,73571+37])
                    Ppat_var "fl2" (typing/typemod.ml[2042,73571+34]..[2042,73571+37])
                  expression (typing/typemod.ml[2043,73611+2]..[2054,74013+47])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[2043,73611+6]..[2043,73611+11])
                          Ppat_var "mkmty" (typing/typemod.ml[2043,73611+6]..[2043,73611+11])
                        expression (typing/typemod.ml[2043,73611+12]..[2046,73711+45]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[2043,73611+12]..[2043,73611+13])
                            Ppat_var "p" (typing/typemod.ml[2043,73611+12]..[2043,73611+13])
                          expression (typing/typemod.ml[2043,73611+14]..[2046,73711+45]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[2043,73611+14]..[2043,73611+16])
                              Ppat_var "fl" (typing/typemod.ml[2043,73611+14]..[2043,73611+16])
                            expression (typing/typemod.ml[2044,73630+4]..[2046,73711+45])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[2044,73630+8]..[2044,73630+10])
                                    Ppat_var "fl" (typing/typemod.ml[2044,73630+8]..[2044,73630+10])
                                  expression (typing/typemod.ml[2045,73643+6]..[2045,73643+64])
                                    Pexp_apply
                                    expression (typing/typemod.ml[2045,73643+6]..[2045,73643+17])
                                      Pexp_ident "List.filter" (typing/typemod.ml[2045,73643+6]..[2045,73643+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2045,73643+18]..[2045,73643+61])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/typemod.ml[2045,73643+23]..[2045,73643+29])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[2045,73643+24]..[2045,73643+26])
                                                Ppat_var "_n" (typing/typemod.ml[2045,73643+24]..[2045,73643+26])
                                              pattern (typing/typemod.ml[2045,73643+27]..[2045,73643+28])
                                                Ppat_var "t" (typing/typemod.ml[2045,73643+27]..[2045,73643+28])
                                            ]
                                          expression (typing/typemod.ml[2045,73643+33]..[2045,73643+60])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2045,73643+56]..[2045,73643+57])
                                              Pexp_ident "=" (typing/typemod.ml[2045,73643+56]..[2045,73643+57])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2045,73643+33]..[2045,73643+55])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2045,73643+33]..[2045,73643+53])
                                                    Pexp_ident "Ctype.free_variables" (typing/typemod.ml[2045,73643+33]..[2045,73643+53])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2045,73643+54]..[2045,73643+55])
                                                        Pexp_ident "t" (typing/typemod.ml[2045,73643+54]..[2045,73643+55])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2045,73643+58]..[2045,73643+60])
                                                  Pexp_construct "[]" (typing/typemod.ml[2045,73643+58]..[2045,73643+60])
                                                  None
                                            ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2045,73643+62]..[2045,73643+64])
                                          Pexp_ident "fl" (typing/typemod.ml[2045,73643+62]..[2045,73643+64])
                                    ]
                              ]
                              expression (typing/typemod.ml[2046,73711+4]..[2046,73711+45])
                                Pexp_apply
                                expression (typing/typemod.ml[2046,73711+4]..[2046,73711+22])
                                  Pexp_ident "modtype_of_package" (typing/typemod.ml[2046,73711+4]..[2046,73711+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2046,73711+23]..[2046,73711+26])
                                      Pexp_ident "env" (typing/typemod.ml[2046,73711+23]..[2046,73711+26])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2046,73711+27]..[2046,73711+40])
                                      Pexp_ident "Location.none" (typing/typemod.ml[2046,73711+27]..[2046,73711+40])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2046,73711+41]..[2046,73711+42])
                                      Pexp_ident "p" (typing/typemod.ml[2046,73711+41]..[2046,73711+42])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2046,73711+43]..[2046,73711+45])
                                      Pexp_ident "fl" (typing/typemod.ml[2046,73711+43]..[2046,73711+45])
                                ]
                    ]
                    expression (typing/typemod.ml[2048,73762+2]..[2054,74013+47])
                      Pexp_match
                      expression (typing/typemod.ml[2048,73762+8]..[2048,73762+34])
                        Pexp_tuple
                        [
                          expression (typing/typemod.ml[2048,73762+8]..[2048,73762+20])
                            Pexp_apply
                            expression (typing/typemod.ml[2048,73762+8]..[2048,73762+13])
                              Pexp_ident "mkmty" (typing/typemod.ml[2048,73762+8]..[2048,73762+13])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2048,73762+14]..[2048,73762+16])
                                  Pexp_ident "p1" (typing/typemod.ml[2048,73762+14]..[2048,73762+16])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2048,73762+17]..[2048,73762+20])
                                  Pexp_ident "fl1" (typing/typemod.ml[2048,73762+17]..[2048,73762+20])
                            ]
                          expression (typing/typemod.ml[2048,73762+22]..[2048,73762+34])
                            Pexp_apply
                            expression (typing/typemod.ml[2048,73762+22]..[2048,73762+27])
                              Pexp_ident "mkmty" (typing/typemod.ml[2048,73762+22]..[2048,73762+27])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2048,73762+28]..[2048,73762+30])
                                  Pexp_ident "p2" (typing/typemod.ml[2048,73762+28]..[2048,73762+30])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2048,73762+31]..[2048,73762+34])
                                  Pexp_ident "fl2" (typing/typemod.ml[2048,73762+31]..[2048,73762+34])
                            ]
                        ]
                      [
                        <case>
                          pattern (typing/typemod.ml[2049,73802+4]..[2049,73802+55])
                            Ppat_exception
                            pattern (typing/typemod.ml[2049,73802+14]..[2049,73802+55])
                              Ppat_construct "Error" (typing/typemod.ml[2049,73802+14]..[2049,73802+19])
                              Some
                                []
                                pattern (typing/typemod.ml[2049,73802+19]..[2049,73802+55])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[2049,73802+20]..[2049,73802+21])
                                      Ppat_any
                                    pattern (typing/typemod.ml[2049,73802+23]..[2049,73802+24])
                                      Ppat_any
                                    pattern (typing/typemod.ml[2049,73802+26]..[2049,73802+54])
                                      Ppat_construct "Cannot_scrape_package_type" (typing/typemod.ml[2049,73802+26]..[2049,73802+52])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2049,73802+53]..[2049,73802+54])
                                          Ppat_any
                                  ]
                          expression (typing/typemod.ml[2049,73802+59]..[2049,73802+64])
                            Pexp_construct "false" (typing/typemod.ml[2049,73802+59]..[2049,73802+64])
                            None
                        <case>
                          pattern (typing/typemod.ml[2050,73867+4]..[2050,73867+14])
                            Ppat_tuple
                            [
                              pattern (typing/typemod.ml[2050,73867+4]..[2050,73867+8])
                                Ppat_var "mty1" (typing/typemod.ml[2050,73867+4]..[2050,73867+8])
                              pattern (typing/typemod.ml[2050,73867+10]..[2050,73867+14])
                                Ppat_var "mty2" (typing/typemod.ml[2050,73867+10]..[2050,73867+14])
                            ]
                          expression (typing/typemod.ml[2051,73885+4]..[2054,74013+47])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[2051,73885+8]..[2051,73885+11])
                                  Ppat_var "loc" (typing/typemod.ml[2051,73885+8]..[2051,73885+11])
                                expression (typing/typemod.ml[2051,73885+14]..[2051,73885+27])
                                  Pexp_ident "Location.none" (typing/typemod.ml[2051,73885+14]..[2051,73885+27])
                            ]
                            expression (typing/typemod.ml[2052,73916+4]..[2054,74013+47])
                              Pexp_match
                              expression (typing/typemod.ml[2052,73916+10]..[2052,73916+64])
                                Pexp_apply
                                expression (typing/typemod.ml[2052,73916+10]..[2052,73916+29])
                                  Pexp_ident "Includemod.modtypes" (typing/typemod.ml[2052,73916+10]..[2052,73916+29])
                                [
                                  <arg>
                                  Labelled "loc"
                                    expression (typing/typemod.ml[2052,73916+31]..[2052,73916+34])
                                      Pexp_ident "loc" (typing/typemod.ml[2052,73916+31]..[2052,73916+34])
                                  <arg>
                                  Labelled "mark"
                                    expression (typing/typemod.ml[2052,73916+41]..[2052,73916+50])
                                      Pexp_construct "Mark_both" (typing/typemod.ml[2052,73916+41]..[2052,73916+50])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2052,73916+51]..[2052,73916+54])
                                      Pexp_ident "env" (typing/typemod.ml[2052,73916+51]..[2052,73916+54])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2052,73916+55]..[2052,73916+59])
                                      Pexp_ident "mty1" (typing/typemod.ml[2052,73916+55]..[2052,73916+59])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2052,73916+60]..[2052,73916+64])
                                      Pexp_ident "mty2" (typing/typemod.ml[2052,73916+60]..[2052,73916+64])
                                ]
                              [
                                <case>
                                  pattern (typing/typemod.ml[2053,73986+6]..[2053,73986+18])
                                    Ppat_construct "Tcoerce_none" (typing/typemod.ml[2053,73986+6]..[2053,73986+18])
                                    None
                                  expression (typing/typemod.ml[2053,73986+22]..[2053,73986+26])
                                    Pexp_construct "true" (typing/typemod.ml[2053,73986+22]..[2053,73986+26])
                                    None
                                <case>
                                  pattern (typing/typemod.ml[2054,74013+6]..[2054,74013+38])
                                    Ppat_or
                                    pattern (typing/typemod.ml[2054,74013+6]..[2054,74013+7])
                                      Ppat_any
                                    pattern (typing/typemod.ml[2054,74013+10]..[2054,74013+38])
                                      Ppat_exception
                                      pattern (typing/typemod.ml[2054,74013+20]..[2054,74013+38])
                                        Ppat_construct "Includemod.Error" (typing/typemod.ml[2054,74013+20]..[2054,74013+36])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[2054,74013+37]..[2054,74013+38])
                                            Ppat_any
                                  expression (typing/typemod.ml[2054,74013+42]..[2054,74013+47])
                                    Pexp_construct "false" (typing/typemod.ml[2054,74013+42]..[2054,74013+47])
                                    None
                              ]
                      ]
    ]
  structure_item (typing/typemod.ml[2056,74062+0]..[2056,74062+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2056,74062+4]..[2056,74062+6])
          Ppat_construct "()" (typing/typemod.ml[2056,74062+4]..[2056,74062+6])
          None
        expression (typing/typemod.ml[2056,74062+9]..[2056,74062+49])
          Pexp_apply
          expression (typing/typemod.ml[2056,74062+31]..[2056,74062+33])
            Pexp_ident ":=" (typing/typemod.ml[2056,74062+31]..[2056,74062+33])
          [
            <arg>
            Nolabel
              expression (typing/typemod.ml[2056,74062+9]..[2056,74062+30])
                Pexp_ident "Ctype.package_subtype" (typing/typemod.ml[2056,74062+9]..[2056,74062+30])
            <arg>
            Nolabel
              expression (typing/typemod.ml[2056,74062+34]..[2056,74062+49])
                Pexp_ident "package_subtype" (typing/typemod.ml[2056,74062+34]..[2056,74062+49])
          ]
    ]
  structure_item (typing/typemod.ml[2058,74113+0]..[2069,74552+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2058,74113+4]..[2058,74113+19])
          Ppat_var "wrap_constraint" (typing/typemod.ml[2058,74113+4]..[2058,74113+19])
        expression (typing/typemod.ml[2058,74113+20]..[2069,74552+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2058,74113+20]..[2058,74113+23])
            Ppat_var "env" (typing/typemod.ml[2058,74113+20]..[2058,74113+23])
          expression (typing/typemod.ml[2058,74113+24]..[2069,74552+27]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2058,74113+24]..[2058,74113+28])
              Ppat_var "mark" (typing/typemod.ml[2058,74113+24]..[2058,74113+28])
            expression (typing/typemod.ml[2058,74113+29]..[2069,74552+27]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2058,74113+29]..[2058,74113+32])
                Ppat_var "arg" (typing/typemod.ml[2058,74113+29]..[2058,74113+32])
              expression (typing/typemod.ml[2058,74113+33]..[2069,74552+27]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2058,74113+33]..[2058,74113+36])
                  Ppat_var "mty" (typing/typemod.ml[2058,74113+33]..[2058,74113+36])
                expression (typing/typemod.ml[2058,74113+37]..[2069,74552+27]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[2058,74113+37]..[2058,74113+45])
                    Ppat_var "explicit" (typing/typemod.ml[2058,74113+37]..[2058,74113+45])
                  expression (typing/typemod.ml[2059,74161+2]..[2069,74552+27])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[2059,74161+6]..[2059,74161+10])
                          Ppat_var "mark" (typing/typemod.ml[2059,74161+6]..[2059,74161+10])
                        expression (typing/typemod.ml[2059,74161+13]..[2059,74161+75])
                          Pexp_ifthenelse
                          expression (typing/typemod.ml[2059,74161+16]..[2059,74161+20])
                            Pexp_ident "mark" (typing/typemod.ml[2059,74161+16]..[2059,74161+20])
                          expression (typing/typemod.ml[2059,74161+26]..[2059,74161+46])
                            Pexp_construct "Includemod.Mark_both" (typing/typemod.ml[2059,74161+26]..[2059,74161+46])
                            None
                          Some
                            expression (typing/typemod.ml[2059,74161+52]..[2059,74161+75])
                              Pexp_construct "Includemod.Mark_neither" (typing/typemod.ml[2059,74161+52]..[2059,74161+75])
                              None
                    ]
                    expression (typing/typemod.ml[2060,74240+2]..[2069,74552+27])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[2060,74240+6]..[2060,74240+14])
                            Ppat_var "coercion" (typing/typemod.ml[2060,74240+6]..[2060,74240+14])
                          expression (typing/typemod.ml[2061,74257+4]..[2064,74368+54])
                            Pexp_try
                            expression (typing/typemod.ml[2062,74265+6]..[2062,74265+69])
                              Pexp_apply
                              expression (typing/typemod.ml[2062,74265+6]..[2062,74265+25])
                                Pexp_ident "Includemod.modtypes" (typing/typemod.ml[2062,74265+6]..[2062,74265+25])
                              [
                                <arg>
                                Labelled "loc"
                                  expression (typing/typemod.ml[2062,74265+31]..[2062,74265+42])
                                    Pexp_field
                                    expression (typing/typemod.ml[2062,74265+31]..[2062,74265+34])
                                      Pexp_ident "arg" (typing/typemod.ml[2062,74265+31]..[2062,74265+34])
                                    "mod_loc" (typing/typemod.ml[2062,74265+35]..[2062,74265+42])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2062,74265+43]..[2062,74265+46])
                                    Pexp_ident "env" (typing/typemod.ml[2062,74265+43]..[2062,74265+46])
                                <arg>
                                Labelled "mark"
                                  expression (typing/typemod.ml[2062,74265+48]..[2062,74265+52])
                                    Pexp_ident "mark" (typing/typemod.ml[2062,74265+48]..[2062,74265+52])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2062,74265+53]..[2062,74265+65])
                                    Pexp_field
                                    expression (typing/typemod.ml[2062,74265+53]..[2062,74265+56])
                                      Pexp_ident "arg" (typing/typemod.ml[2062,74265+53]..[2062,74265+56])
                                    "mod_type" (typing/typemod.ml[2062,74265+57]..[2062,74265+65])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2062,74265+66]..[2062,74265+69])
                                    Pexp_ident "mty" (typing/typemod.ml[2062,74265+66]..[2062,74265+69])
                              ]
                            [
                              <case>
                                pattern (typing/typemod.ml[2063,74335+9]..[2063,74335+29])
                                  Ppat_construct "Includemod.Error" (typing/typemod.ml[2063,74335+9]..[2063,74335+25])
                                  Some
                                    []
                                    pattern (typing/typemod.ml[2063,74335+26]..[2063,74335+29])
                                      Ppat_var "msg" (typing/typemod.ml[2063,74335+26]..[2063,74335+29])
                                expression (typing/typemod.ml[2064,74368+6]..[2064,74368+54])
                                  Pexp_apply
                                  expression (typing/typemod.ml[2064,74368+6]..[2064,74368+11])
                                    Pexp_ident "raise" (typing/typemod.ml[2064,74368+6]..[2064,74368+11])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2064,74368+11]..[2064,74368+54])
                                        Pexp_construct "Error" (typing/typemod.ml[2064,74368+12]..[2064,74368+17])
                                        Some
                                          expression (typing/typemod.ml[2064,74368+17]..[2064,74368+53])
                                            Pexp_tuple
                                            [
                                              expression (typing/typemod.ml[2064,74368+18]..[2064,74368+29])
                                                Pexp_field
                                                expression (typing/typemod.ml[2064,74368+18]..[2064,74368+21])
                                                  Pexp_ident "arg" (typing/typemod.ml[2064,74368+18]..[2064,74368+21])
                                                "mod_loc" (typing/typemod.ml[2064,74368+22]..[2064,74368+29])
                                              expression (typing/typemod.ml[2064,74368+31]..[2064,74368+34])
                                                Pexp_ident "env" (typing/typemod.ml[2064,74368+31]..[2064,74368+34])
                                              expression (typing/typemod.ml[2064,74368+36]..[2064,74368+52])
                                                Pexp_construct "Not_included" (typing/typemod.ml[2064,74368+36]..[2064,74368+48])
                                                Some
                                                  expression (typing/typemod.ml[2064,74368+49]..[2064,74368+52])
                                                    Pexp_ident "msg" (typing/typemod.ml[2064,74368+49]..[2064,74368+52])
                                            ]
                                  ]
                            ]
                      ]
                      expression (typing/typemod.ml[2065,74426+2]..[2069,74552+27])
                        Pexp_record
                        [
                          "mod_desc" (typing/typemod.ml[2065,74426+4]..[2065,74426+12])
                            expression (typing/typemod.ml[2065,74426+15]..[2065,74426+60])
                              Pexp_construct "Tmod_constraint" (typing/typemod.ml[2065,74426+15]..[2065,74426+30])
                              Some
                                expression (typing/typemod.ml[2065,74426+30]..[2065,74426+60])
                                  Pexp_tuple
                                  [
                                    expression (typing/typemod.ml[2065,74426+31]..[2065,74426+34])
                                      Pexp_ident "arg" (typing/typemod.ml[2065,74426+31]..[2065,74426+34])
                                    expression (typing/typemod.ml[2065,74426+36]..[2065,74426+39])
                                      Pexp_ident "mty" (typing/typemod.ml[2065,74426+36]..[2065,74426+39])
                                    expression (typing/typemod.ml[2065,74426+41]..[2065,74426+49])
                                      Pexp_ident "explicit" (typing/typemod.ml[2065,74426+41]..[2065,74426+49])
                                    expression (typing/typemod.ml[2065,74426+51]..[2065,74426+59])
                                      Pexp_ident "coercion" (typing/typemod.ml[2065,74426+51]..[2065,74426+59])
                                  ]
                          "mod_type" (typing/typemod.ml[2066,74488+4]..[2066,74488+12])
                            expression (typing/typemod.ml[2066,74488+15]..[2066,74488+18])
                              Pexp_ident "mty" (typing/typemod.ml[2066,74488+15]..[2066,74488+18])
                          "mod_env" (typing/typemod.ml[2067,74508+4]..[2067,74508+11])
                            expression (typing/typemod.ml[2067,74508+14]..[2067,74508+17])
                              Pexp_ident "env" (typing/typemod.ml[2067,74508+14]..[2067,74508+17])
                          "mod_attributes" (typing/typemod.ml[2068,74527+4]..[2068,74527+18])
                            expression (typing/typemod.ml[2068,74527+21]..[2068,74527+23])
                              Pexp_construct "[]" (typing/typemod.ml[2068,74527+21]..[2068,74527+23])
                              None
                          "mod_loc" (typing/typemod.ml[2069,74552+4]..[2069,74552+11])
                            expression (typing/typemod.ml[2069,74552+14]..[2069,74552+25])
                              Pexp_field
                              expression (typing/typemod.ml[2069,74552+14]..[2069,74552+17])
                                Pexp_ident "arg" (typing/typemod.ml[2069,74552+14]..[2069,74552+17])
                              "mod_loc" (typing/typemod.ml[2069,74552+18]..[2069,74552+25])
                        ]
                        None
    ]
  structure_item (typing/typemod.ml[2075,74643+0]..[2082,74840+1])
    Pstr_type Rec
    [
      type_declaration "application_summary" (typing/typemod.ml[2075,74643+5]..[2075,74643+24]) (typing/typemod.ml[2075,74643+0]..[2082,74840+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/typemod.ml[2076,74672+2]..[2076,74672+18])
                Immutable
                "loc" (typing/typemod.ml[2076,74672+2]..[2076,74672+5])                core_type (typing/typemod.ml[2076,74672+7]..[2076,74672+17])
                  Ptyp_constr "Location.t" (typing/typemod.ml[2076,74672+7]..[2076,74672+17])
                  []
              (typing/typemod.ml[2077,74691+2]..[2077,74691+25])
                Immutable
                "attributes" (typing/typemod.ml[2077,74691+2]..[2077,74691+12])                core_type (typing/typemod.ml[2077,74691+14]..[2077,74691+24])
                  Ptyp_constr "attributes" (typing/typemod.ml[2077,74691+14]..[2077,74691+24])
                  []
              (typing/typemod.ml[2078,74717+2]..[2078,74717+20])
                Immutable
                "f_loc" (typing/typemod.ml[2078,74717+2]..[2078,74717+7])                core_type (typing/typemod.ml[2078,74717+9]..[2078,74717+19])
                  Ptyp_constr "Location.t" (typing/typemod.ml[2078,74717+9]..[2078,74717+19])
                  []
              (typing/typemod.ml[2079,74754+2]..[2079,74754+30])
                Immutable
                "arg_is_syntactic_unit" (typing/typemod.ml[2079,74754+2]..[2079,74754+23])                core_type (typing/typemod.ml[2079,74754+25]..[2079,74754+29])
                  Ptyp_constr "bool" (typing/typemod.ml[2079,74754+25]..[2079,74754+29])
                  []
              (typing/typemod.ml[2080,74785+2]..[2080,74785+29])
                Immutable
                "arg" (typing/typemod.ml[2080,74785+2]..[2080,74785+5])                core_type (typing/typemod.ml[2080,74785+7]..[2080,74785+28])
                  Ptyp_constr "Typedtree.module_expr" (typing/typemod.ml[2080,74785+7]..[2080,74785+28])
                  []
              (typing/typemod.ml[2081,74815+2]..[2081,74815+24])
                Immutable
                "arg_path" (typing/typemod.ml[2081,74815+2]..[2081,74815+10])                core_type (typing/typemod.ml[2081,74815+11]..[2081,74815+24])
                  Ptyp_constr "option" (typing/typemod.ml[2081,74815+18]..[2081,74815+24])
                  [
                    core_type (typing/typemod.ml[2081,74815+11]..[2081,74815+17])
                      Ptyp_constr "Path.t" (typing/typemod.ml[2081,74815+11]..[2081,74815+17])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/typemod.ml[2084,74843+0]..[2089,75075+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2084,74843+4]..[2084,74843+24])
          Ppat_var "simplify_app_summary" (typing/typemod.ml[2084,74843+4]..[2084,74843+24])
        expression (typing/typemod.ml[2084,74843+25]..[2089,75075+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2084,74843+25]..[2084,74843+33])
            Ppat_var "app_view" (typing/typemod.ml[2084,74843+25]..[2084,74843+33])
          expression (typing/typemod.ml[2085,74879+2]..[2089,75075+50])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/typemod.ml[2085,74879+6]..[2085,74879+9])
                  Ppat_var "mty" (typing/typemod.ml[2085,74879+6]..[2085,74879+9])
                expression (typing/typemod.ml[2085,74879+12]..[2085,74879+33])
                  Pexp_field
                  expression (typing/typemod.ml[2085,74879+12]..[2085,74879+24])
                    Pexp_field
                    expression (typing/typemod.ml[2085,74879+12]..[2085,74879+20])
                      Pexp_ident "app_view" (typing/typemod.ml[2085,74879+12]..[2085,74879+20])
                    "arg" (typing/typemod.ml[2085,74879+21]..[2085,74879+24])
                  "mod_type" (typing/typemod.ml[2085,74879+25]..[2085,74879+33])
            ]
            expression (typing/typemod.ml[2086,74916+2]..[2089,75075+50])
              Pexp_match
              expression (typing/typemod.ml[2086,74916+8]..[2086,74916+58])
                Pexp_tuple
                [
                  expression (typing/typemod.ml[2086,74916+8]..[2086,74916+38])
                    Pexp_field
                    expression (typing/typemod.ml[2086,74916+8]..[2086,74916+16])
                      Pexp_ident "app_view" (typing/typemod.ml[2086,74916+8]..[2086,74916+16])
                    "arg_is_syntactic_unit" (typing/typemod.ml[2086,74916+17]..[2086,74916+38])
                  expression (typing/typemod.ml[2086,74916+41]..[2086,74916+58])
                    Pexp_field
                    expression (typing/typemod.ml[2086,74916+41]..[2086,74916+49])
                      Pexp_ident "app_view" (typing/typemod.ml[2086,74916+41]..[2086,74916+49])
                    "arg_path" (typing/typemod.ml[2086,74916+50]..[2086,74916+58])
                ]
              [
                <case>
                  pattern (typing/typemod.ml[2087,74980+4]..[2087,74980+13])
                    Ppat_tuple
                    [
                      pattern (typing/typemod.ml[2087,74980+4]..[2087,74980+8])
                        Ppat_construct "true" (typing/typemod.ml[2087,74980+4]..[2087,74980+8])
                        None
                      pattern (typing/typemod.ml[2087,74980+12]..[2087,74980+13])
                        Ppat_any
                    ]
                  expression (typing/typemod.ml[2087,74980+17]..[2087,74980+43])
                    Pexp_tuple
                    [
                      expression (typing/typemod.ml[2087,74980+17]..[2087,74980+38])
                        Pexp_construct "Includemod.Error.Unit" (typing/typemod.ml[2087,74980+17]..[2087,74980+38])
                        None
                      expression (typing/typemod.ml[2087,74980+40]..[2087,74980+43])
                        Pexp_ident "mty" (typing/typemod.ml[2087,74980+40]..[2087,74980+43])
                    ]
                <case>
                  pattern (typing/typemod.ml[2088,75024+4]..[2088,75024+17])
                    Ppat_tuple
                    [
                      pattern (typing/typemod.ml[2088,75024+4]..[2088,75024+9])
                        Ppat_construct "false" (typing/typemod.ml[2088,75024+4]..[2088,75024+9])
                        None
                      pattern (typing/typemod.ml[2088,75024+11]..[2088,75024+17])
                        Ppat_construct "Some" (typing/typemod.ml[2088,75024+11]..[2088,75024+15])
                        Some
                          []
                          pattern (typing/typemod.ml[2088,75024+16]..[2088,75024+17])
                            Ppat_var "p" (typing/typemod.ml[2088,75024+16]..[2088,75024+17])
                    ]
                  expression (typing/typemod.ml[2088,75024+21]..[2088,75024+50])
                    Pexp_tuple
                    [
                      expression (typing/typemod.ml[2088,75024+21]..[2088,75024+45])
                        Pexp_construct "Includemod.Error.Named" (typing/typemod.ml[2088,75024+21]..[2088,75024+43])
                        Some
                          expression (typing/typemod.ml[2088,75024+44]..[2088,75024+45])
                            Pexp_ident "p" (typing/typemod.ml[2088,75024+44]..[2088,75024+45])
                      expression (typing/typemod.ml[2088,75024+47]..[2088,75024+50])
                        Pexp_ident "mty" (typing/typemod.ml[2088,75024+47]..[2088,75024+50])
                    ]
                <case>
                  pattern (typing/typemod.ml[2089,75075+4]..[2089,75075+15])
                    Ppat_tuple
                    [
                      pattern (typing/typemod.ml[2089,75075+4]..[2089,75075+9])
                        Ppat_construct "false" (typing/typemod.ml[2089,75075+4]..[2089,75075+9])
                        None
                      pattern (typing/typemod.ml[2089,75075+11]..[2089,75075+15])
                        Ppat_construct "None" (typing/typemod.ml[2089,75075+11]..[2089,75075+15])
                        None
                    ]
                  expression (typing/typemod.ml[2089,75075+19]..[2089,75075+50])
                    Pexp_tuple
                    [
                      expression (typing/typemod.ml[2089,75075+19]..[2089,75075+45])
                        Pexp_construct "Includemod.Error.Anonymous" (typing/typemod.ml[2089,75075+19]..[2089,75075+45])
                        None
                      expression (typing/typemod.ml[2089,75075+47]..[2089,75075+50])
                        Pexp_ident "mty" (typing/typemod.ml[2089,75075+47]..[2089,75075+50])
                    ]
              ]
    ]
  structure_item (typing/typemod.ml[2091,75127+0]..[2686,98591+46])
    Pstr_value Rec
    [
      <def>
        pattern (typing/typemod.ml[2091,75127+8]..[2091,75127+19])
          Ppat_var "type_module" (typing/typemod.ml[2091,75127+8]..[2091,75127+19])
        expression (typing/typemod.ml[2091,75127+20]..[2093,75252+70]) ghost
          Pexp_fun
          Optional "alias"
          Some
            expression (typing/typemod.ml[2091,75127+28]..[2091,75127+33])
              Pexp_construct "false" (typing/typemod.ml[2091,75127+28]..[2091,75127+33])
              None
          pattern (typing/typemod.ml[2091,75127+22]..[2091,75127+27])
            Ppat_var "alias" (typing/typemod.ml[2091,75127+22]..[2091,75127+27])
          expression (typing/typemod.ml[2091,75127+35]..[2093,75252+70]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2091,75127+35]..[2091,75127+39])
              Ppat_var "sttn" (typing/typemod.ml[2091,75127+35]..[2091,75127+39])
            expression (typing/typemod.ml[2091,75127+40]..[2093,75252+70]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2091,75127+40]..[2091,75127+50])
                Ppat_var "funct_body" (typing/typemod.ml[2091,75127+40]..[2091,75127+50])
              expression (typing/typemod.ml[2091,75127+51]..[2093,75252+70]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2091,75127+51]..[2091,75127+57])
                  Ppat_var "anchor" (typing/typemod.ml[2091,75127+51]..[2091,75127+57])
                expression (typing/typemod.ml[2091,75127+58]..[2093,75252+70]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[2091,75127+58]..[2091,75127+61])
                    Ppat_var "env" (typing/typemod.ml[2091,75127+58]..[2091,75127+61])
                  expression (typing/typemod.ml[2091,75127+62]..[2093,75252+70]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[2091,75127+62]..[2091,75127+66])
                      Ppat_var "smod" (typing/typemod.ml[2091,75127+62]..[2091,75127+66])
                    expression (typing/typemod.ml[2092,75196+2]..[2093,75252+70])
                      Pexp_apply
                      expression (typing/typemod.ml[2092,75196+2]..[2092,75196+34])
                        Pexp_ident "Builtin_attributes.warning_scope" (typing/typemod.ml[2092,75196+2]..[2092,75196+34])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2092,75196+35]..[2092,75196+55])
                            Pexp_field
                            expression (typing/typemod.ml[2092,75196+35]..[2092,75196+39])
                              Pexp_ident "smod" (typing/typemod.ml[2092,75196+35]..[2092,75196+39])
                            "pmod_attributes" (typing/typemod.ml[2092,75196+40]..[2092,75196+55])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2093,75252+4]..[2093,75252+70])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[2093,75252+9]..[2093,75252+11])
                              Ppat_construct "()" (typing/typemod.ml[2093,75252+9]..[2093,75252+11])
                              None
                            expression (typing/typemod.ml[2093,75252+15]..[2093,75252+69])
                              Pexp_apply
                              expression (typing/typemod.ml[2093,75252+15]..[2093,75252+30])
                                Pexp_ident "type_module_aux" (typing/typemod.ml[2093,75252+15]..[2093,75252+30])
                              [
                                <arg>
                                Labelled "alias"
                                  expression (typing/typemod.ml[2093,75252+32]..[2093,75252+37])
                                    Pexp_ident "alias" (typing/typemod.ml[2093,75252+32]..[2093,75252+37])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2093,75252+38]..[2093,75252+42])
                                    Pexp_ident "sttn" (typing/typemod.ml[2093,75252+38]..[2093,75252+42])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2093,75252+43]..[2093,75252+53])
                                    Pexp_ident "funct_body" (typing/typemod.ml[2093,75252+43]..[2093,75252+53])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2093,75252+54]..[2093,75252+60])
                                    Pexp_ident "anchor" (typing/typemod.ml[2093,75252+54]..[2093,75252+60])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2093,75252+61]..[2093,75252+64])
                                    Pexp_ident "env" (typing/typemod.ml[2093,75252+61]..[2093,75252+64])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2093,75252+65]..[2093,75252+69])
                                    Pexp_ident "smod" (typing/typemod.ml[2093,75252+65]..[2093,75252+69])
                              ]
                      ]
      <def>
        pattern (typing/typemod.ml[2095,75324+4]..[2095,75324+19])
          Ppat_var "type_module_aux" (typing/typemod.ml[2095,75324+4]..[2095,75324+19])
        expression (typing/typemod.ml[2095,75324+20]..[2219,80292+71]) ghost
          Pexp_fun
          Labelled "alias"
          None
          pattern (typing/typemod.ml[2095,75324+21]..[2095,75324+26])
            Ppat_var "alias" (typing/typemod.ml[2095,75324+21]..[2095,75324+26])
          expression (typing/typemod.ml[2095,75324+27]..[2219,80292+71]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2095,75324+27]..[2095,75324+31])
              Ppat_var "sttn" (typing/typemod.ml[2095,75324+27]..[2095,75324+31])
            expression (typing/typemod.ml[2095,75324+32]..[2219,80292+71]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2095,75324+32]..[2095,75324+42])
                Ppat_var "funct_body" (typing/typemod.ml[2095,75324+32]..[2095,75324+42])
              expression (typing/typemod.ml[2095,75324+43]..[2219,80292+71]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2095,75324+43]..[2095,75324+49])
                  Ppat_var "anchor" (typing/typemod.ml[2095,75324+43]..[2095,75324+49])
                expression (typing/typemod.ml[2095,75324+50]..[2219,80292+71]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[2095,75324+50]..[2095,75324+53])
                    Ppat_var "env" (typing/typemod.ml[2095,75324+50]..[2095,75324+53])
                  expression (typing/typemod.ml[2095,75324+54]..[2219,80292+71]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[2095,75324+54]..[2095,75324+58])
                      Ppat_var "smod" (typing/typemod.ml[2095,75324+54]..[2095,75324+58])
                    expression (typing/typemod.ml[2096,75385+2]..[2219,80292+71])
                      Pexp_match
                      expression (typing/typemod.ml[2096,75385+8]..[2096,75385+22])
                        Pexp_field
                        expression (typing/typemod.ml[2096,75385+8]..[2096,75385+12])
                          Pexp_ident "smod" (typing/typemod.ml[2096,75385+8]..[2096,75385+12])
                        "pmod_desc" (typing/typemod.ml[2096,75385+13]..[2096,75385+22])
                      [
                        <case>
                          pattern (typing/typemod.ml[2097,75413+4]..[2097,75413+18])
                            Ppat_construct "Pmod_ident" (typing/typemod.ml[2097,75413+4]..[2097,75413+14])
                            Some
                              []
                              pattern (typing/typemod.ml[2097,75413+15]..[2097,75413+18])
                                Ppat_var "lid" (typing/typemod.ml[2097,75413+15]..[2097,75413+18])
                          expression (typing/typemod.ml[2098,75435+6]..[2127,76670+11])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[2098,75435+10]..[2098,75435+14])
                                  Ppat_var "path" (typing/typemod.ml[2098,75435+10]..[2098,75435+14])
                                expression (typing/typemod.ml[2099,75452+8]..[2099,75452+79])
                                  Pexp_apply
                                  expression (typing/typemod.ml[2099,75452+8]..[2099,75452+30])
                                    Pexp_ident "Env.lookup_module_path" (typing/typemod.ml[2099,75452+8]..[2099,75452+30])
                                  [
                                    <arg>
                                    Labelled "load"
                                      expression (typing/typemod.ml[2099,75452+37]..[2099,75452+48])
                                        Pexp_apply
                                        expression (typing/typemod.ml[2099,75452+38]..[2099,75452+41])
                                          Pexp_ident "not" (typing/typemod.ml[2099,75452+38]..[2099,75452+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[2099,75452+42]..[2099,75452+47])
                                              Pexp_ident "alias" (typing/typemod.ml[2099,75452+42]..[2099,75452+47])
                                        ]
                                    <arg>
                                    Labelled "loc"
                                      expression (typing/typemod.ml[2099,75452+54]..[2099,75452+67])
                                        Pexp_field
                                        expression (typing/typemod.ml[2099,75452+54]..[2099,75452+58])
                                          Pexp_ident "smod" (typing/typemod.ml[2099,75452+54]..[2099,75452+58])
                                        "pmod_loc" (typing/typemod.ml[2099,75452+59]..[2099,75452+67])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2099,75452+68]..[2099,75452+75])
                                        Pexp_field
                                        expression (typing/typemod.ml[2099,75452+68]..[2099,75452+71])
                                          Pexp_ident "lid" (typing/typemod.ml[2099,75452+68]..[2099,75452+71])
                                        "txt" (typing/typemod.ml[2099,75452+72]..[2099,75452+75])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2099,75452+76]..[2099,75452+79])
                                        Pexp_ident "env" (typing/typemod.ml[2099,75452+76]..[2099,75452+79])
                                  ]
                            ]
                            expression (typing/typemod.ml[2101,75541+6]..[2127,76670+11])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[2101,75541+10]..[2101,75541+12])
                                    Ppat_var "md" (typing/typemod.ml[2101,75541+10]..[2101,75541+12])
                                  expression (typing/typemod.ml[2101,75541+15]..[2105,75725+42])
                                    Pexp_record
                                    [
                                      "mod_desc" (typing/typemod.ml[2101,75541+17]..[2101,75541+25])
                                        expression (typing/typemod.ml[2101,75541+28]..[2101,75541+50])
                                          Pexp_construct "Tmod_ident" (typing/typemod.ml[2101,75541+28]..[2101,75541+38])
                                          Some
                                            expression (typing/typemod.ml[2101,75541+39]..[2101,75541+50])
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[2101,75541+40]..[2101,75541+44])
                                                  Pexp_ident "path" (typing/typemod.ml[2101,75541+40]..[2101,75541+44])
                                                expression (typing/typemod.ml[2101,75541+46]..[2101,75541+49])
                                                  Pexp_ident "lid" (typing/typemod.ml[2101,75541+46]..[2101,75541+49])
                                              ]
                                      "mod_type" (typing/typemod.ml[2102,75593+17]..[2102,75593+25])
                                        expression (typing/typemod.ml[2102,75593+28]..[2102,75593+42])
                                          Pexp_construct "Mty_alias" (typing/typemod.ml[2102,75593+28]..[2102,75593+37])
                                          Some
                                            expression (typing/typemod.ml[2102,75593+38]..[2102,75593+42])
                                              Pexp_ident "path" (typing/typemod.ml[2102,75593+38]..[2102,75593+42])
                                      "mod_env" (typing/typemod.ml[2103,75637+17]..[2103,75637+24])
                                        expression (typing/typemod.ml[2103,75637+27]..[2103,75637+30])
                                          Pexp_ident "env" (typing/typemod.ml[2103,75637+27]..[2103,75637+30])
                                      "mod_attributes" (typing/typemod.ml[2104,75669+17]..[2104,75669+31])
                                        expression (typing/typemod.ml[2104,75669+34]..[2104,75669+54])
                                          Pexp_field
                                          expression (typing/typemod.ml[2104,75669+34]..[2104,75669+38])
                                            Pexp_ident "smod" (typing/typemod.ml[2104,75669+34]..[2104,75669+38])
                                          "pmod_attributes" (typing/typemod.ml[2104,75669+39]..[2104,75669+54])
                                      "mod_loc" (typing/typemod.ml[2105,75725+17]..[2105,75725+24])
                                        expression (typing/typemod.ml[2105,75725+27]..[2105,75725+40])
                                          Pexp_field
                                          expression (typing/typemod.ml[2105,75725+27]..[2105,75725+31])
                                            Pexp_ident "smod" (typing/typemod.ml[2105,75725+27]..[2105,75725+31])
                                          "pmod_loc" (typing/typemod.ml[2105,75725+32]..[2105,75725+40])
                                    ]
                                    None
                              ]
                              expression (typing/typemod.ml[2106,75771+6]..[2127,76670+11])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[2106,75771+10]..[2106,75771+19])
                                      Ppat_var "aliasable" (typing/typemod.ml[2106,75771+10]..[2106,75771+19])
                                    expression (typing/typemod.ml[2106,75771+22]..[2106,75771+55])
                                      Pexp_apply
                                      expression (typing/typemod.ml[2106,75771+22]..[2106,75771+25])
                                        Pexp_ident "not" (typing/typemod.ml[2106,75771+22]..[2106,75771+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2106,75771+26]..[2106,75771+55])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2106,75771+27]..[2106,75771+45])
                                              Pexp_ident "Env.is_functor_arg" (typing/typemod.ml[2106,75771+27]..[2106,75771+45])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2106,75771+46]..[2106,75771+50])
                                                  Pexp_ident "path" (typing/typemod.ml[2106,75771+46]..[2106,75771+50])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2106,75771+51]..[2106,75771+54])
                                                  Pexp_ident "env" (typing/typemod.ml[2106,75771+51]..[2106,75771+54])
                                            ]
                                      ]
                                ]
                                expression (typing/typemod.ml[2107,75830+6]..[2127,76670+11])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typemod.ml[2107,75830+10]..[2107,75830+12])
                                        Ppat_var "md" (typing/typemod.ml[2107,75830+10]..[2107,75830+12])
                                      expression (typing/typemod.ml[2108,75845+8]..[2126,76631+38])
                                        Pexp_ifthenelse
                                        expression (typing/typemod.ml[2108,75845+11]..[2108,75845+29])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2108,75845+17]..[2108,75845+19])
                                            Pexp_ident "&&" (typing/typemod.ml[2108,75845+17]..[2108,75845+19])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2108,75845+11]..[2108,75845+16])
                                                Pexp_ident "alias" (typing/typemod.ml[2108,75845+11]..[2108,75845+16])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2108,75845+20]..[2108,75845+29])
                                                Pexp_ident "aliasable" (typing/typemod.ml[2108,75845+20]..[2108,75845+29])
                                          ]
                                        expression (typing/typemod.ml[2109,75880+10]..[2109,75880+56])
                                          Pexp_sequence
                                          expression (typing/typemod.ml[2109,75880+11]..[2109,75880+51])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2109,75880+11]..[2109,75880+34])
                                              Pexp_ident "Env.add_required_global" (typing/typemod.ml[2109,75880+11]..[2109,75880+34])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2109,75880+35]..[2109,75880+51])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2109,75880+36]..[2109,75880+45])
                                                    Pexp_ident "Path.head" (typing/typemod.ml[2109,75880+36]..[2109,75880+45])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2109,75880+46]..[2109,75880+50])
                                                        Pexp_ident "path" (typing/typemod.ml[2109,75880+46]..[2109,75880+50])
                                                  ]
                                            ]
                                          expression (typing/typemod.ml[2109,75880+53]..[2109,75880+55])
                                            Pexp_ident "md" (typing/typemod.ml[2109,75880+53]..[2109,75880+55])
                                        Some
                                          expression (typing/typemod.ml[2110,75937+13]..[2126,76631+38])
                                            Pexp_match
                                            expression (typing/typemod.ml[2110,75937+19]..[2110,75937+53])
                                              Pexp_field
                                              expression (typing/typemod.ml[2110,75937+19]..[2110,75937+45])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2110,75937+20]..[2110,75937+35])
                                                  Pexp_ident "Env.find_module" (typing/typemod.ml[2110,75937+20]..[2110,75937+35])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2110,75937+36]..[2110,75937+40])
                                                      Pexp_ident "path" (typing/typemod.ml[2110,75937+36]..[2110,75937+40])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2110,75937+41]..[2110,75937+44])
                                                      Pexp_ident "env" (typing/typemod.ml[2110,75937+41]..[2110,75937+44])
                                                ]
                                              "md_type" (typing/typemod.ml[2110,75937+46]..[2110,75937+53])
                                            [
                                              <case>
                                                pattern (typing/typemod.ml[2111,75996+10]..[2111,75996+22])
                                                  Ppat_construct "Mty_alias" (typing/typemod.ml[2111,75996+10]..[2111,75996+19])
                                                  Some
                                                    []
                                                    pattern (typing/typemod.ml[2111,75996+20]..[2111,75996+22])
                                                      Ppat_var "p1" (typing/typemod.ml[2111,75996+20]..[2111,75996+22])
                                                <when>
                                                  expression (typing/typemod.ml[2111,75996+28]..[2111,75996+37])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[2111,75996+28]..[2111,75996+31])
                                                      Pexp_ident "not" (typing/typemod.ml[2111,75996+28]..[2111,75996+31])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2111,75996+32]..[2111,75996+37])
                                                          Pexp_ident "alias" (typing/typemod.ml[2111,75996+32]..[2111,75996+37])
                                                    ]
                                                expression (typing/typemod.ml[2112,76037+12]..[2120,76459+26])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typemod.ml[2112,76037+16]..[2112,76037+18])
                                                        Ppat_var "p1" (typing/typemod.ml[2112,76037+16]..[2112,76037+18])
                                                      expression (typing/typemod.ml[2112,76037+21]..[2112,76037+74])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2112,76037+21]..[2112,76037+46])
                                                          Pexp_ident "Env.normalize_module_path" (typing/typemod.ml[2112,76037+21]..[2112,76037+46])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2112,76037+47]..[2112,76037+67])
                                                              Pexp_construct "Some" (typing/typemod.ml[2112,76037+48]..[2112,76037+52])
                                                              Some
                                                                expression (typing/typemod.ml[2112,76037+53]..[2112,76037+66])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[2112,76037+53]..[2112,76037+57])
                                                                    Pexp_ident "smod" (typing/typemod.ml[2112,76037+53]..[2112,76037+57])
                                                                  "pmod_loc" (typing/typemod.ml[2112,76037+58]..[2112,76037+66])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2112,76037+68]..[2112,76037+71])
                                                              Pexp_ident "env" (typing/typemod.ml[2112,76037+68]..[2112,76037+71])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2112,76037+72]..[2112,76037+74])
                                                              Pexp_ident "p1" (typing/typemod.ml[2112,76037+72]..[2112,76037+74])
                                                        ]
                                                  ]
                                                  expression (typing/typemod.ml[2113,76115+12]..[2120,76459+26])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typemod.ml[2113,76115+16]..[2113,76115+19])
                                                          Ppat_var "mty" (typing/typemod.ml[2113,76115+16]..[2113,76115+19])
                                                        expression (typing/typemod.ml[2113,76115+22]..[2113,76115+59])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[2113,76115+22]..[2113,76115+52])
                                                            Pexp_ident "Includemod.expand_module_alias" (typing/typemod.ml[2113,76115+22]..[2113,76115+52])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2113,76115+53]..[2113,76115+56])
                                                                Pexp_ident "env" (typing/typemod.ml[2113,76115+53]..[2113,76115+56])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2113,76115+57]..[2113,76115+59])
                                                                Pexp_ident "p1" (typing/typemod.ml[2113,76115+57]..[2113,76115+59])
                                                          ]
                                                    ]
                                                    expression (typing/typemod.ml[2114,76178+12]..[2120,76459+26])
                                                      Pexp_record
                                                      [
                                                        "mod_desc" (typing/typemod.ml[2115,76200+14]..[2115,76200+22])
                                                          expression (typing/typemod.ml[2116,76225+16]..[2117,76286+73])
                                                            Pexp_construct "Tmod_constraint" (typing/typemod.ml[2116,76225+16]..[2116,76225+31])
                                                            Some
                                                              expression (typing/typemod.ml[2116,76225+32]..[2117,76286+73])
                                                                Pexp_tuple
                                                                [
                                                                  expression (typing/typemod.ml[2116,76225+33]..[2116,76225+35])
                                                                    Pexp_ident "md" (typing/typemod.ml[2116,76225+33]..[2116,76225+35])
                                                                  expression (typing/typemod.ml[2116,76225+37]..[2116,76225+40])
                                                                    Pexp_ident "mty" (typing/typemod.ml[2116,76225+37]..[2116,76225+40])
                                                                  expression (typing/typemod.ml[2116,76225+42]..[2116,76225+59])
                                                                    Pexp_construct "Tmodtype_implicit" (typing/typemod.ml[2116,76225+42]..[2116,76225+59])
                                                                    None
                                                                  expression (typing/typemod.ml[2117,76286+33]..[2117,76286+72])
                                                                    Pexp_construct "Tcoerce_alias" (typing/typemod.ml[2117,76286+33]..[2117,76286+46])
                                                                    Some
                                                                      expression (typing/typemod.ml[2117,76286+47]..[2117,76286+72])
Pexp_tuple
[
  expression (typing/typemod.ml[2117,76286+48]..[2117,76286+51])
    Pexp_ident "env" (typing/typemod.ml[2117,76286+48]..[2117,76286+51])
  expression (typing/typemod.ml[2117,76286+53]..[2117,76286+57])
    Pexp_ident "path" (typing/typemod.ml[2117,76286+53]..[2117,76286+57])
  expression (typing/typemod.ml[2117,76286+59]..[2117,76286+71])
    Pexp_construct "Tcoerce_none" (typing/typemod.ml[2117,76286+59]..[2117,76286+71])
    None
]
                                                                ]
                                                        "mod_type" (typing/typemod.ml[2118,76361+14]..[2118,76361+22])
                                                          expression (typing/typemod.ml[2119,76386+16]..[2120,76459+24])
                                                            Pexp_ifthenelse
                                                            expression (typing/typemod.ml[2119,76386+19]..[2119,76386+23])
                                                              Pexp_ident "sttn" (typing/typemod.ml[2119,76386+19]..[2119,76386+23])
                                                            expression (typing/typemod.ml[2119,76386+29]..[2119,76386+72])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[2119,76386+29]..[2119,76386+45])
                                                                Pexp_ident "Mtype.strengthen" (typing/typemod.ml[2119,76386+29]..[2119,76386+45])
                                                              [
                                                                <arg>
                                                                Labelled "aliasable"
                                                                  expression (typing/typemod.ml[2119,76386+57]..[2119,76386+61])
                                                                    Pexp_construct "true" (typing/typemod.ml[2119,76386+57]..[2119,76386+61])
                                                                    None
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[2119,76386+62]..[2119,76386+65])
                                                                    Pexp_ident "env" (typing/typemod.ml[2119,76386+62]..[2119,76386+65])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[2119,76386+66]..[2119,76386+69])
                                                                    Pexp_ident "mty" (typing/typemod.ml[2119,76386+66]..[2119,76386+69])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[2119,76386+70]..[2119,76386+72])
                                                                    Pexp_ident "p1" (typing/typemod.ml[2119,76386+70]..[2119,76386+72])
                                                              ]
                                                            Some
                                                              expression (typing/typemod.ml[2120,76459+21]..[2120,76459+24])
                                                                Pexp_ident "mty" (typing/typemod.ml[2120,76459+21]..[2120,76459+24])
                                                      ]
                                                      Some
                                                        expression (typing/typemod.ml[2114,76178+14]..[2114,76178+16])
                                                          Pexp_ident "md" (typing/typemod.ml[2114,76178+14]..[2114,76178+16])
                                              <case>
                                                pattern (typing/typemod.ml[2121,76486+10]..[2121,76486+13])
                                                  Ppat_var "mty" (typing/typemod.ml[2121,76486+10]..[2121,76486+13])
                                                expression (typing/typemod.ml[2122,76503+12]..[2126,76631+38])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typemod.ml[2122,76503+16]..[2122,76503+19])
                                                        Ppat_var "mty" (typing/typemod.ml[2122,76503+16]..[2122,76503+19])
                                                      expression (typing/typemod.ml[2123,76525+14]..[2124,76593+22])
                                                        Pexp_ifthenelse
                                                        expression (typing/typemod.ml[2123,76525+17]..[2123,76525+21])
                                                          Pexp_ident "sttn" (typing/typemod.ml[2123,76525+17]..[2123,76525+21])
                                                        expression (typing/typemod.ml[2123,76525+27]..[2123,76525+67])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[2123,76525+27]..[2123,76525+43])
                                                            Pexp_ident "Mtype.strengthen" (typing/typemod.ml[2123,76525+27]..[2123,76525+43])
                                                          [
                                                            <arg>
                                                            Labelled "aliasable"
                                                              expression (typing/typemod.ml[2123,76525+45]..[2123,76525+54])
                                                                Pexp_ident "aliasable" (typing/typemod.ml[2123,76525+45]..[2123,76525+54])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2123,76525+55]..[2123,76525+58])
                                                                Pexp_ident "env" (typing/typemod.ml[2123,76525+55]..[2123,76525+58])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2123,76525+59]..[2123,76525+62])
                                                                Pexp_ident "mty" (typing/typemod.ml[2123,76525+59]..[2123,76525+62])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2123,76525+63]..[2123,76525+67])
                                                                Pexp_ident "path" (typing/typemod.ml[2123,76525+63]..[2123,76525+67])
                                                          ]
                                                        Some
                                                          expression (typing/typemod.ml[2124,76593+19]..[2124,76593+22])
                                                            Pexp_ident "mty" (typing/typemod.ml[2124,76593+19]..[2124,76593+22])
                                                  ]
                                                  expression (typing/typemod.ml[2126,76631+12]..[2126,76631+38])
                                                    Pexp_record
                                                    [
                                                      "mod_type" (typing/typemod.ml[2126,76631+22]..[2126,76631+30])
                                                        expression (typing/typemod.ml[2126,76631+33]..[2126,76631+36])
                                                          Pexp_ident "mty" (typing/typemod.ml[2126,76631+33]..[2126,76631+36])
                                                    ]
                                                    Some
                                                      expression (typing/typemod.ml[2126,76631+14]..[2126,76631+16])
                                                        Pexp_ident "md" (typing/typemod.ml[2126,76631+14]..[2126,76631+16])
                                            ]
                                  ]
                                  expression (typing/typemod.ml[2127,76670+9]..[2127,76670+11])
                                    Pexp_ident "md" (typing/typemod.ml[2127,76670+9]..[2127,76670+11])
                        <case>
                          pattern (typing/typemod.ml[2128,76682+4]..[2128,76682+23])
                            Ppat_construct "Pmod_structure" (typing/typemod.ml[2128,76682+4]..[2128,76682+18])
                            Some
                              []
                              pattern (typing/typemod.ml[2128,76682+19]..[2128,76682+23])
                                Ppat_var "sstr" (typing/typemod.ml[2128,76682+19]..[2128,76682+23])
                          expression (typing/typemod.ml[2129,76709+6]..[2141,77189+25])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[2129,76709+10]..[2129,76709+37])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[2129,76709+11]..[2129,76709+14])
                                      Ppat_var "str" (typing/typemod.ml[2129,76709+11]..[2129,76709+14])
                                    pattern (typing/typemod.ml[2129,76709+16]..[2129,76709+18])
                                      Ppat_var "sg" (typing/typemod.ml[2129,76709+16]..[2129,76709+18])
                                    pattern (typing/typemod.ml[2129,76709+20]..[2129,76709+25])
                                      Ppat_var "names" (typing/typemod.ml[2129,76709+20]..[2129,76709+25])
                                    pattern (typing/typemod.ml[2129,76709+27]..[2129,76709+36])
                                      Ppat_var "_finalenv" (typing/typemod.ml[2129,76709+27]..[2129,76709+36])
                                  ]
                                expression (typing/typemod.ml[2130,76749+8]..[2130,76749+49])
                                  Pexp_apply
                                  expression (typing/typemod.ml[2130,76749+8]..[2130,76749+22])
                                    Pexp_ident "type_structure" (typing/typemod.ml[2130,76749+8]..[2130,76749+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2130,76749+23]..[2130,76749+33])
                                        Pexp_ident "funct_body" (typing/typemod.ml[2130,76749+23]..[2130,76749+33])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2130,76749+34]..[2130,76749+40])
                                        Pexp_ident "anchor" (typing/typemod.ml[2130,76749+34]..[2130,76749+40])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2130,76749+41]..[2130,76749+44])
                                        Pexp_ident "env" (typing/typemod.ml[2130,76749+41]..[2130,76749+44])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2130,76749+45]..[2130,76749+49])
                                        Pexp_ident "sstr" (typing/typemod.ml[2130,76749+45]..[2130,76749+49])
                                  ]
                            ]
                            expression (typing/typemod.ml[2131,76802+6]..[2141,77189+25])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[2131,76802+10]..[2131,76802+12])
                                    Ppat_var "md" (typing/typemod.ml[2131,76802+10]..[2131,76802+12])
                                  expression (typing/typemod.ml[2132,76817+8]..[2136,76971+35])
                                    Pexp_record
                                    [
                                      "mod_desc" (typing/typemod.ml[2132,76817+10]..[2132,76817+18])
                                        expression (typing/typemod.ml[2132,76817+21]..[2132,76817+39])
                                          Pexp_construct "Tmod_structure" (typing/typemod.ml[2132,76817+21]..[2132,76817+35])
                                          Some
                                            expression (typing/typemod.ml[2132,76817+36]..[2132,76817+39])
                                              Pexp_ident "str" (typing/typemod.ml[2132,76817+36]..[2132,76817+39])
                                      "mod_type" (typing/typemod.ml[2133,76858+10]..[2133,76858+18])
                                        expression (typing/typemod.ml[2133,76858+21]..[2133,76858+37])
                                          Pexp_construct "Mty_signature" (typing/typemod.ml[2133,76858+21]..[2133,76858+34])
                                          Some
                                            expression (typing/typemod.ml[2133,76858+35]..[2133,76858+37])
                                              Pexp_ident "sg" (typing/typemod.ml[2133,76858+35]..[2133,76858+37])
                                      "mod_env" (typing/typemod.ml[2134,76897+10]..[2134,76897+17])
                                        expression (typing/typemod.ml[2134,76897+20]..[2134,76897+23])
                                          Pexp_ident "env" (typing/typemod.ml[2134,76897+20]..[2134,76897+23])
                                      "mod_attributes" (typing/typemod.ml[2135,76922+10]..[2135,76922+24])
                                        expression (typing/typemod.ml[2135,76922+27]..[2135,76922+47])
                                          Pexp_field
                                          expression (typing/typemod.ml[2135,76922+27]..[2135,76922+31])
                                            Pexp_ident "smod" (typing/typemod.ml[2135,76922+27]..[2135,76922+31])
                                          "pmod_attributes" (typing/typemod.ml[2135,76922+32]..[2135,76922+47])
                                      "mod_loc" (typing/typemod.ml[2136,76971+10]..[2136,76971+17])
                                        expression (typing/typemod.ml[2136,76971+20]..[2136,76971+33])
                                          Pexp_field
                                          expression (typing/typemod.ml[2136,76971+20]..[2136,76971+24])
                                            Pexp_ident "smod" (typing/typemod.ml[2136,76971+20]..[2136,76971+24])
                                          "pmod_loc" (typing/typemod.ml[2136,76971+25]..[2136,76971+33])
                                    ]
                                    None
                              ]
                              expression (typing/typemod.ml[2138,77016+6]..[2141,77189+25])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[2138,77016+10]..[2138,77016+13])
                                      Ppat_var "sg'" (typing/typemod.ml[2138,77016+10]..[2138,77016+13])
                                    expression (typing/typemod.ml[2138,77016+16]..[2138,77016+59])
                                      Pexp_apply
                                      expression (typing/typemod.ml[2138,77016+16]..[2138,77016+40])
                                        Pexp_ident "Signature_names.simplify" (typing/typemod.ml[2138,77016+16]..[2138,77016+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2138,77016+41]..[2138,77016+50])
                                            Pexp_ident "_finalenv" (typing/typemod.ml[2138,77016+41]..[2138,77016+50])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2138,77016+51]..[2138,77016+56])
                                            Pexp_ident "names" (typing/typemod.ml[2138,77016+51]..[2138,77016+56])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2138,77016+57]..[2138,77016+59])
                                            Pexp_ident "sg" (typing/typemod.ml[2138,77016+57]..[2138,77016+59])
                                      ]
                                ]
                                expression (typing/typemod.ml[2139,77079+6]..[2141,77189+25])
                                  Pexp_ifthenelse
                                  expression (typing/typemod.ml[2139,77079+9]..[2139,77079+41])
                                    Pexp_apply
                                    expression (typing/typemod.ml[2139,77079+25]..[2139,77079+26])
                                      Pexp_ident "=" (typing/typemod.ml[2139,77079+25]..[2139,77079+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2139,77079+9]..[2139,77079+24])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2139,77079+9]..[2139,77079+20])
                                            Pexp_ident "List.length" (typing/typemod.ml[2139,77079+9]..[2139,77079+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2139,77079+21]..[2139,77079+24])
                                                Pexp_ident "sg'" (typing/typemod.ml[2139,77079+21]..[2139,77079+24])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2139,77079+27]..[2139,77079+41])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2139,77079+27]..[2139,77079+38])
                                            Pexp_ident "List.length" (typing/typemod.ml[2139,77079+27]..[2139,77079+38])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2139,77079+39]..[2139,77079+41])
                                                Pexp_ident "sg" (typing/typemod.ml[2139,77079+39]..[2139,77079+41])
                                          ]
                                    ]
                                  expression (typing/typemod.ml[2139,77079+47]..[2139,77079+49])
                                    Pexp_ident "md" (typing/typemod.ml[2139,77079+47]..[2139,77079+49])
                                  Some
                                    expression (typing/typemod.ml[2140,77134+6]..[2141,77189+25])
                                      Pexp_apply
                                      expression (typing/typemod.ml[2140,77134+6]..[2140,77134+21])
                                        Pexp_ident "wrap_constraint" (typing/typemod.ml[2140,77134+6]..[2140,77134+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2140,77134+22]..[2140,77134+25])
                                            Pexp_ident "env" (typing/typemod.ml[2140,77134+22]..[2140,77134+25])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2140,77134+26]..[2140,77134+31])
                                            Pexp_construct "false" (typing/typemod.ml[2140,77134+26]..[2140,77134+31])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2140,77134+32]..[2140,77134+34])
                                            Pexp_ident "md" (typing/typemod.ml[2140,77134+32]..[2140,77134+34])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2140,77134+35]..[2140,77134+54])
                                            Pexp_construct "Mty_signature" (typing/typemod.ml[2140,77134+36]..[2140,77134+49])
                                            Some
                                              expression (typing/typemod.ml[2140,77134+50]..[2140,77134+53])
                                                Pexp_ident "sg'" (typing/typemod.ml[2140,77134+50]..[2140,77134+53])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2141,77189+8]..[2141,77189+25])
                                            Pexp_construct "Tmodtype_implicit" (typing/typemod.ml[2141,77189+8]..[2141,77189+25])
                                            None
                                      ]
                        <case>
                          pattern (typing/typemod.ml[2142,77215+4]..[2142,77215+32])
                            Ppat_construct "Pmod_functor" (typing/typemod.ml[2142,77215+4]..[2142,77215+16])
                            Some
                              []
                              pattern (typing/typemod.ml[2142,77215+16]..[2142,77215+32])
                                Ppat_tuple
                                [
                                  pattern (typing/typemod.ml[2142,77215+17]..[2142,77215+24])
                                    Ppat_var "arg_opt" (typing/typemod.ml[2142,77215+17]..[2142,77215+24])
                                  pattern (typing/typemod.ml[2142,77215+26]..[2142,77215+31])
                                    Ppat_var "sbody" (typing/typemod.ml[2142,77215+26]..[2142,77215+31])
                                ]
                          expression (typing/typemod.ml[2143,77251+6]..[2173,78406+33])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[2143,77251+10]..[2143,77251+43])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[2143,77251+10]..[2143,77251+15])
                                      Ppat_var "t_arg" (typing/typemod.ml[2143,77251+10]..[2143,77251+15])
                                    pattern (typing/typemod.ml[2143,77251+17]..[2143,77251+23])
                                      Ppat_var "ty_arg" (typing/typemod.ml[2143,77251+17]..[2143,77251+23])
                                    pattern (typing/typemod.ml[2143,77251+25]..[2143,77251+31])
                                      Ppat_var "newenv" (typing/typemod.ml[2143,77251+25]..[2143,77251+31])
                                    pattern (typing/typemod.ml[2143,77251+33]..[2143,77251+43])
                                      Ppat_var "funct_body" (typing/typemod.ml[2143,77251+33]..[2143,77251+43])
                                  ]
                                expression (typing/typemod.ml[2144,77297+8]..[2166,78081+78])
                                  Pexp_match
                                  expression (typing/typemod.ml[2144,77297+14]..[2144,77297+21])
                                    Pexp_ident "arg_opt" (typing/typemod.ml[2144,77297+14]..[2144,77297+21])
                                  [
                                    <case>
                                      pattern (typing/typemod.ml[2145,77324+10]..[2145,77324+14])
                                        Ppat_construct "Unit" (typing/typemod.ml[2145,77324+10]..[2145,77324+14])
                                        None
                                      expression (typing/typemod.ml[2145,77324+18]..[2145,77324+46])
                                        Pexp_tuple
                                        [
                                          expression (typing/typemod.ml[2145,77324+18]..[2145,77324+22])
                                            Pexp_construct "Unit" (typing/typemod.ml[2145,77324+18]..[2145,77324+22])
                                            None
                                          expression (typing/typemod.ml[2145,77324+24]..[2145,77324+34])
                                            Pexp_construct "Types.Unit" (typing/typemod.ml[2145,77324+24]..[2145,77324+34])
                                            None
                                          expression (typing/typemod.ml[2145,77324+36]..[2145,77324+39])
                                            Pexp_ident "env" (typing/typemod.ml[2145,77324+36]..[2145,77324+39])
                                          expression (typing/typemod.ml[2145,77324+41]..[2145,77324+46])
                                            Pexp_construct "false" (typing/typemod.ml[2145,77324+41]..[2145,77324+46])
                                            None
                                        ]
                                    <case>
                                      pattern (typing/typemod.ml[2146,77371+10]..[2146,77371+29])
                                        Ppat_construct "Named" (typing/typemod.ml[2146,77371+10]..[2146,77371+15])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[2146,77371+16]..[2146,77371+29])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[2146,77371+17]..[2146,77371+22])
                                                Ppat_var "param" (typing/typemod.ml[2146,77371+17]..[2146,77371+22])
                                              pattern (typing/typemod.ml[2146,77371+24]..[2146,77371+28])
                                                Ppat_var "smty" (typing/typemod.ml[2146,77371+24]..[2146,77371+28])
                                            ]
                                      expression (typing/typemod.ml[2147,77404+10]..[2166,78081+78])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[2147,77404+14]..[2147,77404+17])
                                              Ppat_var "mty" (typing/typemod.ml[2147,77404+14]..[2147,77404+17])
                                            expression (typing/typemod.ml[2147,77404+20]..[2147,77404+55])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2147,77404+20]..[2147,77404+46])
                                                Pexp_ident "transl_modtype_functor_arg" (typing/typemod.ml[2147,77404+20]..[2147,77404+46])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2147,77404+47]..[2147,77404+50])
                                                    Pexp_ident "env" (typing/typemod.ml[2147,77404+47]..[2147,77404+50])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2147,77404+51]..[2147,77404+55])
                                                    Pexp_ident "smty" (typing/typemod.ml[2147,77404+51]..[2147,77404+55])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[2148,77463+10]..[2166,78081+78])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[2148,77463+14]..[2148,77463+19])
                                                Ppat_var "scope" (typing/typemod.ml[2148,77463+14]..[2148,77463+19])
                                              expression (typing/typemod.ml[2148,77463+22]..[2148,77463+43])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2148,77463+22]..[2148,77463+40])
                                                  Pexp_ident "Ctype.create_scope" (typing/typemod.ml[2148,77463+22]..[2148,77463+40])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2148,77463+41]..[2148,77463+43])
                                                      Pexp_construct "()" (typing/typemod.ml[2148,77463+41]..[2148,77463+43])
                                                      None
                                                ]
                                          ]
                                          expression (typing/typemod.ml[2149,77510+10]..[2166,78081+78])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[2149,77510+14]..[2149,77510+26])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typemod.ml[2149,77510+15]..[2149,77510+17])
                                                      Ppat_var "id" (typing/typemod.ml[2149,77510+15]..[2149,77510+17])
                                                    pattern (typing/typemod.ml[2149,77510+19]..[2149,77510+25])
                                                      Ppat_var "newenv" (typing/typemod.ml[2149,77510+19]..[2149,77510+25])
                                                  ]
                                                expression (typing/typemod.ml[2150,77539+12]..[2164,78038+29])
                                                  Pexp_match
                                                  expression (typing/typemod.ml[2150,77539+18]..[2150,77539+27])
                                                    Pexp_field
                                                    expression (typing/typemod.ml[2150,77539+18]..[2150,77539+23])
                                                      Pexp_ident "param" (typing/typemod.ml[2150,77539+18]..[2150,77539+23])
                                                    "txt" (typing/typemod.ml[2150,77539+24]..[2150,77539+27])
                                                  [
                                                    <case>
                                                      pattern (typing/typemod.ml[2151,77572+14]..[2151,77572+18])
                                                        Ppat_construct "None" (typing/typemod.ml[2151,77572+14]..[2151,77572+18])
                                                        None
                                                      expression (typing/typemod.ml[2151,77572+22]..[2151,77572+31])
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typemod.ml[2151,77572+22]..[2151,77572+26])
                                                            Pexp_construct "None" (typing/typemod.ml[2151,77572+22]..[2151,77572+26])
                                                            None
                                                          expression (typing/typemod.ml[2151,77572+28]..[2151,77572+31])
                                                            Pexp_ident "env" (typing/typemod.ml[2151,77572+28]..[2151,77572+31])
                                                        ]
                                                    <case>
                                                      pattern (typing/typemod.ml[2152,77604+14]..[2152,77604+23])
                                                        Ppat_construct "Some" (typing/typemod.ml[2152,77604+14]..[2152,77604+18])
                                                        Some
                                                          []
                                                          pattern (typing/typemod.ml[2152,77604+19]..[2152,77604+23])
                                                            Ppat_var "name" (typing/typemod.ml[2152,77604+19]..[2152,77604+23])
                                                      expression (typing/typemod.ml[2153,77631+14]..[2164,78038+29])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (typing/typemod.ml[2153,77631+18]..[2153,77631+24])
                                                              Ppat_var "arg_md" (typing/typemod.ml[2153,77631+18]..[2153,77631+24])
                                                            expression (typing/typemod.ml[2154,77658+16]..[2158,77848+17])
                                                              Pexp_record
                                                              [
                                                                "md_type" (typing/typemod.ml[2154,77658+18]..[2154,77658+25])
                                                                  expression (typing/typemod.ml[2154,77658+28]..[2154,77658+40])
                                                                    Pexp_field
                                                                    expression (typing/typemod.ml[2154,77658+28]..[2154,77658+31])
                                                                      Pexp_ident "mty" (typing/typemod.ml[2154,77658+28]..[2154,77658+31])
                                                                    "mty_type" (typing/typemod.ml[2154,77658+32]..[2154,77658+40])
                                                                "md_attributes" (typing/typemod.ml[2155,77700+18]..[2155,77700+31])
                                                                  expression (typing/typemod.ml[2155,77700+34]..[2155,77700+36])
                                                                    Pexp_construct "[]" (typing/typemod.ml[2155,77700+34]..[2155,77700+36])
                                                                    None
                                                                "md_loc" (typing/typemod.ml[2156,77738+18]..[2156,77738+24])
                                                                  expression (typing/typemod.ml[2156,77738+27]..[2156,77738+36])
                                                                    Pexp_field
                                                                    expression (typing/typemod.ml[2156,77738+27]..[2156,77738+32])
                                                                      Pexp_ident "param" (typing/typemod.ml[2156,77738+27]..[2156,77738+32])
                                                                    "loc" (typing/typemod.ml[2156,77738+33]..[2156,77738+36])
                                                                "md_uid" (typing/typemod.ml[2157,77776+18]..[2157,77776+24])
                                                                  expression (typing/typemod.ml[2157,77776+27]..[2157,77776+70])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[2157,77776+27]..[2157,77776+33])
                                                                      Pexp_ident "Uid.mk" (typing/typemod.ml[2157,77776+27]..[2157,77776+33])
                                                                    [
                                                                      <arg>
                                                                      Labelled "current_unit"
expression (typing/typemod.ml[2157,77776+48]..[2157,77776+70])
  Pexp_apply
  expression (typing/typemod.ml[2157,77776+49]..[2157,77776+66])
    Pexp_ident "Env.get_unit_name" (typing/typemod.ml[2157,77776+49]..[2157,77776+66])
  [
    <arg>
    Nolabel
      expression (typing/typemod.ml[2157,77776+67]..[2157,77776+69])
        Pexp_construct "()" (typing/typemod.ml[2157,77776+67]..[2157,77776+69])
        None
  ]
                                                                    ]
                                                              ]
                                                              None
                                                        ]
                                                        expression (typing/typemod.ml[2160,77883+14]..[2164,78038+29])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (typing/typemod.ml[2160,77883+18]..[2160,77883+28])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/typemod.ml[2160,77883+18]..[2160,77883+20])
                                                                    Ppat_var "id" (typing/typemod.ml[2160,77883+18]..[2160,77883+20])
                                                                  pattern (typing/typemod.ml[2160,77883+22]..[2160,77883+28])
                                                                    Ppat_var "newenv" (typing/typemod.ml[2160,77883+22]..[2160,77883+28])
                                                                ]
                                                              expression (typing/typemod.ml[2161,77914+16]..[2162,77992+28])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[2161,77914+16]..[2161,77914+44])
                                                                  Pexp_ident "Env.enter_module_declaration" (typing/typemod.ml[2161,77914+16]..[2161,77914+44])
                                                                [
                                                                  <arg>
                                                                  Labelled "scope"
                                                                    expression (typing/typemod.ml[2161,77914+46]..[2161,77914+51])
                                                                      Pexp_ident "scope" (typing/typemod.ml[2161,77914+46]..[2161,77914+51])
                                                                  <arg>
                                                                  Labelled "arg"
                                                                    expression (typing/typemod.ml[2161,77914+57]..[2161,77914+61])
                                                                      Pexp_construct "true" (typing/typemod.ml[2161,77914+57]..[2161,77914+61])
                                                                      None
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[2161,77914+62]..[2161,77914+66])
                                                                      Pexp_ident "name" (typing/typemod.ml[2161,77914+62]..[2161,77914+66])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[2161,77914+67]..[2161,77914+77])
                                                                      Pexp_construct "Mp_present" (typing/typemod.ml[2161,77914+67]..[2161,77914+77])
                                                                      None
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[2162,77992+18]..[2162,77992+24])
                                                                      Pexp_ident "arg_md" (typing/typemod.ml[2162,77992+18]..[2162,77992+24])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[2162,77992+25]..[2162,77992+28])
                                                                      Pexp_ident "env" (typing/typemod.ml[2162,77992+25]..[2162,77992+28])
                                                                ]
                                                          ]
                                                          expression (typing/typemod.ml[2164,78038+14]..[2164,78038+29])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typemod.ml[2164,78038+14]..[2164,78038+21])
                                                                Pexp_construct "Some" (typing/typemod.ml[2164,78038+14]..[2164,78038+18])
                                                                Some
                                                                  expression (typing/typemod.ml[2164,78038+19]..[2164,78038+21])
                                                                    Pexp_ident "id" (typing/typemod.ml[2164,78038+19]..[2164,78038+21])
                                                              expression (typing/typemod.ml[2164,78038+23]..[2164,78038+29])
                                                                Pexp_ident "newenv" (typing/typemod.ml[2164,78038+23]..[2164,78038+29])
                                                            ]
                                                  ]
                                            ]
                                            expression (typing/typemod.ml[2166,78081+10]..[2166,78081+78])
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[2166,78081+10]..[2166,78081+32])
                                                  Pexp_construct "Named" (typing/typemod.ml[2166,78081+10]..[2166,78081+15])
                                                  Some
                                                    expression (typing/typemod.ml[2166,78081+16]..[2166,78081+32])
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typemod.ml[2166,78081+17]..[2166,78081+19])
                                                          Pexp_ident "id" (typing/typemod.ml[2166,78081+17]..[2166,78081+19])
                                                        expression (typing/typemod.ml[2166,78081+21]..[2166,78081+26])
                                                          Pexp_ident "param" (typing/typemod.ml[2166,78081+21]..[2166,78081+26])
                                                        expression (typing/typemod.ml[2166,78081+28]..[2166,78081+31])
                                                          Pexp_ident "mty" (typing/typemod.ml[2166,78081+28]..[2166,78081+31])
                                                      ]
                                                expression (typing/typemod.ml[2166,78081+34]..[2166,78081+64])
                                                  Pexp_construct "Types.Named" (typing/typemod.ml[2166,78081+34]..[2166,78081+45])
                                                  Some
                                                    expression (typing/typemod.ml[2166,78081+46]..[2166,78081+64])
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typemod.ml[2166,78081+47]..[2166,78081+49])
                                                          Pexp_ident "id" (typing/typemod.ml[2166,78081+47]..[2166,78081+49])
                                                        expression (typing/typemod.ml[2166,78081+51]..[2166,78081+63])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[2166,78081+51]..[2166,78081+54])
                                                            Pexp_ident "mty" (typing/typemod.ml[2166,78081+51]..[2166,78081+54])
                                                          "mty_type" (typing/typemod.ml[2166,78081+55]..[2166,78081+63])
                                                      ]
                                                expression (typing/typemod.ml[2166,78081+66]..[2166,78081+72])
                                                  Pexp_ident "newenv" (typing/typemod.ml[2166,78081+66]..[2166,78081+72])
                                                expression (typing/typemod.ml[2166,78081+74]..[2166,78081+78])
                                                  Pexp_construct "true" (typing/typemod.ml[2166,78081+74]..[2166,78081+78])
                                                  None
                                              ]
                                  ]
                            ]
                            expression (typing/typemod.ml[2168,78169+6]..[2173,78406+33])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[2168,78169+10]..[2168,78169+14])
                                    Ppat_var "body" (typing/typemod.ml[2168,78169+10]..[2168,78169+14])
                                  expression (typing/typemod.ml[2168,78169+17]..[2168,78169+62])
                                    Pexp_apply
                                    expression (typing/typemod.ml[2168,78169+17]..[2168,78169+28])
                                      Pexp_ident "type_module" (typing/typemod.ml[2168,78169+17]..[2168,78169+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2168,78169+29]..[2168,78169+33])
                                          Pexp_construct "true" (typing/typemod.ml[2168,78169+29]..[2168,78169+33])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2168,78169+34]..[2168,78169+44])
                                          Pexp_ident "funct_body" (typing/typemod.ml[2168,78169+34]..[2168,78169+44])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2168,78169+45]..[2168,78169+49])
                                          Pexp_construct "None" (typing/typemod.ml[2168,78169+45]..[2168,78169+49])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2168,78169+50]..[2168,78169+56])
                                          Pexp_ident "newenv" (typing/typemod.ml[2168,78169+50]..[2168,78169+56])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2168,78169+57]..[2168,78169+62])
                                          Pexp_ident "sbody" (typing/typemod.ml[2168,78169+57]..[2168,78169+62])
                                    ]
                              ]
                              expression (typing/typemod.ml[2169,78235+6]..[2173,78406+33])
                                Pexp_record
                                [
                                  "mod_desc" (typing/typemod.ml[2169,78235+8]..[2169,78235+16])
                                    expression (typing/typemod.ml[2169,78235+19]..[2169,78235+44])
                                      Pexp_construct "Tmod_functor" (typing/typemod.ml[2169,78235+19]..[2169,78235+31])
                                      Some
                                        expression (typing/typemod.ml[2169,78235+31]..[2169,78235+44])
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[2169,78235+32]..[2169,78235+37])
                                              Pexp_ident "t_arg" (typing/typemod.ml[2169,78235+32]..[2169,78235+37])
                                            expression (typing/typemod.ml[2169,78235+39]..[2169,78235+43])
                                              Pexp_ident "body" (typing/typemod.ml[2169,78235+39]..[2169,78235+43])
                                          ]
                                  "mod_type" (typing/typemod.ml[2170,78281+8]..[2170,78281+16])
                                    expression (typing/typemod.ml[2170,78281+19]..[2170,78281+53])
                                      Pexp_construct "Mty_functor" (typing/typemod.ml[2170,78281+19]..[2170,78281+30])
                                      Some
                                        expression (typing/typemod.ml[2170,78281+30]..[2170,78281+53])
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[2170,78281+31]..[2170,78281+37])
                                              Pexp_ident "ty_arg" (typing/typemod.ml[2170,78281+31]..[2170,78281+37])
                                            expression (typing/typemod.ml[2170,78281+39]..[2170,78281+52])
                                              Pexp_field
                                              expression (typing/typemod.ml[2170,78281+39]..[2170,78281+43])
                                                Pexp_ident "body" (typing/typemod.ml[2170,78281+39]..[2170,78281+43])
                                              "mod_type" (typing/typemod.ml[2170,78281+44]..[2170,78281+52])
                                          ]
                                  "mod_env" (typing/typemod.ml[2171,78336+8]..[2171,78336+15])
                                    expression (typing/typemod.ml[2171,78336+18]..[2171,78336+21])
                                      Pexp_ident "env" (typing/typemod.ml[2171,78336+18]..[2171,78336+21])
                                  "mod_attributes" (typing/typemod.ml[2172,78359+8]..[2172,78359+22])
                                    expression (typing/typemod.ml[2172,78359+25]..[2172,78359+45])
                                      Pexp_field
                                      expression (typing/typemod.ml[2172,78359+25]..[2172,78359+29])
                                        Pexp_ident "smod" (typing/typemod.ml[2172,78359+25]..[2172,78359+29])
                                      "pmod_attributes" (typing/typemod.ml[2172,78359+30]..[2172,78359+45])
                                  "mod_loc" (typing/typemod.ml[2173,78406+8]..[2173,78406+15])
                                    expression (typing/typemod.ml[2173,78406+18]..[2173,78406+31])
                                      Pexp_field
                                      expression (typing/typemod.ml[2173,78406+18]..[2173,78406+22])
                                        Pexp_ident "smod" (typing/typemod.ml[2173,78406+18]..[2173,78406+22])
                                      "pmod_loc" (typing/typemod.ml[2173,78406+23]..[2173,78406+31])
                                ]
                                None
                        <case>
                          pattern (typing/typemod.ml[2174,78440+4]..[2174,78440+16])
                            Ppat_construct "Pmod_apply" (typing/typemod.ml[2174,78440+4]..[2174,78440+14])
                            Some
                              []
                              pattern (typing/typemod.ml[2174,78440+15]..[2174,78440+16])
                                Ppat_any
                          expression (typing/typemod.ml[2175,78460+6]..[2175,78460+61])
                            Pexp_apply
                            expression (typing/typemod.ml[2175,78460+6]..[2175,78460+22])
                              Pexp_ident "type_application" (typing/typemod.ml[2175,78460+6]..[2175,78460+22])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2175,78460+23]..[2175,78460+36])
                                  Pexp_field
                                  expression (typing/typemod.ml[2175,78460+23]..[2175,78460+27])
                                    Pexp_ident "smod" (typing/typemod.ml[2175,78460+23]..[2175,78460+27])
                                  "pmod_loc" (typing/typemod.ml[2175,78460+28]..[2175,78460+36])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2175,78460+37]..[2175,78460+41])
                                  Pexp_ident "sttn" (typing/typemod.ml[2175,78460+37]..[2175,78460+41])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2175,78460+42]..[2175,78460+52])
                                  Pexp_ident "funct_body" (typing/typemod.ml[2175,78460+42]..[2175,78460+52])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2175,78460+53]..[2175,78460+56])
                                  Pexp_ident "env" (typing/typemod.ml[2175,78460+53]..[2175,78460+56])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2175,78460+57]..[2175,78460+61])
                                  Pexp_ident "smod" (typing/typemod.ml[2175,78460+57]..[2175,78460+61])
                            ]
                        <case>
                          pattern (typing/typemod.ml[2176,78522+4]..[2176,78522+31])
                            Ppat_construct "Pmod_constraint" (typing/typemod.ml[2176,78522+4]..[2176,78522+19])
                            Some
                              []
                              pattern (typing/typemod.ml[2176,78522+19]..[2176,78522+31])
                                Ppat_tuple
                                [
                                  pattern (typing/typemod.ml[2176,78522+20]..[2176,78522+24])
                                    Ppat_var "sarg" (typing/typemod.ml[2176,78522+20]..[2176,78522+24])
                                  pattern (typing/typemod.ml[2176,78522+26]..[2176,78522+30])
                                    Ppat_var "smty" (typing/typemod.ml[2176,78522+26]..[2176,78522+30])
                                ]
                          expression (typing/typemod.ml[2177,78557+6]..[2185,78864+7])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[2177,78557+10]..[2177,78557+13])
                                  Ppat_var "arg" (typing/typemod.ml[2177,78557+10]..[2177,78557+13])
                                expression (typing/typemod.ml[2177,78557+16]..[2177,78557+66])
                                  Pexp_apply
                                  expression (typing/typemod.ml[2177,78557+16]..[2177,78557+27])
                                    Pexp_ident "type_module" (typing/typemod.ml[2177,78557+16]..[2177,78557+27])
                                  [
                                    <arg>
                                    Labelled "alias"
                                      expression (typing/typemod.ml[2177,78557+29]..[2177,78557+34])
                                        Pexp_ident "alias" (typing/typemod.ml[2177,78557+29]..[2177,78557+34])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2177,78557+35]..[2177,78557+39])
                                        Pexp_construct "true" (typing/typemod.ml[2177,78557+35]..[2177,78557+39])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2177,78557+40]..[2177,78557+50])
                                        Pexp_ident "funct_body" (typing/typemod.ml[2177,78557+40]..[2177,78557+50])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2177,78557+51]..[2177,78557+57])
                                        Pexp_ident "anchor" (typing/typemod.ml[2177,78557+51]..[2177,78557+57])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2177,78557+58]..[2177,78557+61])
                                        Pexp_ident "env" (typing/typemod.ml[2177,78557+58]..[2177,78557+61])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2177,78557+62]..[2177,78557+66])
                                        Pexp_ident "sarg" (typing/typemod.ml[2177,78557+62]..[2177,78557+66])
                                  ]
                            ]
                            expression (typing/typemod.ml[2178,78627+6]..[2185,78864+7])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[2178,78627+10]..[2178,78627+13])
                                    Ppat_var "mty" (typing/typemod.ml[2178,78627+10]..[2178,78627+13])
                                  expression (typing/typemod.ml[2178,78627+16]..[2178,78627+39])
                                    Pexp_apply
                                    expression (typing/typemod.ml[2178,78627+16]..[2178,78627+30])
                                      Pexp_ident "transl_modtype" (typing/typemod.ml[2178,78627+16]..[2178,78627+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2178,78627+31]..[2178,78627+34])
                                          Pexp_ident "env" (typing/typemod.ml[2178,78627+31]..[2178,78627+34])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2178,78627+35]..[2178,78627+39])
                                          Pexp_ident "smty" (typing/typemod.ml[2178,78627+35]..[2178,78627+39])
                                    ]
                              ]
                              expression (typing/typemod.ml[2179,78670+6]..[2185,78864+7])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[2179,78670+10]..[2179,78670+12])
                                      Ppat_var "md" (typing/typemod.ml[2179,78670+10]..[2179,78670+12])
                                    expression (typing/typemod.ml[2180,78685+8]..[2180,78685+73])
                                      Pexp_apply
                                      expression (typing/typemod.ml[2180,78685+8]..[2180,78685+23])
                                        Pexp_ident "wrap_constraint" (typing/typemod.ml[2180,78685+8]..[2180,78685+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2180,78685+24]..[2180,78685+27])
                                            Pexp_ident "env" (typing/typemod.ml[2180,78685+24]..[2180,78685+27])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2180,78685+28]..[2180,78685+32])
                                            Pexp_construct "true" (typing/typemod.ml[2180,78685+28]..[2180,78685+32])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2180,78685+33]..[2180,78685+36])
                                            Pexp_ident "arg" (typing/typemod.ml[2180,78685+33]..[2180,78685+36])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2180,78685+37]..[2180,78685+49])
                                            Pexp_field
                                            expression (typing/typemod.ml[2180,78685+37]..[2180,78685+40])
                                              Pexp_ident "mty" (typing/typemod.ml[2180,78685+37]..[2180,78685+40])
                                            "mty_type" (typing/typemod.ml[2180,78685+41]..[2180,78685+49])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2180,78685+50]..[2180,78685+73])
                                            Pexp_construct "Tmodtype_explicit" (typing/typemod.ml[2180,78685+51]..[2180,78685+68])
                                            Some
                                              expression (typing/typemod.ml[2180,78685+69]..[2180,78685+72])
                                                Pexp_ident "mty" (typing/typemod.ml[2180,78685+69]..[2180,78685+72])
                                      ]
                                ]
                                expression (typing/typemod.ml[2182,78768+6]..[2185,78864+7])
                                  Pexp_record
                                  [
                                    "mod_loc" (typing/typemod.ml[2183,78784+8]..[2183,78784+15])
                                      expression (typing/typemod.ml[2183,78784+18]..[2183,78784+31])
                                        Pexp_field
                                        expression (typing/typemod.ml[2183,78784+18]..[2183,78784+22])
                                          Pexp_ident "smod" (typing/typemod.ml[2183,78784+18]..[2183,78784+22])
                                        "pmod_loc" (typing/typemod.ml[2183,78784+23]..[2183,78784+31])
                                    "mod_attributes" (typing/typemod.ml[2184,78817+8]..[2184,78817+22])
                                      expression (typing/typemod.ml[2184,78817+25]..[2184,78817+45])
                                        Pexp_field
                                        expression (typing/typemod.ml[2184,78817+25]..[2184,78817+29])
                                          Pexp_ident "smod" (typing/typemod.ml[2184,78817+25]..[2184,78817+29])
                                        "pmod_attributes" (typing/typemod.ml[2184,78817+30]..[2184,78817+45])
                                  ]
                                  Some
                                    expression (typing/typemod.ml[2182,78768+8]..[2182,78768+10])
                                      Pexp_ident "md" (typing/typemod.ml[2182,78768+8]..[2182,78768+10])
                        <case>
                          pattern (typing/typemod.ml[2186,78872+4]..[2186,78872+20])
                            Ppat_construct "Pmod_unpack" (typing/typemod.ml[2186,78872+4]..[2186,78872+15])
                            Some
                              []
                              pattern (typing/typemod.ml[2186,78872+16]..[2186,78872+20])
                                Ppat_var "sexp" (typing/typemod.ml[2186,78872+16]..[2186,78872+20])
                          expression (typing/typemod.ml[2187,78896+6]..[2217,80232+33])
                            Pexp_sequence
                            expression (typing/typemod.ml[2187,78896+6]..[2187,78896+51])
                              Pexp_ifthenelse
                              expression (typing/typemod.ml[2187,78896+9]..[2187,78896+27])
                                Pexp_apply
                                expression (typing/typemod.ml[2187,78896+9]..[2187,78896+10])
                                  Pexp_ident "!" (typing/typemod.ml[2187,78896+9]..[2187,78896+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2187,78896+10]..[2187,78896+27])
                                      Pexp_ident "Clflags.principal" (typing/typemod.ml[2187,78896+10]..[2187,78896+27])
                                ]
                              expression (typing/typemod.ml[2187,78896+33]..[2187,78896+51])
                                Pexp_apply
                                expression (typing/typemod.ml[2187,78896+33]..[2187,78896+48])
                                  Pexp_ident "Ctype.begin_def" (typing/typemod.ml[2187,78896+33]..[2187,78896+48])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2187,78896+49]..[2187,78896+51])
                                      Pexp_construct "()" (typing/typemod.ml[2187,78896+49]..[2187,78896+51])
                                      None
                                ]
                              None
                            expression (typing/typemod.ml[2188,78949+6]..[2217,80232+33])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[2188,78949+10]..[2188,78949+13])
                                    Ppat_var "exp" (typing/typemod.ml[2188,78949+10]..[2188,78949+13])
                                  expression (typing/typemod.ml[2188,78949+16]..[2188,78949+42])
                                    Pexp_apply
                                    expression (typing/typemod.ml[2188,78949+16]..[2188,78949+33])
                                      Pexp_ident "Typecore.type_exp" (typing/typemod.ml[2188,78949+16]..[2188,78949+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2188,78949+34]..[2188,78949+37])
                                          Pexp_ident "env" (typing/typemod.ml[2188,78949+34]..[2188,78949+37])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2188,78949+38]..[2188,78949+42])
                                          Pexp_ident "sexp" (typing/typemod.ml[2188,78949+38]..[2188,78949+42])
                                    ]
                              ]
                              expression (typing/typemod.ml[2189,78995+6]..[2217,80232+33])
                                Pexp_sequence
                                expression (typing/typemod.ml[2189,78995+6]..[2192,79108+9])
                                  Pexp_ifthenelse
                                  expression (typing/typemod.ml[2189,78995+9]..[2189,78995+27])
                                    Pexp_apply
                                    expression (typing/typemod.ml[2189,78995+9]..[2189,78995+10])
                                      Pexp_ident "!" (typing/typemod.ml[2189,78995+9]..[2189,78995+10])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2189,78995+10]..[2189,78995+27])
                                          Pexp_ident "Clflags.principal" (typing/typemod.ml[2189,78995+10]..[2189,78995+27])
                                    ]
                                  expression (typing/typemod.ml[2189,78995+33]..[2192,79108+9])
                                    Pexp_sequence
                                    expression (typing/typemod.ml[2190,79034+8]..[2190,79034+24])
                                      Pexp_apply
                                      expression (typing/typemod.ml[2190,79034+8]..[2190,79034+21])
                                        Pexp_ident "Ctype.end_def" (typing/typemod.ml[2190,79034+8]..[2190,79034+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2190,79034+22]..[2190,79034+24])
                                            Pexp_construct "()" (typing/typemod.ml[2190,79034+22]..[2190,79034+24])
                                            None
                                      ]
                                    expression (typing/typemod.ml[2191,79060+8]..[2191,79060+47])
                                      Pexp_apply
                                      expression (typing/typemod.ml[2191,79060+8]..[2191,79060+34])
                                        Pexp_ident "Ctype.generalize_structure" (typing/typemod.ml[2191,79060+8]..[2191,79060+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2191,79060+35]..[2191,79060+47])
                                            Pexp_field
                                            expression (typing/typemod.ml[2191,79060+35]..[2191,79060+38])
                                              Pexp_ident "exp" (typing/typemod.ml[2191,79060+35]..[2191,79060+38])
                                            "exp_type" (typing/typemod.ml[2191,79060+39]..[2191,79060+47])
                                      ]
                                  None
                                expression (typing/typemod.ml[2193,79119+6]..[2217,80232+33])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typemod.ml[2193,79119+10]..[2193,79119+13])
                                        Ppat_var "mty" (typing/typemod.ml[2193,79119+10]..[2193,79119+13])
                                      expression (typing/typemod.ml[2194,79135+8]..[2209,79878+79])
                                        Pexp_match
                                        expression (typing/typemod.ml[2194,79135+14]..[2194,79135+59])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2194,79135+14]..[2194,79135+22])
                                            Pexp_ident "get_desc" (typing/typemod.ml[2194,79135+14]..[2194,79135+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2194,79135+23]..[2194,79135+59])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2194,79135+24]..[2194,79135+41])
                                                  Pexp_ident "Ctype.expand_head" (typing/typemod.ml[2194,79135+24]..[2194,79135+41])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2194,79135+42]..[2194,79135+45])
                                                      Pexp_ident "env" (typing/typemod.ml[2194,79135+42]..[2194,79135+45])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2194,79135+46]..[2194,79135+58])
                                                      Pexp_field
                                                      expression (typing/typemod.ml[2194,79135+46]..[2194,79135+49])
                                                        Pexp_ident "exp" (typing/typemod.ml[2194,79135+46]..[2194,79135+49])
                                                      "exp_type" (typing/typemod.ml[2194,79135+50]..[2194,79135+58])
                                                ]
                                          ]
                                        [
                                          <case>
                                            pattern (typing/typemod.ml[2195,79200+10]..[2195,79200+26])
                                              Ppat_construct "Tpackage" (typing/typemod.ml[2195,79200+10]..[2195,79200+18])
                                              Some
                                                []
                                                pattern (typing/typemod.ml[2195,79200+19]..[2195,79200+26])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typemod.ml[2195,79200+20]..[2195,79200+21])
                                                      Ppat_var "p" (typing/typemod.ml[2195,79200+20]..[2195,79200+21])
                                                    pattern (typing/typemod.ml[2195,79200+23]..[2195,79200+25])
                                                      Ppat_var "fl" (typing/typemod.ml[2195,79200+23]..[2195,79200+25])
                                                  ]
                                            expression (typing/typemod.ml[2196,79230+12]..[2204,79679+53])
                                              Pexp_sequence
                                              expression (typing/typemod.ml[2196,79230+12]..[2198,79359+67])
                                                Pexp_ifthenelse
                                                expression (typing/typemod.ml[2196,79230+15]..[2196,79230+75])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2196,79230+15]..[2196,79230+26])
                                                    Pexp_ident "List.exists" (typing/typemod.ml[2196,79230+15]..[2196,79230+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2196,79230+27]..[2196,79230+72])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (typing/typemod.ml[2196,79230+32]..[2196,79230+39])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/typemod.ml[2196,79230+33]..[2196,79230+35])
                                                              Ppat_var "_n" (typing/typemod.ml[2196,79230+33]..[2196,79230+35])
                                                            pattern (typing/typemod.ml[2196,79230+37]..[2196,79230+38])
                                                              Ppat_var "t" (typing/typemod.ml[2196,79230+37]..[2196,79230+38])
                                                          ]
                                                        expression (typing/typemod.ml[2196,79230+43]..[2196,79230+71])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[2196,79230+66]..[2196,79230+68])
                                                            Pexp_ident "<>" (typing/typemod.ml[2196,79230+66]..[2196,79230+68])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2196,79230+43]..[2196,79230+65])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[2196,79230+43]..[2196,79230+63])
                                                                  Pexp_ident "Ctype.free_variables" (typing/typemod.ml[2196,79230+43]..[2196,79230+63])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[2196,79230+64]..[2196,79230+65])
                                                                      Pexp_ident "t" (typing/typemod.ml[2196,79230+64]..[2196,79230+65])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2196,79230+69]..[2196,79230+71])
                                                                Pexp_construct "[]" (typing/typemod.ml[2196,79230+69]..[2196,79230+71])
                                                                None
                                                          ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2196,79230+73]..[2196,79230+75])
                                                        Pexp_ident "fl" (typing/typemod.ml[2196,79230+73]..[2196,79230+75])
                                                  ]
                                                expression (typing/typemod.ml[2197,79311+14]..[2198,79359+67])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2197,79311+14]..[2197,79311+19])
                                                    Pexp_ident "raise" (typing/typemod.ml[2197,79311+14]..[2197,79311+19])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2197,79311+20]..[2198,79359+67])
                                                        Pexp_construct "Error" (typing/typemod.ml[2197,79311+21]..[2197,79311+26])
                                                        Some
                                                          expression (typing/typemod.ml[2197,79311+27]..[2198,79359+66])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typemod.ml[2197,79311+28]..[2197,79311+41])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[2197,79311+28]..[2197,79311+32])
                                                                  Pexp_ident "smod" (typing/typemod.ml[2197,79311+28]..[2197,79311+32])
                                                                "pmod_loc" (typing/typemod.ml[2197,79311+33]..[2197,79311+41])
                                                              expression (typing/typemod.ml[2197,79311+43]..[2197,79311+46])
                                                                Pexp_ident "env" (typing/typemod.ml[2197,79311+43]..[2197,79311+46])
                                                              expression (typing/typemod.ml[2198,79359+28]..[2198,79359+65])
                                                                Pexp_construct "Incomplete_packed_module" (typing/typemod.ml[2198,79359+28]..[2198,79359+52])
                                                                Some
                                                                  expression (typing/typemod.ml[2198,79359+53]..[2198,79359+65])
                                                                    Pexp_field
                                                                    expression (typing/typemod.ml[2198,79359+53]..[2198,79359+56])
                                                                      Pexp_ident "exp" (typing/typemod.ml[2198,79359+53]..[2198,79359+56])
                                                                    "exp_type" (typing/typemod.ml[2198,79359+57]..[2198,79359+65])
                                                            ]
                                                  ]
                                                None
                                              expression (typing/typemod.ml[2199,79428+12]..[2204,79679+53])
                                                Pexp_sequence
                                                expression (typing/typemod.ml[2199,79428+12]..[2203,79613+64])
                                                  Pexp_ifthenelse
                                                  expression (typing/typemod.ml[2199,79428+15]..[2200,79465+79])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[2199,79428+34]..[2199,79428+36])
                                                      Pexp_ident "&&" (typing/typemod.ml[2199,79428+34]..[2199,79428+36])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2199,79428+15]..[2199,79428+33])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[2199,79428+15]..[2199,79428+16])
                                                            Pexp_ident "!" (typing/typemod.ml[2199,79428+15]..[2199,79428+16])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2199,79428+16]..[2199,79428+33])
                                                                Pexp_ident "Clflags.principal" (typing/typemod.ml[2199,79428+16]..[2199,79428+33])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2200,79465+14]..[2200,79465+79])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[2200,79465+14]..[2200,79465+17])
                                                            Pexp_ident "not" (typing/typemod.ml[2200,79465+14]..[2200,79465+17])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2200,79465+18]..[2200,79465+79])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[2200,79465+19]..[2200,79465+41])
                                                                  Pexp_ident "Typecore.generalizable" (typing/typemod.ml[2200,79465+19]..[2200,79465+41])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[2200,79465+42]..[2200,79465+65])
                                                                      Pexp_apply
                                                                      expression (typing/typemod.ml[2200,79465+62]..[2200,79465+63])
Pexp_ident "-" (typing/typemod.ml[2200,79465+62]..[2200,79465+63])
                                                                      [
<arg>
Nolabel
  expression (typing/typemod.ml[2200,79465+43]..[2200,79465+62])
    Pexp_ident "Btype.generic_level" (typing/typemod.ml[2200,79465+43]..[2200,79465+62])
<arg>
Nolabel
  expression (typing/typemod.ml[2200,79465+63]..[2200,79465+64])
    Pexp_constant PConst_int (1,None)
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[2200,79465+66]..[2200,79465+78])
                                                                      Pexp_field
                                                                      expression (typing/typemod.ml[2200,79465+66]..[2200,79465+69])
Pexp_ident "exp" (typing/typemod.ml[2200,79465+66]..[2200,79465+69])
                                                                      "exp_type" (typing/typemod.ml[2200,79465+70]..[2200,79465+78])
                                                                ]
                                                          ]
                                                    ]
                                                  expression (typing/typemod.ml[2202,79562+14]..[2203,79613+64])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[2202,79562+14]..[2202,79562+36])
                                                      Pexp_ident "Location.prerr_warning" (typing/typemod.ml[2202,79562+14]..[2202,79562+36])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2202,79562+37]..[2202,79562+50])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[2202,79562+37]..[2202,79562+41])
                                                            Pexp_ident "smod" (typing/typemod.ml[2202,79562+37]..[2202,79562+41])
                                                          "pmod_loc" (typing/typemod.ml[2202,79562+42]..[2202,79562+50])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2203,79613+16]..[2203,79613+64])
                                                          Pexp_construct "Warnings.Not_principal" (typing/typemod.ml[2203,79613+17]..[2203,79613+39])
                                                          Some
                                                            expression (typing/typemod.ml[2203,79613+40]..[2203,79613+63])
                                                              Pexp_constant PConst_string("this module unpacking",(typing/typemod.ml[2203,79613+41]..[2203,79613+62]),None)
                                                    ]
                                                  None
                                                expression (typing/typemod.ml[2204,79679+12]..[2204,79679+53])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2204,79679+12]..[2204,79679+30])
                                                    Pexp_ident "modtype_of_package" (typing/typemod.ml[2204,79679+12]..[2204,79679+30])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2204,79679+31]..[2204,79679+34])
                                                        Pexp_ident "env" (typing/typemod.ml[2204,79679+31]..[2204,79679+34])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2204,79679+35]..[2204,79679+48])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[2204,79679+35]..[2204,79679+39])
                                                          Pexp_ident "smod" (typing/typemod.ml[2204,79679+35]..[2204,79679+39])
                                                        "pmod_loc" (typing/typemod.ml[2204,79679+40]..[2204,79679+48])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2204,79679+49]..[2204,79679+50])
                                                        Pexp_ident "p" (typing/typemod.ml[2204,79679+49]..[2204,79679+50])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2204,79679+51]..[2204,79679+53])
                                                        Pexp_ident "fl" (typing/typemod.ml[2204,79679+51]..[2204,79679+53])
                                                  ]
                                          <case>
                                            pattern (typing/typemod.ml[2205,79733+10]..[2205,79733+16])
                                              Ppat_construct "Tvar" (typing/typemod.ml[2205,79733+10]..[2205,79733+14])
                                              Some
                                                []
                                                pattern (typing/typemod.ml[2205,79733+15]..[2205,79733+16])
                                                  Ppat_any
                                            expression (typing/typemod.ml[2206,79753+12]..[2207,79787+75])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2206,79753+12]..[2206,79753+17])
                                                Pexp_ident "raise" (typing/typemod.ml[2206,79753+12]..[2206,79753+17])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2206,79753+18]..[2207,79787+75])
                                                    Pexp_construct "Typecore.Error" (typing/typemod.ml[2206,79753+19]..[2206,79753+33])
                                                    Some
                                                      expression (typing/typemod.ml[2207,79787+21]..[2207,79787+74])
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typemod.ml[2207,79787+22]..[2207,79787+35])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[2207,79787+22]..[2207,79787+26])
                                                              Pexp_ident "smod" (typing/typemod.ml[2207,79787+22]..[2207,79787+26])
                                                            "pmod_loc" (typing/typemod.ml[2207,79787+27]..[2207,79787+35])
                                                          expression (typing/typemod.ml[2207,79787+37]..[2207,79787+40])
                                                            Pexp_ident "env" (typing/typemod.ml[2207,79787+37]..[2207,79787+40])
                                                          expression (typing/typemod.ml[2207,79787+42]..[2207,79787+73])
                                                            Pexp_construct "Typecore.Cannot_infer_signature" (typing/typemod.ml[2207,79787+42]..[2207,79787+73])
                                                            None
                                                        ]
                                              ]
                                          <case>
                                            pattern (typing/typemod.ml[2208,79863+10]..[2208,79863+11])
                                              Ppat_any
                                            expression (typing/typemod.ml[2209,79878+12]..[2209,79878+79])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2209,79878+12]..[2209,79878+17])
                                                Pexp_ident "raise" (typing/typemod.ml[2209,79878+12]..[2209,79878+17])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2209,79878+18]..[2209,79878+79])
                                                    Pexp_construct "Error" (typing/typemod.ml[2209,79878+19]..[2209,79878+24])
                                                    Some
                                                      expression (typing/typemod.ml[2209,79878+24]..[2209,79878+78])
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typemod.ml[2209,79878+25]..[2209,79878+38])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[2209,79878+25]..[2209,79878+29])
                                                              Pexp_ident "smod" (typing/typemod.ml[2209,79878+25]..[2209,79878+29])
                                                            "pmod_loc" (typing/typemod.ml[2209,79878+30]..[2209,79878+38])
                                                          expression (typing/typemod.ml[2209,79878+40]..[2209,79878+43])
                                                            Pexp_ident "env" (typing/typemod.ml[2209,79878+40]..[2209,79878+43])
                                                          expression (typing/typemod.ml[2209,79878+45]..[2209,79878+77])
                                                            Pexp_construct "Not_a_packed_module" (typing/typemod.ml[2209,79878+45]..[2209,79878+64])
                                                            Some
                                                              expression (typing/typemod.ml[2209,79878+65]..[2209,79878+77])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[2209,79878+65]..[2209,79878+68])
                                                                  Pexp_ident "exp" (typing/typemod.ml[2209,79878+65]..[2209,79878+68])
                                                                "exp_type" (typing/typemod.ml[2209,79878+69]..[2209,79878+77])
                                                        ]
                                              ]
                                        ]
                                  ]
                                  expression (typing/typemod.ml[2211,79967+6]..[2217,80232+33])
                                    Pexp_sequence
                                    expression (typing/typemod.ml[2211,79967+6]..[2212,80023+71])
                                      Pexp_ifthenelse
                                      expression (typing/typemod.ml[2211,79967+9]..[2211,79967+50])
                                        Pexp_apply
                                        expression (typing/typemod.ml[2211,79967+20]..[2211,79967+22])
                                          Pexp_ident "&&" (typing/typemod.ml[2211,79967+20]..[2211,79967+22])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[2211,79967+9]..[2211,79967+19])
                                              Pexp_ident "funct_body" (typing/typemod.ml[2211,79967+9]..[2211,79967+19])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[2211,79967+23]..[2211,79967+50])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2211,79967+23]..[2211,79967+42])
                                                Pexp_ident "Mtype.contains_type" (typing/typemod.ml[2211,79967+23]..[2211,79967+42])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2211,79967+43]..[2211,79967+46])
                                                    Pexp_ident "env" (typing/typemod.ml[2211,79967+43]..[2211,79967+46])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2211,79967+47]..[2211,79967+50])
                                                    Pexp_ident "mty" (typing/typemod.ml[2211,79967+47]..[2211,79967+50])
                                              ]
                                        ]
                                      expression (typing/typemod.ml[2212,80023+8]..[2212,80023+71])
                                        Pexp_apply
                                        expression (typing/typemod.ml[2212,80023+8]..[2212,80023+13])
                                          Pexp_ident "raise" (typing/typemod.ml[2212,80023+8]..[2212,80023+13])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[2212,80023+14]..[2212,80023+71])
                                              Pexp_construct "Error" (typing/typemod.ml[2212,80023+15]..[2212,80023+20])
                                              Some
                                                expression (typing/typemod.ml[2212,80023+21]..[2212,80023+70])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typemod.ml[2212,80023+22]..[2212,80023+35])
                                                      Pexp_field
                                                      expression (typing/typemod.ml[2212,80023+22]..[2212,80023+26])
                                                        Pexp_ident "smod" (typing/typemod.ml[2212,80023+22]..[2212,80023+26])
                                                      "pmod_loc" (typing/typemod.ml[2212,80023+27]..[2212,80023+35])
                                                    expression (typing/typemod.ml[2212,80023+37]..[2212,80023+40])
                                                      Pexp_ident "env" (typing/typemod.ml[2212,80023+37]..[2212,80023+40])
                                                    expression (typing/typemod.ml[2212,80023+42]..[2212,80023+69])
                                                      Pexp_construct "Not_allowed_in_functor_body" (typing/typemod.ml[2212,80023+42]..[2212,80023+69])
                                                      None
                                                  ]
                                        ]
                                      None
                                    expression (typing/typemod.ml[2213,80096+6]..[2217,80232+33])
                                      Pexp_record
                                      [
                                        "mod_desc" (typing/typemod.ml[2213,80096+8]..[2213,80096+16])
                                          expression (typing/typemod.ml[2213,80096+19]..[2213,80096+40])
                                            Pexp_construct "Tmod_unpack" (typing/typemod.ml[2213,80096+19]..[2213,80096+30])
                                            Some
                                              expression (typing/typemod.ml[2213,80096+30]..[2213,80096+40])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typemod.ml[2213,80096+31]..[2213,80096+34])
                                                    Pexp_ident "exp" (typing/typemod.ml[2213,80096+31]..[2213,80096+34])
                                                  expression (typing/typemod.ml[2213,80096+36]..[2213,80096+39])
                                                    Pexp_ident "mty" (typing/typemod.ml[2213,80096+36]..[2213,80096+39])
                                                ]
                                        "mod_type" (typing/typemod.ml[2214,80138+8]..[2214,80138+16])
                                          expression (typing/typemod.ml[2214,80138+19]..[2214,80138+22])
                                            Pexp_ident "mty" (typing/typemod.ml[2214,80138+19]..[2214,80138+22])
                                        "mod_env" (typing/typemod.ml[2215,80162+8]..[2215,80162+15])
                                          expression (typing/typemod.ml[2215,80162+18]..[2215,80162+21])
                                            Pexp_ident "env" (typing/typemod.ml[2215,80162+18]..[2215,80162+21])
                                        "mod_attributes" (typing/typemod.ml[2216,80185+8]..[2216,80185+22])
                                          expression (typing/typemod.ml[2216,80185+25]..[2216,80185+45])
                                            Pexp_field
                                            expression (typing/typemod.ml[2216,80185+25]..[2216,80185+29])
                                              Pexp_ident "smod" (typing/typemod.ml[2216,80185+25]..[2216,80185+29])
                                            "pmod_attributes" (typing/typemod.ml[2216,80185+30]..[2216,80185+45])
                                        "mod_loc" (typing/typemod.ml[2217,80232+8]..[2217,80232+15])
                                          expression (typing/typemod.ml[2217,80232+18]..[2217,80232+31])
                                            Pexp_field
                                            expression (typing/typemod.ml[2217,80232+18]..[2217,80232+22])
                                              Pexp_ident "smod" (typing/typemod.ml[2217,80232+18]..[2217,80232+22])
                                            "pmod_loc" (typing/typemod.ml[2217,80232+23]..[2217,80232+31])
                                      ]
                                      None
                        <case>
                          pattern (typing/typemod.ml[2218,80266+4]..[2218,80266+22])
                            Ppat_construct "Pmod_extension" (typing/typemod.ml[2218,80266+4]..[2218,80266+18])
                            Some
                              []
                              pattern (typing/typemod.ml[2218,80266+19]..[2218,80266+22])
                                Ppat_var "ext" (typing/typemod.ml[2218,80266+19]..[2218,80266+22])
                          expression (typing/typemod.ml[2219,80292+6]..[2219,80292+71])
                            Pexp_apply
                            expression (typing/typemod.ml[2219,80292+6]..[2219,80292+11])
                              Pexp_ident "raise" (typing/typemod.ml[2219,80292+6]..[2219,80292+11])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2219,80292+12]..[2219,80292+71])
                                  Pexp_construct "Error_forward" (typing/typemod.ml[2219,80292+13]..[2219,80292+26])
                                  Some
                                    expression (typing/typemod.ml[2219,80292+27]..[2219,80292+70])
                                      Pexp_apply
                                      expression (typing/typemod.ml[2219,80292+28]..[2219,80292+65])
                                        Pexp_ident "Builtin_attributes.error_of_extension" (typing/typemod.ml[2219,80292+28]..[2219,80292+65])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2219,80292+66]..[2219,80292+69])
                                            Pexp_ident "ext" (typing/typemod.ml[2219,80292+66]..[2219,80292+69])
                                      ]
                            ]
                      ]
      <def>
        pattern (typing/typemod.ml[2221,80365+4]..[2221,80365+20])
          Ppat_var "type_application" (typing/typemod.ml[2221,80365+4]..[2221,80365+20])
        expression (typing/typemod.ml[2221,80365+21]..[2246,81301+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2221,80365+21]..[2221,80365+24])
            Ppat_var "loc" (typing/typemod.ml[2221,80365+21]..[2221,80365+24])
          expression (typing/typemod.ml[2221,80365+25]..[2246,81301+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2221,80365+25]..[2221,80365+35])
              Ppat_var "strengthen" (typing/typemod.ml[2221,80365+25]..[2221,80365+35])
            expression (typing/typemod.ml[2221,80365+36]..[2246,81301+14]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2221,80365+36]..[2221,80365+46])
                Ppat_var "funct_body" (typing/typemod.ml[2221,80365+36]..[2221,80365+46])
              expression (typing/typemod.ml[2221,80365+47]..[2246,81301+14]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2221,80365+47]..[2221,80365+50])
                  Ppat_var "env" (typing/typemod.ml[2221,80365+47]..[2221,80365+50])
                expression (typing/typemod.ml[2221,80365+51]..[2246,81301+14]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[2221,80365+51]..[2221,80365+55])
                    Ppat_var "smod" (typing/typemod.ml[2221,80365+51]..[2221,80365+55])
                  expression (typing/typemod.ml[2222,80423+2]..[2246,81301+14])
                    Pexp_let Rec
                    [
                      <def>
                        pattern (typing/typemod.ml[2222,80423+10]..[2222,80423+29])
                          Ppat_var "extract_application" (typing/typemod.ml[2222,80423+10]..[2222,80423+29])
                        expression (typing/typemod.ml[2222,80423+30]..[2236,80949+22]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[2222,80423+30]..[2222,80423+40])
                            Ppat_var "funct_body" (typing/typemod.ml[2222,80423+30]..[2222,80423+40])
                          expression (typing/typemod.ml[2222,80423+41]..[2236,80949+22]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[2222,80423+41]..[2222,80423+44])
                              Ppat_var "env" (typing/typemod.ml[2222,80423+41]..[2222,80423+44])
                            expression (typing/typemod.ml[2222,80423+45]..[2236,80949+22]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typemod.ml[2222,80423+45]..[2222,80423+50])
                                Ppat_var "sargs" (typing/typemod.ml[2222,80423+45]..[2222,80423+50])
                              expression (typing/typemod.ml[2222,80423+51]..[2236,80949+22]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/typemod.ml[2222,80423+51]..[2222,80423+55])
                                  Ppat_var "smod" (typing/typemod.ml[2222,80423+51]..[2222,80423+55])
                                expression (typing/typemod.ml[2223,80481+4]..[2236,80949+22])
                                  Pexp_match
                                  expression (typing/typemod.ml[2223,80481+10]..[2223,80481+24])
                                    Pexp_field
                                    expression (typing/typemod.ml[2223,80481+10]..[2223,80481+14])
                                      Pexp_ident "smod" (typing/typemod.ml[2223,80481+10]..[2223,80481+14])
                                    "pmod_desc" (typing/typemod.ml[2223,80481+15]..[2223,80481+24])
                                  [
                                    <case>
                                      pattern (typing/typemod.ml[2224,80511+6]..[2224,80511+25])
                                        Ppat_construct "Pmod_apply" (typing/typemod.ml[2224,80511+6]..[2224,80511+16])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[2224,80511+16]..[2224,80511+25])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[2224,80511+17]..[2224,80511+18])
                                                Ppat_var "f" (typing/typemod.ml[2224,80511+17]..[2224,80511+18])
                                              pattern (typing/typemod.ml[2224,80511+20]..[2224,80511+24])
                                                Ppat_var "sarg" (typing/typemod.ml[2224,80511+20]..[2224,80511+24])
                                            ]
                                      expression (typing/typemod.ml[2225,80540+8]..[2235,80887+61])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[2225,80540+12]..[2225,80540+15])
                                              Ppat_var "arg" (typing/typemod.ml[2225,80540+12]..[2225,80540+15])
                                            expression (typing/typemod.ml[2225,80540+18]..[2225,80540+59])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2225,80540+18]..[2225,80540+29])
                                                Pexp_ident "type_module" (typing/typemod.ml[2225,80540+18]..[2225,80540+29])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2225,80540+30]..[2225,80540+34])
                                                    Pexp_construct "true" (typing/typemod.ml[2225,80540+30]..[2225,80540+34])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2225,80540+35]..[2225,80540+45])
                                                    Pexp_ident "funct_body" (typing/typemod.ml[2225,80540+35]..[2225,80540+45])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2225,80540+46]..[2225,80540+50])
                                                    Pexp_construct "None" (typing/typemod.ml[2225,80540+46]..[2225,80540+50])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2225,80540+51]..[2225,80540+54])
                                                    Pexp_ident "env" (typing/typemod.ml[2225,80540+51]..[2225,80540+54])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2225,80540+55]..[2225,80540+59])
                                                    Pexp_ident "sarg" (typing/typemod.ml[2225,80540+55]..[2225,80540+59])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[2226,80603+8]..[2235,80887+61])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[2226,80603+12]..[2226,80603+19])
                                                Ppat_var "summary" (typing/typemod.ml[2226,80603+12]..[2226,80603+19])
                                              expression (typing/typemod.ml[2227,80625+10]..[2233,80864+11])
                                                Pexp_record
                                                [
                                                  "loc" (typing/typemod.ml[2227,80625+12]..[2227,80625+15])
                                                    expression (typing/typemod.ml[2227,80625+16]..[2227,80625+29])
                                                      Pexp_field
                                                      expression (typing/typemod.ml[2227,80625+16]..[2227,80625+20])
                                                        Pexp_ident "smod" (typing/typemod.ml[2227,80625+16]..[2227,80625+20])
                                                      "pmod_loc" (typing/typemod.ml[2227,80625+21]..[2227,80625+29])
                                                  "attributes" (typing/typemod.ml[2228,80656+12]..[2228,80656+22])
                                                    expression (typing/typemod.ml[2228,80656+23]..[2228,80656+43])
                                                      Pexp_field
                                                      expression (typing/typemod.ml[2228,80656+23]..[2228,80656+27])
                                                        Pexp_ident "smod" (typing/typemod.ml[2228,80656+23]..[2228,80656+27])
                                                      "pmod_attributes" (typing/typemod.ml[2228,80656+28]..[2228,80656+43])
                                                  "f_loc" (typing/typemod.ml[2229,80701+12]..[2229,80701+17])
                                                    expression (typing/typemod.ml[2229,80701+20]..[2229,80701+30])
                                                      Pexp_field
                                                      expression (typing/typemod.ml[2229,80701+20]..[2229,80701+21])
                                                        Pexp_ident "f" (typing/typemod.ml[2229,80701+20]..[2229,80701+21])
                                                      "pmod_loc" (typing/typemod.ml[2229,80701+22]..[2229,80701+30])
                                                  "arg_is_syntactic_unit" (typing/typemod.ml[2230,80733+12]..[2230,80733+33])
                                                    expression (typing/typemod.ml[2230,80733+36]..[2230,80733+70])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[2230,80733+51]..[2230,80733+52])
                                                        Pexp_ident "=" (typing/typemod.ml[2230,80733+51]..[2230,80733+52])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2230,80733+36]..[2230,80733+50])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[2230,80733+36]..[2230,80733+40])
                                                              Pexp_ident "sarg" (typing/typemod.ml[2230,80733+36]..[2230,80733+40])
                                                            "pmod_desc" (typing/typemod.ml[2230,80733+41]..[2230,80733+50])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2230,80733+53]..[2230,80733+70])
                                                            Pexp_construct "Pmod_structure" (typing/typemod.ml[2230,80733+53]..[2230,80733+67])
                                                            Some
                                                              expression (typing/typemod.ml[2230,80733+68]..[2230,80733+70])
                                                                Pexp_construct "[]" (typing/typemod.ml[2230,80733+68]..[2230,80733+70])
                                                                None
                                                      ]
                                                  "arg" (typing/typemod.ml[2231,80805+12]..[2231,80805+15]) ghost
                                                    expression (typing/typemod.ml[2231,80805+12]..[2231,80805+15])
                                                      Pexp_ident "arg" (typing/typemod.ml[2231,80805+12]..[2231,80805+15])
                                                  "arg_path" (typing/typemod.ml[2232,80822+12]..[2232,80822+20])
                                                    expression (typing/typemod.ml[2232,80822+23]..[2232,80822+41])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[2232,80822+23]..[2232,80822+37])
                                                        Pexp_ident "path_of_module" (typing/typemod.ml[2232,80822+23]..[2232,80822+37])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2232,80822+38]..[2232,80822+41])
                                                            Pexp_ident "arg" (typing/typemod.ml[2232,80822+38]..[2232,80822+41])
                                                      ]
                                                ]
                                                None
                                          ]
                                          expression (typing/typemod.ml[2235,80887+8]..[2235,80887+61])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2235,80887+8]..[2235,80887+27])
                                              Pexp_ident "extract_application" (typing/typemod.ml[2235,80887+8]..[2235,80887+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2235,80887+28]..[2235,80887+38])
                                                  Pexp_ident "funct_body" (typing/typemod.ml[2235,80887+28]..[2235,80887+38])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2235,80887+39]..[2235,80887+42])
                                                  Pexp_ident "env" (typing/typemod.ml[2235,80887+39]..[2235,80887+42])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2235,80887+43]..[2235,80887+59])
                                                  Pexp_construct "::" (typing/typemod.ml[2235,80887+51]..[2235,80887+53])
                                                  Some
                                                    expression (typing/typemod.ml[2235,80887+44]..[2235,80887+58]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typemod.ml[2235,80887+44]..[2235,80887+51])
                                                          Pexp_ident "summary" (typing/typemod.ml[2235,80887+44]..[2235,80887+51])
                                                        expression (typing/typemod.ml[2235,80887+53]..[2235,80887+58])
                                                          Pexp_ident "sargs" (typing/typemod.ml[2235,80887+53]..[2235,80887+58])
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2235,80887+60]..[2235,80887+61])
                                                  Pexp_ident "f" (typing/typemod.ml[2235,80887+60]..[2235,80887+61])
                                            ]
                                    <case>
                                      pattern (typing/typemod.ml[2236,80949+6]..[2236,80949+7])
                                        Ppat_any
                                      expression (typing/typemod.ml[2236,80949+11]..[2236,80949+22])
                                        Pexp_tuple
                                        [
                                          expression (typing/typemod.ml[2236,80949+11]..[2236,80949+15])
                                            Pexp_ident "smod" (typing/typemod.ml[2236,80949+11]..[2236,80949+15])
                                          expression (typing/typemod.ml[2236,80949+17]..[2236,80949+22])
                                            Pexp_ident "sargs" (typing/typemod.ml[2236,80949+17]..[2236,80949+22])
                                        ]
                                  ]
                    ]
                    expression (typing/typemod.ml[2238,80977+2]..[2246,81301+14])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[2238,80977+6]..[2238,80977+18])
                            Ppat_tuple
                            [
                              pattern (typing/typemod.ml[2238,80977+6]..[2238,80977+12])
                                Ppat_var "sfunct" (typing/typemod.ml[2238,80977+6]..[2238,80977+12])
                              pattern (typing/typemod.ml[2238,80977+14]..[2238,80977+18])
                                Ppat_var "args" (typing/typemod.ml[2238,80977+14]..[2238,80977+18])
                            ]
                          expression (typing/typemod.ml[2238,80977+21]..[2238,80977+63])
                            Pexp_apply
                            expression (typing/typemod.ml[2238,80977+21]..[2238,80977+40])
                              Pexp_ident "extract_application" (typing/typemod.ml[2238,80977+21]..[2238,80977+40])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2238,80977+41]..[2238,80977+51])
                                  Pexp_ident "funct_body" (typing/typemod.ml[2238,80977+41]..[2238,80977+51])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2238,80977+52]..[2238,80977+55])
                                  Pexp_ident "env" (typing/typemod.ml[2238,80977+52]..[2238,80977+55])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2238,80977+56]..[2238,80977+58])
                                  Pexp_construct "[]" (typing/typemod.ml[2238,80977+56]..[2238,80977+58])
                                  None
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2238,80977+59]..[2238,80977+63])
                                  Pexp_ident "smod" (typing/typemod.ml[2238,80977+59]..[2238,80977+63])
                            ]
                      ]
                      expression (typing/typemod.ml[2239,81044+2]..[2246,81301+14])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typemod.ml[2239,81044+6]..[2239,81044+11])
                              Ppat_var "funct" (typing/typemod.ml[2239,81044+6]..[2239,81044+11])
                            expression (typing/typemod.ml[2240,81058+4]..[2243,81163+53])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[2240,81058+8]..[2240,81058+18])
                                    Ppat_var "strengthen" (typing/typemod.ml[2240,81058+8]..[2240,81058+18])
                                  expression (typing/typemod.ml[2241,81079+6]..[2241,81079+76])
                                    Pexp_apply
                                    expression (typing/typemod.ml[2241,81079+17]..[2241,81079+19])
                                      Pexp_ident "&&" (typing/typemod.ml[2241,81079+17]..[2241,81079+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2241,81079+6]..[2241,81079+16])
                                          Pexp_ident "strengthen" (typing/typemod.ml[2241,81079+6]..[2241,81079+16])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2241,81079+20]..[2241,81079+76])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2241,81079+20]..[2241,81079+32])
                                            Pexp_ident "List.for_all" (typing/typemod.ml[2241,81079+20]..[2241,81079+32])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2241,81079+33]..[2241,81079+71])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/typemod.ml[2241,81079+38]..[2241,81079+50])
                                                  Ppat_record Open
                                                  [
                                                    "arg_path" (typing/typemod.ml[2241,81079+39]..[2241,81079+47]) ghost
                                                      pattern (typing/typemod.ml[2241,81079+39]..[2241,81079+47])
                                                        Ppat_var "arg_path" (typing/typemod.ml[2241,81079+39]..[2241,81079+47])
                                                  ]
                                                expression (typing/typemod.ml[2241,81079+54]..[2241,81079+70])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2241,81079+63]..[2241,81079+65])
                                                    Pexp_ident "<>" (typing/typemod.ml[2241,81079+63]..[2241,81079+65])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2241,81079+54]..[2241,81079+62])
                                                        Pexp_ident "arg_path" (typing/typemod.ml[2241,81079+54]..[2241,81079+62])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2241,81079+66]..[2241,81079+70])
                                                        Pexp_construct "None" (typing/typemod.ml[2241,81079+66]..[2241,81079+70])
                                                        None
                                                  ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2241,81079+72]..[2241,81079+76])
                                                Pexp_ident "args" (typing/typemod.ml[2241,81079+72]..[2241,81079+76])
                                          ]
                                    ]
                              ]
                              expression (typing/typemod.ml[2243,81163+4]..[2243,81163+53])
                                Pexp_apply
                                expression (typing/typemod.ml[2243,81163+4]..[2243,81163+15])
                                  Pexp_ident "type_module" (typing/typemod.ml[2243,81163+4]..[2243,81163+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2243,81163+16]..[2243,81163+26])
                                      Pexp_ident "strengthen" (typing/typemod.ml[2243,81163+16]..[2243,81163+26])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2243,81163+27]..[2243,81163+37])
                                      Pexp_ident "funct_body" (typing/typemod.ml[2243,81163+27]..[2243,81163+37])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2243,81163+38]..[2243,81163+42])
                                      Pexp_construct "None" (typing/typemod.ml[2243,81163+38]..[2243,81163+42])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2243,81163+43]..[2243,81163+46])
                                      Pexp_ident "env" (typing/typemod.ml[2243,81163+43]..[2243,81163+46])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2243,81163+47]..[2243,81163+53])
                                      Pexp_ident "sfunct" (typing/typemod.ml[2243,81163+47]..[2243,81163+53])
                                ]
                        ]
                        expression (typing/typemod.ml[2245,81222+2]..[2246,81301+14])
                          Pexp_apply
                          expression (typing/typemod.ml[2245,81222+2]..[2245,81222+16])
                            Pexp_ident "List.fold_left" (typing/typemod.ml[2245,81222+2]..[2245,81222+16])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[2245,81222+17]..[2245,81222+78])
                                Pexp_apply
                                expression (typing/typemod.ml[2245,81222+18]..[2245,81222+38])
                                  Pexp_ident "type_one_application" (typing/typemod.ml[2245,81222+18]..[2245,81222+38])
                                [
                                  <arg>
                                  Labelled "ctx"
                                    expression (typing/typemod.ml[2245,81222+44]..[2245,81222+62])
                                      Pexp_tuple
                                      [
                                        expression (typing/typemod.ml[2245,81222+45]..[2245,81222+48])
                                          Pexp_ident "loc" (typing/typemod.ml[2245,81222+45]..[2245,81222+48])
                                        expression (typing/typemod.ml[2245,81222+50]..[2245,81222+55])
                                          Pexp_ident "funct" (typing/typemod.ml[2245,81222+50]..[2245,81222+55])
                                        expression (typing/typemod.ml[2245,81222+57]..[2245,81222+61])
                                          Pexp_ident "args" (typing/typemod.ml[2245,81222+57]..[2245,81222+61])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2245,81222+63]..[2245,81222+73])
                                      Pexp_ident "funct_body" (typing/typemod.ml[2245,81222+63]..[2245,81222+73])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2245,81222+74]..[2245,81222+77])
                                      Pexp_ident "env" (typing/typemod.ml[2245,81222+74]..[2245,81222+77])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[2246,81301+4]..[2246,81301+9])
                                Pexp_ident "funct" (typing/typemod.ml[2246,81301+4]..[2246,81301+9])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[2246,81301+10]..[2246,81301+14])
                                Pexp_ident "args" (typing/typemod.ml[2246,81301+10]..[2246,81301+14])
                          ]
      <def>
        pattern (typing/typemod.ml[2248,81317+4]..[2248,81317+24])
          Ppat_var "type_one_application" (typing/typemod.ml[2248,81317+4]..[2248,81317+24])
        expression (typing/typemod.ml[2248,81317+25]..[2327,84552+74]) ghost
          Pexp_fun
          Labelled "ctx"
          None
          pattern (typing/typemod.ml[2248,81317+30]..[2248,81317+51])
            Ppat_tuple
            [
              pattern (typing/typemod.ml[2248,81317+31]..[2248,81317+40])
                Ppat_var "apply_loc" (typing/typemod.ml[2248,81317+31]..[2248,81317+40])
              pattern (typing/typemod.ml[2248,81317+41]..[2248,81317+45])
                Ppat_var "md_f" (typing/typemod.ml[2248,81317+41]..[2248,81317+45])
              pattern (typing/typemod.ml[2248,81317+46]..[2248,81317+50])
                Ppat_var "args" (typing/typemod.ml[2248,81317+46]..[2248,81317+50])
            ]
          expression (typing/typemod.ml[2248,81317+52]..[2327,84552+74]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2248,81317+52]..[2248,81317+62])
              Ppat_var "funct_body" (typing/typemod.ml[2248,81317+52]..[2248,81317+62])
            expression (typing/typemod.ml[2248,81317+63]..[2327,84552+74]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2248,81317+63]..[2248,81317+66])
                Ppat_var "env" (typing/typemod.ml[2248,81317+63]..[2248,81317+66])
              expression (typing/typemod.ml[2248,81317+67]..[2327,84552+74]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2248,81317+67]..[2248,81317+72])
                  Ppat_var "funct" (typing/typemod.ml[2248,81317+67]..[2248,81317+72])
                expression (typing/typemod.ml[2249,81390+4]..[2327,84552+74]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[2249,81390+4]..[2249,81390+12])
                    Ppat_var "app_view" (typing/typemod.ml[2249,81390+4]..[2249,81390+12])
                  expression (typing/typemod.ml[2250,81405+2]..[2327,84552+74])
                    Pexp_match
                    expression (typing/typemod.ml[2250,81405+8]..[2250,81405+43])
                      Pexp_apply
                      expression (typing/typemod.ml[2250,81405+8]..[2250,81405+24])
                        Pexp_ident "Env.scrape_alias" (typing/typemod.ml[2250,81405+8]..[2250,81405+24])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2250,81405+25]..[2250,81405+28])
                            Pexp_ident "env" (typing/typemod.ml[2250,81405+25]..[2250,81405+28])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2250,81405+29]..[2250,81405+43])
                            Pexp_field
                            expression (typing/typemod.ml[2250,81405+29]..[2250,81405+34])
                              Pexp_ident "funct" (typing/typemod.ml[2250,81405+29]..[2250,81405+34])
                            "mod_type" (typing/typemod.ml[2250,81405+35]..[2250,81405+43])
                      ]
                    [
                      <case>
                        pattern (typing/typemod.ml[2251,81454+4]..[2251,81454+31])
                          Ppat_construct "Mty_functor" (typing/typemod.ml[2251,81454+4]..[2251,81454+15])
                          Some
                            []
                            pattern (typing/typemod.ml[2251,81454+16]..[2251,81454+31])
                              Ppat_tuple
                              [
                                pattern (typing/typemod.ml[2251,81454+17]..[2251,81454+21])
                                  Ppat_construct "Unit" (typing/typemod.ml[2251,81454+17]..[2251,81454+21])
                                  None
                                pattern (typing/typemod.ml[2251,81454+23]..[2251,81454+30])
                                  Ppat_var "mty_res" (typing/typemod.ml[2251,81454+23]..[2251,81454+30])
                              ]
                        expression (typing/typemod.ml[2252,81489+6]..[2260,81900+33])
                          Pexp_sequence
                          expression (typing/typemod.ml[2252,81489+6]..[2253,81538+61])
                            Pexp_ifthenelse
                            expression (typing/typemod.ml[2252,81489+9]..[2252,81489+43])
                              Pexp_apply
                              expression (typing/typemod.ml[2252,81489+9]..[2252,81489+12])
                                Pexp_ident "not" (typing/typemod.ml[2252,81489+9]..[2252,81489+12])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2252,81489+13]..[2252,81489+43])
                                    Pexp_field
                                    expression (typing/typemod.ml[2252,81489+13]..[2252,81489+21])
                                      Pexp_ident "app_view" (typing/typemod.ml[2252,81489+13]..[2252,81489+21])
                                    "arg_is_syntactic_unit" (typing/typemod.ml[2252,81489+22]..[2252,81489+43])
                              ]
                            expression (typing/typemod.ml[2253,81538+8]..[2253,81538+61])
                              Pexp_apply
                              expression (typing/typemod.ml[2253,81538+8]..[2253,81538+13])
                                Pexp_ident "raise" (typing/typemod.ml[2253,81538+8]..[2253,81538+13])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2253,81538+14]..[2253,81538+61])
                                    Pexp_construct "Error" (typing/typemod.ml[2253,81538+15]..[2253,81538+20])
                                    Some
                                      expression (typing/typemod.ml[2253,81538+21]..[2253,81538+60])
                                        Pexp_tuple
                                        [
                                          expression (typing/typemod.ml[2253,81538+22]..[2253,81538+36])
                                            Pexp_field
                                            expression (typing/typemod.ml[2253,81538+22]..[2253,81538+30])
                                              Pexp_ident "app_view" (typing/typemod.ml[2253,81538+22]..[2253,81538+30])
                                            "f_loc" (typing/typemod.ml[2253,81538+31]..[2253,81538+36])
                                          expression (typing/typemod.ml[2253,81538+38]..[2253,81538+41])
                                            Pexp_ident "env" (typing/typemod.ml[2253,81538+38]..[2253,81538+41])
                                          expression (typing/typemod.ml[2253,81538+43]..[2253,81538+59])
                                            Pexp_construct "Apply_generative" (typing/typemod.ml[2253,81538+43]..[2253,81538+59])
                                            None
                                        ]
                              ]
                            None
                          expression (typing/typemod.ml[2254,81601+6]..[2260,81900+33])
                            Pexp_sequence
                            expression (typing/typemod.ml[2254,81601+6]..[2255,81668+67])
                              Pexp_ifthenelse
                              expression (typing/typemod.ml[2254,81601+9]..[2254,81601+61])
                                Pexp_apply
                                expression (typing/typemod.ml[2254,81601+20]..[2254,81601+22])
                                  Pexp_ident "&&" (typing/typemod.ml[2254,81601+20]..[2254,81601+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2254,81601+9]..[2254,81601+19])
                                      Pexp_ident "funct_body" (typing/typemod.ml[2254,81601+9]..[2254,81601+19])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2254,81601+23]..[2254,81601+61])
                                      Pexp_apply
                                      expression (typing/typemod.ml[2254,81601+23]..[2254,81601+42])
                                        Pexp_ident "Mtype.contains_type" (typing/typemod.ml[2254,81601+23]..[2254,81601+42])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2254,81601+43]..[2254,81601+46])
                                            Pexp_ident "env" (typing/typemod.ml[2254,81601+43]..[2254,81601+46])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2254,81601+47]..[2254,81601+61])
                                            Pexp_field
                                            expression (typing/typemod.ml[2254,81601+47]..[2254,81601+52])
                                              Pexp_ident "funct" (typing/typemod.ml[2254,81601+47]..[2254,81601+52])
                                            "mod_type" (typing/typemod.ml[2254,81601+53]..[2254,81601+61])
                                      ]
                                ]
                              expression (typing/typemod.ml[2255,81668+8]..[2255,81668+67])
                                Pexp_apply
                                expression (typing/typemod.ml[2255,81668+8]..[2255,81668+13])
                                  Pexp_ident "raise" (typing/typemod.ml[2255,81668+8]..[2255,81668+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2255,81668+14]..[2255,81668+67])
                                      Pexp_construct "Error" (typing/typemod.ml[2255,81668+15]..[2255,81668+20])
                                      Some
                                        expression (typing/typemod.ml[2255,81668+21]..[2255,81668+66])
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[2255,81668+22]..[2255,81668+31])
                                              Pexp_ident "apply_loc" (typing/typemod.ml[2255,81668+22]..[2255,81668+31])
                                            expression (typing/typemod.ml[2255,81668+33]..[2255,81668+36])
                                              Pexp_ident "env" (typing/typemod.ml[2255,81668+33]..[2255,81668+36])
                                            expression (typing/typemod.ml[2255,81668+38]..[2255,81668+65])
                                              Pexp_construct "Not_allowed_in_functor_body" (typing/typemod.ml[2255,81668+38]..[2255,81668+65])
                                              None
                                          ]
                                ]
                              None
                            expression (typing/typemod.ml[2256,81737+6]..[2260,81900+33])
                              Pexp_record
                              [
                                "mod_desc" (typing/typemod.ml[2256,81737+8]..[2256,81737+16])
                                  expression (typing/typemod.ml[2256,81737+19]..[2256,81737+64])
                                    Pexp_construct "Tmod_apply" (typing/typemod.ml[2256,81737+19]..[2256,81737+29])
                                    Some
                                      expression (typing/typemod.ml[2256,81737+29]..[2256,81737+64])
                                        Pexp_tuple
                                        [
                                          expression (typing/typemod.ml[2256,81737+30]..[2256,81737+35])
                                            Pexp_ident "funct" (typing/typemod.ml[2256,81737+30]..[2256,81737+35])
                                          expression (typing/typemod.ml[2256,81737+37]..[2256,81737+49])
                                            Pexp_field
                                            expression (typing/typemod.ml[2256,81737+37]..[2256,81737+45])
                                              Pexp_ident "app_view" (typing/typemod.ml[2256,81737+37]..[2256,81737+45])
                                            "arg" (typing/typemod.ml[2256,81737+46]..[2256,81737+49])
                                          expression (typing/typemod.ml[2256,81737+51]..[2256,81737+63])
                                            Pexp_construct "Tcoerce_none" (typing/typemod.ml[2256,81737+51]..[2256,81737+63])
                                            None
                                        ]
                                "mod_type" (typing/typemod.ml[2257,81803+8]..[2257,81803+16])
                                  expression (typing/typemod.ml[2257,81803+19]..[2257,81803+26])
                                    Pexp_ident "mty_res" (typing/typemod.ml[2257,81803+19]..[2257,81803+26])
                                "mod_env" (typing/typemod.ml[2258,81831+8]..[2258,81831+15])
                                  expression (typing/typemod.ml[2258,81831+18]..[2258,81831+21])
                                    Pexp_ident "env" (typing/typemod.ml[2258,81831+18]..[2258,81831+21])
                                "mod_attributes" (typing/typemod.ml[2259,81854+8]..[2259,81854+22])
                                  expression (typing/typemod.ml[2259,81854+25]..[2259,81854+44])
                                    Pexp_field
                                    expression (typing/typemod.ml[2259,81854+25]..[2259,81854+33])
                                      Pexp_ident "app_view" (typing/typemod.ml[2259,81854+25]..[2259,81854+33])
                                    "attributes" (typing/typemod.ml[2259,81854+34]..[2259,81854+44])
                                "mod_loc" (typing/typemod.ml[2260,81900+8]..[2260,81900+15])
                                  expression (typing/typemod.ml[2260,81900+18]..[2260,81900+31])
                                    Pexp_field
                                    expression (typing/typemod.ml[2260,81900+18]..[2260,81900+23])
                                      Pexp_ident "funct" (typing/typemod.ml[2260,81900+18]..[2260,81900+23])
                                    "mod_loc" (typing/typemod.ml[2260,81900+24]..[2260,81900+31])
                              ]
                              None
                      <case>
                        pattern (typing/typemod.ml[2261,81934+4]..[2261,81934+66])
                          Ppat_alias "mty_functor" (typing/typemod.ml[2261,81934+55]..[2261,81934+66])
                          pattern (typing/typemod.ml[2261,81934+4]..[2261,81934+51])
                            Ppat_construct "Mty_functor" (typing/typemod.ml[2261,81934+4]..[2261,81934+15])
                            Some
                              []
                              pattern (typing/typemod.ml[2261,81934+16]..[2261,81934+51])
                                Ppat_tuple
                                [
                                  pattern (typing/typemod.ml[2261,81934+17]..[2261,81934+41])
                                    Ppat_construct "Named" (typing/typemod.ml[2261,81934+17]..[2261,81934+22])
                                    Some
                                      []
                                      pattern (typing/typemod.ml[2261,81934+23]..[2261,81934+41])
                                        Ppat_tuple
                                        [
                                          pattern (typing/typemod.ml[2261,81934+24]..[2261,81934+29])
                                            Ppat_var "param" (typing/typemod.ml[2261,81934+24]..[2261,81934+29])
                                          pattern (typing/typemod.ml[2261,81934+31]..[2261,81934+40])
                                            Ppat_var "mty_param" (typing/typemod.ml[2261,81934+31]..[2261,81934+40])
                                        ]
                                  pattern (typing/typemod.ml[2261,81934+43]..[2261,81934+50])
                                    Ppat_var "mty_res" (typing/typemod.ml[2261,81934+43]..[2261,81934+50])
                                ]
                        expression (typing/typemod.ml[2262,82004+6]..[2320,84304+32])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[2262,82004+10]..[2262,82004+18])
                                Ppat_var "coercion" (typing/typemod.ml[2262,82004+10]..[2262,82004+18])
                              expression (typing/typemod.ml[2263,82025+8]..[2271,82334+78])
                                Pexp_try
                                expression (typing/typemod.ml[2264,82037+10]..[2266,82125+43])
                                  Pexp_apply
                                  expression (typing/typemod.ml[2264,82037+10]..[2264,82037+29])
                                    Pexp_ident "Includemod.modtypes" (typing/typemod.ml[2264,82037+10]..[2264,82037+29])
                                  [
                                    <arg>
                                    Labelled "loc"
                                      expression (typing/typemod.ml[2265,82067+17]..[2265,82067+37])
                                        Pexp_field
                                        expression (typing/typemod.ml[2265,82067+17]..[2265,82067+29])
                                          Pexp_field
                                          expression (typing/typemod.ml[2265,82067+17]..[2265,82067+25])
                                            Pexp_ident "app_view" (typing/typemod.ml[2265,82067+17]..[2265,82067+25])
                                          "arg" (typing/typemod.ml[2265,82067+26]..[2265,82067+29])
                                        "mod_loc" (typing/typemod.ml[2265,82067+30]..[2265,82067+37])
                                    <arg>
                                    Labelled "mark"
                                      expression (typing/typemod.ml[2265,82067+44]..[2265,82067+53])
                                        Pexp_construct "Mark_both" (typing/typemod.ml[2265,82067+44]..[2265,82067+53])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2265,82067+54]..[2265,82067+57])
                                        Pexp_ident "env" (typing/typemod.ml[2265,82067+54]..[2265,82067+57])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2266,82125+12]..[2266,82125+33])
                                        Pexp_field
                                        expression (typing/typemod.ml[2266,82125+12]..[2266,82125+24])
                                          Pexp_field
                                          expression (typing/typemod.ml[2266,82125+12]..[2266,82125+20])
                                            Pexp_ident "app_view" (typing/typemod.ml[2266,82125+12]..[2266,82125+20])
                                          "arg" (typing/typemod.ml[2266,82125+21]..[2266,82125+24])
                                        "mod_type" (typing/typemod.ml[2266,82125+25]..[2266,82125+33])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2266,82125+34]..[2266,82125+43])
                                        Pexp_ident "mty_param" (typing/typemod.ml[2266,82125+34]..[2266,82125+43])
                                  ]
                                [
                                  <case>
                                    pattern (typing/typemod.ml[2267,82169+13]..[2267,82169+31])
                                      Ppat_construct "Includemod.Error" (typing/typemod.ml[2267,82169+13]..[2267,82169+29])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2267,82169+30]..[2267,82169+31])
                                          Ppat_any
                                    expression (typing/typemod.ml[2268,82204+10]..[2271,82334+78])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[2268,82204+14]..[2268,82204+18])
                                            Ppat_var "args" (typing/typemod.ml[2268,82204+14]..[2268,82204+18])
                                          expression (typing/typemod.ml[2268,82204+21]..[2268,82204+55])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2268,82204+21]..[2268,82204+29])
                                              Pexp_ident "List.map" (typing/typemod.ml[2268,82204+21]..[2268,82204+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2268,82204+30]..[2268,82204+50])
                                                  Pexp_ident "simplify_app_summary" (typing/typemod.ml[2268,82204+30]..[2268,82204+50])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2268,82204+51]..[2268,82204+55])
                                                  Pexp_ident "args" (typing/typemod.ml[2268,82204+51]..[2268,82204+55])
                                            ]
                                      ]
                                      expression (typing/typemod.ml[2269,82263+10]..[2271,82334+78])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[2269,82263+14]..[2269,82263+19])
                                              Ppat_var "mty_f" (typing/typemod.ml[2269,82263+14]..[2269,82263+19])
                                            expression (typing/typemod.ml[2269,82263+22]..[2269,82263+35])
                                              Pexp_field
                                              expression (typing/typemod.ml[2269,82263+22]..[2269,82263+26])
                                                Pexp_ident "md_f" (typing/typemod.ml[2269,82263+22]..[2269,82263+26])
                                              "mod_type" (typing/typemod.ml[2269,82263+27]..[2269,82263+35])
                                        ]
                                        expression (typing/typemod.ml[2270,82302+10]..[2271,82334+78])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[2270,82302+14]..[2270,82302+21])
                                                Ppat_var "lid_app" (typing/typemod.ml[2270,82302+14]..[2270,82302+21])
                                              expression (typing/typemod.ml[2270,82302+24]..[2270,82302+28])
                                                Pexp_construct "None" (typing/typemod.ml[2270,82302+24]..[2270,82302+28])
                                                None
                                          ]
                                          expression (typing/typemod.ml[2271,82334+10]..[2271,82334+78])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2271,82334+10]..[2271,82334+15])
                                              Pexp_ident "raise" (typing/typemod.ml[2271,82334+10]..[2271,82334+15])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2271,82334+15]..[2271,82334+78])
                                                  Pexp_construct "Includemod.Apply_error" (typing/typemod.ml[2271,82334+16]..[2271,82334+38])
                                                  Some
                                                    expression (typing/typemod.ml[2271,82334+39]..[2271,82334+77])
                                                      Pexp_record
                                                      [
                                                        "loc" (typing/typemod.ml[2271,82334+40]..[2271,82334+43])
                                                          expression (typing/typemod.ml[2271,82334+44]..[2271,82334+53])
                                                            Pexp_ident "apply_loc" (typing/typemod.ml[2271,82334+44]..[2271,82334+53])
                                                        "env" (typing/typemod.ml[2271,82334+54]..[2271,82334+57]) ghost
                                                          expression (typing/typemod.ml[2271,82334+54]..[2271,82334+57])
                                                            Pexp_ident "env" (typing/typemod.ml[2271,82334+54]..[2271,82334+57])
                                                        "lid_app" (typing/typemod.ml[2271,82334+58]..[2271,82334+65]) ghost
                                                          expression (typing/typemod.ml[2271,82334+58]..[2271,82334+65])
                                                            Pexp_ident "lid_app" (typing/typemod.ml[2271,82334+58]..[2271,82334+65])
                                                        "mty_f" (typing/typemod.ml[2271,82334+66]..[2271,82334+71]) ghost
                                                          expression (typing/typemod.ml[2271,82334+66]..[2271,82334+71])
                                                            Pexp_ident "mty_f" (typing/typemod.ml[2271,82334+66]..[2271,82334+71])
                                                        "args" (typing/typemod.ml[2271,82334+72]..[2271,82334+76]) ghost
                                                          expression (typing/typemod.ml[2271,82334+72]..[2271,82334+76])
                                                            Pexp_ident "args" (typing/typemod.ml[2271,82334+72]..[2271,82334+76])
                                                      ]
                                                      None
                                            ]
                                ]
                          ]
                          expression (typing/typemod.ml[2273,82422+6]..[2320,84304+32])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[2273,82422+10]..[2273,82422+18])
                                  Ppat_var "mty_appl" (typing/typemod.ml[2273,82422+10]..[2273,82422+18])
                                expression (typing/typemod.ml[2274,82443+8]..[2312,84005+22])
                                  Pexp_match
                                  expression (typing/typemod.ml[2274,82443+14]..[2274,82443+31])
                                    Pexp_field
                                    expression (typing/typemod.ml[2274,82443+14]..[2274,82443+22])
                                      Pexp_ident "app_view" (typing/typemod.ml[2274,82443+14]..[2274,82443+22])
                                    "arg_path" (typing/typemod.ml[2274,82443+23]..[2274,82443+31])
                                  [
                                    <case>
                                      pattern (typing/typemod.ml[2275,82480+10]..[2275,82480+19])
                                        Ppat_construct "Some" (typing/typemod.ml[2275,82480+10]..[2275,82480+14])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[2275,82480+15]..[2275,82480+19])
                                            Ppat_var "path" (typing/typemod.ml[2275,82480+15]..[2275,82480+19])
                                      expression (typing/typemod.ml[2276,82503+12]..[2282,82726+55])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[2276,82503+16]..[2276,82503+21])
                                              Ppat_var "scope" (typing/typemod.ml[2276,82503+16]..[2276,82503+21])
                                            expression (typing/typemod.ml[2276,82503+24]..[2276,82503+45])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2276,82503+24]..[2276,82503+42])
                                                Pexp_ident "Ctype.create_scope" (typing/typemod.ml[2276,82503+24]..[2276,82503+42])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2276,82503+43]..[2276,82503+45])
                                                    Pexp_construct "()" (typing/typemod.ml[2276,82503+43]..[2276,82503+45])
                                                    None
                                              ]
                                        ]
                                        expression (typing/typemod.ml[2277,82552+12]..[2282,82726+55])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[2277,82552+16]..[2277,82552+21])
                                                Ppat_var "subst" (typing/typemod.ml[2277,82552+16]..[2277,82552+21])
                                              expression (typing/typemod.ml[2278,82576+14]..[2280,82646+64])
                                                Pexp_match
                                                expression (typing/typemod.ml[2278,82576+20]..[2278,82576+25])
                                                  Pexp_ident "param" (typing/typemod.ml[2278,82576+20]..[2278,82576+25])
                                                [
                                                  <case>
                                                    pattern (typing/typemod.ml[2279,82607+16]..[2279,82607+20])
                                                      Ppat_construct "None" (typing/typemod.ml[2279,82607+16]..[2279,82607+20])
                                                      None
                                                    expression (typing/typemod.ml[2279,82607+24]..[2279,82607+38])
                                                      Pexp_ident "Subst.identity" (typing/typemod.ml[2279,82607+24]..[2279,82607+38])
                                                  <case>
                                                    pattern (typing/typemod.ml[2280,82646+16]..[2280,82646+22])
                                                      Ppat_construct "Some" (typing/typemod.ml[2280,82646+16]..[2280,82646+20])
                                                      Some
                                                        []
                                                        pattern (typing/typemod.ml[2280,82646+21]..[2280,82646+22])
                                                          Ppat_var "p" (typing/typemod.ml[2280,82646+21]..[2280,82646+22])
                                                    expression (typing/typemod.ml[2280,82646+26]..[2280,82646+64])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[2280,82646+26]..[2280,82646+42])
                                                        Pexp_ident "Subst.add_module" (typing/typemod.ml[2280,82646+26]..[2280,82646+42])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2280,82646+43]..[2280,82646+44])
                                                            Pexp_ident "p" (typing/typemod.ml[2280,82646+43]..[2280,82646+44])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2280,82646+45]..[2280,82646+49])
                                                            Pexp_ident "path" (typing/typemod.ml[2280,82646+45]..[2280,82646+49])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2280,82646+50]..[2280,82646+64])
                                                            Pexp_ident "Subst.identity" (typing/typemod.ml[2280,82646+50]..[2280,82646+64])
                                                      ]
                                                ]
                                          ]
                                          expression (typing/typemod.ml[2282,82726+12]..[2282,82726+55])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2282,82726+12]..[2282,82726+25])
                                              Pexp_ident "Subst.modtype" (typing/typemod.ml[2282,82726+12]..[2282,82726+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2282,82726+26]..[2282,82726+41])
                                                  Pexp_construct "Rescope" (typing/typemod.ml[2282,82726+27]..[2282,82726+34])
                                                  Some
                                                    expression (typing/typemod.ml[2282,82726+35]..[2282,82726+40])
                                                      Pexp_ident "scope" (typing/typemod.ml[2282,82726+35]..[2282,82726+40])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2282,82726+42]..[2282,82726+47])
                                                  Pexp_ident "subst" (typing/typemod.ml[2282,82726+42]..[2282,82726+47])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2282,82726+48]..[2282,82726+55])
                                                  Pexp_ident "mty_res" (typing/typemod.ml[2282,82726+48]..[2282,82726+55])
                                            ]
                                    <case>
                                      pattern (typing/typemod.ml[2283,82782+10]..[2283,82782+14])
                                        Ppat_construct "None" (typing/typemod.ml[2283,82782+10]..[2283,82782+14])
                                        None
                                      expression (typing/typemod.ml[2284,82800+12]..[2312,84005+22])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[2284,82800+16]..[2284,82800+31])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[2284,82800+16]..[2284,82800+19])
                                                  Ppat_var "env" (typing/typemod.ml[2284,82800+16]..[2284,82800+19])
                                                pattern (typing/typemod.ml[2284,82800+21]..[2284,82800+31])
                                                  Ppat_var "nondep_mty" (typing/typemod.ml[2284,82800+21]..[2284,82800+31])
                                              ]
                                            expression (typing/typemod.ml[2285,82834+14]..[2297,83423+59])
                                              Pexp_match
                                              expression (typing/typemod.ml[2285,82834+20]..[2285,82834+25])
                                                Pexp_ident "param" (typing/typemod.ml[2285,82834+20]..[2285,82834+25])
                                              [
                                                <case>
                                                  pattern (typing/typemod.ml[2286,82865+16]..[2286,82865+20])
                                                    Ppat_construct "None" (typing/typemod.ml[2286,82865+16]..[2286,82865+20])
                                                    None
                                                  expression (typing/typemod.ml[2286,82865+24]..[2286,82865+36])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[2286,82865+24]..[2286,82865+27])
                                                        Pexp_ident "env" (typing/typemod.ml[2286,82865+24]..[2286,82865+27])
                                                      expression (typing/typemod.ml[2286,82865+29]..[2286,82865+36])
                                                        Pexp_ident "mty_res" (typing/typemod.ml[2286,82865+29]..[2286,82865+36])
                                                    ]
                                                <case>
                                                  pattern (typing/typemod.ml[2287,82902+16]..[2287,82902+26])
                                                    Ppat_construct "Some" (typing/typemod.ml[2287,82902+16]..[2287,82902+20])
                                                    Some
                                                      []
                                                      pattern (typing/typemod.ml[2287,82902+21]..[2287,82902+26])
                                                        Ppat_var "param" (typing/typemod.ml[2287,82902+21]..[2287,82902+26])
                                                  expression (typing/typemod.ml[2288,82932+18]..[2297,83423+59])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typemod.ml[2288,82932+22]..[2288,82932+25])
                                                          Ppat_var "env" (typing/typemod.ml[2288,82932+22]..[2288,82932+25])
                                                        expression (typing/typemod.ml[2289,82960+20]..[2290,83022+47])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[2289,82960+20]..[2289,82960+34])
                                                            Pexp_ident "Env.add_module" (typing/typemod.ml[2289,82960+20]..[2289,82960+34])
                                                          [
                                                            <arg>
                                                            Labelled "arg"
                                                              expression (typing/typemod.ml[2289,82960+40]..[2289,82960+44])
                                                                Pexp_construct "true" (typing/typemod.ml[2289,82960+40]..[2289,82960+44])
                                                                None
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2289,82960+45]..[2289,82960+50])
                                                                Pexp_ident "param" (typing/typemod.ml[2289,82960+45]..[2289,82960+50])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2289,82960+51]..[2289,82960+61])
                                                                Pexp_construct "Mp_present" (typing/typemod.ml[2289,82960+51]..[2289,82960+61])
                                                                None
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2290,83022+22]..[2290,83022+43])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[2290,83022+22]..[2290,83022+34])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[2290,83022+22]..[2290,83022+30])
                                                                    Pexp_ident "app_view" (typing/typemod.ml[2290,83022+22]..[2290,83022+30])
                                                                  "arg" (typing/typemod.ml[2290,83022+31]..[2290,83022+34])
                                                                "mod_type" (typing/typemod.ml[2290,83022+35]..[2290,83022+43])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2290,83022+44]..[2290,83022+47])
                                                                Pexp_ident "env" (typing/typemod.ml[2290,83022+44]..[2290,83022+47])
                                                          ]
                                                    ]
                                                    expression (typing/typemod.ml[2292,83091+18]..[2297,83423+59])
                                                      Pexp_sequence
                                                      expression (typing/typemod.ml[2292,83091+18]..[2293,83151+71])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2292,83091+18]..[2292,83091+42])
                                                          Pexp_ident "check_well_formed_module" (typing/typemod.ml[2292,83091+18]..[2292,83091+42])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2292,83091+43]..[2292,83091+46])
                                                              Pexp_ident "env" (typing/typemod.ml[2292,83091+43]..[2292,83091+46])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2292,83091+47]..[2292,83091+59])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[2292,83091+47]..[2292,83091+55])
                                                                Pexp_ident "app_view" (typing/typemod.ml[2292,83091+47]..[2292,83091+55])
                                                              "loc" (typing/typemod.ml[2292,83091+56]..[2292,83091+59])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2293,83151+20]..[2293,83151+63])
                                                              Pexp_constant PConst_string("the signature of this functor application",(typing/typemod.ml[2293,83151+21]..[2293,83151+62]),None)
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2293,83151+64]..[2293,83151+71])
                                                              Pexp_ident "mty_res" (typing/typemod.ml[2293,83151+64]..[2293,83151+71])
                                                        ]
                                                      expression (typing/typemod.ml[2294,83224+18]..[2297,83423+59])
                                                        Pexp_try
                                                        expression (typing/typemod.ml[2294,83224+22]..[2294,83224+69])
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/typemod.ml[2294,83224+22]..[2294,83224+25])
                                                              Pexp_ident "env" (typing/typemod.ml[2294,83224+22]..[2294,83224+25])
                                                            expression (typing/typemod.ml[2294,83224+27]..[2294,83224+69])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[2294,83224+27]..[2294,83224+49])
                                                                Pexp_ident "Mtype.nondep_supertype" (typing/typemod.ml[2294,83224+27]..[2294,83224+49])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[2294,83224+50]..[2294,83224+53])
                                                                    Pexp_ident "env" (typing/typemod.ml[2294,83224+50]..[2294,83224+53])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[2294,83224+54]..[2294,83224+61])
                                                                    Pexp_construct "::" (typing/typemod.ml[2294,83224+55]..[2294,83224+61]) ghost
                                                                    Some
                                                                      expression (typing/typemod.ml[2294,83224+55]..[2294,83224+61]) ghost
Pexp_tuple
[
  expression (typing/typemod.ml[2294,83224+55]..[2294,83224+60])
    Pexp_ident "param" (typing/typemod.ml[2294,83224+55]..[2294,83224+60])
  expression (typing/typemod.ml[2294,83224+60]..[2294,83224+61]) ghost
    Pexp_construct "[]" (typing/typemod.ml[2294,83224+60]..[2294,83224+61]) ghost
    None
]
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[2294,83224+62]..[2294,83224+69])
                                                                    Pexp_ident "mty_res" (typing/typemod.ml[2294,83224+62]..[2294,83224+69])
                                                              ]
                                                          ]
                                                        [
                                                          <case>
                                                            pattern (typing/typemod.ml[2295,83294+23]..[2295,83294+50])
                                                              Ppat_construct "Ctype.Nondep_cannot_erase" (typing/typemod.ml[2295,83294+23]..[2295,83294+48])
                                                              Some
                                                                []
                                                                pattern (typing/typemod.ml[2295,83294+49]..[2295,83294+50])
                                                                  Ppat_any
                                                            expression (typing/typemod.ml[2296,83348+20]..[2297,83423+59])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (typing/typemod.ml[2296,83348+24]..[2296,83348+29])
                                                                    Ppat_var "error" (typing/typemod.ml[2296,83348+24]..[2296,83348+29])
                                                                  expression (typing/typemod.ml[2296,83348+32]..[2296,83348+71])
                                                                    Pexp_construct "Cannot_eliminate_dependency" (typing/typemod.ml[2296,83348+32]..[2296,83348+59])
                                                                    Some
                                                                      expression (typing/typemod.ml[2296,83348+60]..[2296,83348+71])
Pexp_ident "mty_functor" (typing/typemod.ml[2296,83348+60]..[2296,83348+71])
                                                              ]
                                                              expression (typing/typemod.ml[2297,83423+20]..[2297,83423+59])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[2297,83423+20]..[2297,83423+25])
                                                                  Pexp_ident "raise" (typing/typemod.ml[2297,83423+20]..[2297,83423+25])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[2297,83423+26]..[2297,83423+59])
                                                                      Pexp_construct "Error" (typing/typemod.ml[2297,83423+27]..[2297,83423+32])
                                                                      Some
expression (typing/typemod.ml[2297,83423+32]..[2297,83423+58])
  Pexp_tuple
  [
    expression (typing/typemod.ml[2297,83423+33]..[2297,83423+45])
      Pexp_field
      expression (typing/typemod.ml[2297,83423+33]..[2297,83423+41])
        Pexp_ident "app_view" (typing/typemod.ml[2297,83423+33]..[2297,83423+41])
      "loc" (typing/typemod.ml[2297,83423+42]..[2297,83423+45])
    expression (typing/typemod.ml[2297,83423+47]..[2297,83423+50])
      Pexp_ident "env" (typing/typemod.ml[2297,83423+47]..[2297,83423+50])
    expression (typing/typemod.ml[2297,83423+52]..[2297,83423+57])
      Pexp_ident "error" (typing/typemod.ml[2297,83423+52]..[2297,83423+57])
  ]
                                                                ]
                                                        ]
                                              ]
                                        ]
                                        expression (typing/typemod.ml[2299,83498+12]..[2312,84005+22])
                                          Pexp_sequence
                                          expression (typing/typemod.ml[2299,83498+12]..[2311,83988+15])
                                            Pexp_match
                                            expression (typing/typemod.ml[2300,83522+14]..[2301,83556+75])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2300,83522+14]..[2300,83522+33])
                                                Pexp_ident "Includemod.modtypes" (typing/typemod.ml[2300,83522+14]..[2300,83522+33])
                                              [
                                                <arg>
                                                Labelled "loc"
                                                  expression (typing/typemod.ml[2301,83556+21]..[2301,83556+33])
                                                    Pexp_field
                                                    expression (typing/typemod.ml[2301,83556+21]..[2301,83556+29])
                                                      Pexp_ident "app_view" (typing/typemod.ml[2301,83556+21]..[2301,83556+29])
                                                    "loc" (typing/typemod.ml[2301,83556+30]..[2301,83556+33])
                                                <arg>
                                                Labelled "mark"
                                                  expression (typing/typemod.ml[2301,83556+40]..[2301,83556+52])
                                                    Pexp_construct "Mark_neither" (typing/typemod.ml[2301,83556+40]..[2301,83556+52])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2301,83556+53]..[2301,83556+56])
                                                    Pexp_ident "env" (typing/typemod.ml[2301,83556+53]..[2301,83556+56])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2301,83556+57]..[2301,83556+64])
                                                    Pexp_ident "mty_res" (typing/typemod.ml[2301,83556+57]..[2301,83556+64])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2301,83556+65]..[2301,83556+75])
                                                    Pexp_ident "nondep_mty" (typing/typemod.ml[2301,83556+65]..[2301,83556+75])
                                              ]
                                            [
                                              <case>
                                                pattern (typing/typemod.ml[2303,83649+14]..[2303,83649+26])
                                                  Ppat_construct "Tcoerce_none" (typing/typemod.ml[2303,83649+14]..[2303,83649+26])
                                                  None
                                                expression (typing/typemod.ml[2303,83649+30]..[2303,83649+32])
                                                  Pexp_construct "()" (typing/typemod.ml[2303,83649+30]..[2303,83649+32])
                                                  None
                                              <case>
                                                pattern (typing/typemod.ml[2304,83682+14]..[2304,83682+15])
                                                  Ppat_any
                                                expression (typing/typemod.ml[2305,83701+16]..[2307,83799+40])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2305,83701+16]..[2305,83701+27])
                                                    Pexp_ident "fatal_error" (typing/typemod.ml[2305,83701+16]..[2305,83701+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2306,83729+18]..[2307,83799+40])
                                                        Pexp_constant PConst_string("unexpected coercion from original module type to nondep_supertype one",(typing/typemod.ml[2306,83729+19]..[2307,83799+39]),None)
                                                  ]
                                              <case>
                                                pattern (typing/typemod.ml[2308,83840+14]..[2308,83840+42])
                                                  Ppat_exception
                                                  pattern (typing/typemod.ml[2308,83840+24]..[2308,83840+42])
                                                    Ppat_construct "Includemod.Error" (typing/typemod.ml[2308,83840+24]..[2308,83840+40])
                                                    Some
                                                      []
                                                      pattern (typing/typemod.ml[2308,83840+41]..[2308,83840+42])
                                                        Ppat_any
                                                expression (typing/typemod.ml[2309,83886+16]..[2310,83914+73])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2309,83886+16]..[2309,83886+27])
                                                    Pexp_ident "fatal_error" (typing/typemod.ml[2309,83886+16]..[2309,83886+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2310,83914+18]..[2310,83914+73])
                                                        Pexp_constant PConst_string("nondep_supertype not included in original module type",(typing/typemod.ml[2310,83914+19]..[2310,83914+72]),None)
                                                  ]
                                            ]
                                          expression (typing/typemod.ml[2312,84005+12]..[2312,84005+22])
                                            Pexp_ident "nondep_mty" (typing/typemod.ml[2312,84005+12]..[2312,84005+22])
                                  ]
                            ]
                            expression (typing/typemod.ml[2314,84037+6]..[2320,84304+32])
                              Pexp_sequence
                              expression (typing/typemod.ml[2314,84037+6]..[2315,84082+60])
                                Pexp_apply
                                expression (typing/typemod.ml[2314,84037+6]..[2314,84037+30])
                                  Pexp_ident "check_well_formed_module" (typing/typemod.ml[2314,84037+6]..[2314,84037+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2314,84037+31]..[2314,84037+34])
                                      Pexp_ident "env" (typing/typemod.ml[2314,84037+31]..[2314,84037+34])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2314,84037+35]..[2314,84037+44])
                                      Pexp_ident "apply_loc" (typing/typemod.ml[2314,84037+35]..[2314,84037+44])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2315,84082+8]..[2315,84082+51])
                                      Pexp_constant PConst_string("the signature of this functor application",(typing/typemod.ml[2315,84082+9]..[2315,84082+50]),None)
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2315,84082+52]..[2315,84082+60])
                                      Pexp_ident "mty_appl" (typing/typemod.ml[2315,84082+52]..[2315,84082+60])
                                ]
                              expression (typing/typemod.ml[2316,84144+6]..[2320,84304+32])
                                Pexp_record
                                [
                                  "mod_desc" (typing/typemod.ml[2316,84144+8]..[2316,84144+16])
                                    expression (typing/typemod.ml[2316,84144+19]..[2316,84144+60])
                                      Pexp_construct "Tmod_apply" (typing/typemod.ml[2316,84144+19]..[2316,84144+29])
                                      Some
                                        expression (typing/typemod.ml[2316,84144+29]..[2316,84144+60])
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[2316,84144+30]..[2316,84144+35])
                                              Pexp_ident "funct" (typing/typemod.ml[2316,84144+30]..[2316,84144+35])
                                            expression (typing/typemod.ml[2316,84144+37]..[2316,84144+49])
                                              Pexp_field
                                              expression (typing/typemod.ml[2316,84144+37]..[2316,84144+45])
                                                Pexp_ident "app_view" (typing/typemod.ml[2316,84144+37]..[2316,84144+45])
                                              "arg" (typing/typemod.ml[2316,84144+46]..[2316,84144+49])
                                            expression (typing/typemod.ml[2316,84144+51]..[2316,84144+59])
                                              Pexp_ident "coercion" (typing/typemod.ml[2316,84144+51]..[2316,84144+59])
                                          ]
                                  "mod_type" (typing/typemod.ml[2317,84206+8]..[2317,84206+16])
                                    expression (typing/typemod.ml[2317,84206+19]..[2317,84206+27])
                                      Pexp_ident "mty_appl" (typing/typemod.ml[2317,84206+19]..[2317,84206+27])
                                  "mod_env" (typing/typemod.ml[2318,84235+8]..[2318,84235+15])
                                    expression (typing/typemod.ml[2318,84235+18]..[2318,84235+21])
                                      Pexp_ident "env" (typing/typemod.ml[2318,84235+18]..[2318,84235+21])
                                  "mod_attributes" (typing/typemod.ml[2319,84258+8]..[2319,84258+22])
                                    expression (typing/typemod.ml[2319,84258+25]..[2319,84258+44])
                                      Pexp_field
                                      expression (typing/typemod.ml[2319,84258+25]..[2319,84258+33])
                                        Pexp_ident "app_view" (typing/typemod.ml[2319,84258+25]..[2319,84258+33])
                                      "attributes" (typing/typemod.ml[2319,84258+34]..[2319,84258+44])
                                  "mod_loc" (typing/typemod.ml[2320,84304+8]..[2320,84304+15])
                                    expression (typing/typemod.ml[2320,84304+18]..[2320,84304+30])
                                      Pexp_field
                                      expression (typing/typemod.ml[2320,84304+18]..[2320,84304+26])
                                        Pexp_ident "app_view" (typing/typemod.ml[2320,84304+18]..[2320,84304+26])
                                      "loc" (typing/typemod.ml[2320,84304+27]..[2320,84304+30])
                                ]
                                None
                      <case>
                        pattern (typing/typemod.ml[2321,84337+4]..[2321,84337+18])
                          Ppat_construct "Mty_alias" (typing/typemod.ml[2321,84337+4]..[2321,84337+13])
                          Some
                            []
                            pattern (typing/typemod.ml[2321,84337+14]..[2321,84337+18])
                              Ppat_var "path" (typing/typemod.ml[2321,84337+14]..[2321,84337+18])
                        expression (typing/typemod.ml[2322,84359+6]..[2322,84359+65])
                          Pexp_apply
                          expression (typing/typemod.ml[2322,84359+6]..[2322,84359+11])
                            Pexp_ident "raise" (typing/typemod.ml[2322,84359+6]..[2322,84359+11])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[2322,84359+11]..[2322,84359+65])
                                Pexp_construct "Error" (typing/typemod.ml[2322,84359+12]..[2322,84359+17])
                                Some
                                  expression (typing/typemod.ml[2322,84359+17]..[2322,84359+64])
                                    Pexp_tuple
                                    [
                                      expression (typing/typemod.ml[2322,84359+18]..[2322,84359+32])
                                        Pexp_field
                                        expression (typing/typemod.ml[2322,84359+18]..[2322,84359+26])
                                          Pexp_ident "app_view" (typing/typemod.ml[2322,84359+18]..[2322,84359+26])
                                        "f_loc" (typing/typemod.ml[2322,84359+27]..[2322,84359+32])
                                      expression (typing/typemod.ml[2322,84359+34]..[2322,84359+37])
                                        Pexp_ident "env" (typing/typemod.ml[2322,84359+34]..[2322,84359+37])
                                      expression (typing/typemod.ml[2322,84359+39]..[2322,84359+63])
                                        Pexp_construct "Cannot_scrape_alias" (typing/typemod.ml[2322,84359+39]..[2322,84359+58])
                                        Some
                                          expression (typing/typemod.ml[2322,84359+59]..[2322,84359+63])
                                            Pexp_ident "path" (typing/typemod.ml[2322,84359+59]..[2322,84359+63])
                                    ]
                          ]
                      <case>
                        pattern (typing/typemod.ml[2323,84425+4]..[2323,84425+5])
                          Ppat_any
                        expression (typing/typemod.ml[2324,84434+6]..[2327,84552+74])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[2324,84434+10]..[2324,84434+14])
                                Ppat_var "args" (typing/typemod.ml[2324,84434+10]..[2324,84434+14])
                              expression (typing/typemod.ml[2324,84434+17]..[2324,84434+51])
                                Pexp_apply
                                expression (typing/typemod.ml[2324,84434+17]..[2324,84434+25])
                                  Pexp_ident "List.map" (typing/typemod.ml[2324,84434+17]..[2324,84434+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2324,84434+26]..[2324,84434+46])
                                      Pexp_ident "simplify_app_summary" (typing/typemod.ml[2324,84434+26]..[2324,84434+46])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2324,84434+47]..[2324,84434+51])
                                      Pexp_ident "args" (typing/typemod.ml[2324,84434+47]..[2324,84434+51])
                                ]
                          ]
                          expression (typing/typemod.ml[2325,84489+6]..[2327,84552+74])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[2325,84489+10]..[2325,84489+15])
                                  Ppat_var "mty_f" (typing/typemod.ml[2325,84489+10]..[2325,84489+15])
                                expression (typing/typemod.ml[2325,84489+18]..[2325,84489+31])
                                  Pexp_field
                                  expression (typing/typemod.ml[2325,84489+18]..[2325,84489+22])
                                    Pexp_ident "md_f" (typing/typemod.ml[2325,84489+18]..[2325,84489+22])
                                  "mod_type" (typing/typemod.ml[2325,84489+23]..[2325,84489+31])
                            ]
                            expression (typing/typemod.ml[2326,84524+6]..[2327,84552+74])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[2326,84524+10]..[2326,84524+17])
                                    Ppat_var "lid_app" (typing/typemod.ml[2326,84524+10]..[2326,84524+17])
                                  expression (typing/typemod.ml[2326,84524+20]..[2326,84524+24])
                                    Pexp_construct "None" (typing/typemod.ml[2326,84524+20]..[2326,84524+24])
                                    None
                              ]
                              expression (typing/typemod.ml[2327,84552+6]..[2327,84552+74])
                                Pexp_apply
                                expression (typing/typemod.ml[2327,84552+6]..[2327,84552+11])
                                  Pexp_ident "raise" (typing/typemod.ml[2327,84552+6]..[2327,84552+11])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2327,84552+11]..[2327,84552+74])
                                      Pexp_construct "Includemod.Apply_error" (typing/typemod.ml[2327,84552+12]..[2327,84552+34])
                                      Some
                                        expression (typing/typemod.ml[2327,84552+35]..[2327,84552+73])
                                          Pexp_record
                                          [
                                            "loc" (typing/typemod.ml[2327,84552+36]..[2327,84552+39])
                                              expression (typing/typemod.ml[2327,84552+40]..[2327,84552+49])
                                                Pexp_ident "apply_loc" (typing/typemod.ml[2327,84552+40]..[2327,84552+49])
                                            "env" (typing/typemod.ml[2327,84552+50]..[2327,84552+53]) ghost
                                              expression (typing/typemod.ml[2327,84552+50]..[2327,84552+53])
                                                Pexp_ident "env" (typing/typemod.ml[2327,84552+50]..[2327,84552+53])
                                            "lid_app" (typing/typemod.ml[2327,84552+54]..[2327,84552+61]) ghost
                                              expression (typing/typemod.ml[2327,84552+54]..[2327,84552+61])
                                                Pexp_ident "lid_app" (typing/typemod.ml[2327,84552+54]..[2327,84552+61])
                                            "mty_f" (typing/typemod.ml[2327,84552+62]..[2327,84552+67]) ghost
                                              expression (typing/typemod.ml[2327,84552+62]..[2327,84552+67])
                                                Pexp_ident "mty_f" (typing/typemod.ml[2327,84552+62]..[2327,84552+67])
                                            "args" (typing/typemod.ml[2327,84552+68]..[2327,84552+72]) ghost
                                              expression (typing/typemod.ml[2327,84552+68]..[2327,84552+72])
                                                Pexp_ident "args" (typing/typemod.ml[2327,84552+68]..[2327,84552+72])
                                          ]
                                          None
                                ]
                    ]
      <def>
        pattern (typing/typemod.ml[2329,84628+4]..[2329,84628+18])
          Ppat_var "type_open_decl" (typing/typemod.ml[2329,84628+4]..[2329,84628+18])
        expression (typing/typemod.ml[2329,84628+19]..[2333,84838+5]) ghost
          Pexp_fun
          Optional "used_slot"
          None
          pattern (typing/typemod.ml[2329,84628+20]..[2329,84628+29])
            Ppat_var "used_slot" (typing/typemod.ml[2329,84628+20]..[2329,84628+29])
          expression (typing/typemod.ml[2329,84628+30]..[2333,84838+5]) ghost
            Pexp_fun
            Optional "toplevel"
            None
            pattern (typing/typemod.ml[2329,84628+31]..[2329,84628+39])
              Ppat_var "toplevel" (typing/typemod.ml[2329,84628+31]..[2329,84628+39])
            expression (typing/typemod.ml[2329,84628+40]..[2333,84838+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2329,84628+40]..[2329,84628+50])
                Ppat_var "funct_body" (typing/typemod.ml[2329,84628+40]..[2329,84628+50])
              expression (typing/typemod.ml[2329,84628+51]..[2333,84838+5]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2329,84628+51]..[2329,84628+56])
                  Ppat_var "names" (typing/typemod.ml[2329,84628+51]..[2329,84628+56])
                expression (typing/typemod.ml[2329,84628+57]..[2333,84838+5]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[2329,84628+57]..[2329,84628+60])
                    Ppat_var "env" (typing/typemod.ml[2329,84628+57]..[2329,84628+60])
                  expression (typing/typemod.ml[2329,84628+61]..[2333,84838+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[2329,84628+61]..[2329,84628+64])
                      Ppat_var "sod" (typing/typemod.ml[2329,84628+61]..[2329,84628+64])
                    expression (typing/typemod.ml[2330,84695+2]..[2333,84838+5])
                      Pexp_apply
                      expression (typing/typemod.ml[2330,84695+2]..[2330,84695+34])
                        Pexp_ident "Builtin_attributes.warning_scope" (typing/typemod.ml[2330,84695+2]..[2330,84695+34])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2330,84695+35]..[2330,84695+55])
                            Pexp_field
                            expression (typing/typemod.ml[2330,84695+35]..[2330,84695+38])
                              Pexp_ident "sod" (typing/typemod.ml[2330,84695+35]..[2330,84695+38])
                            "popen_attributes" (typing/typemod.ml[2330,84695+39]..[2330,84695+55])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2331,84751+4]..[2333,84838+5])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[2331,84751+9]..[2331,84751+11])
                              Ppat_construct "()" (typing/typemod.ml[2331,84751+9]..[2331,84751+11])
                              None
                            expression (typing/typemod.ml[2332,84766+7]..[2332,84766+71])
                              Pexp_apply
                              expression (typing/typemod.ml[2332,84766+7]..[2332,84766+25])
                                Pexp_ident "type_open_decl_aux" (typing/typemod.ml[2332,84766+7]..[2332,84766+25])
                              [
                                <arg>
                                Optional "used_slot"
                                  expression (typing/typemod.ml[2332,84766+27]..[2332,84766+36])
                                    Pexp_ident "used_slot" (typing/typemod.ml[2332,84766+27]..[2332,84766+36])
                                <arg>
                                Optional "toplevel"
                                  expression (typing/typemod.ml[2332,84766+38]..[2332,84766+46])
                                    Pexp_ident "toplevel" (typing/typemod.ml[2332,84766+38]..[2332,84766+46])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2332,84766+47]..[2332,84766+57])
                                    Pexp_ident "funct_body" (typing/typemod.ml[2332,84766+47]..[2332,84766+57])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2332,84766+58]..[2332,84766+63])
                                    Pexp_ident "names" (typing/typemod.ml[2332,84766+58]..[2332,84766+63])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2332,84766+64]..[2332,84766+67])
                                    Pexp_ident "env" (typing/typemod.ml[2332,84766+64]..[2332,84766+67])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2332,84766+68]..[2332,84766+71])
                                    Pexp_ident "sod" (typing/typemod.ml[2332,84766+68]..[2332,84766+71])
                              ]
                      ]
      <def>
        pattern (typing/typemod.ml[2335,84845+4]..[2335,84845+22])
          Ppat_var "type_open_decl_aux" (typing/typemod.ml[2335,84845+4]..[2335,84845+22])
        expression (typing/typemod.ml[2335,84845+23]..[2391,86858+26]) ghost
          Pexp_fun
          Optional "used_slot"
          None
          pattern (typing/typemod.ml[2335,84845+24]..[2335,84845+33])
            Ppat_var "used_slot" (typing/typemod.ml[2335,84845+24]..[2335,84845+33])
          expression (typing/typemod.ml[2335,84845+34]..[2391,86858+26]) ghost
            Pexp_fun
            Optional "toplevel"
            None
            pattern (typing/typemod.ml[2335,84845+35]..[2335,84845+43])
              Ppat_var "toplevel" (typing/typemod.ml[2335,84845+35]..[2335,84845+43])
            expression (typing/typemod.ml[2335,84845+44]..[2391,86858+26]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2335,84845+44]..[2335,84845+54])
                Ppat_var "funct_body" (typing/typemod.ml[2335,84845+44]..[2335,84845+54])
              expression (typing/typemod.ml[2335,84845+55]..[2391,86858+26]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2335,84845+55]..[2335,84845+60])
                  Ppat_var "names" (typing/typemod.ml[2335,84845+55]..[2335,84845+60])
                expression (typing/typemod.ml[2335,84845+61]..[2391,86858+26]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[2335,84845+61]..[2335,84845+64])
                    Ppat_var "env" (typing/typemod.ml[2335,84845+61]..[2335,84845+64])
                  expression (typing/typemod.ml[2335,84845+65]..[2391,86858+26]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[2335,84845+65]..[2335,84845+67])
                      Ppat_var "od" (typing/typemod.ml[2335,84845+65]..[2335,84845+67])
                    expression (typing/typemod.ml[2336,84915+2]..[2391,86858+26])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[2336,84915+6]..[2336,84915+9])
                            Ppat_var "loc" (typing/typemod.ml[2336,84915+6]..[2336,84915+9])
                          expression (typing/typemod.ml[2336,84915+12]..[2336,84915+24])
                            Pexp_field
                            expression (typing/typemod.ml[2336,84915+12]..[2336,84915+14])
                              Pexp_ident "od" (typing/typemod.ml[2336,84915+12]..[2336,84915+14])
                            "popen_loc" (typing/typemod.ml[2336,84915+15]..[2336,84915+24])
                      ]
                      expression (typing/typemod.ml[2337,84943+2]..[2391,86858+26])
                        Pexp_match
                        expression (typing/typemod.ml[2337,84943+8]..[2337,84943+31])
                          Pexp_field
                          expression (typing/typemod.ml[2337,84943+8]..[2337,84943+21])
                            Pexp_field
                            expression (typing/typemod.ml[2337,84943+8]..[2337,84943+10])
                              Pexp_ident "od" (typing/typemod.ml[2337,84943+8]..[2337,84943+10])
                            "popen_expr" (typing/typemod.ml[2337,84943+11]..[2337,84943+21])
                          "pmod_desc" (typing/typemod.ml[2337,84943+22]..[2337,84943+31])
                        [
                          <case>
                            pattern (typing/typemod.ml[2338,84980+4]..[2338,84980+18])
                              Ppat_construct "Pmod_ident" (typing/typemod.ml[2338,84980+4]..[2338,84980+14])
                              Some
                                []
                                pattern (typing/typemod.ml[2338,84980+15]..[2338,84980+18])
                                  Ppat_var "lid" (typing/typemod.ml[2338,84980+15]..[2338,84980+18])
                            expression (typing/typemod.ml[2339,85002+4]..[2356,85557+26])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[2339,85002+8]..[2339,85002+20])
                                    Ppat_tuple
                                    [
                                      pattern (typing/typemod.ml[2339,85002+8]..[2339,85002+12])
                                        Ppat_var "path" (typing/typemod.ml[2339,85002+8]..[2339,85002+12])
                                      pattern (typing/typemod.ml[2339,85002+14]..[2339,85002+20])
                                        Ppat_var "newenv" (typing/typemod.ml[2339,85002+14]..[2339,85002+20])
                                    ]
                                  expression (typing/typemod.ml[2340,85025+6]..[2340,85025+67])
                                    Pexp_apply
                                    expression (typing/typemod.ml[2340,85025+6]..[2340,85025+16])
                                      Pexp_ident "type_open_" (typing/typemod.ml[2340,85025+6]..[2340,85025+16])
                                    [
                                      <arg>
                                      Optional "used_slot"
                                        expression (typing/typemod.ml[2340,85025+18]..[2340,85025+27])
                                          Pexp_ident "used_slot" (typing/typemod.ml[2340,85025+18]..[2340,85025+27])
                                      <arg>
                                      Optional "toplevel"
                                        expression (typing/typemod.ml[2340,85025+29]..[2340,85025+37])
                                          Pexp_ident "toplevel" (typing/typemod.ml[2340,85025+29]..[2340,85025+37])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2340,85025+38]..[2340,85025+55])
                                          Pexp_field
                                          expression (typing/typemod.ml[2340,85025+38]..[2340,85025+40])
                                            Pexp_ident "od" (typing/typemod.ml[2340,85025+38]..[2340,85025+40])
                                          "popen_override" (typing/typemod.ml[2340,85025+41]..[2340,85025+55])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2340,85025+56]..[2340,85025+59])
                                          Pexp_ident "env" (typing/typemod.ml[2340,85025+56]..[2340,85025+59])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2340,85025+60]..[2340,85025+63])
                                          Pexp_ident "loc" (typing/typemod.ml[2340,85025+60]..[2340,85025+63])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2340,85025+64]..[2340,85025+67])
                                          Pexp_ident "lid" (typing/typemod.ml[2340,85025+64]..[2340,85025+67])
                                    ]
                              ]
                              expression (typing/typemod.ml[2342,85100+4]..[2356,85557+26])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[2342,85100+8]..[2342,85100+10])
                                      Ppat_var "md" (typing/typemod.ml[2342,85100+8]..[2342,85100+10])
                                    expression (typing/typemod.ml[2342,85100+13]..[2346,85285+49])
                                      Pexp_record
                                      [
                                        "mod_desc" (typing/typemod.ml[2342,85100+15]..[2342,85100+23])
                                          expression (typing/typemod.ml[2342,85100+26]..[2342,85100+48])
                                            Pexp_construct "Tmod_ident" (typing/typemod.ml[2342,85100+26]..[2342,85100+36])
                                            Some
                                              expression (typing/typemod.ml[2342,85100+37]..[2342,85100+48])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typemod.ml[2342,85100+38]..[2342,85100+42])
                                                    Pexp_ident "path" (typing/typemod.ml[2342,85100+38]..[2342,85100+42])
                                                  expression (typing/typemod.ml[2342,85100+44]..[2342,85100+47])
                                                    Pexp_ident "lid" (typing/typemod.ml[2342,85100+44]..[2342,85100+47])
                                                ]
                                        "mod_type" (typing/typemod.ml[2343,85150+15]..[2343,85150+23])
                                          expression (typing/typemod.ml[2343,85150+26]..[2343,85150+40])
                                            Pexp_construct "Mty_alias" (typing/typemod.ml[2343,85150+26]..[2343,85150+35])
                                            Some
                                              expression (typing/typemod.ml[2343,85150+36]..[2343,85150+40])
                                                Pexp_ident "path" (typing/typemod.ml[2343,85150+36]..[2343,85150+40])
                                        "mod_env" (typing/typemod.ml[2344,85192+15]..[2344,85192+22])
                                          expression (typing/typemod.ml[2344,85192+25]..[2344,85192+28])
                                            Pexp_ident "env" (typing/typemod.ml[2344,85192+25]..[2344,85192+28])
                                        "mod_attributes" (typing/typemod.ml[2345,85222+15]..[2345,85222+29])
                                          expression (typing/typemod.ml[2345,85222+32]..[2345,85222+61])
                                            Pexp_field
                                            expression (typing/typemod.ml[2345,85222+32]..[2345,85222+45])
                                              Pexp_field
                                              expression (typing/typemod.ml[2345,85222+32]..[2345,85222+34])
                                                Pexp_ident "od" (typing/typemod.ml[2345,85222+32]..[2345,85222+34])
                                              "popen_expr" (typing/typemod.ml[2345,85222+35]..[2345,85222+45])
                                            "pmod_attributes" (typing/typemod.ml[2345,85222+46]..[2345,85222+61])
                                        "mod_loc" (typing/typemod.ml[2346,85285+15]..[2346,85285+22])
                                          expression (typing/typemod.ml[2346,85285+25]..[2346,85285+47])
                                            Pexp_field
                                            expression (typing/typemod.ml[2346,85285+25]..[2346,85285+38])
                                              Pexp_field
                                              expression (typing/typemod.ml[2346,85285+25]..[2346,85285+27])
                                                Pexp_ident "od" (typing/typemod.ml[2346,85285+25]..[2346,85285+27])
                                              "popen_expr" (typing/typemod.ml[2346,85285+28]..[2346,85285+38])
                                            "pmod_loc" (typing/typemod.ml[2346,85285+39]..[2346,85285+47])
                                      ]
                                      None
                                ]
                                expression (typing/typemod.ml[2348,85342+4]..[2356,85557+26])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typemod.ml[2348,85342+8]..[2348,85342+18])
                                        Ppat_var "open_descr" (typing/typemod.ml[2348,85342+8]..[2348,85342+18])
                                      expression (typing/typemod.ml[2348,85342+21]..[2355,85548+5])
                                        Pexp_record
                                        [
                                          "open_expr" (typing/typemod.ml[2349,85365+6]..[2349,85365+15])
                                            expression (typing/typemod.ml[2349,85365+18]..[2349,85365+20])
                                              Pexp_ident "md" (typing/typemod.ml[2349,85365+18]..[2349,85365+20])
                                          "open_bound_items" (typing/typemod.ml[2350,85387+6]..[2350,85387+22])
                                            expression (typing/typemod.ml[2350,85387+25]..[2350,85387+27])
                                              Pexp_construct "[]" (typing/typemod.ml[2350,85387+25]..[2350,85387+27])
                                              None
                                          "open_override" (typing/typemod.ml[2351,85416+6]..[2351,85416+19])
                                            expression (typing/typemod.ml[2351,85416+22]..[2351,85416+39])
                                              Pexp_field
                                              expression (typing/typemod.ml[2351,85416+22]..[2351,85416+24])
                                                Pexp_ident "od" (typing/typemod.ml[2351,85416+22]..[2351,85416+24])
                                              "popen_override" (typing/typemod.ml[2351,85416+25]..[2351,85416+39])
                                          "open_env" (typing/typemod.ml[2352,85457+6]..[2352,85457+14])
                                            expression (typing/typemod.ml[2352,85457+17]..[2352,85457+23])
                                              Pexp_ident "newenv" (typing/typemod.ml[2352,85457+17]..[2352,85457+23])
                                          "open_loc" (typing/typemod.ml[2353,85482+6]..[2353,85482+14])
                                            expression (typing/typemod.ml[2353,85482+17]..[2353,85482+20])
                                              Pexp_ident "loc" (typing/typemod.ml[2353,85482+17]..[2353,85482+20])
                                          "open_attributes" (typing/typemod.ml[2354,85504+6]..[2354,85504+21])
                                            expression (typing/typemod.ml[2354,85504+24]..[2354,85504+43])
                                              Pexp_field
                                              expression (typing/typemod.ml[2354,85504+24]..[2354,85504+26])
                                                Pexp_ident "od" (typing/typemod.ml[2354,85504+24]..[2354,85504+26])
                                              "popen_attributes" (typing/typemod.ml[2354,85504+27]..[2354,85504+43])
                                        ]
                                        None
                                  ]
                                  expression (typing/typemod.ml[2356,85557+4]..[2356,85557+26])
                                    Pexp_tuple
                                    [
                                      expression (typing/typemod.ml[2356,85557+4]..[2356,85557+14])
                                        Pexp_ident "open_descr" (typing/typemod.ml[2356,85557+4]..[2356,85557+14])
                                      expression (typing/typemod.ml[2356,85557+16]..[2356,85557+18])
                                        Pexp_construct "[]" (typing/typemod.ml[2356,85557+16]..[2356,85557+18])
                                        None
                                      expression (typing/typemod.ml[2356,85557+20]..[2356,85557+26])
                                        Pexp_ident "newenv" (typing/typemod.ml[2356,85557+20]..[2356,85557+26])
                                    ]
                          <case>
                            pattern (typing/typemod.ml[2357,85584+4]..[2357,85584+5])
                              Ppat_any
                            expression (typing/typemod.ml[2358,85593+4]..[2391,86858+26])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[2358,85593+8]..[2358,85593+10])
                                    Ppat_var "md" (typing/typemod.ml[2358,85593+8]..[2358,85593+10])
                                  expression (typing/typemod.ml[2358,85593+13]..[2358,85593+63])
                                    Pexp_apply
                                    expression (typing/typemod.ml[2358,85593+13]..[2358,85593+24])
                                      Pexp_ident "type_module" (typing/typemod.ml[2358,85593+13]..[2358,85593+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2358,85593+25]..[2358,85593+29])
                                          Pexp_construct "true" (typing/typemod.ml[2358,85593+25]..[2358,85593+29])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2358,85593+30]..[2358,85593+40])
                                          Pexp_ident "funct_body" (typing/typemod.ml[2358,85593+30]..[2358,85593+40])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2358,85593+41]..[2358,85593+45])
                                          Pexp_construct "None" (typing/typemod.ml[2358,85593+41]..[2358,85593+45])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2358,85593+46]..[2358,85593+49])
                                          Pexp_ident "env" (typing/typemod.ml[2358,85593+46]..[2358,85593+49])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2358,85593+50]..[2358,85593+63])
                                          Pexp_field
                                          expression (typing/typemod.ml[2358,85593+50]..[2358,85593+52])
                                            Pexp_ident "od" (typing/typemod.ml[2358,85593+50]..[2358,85593+52])
                                          "popen_expr" (typing/typemod.ml[2358,85593+53]..[2358,85593+63])
                                    ]
                              ]
                              expression (typing/typemod.ml[2359,85660+4]..[2391,86858+26])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[2359,85660+8]..[2359,85660+13])
                                      Ppat_var "scope" (typing/typemod.ml[2359,85660+8]..[2359,85660+13])
                                    expression (typing/typemod.ml[2359,85660+16]..[2359,85660+37])
                                      Pexp_apply
                                      expression (typing/typemod.ml[2359,85660+16]..[2359,85660+34])
                                        Pexp_ident "Ctype.create_scope" (typing/typemod.ml[2359,85660+16]..[2359,85660+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2359,85660+35]..[2359,85660+37])
                                            Pexp_construct "()" (typing/typemod.ml[2359,85660+35]..[2359,85660+37])
                                            None
                                      ]
                                ]
                                expression (typing/typemod.ml[2360,85701+4]..[2391,86858+26])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typemod.ml[2360,85701+8]..[2360,85701+18])
                                        Ppat_tuple
                                        [
                                          pattern (typing/typemod.ml[2360,85701+8]..[2360,85701+10])
                                            Ppat_var "sg" (typing/typemod.ml[2360,85701+8]..[2360,85701+10])
                                          pattern (typing/typemod.ml[2360,85701+12]..[2360,85701+18])
                                            Ppat_var "newenv" (typing/typemod.ml[2360,85701+12]..[2360,85701+18])
                                        ]
                                      expression (typing/typemod.ml[2361,85722+6]..[2362,85801+11])
                                        Pexp_apply
                                        expression (typing/typemod.ml[2361,85722+6]..[2361,85722+25])
                                          Pexp_ident "Env.enter_signature" (typing/typemod.ml[2361,85722+6]..[2361,85722+25])
                                        [
                                          <arg>
                                          Labelled "scope"
                                            expression (typing/typemod.ml[2361,85722+27]..[2361,85722+32])
                                              Pexp_ident "scope" (typing/typemod.ml[2361,85722+27]..[2361,85722+32])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[2361,85722+33]..[2361,85722+78])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2361,85722+34]..[2361,85722+50])
                                                Pexp_ident "extract_sig_open" (typing/typemod.ml[2361,85722+34]..[2361,85722+50])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2361,85722+51]..[2361,85722+54])
                                                    Pexp_ident "env" (typing/typemod.ml[2361,85722+51]..[2361,85722+54])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2361,85722+55]..[2361,85722+65])
                                                    Pexp_field
                                                    expression (typing/typemod.ml[2361,85722+55]..[2361,85722+57])
                                                      Pexp_ident "md" (typing/typemod.ml[2361,85722+55]..[2361,85722+57])
                                                    "mod_loc" (typing/typemod.ml[2361,85722+58]..[2361,85722+65])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2361,85722+66]..[2361,85722+77])
                                                    Pexp_field
                                                    expression (typing/typemod.ml[2361,85722+66]..[2361,85722+68])
                                                      Pexp_ident "md" (typing/typemod.ml[2361,85722+66]..[2361,85722+68])
                                                    "mod_type" (typing/typemod.ml[2361,85722+69]..[2361,85722+77])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[2362,85801+8]..[2362,85801+11])
                                              Pexp_ident "env" (typing/typemod.ml[2362,85801+8]..[2362,85801+11])
                                        ]
                                  ]
                                  expression (typing/typemod.ml[2364,85820+4]..[2391,86858+26])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typemod.ml[2364,85820+8]..[2364,85820+24])
                                          Ppat_tuple
                                          [
                                            pattern (typing/typemod.ml[2364,85820+8]..[2364,85820+12])
                                              Ppat_var "info" (typing/typemod.ml[2364,85820+8]..[2364,85820+12])
                                            pattern (typing/typemod.ml[2364,85820+14]..[2364,85820+24])
                                              Ppat_var "visibility" (typing/typemod.ml[2364,85820+14]..[2364,85820+24])
                                          ]
                                        expression (typing/typemod.ml[2365,85847+6]..[2367,85926+35])
                                          Pexp_match
                                          expression (typing/typemod.ml[2365,85847+12]..[2365,85847+20])
                                            Pexp_ident "toplevel" (typing/typemod.ml[2365,85847+12]..[2365,85847+20])
                                          [
                                            <case>
                                              pattern (typing/typemod.ml[2366,85873+8]..[2366,85873+25])
                                                Ppat_or
                                                pattern (typing/typemod.ml[2366,85873+8]..[2366,85873+18])
                                                  Ppat_construct "Some" (typing/typemod.ml[2366,85873+8]..[2366,85873+12])
                                                  Some
                                                    []
                                                    pattern (typing/typemod.ml[2366,85873+13]..[2366,85873+18])
                                                      Ppat_construct "false" (typing/typemod.ml[2366,85873+13]..[2366,85873+18])
                                                      None
                                                pattern (typing/typemod.ml[2366,85873+21]..[2366,85873+25])
                                                  Ppat_construct "None" (typing/typemod.ml[2366,85873+21]..[2366,85873+25])
                                                  None
                                              expression (typing/typemod.ml[2366,85873+29]..[2366,85873+52])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typemod.ml[2366,85873+29]..[2366,85873+44])
                                                    Pexp_construct "Some" (typing/typemod.ml[2366,85873+29]..[2366,85873+33])
                                                    Some
                                                      expression (typing/typemod.ml[2366,85873+34]..[2366,85873+44])
                                                        Pexp_variant "From_open"
                                                        None
                                                  expression (typing/typemod.ml[2366,85873+46]..[2366,85873+52])
                                                    Pexp_construct "Hidden" (typing/typemod.ml[2366,85873+46]..[2366,85873+52])
                                                    None
                                                ]
                                            <case>
                                              pattern (typing/typemod.ml[2367,85926+8]..[2367,85926+17])
                                                Ppat_construct "Some" (typing/typemod.ml[2367,85926+8]..[2367,85926+12])
                                                Some
                                                  []
                                                  pattern (typing/typemod.ml[2367,85926+13]..[2367,85926+17])
                                                    Ppat_construct "true" (typing/typemod.ml[2367,85926+13]..[2367,85926+17])
                                                    None
                                              expression (typing/typemod.ml[2367,85926+21]..[2367,85926+35])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typemod.ml[2367,85926+21]..[2367,85926+25])
                                                    Pexp_construct "None" (typing/typemod.ml[2367,85926+21]..[2367,85926+25])
                                                    None
                                                  expression (typing/typemod.ml[2367,85926+27]..[2367,85926+35])
                                                    Pexp_construct "Exported" (typing/typemod.ml[2367,85926+27]..[2367,85926+35])
                                                    None
                                                ]
                                          ]
                                    ]
                                    expression (typing/typemod.ml[2369,85969+4]..[2391,86858+26])
                                      Pexp_sequence
                                      expression (typing/typemod.ml[2369,85969+4]..[2369,85969+76])
                                        Pexp_apply
                                        expression (typing/typemod.ml[2369,85969+4]..[2369,85969+24])
                                          Pexp_ident "Signature_group.iter" (typing/typemod.ml[2369,85969+4]..[2369,85969+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[2369,85969+25]..[2369,85969+73])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2369,85969+26]..[2369,85969+56])
                                                Pexp_ident "Signature_names.check_sig_item" (typing/typemod.ml[2369,85969+26]..[2369,85969+56])
                                              [
                                                <arg>
                                                Optional "info"
                                                  expression (typing/typemod.ml[2369,85969+58]..[2369,85969+62])
                                                    Pexp_ident "info" (typing/typemod.ml[2369,85969+58]..[2369,85969+62])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2369,85969+63]..[2369,85969+68])
                                                    Pexp_ident "names" (typing/typemod.ml[2369,85969+63]..[2369,85969+68])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2369,85969+69]..[2369,85969+72])
                                                    Pexp_ident "loc" (typing/typemod.ml[2369,85969+69]..[2369,85969+72])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[2369,85969+74]..[2369,85969+76])
                                              Pexp_ident "sg" (typing/typemod.ml[2369,85969+74]..[2369,85969+76])
                                        ]
                                      expression (typing/typemod.ml[2370,86047+4]..[2391,86858+26])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[2370,86047+8]..[2370,86047+10])
                                              Ppat_var "sg" (typing/typemod.ml[2370,86047+8]..[2370,86047+10])
                                            expression (typing/typemod.ml[2371,86060+6]..[2381,86625+10])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2371,86060+6]..[2371,86060+14])
                                                Pexp_ident "List.map" (typing/typemod.ml[2371,86060+6]..[2371,86060+14])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2371,86060+15]..[2381,86625+7])
                                                    Pexp_function
                                                    [
                                                      <case>
                                                        pattern (typing/typemod.ml[2372,86085+10]..[2372,86085+30])
                                                          Ppat_construct "Sig_value" (typing/typemod.ml[2372,86085+10]..[2372,86085+19])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[2372,86085+19]..[2372,86085+30])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[2372,86085+20]..[2372,86085+22])
                                                                  Ppat_var "id" (typing/typemod.ml[2372,86085+20]..[2372,86085+22])
                                                                pattern (typing/typemod.ml[2372,86085+24]..[2372,86085+26])
                                                                  Ppat_var "vd" (typing/typemod.ml[2372,86085+24]..[2372,86085+26])
                                                                pattern (typing/typemod.ml[2372,86085+28]..[2372,86085+29])
                                                                  Ppat_any
                                                              ]
                                                        expression (typing/typemod.ml[2372,86085+34]..[2372,86085+63])
                                                          Pexp_construct "Sig_value" (typing/typemod.ml[2372,86085+34]..[2372,86085+43])
                                                          Some
                                                            expression (typing/typemod.ml[2372,86085+43]..[2372,86085+63])
                                                              Pexp_tuple
                                                              [
                                                                expression (typing/typemod.ml[2372,86085+44]..[2372,86085+46])
                                                                  Pexp_ident "id" (typing/typemod.ml[2372,86085+44]..[2372,86085+46])
                                                                expression (typing/typemod.ml[2372,86085+48]..[2372,86085+50])
                                                                  Pexp_ident "vd" (typing/typemod.ml[2372,86085+48]..[2372,86085+50])
                                                                expression (typing/typemod.ml[2372,86085+52]..[2372,86085+62])
                                                                  Pexp_ident "visibility" (typing/typemod.ml[2372,86085+52]..[2372,86085+62])
                                                              ]
                                                      <case>
                                                        pattern (typing/typemod.ml[2373,86149+10]..[2373,86149+33])
                                                          Ppat_construct "Sig_type" (typing/typemod.ml[2373,86149+10]..[2373,86149+18])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[2373,86149+18]..[2373,86149+33])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[2373,86149+19]..[2373,86149+21])
                                                                  Ppat_var "id" (typing/typemod.ml[2373,86149+19]..[2373,86149+21])
                                                                pattern (typing/typemod.ml[2373,86149+23]..[2373,86149+25])
                                                                  Ppat_var "td" (typing/typemod.ml[2373,86149+23]..[2373,86149+25])
                                                                pattern (typing/typemod.ml[2373,86149+27]..[2373,86149+29])
                                                                  Ppat_var "rs" (typing/typemod.ml[2373,86149+27]..[2373,86149+29])
                                                                pattern (typing/typemod.ml[2373,86149+31]..[2373,86149+32])
                                                                  Ppat_any
                                                              ]
                                                        expression (typing/typemod.ml[2373,86149+37]..[2373,86149+69])
                                                          Pexp_construct "Sig_type" (typing/typemod.ml[2373,86149+37]..[2373,86149+45])
                                                          Some
                                                            expression (typing/typemod.ml[2373,86149+45]..[2373,86149+69])
                                                              Pexp_tuple
                                                              [
                                                                expression (typing/typemod.ml[2373,86149+46]..[2373,86149+48])
                                                                  Pexp_ident "id" (typing/typemod.ml[2373,86149+46]..[2373,86149+48])
                                                                expression (typing/typemod.ml[2373,86149+50]..[2373,86149+52])
                                                                  Pexp_ident "td" (typing/typemod.ml[2373,86149+50]..[2373,86149+52])
                                                                expression (typing/typemod.ml[2373,86149+54]..[2373,86149+56])
                                                                  Pexp_ident "rs" (typing/typemod.ml[2373,86149+54]..[2373,86149+56])
                                                                expression (typing/typemod.ml[2373,86149+58]..[2373,86149+68])
                                                                  Pexp_ident "visibility" (typing/typemod.ml[2373,86149+58]..[2373,86149+68])
                                                              ]
                                                      <case>
                                                        pattern (typing/typemod.ml[2374,86219+10]..[2374,86219+35])
                                                          Ppat_construct "Sig_typext" (typing/typemod.ml[2374,86219+10]..[2374,86219+20])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[2374,86219+20]..[2374,86219+35])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[2374,86219+21]..[2374,86219+23])
                                                                  Ppat_var "id" (typing/typemod.ml[2374,86219+21]..[2374,86219+23])
                                                                pattern (typing/typemod.ml[2374,86219+25]..[2374,86219+27])
                                                                  Ppat_var "ec" (typing/typemod.ml[2374,86219+25]..[2374,86219+27])
                                                                pattern (typing/typemod.ml[2374,86219+29]..[2374,86219+31])
                                                                  Ppat_var "et" (typing/typemod.ml[2374,86219+29]..[2374,86219+31])
                                                                pattern (typing/typemod.ml[2374,86219+33]..[2374,86219+34])
                                                                  Ppat_any
                                                              ]
                                                        expression (typing/typemod.ml[2374,86219+39]..[2374,86219+73])
                                                          Pexp_construct "Sig_typext" (typing/typemod.ml[2374,86219+39]..[2374,86219+49])
                                                          Some
                                                            expression (typing/typemod.ml[2374,86219+49]..[2374,86219+73])
                                                              Pexp_tuple
                                                              [
                                                                expression (typing/typemod.ml[2374,86219+50]..[2374,86219+52])
                                                                  Pexp_ident "id" (typing/typemod.ml[2374,86219+50]..[2374,86219+52])
                                                                expression (typing/typemod.ml[2374,86219+54]..[2374,86219+56])
                                                                  Pexp_ident "ec" (typing/typemod.ml[2374,86219+54]..[2374,86219+56])
                                                                expression (typing/typemod.ml[2374,86219+58]..[2374,86219+60])
                                                                  Pexp_ident "et" (typing/typemod.ml[2374,86219+58]..[2374,86219+60])
                                                                expression (typing/typemod.ml[2374,86219+62]..[2374,86219+72])
                                                                  Pexp_ident "visibility" (typing/typemod.ml[2374,86219+62]..[2374,86219+72])
                                                              ]
                                                      <case>
                                                        pattern (typing/typemod.ml[2375,86293+10]..[2375,86293+39])
                                                          Ppat_construct "Sig_module" (typing/typemod.ml[2375,86293+10]..[2375,86293+20])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[2375,86293+20]..[2375,86293+39])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[2375,86293+21]..[2375,86293+23])
                                                                  Ppat_var "id" (typing/typemod.ml[2375,86293+21]..[2375,86293+23])
                                                                pattern (typing/typemod.ml[2375,86293+25]..[2375,86293+27])
                                                                  Ppat_var "mp" (typing/typemod.ml[2375,86293+25]..[2375,86293+27])
                                                                pattern (typing/typemod.ml[2375,86293+29]..[2375,86293+31])
                                                                  Ppat_var "md" (typing/typemod.ml[2375,86293+29]..[2375,86293+31])
                                                                pattern (typing/typemod.ml[2375,86293+33]..[2375,86293+35])
                                                                  Ppat_var "rs" (typing/typemod.ml[2375,86293+33]..[2375,86293+35])
                                                                pattern (typing/typemod.ml[2375,86293+37]..[2375,86293+38])
                                                                  Ppat_any
                                                              ]
                                                        expression (typing/typemod.ml[2376,86336+12]..[2376,86336+50])
                                                          Pexp_construct "Sig_module" (typing/typemod.ml[2376,86336+12]..[2376,86336+22])
                                                          Some
                                                            expression (typing/typemod.ml[2376,86336+22]..[2376,86336+50])
                                                              Pexp_tuple
                                                              [
                                                                expression (typing/typemod.ml[2376,86336+23]..[2376,86336+25])
                                                                  Pexp_ident "id" (typing/typemod.ml[2376,86336+23]..[2376,86336+25])
                                                                expression (typing/typemod.ml[2376,86336+27]..[2376,86336+29])
                                                                  Pexp_ident "mp" (typing/typemod.ml[2376,86336+27]..[2376,86336+29])
                                                                expression (typing/typemod.ml[2376,86336+31]..[2376,86336+33])
                                                                  Pexp_ident "md" (typing/typemod.ml[2376,86336+31]..[2376,86336+33])
                                                                expression (typing/typemod.ml[2376,86336+35]..[2376,86336+37])
                                                                  Pexp_ident "rs" (typing/typemod.ml[2376,86336+35]..[2376,86336+37])
                                                                expression (typing/typemod.ml[2376,86336+39]..[2376,86336+49])
                                                                  Pexp_ident "visibility" (typing/typemod.ml[2376,86336+39]..[2376,86336+49])
                                                              ]
                                                      <case>
                                                        pattern (typing/typemod.ml[2377,86387+10]..[2377,86387+33])
                                                          Ppat_construct "Sig_modtype" (typing/typemod.ml[2377,86387+10]..[2377,86387+21])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[2377,86387+21]..[2377,86387+33])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[2377,86387+22]..[2377,86387+24])
                                                                  Ppat_var "id" (typing/typemod.ml[2377,86387+22]..[2377,86387+24])
                                                                pattern (typing/typemod.ml[2377,86387+26]..[2377,86387+29])
                                                                  Ppat_var "mtd" (typing/typemod.ml[2377,86387+26]..[2377,86387+29])
                                                                pattern (typing/typemod.ml[2377,86387+31]..[2377,86387+32])
                                                                  Ppat_any
                                                              ]
                                                        expression (typing/typemod.ml[2377,86387+37]..[2377,86387+69])
                                                          Pexp_construct "Sig_modtype" (typing/typemod.ml[2377,86387+37]..[2377,86387+48])
                                                          Some
                                                            expression (typing/typemod.ml[2377,86387+48]..[2377,86387+69])
                                                              Pexp_tuple
                                                              [
                                                                expression (typing/typemod.ml[2377,86387+49]..[2377,86387+51])
                                                                  Pexp_ident "id" (typing/typemod.ml[2377,86387+49]..[2377,86387+51])
                                                                expression (typing/typemod.ml[2377,86387+53]..[2377,86387+56])
                                                                  Pexp_ident "mtd" (typing/typemod.ml[2377,86387+53]..[2377,86387+56])
                                                                expression (typing/typemod.ml[2377,86387+58]..[2377,86387+68])
                                                                  Pexp_ident "visibility" (typing/typemod.ml[2377,86387+58]..[2377,86387+68])
                                                              ]
                                                      <case>
                                                        pattern (typing/typemod.ml[2378,86457+10]..[2378,86457+34])
                                                          Ppat_construct "Sig_class" (typing/typemod.ml[2378,86457+10]..[2378,86457+19])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[2378,86457+19]..[2378,86457+34])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[2378,86457+20]..[2378,86457+22])
                                                                  Ppat_var "id" (typing/typemod.ml[2378,86457+20]..[2378,86457+22])
                                                                pattern (typing/typemod.ml[2378,86457+24]..[2378,86457+26])
                                                                  Ppat_var "cd" (typing/typemod.ml[2378,86457+24]..[2378,86457+26])
                                                                pattern (typing/typemod.ml[2378,86457+28]..[2378,86457+30])
                                                                  Ppat_var "rs" (typing/typemod.ml[2378,86457+28]..[2378,86457+30])
                                                                pattern (typing/typemod.ml[2378,86457+32]..[2378,86457+33])
                                                                  Ppat_any
                                                              ]
                                                        expression (typing/typemod.ml[2378,86457+38]..[2378,86457+71])
                                                          Pexp_construct "Sig_class" (typing/typemod.ml[2378,86457+38]..[2378,86457+47])
                                                          Some
                                                            expression (typing/typemod.ml[2378,86457+47]..[2378,86457+71])
                                                              Pexp_tuple
                                                              [
                                                                expression (typing/typemod.ml[2378,86457+48]..[2378,86457+50])
                                                                  Pexp_ident "id" (typing/typemod.ml[2378,86457+48]..[2378,86457+50])
                                                                expression (typing/typemod.ml[2378,86457+52]..[2378,86457+54])
                                                                  Pexp_ident "cd" (typing/typemod.ml[2378,86457+52]..[2378,86457+54])
                                                                expression (typing/typemod.ml[2378,86457+56]..[2378,86457+58])
                                                                  Pexp_ident "rs" (typing/typemod.ml[2378,86457+56]..[2378,86457+58])
                                                                expression (typing/typemod.ml[2378,86457+60]..[2378,86457+70])
                                                                  Pexp_ident "visibility" (typing/typemod.ml[2378,86457+60]..[2378,86457+70])
                                                              ]
                                                      <case>
                                                        pattern (typing/typemod.ml[2379,86529+10]..[2379,86529+40])
                                                          Ppat_construct "Sig_class_type" (typing/typemod.ml[2379,86529+10]..[2379,86529+24])
                                                          Some
                                                            []
                                                            pattern (typing/typemod.ml[2379,86529+24]..[2379,86529+40])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[2379,86529+25]..[2379,86529+27])
                                                                  Ppat_var "id" (typing/typemod.ml[2379,86529+25]..[2379,86529+27])
                                                                pattern (typing/typemod.ml[2379,86529+29]..[2379,86529+32])
                                                                  Ppat_var "ctd" (typing/typemod.ml[2379,86529+29]..[2379,86529+32])
                                                                pattern (typing/typemod.ml[2379,86529+34]..[2379,86529+36])
                                                                  Ppat_var "rs" (typing/typemod.ml[2379,86529+34]..[2379,86529+36])
                                                                pattern (typing/typemod.ml[2379,86529+38]..[2379,86529+39])
                                                                  Ppat_any
                                                              ]
                                                        expression (typing/typemod.ml[2380,86573+12]..[2380,86573+51])
                                                          Pexp_construct "Sig_class_type" (typing/typemod.ml[2380,86573+12]..[2380,86573+26])
                                                          Some
                                                            expression (typing/typemod.ml[2380,86573+26]..[2380,86573+51])
                                                              Pexp_tuple
                                                              [
                                                                expression (typing/typemod.ml[2380,86573+27]..[2380,86573+29])
                                                                  Pexp_ident "id" (typing/typemod.ml[2380,86573+27]..[2380,86573+29])
                                                                expression (typing/typemod.ml[2380,86573+31]..[2380,86573+34])
                                                                  Pexp_ident "ctd" (typing/typemod.ml[2380,86573+31]..[2380,86573+34])
                                                                expression (typing/typemod.ml[2380,86573+36]..[2380,86573+38])
                                                                  Pexp_ident "rs" (typing/typemod.ml[2380,86573+36]..[2380,86573+38])
                                                                expression (typing/typemod.ml[2380,86573+40]..[2380,86573+50])
                                                                  Pexp_ident "visibility" (typing/typemod.ml[2380,86573+40]..[2380,86573+50])
                                                              ]
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2381,86625+8]..[2381,86625+10])
                                                    Pexp_ident "sg" (typing/typemod.ml[2381,86625+8]..[2381,86625+10])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[2383,86643+4]..[2391,86858+26])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[2383,86643+8]..[2383,86643+18])
                                                Ppat_var "open_descr" (typing/typemod.ml[2383,86643+8]..[2383,86643+18])
                                              expression (typing/typemod.ml[2383,86643+21]..[2390,86849+5])
                                                Pexp_record
                                                [
                                                  "open_expr" (typing/typemod.ml[2384,86666+6]..[2384,86666+15])
                                                    expression (typing/typemod.ml[2384,86666+18]..[2384,86666+20])
                                                      Pexp_ident "md" (typing/typemod.ml[2384,86666+18]..[2384,86666+20])
                                                  "open_bound_items" (typing/typemod.ml[2385,86688+6]..[2385,86688+22])
                                                    expression (typing/typemod.ml[2385,86688+25]..[2385,86688+27])
                                                      Pexp_ident "sg" (typing/typemod.ml[2385,86688+25]..[2385,86688+27])
                                                  "open_override" (typing/typemod.ml[2386,86717+6]..[2386,86717+19])
                                                    expression (typing/typemod.ml[2386,86717+22]..[2386,86717+39])
                                                      Pexp_field
                                                      expression (typing/typemod.ml[2386,86717+22]..[2386,86717+24])
                                                        Pexp_ident "od" (typing/typemod.ml[2386,86717+22]..[2386,86717+24])
                                                      "popen_override" (typing/typemod.ml[2386,86717+25]..[2386,86717+39])
                                                  "open_env" (typing/typemod.ml[2387,86758+6]..[2387,86758+14])
                                                    expression (typing/typemod.ml[2387,86758+17]..[2387,86758+23])
                                                      Pexp_ident "newenv" (typing/typemod.ml[2387,86758+17]..[2387,86758+23])
                                                  "open_loc" (typing/typemod.ml[2388,86783+6]..[2388,86783+14])
                                                    expression (typing/typemod.ml[2388,86783+17]..[2388,86783+20])
                                                      Pexp_ident "loc" (typing/typemod.ml[2388,86783+17]..[2388,86783+20])
                                                  "open_attributes" (typing/typemod.ml[2389,86805+6]..[2389,86805+21])
                                                    expression (typing/typemod.ml[2389,86805+24]..[2389,86805+43])
                                                      Pexp_field
                                                      expression (typing/typemod.ml[2389,86805+24]..[2389,86805+26])
                                                        Pexp_ident "od" (typing/typemod.ml[2389,86805+24]..[2389,86805+26])
                                                      "popen_attributes" (typing/typemod.ml[2389,86805+27]..[2389,86805+43])
                                                ]
                                                None
                                          ]
                                          expression (typing/typemod.ml[2391,86858+4]..[2391,86858+26])
                                            Pexp_tuple
                                            [
                                              expression (typing/typemod.ml[2391,86858+4]..[2391,86858+14])
                                                Pexp_ident "open_descr" (typing/typemod.ml[2391,86858+4]..[2391,86858+14])
                                              expression (typing/typemod.ml[2391,86858+16]..[2391,86858+18])
                                                Pexp_ident "sg" (typing/typemod.ml[2391,86858+16]..[2391,86858+18])
                                              expression (typing/typemod.ml[2391,86858+20]..[2391,86858+26])
                                                Pexp_ident "newenv" (typing/typemod.ml[2391,86858+20]..[2391,86858+26])
                                            ]
                        ]
      <def>
        pattern (typing/typemod.ml[2393,86886+4]..[2393,86886+18])
          Ppat_var "type_structure" (typing/typemod.ml[2393,86886+4]..[2393,86886+18])
        expression (typing/typemod.ml[2393,86886+19]..[2686,98591+46]) ghost
          Pexp_fun
          Optional "toplevel"
          Some
            expression (typing/typemod.ml[2393,86886+32]..[2393,86886+37])
              Pexp_construct "false" (typing/typemod.ml[2393,86886+32]..[2393,86886+37])
              None
          pattern (typing/typemod.ml[2393,86886+21]..[2393,86886+29])
            Ppat_var "toplevel" (typing/typemod.ml[2393,86886+21]..[2393,86886+29])
          expression (typing/typemod.ml[2393,86886+39]..[2686,98591+46]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2393,86886+39]..[2393,86886+49])
              Ppat_var "funct_body" (typing/typemod.ml[2393,86886+39]..[2393,86886+49])
            expression (typing/typemod.ml[2393,86886+50]..[2686,98591+46]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2393,86886+50]..[2393,86886+56])
                Ppat_var "anchor" (typing/typemod.ml[2393,86886+50]..[2393,86886+56])
              expression (typing/typemod.ml[2393,86886+57]..[2686,98591+46]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2393,86886+57]..[2393,86886+60])
                  Ppat_var "env" (typing/typemod.ml[2393,86886+57]..[2393,86886+60])
                expression (typing/typemod.ml[2393,86886+61]..[2686,98591+46]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[2393,86886+61]..[2393,86886+65])
                    Ppat_var "sstr" (typing/typemod.ml[2393,86886+61]..[2393,86886+65])
                  expression (typing/typemod.ml[2394,86954+2]..[2686,98591+46])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[2394,86954+6]..[2394,86954+11])
                          Ppat_var "names" (typing/typemod.ml[2394,86954+6]..[2394,86954+11])
                        expression (typing/typemod.ml[2394,86954+14]..[2394,86954+39])
                          Pexp_apply
                          expression (typing/typemod.ml[2394,86954+14]..[2394,86954+36])
                            Pexp_ident "Signature_names.create" (typing/typemod.ml[2394,86954+14]..[2394,86954+36])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[2394,86954+37]..[2394,86954+39])
                                Pexp_construct "()" (typing/typemod.ml[2394,86954+37]..[2394,86954+39])
                                None
                          ]
                    ]
                    expression (typing/typemod.ml[2396,86998+2]..[2686,98591+46])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[2396,86998+6]..[2396,86998+19])
                            Ppat_var "type_str_item" (typing/typemod.ml[2396,86998+6]..[2396,86998+19])
                          expression (typing/typemod.ml[2396,86998+20]..[2663,97608+33]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[2396,86998+20]..[2396,86998+23])
                              Ppat_var "env" (typing/typemod.ml[2396,86998+20]..[2396,86998+23])
                            expression (typing/typemod.ml[2396,86998+24]..[2663,97608+33]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typemod.ml[2396,86998+24]..[2396,86998+58])
                                Ppat_record Closed
                                [
                                  "pstr_loc" (typing/typemod.ml[2396,86998+25]..[2396,86998+33])
                                    pattern (typing/typemod.ml[2396,86998+36]..[2396,86998+39])
                                      Ppat_var "loc" (typing/typemod.ml[2396,86998+36]..[2396,86998+39])
                                  "pstr_desc" (typing/typemod.ml[2396,86998+41]..[2396,86998+50])
                                    pattern (typing/typemod.ml[2396,86998+53]..[2396,86998+57])
                                      Ppat_var "desc" (typing/typemod.ml[2396,86998+53]..[2396,86998+57])
                                ]
                              expression (typing/typemod.ml[2397,87059+4]..[2663,97608+33])
                                Pexp_match
                                expression (typing/typemod.ml[2397,87059+10]..[2397,87059+14])
                                  Pexp_ident "desc" (typing/typemod.ml[2397,87059+10]..[2397,87059+14])
                                [
                                  <case>
                                    pattern (typing/typemod.ml[2398,87079+6]..[2398,87079+30])
                                      Ppat_construct "Pstr_eval" (typing/typemod.ml[2398,87079+6]..[2398,87079+15])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2398,87079+16]..[2398,87079+30])
                                          Ppat_tuple
                                          [
                                            pattern (typing/typemod.ml[2398,87079+17]..[2398,87079+22])
                                              Ppat_var "sexpr" (typing/typemod.ml[2398,87079+17]..[2398,87079+22])
                                            pattern (typing/typemod.ml[2398,87079+24]..[2398,87079+29])
                                              Ppat_var "attrs" (typing/typemod.ml[2398,87079+24]..[2398,87079+29])
                                          ]
                                    expression (typing/typemod.ml[2399,87113+8]..[2403,87251+40])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[2399,87113+12]..[2399,87113+16])
                                            Ppat_var "expr" (typing/typemod.ml[2399,87113+12]..[2399,87113+16])
                                          expression (typing/typemod.ml[2400,87132+10]..[2401,87181+58])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2400,87132+10]..[2400,87132+42])
                                              Pexp_ident "Builtin_attributes.warning_scope" (typing/typemod.ml[2400,87132+10]..[2400,87132+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2400,87132+43]..[2400,87132+48])
                                                  Pexp_ident "attrs" (typing/typemod.ml[2400,87132+43]..[2400,87132+48])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2401,87181+12]..[2401,87181+58])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/typemod.ml[2401,87181+17]..[2401,87181+19])
                                                    Ppat_construct "()" (typing/typemod.ml[2401,87181+17]..[2401,87181+19])
                                                    None
                                                  expression (typing/typemod.ml[2401,87181+23]..[2401,87181+57])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[2401,87181+23]..[2401,87181+47])
                                                      Pexp_ident "Typecore.type_expression" (typing/typemod.ml[2401,87181+23]..[2401,87181+47])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2401,87181+48]..[2401,87181+51])
                                                          Pexp_ident "env" (typing/typemod.ml[2401,87181+48]..[2401,87181+51])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2401,87181+52]..[2401,87181+57])
                                                          Pexp_ident "sexpr" (typing/typemod.ml[2401,87181+52]..[2401,87181+57])
                                                    ]
                                            ]
                                      ]
                                      expression (typing/typemod.ml[2403,87251+8]..[2403,87251+40])
                                        Pexp_tuple
                                        [
                                          expression (typing/typemod.ml[2403,87251+8]..[2403,87251+31])
                                            Pexp_construct "Tstr_eval" (typing/typemod.ml[2403,87251+8]..[2403,87251+17])
                                            Some
                                              expression (typing/typemod.ml[2403,87251+18]..[2403,87251+31])
                                                Pexp_tuple
                                                [
                                                  expression (typing/typemod.ml[2403,87251+19]..[2403,87251+23])
                                                    Pexp_ident "expr" (typing/typemod.ml[2403,87251+19]..[2403,87251+23])
                                                  expression (typing/typemod.ml[2403,87251+25]..[2403,87251+30])
                                                    Pexp_ident "attrs" (typing/typemod.ml[2403,87251+25]..[2403,87251+30])
                                                ]
                                          expression (typing/typemod.ml[2403,87251+33]..[2403,87251+35])
                                            Pexp_construct "[]" (typing/typemod.ml[2403,87251+33]..[2403,87251+35])
                                            None
                                          expression (typing/typemod.ml[2403,87251+37]..[2403,87251+40])
                                            Pexp_ident "env" (typing/typemod.ml[2403,87251+37]..[2403,87251+40])
                                        ]
                                  <case>
                                    pattern (typing/typemod.ml[2404,87292+6]..[2404,87292+33])
                                      Ppat_construct "Pstr_value" (typing/typemod.ml[2404,87292+6]..[2404,87292+16])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2404,87292+16]..[2404,87292+33])
                                          Ppat_tuple
                                          [
                                            pattern (typing/typemod.ml[2404,87292+17]..[2404,87292+25])
                                              Ppat_var "rec_flag" (typing/typemod.ml[2404,87292+17]..[2404,87292+25])
                                            pattern (typing/typemod.ml[2404,87292+27]..[2404,87292+32])
                                              Ppat_var "sdefs" (typing/typemod.ml[2404,87292+27]..[2404,87292+32])
                                          ]
                                    expression (typing/typemod.ml[2405,87329+8]..[2417,87933+14])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[2405,87329+12]..[2405,87329+26])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[2405,87329+13]..[2405,87329+17])
                                                Ppat_var "defs" (typing/typemod.ml[2405,87329+13]..[2405,87329+17])
                                              pattern (typing/typemod.ml[2405,87329+19]..[2405,87329+25])
                                                Ppat_var "newenv" (typing/typemod.ml[2405,87329+19]..[2405,87329+25])
                                            ]
                                          expression (typing/typemod.ml[2406,87358+10]..[2406,87358+50])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2406,87358+10]..[2406,87358+31])
                                              Pexp_ident "Typecore.type_binding" (typing/typemod.ml[2406,87358+10]..[2406,87358+31])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2406,87358+32]..[2406,87358+35])
                                                  Pexp_ident "env" (typing/typemod.ml[2406,87358+32]..[2406,87358+35])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2406,87358+36]..[2406,87358+44])
                                                  Pexp_ident "rec_flag" (typing/typemod.ml[2406,87358+36]..[2406,87358+44])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2406,87358+45]..[2406,87358+50])
                                                  Pexp_ident "sdefs" (typing/typemod.ml[2406,87358+45]..[2406,87358+50])
                                            ]
                                      ]
                                      expression (typing/typemod.ml[2407,87412+8]..[2417,87933+14])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[2407,87412+12]..[2407,87412+14])
                                              Ppat_construct "()" (typing/typemod.ml[2407,87412+12]..[2407,87412+14])
                                              None
                                            expression (typing/typemod.ml[2407,87412+17]..[2408,87458+52])
                                              Pexp_ifthenelse
                                              expression (typing/typemod.ml[2407,87412+20]..[2407,87412+40])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2407,87412+29]..[2407,87412+30])
                                                  Pexp_ident "=" (typing/typemod.ml[2407,87412+29]..[2407,87412+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2407,87412+20]..[2407,87412+28])
                                                      Pexp_ident "rec_flag" (typing/typemod.ml[2407,87412+20]..[2407,87412+28])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2407,87412+31]..[2407,87412+40])
                                                      Pexp_construct "Recursive" (typing/typemod.ml[2407,87412+31]..[2407,87412+40])
                                                      None
                                                ]
                                              expression (typing/typemod.ml[2408,87458+10]..[2408,87458+52])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2408,87458+10]..[2408,87458+43])
                                                  Pexp_ident "Typecore.check_recursive_bindings" (typing/typemod.ml[2408,87458+10]..[2408,87458+43])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2408,87458+44]..[2408,87458+47])
                                                      Pexp_ident "env" (typing/typemod.ml[2408,87458+44]..[2408,87458+47])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2408,87458+48]..[2408,87458+52])
                                                      Pexp_ident "defs" (typing/typemod.ml[2408,87458+48]..[2408,87458+52])
                                                ]
                                              None
                                        ]
                                        expression (typing/typemod.ml[2412,87680+8]..[2417,87933+14])
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[2412,87680+8]..[2412,87680+34])
                                              Pexp_construct "Tstr_value" (typing/typemod.ml[2412,87680+8]..[2412,87680+18])
                                              Some
                                                expression (typing/typemod.ml[2412,87680+18]..[2412,87680+34])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typemod.ml[2412,87680+19]..[2412,87680+27])
                                                      Pexp_ident "rec_flag" (typing/typemod.ml[2412,87680+19]..[2412,87680+27])
                                                    expression (typing/typemod.ml[2412,87680+29]..[2412,87680+33])
                                                      Pexp_ident "defs" (typing/typemod.ml[2412,87680+29]..[2412,87680+33])
                                                  ]
                                            expression (typing/typemod.ml[2413,87716+8]..[2416,87893+38])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2413,87716+8]..[2413,87716+16])
                                                Pexp_ident "List.map" (typing/typemod.ml[2413,87716+8]..[2413,87716+16])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2413,87716+17]..[2416,87893+9])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (typing/typemod.ml[2413,87716+22]..[2413,87716+53])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typemod.ml[2413,87716+23]..[2413,87716+25])
                                                          Ppat_var "id" (typing/typemod.ml[2413,87716+23]..[2413,87716+25])
                                                        pattern (typing/typemod.ml[2413,87716+27]..[2413,87716+46])
                                                          Ppat_record Open
                                                          [
                                                            "Asttypes.loc" (typing/typemod.ml[2413,87716+29]..[2413,87716+41]) ghost
                                                              pattern (typing/typemod.ml[2413,87716+29]..[2413,87716+41])
                                                                Ppat_var "loc" (typing/typemod.ml[2413,87716+29]..[2413,87716+41])
                                                          ]
                                                        pattern (typing/typemod.ml[2413,87716+48]..[2413,87716+52])
                                                          Ppat_var "_typ" (typing/typemod.ml[2413,87716+48]..[2413,87716+52])
                                                      ]
                                                    expression (typing/typemod.ml[2414,87772+10]..[2415,87824+68])
                                                      Pexp_sequence
                                                      expression (typing/typemod.ml[2414,87772+10]..[2414,87772+50])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2414,87772+10]..[2414,87772+37])
                                                          Pexp_ident "Signature_names.check_value" (typing/typemod.ml[2414,87772+10]..[2414,87772+37])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2414,87772+38]..[2414,87772+43])
                                                              Pexp_ident "names" (typing/typemod.ml[2414,87772+38]..[2414,87772+43])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2414,87772+44]..[2414,87772+47])
                                                              Pexp_ident "loc" (typing/typemod.ml[2414,87772+44]..[2414,87772+47])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2414,87772+48]..[2414,87772+50])
                                                              Pexp_ident "id" (typing/typemod.ml[2414,87772+48]..[2414,87772+50])
                                                        ]
                                                      expression (typing/typemod.ml[2415,87824+10]..[2415,87824+68])
                                                        Pexp_construct "Sig_value" (typing/typemod.ml[2415,87824+10]..[2415,87824+19])
                                                        Some
                                                          expression (typing/typemod.ml[2415,87824+19]..[2415,87824+68])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typemod.ml[2415,87824+20]..[2415,87824+22])
                                                                Pexp_ident "id" (typing/typemod.ml[2415,87824+20]..[2415,87824+22])
                                                              expression (typing/typemod.ml[2415,87824+24]..[2415,87824+57])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[2415,87824+24]..[2415,87824+38])
                                                                  Pexp_ident "Env.find_value" (typing/typemod.ml[2415,87824+24]..[2415,87824+38])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[2415,87824+39]..[2415,87824+50])
                                                                      Pexp_construct "Pident" (typing/typemod.ml[2415,87824+40]..[2415,87824+46])
                                                                      Some
expression (typing/typemod.ml[2415,87824+47]..[2415,87824+49])
  Pexp_ident "id" (typing/typemod.ml[2415,87824+47]..[2415,87824+49])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[2415,87824+51]..[2415,87824+57])
                                                                      Pexp_ident "newenv" (typing/typemod.ml[2415,87824+51]..[2415,87824+57])
                                                                ]
                                                              expression (typing/typemod.ml[2415,87824+59]..[2415,87824+67])
                                                                Pexp_construct "Exported" (typing/typemod.ml[2415,87824+59]..[2415,87824+67])
                                                                None
                                                            ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2416,87893+10]..[2416,87893+38])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[2416,87893+11]..[2416,87893+32])
                                                      Pexp_ident "let_bound_idents_full" (typing/typemod.ml[2416,87893+11]..[2416,87893+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2416,87893+33]..[2416,87893+37])
                                                          Pexp_ident "defs" (typing/typemod.ml[2416,87893+33]..[2416,87893+37])
                                                    ]
                                              ]
                                            expression (typing/typemod.ml[2417,87933+8]..[2417,87933+14])
                                              Pexp_ident "newenv" (typing/typemod.ml[2417,87933+8]..[2417,87933+14])
                                          ]
                                  <case>
                                    pattern (typing/typemod.ml[2418,87948+6]..[2418,87948+26])
                                      Ppat_construct "Pstr_primitive" (typing/typemod.ml[2418,87948+6]..[2418,87948+20])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2418,87948+21]..[2418,87948+26])
                                          Ppat_var "sdesc" (typing/typemod.ml[2418,87948+21]..[2418,87948+26])
                                    expression (typing/typemod.ml[2419,87978+8]..[2423,88206+14])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[2419,87978+12]..[2419,87978+26])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[2419,87978+13]..[2419,87978+17])
                                                Ppat_var "desc" (typing/typemod.ml[2419,87978+13]..[2419,87978+17])
                                              pattern (typing/typemod.ml[2419,87978+19]..[2419,87978+25])
                                                Ppat_var "newenv" (typing/typemod.ml[2419,87978+19]..[2419,87978+25])
                                            ]
                                          expression (typing/typemod.ml[2419,87978+29]..[2419,87978+69])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2419,87978+29]..[2419,87978+55])
                                              Pexp_ident "Typedecl.transl_value_decl" (typing/typemod.ml[2419,87978+29]..[2419,87978+55])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2419,87978+56]..[2419,87978+59])
                                                  Pexp_ident "env" (typing/typemod.ml[2419,87978+56]..[2419,87978+59])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2419,87978+60]..[2419,87978+63])
                                                  Pexp_ident "loc" (typing/typemod.ml[2419,87978+60]..[2419,87978+63])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2419,87978+64]..[2419,87978+69])
                                                  Pexp_ident "sdesc" (typing/typemod.ml[2419,87978+64]..[2419,87978+69])
                                            ]
                                      ]
                                      expression (typing/typemod.ml[2420,88051+8]..[2423,88206+14])
                                        Pexp_sequence
                                        expression (typing/typemod.ml[2420,88051+8]..[2420,88051+66])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2420,88051+8]..[2420,88051+35])
                                            Pexp_ident "Signature_names.check_value" (typing/typemod.ml[2420,88051+8]..[2420,88051+35])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2420,88051+36]..[2420,88051+41])
                                                Pexp_ident "names" (typing/typemod.ml[2420,88051+36]..[2420,88051+41])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2420,88051+42]..[2420,88051+54])
                                                Pexp_field
                                                expression (typing/typemod.ml[2420,88051+42]..[2420,88051+46])
                                                  Pexp_ident "desc" (typing/typemod.ml[2420,88051+42]..[2420,88051+46])
                                                "val_loc" (typing/typemod.ml[2420,88051+47]..[2420,88051+54])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2420,88051+55]..[2420,88051+66])
                                                Pexp_field
                                                expression (typing/typemod.ml[2420,88051+55]..[2420,88051+59])
                                                  Pexp_ident "desc" (typing/typemod.ml[2420,88051+55]..[2420,88051+59])
                                                "val_id" (typing/typemod.ml[2420,88051+60]..[2420,88051+66])
                                          ]
                                        expression (typing/typemod.ml[2421,88119+8]..[2423,88206+14])
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[2421,88119+8]..[2421,88119+27])
                                              Pexp_construct "Tstr_primitive" (typing/typemod.ml[2421,88119+8]..[2421,88119+22])
                                              Some
                                                expression (typing/typemod.ml[2421,88119+23]..[2421,88119+27])
                                                  Pexp_ident "desc" (typing/typemod.ml[2421,88119+23]..[2421,88119+27])
                                            expression (typing/typemod.ml[2422,88148+8]..[2422,88148+56])
                                              Pexp_construct "::" (typing/typemod.ml[2422,88148+9]..[2422,88148+56]) ghost
                                              Some
                                                expression (typing/typemod.ml[2422,88148+9]..[2422,88148+56]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typemod.ml[2422,88148+9]..[2422,88148+55])
                                                      Pexp_construct "Sig_value" (typing/typemod.ml[2422,88148+9]..[2422,88148+18])
                                                      Some
                                                        expression (typing/typemod.ml[2422,88148+18]..[2422,88148+55])
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/typemod.ml[2422,88148+19]..[2422,88148+30])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[2422,88148+19]..[2422,88148+23])
                                                                Pexp_ident "desc" (typing/typemod.ml[2422,88148+19]..[2422,88148+23])
                                                              "val_id" (typing/typemod.ml[2422,88148+24]..[2422,88148+30])
                                                            expression (typing/typemod.ml[2422,88148+32]..[2422,88148+44])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[2422,88148+32]..[2422,88148+36])
                                                                Pexp_ident "desc" (typing/typemod.ml[2422,88148+32]..[2422,88148+36])
                                                              "val_val" (typing/typemod.ml[2422,88148+37]..[2422,88148+44])
                                                            expression (typing/typemod.ml[2422,88148+46]..[2422,88148+54])
                                                              Pexp_construct "Exported" (typing/typemod.ml[2422,88148+46]..[2422,88148+54])
                                                              None
                                                          ]
                                                    expression (typing/typemod.ml[2422,88148+55]..[2422,88148+56]) ghost
                                                      Pexp_construct "[]" (typing/typemod.ml[2422,88148+55]..[2422,88148+56]) ghost
                                                      None
                                                  ]
                                            expression (typing/typemod.ml[2423,88206+8]..[2423,88206+14])
                                              Pexp_ident "newenv" (typing/typemod.ml[2423,88206+8]..[2423,88206+14])
                                          ]
                                  <case>
                                    pattern (typing/typemod.ml[2424,88221+6]..[2424,88221+34])
                                      Ppat_construct "Pstr_type" (typing/typemod.ml[2424,88221+6]..[2424,88221+15])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2424,88221+16]..[2424,88221+34])
                                          Ppat_tuple
                                          [
                                            pattern (typing/typemod.ml[2424,88221+17]..[2424,88221+25])
                                              Ppat_var "rec_flag" (typing/typemod.ml[2424,88221+17]..[2424,88221+25])
                                            pattern (typing/typemod.ml[2424,88221+27]..[2424,88221+33])
                                              Ppat_var "sdecls" (typing/typemod.ml[2424,88221+27]..[2424,88221+33])
                                          ]
                                    expression (typing/typemod.ml[2425,88259+8]..[2433,88630+49])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[2425,88259+12]..[2425,88259+27])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[2425,88259+13]..[2425,88259+18])
                                                Ppat_var "decls" (typing/typemod.ml[2425,88259+13]..[2425,88259+18])
                                              pattern (typing/typemod.ml[2425,88259+20]..[2425,88259+26])
                                                Ppat_var "newenv" (typing/typemod.ml[2425,88259+20]..[2425,88259+26])
                                            ]
                                          expression (typing/typemod.ml[2425,88259+30]..[2425,88259+75])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2425,88259+30]..[2425,88259+55])
                                              Pexp_ident "Typedecl.transl_type_decl" (typing/typemod.ml[2425,88259+30]..[2425,88259+55])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2425,88259+56]..[2425,88259+59])
                                                  Pexp_ident "env" (typing/typemod.ml[2425,88259+56]..[2425,88259+59])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2425,88259+60]..[2425,88259+68])
                                                  Pexp_ident "rec_flag" (typing/typemod.ml[2425,88259+60]..[2425,88259+68])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2425,88259+69]..[2425,88259+75])
                                                  Pexp_ident "sdecls" (typing/typemod.ml[2425,88259+69]..[2425,88259+75])
                                            ]
                                      ]
                                      expression (typing/typemod.ml[2426,88338+8]..[2433,88630+49])
                                        Pexp_sequence
                                        expression (typing/typemod.ml[2426,88338+8]..[2428,88432+15])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2426,88338+8]..[2426,88338+17])
                                            Pexp_ident "List.iter" (typing/typemod.ml[2426,88338+8]..[2426,88338+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2427,88356+10]..[2427,88356+75])
                                                Pexp_open Fresh
                                                module_expr (typing/typemod.ml[2427,88356+10]..[2427,88356+25])
                                                  Pmod_ident "Signature_names" (typing/typemod.ml[2427,88356+10]..[2427,88356+25])
                                                expression (typing/typemod.ml[2427,88356+27]..[2427,88356+74])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/typemod.ml[2427,88356+31]..[2427,88356+33])
                                                    Ppat_var "td" (typing/typemod.ml[2427,88356+31]..[2427,88356+33])
                                                  expression (typing/typemod.ml[2427,88356+37]..[2427,88356+74])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[2427,88356+37]..[2427,88356+47])
                                                      Pexp_ident "check_type" (typing/typemod.ml[2427,88356+37]..[2427,88356+47])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2427,88356+48]..[2427,88356+53])
                                                          Pexp_ident "names" (typing/typemod.ml[2427,88356+48]..[2427,88356+53])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2427,88356+54]..[2427,88356+64])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[2427,88356+54]..[2427,88356+56])
                                                            Pexp_ident "td" (typing/typemod.ml[2427,88356+54]..[2427,88356+56])
                                                          "typ_loc" (typing/typemod.ml[2427,88356+57]..[2427,88356+64])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2427,88356+65]..[2427,88356+74])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[2427,88356+65]..[2427,88356+67])
                                                            Pexp_ident "td" (typing/typemod.ml[2427,88356+65]..[2427,88356+67])
                                                          "typ_id" (typing/typemod.ml[2427,88356+68]..[2427,88356+74])
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2428,88432+10]..[2428,88432+15])
                                                Pexp_ident "decls" (typing/typemod.ml[2428,88432+10]..[2428,88432+15])
                                          ]
                                        expression (typing/typemod.ml[2429,88449+8]..[2433,88630+49])
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[2429,88449+8]..[2429,88449+35])
                                              Pexp_construct "Tstr_type" (typing/typemod.ml[2429,88449+8]..[2429,88449+17])
                                              Some
                                                expression (typing/typemod.ml[2429,88449+18]..[2429,88449+35])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typemod.ml[2429,88449+19]..[2429,88449+27])
                                                      Pexp_ident "rec_flag" (typing/typemod.ml[2429,88449+19]..[2429,88449+27])
                                                    expression (typing/typemod.ml[2429,88449+29]..[2429,88449+34])
                                                      Pexp_ident "decls" (typing/typemod.ml[2429,88449+29]..[2429,88449+34])
                                                  ]
                                            expression (typing/typemod.ml[2430,88486+8]..[2432,88610+18])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2430,88486+8]..[2430,88486+35])
                                                Pexp_ident "map_rec_type_with_row_types" (typing/typemod.ml[2430,88486+8]..[2430,88486+35])
                                              [
                                                <arg>
                                                Labelled "rec_flag"
                                                  expression (typing/typemod.ml[2430,88486+37]..[2430,88486+45])
                                                    Pexp_ident "rec_flag" (typing/typemod.ml[2430,88486+37]..[2430,88486+45])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2431,88532+10]..[2431,88532+77])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (typing/typemod.ml[2431,88532+15]..[2431,88532+17])
                                                      Ppat_var "rs" (typing/typemod.ml[2431,88532+15]..[2431,88532+17])
                                                    expression (typing/typemod.ml[2431,88532+18]..[2431,88532+76]) ghost
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (typing/typemod.ml[2431,88532+18]..[2431,88532+22])
                                                        Ppat_var "info" (typing/typemod.ml[2431,88532+18]..[2431,88532+22])
                                                      expression (typing/typemod.ml[2431,88532+26]..[2431,88532+76])
                                                        Pexp_construct "Sig_type" (typing/typemod.ml[2431,88532+26]..[2431,88532+34])
                                                        Some
                                                          expression (typing/typemod.ml[2431,88532+34]..[2431,88532+76])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typemod.ml[2431,88532+35]..[2431,88532+46])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[2431,88532+35]..[2431,88532+39])
                                                                  Pexp_ident "info" (typing/typemod.ml[2431,88532+35]..[2431,88532+39])
                                                                "typ_id" (typing/typemod.ml[2431,88532+40]..[2431,88532+46])
                                                              expression (typing/typemod.ml[2431,88532+48]..[2431,88532+61])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[2431,88532+48]..[2431,88532+52])
                                                                  Pexp_ident "info" (typing/typemod.ml[2431,88532+48]..[2431,88532+52])
                                                                "typ_type" (typing/typemod.ml[2431,88532+53]..[2431,88532+61])
                                                              expression (typing/typemod.ml[2431,88532+63]..[2431,88532+65])
                                                                Pexp_ident "rs" (typing/typemod.ml[2431,88532+63]..[2431,88532+65])
                                                              expression (typing/typemod.ml[2431,88532+67]..[2431,88532+75])
                                                                Pexp_construct "Exported" (typing/typemod.ml[2431,88532+67]..[2431,88532+75])
                                                                None
                                                            ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2432,88610+10]..[2432,88610+15])
                                                    Pexp_ident "decls" (typing/typemod.ml[2432,88610+10]..[2432,88610+15])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2432,88610+16]..[2432,88610+18])
                                                    Pexp_construct "[]" (typing/typemod.ml[2432,88610+16]..[2432,88610+18])
                                                    None
                                              ]
                                            expression (typing/typemod.ml[2433,88630+8]..[2433,88630+49])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2433,88630+8]..[2433,88630+25])
                                                Pexp_ident "enrich_type_decls" (typing/typemod.ml[2433,88630+8]..[2433,88630+25])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2433,88630+26]..[2433,88630+32])
                                                    Pexp_ident "anchor" (typing/typemod.ml[2433,88630+26]..[2433,88630+32])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2433,88630+33]..[2433,88630+38])
                                                    Pexp_ident "decls" (typing/typemod.ml[2433,88630+33]..[2433,88630+38])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2433,88630+39]..[2433,88630+42])
                                                    Pexp_ident "env" (typing/typemod.ml[2433,88630+39]..[2433,88630+42])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2433,88630+43]..[2433,88630+49])
                                                    Pexp_ident "newenv" (typing/typemod.ml[2433,88630+43]..[2433,88630+49])
                                              ]
                                          ]
                                  <case>
                                    pattern (typing/typemod.ml[2434,88680+6]..[2434,88680+24])
                                      Ppat_construct "Pstr_typext" (typing/typemod.ml[2434,88680+6]..[2434,88680+17])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2434,88680+18]..[2434,88680+24])
                                          Ppat_var "styext" (typing/typemod.ml[2434,88680+18]..[2434,88680+24])
                                    expression (typing/typemod.ml[2435,88708+8]..[2446,89139+16])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[2435,88708+12]..[2435,88708+27])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[2435,88708+13]..[2435,88708+18])
                                                Ppat_var "tyext" (typing/typemod.ml[2435,88708+13]..[2435,88708+18])
                                              pattern (typing/typemod.ml[2435,88708+20]..[2435,88708+26])
                                                Ppat_var "newenv" (typing/typemod.ml[2435,88708+20]..[2435,88708+26])
                                            ]
                                          expression (typing/typemod.ml[2436,88738+10]..[2436,88738+60])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2436,88738+10]..[2436,88738+40])
                                              Pexp_ident "Typedecl.transl_type_extension" (typing/typemod.ml[2436,88738+10]..[2436,88738+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2436,88738+41]..[2436,88738+45])
                                                  Pexp_construct "true" (typing/typemod.ml[2436,88738+41]..[2436,88738+45])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2436,88738+46]..[2436,88738+49])
                                                  Pexp_ident "env" (typing/typemod.ml[2436,88738+46]..[2436,88738+49])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2436,88738+50]..[2436,88738+53])
                                                  Pexp_ident "loc" (typing/typemod.ml[2436,88738+50]..[2436,88738+53])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2436,88738+54]..[2436,88738+60])
                                                  Pexp_ident "styext" (typing/typemod.ml[2436,88738+54]..[2436,88738+60])
                                            ]
                                      ]
                                      expression (typing/typemod.ml[2438,88810+8]..[2446,89139+16])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[2438,88810+12]..[2438,88810+24])
                                              Ppat_var "constructors" (typing/typemod.ml[2438,88810+12]..[2438,88810+24])
                                            expression (typing/typemod.ml[2438,88810+27]..[2438,88810+51])
                                              Pexp_field
                                              expression (typing/typemod.ml[2438,88810+27]..[2438,88810+32])
                                                Pexp_ident "tyext" (typing/typemod.ml[2438,88810+27]..[2438,88810+32])
                                              "tyext_constructors" (typing/typemod.ml[2438,88810+33]..[2438,88810+51])
                                        ]
                                        expression (typing/typemod.ml[2439,88865+8]..[2446,89139+16])
                                          Pexp_sequence
                                          expression (typing/typemod.ml[2439,88865+8]..[2441,88964+22])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2439,88865+8]..[2439,88865+17])
                                              Pexp_ident "List.iter" (typing/typemod.ml[2439,88865+8]..[2439,88865+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2440,88883+10]..[2440,88883+80])
                                                  Pexp_open Fresh
                                                  module_expr (typing/typemod.ml[2440,88883+10]..[2440,88883+25])
                                                    Pmod_ident "Signature_names" (typing/typemod.ml[2440,88883+10]..[2440,88883+25])
                                                  expression (typing/typemod.ml[2440,88883+27]..[2440,88883+79])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (typing/typemod.ml[2440,88883+31]..[2440,88883+34])
                                                      Ppat_var "ext" (typing/typemod.ml[2440,88883+31]..[2440,88883+34])
                                                    expression (typing/typemod.ml[2440,88883+38]..[2440,88883+79])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[2440,88883+38]..[2440,88883+50])
                                                        Pexp_ident "check_typext" (typing/typemod.ml[2440,88883+38]..[2440,88883+50])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2440,88883+51]..[2440,88883+56])
                                                            Pexp_ident "names" (typing/typemod.ml[2440,88883+51]..[2440,88883+56])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2440,88883+57]..[2440,88883+68])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[2440,88883+57]..[2440,88883+60])
                                                              Pexp_ident "ext" (typing/typemod.ml[2440,88883+57]..[2440,88883+60])
                                                            "ext_loc" (typing/typemod.ml[2440,88883+61]..[2440,88883+68])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2440,88883+69]..[2440,88883+79])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[2440,88883+69]..[2440,88883+72])
                                                              Pexp_ident "ext" (typing/typemod.ml[2440,88883+69]..[2440,88883+72])
                                                            "ext_id" (typing/typemod.ml[2440,88883+73]..[2440,88883+79])
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2441,88964+10]..[2441,88964+22])
                                                  Pexp_ident "constructors" (typing/typemod.ml[2441,88964+10]..[2441,88964+22])
                                            ]
                                          expression (typing/typemod.ml[2442,88988+8]..[2446,89139+16])
                                            Pexp_tuple
                                            [
                                              expression (typing/typemod.ml[2442,88988+9]..[2442,88988+26])
                                                Pexp_construct "Tstr_typext" (typing/typemod.ml[2442,88988+9]..[2442,88988+20])
                                                Some
                                                  expression (typing/typemod.ml[2442,88988+21]..[2442,88988+26])
                                                    Pexp_ident "tyext" (typing/typemod.ml[2442,88988+21]..[2442,88988+26])
                                              expression (typing/typemod.ml[2443,89016+9]..[2445,89111+26])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2443,89016+9]..[2443,89016+16])
                                                  Pexp_ident "map_ext" (typing/typemod.ml[2443,89016+9]..[2443,89016+16])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2444,89033+11]..[2444,89033+77])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (typing/typemod.ml[2444,89033+16]..[2444,89033+18])
                                                        Ppat_var "es" (typing/typemod.ml[2444,89033+16]..[2444,89033+18])
                                                      expression (typing/typemod.ml[2444,89033+19]..[2444,89033+76]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (typing/typemod.ml[2444,89033+19]..[2444,89033+22])
                                                          Ppat_var "ext" (typing/typemod.ml[2444,89033+19]..[2444,89033+22])
                                                        expression (typing/typemod.ml[2444,89033+26]..[2444,89033+76])
                                                          Pexp_construct "Sig_typext" (typing/typemod.ml[2444,89033+26]..[2444,89033+36])
                                                          Some
                                                            expression (typing/typemod.ml[2444,89033+36]..[2444,89033+76])
                                                              Pexp_tuple
                                                              [
                                                                expression (typing/typemod.ml[2444,89033+37]..[2444,89033+47])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[2444,89033+37]..[2444,89033+40])
                                                                    Pexp_ident "ext" (typing/typemod.ml[2444,89033+37]..[2444,89033+40])
                                                                  "ext_id" (typing/typemod.ml[2444,89033+41]..[2444,89033+47])
                                                                expression (typing/typemod.ml[2444,89033+49]..[2444,89033+61])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[2444,89033+49]..[2444,89033+52])
                                                                    Pexp_ident "ext" (typing/typemod.ml[2444,89033+49]..[2444,89033+52])
                                                                  "ext_type" (typing/typemod.ml[2444,89033+53]..[2444,89033+61])
                                                                expression (typing/typemod.ml[2444,89033+63]..[2444,89033+65])
                                                                  Pexp_ident "es" (typing/typemod.ml[2444,89033+63]..[2444,89033+65])
                                                                expression (typing/typemod.ml[2444,89033+67]..[2444,89033+75])
                                                                  Pexp_construct "Exported" (typing/typemod.ml[2444,89033+67]..[2444,89033+75])
                                                                  None
                                                              ]
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2445,89111+11]..[2445,89111+23])
                                                      Pexp_ident "constructors" (typing/typemod.ml[2445,89111+11]..[2445,89111+23])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2445,89111+24]..[2445,89111+26])
                                                      Pexp_construct "[]" (typing/typemod.ml[2445,89111+24]..[2445,89111+26])
                                                      None
                                                ]
                                              expression (typing/typemod.ml[2446,89139+9]..[2446,89139+15])
                                                Pexp_ident "newenv" (typing/typemod.ml[2446,89139+9]..[2446,89139+15])
                                            ]
                                  <case>
                                    pattern (typing/typemod.ml[2447,89156+6]..[2447,89156+25])
                                      Ppat_construct "Pstr_exception" (typing/typemod.ml[2447,89156+6]..[2447,89156+20])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2447,89156+21]..[2447,89156+25])
                                          Ppat_var "sext" (typing/typemod.ml[2447,89156+21]..[2447,89156+25])
                                    expression (typing/typemod.ml[2448,89185+8]..[2457,89578+14])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[2448,89185+12]..[2448,89185+25])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[2448,89185+13]..[2448,89185+16])
                                                Ppat_var "ext" (typing/typemod.ml[2448,89185+13]..[2448,89185+16])
                                              pattern (typing/typemod.ml[2448,89185+18]..[2448,89185+24])
                                                Ppat_var "newenv" (typing/typemod.ml[2448,89185+18]..[2448,89185+24])
                                            ]
                                          expression (typing/typemod.ml[2448,89185+28]..[2448,89185+67])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2448,89185+28]..[2448,89185+58])
                                              Pexp_ident "Typedecl.transl_type_exception" (typing/typemod.ml[2448,89185+28]..[2448,89185+58])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2448,89185+59]..[2448,89185+62])
                                                  Pexp_ident "env" (typing/typemod.ml[2448,89185+59]..[2448,89185+62])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2448,89185+63]..[2448,89185+67])
                                                  Pexp_ident "sext" (typing/typemod.ml[2448,89185+63]..[2448,89185+67])
                                            ]
                                      ]
                                      expression (typing/typemod.ml[2449,89256+8]..[2457,89578+14])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[2449,89256+12]..[2449,89256+23])
                                              Ppat_var "constructor" (typing/typemod.ml[2449,89256+12]..[2449,89256+23])
                                            expression (typing/typemod.ml[2449,89256+26]..[2449,89256+47])
                                              Pexp_field
                                              expression (typing/typemod.ml[2449,89256+26]..[2449,89256+29])
                                                Pexp_ident "ext" (typing/typemod.ml[2449,89256+26]..[2449,89256+29])
                                              "tyexn_constructor" (typing/typemod.ml[2449,89256+30]..[2449,89256+47])
                                        ]
                                        expression (typing/typemod.ml[2450,89307+8]..[2457,89578+14])
                                          Pexp_sequence
                                          expression (typing/typemod.ml[2450,89307+8]..[2451,89370+28])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2450,89307+8]..[2450,89307+36])
                                              Pexp_ident "Signature_names.check_typext" (typing/typemod.ml[2450,89307+8]..[2450,89307+36])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2450,89307+37]..[2450,89307+42])
                                                  Pexp_ident "names" (typing/typemod.ml[2450,89307+37]..[2450,89307+42])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2450,89307+43]..[2450,89307+62])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[2450,89307+43]..[2450,89307+54])
                                                    Pexp_ident "constructor" (typing/typemod.ml[2450,89307+43]..[2450,89307+54])
                                                  "ext_loc" (typing/typemod.ml[2450,89307+55]..[2450,89307+62])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2451,89370+10]..[2451,89370+28])
                                                  Pexp_field
                                                  expression (typing/typemod.ml[2451,89370+10]..[2451,89370+21])
                                                    Pexp_ident "constructor" (typing/typemod.ml[2451,89370+10]..[2451,89370+21])
                                                  "ext_id" (typing/typemod.ml[2451,89370+22]..[2451,89370+28])
                                            ]
                                          expression (typing/typemod.ml[2452,89400+8]..[2457,89578+14])
                                            Pexp_tuple
                                            [
                                              expression (typing/typemod.ml[2452,89400+8]..[2452,89400+26])
                                                Pexp_construct "Tstr_exception" (typing/typemod.ml[2452,89400+8]..[2452,89400+22])
                                                Some
                                                  expression (typing/typemod.ml[2452,89400+23]..[2452,89400+26])
                                                    Pexp_ident "ext" (typing/typemod.ml[2452,89400+23]..[2452,89400+26])
                                              expression (typing/typemod.ml[2453,89428+8]..[2456,89546+30])
                                                Pexp_construct "::" (typing/typemod.ml[2453,89428+9]..[2456,89546+30]) ghost
                                                Some
                                                  expression (typing/typemod.ml[2453,89428+9]..[2456,89546+30]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[2453,89428+9]..[2456,89546+29])
                                                        Pexp_construct "Sig_typext" (typing/typemod.ml[2453,89428+9]..[2453,89428+19])
                                                        Some
                                                          expression (typing/typemod.ml[2453,89428+19]..[2456,89546+29])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typemod.ml[2453,89428+20]..[2453,89428+38])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[2453,89428+20]..[2453,89428+31])
                                                                  Pexp_ident "constructor" (typing/typemod.ml[2453,89428+20]..[2453,89428+31])
                                                                "ext_id" (typing/typemod.ml[2453,89428+32]..[2453,89428+38])
                                                              expression (typing/typemod.ml[2454,89468+20]..[2454,89468+40])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[2454,89468+20]..[2454,89468+31])
                                                                  Pexp_ident "constructor" (typing/typemod.ml[2454,89468+20]..[2454,89468+31])
                                                                "ext_type" (typing/typemod.ml[2454,89468+32]..[2454,89468+40])
                                                              expression (typing/typemod.ml[2455,89510+20]..[2455,89510+34])
                                                                Pexp_construct "Text_exception" (typing/typemod.ml[2455,89510+20]..[2455,89510+34])
                                                                None
                                                              expression (typing/typemod.ml[2456,89546+20]..[2456,89546+28])
                                                                Pexp_construct "Exported" (typing/typemod.ml[2456,89546+20]..[2456,89546+28])
                                                                None
                                                            ]
                                                      expression (typing/typemod.ml[2456,89546+29]..[2456,89546+30]) ghost
                                                        Pexp_construct "[]" (typing/typemod.ml[2456,89546+29]..[2456,89546+30]) ghost
                                                        None
                                                    ]
                                              expression (typing/typemod.ml[2457,89578+8]..[2457,89578+14])
                                                Pexp_ident "newenv" (typing/typemod.ml[2457,89578+8]..[2457,89578+14])
                                            ]
                                  <case>
                                    pattern (typing/typemod.ml[2458,89593+6]..[2460,89699+19])
                                      Ppat_construct "Pstr_module" (typing/typemod.ml[2458,89593+6]..[2458,89593+17])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2458,89593+18]..[2460,89699+19])
                                          Ppat_record Closed
                                          [
                                            "pmb_name" (typing/typemod.ml[2458,89593+19]..[2458,89593+27])
                                              pattern (typing/typemod.ml[2458,89593+30]..[2458,89593+34])
                                                Ppat_var "name" (typing/typemod.ml[2458,89593+30]..[2458,89593+34])
                                            "pmb_expr" (typing/typemod.ml[2458,89593+36]..[2458,89593+44])
                                              pattern (typing/typemod.ml[2458,89593+47]..[2458,89593+52])
                                                Ppat_var "smodl" (typing/typemod.ml[2458,89593+47]..[2458,89593+52])
                                            "pmb_attributes" (typing/typemod.ml[2458,89593+54]..[2458,89593+68])
                                              pattern (typing/typemod.ml[2458,89593+71]..[2458,89593+76])
                                                Ppat_var "attrs" (typing/typemod.ml[2458,89593+71]..[2458,89593+76])
                                            "pmb_loc" (typing/typemod.ml[2459,89671+19]..[2459,89671+26]) ghost
                                              pattern (typing/typemod.ml[2459,89671+19]..[2459,89671+26])
                                                Ppat_var "pmb_loc" (typing/typemod.ml[2459,89671+19]..[2459,89671+26])
                                          ]
                                    expression (typing/typemod.ml[2461,89722+8]..[2502,91264+14])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[2461,89722+12]..[2461,89722+23])
                                            Ppat_var "outer_scope" (typing/typemod.ml[2461,89722+12]..[2461,89722+23])
                                          expression (typing/typemod.ml[2461,89722+26]..[2461,89722+52])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2461,89722+26]..[2461,89722+49])
                                              Pexp_ident "Ctype.get_current_level" (typing/typemod.ml[2461,89722+26]..[2461,89722+49])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2461,89722+50]..[2461,89722+52])
                                                  Pexp_construct "()" (typing/typemod.ml[2461,89722+50]..[2461,89722+52])
                                                  None
                                            ]
                                      ]
                                      expression (typing/typemod.ml[2462,89778+8]..[2502,91264+14])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[2462,89778+12]..[2462,89778+17])
                                              Ppat_var "scope" (typing/typemod.ml[2462,89778+12]..[2462,89778+17])
                                            expression (typing/typemod.ml[2462,89778+20]..[2462,89778+41])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2462,89778+20]..[2462,89778+38])
                                                Pexp_ident "Ctype.create_scope" (typing/typemod.ml[2462,89778+20]..[2462,89778+38])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2462,89778+39]..[2462,89778+41])
                                                    Pexp_construct "()" (typing/typemod.ml[2462,89778+39]..[2462,89778+41])
                                                    None
                                              ]
                                        ]
                                        expression (typing/typemod.ml[2463,89823+8]..[2502,91264+14])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[2463,89823+12]..[2463,89823+16])
                                                Ppat_var "modl" (typing/typemod.ml[2463,89823+12]..[2463,89823+16])
                                              expression (typing/typemod.ml[2464,89842+10]..[2468,90031+13])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2464,89842+10]..[2464,89842+42])
                                                  Pexp_ident "Builtin_attributes.warning_scope" (typing/typemod.ml[2464,89842+10]..[2464,89842+42])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2464,89842+43]..[2464,89842+48])
                                                      Pexp_ident "attrs" (typing/typemod.ml[2464,89842+43]..[2464,89842+48])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2465,89891+12]..[2468,90031+13])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (typing/typemod.ml[2465,89891+17]..[2465,89891+19])
                                                        Ppat_construct "()" (typing/typemod.ml[2465,89891+17]..[2465,89891+19])
                                                        None
                                                      expression (typing/typemod.ml[2466,89914+15]..[2467,89969+61])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2466,89914+15]..[2466,89914+26])
                                                          Pexp_ident "type_module" (typing/typemod.ml[2466,89914+15]..[2466,89914+26])
                                                        [
                                                          <arg>
                                                          Labelled "alias"
                                                            expression (typing/typemod.ml[2466,89914+34]..[2466,89914+38])
                                                              Pexp_construct "true" (typing/typemod.ml[2466,89914+34]..[2466,89914+38])
                                                              None
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2466,89914+39]..[2466,89914+43])
                                                              Pexp_construct "true" (typing/typemod.ml[2466,89914+39]..[2466,89914+43])
                                                              None
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2466,89914+44]..[2466,89914+54])
                                                              Pexp_ident "funct_body" (typing/typemod.ml[2466,89914+44]..[2466,89914+54])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2467,89969+17]..[2467,89969+51])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[2467,89969+18]..[2467,89969+34])
                                                                Pexp_ident "anchor_submodule" (typing/typemod.ml[2467,89969+18]..[2467,89969+34])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[2467,89969+35]..[2467,89969+43])
                                                                    Pexp_field
                                                                    expression (typing/typemod.ml[2467,89969+35]..[2467,89969+39])
                                                                      Pexp_ident "name" (typing/typemod.ml[2467,89969+35]..[2467,89969+39])
                                                                    "txt" (typing/typemod.ml[2467,89969+40]..[2467,89969+43])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[2467,89969+44]..[2467,89969+50])
                                                                    Pexp_ident "anchor" (typing/typemod.ml[2467,89969+44]..[2467,89969+50])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2467,89969+52]..[2467,89969+55])
                                                              Pexp_ident "env" (typing/typemod.ml[2467,89969+52]..[2467,89969+55])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2467,89969+56]..[2467,89969+61])
                                                              Pexp_ident "smodl" (typing/typemod.ml[2467,89969+56]..[2467,89969+61])
                                                        ]
                                                ]
                                          ]
                                          expression (typing/typemod.ml[2470,90056+8]..[2502,91264+14])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[2470,90056+12]..[2470,90056+16])
                                                  Ppat_var "pres" (typing/typemod.ml[2470,90056+12]..[2470,90056+16])
                                                expression (typing/typemod.ml[2471,90075+10]..[2473,90147+27])
                                                  Pexp_match
                                                  expression (typing/typemod.ml[2471,90075+16]..[2471,90075+29])
                                                    Pexp_field
                                                    expression (typing/typemod.ml[2471,90075+16]..[2471,90075+20])
                                                      Pexp_ident "modl" (typing/typemod.ml[2471,90075+16]..[2471,90075+20])
                                                    "mod_type" (typing/typemod.ml[2471,90075+21]..[2471,90075+29])
                                                  [
                                                    <case>
                                                      pattern (typing/typemod.ml[2472,90110+12]..[2472,90110+23])
                                                        Ppat_construct "Mty_alias" (typing/typemod.ml[2472,90110+12]..[2472,90110+21])
                                                        Some
                                                          []
                                                          pattern (typing/typemod.ml[2472,90110+22]..[2472,90110+23])
                                                            Ppat_any
                                                      expression (typing/typemod.ml[2472,90110+27]..[2472,90110+36])
                                                        Pexp_construct "Mp_absent" (typing/typemod.ml[2472,90110+27]..[2472,90110+36])
                                                        None
                                                    <case>
                                                      pattern (typing/typemod.ml[2473,90147+12]..[2473,90147+13])
                                                        Ppat_any
                                                      expression (typing/typemod.ml[2473,90147+17]..[2473,90147+27])
                                                        Pexp_construct "Mp_present" (typing/typemod.ml[2473,90147+17]..[2473,90147+27])
                                                        None
                                                  ]
                                            ]
                                            expression (typing/typemod.ml[2475,90186+8]..[2502,91264+14])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typemod.ml[2475,90186+12]..[2475,90186+18])
                                                    Ppat_var "md_uid" (typing/typemod.ml[2475,90186+12]..[2475,90186+18])
                                                  expression (typing/typemod.ml[2475,90186+21]..[2475,90186+64])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[2475,90186+21]..[2475,90186+27])
                                                      Pexp_ident "Uid.mk" (typing/typemod.ml[2475,90186+21]..[2475,90186+27])
                                                    [
                                                      <arg>
                                                      Labelled "current_unit"
                                                        expression (typing/typemod.ml[2475,90186+42]..[2475,90186+64])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[2475,90186+43]..[2475,90186+60])
                                                            Pexp_ident "Env.get_unit_name" (typing/typemod.ml[2475,90186+43]..[2475,90186+60])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2475,90186+61]..[2475,90186+63])
                                                                Pexp_construct "()" (typing/typemod.ml[2475,90186+61]..[2475,90186+63])
                                                                None
                                                          ]
                                                    ]
                                              ]
                                              expression (typing/typemod.ml[2476,90254+8]..[2502,91264+14])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typemod.ml[2476,90254+12]..[2476,90254+14])
                                                      Ppat_var "md" (typing/typemod.ml[2476,90254+12]..[2476,90254+14])
                                                    expression (typing/typemod.ml[2477,90271+10]..[2481,90432+11])
                                                      Pexp_record
                                                      [
                                                        "md_type" (typing/typemod.ml[2477,90271+12]..[2477,90271+19])
                                                          expression (typing/typemod.ml[2477,90271+22]..[2477,90271+74])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[2477,90271+22]..[2477,90271+40])
                                                              Pexp_ident "enrich_module_type" (typing/typemod.ml[2477,90271+22]..[2477,90271+40])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2477,90271+41]..[2477,90271+47])
                                                                  Pexp_ident "anchor" (typing/typemod.ml[2477,90271+41]..[2477,90271+47])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2477,90271+48]..[2477,90271+56])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[2477,90271+48]..[2477,90271+52])
                                                                    Pexp_ident "name" (typing/typemod.ml[2477,90271+48]..[2477,90271+52])
                                                                  "txt" (typing/typemod.ml[2477,90271+53]..[2477,90271+56])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2477,90271+57]..[2477,90271+70])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[2477,90271+57]..[2477,90271+61])
                                                                    Pexp_ident "modl" (typing/typemod.ml[2477,90271+57]..[2477,90271+61])
                                                                  "mod_type" (typing/typemod.ml[2477,90271+62]..[2477,90271+70])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2477,90271+71]..[2477,90271+74])
                                                                  Pexp_ident "env" (typing/typemod.ml[2477,90271+71]..[2477,90271+74])
                                                            ]
                                                        "md_attributes" (typing/typemod.ml[2478,90347+12]..[2478,90347+25])
                                                          expression (typing/typemod.ml[2478,90347+28]..[2478,90347+33])
                                                            Pexp_ident "attrs" (typing/typemod.ml[2478,90347+28]..[2478,90347+33])
                                                        "md_loc" (typing/typemod.ml[2479,90382+12]..[2479,90382+18])
                                                          expression (typing/typemod.ml[2479,90382+21]..[2479,90382+28])
                                                            Pexp_ident "pmb_loc" (typing/typemod.ml[2479,90382+21]..[2479,90382+28])
                                                        "md_uid" (typing/typemod.ml[2480,90412+12]..[2480,90412+18]) ghost
                                                          expression (typing/typemod.ml[2480,90412+12]..[2480,90412+18])
                                                            Pexp_ident "md_uid" (typing/typemod.ml[2480,90412+12]..[2480,90412+18])
                                                      ]
                                                      None
                                                ]
                                                expression (typing/typemod.ml[2484,90514+8]..[2502,91264+14])
                                                  Pexp_sequence
                                                  expression (typing/typemod.ml[2484,90514+8]..[2484,90514+49])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[2484,90514+8]..[2484,90514+26])
                                                      Pexp_ident "Mtype.lower_nongen" (typing/typemod.ml[2484,90514+8]..[2484,90514+26])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2484,90514+27]..[2484,90514+38])
                                                          Pexp_ident "outer_scope" (typing/typemod.ml[2484,90514+27]..[2484,90514+38])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2484,90514+39]..[2484,90514+49])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[2484,90514+39]..[2484,90514+41])
                                                            Pexp_ident "md" (typing/typemod.ml[2484,90514+39]..[2484,90514+41])
                                                          "md_type" (typing/typemod.ml[2484,90514+42]..[2484,90514+49])
                                                    ]
                                                  expression (typing/typemod.ml[2485,90565+8]..[2502,91264+14])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typemod.ml[2485,90565+12]..[2485,90565+26])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/typemod.ml[2485,90565+12]..[2485,90565+14])
                                                              Ppat_var "id" (typing/typemod.ml[2485,90565+12]..[2485,90565+14])
                                                            pattern (typing/typemod.ml[2485,90565+16]..[2485,90565+22])
                                                              Ppat_var "newenv" (typing/typemod.ml[2485,90565+16]..[2485,90565+22])
                                                            pattern (typing/typemod.ml[2485,90565+24]..[2485,90565+26])
                                                              Ppat_var "sg" (typing/typemod.ml[2485,90565+24]..[2485,90565+26])
                                                          ]
                                                        expression (typing/typemod.ml[2486,90594+10]..[2497,91054+47])
                                                          Pexp_match
                                                          expression (typing/typemod.ml[2486,90594+16]..[2486,90594+24])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[2486,90594+16]..[2486,90594+20])
                                                              Pexp_ident "name" (typing/typemod.ml[2486,90594+16]..[2486,90594+20])
                                                            "txt" (typing/typemod.ml[2486,90594+21]..[2486,90594+24])
                                                          [
                                                            <case>
                                                              pattern (typing/typemod.ml[2487,90624+12]..[2487,90624+16])
                                                                Ppat_construct "None" (typing/typemod.ml[2487,90624+12]..[2487,90624+16])
                                                                None
                                                              expression (typing/typemod.ml[2487,90624+20]..[2487,90624+33])
                                                                Pexp_tuple
                                                                [
                                                                  expression (typing/typemod.ml[2487,90624+20]..[2487,90624+24])
                                                                    Pexp_construct "None" (typing/typemod.ml[2487,90624+20]..[2487,90624+24])
                                                                    None
                                                                  expression (typing/typemod.ml[2487,90624+26]..[2487,90624+29])
                                                                    Pexp_ident "env" (typing/typemod.ml[2487,90624+26]..[2487,90624+29])
                                                                  expression (typing/typemod.ml[2487,90624+31]..[2487,90624+33])
                                                                    Pexp_construct "[]" (typing/typemod.ml[2487,90624+31]..[2487,90624+33])
                                                                    None
                                                                ]
                                                            <case>
                                                              pattern (typing/typemod.ml[2488,90658+12]..[2488,90658+21])
                                                                Ppat_construct "Some" (typing/typemod.ml[2488,90658+12]..[2488,90658+16])
                                                                Some
                                                                  []
                                                                  pattern (typing/typemod.ml[2488,90658+17]..[2488,90658+21])
                                                                    Ppat_var "name" (typing/typemod.ml[2488,90658+17]..[2488,90658+21])
                                                              expression (typing/typemod.ml[2489,90683+12]..[2497,91054+47])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (typing/typemod.ml[2489,90683+16]..[2489,90683+21])
                                                                      Ppat_tuple
                                                                      [
pattern (typing/typemod.ml[2489,90683+16]..[2489,90683+18])
  Ppat_var "id" (typing/typemod.ml[2489,90683+16]..[2489,90683+18])
pattern (typing/typemod.ml[2489,90683+20]..[2489,90683+21])
  Ppat_var "e" (typing/typemod.ml[2489,90683+20]..[2489,90683+21])
                                                                      ]
                                                                    expression (typing/typemod.ml[2489,90683+24]..[2489,90683+76])
                                                                      Pexp_apply
                                                                      expression (typing/typemod.ml[2489,90683+24]..[2489,90683+52])
Pexp_ident "Env.enter_module_declaration" (typing/typemod.ml[2489,90683+24]..[2489,90683+52])
                                                                      [
<arg>
Labelled "scope"
  expression (typing/typemod.ml[2489,90683+54]..[2489,90683+59])
    Pexp_ident "scope" (typing/typemod.ml[2489,90683+54]..[2489,90683+59])
<arg>
Nolabel
  expression (typing/typemod.ml[2489,90683+60]..[2489,90683+64])
    Pexp_ident "name" (typing/typemod.ml[2489,90683+60]..[2489,90683+64])
<arg>
Nolabel
  expression (typing/typemod.ml[2489,90683+65]..[2489,90683+69])
    Pexp_ident "pres" (typing/typemod.ml[2489,90683+65]..[2489,90683+69])
<arg>
Nolabel
  expression (typing/typemod.ml[2489,90683+70]..[2489,90683+72])
    Pexp_ident "md" (typing/typemod.ml[2489,90683+70]..[2489,90683+72])
<arg>
Nolabel
  expression (typing/typemod.ml[2489,90683+73]..[2489,90683+76])
    Pexp_ident "env" (typing/typemod.ml[2489,90683+73]..[2489,90683+76])
                                                                      ]
                                                                ]
                                                                expression (typing/typemod.ml[2490,90763+12]..[2497,91054+47])
                                                                  Pexp_sequence
                                                                  expression (typing/typemod.ml[2490,90763+12]..[2490,90763+57])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[2490,90763+12]..[2490,90763+40])
                                                                      Pexp_ident "Signature_names.check_module" (typing/typemod.ml[2490,90763+12]..[2490,90763+40])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[2490,90763+41]..[2490,90763+46])
  Pexp_ident "names" (typing/typemod.ml[2490,90763+41]..[2490,90763+46])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[2490,90763+47]..[2490,90763+54])
  Pexp_ident "pmb_loc" (typing/typemod.ml[2490,90763+47]..[2490,90763+54])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[2490,90763+55]..[2490,90763+57])
  Pexp_ident "id" (typing/typemod.ml[2490,90763+55]..[2490,90763+57])
                                                                    ]
                                                                  expression (typing/typemod.ml[2491,90822+12]..[2497,91054+47])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typemod.ml[2491,90822+12]..[2491,90822+19])
Pexp_construct "Some" (typing/typemod.ml[2491,90822+12]..[2491,90822+16])
Some
  expression (typing/typemod.ml[2491,90822+17]..[2491,90822+19])
    Pexp_ident "id" (typing/typemod.ml[2491,90822+17]..[2491,90822+19])
                                                                      expression (typing/typemod.ml[2491,90822+21]..[2491,90822+22])
Pexp_ident "e" (typing/typemod.ml[2491,90822+21]..[2491,90822+22])
                                                                      expression (typing/typemod.ml[2492,90846+12]..[2497,91054+47])
Pexp_construct "::" (typing/typemod.ml[2492,90846+13]..[2497,91054+47]) ghost
Some
  expression (typing/typemod.ml[2492,90846+13]..[2497,91054+47]) ghost
    Pexp_tuple
    [
      expression (typing/typemod.ml[2492,90846+13]..[2497,91054+46])
        Pexp_construct "Sig_module" (typing/typemod.ml[2492,90846+13]..[2492,90846+23])
        Some
          expression (typing/typemod.ml[2492,90846+23]..[2497,91054+46])
            Pexp_tuple
            [
              expression (typing/typemod.ml[2492,90846+24]..[2492,90846+26])
                Pexp_ident "id" (typing/typemod.ml[2492,90846+24]..[2492,90846+26])
              expression (typing/typemod.ml[2492,90846+28]..[2492,90846+32])
                Pexp_ident "pres" (typing/typemod.ml[2492,90846+28]..[2492,90846+32])
              expression (typing/typemod.ml[2493,90880+24]..[2497,91054+25])
                Pexp_record
                [
                  "md_type" (typing/typemod.ml[2493,90880+25]..[2493,90880+32])
                    expression (typing/typemod.ml[2493,90880+35]..[2493,90880+48])
                      Pexp_field
                      expression (typing/typemod.ml[2493,90880+35]..[2493,90880+39])
                        Pexp_ident "modl" (typing/typemod.ml[2493,90880+35]..[2493,90880+39])
                      "mod_type" (typing/typemod.ml[2493,90880+40]..[2493,90880+48])
                  "md_attributes" (typing/typemod.ml[2494,90930+25]..[2494,90930+38])
                    expression (typing/typemod.ml[2494,90930+41]..[2494,90930+46])
                      Pexp_ident "attrs" (typing/typemod.ml[2494,90930+41]..[2494,90930+46])
                  "md_loc" (typing/typemod.ml[2495,90978+25]..[2495,90978+31])
                    expression (typing/typemod.ml[2495,90978+34]..[2495,90978+41])
                      Pexp_ident "pmb_loc" (typing/typemod.ml[2495,90978+34]..[2495,90978+41])
                  "md_uid" (typing/typemod.ml[2496,91021+25]..[2496,91021+31]) ghost
                    expression (typing/typemod.ml[2496,91021+25]..[2496,91021+31])
                      Pexp_ident "md_uid" (typing/typemod.ml[2496,91021+25]..[2496,91021+31])
                ]
                None
              expression (typing/typemod.ml[2497,91054+27]..[2497,91054+35])
                Pexp_construct "Trec_not" (typing/typemod.ml[2497,91054+27]..[2497,91054+35])
                None
              expression (typing/typemod.ml[2497,91054+37]..[2497,91054+45])
                Pexp_construct "Exported" (typing/typemod.ml[2497,91054+37]..[2497,91054+45])
                None
            ]
      expression (typing/typemod.ml[2497,91054+46]..[2497,91054+47]) ghost
        Pexp_construct "[]" (typing/typemod.ml[2497,91054+46]..[2497,91054+47]) ghost
        None
    ]
                                                                    ]
                                                          ]
                                                    ]
                                                    expression (typing/typemod.ml[2499,91113+8]..[2502,91264+14])
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/typemod.ml[2499,91113+8]..[2500,91172+78])
                                                          Pexp_construct "Tstr_module" (typing/typemod.ml[2499,91113+8]..[2499,91113+19])
                                                          Some
                                                            expression (typing/typemod.ml[2499,91113+20]..[2500,91172+78])
                                                              Pexp_record
                                                              [
                                                                "mb_id" (typing/typemod.ml[2499,91113+21]..[2499,91113+26])
                                                                  expression (typing/typemod.ml[2499,91113+27]..[2499,91113+29])
                                                                    Pexp_ident "id" (typing/typemod.ml[2499,91113+27]..[2499,91113+29])
                                                                "mb_name" (typing/typemod.ml[2499,91113+31]..[2499,91113+38])
                                                                  expression (typing/typemod.ml[2499,91113+39]..[2499,91113+43])
                                                                    Pexp_ident "name" (typing/typemod.ml[2499,91113+39]..[2499,91113+43])
                                                                "mb_expr" (typing/typemod.ml[2499,91113+45]..[2499,91113+52])
                                                                  expression (typing/typemod.ml[2499,91113+53]..[2499,91113+57])
                                                                    Pexp_ident "modl" (typing/typemod.ml[2499,91113+53]..[2499,91113+57])
                                                                "mb_presence" (typing/typemod.ml[2500,91172+21]..[2500,91172+32])
                                                                  expression (typing/typemod.ml[2500,91172+33]..[2500,91172+37])
                                                                    Pexp_ident "pres" (typing/typemod.ml[2500,91172+33]..[2500,91172+37])
                                                                "mb_attributes" (typing/typemod.ml[2500,91172+39]..[2500,91172+52])
                                                                  expression (typing/typemod.ml[2500,91172+53]..[2500,91172+58])
                                                                    Pexp_ident "attrs" (typing/typemod.ml[2500,91172+53]..[2500,91172+58])
                                                                "mb_loc" (typing/typemod.ml[2500,91172+61]..[2500,91172+67])
                                                                  expression (typing/typemod.ml[2500,91172+68]..[2500,91172+75])
                                                                    Pexp_ident "pmb_loc" (typing/typemod.ml[2500,91172+68]..[2500,91172+75])
                                                              ]
                                                              None
                                                        expression (typing/typemod.ml[2501,91252+8]..[2501,91252+10])
                                                          Pexp_ident "sg" (typing/typemod.ml[2501,91252+8]..[2501,91252+10])
                                                        expression (typing/typemod.ml[2502,91264+8]..[2502,91264+14])
                                                          Pexp_ident "newenv" (typing/typemod.ml[2502,91264+8]..[2502,91264+14])
                                                      ]
                                  <case>
                                    pattern (typing/typemod.ml[2503,91279+6]..[2503,91279+26])
                                      Ppat_construct "Pstr_recmodule" (typing/typemod.ml[2503,91279+6]..[2503,91279+20])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2503,91279+21]..[2503,91279+26])
                                          Ppat_var "sbind" (typing/typemod.ml[2503,91279+21]..[2503,91279+26])
                                    expression (typing/typemod.ml[2504,91309+8]..[2579,94033+14])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[2504,91309+12]..[2504,91309+17])
                                            Ppat_var "sbind" (typing/typemod.ml[2504,91309+12]..[2504,91309+17])
                                          expression (typing/typemod.ml[2505,91329+10]..[2517,91780+17])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2505,91329+10]..[2505,91329+18])
                                              Pexp_ident "List.map" (typing/typemod.ml[2505,91329+10]..[2505,91329+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2506,91348+12]..[2516,91766+13])
                                                  Pexp_function
                                                  [
                                                    <case>
                                                      pattern (typing/typemod.ml[2507,91370+16]..[2511,91545+17])
                                                        Ppat_record Closed
                                                        [
                                                          "pmb_name" (typing/typemod.ml[2507,91370+17]..[2507,91370+25])
                                                            pattern (typing/typemod.ml[2507,91370+28]..[2507,91370+32])
                                                              Ppat_var "name" (typing/typemod.ml[2507,91370+28]..[2507,91370+32])
                                                          "pmb_expr" (typing/typemod.ml[2508,91404+17]..[2508,91404+25])
                                                            pattern (typing/typemod.ml[2508,91404+28]..[2508,91404+66])
                                                              Ppat_record Closed
                                                              [
                                                                "pmod_desc" (typing/typemod.ml[2508,91404+29]..[2508,91404+38])
                                                                  pattern (typing/typemod.ml[2508,91404+39]..[2508,91404+65])
                                                                    Ppat_construct "Pmod_constraint" (typing/typemod.ml[2508,91404+39]..[2508,91404+54])
                                                                    Some
                                                                      []
                                                                      pattern (typing/typemod.ml[2508,91404+54]..[2508,91404+65])
Ppat_tuple
[
  pattern (typing/typemod.ml[2508,91404+55]..[2508,91404+59])
    Ppat_var "expr" (typing/typemod.ml[2508,91404+55]..[2508,91404+59])
  pattern (typing/typemod.ml[2508,91404+61]..[2508,91404+64])
    Ppat_var "typ" (typing/typemod.ml[2508,91404+61]..[2508,91404+64])
]
                                                              ]
                                                          "pmb_attributes" (typing/typemod.ml[2509,91472+17]..[2509,91472+31])
                                                            pattern (typing/typemod.ml[2509,91472+34]..[2509,91472+39])
                                                              Ppat_var "attrs" (typing/typemod.ml[2509,91472+34]..[2509,91472+39])
                                                          "pmb_loc" (typing/typemod.ml[2510,91513+17]..[2510,91513+24])
                                                            pattern (typing/typemod.ml[2510,91513+27]..[2510,91513+30])
                                                              Ppat_var "loc" (typing/typemod.ml[2510,91513+27]..[2510,91513+30])
                                                        ]
                                                      expression (typing/typemod.ml[2512,91566+18]..[2512,91566+45])
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typemod.ml[2512,91566+18]..[2512,91566+22])
                                                            Pexp_ident "name" (typing/typemod.ml[2512,91566+18]..[2512,91566+22])
                                                          expression (typing/typemod.ml[2512,91566+24]..[2512,91566+27])
                                                            Pexp_ident "typ" (typing/typemod.ml[2512,91566+24]..[2512,91566+27])
                                                          expression (typing/typemod.ml[2512,91566+29]..[2512,91566+33])
                                                            Pexp_ident "expr" (typing/typemod.ml[2512,91566+29]..[2512,91566+33])
                                                          expression (typing/typemod.ml[2512,91566+35]..[2512,91566+40])
                                                            Pexp_ident "attrs" (typing/typemod.ml[2512,91566+35]..[2512,91566+40])
                                                          expression (typing/typemod.ml[2512,91566+42]..[2512,91566+45])
                                                            Pexp_ident "loc" (typing/typemod.ml[2512,91566+42]..[2512,91566+45])
                                                        ]
                                                    <case>
                                                      pattern (typing/typemod.ml[2513,91612+16]..[2513,91612+18])
                                                        Ppat_var "mb" (typing/typemod.ml[2513,91612+16]..[2513,91612+18])
                                                      expression (typing/typemod.ml[2514,91634+18]..[2515,91693+72])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2514,91634+18]..[2514,91634+23])
                                                          Pexp_ident "raise" (typing/typemod.ml[2514,91634+18]..[2514,91634+23])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2514,91634+24]..[2515,91693+72])
                                                              Pexp_construct "Error" (typing/typemod.ml[2514,91634+25]..[2514,91634+30])
                                                              Some
                                                                expression (typing/typemod.ml[2514,91634+31]..[2515,91693+71])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (typing/typemod.ml[2514,91634+32]..[2514,91634+52])
                                                                      Pexp_field
                                                                      expression (typing/typemod.ml[2514,91634+32]..[2514,91634+43])
Pexp_field
expression (typing/typemod.ml[2514,91634+32]..[2514,91634+34])
  Pexp_ident "mb" (typing/typemod.ml[2514,91634+32]..[2514,91634+34])
"pmb_expr" (typing/typemod.ml[2514,91634+35]..[2514,91634+43])
                                                                      "pmod_loc" (typing/typemod.ml[2514,91634+44]..[2514,91634+52])
                                                                    expression (typing/typemod.ml[2514,91634+54]..[2514,91634+57])
                                                                      Pexp_ident "env" (typing/typemod.ml[2514,91634+54]..[2514,91634+57])
                                                                    expression (typing/typemod.ml[2515,91693+32]..[2515,91693+70])
                                                                      Pexp_construct "Recursive_module_require_explicit_type" (typing/typemod.ml[2515,91693+32]..[2515,91693+70])
                                                                      None
                                                                  ]
                                                        ]
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2517,91780+12]..[2517,91780+17])
                                                  Pexp_ident "sbind" (typing/typemod.ml[2517,91780+12]..[2517,91780+17])
                                            ]
                                      ]
                                      expression (typing/typemod.ml[2519,91809+8]..[2579,94033+14])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[2519,91809+12]..[2519,91809+27])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[2519,91809+13]..[2519,91809+18])
                                                  Ppat_var "decls" (typing/typemod.ml[2519,91809+13]..[2519,91809+18])
                                                pattern (typing/typemod.ml[2519,91809+20]..[2519,91809+26])
                                                  Ppat_var "newenv" (typing/typemod.ml[2519,91809+20]..[2519,91809+26])
                                              ]
                                            expression (typing/typemod.ml[2520,91839+10]..[2524,92050+13])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2520,91839+10]..[2520,91839+35])
                                                Pexp_ident "transl_recmodule_modtypes" (typing/typemod.ml[2520,91839+10]..[2520,91839+35])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2520,91839+36]..[2520,91839+39])
                                                    Pexp_ident "env" (typing/typemod.ml[2520,91839+36]..[2520,91839+39])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2521,91879+12]..[2524,92050+13])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[2521,91879+13]..[2521,91879+21])
                                                      Pexp_ident "List.map" (typing/typemod.ml[2521,91879+13]..[2521,91879+21])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2521,91879+22]..[2523,91990+53])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (typing/typemod.ml[2521,91879+27]..[2521,91879+59])
                                                            Ppat_tuple
                                                            [
                                                              pattern (typing/typemod.ml[2521,91879+28]..[2521,91879+32])
                                                                Ppat_var "name" (typing/typemod.ml[2521,91879+28]..[2521,91879+32])
                                                              pattern (typing/typemod.ml[2521,91879+34]..[2521,91879+38])
                                                                Ppat_var "smty" (typing/typemod.ml[2521,91879+34]..[2521,91879+38])
                                                              pattern (typing/typemod.ml[2521,91879+40]..[2521,91879+46])
                                                                Ppat_var "_smodl" (typing/typemod.ml[2521,91879+40]..[2521,91879+46])
                                                              pattern (typing/typemod.ml[2521,91879+48]..[2521,91879+53])
                                                                Ppat_var "attrs" (typing/typemod.ml[2521,91879+48]..[2521,91879+53])
                                                              pattern (typing/typemod.ml[2521,91879+55]..[2521,91879+58])
                                                                Ppat_var "loc" (typing/typemod.ml[2521,91879+55]..[2521,91879+58])
                                                            ]
                                                          expression (typing/typemod.ml[2522,91942+17]..[2523,91990+52])
                                                            Pexp_record
                                                            [
                                                              "pmd_name" (typing/typemod.ml[2522,91942+18]..[2522,91942+26])
                                                                expression (typing/typemod.ml[2522,91942+27]..[2522,91942+31])
                                                                  Pexp_ident "name" (typing/typemod.ml[2522,91942+27]..[2522,91942+31])
                                                              "pmd_type" (typing/typemod.ml[2522,91942+33]..[2522,91942+41])
                                                                expression (typing/typemod.ml[2522,91942+42]..[2522,91942+46])
                                                                  Pexp_ident "smty" (typing/typemod.ml[2522,91942+42]..[2522,91942+46])
                                                              "pmd_attributes" (typing/typemod.ml[2523,91990+18]..[2523,91990+32])
                                                                expression (typing/typemod.ml[2523,91990+33]..[2523,91990+38])
                                                                  Pexp_ident "attrs" (typing/typemod.ml[2523,91990+33]..[2523,91990+38])
                                                              "pmd_loc" (typing/typemod.ml[2523,91990+40]..[2523,91990+47])
                                                                expression (typing/typemod.ml[2523,91990+48]..[2523,91990+51])
                                                                  Pexp_ident "loc" (typing/typemod.ml[2523,91990+48]..[2523,91990+51])
                                                            ]
                                                            None
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2523,91990+54]..[2523,91990+59])
                                                          Pexp_ident "sbind" (typing/typemod.ml[2523,91990+54]..[2523,91990+59])
                                                    ]
                                              ]
                                        ]
                                        expression (typing/typemod.ml[2525,92067+8]..[2579,94033+14])
                                          Pexp_sequence
                                          expression (typing/typemod.ml[2525,92067+8]..[2528,92192+15])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2525,92067+8]..[2525,92067+17])
                                              Pexp_ident "List.iter" (typing/typemod.ml[2525,92067+8]..[2525,92067+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2526,92085+10]..[2527,92111+80])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/typemod.ml[2526,92085+15]..[2526,92085+22])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/typemod.ml[2526,92085+16]..[2526,92085+18])
                                                        Ppat_var "md" (typing/typemod.ml[2526,92085+16]..[2526,92085+18])
                                                      pattern (typing/typemod.ml[2526,92085+20]..[2526,92085+21])
                                                        Ppat_any
                                                    ]
                                                  expression (typing/typemod.ml[2527,92111+12]..[2527,92111+79])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[2527,92111+12]..[2527,92111+23])
                                                      Pexp_ident "Option.iter" (typing/typemod.ml[2527,92111+12]..[2527,92111+23])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2527,92111+24]..[2527,92111+70])
                                                          Pexp_open Fresh
                                                          module_expr (typing/typemod.ml[2527,92111+24]..[2527,92111+39])
                                                            Pmod_ident "Signature_names" (typing/typemod.ml[2527,92111+24]..[2527,92111+39])
                                                          expression (typing/typemod.ml[2527,92111+41]..[2527,92111+69])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[2527,92111+41]..[2527,92111+53])
                                                              Pexp_ident "check_module" (typing/typemod.ml[2527,92111+41]..[2527,92111+53])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2527,92111+54]..[2527,92111+59])
                                                                  Pexp_ident "names" (typing/typemod.ml[2527,92111+54]..[2527,92111+59])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2527,92111+60]..[2527,92111+69])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[2527,92111+60]..[2527,92111+62])
                                                                    Pexp_ident "md" (typing/typemod.ml[2527,92111+60]..[2527,92111+62])
                                                                  "md_loc" (typing/typemod.ml[2527,92111+63]..[2527,92111+69])
                                                            ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2527,92111+71]..[2527,92111+79])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[2527,92111+71]..[2527,92111+73])
                                                            Pexp_ident "md" (typing/typemod.ml[2527,92111+71]..[2527,92111+73])
                                                          "md_id" (typing/typemod.ml[2527,92111+74]..[2527,92111+79])
                                                    ]
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2528,92192+10]..[2528,92192+15])
                                                  Pexp_ident "decls" (typing/typemod.ml[2528,92192+10]..[2528,92192+15])
                                            ]
                                          expression (typing/typemod.ml[2529,92209+8]..[2579,94033+14])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[2529,92209+12]..[2529,92209+21])
                                                  Ppat_var "bindings1" (typing/typemod.ml[2529,92209+12]..[2529,92209+21])
                                                expression (typing/typemod.ml[2530,92233+10]..[2543,92771+23])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2530,92233+10]..[2530,92233+19])
                                                    Pexp_ident "List.map2" (typing/typemod.ml[2530,92233+10]..[2530,92233+19])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2531,92253+12]..[2542,92710+60])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (typing/typemod.ml[2531,92253+17]..[2531,92253+47])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/typemod.ml[2531,92253+18]..[2531,92253+41])
                                                              Ppat_record Closed
                                                              [
                                                                "md_id" (typing/typemod.ml[2531,92253+19]..[2531,92253+24])
                                                                  pattern (typing/typemod.ml[2531,92253+25]..[2531,92253+27])
                                                                    Ppat_var "id" (typing/typemod.ml[2531,92253+25]..[2531,92253+27])
                                                                "md_type" (typing/typemod.ml[2531,92253+29]..[2531,92253+36])
                                                                  pattern (typing/typemod.ml[2531,92253+37]..[2531,92253+40])
                                                                    Ppat_var "mty" (typing/typemod.ml[2531,92253+37]..[2531,92253+40])
                                                              ]
                                                            pattern (typing/typemod.ml[2531,92253+43]..[2531,92253+46])
                                                              Ppat_var "uid" (typing/typemod.ml[2531,92253+43]..[2531,92253+46])
                                                          ]
                                                        expression (typing/typemod.ml[2531,92253+48]..[2542,92710+59]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (typing/typemod.ml[2531,92253+48]..[2531,92253+76])
                                                            Ppat_tuple
                                                            [
                                                              pattern (typing/typemod.ml[2531,92253+49]..[2531,92253+53])
                                                                Ppat_var "name" (typing/typemod.ml[2531,92253+49]..[2531,92253+53])
                                                              pattern (typing/typemod.ml[2531,92253+55]..[2531,92253+56])
                                                                Ppat_any
                                                              pattern (typing/typemod.ml[2531,92253+58]..[2531,92253+63])
                                                                Ppat_var "smodl" (typing/typemod.ml[2531,92253+58]..[2531,92253+63])
                                                              pattern (typing/typemod.ml[2531,92253+65]..[2531,92253+70])
                                                                Ppat_var "attrs" (typing/typemod.ml[2531,92253+65]..[2531,92253+70])
                                                              pattern (typing/typemod.ml[2531,92253+72]..[2531,92253+75])
                                                                Ppat_var "loc" (typing/typemod.ml[2531,92253+72]..[2531,92253+75])
                                                            ]
                                                          expression (typing/typemod.ml[2532,92333+15]..[2542,92710+59])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (typing/typemod.ml[2532,92333+19]..[2532,92333+23])
                                                                  Ppat_var "modl" (typing/typemod.ml[2532,92333+19]..[2532,92333+23])
                                                                expression (typing/typemod.ml[2533,92359+17]..[2537,92554+20])
                                                                  Pexp_apply
                                                                  expression (typing/typemod.ml[2533,92359+17]..[2533,92359+49])
                                                                    Pexp_ident "Builtin_attributes.warning_scope" (typing/typemod.ml[2533,92359+17]..[2533,92359+49])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[2533,92359+50]..[2533,92359+55])
Pexp_ident "attrs" (typing/typemod.ml[2533,92359+50]..[2533,92359+55])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[2534,92415+19]..[2537,92554+20])
Pexp_fun
Nolabel
None
pattern (typing/typemod.ml[2534,92415+24]..[2534,92415+26])
  Ppat_construct "()" (typing/typemod.ml[2534,92415+24]..[2534,92415+26])
  None
expression (typing/typemod.ml[2535,92445+22]..[2536,92517+36])
  Pexp_apply
  expression (typing/typemod.ml[2535,92445+22]..[2535,92445+33])
    Pexp_ident "type_module" (typing/typemod.ml[2535,92445+22]..[2535,92445+33])
  [
    <arg>
    Nolabel
      expression (typing/typemod.ml[2535,92445+34]..[2535,92445+38])
        Pexp_construct "true" (typing/typemod.ml[2535,92445+34]..[2535,92445+38])
        None
    <arg>
    Nolabel
      expression (typing/typemod.ml[2535,92445+39]..[2535,92445+49])
        Pexp_ident "funct_body" (typing/typemod.ml[2535,92445+39]..[2535,92445+49])
    <arg>
    Nolabel
      expression (typing/typemod.ml[2535,92445+50]..[2535,92445+71])
        Pexp_apply
        expression (typing/typemod.ml[2535,92445+51]..[2535,92445+67])
          Pexp_ident "anchor_recmodule" (typing/typemod.ml[2535,92445+51]..[2535,92445+67])
        [
          <arg>
          Nolabel
            expression (typing/typemod.ml[2535,92445+68]..[2535,92445+70])
              Pexp_ident "id" (typing/typemod.ml[2535,92445+68]..[2535,92445+70])
        ]
    <arg>
    Nolabel
      expression (typing/typemod.ml[2536,92517+24]..[2536,92517+30])
        Pexp_ident "newenv" (typing/typemod.ml[2536,92517+24]..[2536,92517+30])
    <arg>
    Nolabel
      expression (typing/typemod.ml[2536,92517+31]..[2536,92517+36])
        Pexp_ident "smodl" (typing/typemod.ml[2536,92517+31]..[2536,92517+36])
  ]
                                                                  ]
                                                            ]
                                                            expression (typing/typemod.ml[2539,92593+15]..[2542,92710+59])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (typing/typemod.ml[2539,92593+19]..[2539,92593+23])
                                                                    Ppat_var "mty'" (typing/typemod.ml[2539,92593+19]..[2539,92593+23])
                                                                  expression (typing/typemod.ml[2540,92619+17]..[2540,92619+72])
                                                                    Pexp_apply
                                                                    expression (typing/typemod.ml[2540,92619+17]..[2540,92619+35])
                                                                      Pexp_ident "enrich_module_type" (typing/typemod.ml[2540,92619+17]..[2540,92619+35])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[2540,92619+36]..[2540,92619+42])
  Pexp_ident "anchor" (typing/typemod.ml[2540,92619+36]..[2540,92619+42])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[2540,92619+43]..[2540,92619+51])
  Pexp_field
  expression (typing/typemod.ml[2540,92619+43]..[2540,92619+47])
    Pexp_ident "name" (typing/typemod.ml[2540,92619+43]..[2540,92619+47])
  "txt" (typing/typemod.ml[2540,92619+48]..[2540,92619+51])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[2540,92619+52]..[2540,92619+65])
  Pexp_field
  expression (typing/typemod.ml[2540,92619+52]..[2540,92619+56])
    Pexp_ident "modl" (typing/typemod.ml[2540,92619+52]..[2540,92619+56])
  "mod_type" (typing/typemod.ml[2540,92619+57]..[2540,92619+65])
                                                                      <arg>
                                                                      Nolabel
expression (typing/typemod.ml[2540,92619+66]..[2540,92619+72])
  Pexp_ident "newenv" (typing/typemod.ml[2540,92619+66]..[2540,92619+72])
                                                                    ]
                                                              ]
                                                              expression (typing/typemod.ml[2542,92710+15]..[2542,92710+59])
                                                                Pexp_tuple
                                                                [
                                                                  expression (typing/typemod.ml[2542,92710+16]..[2542,92710+18])
                                                                    Pexp_ident "id" (typing/typemod.ml[2542,92710+16]..[2542,92710+18])
                                                                  expression (typing/typemod.ml[2542,92710+20]..[2542,92710+24])
                                                                    Pexp_ident "name" (typing/typemod.ml[2542,92710+20]..[2542,92710+24])
                                                                  expression (typing/typemod.ml[2542,92710+26]..[2542,92710+29])
                                                                    Pexp_ident "mty" (typing/typemod.ml[2542,92710+26]..[2542,92710+29])
                                                                  expression (typing/typemod.ml[2542,92710+31]..[2542,92710+35])
                                                                    Pexp_ident "modl" (typing/typemod.ml[2542,92710+31]..[2542,92710+35])
                                                                  expression (typing/typemod.ml[2542,92710+37]..[2542,92710+41])
                                                                    Pexp_ident "mty'" (typing/typemod.ml[2542,92710+37]..[2542,92710+41])
                                                                  expression (typing/typemod.ml[2542,92710+43]..[2542,92710+48])
                                                                    Pexp_ident "attrs" (typing/typemod.ml[2542,92710+43]..[2542,92710+48])
                                                                  expression (typing/typemod.ml[2542,92710+50]..[2542,92710+53])
                                                                    Pexp_ident "loc" (typing/typemod.ml[2542,92710+50]..[2542,92710+53])
                                                                  expression (typing/typemod.ml[2542,92710+55]..[2542,92710+58])
                                                                    Pexp_ident "uid" (typing/typemod.ml[2542,92710+55]..[2542,92710+58])
                                                                ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2543,92771+12]..[2543,92771+17])
                                                        Pexp_ident "decls" (typing/typemod.ml[2543,92771+12]..[2543,92771+17])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2543,92771+18]..[2543,92771+23])
                                                        Pexp_ident "sbind" (typing/typemod.ml[2543,92771+18]..[2543,92771+23])
                                                  ]
                                            ]
                                            expression (typing/typemod.ml[2544,92798+8]..[2579,94033+14])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/typemod.ml[2544,92798+12]..[2544,92798+18])
                                                    Ppat_var "newenv" (typing/typemod.ml[2544,92798+12]..[2544,92798+18])
                                                  expression (typing/typemod.ml[2545,92871+10]..[2561,93429+21])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[2545,92871+10]..[2545,92871+24])
                                                      Pexp_ident "List.fold_left" (typing/typemod.ml[2545,92871+10]..[2545,92871+24])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2546,92896+12]..[2560,93415+13])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (typing/typemod.ml[2546,92896+17]..[2546,92896+20])
                                                            Ppat_var "env" (typing/typemod.ml[2546,92896+17]..[2546,92896+20])
                                                          expression (typing/typemod.ml[2546,92896+21]..[2559,93370+44]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/typemod.ml[2546,92896+21]..[2546,92896+30])
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/typemod.ml[2546,92896+22]..[2546,92896+24])
                                                                  Ppat_var "md" (typing/typemod.ml[2546,92896+22]..[2546,92896+24])
                                                                pattern (typing/typemod.ml[2546,92896+26]..[2546,92896+29])
                                                                  Ppat_var "uid" (typing/typemod.ml[2546,92896+26]..[2546,92896+29])
                                                              ]
                                                            expression (typing/typemod.ml[2547,92930+15]..[2559,93370+44])
                                                              Pexp_match
                                                              expression (typing/typemod.ml[2547,92930+21]..[2547,92930+29])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[2547,92930+21]..[2547,92930+23])
                                                                  Pexp_ident "md" (typing/typemod.ml[2547,92930+21]..[2547,92930+23])
                                                                "md_id" (typing/typemod.ml[2547,92930+24]..[2547,92930+29])
                                                              [
                                                                <case>
                                                                  pattern (typing/typemod.ml[2548,92965+17]..[2548,92965+21])
                                                                    Ppat_construct "None" (typing/typemod.ml[2548,92965+17]..[2548,92965+21])
                                                                    None
                                                                  expression (typing/typemod.ml[2548,92965+25]..[2548,92965+28])
                                                                    Pexp_ident "env" (typing/typemod.ml[2548,92965+25]..[2548,92965+28])
                                                                <case>
                                                                  pattern (typing/typemod.ml[2549,92994+17]..[2549,92994+24])
                                                                    Ppat_construct "Some" (typing/typemod.ml[2549,92994+17]..[2549,92994+21])
                                                                    Some
                                                                      []
                                                                      pattern (typing/typemod.ml[2549,92994+22]..[2549,92994+24])
Ppat_var "id" (typing/typemod.ml[2549,92994+22]..[2549,92994+24])
                                                                  expression (typing/typemod.ml[2550,93022+19]..[2559,93370+44])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (typing/typemod.ml[2550,93022+23]..[2550,93022+28])
  Ppat_var "mdecl" (typing/typemod.ml[2550,93022+23]..[2550,93022+28])
expression (typing/typemod.ml[2551,93053+21]..[2556,93267+22])
  Pexp_record
  [
    "md_type" (typing/typemod.ml[2552,93076+23]..[2552,93076+30])
      expression (typing/typemod.ml[2552,93076+33]..[2552,93076+52])
        Pexp_field
        expression (typing/typemod.ml[2552,93076+33]..[2552,93076+43])
          Pexp_field
          expression (typing/typemod.ml[2552,93076+33]..[2552,93076+35])
            Pexp_ident "md" (typing/typemod.ml[2552,93076+33]..[2552,93076+35])
          "md_type" (typing/typemod.ml[2552,93076+36]..[2552,93076+43])
        "mty_type" (typing/typemod.ml[2552,93076+44]..[2552,93076+52])
    "md_attributes" (typing/typemod.ml[2553,93130+23]..[2553,93130+36])
      expression (typing/typemod.ml[2553,93130+39]..[2553,93130+55])
        Pexp_field
        expression (typing/typemod.ml[2553,93130+39]..[2553,93130+41])
          Pexp_ident "md" (typing/typemod.ml[2553,93130+39]..[2553,93130+41])
        "md_attributes" (typing/typemod.ml[2553,93130+42]..[2553,93130+55])
    "md_loc" (typing/typemod.ml[2554,93187+23]..[2554,93187+29])
      expression (typing/typemod.ml[2554,93187+32]..[2554,93187+41])
        Pexp_field
        expression (typing/typemod.ml[2554,93187+32]..[2554,93187+34])
          Pexp_ident "md" (typing/typemod.ml[2554,93187+32]..[2554,93187+34])
        "md_loc" (typing/typemod.ml[2554,93187+35]..[2554,93187+41])
    "md_uid" (typing/typemod.ml[2555,93230+23]..[2555,93230+29])
      expression (typing/typemod.ml[2555,93230+32]..[2555,93230+35])
        Pexp_ident "uid" (typing/typemod.ml[2555,93230+32]..[2555,93230+35])
  ]
  None
                                                                    ]
                                                                    expression (typing/typemod.ml[2558,93312+19]..[2559,93370+44])
                                                                      Pexp_apply
                                                                      expression (typing/typemod.ml[2558,93312+19]..[2558,93312+45])
Pexp_ident "Env.add_module_declaration" (typing/typemod.ml[2558,93312+19]..[2558,93312+45])
                                                                      [
<arg>
Labelled "check"
  expression (typing/typemod.ml[2558,93312+53]..[2558,93312+57])
    Pexp_construct "true" (typing/typemod.ml[2558,93312+53]..[2558,93312+57])
    None
<arg>
Nolabel
  expression (typing/typemod.ml[2559,93370+21]..[2559,93370+23])
    Pexp_ident "id" (typing/typemod.ml[2559,93370+21]..[2559,93370+23])
<arg>
Nolabel
  expression (typing/typemod.ml[2559,93370+24]..[2559,93370+34])
    Pexp_construct "Mp_present" (typing/typemod.ml[2559,93370+24]..[2559,93370+34])
    None
<arg>
Nolabel
  expression (typing/typemod.ml[2559,93370+35]..[2559,93370+40])
    Pexp_ident "mdecl" (typing/typemod.ml[2559,93370+35]..[2559,93370+40])
<arg>
Nolabel
  expression (typing/typemod.ml[2559,93370+41]..[2559,93370+44])
    Pexp_ident "env" (typing/typemod.ml[2559,93370+41]..[2559,93370+44])
                                                                      ]
                                                              ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2561,93429+12]..[2561,93429+15])
                                                          Pexp_ident "env" (typing/typemod.ml[2561,93429+12]..[2561,93429+15])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2561,93429+16]..[2561,93429+21])
                                                          Pexp_ident "decls" (typing/typemod.ml[2561,93429+16]..[2561,93429+21])
                                                    ]
                                              ]
                                              expression (typing/typemod.ml[2563,93462+8]..[2579,94033+14])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typemod.ml[2563,93462+12]..[2563,93462+21])
                                                      Ppat_var "bindings2" (typing/typemod.ml[2563,93462+12]..[2563,93462+21])
                                                    expression (typing/typemod.ml[2564,93486+10]..[2564,93486+52])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[2564,93486+10]..[2564,93486+35])
                                                        Pexp_ident "check_recmodule_inclusion" (typing/typemod.ml[2564,93486+10]..[2564,93486+35])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2564,93486+36]..[2564,93486+42])
                                                            Pexp_ident "newenv" (typing/typemod.ml[2564,93486+36]..[2564,93486+42])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2564,93486+43]..[2564,93486+52])
                                                            Pexp_ident "bindings1" (typing/typemod.ml[2564,93486+43]..[2564,93486+52])
                                                      ]
                                                ]
                                                expression (typing/typemod.ml[2565,93542+8]..[2579,94033+14])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typemod.ml[2565,93542+12]..[2565,93542+15])
                                                        Ppat_var "mbs" (typing/typemod.ml[2565,93542+12]..[2565,93542+15])
                                                      expression (typing/typemod.ml[2566,93560+10]..[2568,93661+21])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2566,93560+10]..[2566,93560+25])
                                                          Pexp_ident "List.filter_map" (typing/typemod.ml[2566,93560+10]..[2566,93560+25])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2566,93560+26]..[2568,93661+11])
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (typing/typemod.ml[2566,93560+31]..[2566,93560+40])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/typemod.ml[2566,93560+32]..[2566,93560+34])
                                                                    Ppat_var "mb" (typing/typemod.ml[2566,93560+32]..[2566,93560+34])
                                                                  pattern (typing/typemod.ml[2566,93560+36]..[2566,93560+39])
                                                                    Ppat_var "uid" (typing/typemod.ml[2566,93560+36]..[2566,93560+39])
                                                                ]
                                                              expression (typing/typemod.ml[2567,93604+12]..[2567,93604+56])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[2567,93604+12]..[2567,93604+22])
                                                                  Pexp_ident "Option.map" (typing/typemod.ml[2567,93604+12]..[2567,93604+22])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[2567,93604+23]..[2567,93604+46])
                                                                      Pexp_fun
                                                                      Nolabel
                                                                      None
                                                                      pattern (typing/typemod.ml[2567,93604+28]..[2567,93604+30])
Ppat_var "id" (typing/typemod.ml[2567,93604+28]..[2567,93604+30])
                                                                      expression (typing/typemod.ml[2567,93604+34]..[2567,93604+45])
Pexp_tuple
[
  expression (typing/typemod.ml[2567,93604+34]..[2567,93604+36])
    Pexp_ident "id" (typing/typemod.ml[2567,93604+34]..[2567,93604+36])
  expression (typing/typemod.ml[2567,93604+38]..[2567,93604+40])
    Pexp_ident "mb" (typing/typemod.ml[2567,93604+38]..[2567,93604+40])
  expression (typing/typemod.ml[2567,93604+42]..[2567,93604+45])
    Pexp_ident "uid" (typing/typemod.ml[2567,93604+42]..[2567,93604+45])
]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[2567,93604+48]..[2567,93604+56])
                                                                      Pexp_field
                                                                      expression (typing/typemod.ml[2567,93604+48]..[2567,93604+50])
Pexp_ident "mb" (typing/typemod.ml[2567,93604+48]..[2567,93604+50])
                                                                      "mb_id" (typing/typemod.ml[2567,93604+51]..[2567,93604+56])
                                                                ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2568,93661+12]..[2568,93661+21])
                                                              Pexp_ident "bindings2" (typing/typemod.ml[2568,93661+12]..[2568,93661+21])
                                                        ]
                                                  ]
                                                  expression (typing/typemod.ml[2570,93694+8]..[2579,94033+14])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[2570,93694+8]..[2570,93694+47])
                                                        Pexp_construct "Tstr_recmodule" (typing/typemod.ml[2570,93694+8]..[2570,93694+22])
                                                        Some
                                                          expression (typing/typemod.ml[2570,93694+23]..[2570,93694+47])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[2570,93694+24]..[2570,93694+32])
                                                              Pexp_ident "List.map" (typing/typemod.ml[2570,93694+24]..[2570,93694+32])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2570,93694+33]..[2570,93694+36])
                                                                  Pexp_ident "fst" (typing/typemod.ml[2570,93694+33]..[2570,93694+36])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2570,93694+37]..[2570,93694+46])
                                                                  Pexp_ident "bindings2" (typing/typemod.ml[2570,93694+37]..[2570,93694+46])
                                                            ]
                                                      expression (typing/typemod.ml[2571,93743+8]..[2578,94014+17])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2571,93743+8]..[2571,93743+15])
                                                          Pexp_ident "map_rec" (typing/typemod.ml[2571,93743+8]..[2571,93743+15])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2571,93743+16]..[2577,93982+31])
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (typing/typemod.ml[2571,93743+21]..[2571,93743+23])
                                                                Ppat_var "rs" (typing/typemod.ml[2571,93743+21]..[2571,93743+23])
                                                              expression (typing/typemod.ml[2571,93743+24]..[2577,93982+30]) ghost
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (typing/typemod.ml[2571,93743+24]..[2571,93743+37])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (typing/typemod.ml[2571,93743+25]..[2571,93743+27])
                                                                      Ppat_var "id" (typing/typemod.ml[2571,93743+25]..[2571,93743+27])
                                                                    pattern (typing/typemod.ml[2571,93743+29]..[2571,93743+31])
                                                                      Ppat_var "mb" (typing/typemod.ml[2571,93743+29]..[2571,93743+31])
                                                                    pattern (typing/typemod.ml[2571,93743+33]..[2571,93743+36])
                                                                      Ppat_var "uid" (typing/typemod.ml[2571,93743+33]..[2571,93743+36])
                                                                  ]
                                                                expression (typing/typemod.ml[2572,93784+12]..[2577,93982+30])
                                                                  Pexp_construct "Sig_module" (typing/typemod.ml[2572,93784+12]..[2572,93784+22])
                                                                  Some
                                                                    expression (typing/typemod.ml[2572,93784+22]..[2577,93982+30])
                                                                      Pexp_tuple
                                                                      [
expression (typing/typemod.ml[2572,93784+23]..[2572,93784+25])
  Pexp_ident "id" (typing/typemod.ml[2572,93784+23]..[2572,93784+25])
expression (typing/typemod.ml[2572,93784+27]..[2572,93784+37])
  Pexp_construct "Mp_present" (typing/typemod.ml[2572,93784+27]..[2572,93784+37])
  None
expression (typing/typemod.ml[2572,93784+39]..[2577,93982+15])
  Pexp_record
  [
    "md_type" (typing/typemod.ml[2573,93825+16]..[2573,93825+23])
      expression (typing/typemod.ml[2573,93825+24]..[2573,93825+43])
        Pexp_field
        expression (typing/typemod.ml[2573,93825+24]..[2573,93825+34])
          Pexp_field
          expression (typing/typemod.ml[2573,93825+24]..[2573,93825+26])
            Pexp_ident "mb" (typing/typemod.ml[2573,93825+24]..[2573,93825+26])
          "mb_expr" (typing/typemod.ml[2573,93825+27]..[2573,93825+34])
        "mod_type" (typing/typemod.ml[2573,93825+35]..[2573,93825+43])
    "md_attributes" (typing/typemod.ml[2574,93870+16]..[2574,93870+29])
      expression (typing/typemod.ml[2574,93870+30]..[2574,93870+46])
        Pexp_field
        expression (typing/typemod.ml[2574,93870+30]..[2574,93870+32])
          Pexp_ident "mb" (typing/typemod.ml[2574,93870+30]..[2574,93870+32])
        "mb_attributes" (typing/typemod.ml[2574,93870+33]..[2574,93870+46])
    "md_loc" (typing/typemod.ml[2575,93918+16]..[2575,93918+22])
      expression (typing/typemod.ml[2575,93918+23]..[2575,93918+32])
        Pexp_field
        expression (typing/typemod.ml[2575,93918+23]..[2575,93918+25])
          Pexp_ident "mb" (typing/typemod.ml[2575,93918+23]..[2575,93918+25])
        "mb_loc" (typing/typemod.ml[2575,93918+26]..[2575,93918+32])
    "md_uid" (typing/typemod.ml[2576,93952+16]..[2576,93952+22])
      expression (typing/typemod.ml[2576,93952+25]..[2576,93952+28])
        Pexp_ident "uid" (typing/typemod.ml[2576,93952+25]..[2576,93952+28])
  ]
  None
expression (typing/typemod.ml[2577,93982+17]..[2577,93982+19])
  Pexp_ident "rs" (typing/typemod.ml[2577,93982+17]..[2577,93982+19])
expression (typing/typemod.ml[2577,93982+21]..[2577,93982+29])
  Pexp_construct "Exported" (typing/typemod.ml[2577,93982+21]..[2577,93982+29])
  None
                                                                      ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2578,94014+11]..[2578,94014+14])
                                                              Pexp_ident "mbs" (typing/typemod.ml[2578,94014+11]..[2578,94014+14])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2578,94014+15]..[2578,94014+17])
                                                              Pexp_construct "[]" (typing/typemod.ml[2578,94014+15]..[2578,94014+17])
                                                              None
                                                        ]
                                                      expression (typing/typemod.ml[2579,94033+8]..[2579,94033+14])
                                                        Pexp_ident "newenv" (typing/typemod.ml[2579,94033+8]..[2579,94033+14])
                                                    ]
                                  <case>
                                    pattern (typing/typemod.ml[2580,94048+6]..[2580,94048+23])
                                      Ppat_construct "Pstr_modtype" (typing/typemod.ml[2580,94048+6]..[2580,94048+18])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2580,94048+19]..[2580,94048+23])
                                          Ppat_var "pmtd" (typing/typemod.ml[2580,94048+19]..[2580,94048+23])
                                    expression (typing/typemod.ml[2582,94119+8]..[2584,94251+38])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[2582,94119+12]..[2582,94119+27])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[2582,94119+12]..[2582,94119+18])
                                                Ppat_var "newenv" (typing/typemod.ml[2582,94119+12]..[2582,94119+18])
                                              pattern (typing/typemod.ml[2582,94119+20]..[2582,94119+23])
                                                Ppat_var "mtd" (typing/typemod.ml[2582,94119+20]..[2582,94119+23])
                                              pattern (typing/typemod.ml[2582,94119+25]..[2582,94119+27])
                                                Ppat_var "sg" (typing/typemod.ml[2582,94119+25]..[2582,94119+27])
                                            ]
                                          expression (typing/typemod.ml[2582,94119+30]..[2582,94119+58])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2582,94119+30]..[2582,94119+49])
                                              Pexp_ident "transl_modtype_decl" (typing/typemod.ml[2582,94119+30]..[2582,94119+49])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2582,94119+50]..[2582,94119+53])
                                                  Pexp_ident "env" (typing/typemod.ml[2582,94119+50]..[2582,94119+53])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2582,94119+54]..[2582,94119+58])
                                                  Pexp_ident "pmtd" (typing/typemod.ml[2582,94119+54]..[2582,94119+58])
                                            ]
                                      ]
                                      expression (typing/typemod.ml[2583,94181+8]..[2584,94251+38])
                                        Pexp_sequence
                                        expression (typing/typemod.ml[2583,94181+8]..[2583,94181+68])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2583,94181+8]..[2583,94181+37])
                                            Pexp_ident "Signature_names.check_modtype" (typing/typemod.ml[2583,94181+8]..[2583,94181+37])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2583,94181+38]..[2583,94181+43])
                                                Pexp_ident "names" (typing/typemod.ml[2583,94181+38]..[2583,94181+43])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2583,94181+44]..[2583,94181+57])
                                                Pexp_field
                                                expression (typing/typemod.ml[2583,94181+44]..[2583,94181+48])
                                                  Pexp_ident "pmtd" (typing/typemod.ml[2583,94181+44]..[2583,94181+48])
                                                "pmtd_loc" (typing/typemod.ml[2583,94181+49]..[2583,94181+57])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2583,94181+58]..[2583,94181+68])
                                                Pexp_field
                                                expression (typing/typemod.ml[2583,94181+58]..[2583,94181+61])
                                                  Pexp_ident "mtd" (typing/typemod.ml[2583,94181+58]..[2583,94181+61])
                                                "mtd_id" (typing/typemod.ml[2583,94181+62]..[2583,94181+68])
                                          ]
                                        expression (typing/typemod.ml[2584,94251+8]..[2584,94251+38])
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[2584,94251+8]..[2584,94251+24])
                                              Pexp_construct "Tstr_modtype" (typing/typemod.ml[2584,94251+8]..[2584,94251+20])
                                              Some
                                                expression (typing/typemod.ml[2584,94251+21]..[2584,94251+24])
                                                  Pexp_ident "mtd" (typing/typemod.ml[2584,94251+21]..[2584,94251+24])
                                            expression (typing/typemod.ml[2584,94251+26]..[2584,94251+30])
                                              Pexp_construct "::" (typing/typemod.ml[2584,94251+27]..[2584,94251+30]) ghost
                                              Some
                                                expression (typing/typemod.ml[2584,94251+27]..[2584,94251+30]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typemod.ml[2584,94251+27]..[2584,94251+29])
                                                      Pexp_ident "sg" (typing/typemod.ml[2584,94251+27]..[2584,94251+29])
                                                    expression (typing/typemod.ml[2584,94251+29]..[2584,94251+30]) ghost
                                                      Pexp_construct "[]" (typing/typemod.ml[2584,94251+29]..[2584,94251+30]) ghost
                                                      None
                                                  ]
                                            expression (typing/typemod.ml[2584,94251+32]..[2584,94251+38])
                                              Pexp_ident "newenv" (typing/typemod.ml[2584,94251+32]..[2584,94251+38])
                                          ]
                                  <case>
                                    pattern (typing/typemod.ml[2585,94290+6]..[2585,94290+19])
                                      Ppat_construct "Pstr_open" (typing/typemod.ml[2585,94290+6]..[2585,94290+15])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2585,94290+16]..[2585,94290+19])
                                          Ppat_var "sod" (typing/typemod.ml[2585,94290+16]..[2585,94290+19])
                                    expression (typing/typemod.ml[2586,94313+8]..[2589,94415+32])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[2586,94313+12]..[2586,94313+28])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[2586,94313+13]..[2586,94313+15])
                                                Ppat_var "od" (typing/typemod.ml[2586,94313+13]..[2586,94313+15])
                                              pattern (typing/typemod.ml[2586,94313+17]..[2586,94313+19])
                                                Ppat_var "sg" (typing/typemod.ml[2586,94313+17]..[2586,94313+19])
                                              pattern (typing/typemod.ml[2586,94313+21]..[2586,94313+27])
                                                Ppat_var "newenv" (typing/typemod.ml[2586,94313+21]..[2586,94313+27])
                                            ]
                                          expression (typing/typemod.ml[2587,94344+10]..[2587,94344+59])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2587,94344+10]..[2587,94344+24])
                                              Pexp_ident "type_open_decl" (typing/typemod.ml[2587,94344+10]..[2587,94344+24])
                                            [
                                              <arg>
                                              Labelled "toplevel"
                                                expression (typing/typemod.ml[2587,94344+26]..[2587,94344+34])
                                                  Pexp_ident "toplevel" (typing/typemod.ml[2587,94344+26]..[2587,94344+34])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2587,94344+35]..[2587,94344+45])
                                                  Pexp_ident "funct_body" (typing/typemod.ml[2587,94344+35]..[2587,94344+45])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2587,94344+46]..[2587,94344+51])
                                                  Pexp_ident "names" (typing/typemod.ml[2587,94344+46]..[2587,94344+51])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2587,94344+52]..[2587,94344+55])
                                                  Pexp_ident "env" (typing/typemod.ml[2587,94344+52]..[2587,94344+55])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2587,94344+56]..[2587,94344+59])
                                                  Pexp_ident "sod" (typing/typemod.ml[2587,94344+56]..[2587,94344+59])
                                            ]
                                      ]
                                      expression (typing/typemod.ml[2589,94415+8]..[2589,94415+32])
                                        Pexp_tuple
                                        [
                                          expression (typing/typemod.ml[2589,94415+8]..[2589,94415+20])
                                            Pexp_construct "Tstr_open" (typing/typemod.ml[2589,94415+8]..[2589,94415+17])
                                            Some
                                              expression (typing/typemod.ml[2589,94415+18]..[2589,94415+20])
                                                Pexp_ident "od" (typing/typemod.ml[2589,94415+18]..[2589,94415+20])
                                          expression (typing/typemod.ml[2589,94415+22]..[2589,94415+24])
                                            Pexp_ident "sg" (typing/typemod.ml[2589,94415+22]..[2589,94415+24])
                                          expression (typing/typemod.ml[2589,94415+26]..[2589,94415+32])
                                            Pexp_ident "newenv" (typing/typemod.ml[2589,94415+26]..[2589,94415+32])
                                        ]
                                  <case>
                                    pattern (typing/typemod.ml[2590,94448+6]..[2590,94448+19])
                                      Ppat_construct "Pstr_class" (typing/typemod.ml[2590,94448+6]..[2590,94448+16])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2590,94448+17]..[2590,94448+19])
                                          Ppat_var "cl" (typing/typemod.ml[2590,94448+17]..[2590,94448+19])
                                    expression (typing/typemod.ml[2591,94471+8]..[2613,95505+15])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[2591,94471+12]..[2591,94471+30])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[2591,94471+13]..[2591,94471+20])
                                                Ppat_var "classes" (typing/typemod.ml[2591,94471+13]..[2591,94471+20])
                                              pattern (typing/typemod.ml[2591,94471+22]..[2591,94471+29])
                                                Ppat_var "new_env" (typing/typemod.ml[2591,94471+22]..[2591,94471+29])
                                            ]
                                          expression (typing/typemod.ml[2591,94471+33]..[2591,94471+68])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2591,94471+33]..[2591,94471+61])
                                              Pexp_ident "Typeclass.class_declarations" (typing/typemod.ml[2591,94471+33]..[2591,94471+61])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2591,94471+62]..[2591,94471+65])
                                                  Pexp_ident "env" (typing/typemod.ml[2591,94471+62]..[2591,94471+65])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2591,94471+66]..[2591,94471+68])
                                                  Pexp_ident "cl" (typing/typemod.ml[2591,94471+66]..[2591,94471+68])
                                            ]
                                      ]
                                      expression (typing/typemod.ml[2592,94543+8]..[2613,95505+15])
                                        Pexp_sequence
                                        expression (typing/typemod.ml[2592,94543+8]..[2599,94916+17])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2592,94543+8]..[2592,94543+17])
                                            Pexp_ident "List.iter" (typing/typemod.ml[2592,94543+8]..[2592,94543+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2592,94543+18]..[2599,94916+9])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/typemod.ml[2592,94543+23]..[2592,94543+26])
                                                  Ppat_var "cls" (typing/typemod.ml[2592,94543+23]..[2592,94543+26])
                                                expression (typing/typemod.ml[2593,94573+10]..[2598,94847+68])
                                                  Pexp_open Fresh
                                                  module_expr (typing/typemod.ml[2593,94573+19]..[2593,94573+28])
                                                    Pmod_ident "Typeclass" (typing/typemod.ml[2593,94573+19]..[2593,94573+28])
                                                  expression (typing/typemod.ml[2594,94605+10]..[2598,94847+68])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typemod.ml[2594,94605+14]..[2594,94605+17])
                                                          Ppat_var "loc" (typing/typemod.ml[2594,94605+14]..[2594,94605+17])
                                                        expression (typing/typemod.ml[2594,94605+20]..[2594,94605+47])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[2594,94605+20]..[2594,94605+34])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[2594,94605+20]..[2594,94605+23])
                                                              Pexp_ident "cls" (typing/typemod.ml[2594,94605+20]..[2594,94605+23])
                                                            "cls_id_loc" (typing/typemod.ml[2594,94605+24]..[2594,94605+34])
                                                          "Location.loc" (typing/typemod.ml[2594,94605+35]..[2594,94605+47])
                                                    ]
                                                    expression (typing/typemod.ml[2595,94656+10]..[2598,94847+68])
                                                      Pexp_sequence
                                                      expression (typing/typemod.ml[2595,94656+10]..[2595,94656+58])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2595,94656+10]..[2595,94656+37])
                                                          Pexp_ident "Signature_names.check_class" (typing/typemod.ml[2595,94656+10]..[2595,94656+37])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2595,94656+38]..[2595,94656+43])
                                                              Pexp_ident "names" (typing/typemod.ml[2595,94656+38]..[2595,94656+43])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2595,94656+44]..[2595,94656+47])
                                                              Pexp_ident "loc" (typing/typemod.ml[2595,94656+44]..[2595,94656+47])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2595,94656+48]..[2595,94656+58])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[2595,94656+48]..[2595,94656+51])
                                                                Pexp_ident "cls" (typing/typemod.ml[2595,94656+48]..[2595,94656+51])
                                                              "cls_id" (typing/typemod.ml[2595,94656+52]..[2595,94656+58])
                                                        ]
                                                      expression (typing/typemod.ml[2596,94716+10]..[2598,94847+68])
                                                        Pexp_sequence
                                                        expression (typing/typemod.ml[2596,94716+10]..[2596,94716+66])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[2596,94716+10]..[2596,94716+42])
                                                            Pexp_ident "Signature_names.check_class_type" (typing/typemod.ml[2596,94716+10]..[2596,94716+42])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2596,94716+43]..[2596,94716+48])
                                                                Pexp_ident "names" (typing/typemod.ml[2596,94716+43]..[2596,94716+48])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2596,94716+49]..[2596,94716+52])
                                                                Pexp_ident "loc" (typing/typemod.ml[2596,94716+49]..[2596,94716+52])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2596,94716+53]..[2596,94716+66])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[2596,94716+53]..[2596,94716+56])
                                                                  Pexp_ident "cls" (typing/typemod.ml[2596,94716+53]..[2596,94716+56])
                                                                "cls_ty_id" (typing/typemod.ml[2596,94716+57]..[2596,94716+66])
                                                          ]
                                                        expression (typing/typemod.ml[2597,94784+10]..[2598,94847+68])
                                                          Pexp_sequence
                                                          expression (typing/typemod.ml[2597,94784+10]..[2597,94784+61])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[2597,94784+10]..[2597,94784+36])
                                                              Pexp_ident "Signature_names.check_type" (typing/typemod.ml[2597,94784+10]..[2597,94784+36])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2597,94784+37]..[2597,94784+42])
                                                                  Pexp_ident "names" (typing/typemod.ml[2597,94784+37]..[2597,94784+42])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2597,94784+43]..[2597,94784+46])
                                                                  Pexp_ident "loc" (typing/typemod.ml[2597,94784+43]..[2597,94784+46])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2597,94784+47]..[2597,94784+61])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[2597,94784+47]..[2597,94784+50])
                                                                    Pexp_ident "cls" (typing/typemod.ml[2597,94784+47]..[2597,94784+50])
                                                                  "cls_obj_id" (typing/typemod.ml[2597,94784+51]..[2597,94784+61])
                                                            ]
                                                          expression (typing/typemod.ml[2598,94847+10]..[2598,94847+67])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[2598,94847+10]..[2598,94847+36])
                                                              Pexp_ident "Signature_names.check_type" (typing/typemod.ml[2598,94847+10]..[2598,94847+36])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2598,94847+37]..[2598,94847+42])
                                                                  Pexp_ident "names" (typing/typemod.ml[2598,94847+37]..[2598,94847+42])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2598,94847+43]..[2598,94847+46])
                                                                  Pexp_ident "loc" (typing/typemod.ml[2598,94847+43]..[2598,94847+46])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2598,94847+47]..[2598,94847+67])
                                                                  Pexp_field
                                                                  expression (typing/typemod.ml[2598,94847+47]..[2598,94847+50])
                                                                    Pexp_ident "cls" (typing/typemod.ml[2598,94847+47]..[2598,94847+50])
                                                                  "cls_typesharp_id" (typing/typemod.ml[2598,94847+51]..[2598,94847+67])
                                                            ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2599,94916+10]..[2599,94916+17])
                                                Pexp_ident "classes" (typing/typemod.ml[2599,94916+10]..[2599,94916+17])
                                          ]
                                        expression (typing/typemod.ml[2600,94935+8]..[2613,95505+15])
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[2600,94935+8]..[2603,95026+56])
                                              Pexp_construct "Tstr_class" (typing/typemod.ml[2600,94935+8]..[2600,94935+18])
                                              Some
                                                expression (typing/typemod.ml[2601,94954+10]..[2603,95026+56])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2601,94954+11]..[2601,94954+19])
                                                    Pexp_ident "List.map" (typing/typemod.ml[2601,94954+11]..[2601,94954+19])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2601,94954+20]..[2603,95026+47])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (typing/typemod.ml[2601,94954+25]..[2601,94954+28])
                                                          Ppat_var "cls" (typing/typemod.ml[2601,94954+25]..[2601,94954+28])
                                                        expression (typing/typemod.ml[2602,94986+15]..[2603,95026+46])
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/typemod.ml[2602,94986+16]..[2602,94986+38])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[2602,94986+16]..[2602,94986+19])
                                                                Pexp_ident "cls" (typing/typemod.ml[2602,94986+16]..[2602,94986+19])
                                                              "Typeclass.cls_info" (typing/typemod.ml[2602,94986+20]..[2602,94986+38])
                                                            expression (typing/typemod.ml[2603,95026+16]..[2603,95026+45])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[2603,95026+16]..[2603,95026+19])
                                                                Pexp_ident "cls" (typing/typemod.ml[2603,95026+16]..[2603,95026+19])
                                                              "Typeclass.cls_pub_methods" (typing/typemod.ml[2603,95026+20]..[2603,95026+45])
                                                          ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2603,95026+48]..[2603,95026+55])
                                                        Pexp_ident "classes" (typing/typemod.ml[2603,95026+48]..[2603,95026+55])
                                                  ]
                                            expression (typing/typemod.ml[2604,95084+8]..[2612,95479+24])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2604,95084+8]..[2604,95084+20])
                                                Pexp_ident "List.flatten" (typing/typemod.ml[2604,95084+8]..[2604,95084+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2605,95105+10]..[2612,95479+24])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[2605,95105+11]..[2605,95105+18])
                                                      Pexp_ident "map_rec" (typing/typemod.ml[2605,95105+11]..[2605,95105+18])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2606,95124+12]..[2611,95403+75])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (typing/typemod.ml[2606,95124+17]..[2606,95124+19])
                                                            Ppat_var "rs" (typing/typemod.ml[2606,95124+17]..[2606,95124+19])
                                                          expression (typing/typemod.ml[2606,95124+20]..[2611,95403+74]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/typemod.ml[2606,95124+20]..[2606,95124+23])
                                                              Ppat_var "cls" (typing/typemod.ml[2606,95124+20]..[2606,95124+23])
                                                            expression (typing/typemod.ml[2607,95151+14]..[2611,95403+74])
                                                              Pexp_open Fresh
                                                              module_expr (typing/typemod.ml[2607,95151+23]..[2607,95151+32])
                                                                Pmod_ident "Typeclass" (typing/typemod.ml[2607,95151+23]..[2607,95151+32])
                                                              expression (typing/typemod.ml[2608,95187+14]..[2611,95403+74])
                                                                Pexp_construct "::" (typing/typemod.ml[2608,95187+15]..[2611,95403+74]) ghost
                                                                Some
                                                                  expression (typing/typemod.ml[2608,95187+15]..[2611,95403+74]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typemod.ml[2608,95187+15]..[2608,95187+64])
Pexp_construct "Sig_class" (typing/typemod.ml[2608,95187+15]..[2608,95187+24])
Some
  expression (typing/typemod.ml[2608,95187+24]..[2608,95187+64])
    Pexp_tuple
    [
      expression (typing/typemod.ml[2608,95187+25]..[2608,95187+35])
        Pexp_field
        expression (typing/typemod.ml[2608,95187+25]..[2608,95187+28])
          Pexp_ident "cls" (typing/typemod.ml[2608,95187+25]..[2608,95187+28])
        "cls_id" (typing/typemod.ml[2608,95187+29]..[2608,95187+35])
      expression (typing/typemod.ml[2608,95187+37]..[2608,95187+49])
        Pexp_field
        expression (typing/typemod.ml[2608,95187+37]..[2608,95187+40])
          Pexp_ident "cls" (typing/typemod.ml[2608,95187+37]..[2608,95187+40])
        "cls_decl" (typing/typemod.ml[2608,95187+41]..[2608,95187+49])
      expression (typing/typemod.ml[2608,95187+51]..[2608,95187+53])
        Pexp_ident "rs" (typing/typemod.ml[2608,95187+51]..[2608,95187+53])
      expression (typing/typemod.ml[2608,95187+55]..[2608,95187+63])
        Pexp_construct "Exported" (typing/typemod.ml[2608,95187+55]..[2608,95187+63])
        None
    ]
                                                                      expression (typing/typemod.ml[2609,95253+15]..[2611,95403+74]) ghost
Pexp_construct "::" (typing/typemod.ml[2609,95253+15]..[2611,95403+74]) ghost
Some
  expression (typing/typemod.ml[2609,95253+15]..[2611,95403+74]) ghost
    Pexp_tuple
    [
      expression (typing/typemod.ml[2609,95253+15]..[2609,95253+75])
        Pexp_construct "Sig_class_type" (typing/typemod.ml[2609,95253+15]..[2609,95253+29])
        Some
          expression (typing/typemod.ml[2609,95253+29]..[2609,95253+75])
            Pexp_tuple
            [
              expression (typing/typemod.ml[2609,95253+30]..[2609,95253+43])
                Pexp_field
                expression (typing/typemod.ml[2609,95253+30]..[2609,95253+33])
                  Pexp_ident "cls" (typing/typemod.ml[2609,95253+30]..[2609,95253+33])
                "cls_ty_id" (typing/typemod.ml[2609,95253+34]..[2609,95253+43])
              expression (typing/typemod.ml[2609,95253+45]..[2609,95253+60])
                Pexp_field
                expression (typing/typemod.ml[2609,95253+45]..[2609,95253+48])
                  Pexp_ident "cls" (typing/typemod.ml[2609,95253+45]..[2609,95253+48])
                "cls_ty_decl" (typing/typemod.ml[2609,95253+49]..[2609,95253+60])
              expression (typing/typemod.ml[2609,95253+62]..[2609,95253+64])
                Pexp_ident "rs" (typing/typemod.ml[2609,95253+62]..[2609,95253+64])
              expression (typing/typemod.ml[2609,95253+66]..[2609,95253+74])
                Pexp_construct "Exported" (typing/typemod.ml[2609,95253+66]..[2609,95253+74])
                None
            ]
      expression (typing/typemod.ml[2610,95330+15]..[2611,95403+74]) ghost
        Pexp_construct "::" (typing/typemod.ml[2610,95330+15]..[2611,95403+74]) ghost
        Some
          expression (typing/typemod.ml[2610,95330+15]..[2611,95403+74]) ghost
            Pexp_tuple
            [
              expression (typing/typemod.ml[2610,95330+15]..[2610,95330+71])
                Pexp_construct "Sig_type" (typing/typemod.ml[2610,95330+15]..[2610,95330+23])
                Some
                  expression (typing/typemod.ml[2610,95330+23]..[2610,95330+71])
                    Pexp_tuple
                    [
                      expression (typing/typemod.ml[2610,95330+24]..[2610,95330+38])
                        Pexp_field
                        expression (typing/typemod.ml[2610,95330+24]..[2610,95330+27])
                          Pexp_ident "cls" (typing/typemod.ml[2610,95330+24]..[2610,95330+27])
                        "cls_obj_id" (typing/typemod.ml[2610,95330+28]..[2610,95330+38])
                      expression (typing/typemod.ml[2610,95330+40]..[2610,95330+56])
                        Pexp_field
                        expression (typing/typemod.ml[2610,95330+40]..[2610,95330+43])
                          Pexp_ident "cls" (typing/typemod.ml[2610,95330+40]..[2610,95330+43])
                        "cls_obj_abbr" (typing/typemod.ml[2610,95330+44]..[2610,95330+56])
                      expression (typing/typemod.ml[2610,95330+58]..[2610,95330+60])
                        Pexp_ident "rs" (typing/typemod.ml[2610,95330+58]..[2610,95330+60])
                      expression (typing/typemod.ml[2610,95330+62]..[2610,95330+70])
                        Pexp_construct "Exported" (typing/typemod.ml[2610,95330+62]..[2610,95330+70])
                        None
                    ]
              expression (typing/typemod.ml[2611,95403+15]..[2611,95403+74]) ghost
                Pexp_construct "::" (typing/typemod.ml[2611,95403+15]..[2611,95403+74]) ghost
                Some
                  expression (typing/typemod.ml[2611,95403+15]..[2611,95403+74]) ghost
                    Pexp_tuple
                    [
                      expression (typing/typemod.ml[2611,95403+15]..[2611,95403+73])
                        Pexp_construct "Sig_type" (typing/typemod.ml[2611,95403+15]..[2611,95403+23])
                        Some
                          expression (typing/typemod.ml[2611,95403+23]..[2611,95403+73])
                            Pexp_tuple
                            [
                              expression (typing/typemod.ml[2611,95403+24]..[2611,95403+44])
                                Pexp_field
                                expression (typing/typemod.ml[2611,95403+24]..[2611,95403+27])
                                  Pexp_ident "cls" (typing/typemod.ml[2611,95403+24]..[2611,95403+27])
                                "cls_typesharp_id" (typing/typemod.ml[2611,95403+28]..[2611,95403+44])
                              expression (typing/typemod.ml[2611,95403+46]..[2611,95403+58])
                                Pexp_field
                                expression (typing/typemod.ml[2611,95403+46]..[2611,95403+49])
                                  Pexp_ident "cls" (typing/typemod.ml[2611,95403+46]..[2611,95403+49])
                                "cls_abbr" (typing/typemod.ml[2611,95403+50]..[2611,95403+58])
                              expression (typing/typemod.ml[2611,95403+60]..[2611,95403+62])
                                Pexp_ident "rs" (typing/typemod.ml[2611,95403+60]..[2611,95403+62])
                              expression (typing/typemod.ml[2611,95403+64]..[2611,95403+72])
                                Pexp_construct "Exported" (typing/typemod.ml[2611,95403+64]..[2611,95403+72])
                                None
                            ]
                      expression (typing/typemod.ml[2611,95403+73]..[2611,95403+74]) ghost
                        Pexp_construct "[]" (typing/typemod.ml[2611,95403+73]..[2611,95403+74]) ghost
                        None
                    ]
            ]
    ]
                                                                    ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2612,95479+13]..[2612,95479+20])
                                                          Pexp_ident "classes" (typing/typemod.ml[2612,95479+13]..[2612,95479+20])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2612,95479+21]..[2612,95479+23])
                                                          Pexp_construct "[]" (typing/typemod.ml[2612,95479+21]..[2612,95479+23])
                                                          None
                                                    ]
                                              ]
                                            expression (typing/typemod.ml[2613,95505+8]..[2613,95505+15])
                                              Pexp_ident "new_env" (typing/typemod.ml[2613,95505+8]..[2613,95505+15])
                                          ]
                                  <case>
                                    pattern (typing/typemod.ml[2614,95521+6]..[2614,95521+24])
                                      Ppat_construct "Pstr_class_type" (typing/typemod.ml[2614,95521+6]..[2614,95521+21])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2614,95521+22]..[2614,95521+24])
                                          Ppat_var "cl" (typing/typemod.ml[2614,95521+22]..[2614,95521+24])
                                    expression (typing/typemod.ml[2615,95549+8]..[2639,96621+15])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[2615,95549+12]..[2615,95549+30])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[2615,95549+13]..[2615,95549+20])
                                                Ppat_var "classes" (typing/typemod.ml[2615,95549+13]..[2615,95549+20])
                                              pattern (typing/typemod.ml[2615,95549+22]..[2615,95549+29])
                                                Ppat_var "new_env" (typing/typemod.ml[2615,95549+22]..[2615,95549+29])
                                            ]
                                          expression (typing/typemod.ml[2615,95549+33]..[2615,95549+73])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2615,95549+33]..[2615,95549+66])
                                              Pexp_ident "Typeclass.class_type_declarations" (typing/typemod.ml[2615,95549+33]..[2615,95549+66])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2615,95549+67]..[2615,95549+70])
                                                  Pexp_ident "env" (typing/typemod.ml[2615,95549+67]..[2615,95549+70])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2615,95549+71]..[2615,95549+73])
                                                  Pexp_ident "cl" (typing/typemod.ml[2615,95549+71]..[2615,95549+73])
                                            ]
                                      ]
                                      expression (typing/typemod.ml[2616,95626+8]..[2639,96621+15])
                                        Pexp_sequence
                                        expression (typing/typemod.ml[2616,95626+8]..[2622,95952+17])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2616,95626+8]..[2616,95626+17])
                                            Pexp_ident "List.iter" (typing/typemod.ml[2616,95626+8]..[2616,95626+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2616,95626+18]..[2622,95952+9])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/typemod.ml[2616,95626+23]..[2616,95626+27])
                                                  Ppat_var "decl" (typing/typemod.ml[2616,95626+23]..[2616,95626+27])
                                                expression (typing/typemod.ml[2617,95657+10]..[2621,95880+71])
                                                  Pexp_open Fresh
                                                  module_expr (typing/typemod.ml[2617,95657+19]..[2617,95657+28])
                                                    Pmod_ident "Typeclass" (typing/typemod.ml[2617,95657+19]..[2617,95657+28])
                                                  expression (typing/typemod.ml[2618,95689+10]..[2621,95880+71])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typemod.ml[2618,95689+14]..[2618,95689+17])
                                                          Ppat_var "loc" (typing/typemod.ml[2618,95689+14]..[2618,95689+17])
                                                        expression (typing/typemod.ml[2618,95689+20]..[2618,95689+50])
                                                          Pexp_field
                                                          expression (typing/typemod.ml[2618,95689+20]..[2618,95689+37])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[2618,95689+20]..[2618,95689+24])
                                                              Pexp_ident "decl" (typing/typemod.ml[2618,95689+20]..[2618,95689+24])
                                                            "clsty_id_loc" (typing/typemod.ml[2618,95689+25]..[2618,95689+37])
                                                          "Location.loc" (typing/typemod.ml[2618,95689+38]..[2618,95689+50])
                                                    ]
                                                    expression (typing/typemod.ml[2619,95743+10]..[2621,95880+71])
                                                      Pexp_sequence
                                                      expression (typing/typemod.ml[2619,95743+10]..[2619,95743+69])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2619,95743+10]..[2619,95743+42])
                                                          Pexp_ident "Signature_names.check_class_type" (typing/typemod.ml[2619,95743+10]..[2619,95743+42])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2619,95743+43]..[2619,95743+48])
                                                              Pexp_ident "names" (typing/typemod.ml[2619,95743+43]..[2619,95743+48])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2619,95743+49]..[2619,95743+52])
                                                              Pexp_ident "loc" (typing/typemod.ml[2619,95743+49]..[2619,95743+52])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2619,95743+53]..[2619,95743+69])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[2619,95743+53]..[2619,95743+57])
                                                                Pexp_ident "decl" (typing/typemod.ml[2619,95743+53]..[2619,95743+57])
                                                              "clsty_ty_id" (typing/typemod.ml[2619,95743+58]..[2619,95743+69])
                                                        ]
                                                      expression (typing/typemod.ml[2620,95814+10]..[2621,95880+71])
                                                        Pexp_sequence
                                                        expression (typing/typemod.ml[2620,95814+10]..[2620,95814+64])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[2620,95814+10]..[2620,95814+36])
                                                            Pexp_ident "Signature_names.check_type" (typing/typemod.ml[2620,95814+10]..[2620,95814+36])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2620,95814+37]..[2620,95814+42])
                                                                Pexp_ident "names" (typing/typemod.ml[2620,95814+37]..[2620,95814+42])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2620,95814+43]..[2620,95814+46])
                                                                Pexp_ident "loc" (typing/typemod.ml[2620,95814+43]..[2620,95814+46])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2620,95814+47]..[2620,95814+64])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[2620,95814+47]..[2620,95814+51])
                                                                  Pexp_ident "decl" (typing/typemod.ml[2620,95814+47]..[2620,95814+51])
                                                                "clsty_obj_id" (typing/typemod.ml[2620,95814+52]..[2620,95814+64])
                                                          ]
                                                        expression (typing/typemod.ml[2621,95880+10]..[2621,95880+70])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[2621,95880+10]..[2621,95880+36])
                                                            Pexp_ident "Signature_names.check_type" (typing/typemod.ml[2621,95880+10]..[2621,95880+36])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2621,95880+37]..[2621,95880+42])
                                                                Pexp_ident "names" (typing/typemod.ml[2621,95880+37]..[2621,95880+42])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2621,95880+43]..[2621,95880+46])
                                                                Pexp_ident "loc" (typing/typemod.ml[2621,95880+43]..[2621,95880+46])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2621,95880+47]..[2621,95880+70])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[2621,95880+47]..[2621,95880+51])
                                                                  Pexp_ident "decl" (typing/typemod.ml[2621,95880+47]..[2621,95880+51])
                                                                "clsty_typesharp_id" (typing/typemod.ml[2621,95880+52]..[2621,95880+70])
                                                          ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2622,95952+10]..[2622,95952+17])
                                                Pexp_ident "classes" (typing/typemod.ml[2622,95952+10]..[2622,95952+17])
                                          ]
                                        expression (typing/typemod.ml[2623,95971+8]..[2639,96621+15])
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[2623,95971+8]..[2627,96111+50])
                                              Pexp_construct "Tstr_class_type" (typing/typemod.ml[2623,95971+8]..[2623,95971+23])
                                              Some
                                                expression (typing/typemod.ml[2624,95995+10]..[2627,96111+50])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2624,95995+11]..[2624,95995+19])
                                                    Pexp_ident "List.map" (typing/typemod.ml[2624,95995+11]..[2624,95995+19])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2624,95995+20]..[2627,96111+41])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (typing/typemod.ml[2624,95995+25]..[2624,95995+27])
                                                          Ppat_var "cl" (typing/typemod.ml[2624,95995+25]..[2624,95995+27])
                                                        expression (typing/typemod.ml[2625,96026+15]..[2627,96111+40])
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/typemod.ml[2625,96026+16]..[2625,96026+40])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[2625,96026+16]..[2625,96026+18])
                                                                Pexp_ident "cl" (typing/typemod.ml[2625,96026+16]..[2625,96026+18])
                                                              "Typeclass.clsty_ty_id" (typing/typemod.ml[2625,96026+19]..[2625,96026+40])
                                                            expression (typing/typemod.ml[2626,96068+16]..[2626,96068+41])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[2626,96068+16]..[2626,96068+18])
                                                                Pexp_ident "cl" (typing/typemod.ml[2626,96068+16]..[2626,96068+18])
                                                              "Typeclass.clsty_id_loc" (typing/typemod.ml[2626,96068+19]..[2626,96068+41])
                                                            expression (typing/typemod.ml[2627,96111+16]..[2627,96111+39])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[2627,96111+16]..[2627,96111+18])
                                                                Pexp_ident "cl" (typing/typemod.ml[2627,96111+16]..[2627,96111+18])
                                                              "Typeclass.clsty_info" (typing/typemod.ml[2627,96111+19]..[2627,96111+39])
                                                          ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2627,96111+42]..[2627,96111+49])
                                                        Pexp_ident "classes" (typing/typemod.ml[2627,96111+42]..[2627,96111+49])
                                                  ]
                                            expression (typing/typemod.ml[2628,96163+8]..[2638,96595+24])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2628,96163+8]..[2628,96163+20])
                                                Pexp_ident "List.flatten" (typing/typemod.ml[2628,96163+8]..[2628,96163+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2629,96184+10]..[2638,96595+24])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[2629,96184+11]..[2629,96184+18])
                                                      Pexp_ident "map_rec" (typing/typemod.ml[2629,96184+11]..[2629,96184+18])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2630,96203+13]..[2637,96576+18])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (typing/typemod.ml[2630,96203+18]..[2630,96203+20])
                                                            Ppat_var "rs" (typing/typemod.ml[2630,96203+18]..[2630,96203+20])
                                                          expression (typing/typemod.ml[2630,96203+21]..[2637,96576+17]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/typemod.ml[2630,96203+21]..[2630,96203+25])
                                                              Ppat_var "decl" (typing/typemod.ml[2630,96203+21]..[2630,96203+25])
                                                            expression (typing/typemod.ml[2631,96232+16]..[2637,96576+17])
                                                              Pexp_open Fresh
                                                              module_expr (typing/typemod.ml[2631,96232+25]..[2631,96232+34])
                                                                Pmod_ident "Typeclass" (typing/typemod.ml[2631,96232+25]..[2631,96232+34])
                                                              expression (typing/typemod.ml[2632,96270+16]..[2637,96576+17])
                                                                Pexp_construct "::" (typing/typemod.ml[2632,96270+17]..[2637,96576+17]) ghost
                                                                Some
                                                                  expression (typing/typemod.ml[2632,96270+17]..[2637,96576+17]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typemod.ml[2632,96270+17]..[2633,96344+41])
Pexp_construct "Sig_class_type" (typing/typemod.ml[2632,96270+17]..[2632,96270+31])
Some
  expression (typing/typemod.ml[2632,96270+31]..[2633,96344+41])
    Pexp_tuple
    [
      expression (typing/typemod.ml[2632,96270+32]..[2632,96270+48])
        Pexp_field
        expression (typing/typemod.ml[2632,96270+32]..[2632,96270+36])
          Pexp_ident "decl" (typing/typemod.ml[2632,96270+32]..[2632,96270+36])
        "clsty_ty_id" (typing/typemod.ml[2632,96270+37]..[2632,96270+48])
      expression (typing/typemod.ml[2632,96270+50]..[2632,96270+68])
        Pexp_field
        expression (typing/typemod.ml[2632,96270+50]..[2632,96270+54])
          Pexp_ident "decl" (typing/typemod.ml[2632,96270+50]..[2632,96270+54])
        "clsty_ty_decl" (typing/typemod.ml[2632,96270+55]..[2632,96270+68])
      expression (typing/typemod.ml[2632,96270+70]..[2632,96270+72])
        Pexp_ident "rs" (typing/typemod.ml[2632,96270+70]..[2632,96270+72])
      expression (typing/typemod.ml[2633,96344+32]..[2633,96344+40])
        Pexp_construct "Exported" (typing/typemod.ml[2633,96344+32]..[2633,96344+40])
        None
    ]
                                                                      expression (typing/typemod.ml[2634,96387+17]..[2637,96576+17]) ghost
Pexp_construct "::" (typing/typemod.ml[2634,96387+17]..[2637,96576+17]) ghost
Some
  expression (typing/typemod.ml[2634,96387+17]..[2637,96576+17]) ghost
    Pexp_tuple
    [
      expression (typing/typemod.ml[2634,96387+17]..[2634,96387+79])
        Pexp_construct "Sig_type" (typing/typemod.ml[2634,96387+17]..[2634,96387+25])
        Some
          expression (typing/typemod.ml[2634,96387+25]..[2634,96387+79])
            Pexp_tuple
            [
              expression (typing/typemod.ml[2634,96387+26]..[2634,96387+43])
                Pexp_field
                expression (typing/typemod.ml[2634,96387+26]..[2634,96387+30])
                  Pexp_ident "decl" (typing/typemod.ml[2634,96387+26]..[2634,96387+30])
                "clsty_obj_id" (typing/typemod.ml[2634,96387+31]..[2634,96387+43])
              expression (typing/typemod.ml[2634,96387+45]..[2634,96387+64])
                Pexp_field
                expression (typing/typemod.ml[2634,96387+45]..[2634,96387+49])
                  Pexp_ident "decl" (typing/typemod.ml[2634,96387+45]..[2634,96387+49])
                "clsty_obj_abbr" (typing/typemod.ml[2634,96387+50]..[2634,96387+64])
              expression (typing/typemod.ml[2634,96387+66]..[2634,96387+68])
                Pexp_ident "rs" (typing/typemod.ml[2634,96387+66]..[2634,96387+68])
              expression (typing/typemod.ml[2634,96387+70]..[2634,96387+78])
                Pexp_construct "Exported" (typing/typemod.ml[2634,96387+70]..[2634,96387+78])
                None
            ]
      expression (typing/typemod.ml[2635,96468+17]..[2637,96576+17]) ghost
        Pexp_construct "::" (typing/typemod.ml[2635,96468+17]..[2637,96576+17]) ghost
        Some
          expression (typing/typemod.ml[2635,96468+17]..[2637,96576+17]) ghost
            Pexp_tuple
            [
              expression (typing/typemod.ml[2635,96468+17]..[2636,96540+35])
                Pexp_construct "Sig_type" (typing/typemod.ml[2635,96468+17]..[2635,96468+25])
                Some
                  expression (typing/typemod.ml[2635,96468+25]..[2636,96540+35])
                    Pexp_tuple
                    [
                      expression (typing/typemod.ml[2635,96468+26]..[2635,96468+49])
                        Pexp_field
                        expression (typing/typemod.ml[2635,96468+26]..[2635,96468+30])
                          Pexp_ident "decl" (typing/typemod.ml[2635,96468+26]..[2635,96468+30])
                        "clsty_typesharp_id" (typing/typemod.ml[2635,96468+31]..[2635,96468+49])
                      expression (typing/typemod.ml[2635,96468+51]..[2635,96468+66])
                        Pexp_field
                        expression (typing/typemod.ml[2635,96468+51]..[2635,96468+55])
                          Pexp_ident "decl" (typing/typemod.ml[2635,96468+51]..[2635,96468+55])
                        "clsty_abbr" (typing/typemod.ml[2635,96468+56]..[2635,96468+66])
                      expression (typing/typemod.ml[2635,96468+68]..[2635,96468+70])
                        Pexp_ident "rs" (typing/typemod.ml[2635,96468+68]..[2635,96468+70])
                      expression (typing/typemod.ml[2636,96540+26]..[2636,96540+34])
                        Pexp_construct "Exported" (typing/typemod.ml[2636,96540+26]..[2636,96540+34])
                        None
                    ]
              expression (typing/typemod.ml[2637,96576+16]..[2637,96576+17]) ghost
                Pexp_construct "[]" (typing/typemod.ml[2637,96576+16]..[2637,96576+17]) ghost
                None
            ]
    ]
                                                                    ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2638,96595+13]..[2638,96595+20])
                                                          Pexp_ident "classes" (typing/typemod.ml[2638,96595+13]..[2638,96595+20])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2638,96595+21]..[2638,96595+23])
                                                          Pexp_construct "[]" (typing/typemod.ml[2638,96595+21]..[2638,96595+23])
                                                          None
                                                    ]
                                              ]
                                            expression (typing/typemod.ml[2639,96621+8]..[2639,96621+15])
                                              Pexp_ident "new_env" (typing/typemod.ml[2639,96621+8]..[2639,96621+15])
                                          ]
                                  <case>
                                    pattern (typing/typemod.ml[2640,96637+6]..[2640,96637+24])
                                      Ppat_construct "Pstr_include" (typing/typemod.ml[2640,96637+6]..[2640,96637+18])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2640,96637+19]..[2640,96637+24])
                                          Ppat_var "sincl" (typing/typemod.ml[2640,96637+19]..[2640,96637+24])
                                    expression (typing/typemod.ml[2641,96665+8]..[2658,97383+38])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[2641,96665+12]..[2641,96665+17])
                                            Ppat_var "smodl" (typing/typemod.ml[2641,96665+12]..[2641,96665+17])
                                          expression (typing/typemod.ml[2641,96665+20]..[2641,96665+35])
                                            Pexp_field
                                            expression (typing/typemod.ml[2641,96665+20]..[2641,96665+25])
                                              Pexp_ident "sincl" (typing/typemod.ml[2641,96665+20]..[2641,96665+25])
                                            "pincl_mod" (typing/typemod.ml[2641,96665+26]..[2641,96665+35])
                                      ]
                                      expression (typing/typemod.ml[2642,96704+8]..[2658,97383+38])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[2642,96704+12]..[2642,96704+16])
                                              Ppat_var "modl" (typing/typemod.ml[2642,96704+12]..[2642,96704+16])
                                            expression (typing/typemod.ml[2643,96723+10]..[2644,96789+66])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2643,96723+10]..[2643,96723+42])
                                                Pexp_ident "Builtin_attributes.warning_scope" (typing/typemod.ml[2643,96723+10]..[2643,96723+42])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2643,96723+43]..[2643,96723+65])
                                                    Pexp_field
                                                    expression (typing/typemod.ml[2643,96723+43]..[2643,96723+48])
                                                      Pexp_ident "sincl" (typing/typemod.ml[2643,96723+43]..[2643,96723+48])
                                                    "pincl_attributes" (typing/typemod.ml[2643,96723+49]..[2643,96723+65])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2644,96789+12]..[2644,96789+66])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (typing/typemod.ml[2644,96789+17]..[2644,96789+19])
                                                      Ppat_construct "()" (typing/typemod.ml[2644,96789+17]..[2644,96789+19])
                                                      None
                                                    expression (typing/typemod.ml[2644,96789+23]..[2644,96789+65])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[2644,96789+23]..[2644,96789+34])
                                                        Pexp_ident "type_module" (typing/typemod.ml[2644,96789+23]..[2644,96789+34])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2644,96789+35]..[2644,96789+39])
                                                            Pexp_construct "true" (typing/typemod.ml[2644,96789+35]..[2644,96789+39])
                                                            None
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2644,96789+40]..[2644,96789+50])
                                                            Pexp_ident "funct_body" (typing/typemod.ml[2644,96789+40]..[2644,96789+50])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2644,96789+51]..[2644,96789+55])
                                                            Pexp_construct "None" (typing/typemod.ml[2644,96789+51]..[2644,96789+55])
                                                            None
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2644,96789+56]..[2644,96789+59])
                                                            Pexp_ident "env" (typing/typemod.ml[2644,96789+56]..[2644,96789+59])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2644,96789+60]..[2644,96789+65])
                                                            Pexp_ident "smodl" (typing/typemod.ml[2644,96789+60]..[2644,96789+65])
                                                      ]
                                              ]
                                        ]
                                        expression (typing/typemod.ml[2646,96867+8]..[2658,97383+38])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[2646,96867+12]..[2646,96867+17])
                                                Ppat_var "scope" (typing/typemod.ml[2646,96867+12]..[2646,96867+17])
                                              expression (typing/typemod.ml[2646,96867+20]..[2646,96867+41])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2646,96867+20]..[2646,96867+38])
                                                  Pexp_ident "Ctype.create_scope" (typing/typemod.ml[2646,96867+20]..[2646,96867+38])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2646,96867+39]..[2646,96867+41])
                                                      Pexp_construct "()" (typing/typemod.ml[2646,96867+39]..[2646,96867+41])
                                                      None
                                                ]
                                          ]
                                          expression (typing/typemod.ml[2648,96990+8]..[2658,97383+38])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[2648,96990+12]..[2648,96990+23])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typemod.ml[2648,96990+12]..[2648,96990+14])
                                                      Ppat_var "sg" (typing/typemod.ml[2648,96990+12]..[2648,96990+14])
                                                    pattern (typing/typemod.ml[2648,96990+16]..[2648,96990+23])
                                                      Ppat_var "new_env" (typing/typemod.ml[2648,96990+16]..[2648,96990+23])
                                                  ]
                                                expression (typing/typemod.ml[2648,96990+26]..[2649,97043+67])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2648,96990+26]..[2648,96990+45])
                                                    Pexp_ident "Env.enter_signature" (typing/typemod.ml[2648,96990+26]..[2648,96990+45])
                                                  [
                                                    <arg>
                                                    Labelled "scope"
                                                      expression (typing/typemod.ml[2648,96990+47]..[2648,96990+52])
                                                        Pexp_ident "scope" (typing/typemod.ml[2648,96990+47]..[2648,96990+52])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2649,97043+12]..[2649,97043+63])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2649,97043+13]..[2649,97043+29])
                                                          Pexp_ident "extract_sig_open" (typing/typemod.ml[2649,97043+13]..[2649,97043+29])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2649,97043+30]..[2649,97043+33])
                                                              Pexp_ident "env" (typing/typemod.ml[2649,97043+30]..[2649,97043+33])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2649,97043+34]..[2649,97043+48])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[2649,97043+34]..[2649,97043+39])
                                                                Pexp_ident "smodl" (typing/typemod.ml[2649,97043+34]..[2649,97043+39])
                                                              "pmod_loc" (typing/typemod.ml[2649,97043+40]..[2649,97043+48])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2649,97043+49]..[2649,97043+62])
                                                              Pexp_field
                                                              expression (typing/typemod.ml[2649,97043+49]..[2649,97043+53])
                                                                Pexp_ident "modl" (typing/typemod.ml[2649,97043+49]..[2649,97043+53])
                                                              "mod_type" (typing/typemod.ml[2649,97043+54]..[2649,97043+62])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2649,97043+64]..[2649,97043+67])
                                                        Pexp_ident "env" (typing/typemod.ml[2649,97043+64]..[2649,97043+67])
                                                  ]
                                            ]
                                            expression (typing/typemod.ml[2650,97114+8]..[2658,97383+38])
                                              Pexp_sequence
                                              expression (typing/typemod.ml[2650,97114+8]..[2650,97114+74])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2650,97114+8]..[2650,97114+28])
                                                  Pexp_ident "Signature_group.iter" (typing/typemod.ml[2650,97114+8]..[2650,97114+28])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2650,97114+29]..[2650,97114+71])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[2650,97114+30]..[2650,97114+60])
                                                        Pexp_ident "Signature_names.check_sig_item" (typing/typemod.ml[2650,97114+30]..[2650,97114+60])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2650,97114+61]..[2650,97114+66])
                                                            Pexp_ident "names" (typing/typemod.ml[2650,97114+61]..[2650,97114+66])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2650,97114+67]..[2650,97114+70])
                                                            Pexp_ident "loc" (typing/typemod.ml[2650,97114+67]..[2650,97114+70])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2650,97114+72]..[2650,97114+74])
                                                      Pexp_ident "sg" (typing/typemod.ml[2650,97114+72]..[2650,97114+74])
                                                ]
                                              expression (typing/typemod.ml[2651,97190+8]..[2658,97383+38])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typemod.ml[2651,97190+12]..[2651,97190+16])
                                                      Ppat_var "incl" (typing/typemod.ml[2651,97190+12]..[2651,97190+16])
                                                    expression (typing/typemod.ml[2652,97209+10]..[2656,97360+11])
                                                      Pexp_record
                                                      [
                                                        "incl_mod" (typing/typemod.ml[2652,97209+12]..[2652,97209+20])
                                                          expression (typing/typemod.ml[2652,97209+23]..[2652,97209+27])
                                                            Pexp_ident "modl" (typing/typemod.ml[2652,97209+23]..[2652,97209+27])
                                                        "incl_type" (typing/typemod.ml[2653,97238+12]..[2653,97238+21])
                                                          expression (typing/typemod.ml[2653,97238+24]..[2653,97238+26])
                                                            Pexp_ident "sg" (typing/typemod.ml[2653,97238+24]..[2653,97238+26])
                                                        "incl_attributes" (typing/typemod.ml[2654,97266+12]..[2654,97266+27])
                                                          expression (typing/typemod.ml[2654,97266+30]..[2654,97266+52])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[2654,97266+30]..[2654,97266+35])
                                                              Pexp_ident "sincl" (typing/typemod.ml[2654,97266+30]..[2654,97266+35])
                                                            "pincl_attributes" (typing/typemod.ml[2654,97266+36]..[2654,97266+52])
                                                        "incl_loc" (typing/typemod.ml[2655,97320+12]..[2655,97320+20])
                                                          expression (typing/typemod.ml[2655,97320+23]..[2655,97320+38])
                                                            Pexp_field
                                                            expression (typing/typemod.ml[2655,97320+23]..[2655,97320+28])
                                                              Pexp_ident "sincl" (typing/typemod.ml[2655,97320+23]..[2655,97320+28])
                                                            "pincl_loc" (typing/typemod.ml[2655,97320+29]..[2655,97320+38])
                                                      ]
                                                      None
                                                ]
                                                expression (typing/typemod.ml[2658,97383+8]..[2658,97383+38])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typemod.ml[2658,97383+8]..[2658,97383+25])
                                                      Pexp_construct "Tstr_include" (typing/typemod.ml[2658,97383+8]..[2658,97383+20])
                                                      Some
                                                        expression (typing/typemod.ml[2658,97383+21]..[2658,97383+25])
                                                          Pexp_ident "incl" (typing/typemod.ml[2658,97383+21]..[2658,97383+25])
                                                    expression (typing/typemod.ml[2658,97383+27]..[2658,97383+29])
                                                      Pexp_ident "sg" (typing/typemod.ml[2658,97383+27]..[2658,97383+29])
                                                    expression (typing/typemod.ml[2658,97383+31]..[2658,97383+38])
                                                      Pexp_ident "new_env" (typing/typemod.ml[2658,97383+31]..[2658,97383+38])
                                                  ]
                                  <case>
                                    pattern (typing/typemod.ml[2659,97422+6]..[2659,97422+34])
                                      Ppat_construct "Pstr_extension" (typing/typemod.ml[2659,97422+6]..[2659,97422+20])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2659,97422+21]..[2659,97422+34])
                                          Ppat_tuple
                                          [
                                            pattern (typing/typemod.ml[2659,97422+22]..[2659,97422+25])
                                              Ppat_var "ext" (typing/typemod.ml[2659,97422+22]..[2659,97422+25])
                                            pattern (typing/typemod.ml[2659,97422+27]..[2659,97422+33])
                                              Ppat_var "_attrs" (typing/typemod.ml[2659,97422+27]..[2659,97422+33])
                                          ]
                                    expression (typing/typemod.ml[2660,97460+8]..[2660,97460+73])
                                      Pexp_apply
                                      expression (typing/typemod.ml[2660,97460+8]..[2660,97460+13])
                                        Pexp_ident "raise" (typing/typemod.ml[2660,97460+8]..[2660,97460+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2660,97460+14]..[2660,97460+73])
                                            Pexp_construct "Error_forward" (typing/typemod.ml[2660,97460+15]..[2660,97460+28])
                                            Some
                                              expression (typing/typemod.ml[2660,97460+29]..[2660,97460+72])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2660,97460+30]..[2660,97460+67])
                                                  Pexp_ident "Builtin_attributes.error_of_extension" (typing/typemod.ml[2660,97460+30]..[2660,97460+67])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2660,97460+68]..[2660,97460+71])
                                                      Pexp_ident "ext" (typing/typemod.ml[2660,97460+68]..[2660,97460+71])
                                                ]
                                      ]
                                  <case>
                                    pattern (typing/typemod.ml[2661,97534+6]..[2661,97534+22])
                                      Ppat_construct "Pstr_attribute" (typing/typemod.ml[2661,97534+6]..[2661,97534+20])
                                      Some
                                        []
                                        pattern (typing/typemod.ml[2661,97534+21]..[2661,97534+22])
                                          Ppat_var "x" (typing/typemod.ml[2661,97534+21]..[2661,97534+22])
                                    expression (typing/typemod.ml[2662,97560+8]..[2663,97608+33])
                                      Pexp_sequence
                                      expression (typing/typemod.ml[2662,97560+8]..[2662,97560+46])
                                        Pexp_apply
                                        expression (typing/typemod.ml[2662,97560+8]..[2662,97560+44])
                                          Pexp_ident "Builtin_attributes.warning_attribute" (typing/typemod.ml[2662,97560+8]..[2662,97560+44])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[2662,97560+45]..[2662,97560+46])
                                              Pexp_ident "x" (typing/typemod.ml[2662,97560+45]..[2662,97560+46])
                                        ]
                                      expression (typing/typemod.ml[2663,97608+8]..[2663,97608+33])
                                        Pexp_tuple
                                        [
                                          expression (typing/typemod.ml[2663,97608+8]..[2663,97608+24])
                                            Pexp_construct "Tstr_attribute" (typing/typemod.ml[2663,97608+8]..[2663,97608+22])
                                            Some
                                              expression (typing/typemod.ml[2663,97608+23]..[2663,97608+24])
                                                Pexp_ident "x" (typing/typemod.ml[2663,97608+23]..[2663,97608+24])
                                          expression (typing/typemod.ml[2663,97608+26]..[2663,97608+28])
                                            Pexp_construct "[]" (typing/typemod.ml[2663,97608+26]..[2663,97608+28])
                                            None
                                          expression (typing/typemod.ml[2663,97608+30]..[2663,97608+33])
                                            Pexp_ident "env" (typing/typemod.ml[2663,97608+30]..[2663,97608+33])
                                        ]
                                ]
                      ]
                      expression (typing/typemod.ml[2665,97647+2]..[2686,98591+46])
                        Pexp_let Rec
                        [
                          <def>
                            pattern (typing/typemod.ml[2665,97647+10]..[2665,97647+21])
                              Ppat_var "type_struct" (typing/typemod.ml[2665,97647+10]..[2665,97647+21])
                            expression (typing/typemod.ml[2665,97647+22]..[2675,98163+49]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typemod.ml[2665,97647+22]..[2665,97647+25])
                                Ppat_var "env" (typing/typemod.ml[2665,97647+22]..[2665,97647+25])
                              expression (typing/typemod.ml[2665,97647+26]..[2675,98163+49]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/typemod.ml[2665,97647+26]..[2665,97647+30])
                                  Ppat_var "sstr" (typing/typemod.ml[2665,97647+26]..[2665,97647+30])
                                expression (typing/typemod.ml[2666,97680+4]..[2675,98163+49])
                                  Pexp_match
                                  expression (typing/typemod.ml[2666,97680+10]..[2666,97680+14])
                                    Pexp_ident "sstr" (typing/typemod.ml[2666,97680+10]..[2666,97680+14])
                                  [
                                    <case>
                                      pattern (typing/typemod.ml[2667,97700+6]..[2667,97700+8])
                                        Ppat_construct "[]" (typing/typemod.ml[2667,97700+6]..[2667,97700+8])
                                        None
                                      expression (typing/typemod.ml[2667,97700+12]..[2667,97700+25])
                                        Pexp_tuple
                                        [
                                          expression (typing/typemod.ml[2667,97700+13]..[2667,97700+15])
                                            Pexp_construct "[]" (typing/typemod.ml[2667,97700+13]..[2667,97700+15])
                                            None
                                          expression (typing/typemod.ml[2667,97700+17]..[2667,97700+19])
                                            Pexp_construct "[]" (typing/typemod.ml[2667,97700+17]..[2667,97700+19])
                                            None
                                          expression (typing/typemod.ml[2667,97700+21]..[2667,97700+24])
                                            Pexp_ident "env" (typing/typemod.ml[2667,97700+21]..[2667,97700+24])
                                        ]
                                    <case>
                                      pattern (typing/typemod.ml[2668,97726+6]..[2668,97726+18])
                                        Ppat_construct "::" (typing/typemod.ml[2668,97726+11]..[2668,97726+13])
                                        Some
                                          []
                                          pattern (typing/typemod.ml[2668,97726+6]..[2668,97726+18]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[2668,97726+6]..[2668,97726+10])
                                                Ppat_var "pstr" (typing/typemod.ml[2668,97726+6]..[2668,97726+10])
                                              pattern (typing/typemod.ml[2668,97726+14]..[2668,97726+18])
                                                Ppat_var "srem" (typing/typemod.ml[2668,97726+14]..[2668,97726+18])
                                            ]
                                      expression (typing/typemod.ml[2669,97748+8]..[2675,98163+49])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[2669,97748+12]..[2669,97748+32])
                                              Ppat_var "previous_saved_types" (typing/typemod.ml[2669,97748+12]..[2669,97748+32])
                                            expression (typing/typemod.ml[2669,97748+35]..[2669,97748+64])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2669,97748+35]..[2669,97748+61])
                                                Pexp_ident "Cmt_format.get_saved_types" (typing/typemod.ml[2669,97748+35]..[2669,97748+61])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2669,97748+62]..[2669,97748+64])
                                                    Pexp_construct "()" (typing/typemod.ml[2669,97748+62]..[2669,97748+64])
                                                    None
                                              ]
                                        ]
                                        expression (typing/typemod.ml[2670,97816+8]..[2675,98163+49])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[2670,97816+12]..[2670,97816+29])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/typemod.ml[2670,97816+12]..[2670,97816+16])
                                                    Ppat_var "desc" (typing/typemod.ml[2670,97816+12]..[2670,97816+16])
                                                  pattern (typing/typemod.ml[2670,97816+18]..[2670,97816+20])
                                                    Ppat_var "sg" (typing/typemod.ml[2670,97816+18]..[2670,97816+20])
                                                  pattern (typing/typemod.ml[2670,97816+22]..[2670,97816+29])
                                                    Ppat_var "new_env" (typing/typemod.ml[2670,97816+22]..[2670,97816+29])
                                                ]
                                              expression (typing/typemod.ml[2670,97816+32]..[2670,97816+54])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2670,97816+32]..[2670,97816+45])
                                                  Pexp_ident "type_str_item" (typing/typemod.ml[2670,97816+32]..[2670,97816+45])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2670,97816+46]..[2670,97816+49])
                                                      Pexp_ident "env" (typing/typemod.ml[2670,97816+46]..[2670,97816+49])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2670,97816+50]..[2670,97816+54])
                                                      Pexp_ident "pstr" (typing/typemod.ml[2670,97816+50]..[2670,97816+54])
                                                ]
                                          ]
                                          expression (typing/typemod.ml[2671,97874+8]..[2675,98163+49])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[2671,97874+12]..[2671,97874+15])
                                                  Ppat_var "str" (typing/typemod.ml[2671,97874+12]..[2671,97874+15])
                                                expression (typing/typemod.ml[2671,97874+18]..[2671,97874+77])
                                                  Pexp_record
                                                  [
                                                    "str_desc" (typing/typemod.ml[2671,97874+20]..[2671,97874+28])
                                                      expression (typing/typemod.ml[2671,97874+31]..[2671,97874+35])
                                                        Pexp_ident "desc" (typing/typemod.ml[2671,97874+31]..[2671,97874+35])
                                                    "str_loc" (typing/typemod.ml[2671,97874+37]..[2671,97874+44])
                                                      expression (typing/typemod.ml[2671,97874+47]..[2671,97874+60])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[2671,97874+47]..[2671,97874+51])
                                                          Pexp_ident "pstr" (typing/typemod.ml[2671,97874+47]..[2671,97874+51])
                                                        "pstr_loc" (typing/typemod.ml[2671,97874+52]..[2671,97874+60])
                                                    "str_env" (typing/typemod.ml[2671,97874+62]..[2671,97874+69])
                                                      expression (typing/typemod.ml[2671,97874+72]..[2671,97874+75])
                                                        Pexp_ident "env" (typing/typemod.ml[2671,97874+72]..[2671,97874+75])
                                                  ]
                                                  None
                                            ]
                                            expression (typing/typemod.ml[2672,97955+8]..[2675,98163+49])
                                              Pexp_sequence
                                              expression (typing/typemod.ml[2672,97955+8]..[2673,98029+60])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2672,97955+8]..[2672,97955+34])
                                                  Pexp_ident "Cmt_format.set_saved_types" (typing/typemod.ml[2672,97955+8]..[2672,97955+34])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2672,97955+35]..[2673,98029+60])
                                                      Pexp_construct "::" (typing/typemod.ml[2673,98029+36]..[2673,98029+38])
                                                      Some
                                                        expression (typing/typemod.ml[2672,97955+36]..[2673,98029+59]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/typemod.ml[2672,97955+36]..[2672,97955+73])
                                                              Pexp_construct "Cmt_format.Partial_structure_item" (typing/typemod.ml[2672,97955+36]..[2672,97955+69])
                                                              Some
                                                                expression (typing/typemod.ml[2672,97955+70]..[2672,97955+73])
                                                                  Pexp_ident "str" (typing/typemod.ml[2672,97955+70]..[2672,97955+73])
                                                            expression (typing/typemod.ml[2673,98029+39]..[2673,98029+59])
                                                              Pexp_ident "previous_saved_types" (typing/typemod.ml[2673,98029+39]..[2673,98029+59])
                                                          ]
                                                ]
                                              expression (typing/typemod.ml[2674,98091+8]..[2675,98163+49])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typemod.ml[2674,98091+12]..[2674,98091+41])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typemod.ml[2674,98091+13]..[2674,98091+20])
                                                          Ppat_var "str_rem" (typing/typemod.ml[2674,98091+13]..[2674,98091+20])
                                                        pattern (typing/typemod.ml[2674,98091+22]..[2674,98091+29])
                                                          Ppat_var "sig_rem" (typing/typemod.ml[2674,98091+22]..[2674,98091+29])
                                                        pattern (typing/typemod.ml[2674,98091+31]..[2674,98091+40])
                                                          Ppat_var "final_env" (typing/typemod.ml[2674,98091+31]..[2674,98091+40])
                                                      ]
                                                    expression (typing/typemod.ml[2674,98091+44]..[2674,98091+68])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[2674,98091+44]..[2674,98091+55])
                                                        Pexp_ident "type_struct" (typing/typemod.ml[2674,98091+44]..[2674,98091+55])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2674,98091+56]..[2674,98091+63])
                                                            Pexp_ident "new_env" (typing/typemod.ml[2674,98091+56]..[2674,98091+63])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2674,98091+64]..[2674,98091+68])
                                                            Pexp_ident "srem" (typing/typemod.ml[2674,98091+64]..[2674,98091+68])
                                                      ]
                                                ]
                                                expression (typing/typemod.ml[2675,98163+8]..[2675,98163+49])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/typemod.ml[2675,98163+9]..[2675,98163+23])
                                                      Pexp_construct "::" (typing/typemod.ml[2675,98163+13]..[2675,98163+15])
                                                      Some
                                                        expression (typing/typemod.ml[2675,98163+9]..[2675,98163+23]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/typemod.ml[2675,98163+9]..[2675,98163+12])
                                                              Pexp_ident "str" (typing/typemod.ml[2675,98163+9]..[2675,98163+12])
                                                            expression (typing/typemod.ml[2675,98163+16]..[2675,98163+23])
                                                              Pexp_ident "str_rem" (typing/typemod.ml[2675,98163+16]..[2675,98163+23])
                                                          ]
                                                    expression (typing/typemod.ml[2675,98163+25]..[2675,98163+37])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[2675,98163+28]..[2675,98163+29])
                                                        Pexp_ident "@" (typing/typemod.ml[2675,98163+28]..[2675,98163+29])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2675,98163+25]..[2675,98163+27])
                                                            Pexp_ident "sg" (typing/typemod.ml[2675,98163+25]..[2675,98163+27])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2675,98163+30]..[2675,98163+37])
                                                            Pexp_ident "sig_rem" (typing/typemod.ml[2675,98163+30]..[2675,98163+37])
                                                      ]
                                                    expression (typing/typemod.ml[2675,98163+39]..[2675,98163+48])
                                                      Pexp_ident "final_env" (typing/typemod.ml[2675,98163+39]..[2675,98163+48])
                                                  ]
                                  ]
                        ]
                        expression (typing/typemod.ml[2677,98218+2]..[2686,98591+46])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[2677,98218+6]..[2677,98218+26])
                                Ppat_var "previous_saved_types" (typing/typemod.ml[2677,98218+6]..[2677,98218+26])
                              expression (typing/typemod.ml[2677,98218+29]..[2677,98218+58])
                                Pexp_apply
                                expression (typing/typemod.ml[2677,98218+29]..[2677,98218+55])
                                  Pexp_ident "Cmt_format.get_saved_types" (typing/typemod.ml[2677,98218+29]..[2677,98218+55])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2677,98218+56]..[2677,98218+58])
                                      Pexp_construct "()" (typing/typemod.ml[2677,98218+56]..[2677,98218+58])
                                      None
                                ]
                          ]
                          expression (typing/typemod.ml[2678,98280+2]..[2686,98591+46])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[2678,98280+6]..[2678,98280+9])
                                  Ppat_var "run" (typing/typemod.ml[2678,98280+6]..[2678,98280+9])
                                expression (typing/typemod.ml[2678,98280+10]..[2683,98530+29]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/typemod.ml[2678,98280+10]..[2678,98280+12])
                                    Ppat_construct "()" (typing/typemod.ml[2678,98280+10]..[2678,98280+12])
                                    None
                                  expression (typing/typemod.ml[2679,98295+4]..[2683,98530+29])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typemod.ml[2679,98295+8]..[2679,98295+30])
                                          Ppat_tuple
                                          [
                                            pattern (typing/typemod.ml[2679,98295+9]..[2679,98295+14])
                                              Ppat_var "items" (typing/typemod.ml[2679,98295+9]..[2679,98295+14])
                                            pattern (typing/typemod.ml[2679,98295+16]..[2679,98295+18])
                                              Ppat_var "sg" (typing/typemod.ml[2679,98295+16]..[2679,98295+18])
                                            pattern (typing/typemod.ml[2679,98295+20]..[2679,98295+29])
                                              Ppat_var "final_env" (typing/typemod.ml[2679,98295+20]..[2679,98295+29])
                                          ]
                                        expression (typing/typemod.ml[2679,98295+33]..[2679,98295+53])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2679,98295+33]..[2679,98295+44])
                                            Pexp_ident "type_struct" (typing/typemod.ml[2679,98295+33]..[2679,98295+44])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2679,98295+45]..[2679,98295+48])
                                                Pexp_ident "env" (typing/typemod.ml[2679,98295+45]..[2679,98295+48])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2679,98295+49]..[2679,98295+53])
                                                Pexp_ident "sstr" (typing/typemod.ml[2679,98295+49]..[2679,98295+53])
                                          ]
                                    ]
                                    expression (typing/typemod.ml[2680,98352+4]..[2683,98530+29])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[2680,98352+8]..[2680,98352+11])
                                            Ppat_var "str" (typing/typemod.ml[2680,98352+8]..[2680,98352+11])
                                          expression (typing/typemod.ml[2680,98352+14]..[2680,98352+77])
                                            Pexp_record
                                            [
                                              "str_items" (typing/typemod.ml[2680,98352+16]..[2680,98352+25])
                                                expression (typing/typemod.ml[2680,98352+28]..[2680,98352+33])
                                                  Pexp_ident "items" (typing/typemod.ml[2680,98352+28]..[2680,98352+33])
                                              "str_type" (typing/typemod.ml[2680,98352+35]..[2680,98352+43])
                                                expression (typing/typemod.ml[2680,98352+46]..[2680,98352+48])
                                                  Pexp_ident "sg" (typing/typemod.ml[2680,98352+46]..[2680,98352+48])
                                              "str_final_env" (typing/typemod.ml[2680,98352+50]..[2680,98352+63])
                                                expression (typing/typemod.ml[2680,98352+66]..[2680,98352+75])
                                                  Pexp_ident "final_env" (typing/typemod.ml[2680,98352+66]..[2680,98352+75])
                                            ]
                                            None
                                      ]
                                      expression (typing/typemod.ml[2681,98433+4]..[2683,98530+29])
                                        Pexp_sequence
                                        expression (typing/typemod.ml[2681,98433+4]..[2682,98464+64])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2681,98433+4]..[2681,98433+30])
                                            Pexp_ident "Cmt_format.set_saved_types" (typing/typemod.ml[2681,98433+4]..[2681,98433+30])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2682,98464+6]..[2682,98464+64])
                                                Pexp_construct "::" (typing/typemod.ml[2682,98464+40]..[2682,98464+42])
                                                Some
                                                  expression (typing/typemod.ml[2682,98464+7]..[2682,98464+63]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[2682,98464+7]..[2682,98464+39])
                                                        Pexp_construct "Cmt_format.Partial_structure" (typing/typemod.ml[2682,98464+7]..[2682,98464+35])
                                                        Some
                                                          expression (typing/typemod.ml[2682,98464+36]..[2682,98464+39])
                                                            Pexp_ident "str" (typing/typemod.ml[2682,98464+36]..[2682,98464+39])
                                                      expression (typing/typemod.ml[2682,98464+43]..[2682,98464+63])
                                                        Pexp_ident "previous_saved_types" (typing/typemod.ml[2682,98464+43]..[2682,98464+63])
                                                    ]
                                          ]
                                        expression (typing/typemod.ml[2683,98530+4]..[2683,98530+29])
                                          Pexp_tuple
                                          [
                                            expression (typing/typemod.ml[2683,98530+4]..[2683,98530+7])
                                              Pexp_ident "str" (typing/typemod.ml[2683,98530+4]..[2683,98530+7])
                                            expression (typing/typemod.ml[2683,98530+9]..[2683,98530+11])
                                              Pexp_ident "sg" (typing/typemod.ml[2683,98530+9]..[2683,98530+11])
                                            expression (typing/typemod.ml[2683,98530+13]..[2683,98530+18])
                                              Pexp_ident "names" (typing/typemod.ml[2683,98530+13]..[2683,98530+18])
                                            expression (typing/typemod.ml[2683,98530+20]..[2683,98530+29])
                                              Pexp_ident "final_env" (typing/typemod.ml[2683,98530+20]..[2683,98530+29])
                                          ]
                            ]
                            expression (typing/typemod.ml[2685,98565+2]..[2686,98591+46])
                              Pexp_ifthenelse
                              expression (typing/typemod.ml[2685,98565+5]..[2685,98565+13])
                                Pexp_ident "toplevel" (typing/typemod.ml[2685,98565+5]..[2685,98565+13])
                              expression (typing/typemod.ml[2685,98565+19]..[2685,98565+25])
                                Pexp_apply
                                expression (typing/typemod.ml[2685,98565+19]..[2685,98565+22])
                                  Pexp_ident "run" (typing/typemod.ml[2685,98565+19]..[2685,98565+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2685,98565+23]..[2685,98565+25])
                                      Pexp_construct "()" (typing/typemod.ml[2685,98565+23]..[2685,98565+25])
                                      None
                                ]
                              Some
                                expression (typing/typemod.ml[2686,98591+7]..[2686,98591+46])
                                  Pexp_apply
                                  expression (typing/typemod.ml[2686,98591+7]..[2686,98591+39])
                                    Pexp_ident "Builtin_attributes.warning_scope" (typing/typemod.ml[2686,98591+7]..[2686,98591+39])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2686,98591+40]..[2686,98591+42])
                                        Pexp_construct "[]" (typing/typemod.ml[2686,98591+40]..[2686,98591+42])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2686,98591+43]..[2686,98591+46])
                                        Pexp_ident "run" (typing/typemod.ml[2686,98591+43]..[2686,98591+46])
                                  ]
    ]
  structure_item (typing/typemod.ml[2688,98639+0]..[2692,98801+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2688,98639+4]..[2688,98639+24])
          Ppat_var "type_toplevel_phrase" (typing/typemod.ml[2688,98639+4]..[2688,98639+24])
        expression (typing/typemod.ml[2688,98639+25]..[2692,98801+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2688,98639+25]..[2688,98639+28])
            Ppat_var "env" (typing/typemod.ml[2688,98639+25]..[2688,98639+28])
          expression (typing/typemod.ml[2688,98639+29]..[2692,98801+35]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2688,98639+29]..[2688,98639+30])
              Ppat_var "s" (typing/typemod.ml[2688,98639+29]..[2688,98639+30])
            expression (typing/typemod.ml[2689,98672+2]..[2692,98801+35])
              Pexp_sequence
              expression (typing/typemod.ml[2689,98672+2]..[2689,98672+31])
                Pexp_apply
                expression (typing/typemod.ml[2689,98672+2]..[2689,98672+28])
                  Pexp_ident "Env.reset_required_globals" (typing/typemod.ml[2689,98672+2]..[2689,98672+28])
                [
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2689,98672+29]..[2689,98672+31])
                      Pexp_construct "()" (typing/typemod.ml[2689,98672+29]..[2689,98672+31])
                      None
                ]
              expression (typing/typemod.ml[2690,98705+2]..[2692,98801+35])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/typemod.ml[2690,98705+6]..[2690,98705+39])
                      Ppat_tuple
                      [
                        pattern (typing/typemod.ml[2690,98705+7]..[2690,98705+10])
                          Ppat_var "str" (typing/typemod.ml[2690,98705+7]..[2690,98705+10])
                        pattern (typing/typemod.ml[2690,98705+12]..[2690,98705+14])
                          Ppat_var "sg" (typing/typemod.ml[2690,98705+12]..[2690,98705+14])
                        pattern (typing/typemod.ml[2690,98705+16]..[2690,98705+33])
                          Ppat_var "to_remove_from_sg" (typing/typemod.ml[2690,98705+16]..[2690,98705+33])
                        pattern (typing/typemod.ml[2690,98705+35]..[2690,98705+38])
                          Ppat_var "env" (typing/typemod.ml[2690,98705+35]..[2690,98705+38])
                      ]
                    expression (typing/typemod.ml[2691,98747+4]..[2691,98747+50])
                      Pexp_apply
                      expression (typing/typemod.ml[2691,98747+4]..[2691,98747+18])
                        Pexp_ident "type_structure" (typing/typemod.ml[2691,98747+4]..[2691,98747+18])
                      [
                        <arg>
                        Labelled "toplevel"
                          expression (typing/typemod.ml[2691,98747+29]..[2691,98747+33])
                            Pexp_construct "true" (typing/typemod.ml[2691,98747+29]..[2691,98747+33])
                            None
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2691,98747+34]..[2691,98747+39])
                            Pexp_construct "false" (typing/typemod.ml[2691,98747+34]..[2691,98747+39])
                            None
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2691,98747+40]..[2691,98747+44])
                            Pexp_construct "None" (typing/typemod.ml[2691,98747+40]..[2691,98747+44])
                            None
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2691,98747+45]..[2691,98747+48])
                            Pexp_ident "env" (typing/typemod.ml[2691,98747+45]..[2691,98747+48])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2691,98747+49]..[2691,98747+50])
                            Pexp_ident "s" (typing/typemod.ml[2691,98747+49]..[2691,98747+50])
                      ]
                ]
                expression (typing/typemod.ml[2692,98801+2]..[2692,98801+35])
                  Pexp_tuple
                  [
                    expression (typing/typemod.ml[2692,98801+3]..[2692,98801+6])
                      Pexp_ident "str" (typing/typemod.ml[2692,98801+3]..[2692,98801+6])
                    expression (typing/typemod.ml[2692,98801+8]..[2692,98801+10])
                      Pexp_ident "sg" (typing/typemod.ml[2692,98801+8]..[2692,98801+10])
                    expression (typing/typemod.ml[2692,98801+12]..[2692,98801+29])
                      Pexp_ident "to_remove_from_sg" (typing/typemod.ml[2692,98801+12]..[2692,98801+29])
                    expression (typing/typemod.ml[2692,98801+31]..[2692,98801+34])
                      Pexp_ident "env" (typing/typemod.ml[2692,98801+31]..[2692,98801+34])
                  ]
    ]
  structure_item (typing/typemod.ml[2694,98838+0]..[2694,98838+63])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2694,98838+4]..[2694,98838+21])
          Ppat_var "type_module_alias" (typing/typemod.ml[2694,98838+4]..[2694,98838+21])
        expression (typing/typemod.ml[2694,98838+24]..[2694,98838+63])
          Pexp_apply
          expression (typing/typemod.ml[2694,98838+24]..[2694,98838+35])
            Pexp_ident "type_module" (typing/typemod.ml[2694,98838+24]..[2694,98838+35])
          [
            <arg>
            Labelled "alias"
              expression (typing/typemod.ml[2694,98838+43]..[2694,98838+47])
                Pexp_construct "true" (typing/typemod.ml[2694,98838+43]..[2694,98838+47])
                None
            <arg>
            Nolabel
              expression (typing/typemod.ml[2694,98838+48]..[2694,98838+52])
                Pexp_construct "true" (typing/typemod.ml[2694,98838+48]..[2694,98838+52])
                None
            <arg>
            Nolabel
              expression (typing/typemod.ml[2694,98838+53]..[2694,98838+58])
                Pexp_construct "false" (typing/typemod.ml[2694,98838+53]..[2694,98838+58])
                None
            <arg>
            Nolabel
              expression (typing/typemod.ml[2694,98838+59]..[2694,98838+63])
                Pexp_construct "None" (typing/typemod.ml[2694,98838+59]..[2694,98838+63])
                None
          ]
    ]
  structure_item (typing/typemod.ml[2695,98902+0]..[2695,98902+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2695,98902+4]..[2695,98902+15])
          Ppat_var "type_module" (typing/typemod.ml[2695,98902+4]..[2695,98902+15])
        expression (typing/typemod.ml[2695,98902+18]..[2695,98902+45])
          Pexp_apply
          expression (typing/typemod.ml[2695,98902+18]..[2695,98902+29])
            Pexp_ident "type_module" (typing/typemod.ml[2695,98902+18]..[2695,98902+29])
          [
            <arg>
            Nolabel
              expression (typing/typemod.ml[2695,98902+30]..[2695,98902+34])
                Pexp_construct "true" (typing/typemod.ml[2695,98902+30]..[2695,98902+34])
                None
            <arg>
            Nolabel
              expression (typing/typemod.ml[2695,98902+35]..[2695,98902+40])
                Pexp_construct "false" (typing/typemod.ml[2695,98902+35]..[2695,98902+40])
                None
            <arg>
            Nolabel
              expression (typing/typemod.ml[2695,98902+41]..[2695,98902+45])
                Pexp_construct "None" (typing/typemod.ml[2695,98902+41]..[2695,98902+45])
                None
          ]
    ]
  structure_item (typing/typemod.ml[2696,98948+0]..[2696,98948+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2696,98948+4]..[2696,98948+18])
          Ppat_var "type_structure" (typing/typemod.ml[2696,98948+4]..[2696,98948+18])
        expression (typing/typemod.ml[2696,98948+21]..[2696,98948+46])
          Pexp_apply
          expression (typing/typemod.ml[2696,98948+21]..[2696,98948+35])
            Pexp_ident "type_structure" (typing/typemod.ml[2696,98948+21]..[2696,98948+35])
          [
            <arg>
            Nolabel
              expression (typing/typemod.ml[2696,98948+36]..[2696,98948+41])
                Pexp_construct "false" (typing/typemod.ml[2696,98948+36]..[2696,98948+41])
                None
            <arg>
            Nolabel
              expression (typing/typemod.ml[2696,98948+42]..[2696,98948+46])
                Pexp_construct "None" (typing/typemod.ml[2696,98948+42]..[2696,98948+46])
                None
          ]
    ]
  structure_item (typing/typemod.ml[2700,99034+0]..[2711,99452+11])
    Pstr_value Rec
    [
      <def>
        pattern (typing/typemod.ml[2700,99034+8]..[2700,99034+25])
          Ppat_var "normalize_modtype" (typing/typemod.ml[2700,99034+8]..[2700,99034+25])
        expression (typing/typemod.ml[2700,99034+28]..[2704,99156+55])
          Pexp_function
          [
            <case>
              pattern (typing/typemod.ml[2701,99071+4]..[2702,99087+15])
                Ppat_or
                pattern (typing/typemod.ml[2701,99071+4]..[2701,99071+15])
                  Ppat_construct "Mty_ident" (typing/typemod.ml[2701,99071+4]..[2701,99071+13])
                  Some
                    []
                    pattern (typing/typemod.ml[2701,99071+14]..[2701,99071+15])
                      Ppat_any
                pattern (typing/typemod.ml[2702,99087+4]..[2702,99087+15])
                  Ppat_construct "Mty_alias" (typing/typemod.ml[2702,99087+4]..[2702,99087+13])
                  Some
                    []
                    pattern (typing/typemod.ml[2702,99087+14]..[2702,99087+15])
                      Ppat_any
              expression (typing/typemod.ml[2702,99087+19]..[2702,99087+21])
                Pexp_construct "()" (typing/typemod.ml[2702,99087+19]..[2702,99087+21])
                None
            <case>
              pattern (typing/typemod.ml[2703,99109+4]..[2703,99109+20])
                Ppat_construct "Mty_signature" (typing/typemod.ml[2703,99109+4]..[2703,99109+17])
                Some
                  []
                  pattern (typing/typemod.ml[2703,99109+18]..[2703,99109+20])
                    Ppat_var "sg" (typing/typemod.ml[2703,99109+18]..[2703,99109+20])
              expression (typing/typemod.ml[2703,99109+24]..[2703,99109+46])
                Pexp_apply
                expression (typing/typemod.ml[2703,99109+24]..[2703,99109+43])
                  Pexp_ident "normalize_signature" (typing/typemod.ml[2703,99109+24]..[2703,99109+43])
                [
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2703,99109+44]..[2703,99109+46])
                      Pexp_ident "sg" (typing/typemod.ml[2703,99109+44]..[2703,99109+46])
                ]
            <case>
              pattern (typing/typemod.ml[2704,99156+4]..[2704,99156+29])
                Ppat_construct "Mty_functor" (typing/typemod.ml[2704,99156+4]..[2704,99156+15])
                Some
                  []
                  pattern (typing/typemod.ml[2704,99156+15]..[2704,99156+29])
                    Ppat_tuple
                    [
                      pattern (typing/typemod.ml[2704,99156+16]..[2704,99156+22])
                        Ppat_var "_param" (typing/typemod.ml[2704,99156+16]..[2704,99156+22])
                      pattern (typing/typemod.ml[2704,99156+24]..[2704,99156+28])
                        Ppat_var "body" (typing/typemod.ml[2704,99156+24]..[2704,99156+28])
                    ]
              expression (typing/typemod.ml[2704,99156+33]..[2704,99156+55])
                Pexp_apply
                expression (typing/typemod.ml[2704,99156+33]..[2704,99156+50])
                  Pexp_ident "normalize_modtype" (typing/typemod.ml[2704,99156+33]..[2704,99156+50])
                [
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2704,99156+51]..[2704,99156+55])
                      Pexp_ident "body" (typing/typemod.ml[2704,99156+51]..[2704,99156+55])
                ]
          ]
      <def>
        pattern (typing/typemod.ml[2706,99213+4]..[2706,99213+23])
          Ppat_var "normalize_signature" (typing/typemod.ml[2706,99213+4]..[2706,99213+23])
        expression (typing/typemod.ml[2706,99213+24]..[2706,99213+66]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2706,99213+24]..[2706,99213+26])
            Ppat_var "sg" (typing/typemod.ml[2706,99213+24]..[2706,99213+26])
          expression (typing/typemod.ml[2706,99213+29]..[2706,99213+66])
            Pexp_apply
            expression (typing/typemod.ml[2706,99213+29]..[2706,99213+38])
              Pexp_ident "List.iter" (typing/typemod.ml[2706,99213+29]..[2706,99213+38])
            [
              <arg>
              Nolabel
                expression (typing/typemod.ml[2706,99213+39]..[2706,99213+63])
                  Pexp_ident "normalize_signature_item" (typing/typemod.ml[2706,99213+39]..[2706,99213+63])
              <arg>
              Nolabel
                expression (typing/typemod.ml[2706,99213+64]..[2706,99213+66])
                  Pexp_ident "sg" (typing/typemod.ml[2706,99213+64]..[2706,99213+66])
            ]
      <def>
        pattern (typing/typemod.ml[2708,99281+4]..[2708,99281+28])
          Ppat_var "normalize_signature_item" (typing/typemod.ml[2708,99281+4]..[2708,99281+28])
        expression (typing/typemod.ml[2708,99281+31]..[2711,99452+11])
          Pexp_function
          [
            <case>
              pattern (typing/typemod.ml[2709,99321+4]..[2709,99321+27])
                Ppat_construct "Sig_value" (typing/typemod.ml[2709,99321+4]..[2709,99321+13])
                Some
                  []
                  pattern (typing/typemod.ml[2709,99321+13]..[2709,99321+27])
                    Ppat_tuple
                    [
                      pattern (typing/typemod.ml[2709,99321+14]..[2709,99321+17])
                        Ppat_var "_id" (typing/typemod.ml[2709,99321+14]..[2709,99321+17])
                      pattern (typing/typemod.ml[2709,99321+19]..[2709,99321+23])
                        Ppat_var "desc" (typing/typemod.ml[2709,99321+19]..[2709,99321+23])
                      pattern (typing/typemod.ml[2709,99321+25]..[2709,99321+26])
                        Ppat_any
                    ]
              expression (typing/typemod.ml[2709,99321+31]..[2709,99321+65])
                Pexp_apply
                expression (typing/typemod.ml[2709,99321+31]..[2709,99321+51])
                  Pexp_ident "Ctype.normalize_type" (typing/typemod.ml[2709,99321+31]..[2709,99321+51])
                [
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2709,99321+52]..[2709,99321+65])
                      Pexp_field
                      expression (typing/typemod.ml[2709,99321+52]..[2709,99321+56])
                        Pexp_ident "desc" (typing/typemod.ml[2709,99321+52]..[2709,99321+56])
                      "val_type" (typing/typemod.ml[2709,99321+57]..[2709,99321+65])
                ]
            <case>
              pattern (typing/typemod.ml[2710,99387+4]..[2710,99387+32])
                Ppat_construct "Sig_module" (typing/typemod.ml[2710,99387+4]..[2710,99387+14])
                Some
                  []
                  pattern (typing/typemod.ml[2710,99387+14]..[2710,99387+32])
                    Ppat_tuple
                    [
                      pattern (typing/typemod.ml[2710,99387+15]..[2710,99387+18])
                        Ppat_var "_id" (typing/typemod.ml[2710,99387+15]..[2710,99387+18])
                      pattern (typing/typemod.ml[2710,99387+20]..[2710,99387+21])
                        Ppat_any
                      pattern (typing/typemod.ml[2710,99387+23]..[2710,99387+25])
                        Ppat_var "md" (typing/typemod.ml[2710,99387+23]..[2710,99387+25])
                      pattern (typing/typemod.ml[2710,99387+27]..[2710,99387+28])
                        Ppat_any
                      pattern (typing/typemod.ml[2710,99387+30]..[2710,99387+31])
                        Ppat_any
                    ]
              expression (typing/typemod.ml[2710,99387+36]..[2710,99387+64])
                Pexp_apply
                expression (typing/typemod.ml[2710,99387+36]..[2710,99387+53])
                  Pexp_ident "normalize_modtype" (typing/typemod.ml[2710,99387+36]..[2710,99387+53])
                [
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2710,99387+54]..[2710,99387+64])
                      Pexp_field
                      expression (typing/typemod.ml[2710,99387+54]..[2710,99387+56])
                        Pexp_ident "md" (typing/typemod.ml[2710,99387+54]..[2710,99387+56])
                      "md_type" (typing/typemod.ml[2710,99387+57]..[2710,99387+64])
                ]
            <case>
              pattern (typing/typemod.ml[2711,99452+4]..[2711,99452+5])
                Ppat_any
              expression (typing/typemod.ml[2711,99452+9]..[2711,99452+11])
                Pexp_construct "()" (typing/typemod.ml[2711,99452+9]..[2711,99452+11])
                None
          ]
    ]
  structure_item (typing/typemod.ml[2715,99519+0]..[2732,100289+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2715,99519+4]..[2715,99519+23])
          Ppat_var "type_module_type_of" (typing/typemod.ml[2715,99519+4]..[2715,99519+23])
        expression (typing/typemod.ml[2715,99519+24]..[2732,100289+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2715,99519+24]..[2715,99519+27])
            Ppat_var "env" (typing/typemod.ml[2715,99519+24]..[2715,99519+27])
          expression (typing/typemod.ml[2715,99519+28]..[2732,100289+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2715,99519+28]..[2715,99519+32])
              Ppat_var "smod" (typing/typemod.ml[2715,99519+28]..[2715,99519+32])
            expression (typing/typemod.ml[2716,99554+2]..[2732,100289+11])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[2716,99554+6]..[2716,99554+20])
                    Ppat_var "remove_aliases" (typing/typemod.ml[2716,99554+6]..[2716,99554+20])
                  expression (typing/typemod.ml[2716,99554+23]..[2716,99554+72])
                    Pexp_apply
                    expression (typing/typemod.ml[2716,99554+23]..[2716,99554+51])
                      Pexp_ident "has_remove_aliases_attribute" (typing/typemod.ml[2716,99554+23]..[2716,99554+51])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[2716,99554+52]..[2716,99554+72])
                          Pexp_field
                          expression (typing/typemod.ml[2716,99554+52]..[2716,99554+56])
                            Pexp_ident "smod" (typing/typemod.ml[2716,99554+52]..[2716,99554+56])
                          "pmod_attributes" (typing/typemod.ml[2716,99554+57]..[2716,99554+72])
                    ]
              ]
              expression (typing/typemod.ml[2717,99630+2]..[2732,100289+11])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/typemod.ml[2717,99630+6]..[2717,99630+10])
                      Ppat_var "tmty" (typing/typemod.ml[2717,99630+6]..[2717,99630+10])
                    expression (typing/typemod.ml[2718,99643+4]..[2726,100012+31])
                      Pexp_match
                      expression (typing/typemod.ml[2718,99643+10]..[2718,99643+24])
                        Pexp_field
                        expression (typing/typemod.ml[2718,99643+10]..[2718,99643+14])
                          Pexp_ident "smod" (typing/typemod.ml[2718,99643+10]..[2718,99643+14])
                        "pmod_desc" (typing/typemod.ml[2718,99643+15]..[2718,99643+24])
                      [
                        <case>
                          pattern (typing/typemod.ml[2719,99673+6]..[2719,99673+20])
                            Ppat_construct "Pmod_ident" (typing/typemod.ml[2719,99673+6]..[2719,99673+16])
                            Some
                              []
                              pattern (typing/typemod.ml[2719,99673+17]..[2719,99673+20])
                                Ppat_var "lid" (typing/typemod.ml[2719,99673+17]..[2719,99673+20])
                          expression (typing/typemod.ml[2720,99739+8]..[2725,99974+37])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[2720,99739+12]..[2720,99739+20])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[2720,99739+12]..[2720,99739+16])
                                      Ppat_var "path" (typing/typemod.ml[2720,99739+12]..[2720,99739+16])
                                    pattern (typing/typemod.ml[2720,99739+18]..[2720,99739+20])
                                      Ppat_var "md" (typing/typemod.ml[2720,99739+18]..[2720,99739+20])
                                  ]
                                expression (typing/typemod.ml[2720,99739+23]..[2720,99739+71])
                                  Pexp_apply
                                  expression (typing/typemod.ml[2720,99739+23]..[2720,99739+40])
                                    Pexp_ident "Env.lookup_module" (typing/typemod.ml[2720,99739+23]..[2720,99739+40])
                                  [
                                    <arg>
                                    Labelled "loc"
                                      expression (typing/typemod.ml[2720,99739+46]..[2720,99739+59])
                                        Pexp_field
                                        expression (typing/typemod.ml[2720,99739+46]..[2720,99739+50])
                                          Pexp_ident "smod" (typing/typemod.ml[2720,99739+46]..[2720,99739+50])
                                        "pmod_loc" (typing/typemod.ml[2720,99739+51]..[2720,99739+59])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2720,99739+60]..[2720,99739+67])
                                        Pexp_field
                                        expression (typing/typemod.ml[2720,99739+60]..[2720,99739+63])
                                          Pexp_ident "lid" (typing/typemod.ml[2720,99739+60]..[2720,99739+63])
                                        "txt" (typing/typemod.ml[2720,99739+64]..[2720,99739+67])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2720,99739+68]..[2720,99739+71])
                                        Pexp_ident "env" (typing/typemod.ml[2720,99739+68]..[2720,99739+71])
                                  ]
                            ]
                            expression (typing/typemod.ml[2721,99814+10]..[2725,99974+37])
                              Pexp_record
                              [
                                "mod_desc" (typing/typemod.ml[2721,99814+12]..[2721,99814+20])
                                  expression (typing/typemod.ml[2721,99814+23]..[2721,99814+45])
                                    Pexp_construct "Tmod_ident" (typing/typemod.ml[2721,99814+23]..[2721,99814+33])
                                    Some
                                      expression (typing/typemod.ml[2721,99814+34]..[2721,99814+45])
                                        Pexp_tuple
                                        [
                                          expression (typing/typemod.ml[2721,99814+35]..[2721,99814+39])
                                            Pexp_ident "path" (typing/typemod.ml[2721,99814+35]..[2721,99814+39])
                                          expression (typing/typemod.ml[2721,99814+41]..[2721,99814+44])
                                            Pexp_ident "lid" (typing/typemod.ml[2721,99814+41]..[2721,99814+44])
                                        ]
                                "mod_type" (typing/typemod.ml[2722,99861+12]..[2722,99861+20])
                                  expression (typing/typemod.ml[2722,99861+23]..[2722,99861+33])
                                    Pexp_field
                                    expression (typing/typemod.ml[2722,99861+23]..[2722,99861+25])
                                      Pexp_ident "md" (typing/typemod.ml[2722,99861+23]..[2722,99861+25])
                                    "md_type" (typing/typemod.ml[2722,99861+26]..[2722,99861+33])
                                "mod_env" (typing/typemod.ml[2723,99896+12]..[2723,99896+19])
                                  expression (typing/typemod.ml[2723,99896+22]..[2723,99896+25])
                                    Pexp_ident "env" (typing/typemod.ml[2723,99896+22]..[2723,99896+25])
                                "mod_attributes" (typing/typemod.ml[2724,99923+12]..[2724,99923+26])
                                  expression (typing/typemod.ml[2724,99923+29]..[2724,99923+49])
                                    Pexp_field
                                    expression (typing/typemod.ml[2724,99923+29]..[2724,99923+33])
                                      Pexp_ident "smod" (typing/typemod.ml[2724,99923+29]..[2724,99923+33])
                                    "pmod_attributes" (typing/typemod.ml[2724,99923+34]..[2724,99923+49])
                                "mod_loc" (typing/typemod.ml[2725,99974+12]..[2725,99974+19])
                                  expression (typing/typemod.ml[2725,99974+22]..[2725,99974+35])
                                    Pexp_field
                                    expression (typing/typemod.ml[2725,99974+22]..[2725,99974+26])
                                      Pexp_ident "smod" (typing/typemod.ml[2725,99974+22]..[2725,99974+26])
                                    "pmod_loc" (typing/typemod.ml[2725,99974+27]..[2725,99974+35])
                              ]
                              None
                        <case>
                          pattern (typing/typemod.ml[2726,100012+6]..[2726,100012+7])
                            Ppat_any
                          expression (typing/typemod.ml[2726,100012+11]..[2726,100012+31])
                            Pexp_apply
                            expression (typing/typemod.ml[2726,100012+11]..[2726,100012+22])
                              Pexp_ident "type_module" (typing/typemod.ml[2726,100012+11]..[2726,100012+22])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2726,100012+23]..[2726,100012+26])
                                  Pexp_ident "env" (typing/typemod.ml[2726,100012+23]..[2726,100012+26])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2726,100012+27]..[2726,100012+31])
                                  Pexp_ident "smod" (typing/typemod.ml[2726,100012+27]..[2726,100012+31])
                            ]
                      ]
                ]
                expression (typing/typemod.ml[2728,100049+2]..[2732,100289+11])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typemod.ml[2728,100049+6]..[2728,100049+9])
                        Ppat_var "mty" (typing/typemod.ml[2728,100049+6]..[2728,100049+9])
                      expression (typing/typemod.ml[2728,100049+12]..[2728,100049+70])
                        Pexp_apply
                        expression (typing/typemod.ml[2728,100049+12]..[2728,100049+36])
                          Pexp_ident "Mtype.scrape_for_type_of" (typing/typemod.ml[2728,100049+12]..[2728,100049+36])
                        [
                          <arg>
                          Labelled "remove_aliases"
                            expression (typing/typemod.ml[2728,100049+38]..[2728,100049+52])
                              Pexp_ident "remove_aliases" (typing/typemod.ml[2728,100049+38]..[2728,100049+52])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[2728,100049+53]..[2728,100049+56])
                              Pexp_ident "env" (typing/typemod.ml[2728,100049+53]..[2728,100049+56])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[2728,100049+57]..[2728,100049+70])
                              Pexp_field
                              expression (typing/typemod.ml[2728,100049+57]..[2728,100049+61])
                                Pexp_ident "tmty" (typing/typemod.ml[2728,100049+57]..[2728,100049+61])
                              "mod_type" (typing/typemod.ml[2728,100049+62]..[2728,100049+70])
                        ]
                  ]
                  expression (typing/typemod.ml[2730,100188+2]..[2732,100289+11])
                    Pexp_sequence
                    expression (typing/typemod.ml[2730,100188+2]..[2731,100221+66])
                      Pexp_ifthenelse
                      expression (typing/typemod.ml[2730,100188+5]..[2730,100188+27])
                        Pexp_apply
                        expression (typing/typemod.ml[2730,100188+5]..[2730,100188+19])
                          Pexp_ident "nongen_modtype" (typing/typemod.ml[2730,100188+5]..[2730,100188+19])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[2730,100188+20]..[2730,100188+23])
                              Pexp_ident "env" (typing/typemod.ml[2730,100188+20]..[2730,100188+23])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[2730,100188+24]..[2730,100188+27])
                              Pexp_ident "mty" (typing/typemod.ml[2730,100188+24]..[2730,100188+27])
                        ]
                      expression (typing/typemod.ml[2731,100221+4]..[2731,100221+66])
                        Pexp_apply
                        expression (typing/typemod.ml[2731,100221+4]..[2731,100221+9])
                          Pexp_ident "raise" (typing/typemod.ml[2731,100221+4]..[2731,100221+9])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[2731,100221+9]..[2731,100221+66])
                              Pexp_construct "Error" (typing/typemod.ml[2731,100221+10]..[2731,100221+15])
                              Some
                                expression (typing/typemod.ml[2731,100221+15]..[2731,100221+65])
                                  Pexp_tuple
                                  [
                                    expression (typing/typemod.ml[2731,100221+16]..[2731,100221+29])
                                      Pexp_field
                                      expression (typing/typemod.ml[2731,100221+16]..[2731,100221+20])
                                        Pexp_ident "smod" (typing/typemod.ml[2731,100221+16]..[2731,100221+20])
                                      "pmod_loc" (typing/typemod.ml[2731,100221+21]..[2731,100221+29])
                                    expression (typing/typemod.ml[2731,100221+31]..[2731,100221+34])
                                      Pexp_ident "env" (typing/typemod.ml[2731,100221+31]..[2731,100221+34])
                                    expression (typing/typemod.ml[2731,100221+36]..[2731,100221+64])
                                      Pexp_construct "Non_generalizable_module" (typing/typemod.ml[2731,100221+36]..[2731,100221+60])
                                      Some
                                        expression (typing/typemod.ml[2731,100221+61]..[2731,100221+64])
                                          Pexp_ident "mty" (typing/typemod.ml[2731,100221+61]..[2731,100221+64])
                                  ]
                        ]
                      None
                    expression (typing/typemod.ml[2732,100289+2]..[2732,100289+11])
                      Pexp_tuple
                      [
                        expression (typing/typemod.ml[2732,100289+2]..[2732,100289+6])
                          Pexp_ident "tmty" (typing/typemod.ml[2732,100289+2]..[2732,100289+6])
                        expression (typing/typemod.ml[2732,100289+8]..[2732,100289+11])
                          Pexp_ident "mty" (typing/typemod.ml[2732,100289+8]..[2732,100289+11])
                      ]
    ]
  structure_item (typing/typemod.ml[2737,100358+0]..[2742,100509+30])
    Pstr_value Rec
    [
      <def>
        pattern (typing/typemod.ml[2737,100358+8]..[2737,100358+19])
          Ppat_var "extend_path" (typing/typemod.ml[2737,100358+8]..[2737,100358+19])
        expression (typing/typemod.ml[2737,100358+20]..[2742,100509+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2737,100358+20]..[2737,100358+24])
            Ppat_var "path" (typing/typemod.ml[2737,100358+20]..[2737,100358+24])
          expression (typing/typemod.ml[2738,100385+2]..[2742,100509+30])
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2738,100385+6]..[2738,100385+9])
              Ppat_var "lid" (typing/typemod.ml[2738,100385+6]..[2738,100385+9])
            expression (typing/typemod.ml[2739,100398+4]..[2742,100509+30])
              Pexp_match
              expression (typing/typemod.ml[2739,100398+10]..[2739,100398+13])
                Pexp_ident "lid" (typing/typemod.ml[2739,100398+10]..[2739,100398+13])
              [
                <case>
                  pattern (typing/typemod.ml[2740,100417+6]..[2740,100417+17])
                    Ppat_construct "Lident" (typing/typemod.ml[2740,100417+6]..[2740,100417+12])
                    Some
                      []
                      pattern (typing/typemod.ml[2740,100417+13]..[2740,100417+17])
                        Ppat_var "name" (typing/typemod.ml[2740,100417+13]..[2740,100417+17])
                  expression (typing/typemod.ml[2740,100417+21]..[2740,100417+37])
                    Pexp_construct "Pdot" (typing/typemod.ml[2740,100417+21]..[2740,100417+25])
                    Some
                      expression (typing/typemod.ml[2740,100417+25]..[2740,100417+37])
                        Pexp_tuple
                        [
                          expression (typing/typemod.ml[2740,100417+26]..[2740,100417+30])
                            Pexp_ident "path" (typing/typemod.ml[2740,100417+26]..[2740,100417+30])
                          expression (typing/typemod.ml[2740,100417+32]..[2740,100417+36])
                            Pexp_ident "name" (typing/typemod.ml[2740,100417+32]..[2740,100417+36])
                        ]
                <case>
                  pattern (typing/typemod.ml[2741,100455+6]..[2741,100455+19])
                    Ppat_construct "Ldot" (typing/typemod.ml[2741,100455+6]..[2741,100455+10])
                    Some
                      []
                      pattern (typing/typemod.ml[2741,100455+10]..[2741,100455+19])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[2741,100455+11]..[2741,100455+12])
                            Ppat_var "m" (typing/typemod.ml[2741,100455+11]..[2741,100455+12])
                          pattern (typing/typemod.ml[2741,100455+14]..[2741,100455+18])
                            Ppat_var "name" (typing/typemod.ml[2741,100455+14]..[2741,100455+18])
                        ]
                  expression (typing/typemod.ml[2741,100455+23]..[2741,100455+53])
                    Pexp_construct "Pdot" (typing/typemod.ml[2741,100455+23]..[2741,100455+27])
                    Some
                      expression (typing/typemod.ml[2741,100455+27]..[2741,100455+53])
                        Pexp_tuple
                        [
                          expression (typing/typemod.ml[2741,100455+28]..[2741,100455+46])
                            Pexp_apply
                            expression (typing/typemod.ml[2741,100455+28]..[2741,100455+39])
                              Pexp_ident "extend_path" (typing/typemod.ml[2741,100455+28]..[2741,100455+39])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2741,100455+40]..[2741,100455+44])
                                  Pexp_ident "path" (typing/typemod.ml[2741,100455+40]..[2741,100455+44])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2741,100455+45]..[2741,100455+46])
                                  Pexp_ident "m" (typing/typemod.ml[2741,100455+45]..[2741,100455+46])
                            ]
                          expression (typing/typemod.ml[2741,100455+48]..[2741,100455+52])
                            Pexp_ident "name" (typing/typemod.ml[2741,100455+48]..[2741,100455+52])
                        ]
                <case>
                  pattern (typing/typemod.ml[2742,100509+6]..[2742,100509+14])
                    Ppat_construct "Lapply" (typing/typemod.ml[2742,100509+6]..[2742,100509+12])
                    Some
                      []
                      pattern (typing/typemod.ml[2742,100509+13]..[2742,100509+14])
                        Ppat_any
                  expression (typing/typemod.ml[2742,100509+18]..[2742,100509+30])
                    Pexp_assert
                    expression (typing/typemod.ml[2742,100509+25]..[2742,100509+30])
                      Pexp_construct "false" (typing/typemod.ml[2742,100509+25]..[2742,100509+30])
                      None
              ]
    ]
  structure_item (typing/typemod.ml[2745,100592+0]..[2770,101452+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2745,100592+4]..[2745,100592+22])
          Ppat_var "lookup_type_in_sig" (typing/typemod.ml[2745,100592+4]..[2745,100592+22])
        expression (typing/typemod.ml[2745,100592+23]..[2770,101452+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2745,100592+23]..[2745,100592+25])
            Ppat_var "sg" (typing/typemod.ml[2745,100592+23]..[2745,100592+25])
          expression (typing/typemod.ml[2746,100620+2]..[2770,101452+30])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/typemod.ml[2746,100620+6]..[2746,100620+20])
                  Ppat_tuple
                  [
                    pattern (typing/typemod.ml[2746,100620+6]..[2746,100620+11])
                      Ppat_var "types" (typing/typemod.ml[2746,100620+6]..[2746,100620+11])
                    pattern (typing/typemod.ml[2746,100620+13]..[2746,100620+20])
                      Ppat_var "modules" (typing/typemod.ml[2746,100620+13]..[2746,100620+20])
                  ]
                expression (typing/typemod.ml[2747,100643+4]..[2759,101086+45])
                  Pexp_apply
                  expression (typing/typemod.ml[2747,100643+4]..[2747,100643+18])
                    Pexp_ident "List.fold_left" (typing/typemod.ml[2747,100643+4]..[2747,100643+18])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2748,100662+6]..[2758,101065+20])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[2748,100662+11]..[2748,100662+14])
                          Ppat_var "acc" (typing/typemod.ml[2748,100662+11]..[2748,100662+14])
                        expression (typing/typemod.ml[2748,100662+15]..[2758,101065+19]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[2748,100662+15]..[2748,100662+19])
                            Ppat_var "item" (typing/typemod.ml[2748,100662+15]..[2748,100662+19])
                          expression (typing/typemod.ml[2749,100685+9]..[2758,101065+19])
                            Pexp_match
                            expression (typing/typemod.ml[2749,100685+15]..[2749,100685+19])
                              Pexp_ident "item" (typing/typemod.ml[2749,100685+15]..[2749,100685+19])
                            [
                              <case>
                                pattern (typing/typemod.ml[2750,100710+11]..[2750,100710+32])
                                  Ppat_construct "Sig_type" (typing/typemod.ml[2750,100710+11]..[2750,100710+19])
                                  Some
                                    []
                                    pattern (typing/typemod.ml[2750,100710+19]..[2750,100710+32])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typemod.ml[2750,100710+20]..[2750,100710+22])
                                          Ppat_var "id" (typing/typemod.ml[2750,100710+20]..[2750,100710+22])
                                        pattern (typing/typemod.ml[2750,100710+24]..[2750,100710+25])
                                          Ppat_any
                                        pattern (typing/typemod.ml[2750,100710+27]..[2750,100710+28])
                                          Ppat_any
                                        pattern (typing/typemod.ml[2750,100710+30]..[2750,100710+31])
                                          Ppat_any
                                      ]
                                expression (typing/typemod.ml[2751,100746+13]..[2753,100855+27])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typemod.ml[2751,100746+17]..[2751,100746+31])
                                        Ppat_tuple
                                        [
                                          pattern (typing/typemod.ml[2751,100746+17]..[2751,100746+22])
                                            Ppat_var "types" (typing/typemod.ml[2751,100746+17]..[2751,100746+22])
                                          pattern (typing/typemod.ml[2751,100746+24]..[2751,100746+31])
                                            Ppat_var "modules" (typing/typemod.ml[2751,100746+24]..[2751,100746+31])
                                        ]
                                      expression (typing/typemod.ml[2751,100746+34]..[2751,100746+37])
                                        Pexp_ident "acc" (typing/typemod.ml[2751,100746+34]..[2751,100746+37])
                                  ]
                                  expression (typing/typemod.ml[2752,100787+13]..[2753,100855+27])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typemod.ml[2752,100787+17]..[2752,100787+22])
                                          Ppat_var "types" (typing/typemod.ml[2752,100787+17]..[2752,100787+22])
                                        expression (typing/typemod.ml[2752,100787+25]..[2752,100787+64])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2752,100787+25]..[2752,100787+39])
                                            Pexp_ident "String.Map.add" (typing/typemod.ml[2752,100787+25]..[2752,100787+39])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2752,100787+40]..[2752,100787+55])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2752,100787+41]..[2752,100787+51])
                                                  Pexp_ident "Ident.name" (typing/typemod.ml[2752,100787+41]..[2752,100787+51])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2752,100787+52]..[2752,100787+54])
                                                      Pexp_ident "id" (typing/typemod.ml[2752,100787+52]..[2752,100787+54])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2752,100787+56]..[2752,100787+58])
                                                Pexp_ident "id" (typing/typemod.ml[2752,100787+56]..[2752,100787+58])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2752,100787+59]..[2752,100787+64])
                                                Pexp_ident "types" (typing/typemod.ml[2752,100787+59]..[2752,100787+64])
                                          ]
                                    ]
                                    expression (typing/typemod.ml[2753,100855+13]..[2753,100855+27])
                                      Pexp_tuple
                                      [
                                        expression (typing/typemod.ml[2753,100855+13]..[2753,100855+18])
                                          Pexp_ident "types" (typing/typemod.ml[2753,100855+13]..[2753,100855+18])
                                        expression (typing/typemod.ml[2753,100855+20]..[2753,100855+27])
                                          Pexp_ident "modules" (typing/typemod.ml[2753,100855+20]..[2753,100855+27])
                                      ]
                              <case>
                                pattern (typing/typemod.ml[2754,100883+11]..[2754,100883+37])
                                  Ppat_construct "Sig_module" (typing/typemod.ml[2754,100883+11]..[2754,100883+21])
                                  Some
                                    []
                                    pattern (typing/typemod.ml[2754,100883+21]..[2754,100883+37])
                                      Ppat_tuple
                                      [
                                        pattern (typing/typemod.ml[2754,100883+22]..[2754,100883+24])
                                          Ppat_var "id" (typing/typemod.ml[2754,100883+22]..[2754,100883+24])
                                        pattern (typing/typemod.ml[2754,100883+26]..[2754,100883+27])
                                          Ppat_any
                                        pattern (typing/typemod.ml[2754,100883+29]..[2754,100883+30])
                                          Ppat_any
                                        pattern (typing/typemod.ml[2754,100883+32]..[2754,100883+33])
                                          Ppat_any
                                        pattern (typing/typemod.ml[2754,100883+35]..[2754,100883+36])
                                          Ppat_any
                                      ]
                                expression (typing/typemod.ml[2755,100924+13]..[2757,101037+27])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typemod.ml[2755,100924+17]..[2755,100924+31])
                                        Ppat_tuple
                                        [
                                          pattern (typing/typemod.ml[2755,100924+17]..[2755,100924+22])
                                            Ppat_var "types" (typing/typemod.ml[2755,100924+17]..[2755,100924+22])
                                          pattern (typing/typemod.ml[2755,100924+24]..[2755,100924+31])
                                            Ppat_var "modules" (typing/typemod.ml[2755,100924+24]..[2755,100924+31])
                                        ]
                                      expression (typing/typemod.ml[2755,100924+34]..[2755,100924+37])
                                        Pexp_ident "acc" (typing/typemod.ml[2755,100924+34]..[2755,100924+37])
                                  ]
                                  expression (typing/typemod.ml[2756,100965+13]..[2757,101037+27])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typemod.ml[2756,100965+17]..[2756,100965+24])
                                          Ppat_var "modules" (typing/typemod.ml[2756,100965+17]..[2756,100965+24])
                                        expression (typing/typemod.ml[2756,100965+27]..[2756,100965+68])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2756,100965+27]..[2756,100965+41])
                                            Pexp_ident "String.Map.add" (typing/typemod.ml[2756,100965+27]..[2756,100965+41])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2756,100965+42]..[2756,100965+57])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2756,100965+43]..[2756,100965+53])
                                                  Pexp_ident "Ident.name" (typing/typemod.ml[2756,100965+43]..[2756,100965+53])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2756,100965+54]..[2756,100965+56])
                                                      Pexp_ident "id" (typing/typemod.ml[2756,100965+54]..[2756,100965+56])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2756,100965+58]..[2756,100965+60])
                                                Pexp_ident "id" (typing/typemod.ml[2756,100965+58]..[2756,100965+60])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2756,100965+61]..[2756,100965+68])
                                                Pexp_ident "modules" (typing/typemod.ml[2756,100965+61]..[2756,100965+68])
                                          ]
                                    ]
                                    expression (typing/typemod.ml[2757,101037+13]..[2757,101037+27])
                                      Pexp_tuple
                                      [
                                        expression (typing/typemod.ml[2757,101037+13]..[2757,101037+18])
                                          Pexp_ident "types" (typing/typemod.ml[2757,101037+13]..[2757,101037+18])
                                        expression (typing/typemod.ml[2757,101037+20]..[2757,101037+27])
                                          Pexp_ident "modules" (typing/typemod.ml[2757,101037+20]..[2757,101037+27])
                                      ]
                              <case>
                                pattern (typing/typemod.ml[2758,101065+11]..[2758,101065+12])
                                  Ppat_any
                                expression (typing/typemod.ml[2758,101065+16]..[2758,101065+19])
                                  Pexp_ident "acc" (typing/typemod.ml[2758,101065+16]..[2758,101065+19])
                            ]
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2759,101086+6]..[2759,101086+42])
                        Pexp_tuple
                        [
                          expression (typing/typemod.ml[2759,101086+7]..[2759,101086+23])
                            Pexp_ident "String.Map.empty" (typing/typemod.ml[2759,101086+7]..[2759,101086+23])
                          expression (typing/typemod.ml[2759,101086+25]..[2759,101086+41])
                            Pexp_ident "String.Map.empty" (typing/typemod.ml[2759,101086+25]..[2759,101086+41])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2759,101086+43]..[2759,101086+45])
                        Pexp_ident "sg" (typing/typemod.ml[2759,101086+43]..[2759,101086+45])
                  ]
            ]
            expression (typing/typemod.ml[2761,101137+2]..[2770,101452+30])
              Pexp_let Rec
              [
                <def>
                  pattern (typing/typemod.ml[2761,101137+10]..[2761,101137+21])
                    Ppat_var "module_path" (typing/typemod.ml[2761,101137+10]..[2761,101137+21])
                  expression (typing/typemod.ml[2761,101137+24]..[2764,101278+30])
                    Pexp_function
                    [
                      <case>
                        pattern (typing/typemod.ml[2762,101170+6]..[2762,101170+17])
                          Ppat_construct "Lident" (typing/typemod.ml[2762,101170+6]..[2762,101170+12])
                          Some
                            []
                            pattern (typing/typemod.ml[2762,101170+13]..[2762,101170+17])
                              Ppat_var "name" (typing/typemod.ml[2762,101170+13]..[2762,101170+17])
                        expression (typing/typemod.ml[2762,101170+21]..[2762,101170+58])
                          Pexp_construct "Pident" (typing/typemod.ml[2762,101170+21]..[2762,101170+27])
                          Some
                            expression (typing/typemod.ml[2762,101170+28]..[2762,101170+58])
                              Pexp_apply
                              expression (typing/typemod.ml[2762,101170+29]..[2762,101170+44])
                                Pexp_ident "String.Map.find" (typing/typemod.ml[2762,101170+29]..[2762,101170+44])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2762,101170+45]..[2762,101170+49])
                                    Pexp_ident "name" (typing/typemod.ml[2762,101170+45]..[2762,101170+49])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2762,101170+50]..[2762,101170+57])
                                    Pexp_ident "modules" (typing/typemod.ml[2762,101170+50]..[2762,101170+57])
                              ]
                      <case>
                        pattern (typing/typemod.ml[2763,101229+6]..[2763,101229+19])
                          Ppat_construct "Ldot" (typing/typemod.ml[2763,101229+6]..[2763,101229+10])
                          Some
                            []
                            pattern (typing/typemod.ml[2763,101229+10]..[2763,101229+19])
                              Ppat_tuple
                              [
                                pattern (typing/typemod.ml[2763,101229+11]..[2763,101229+12])
                                  Ppat_var "m" (typing/typemod.ml[2763,101229+11]..[2763,101229+12])
                                pattern (typing/typemod.ml[2763,101229+14]..[2763,101229+18])
                                  Ppat_var "name" (typing/typemod.ml[2763,101229+14]..[2763,101229+18])
                              ]
                        expression (typing/typemod.ml[2763,101229+23]..[2763,101229+48])
                          Pexp_construct "Pdot" (typing/typemod.ml[2763,101229+23]..[2763,101229+27])
                          Some
                            expression (typing/typemod.ml[2763,101229+27]..[2763,101229+48])
                              Pexp_tuple
                              [
                                expression (typing/typemod.ml[2763,101229+28]..[2763,101229+41])
                                  Pexp_apply
                                  expression (typing/typemod.ml[2763,101229+28]..[2763,101229+39])
                                    Pexp_ident "module_path" (typing/typemod.ml[2763,101229+28]..[2763,101229+39])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2763,101229+40]..[2763,101229+41])
                                        Pexp_ident "m" (typing/typemod.ml[2763,101229+40]..[2763,101229+41])
                                  ]
                                expression (typing/typemod.ml[2763,101229+43]..[2763,101229+47])
                                  Pexp_ident "name" (typing/typemod.ml[2763,101229+43]..[2763,101229+47])
                              ]
                      <case>
                        pattern (typing/typemod.ml[2764,101278+6]..[2764,101278+14])
                          Ppat_construct "Lapply" (typing/typemod.ml[2764,101278+6]..[2764,101278+12])
                          Some
                            []
                            pattern (typing/typemod.ml[2764,101278+13]..[2764,101278+14])
                              Ppat_any
                        expression (typing/typemod.ml[2764,101278+18]..[2764,101278+30])
                          Pexp_assert
                          expression (typing/typemod.ml[2764,101278+25]..[2764,101278+30])
                            Pexp_construct "false" (typing/typemod.ml[2764,101278+25]..[2764,101278+30])
                            None
                    ]
              ]
              expression (typing/typemod.ml[2766,101314+2]..[2770,101452+30])
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2766,101314+6]..[2766,101314+9])
                  Ppat_var "lid" (typing/typemod.ml[2766,101314+6]..[2766,101314+9])
                expression (typing/typemod.ml[2767,101327+4]..[2770,101452+30])
                  Pexp_match
                  expression (typing/typemod.ml[2767,101327+10]..[2767,101327+13])
                    Pexp_ident "lid" (typing/typemod.ml[2767,101327+10]..[2767,101327+13])
                  [
                    <case>
                      pattern (typing/typemod.ml[2768,101346+6]..[2768,101346+17])
                        Ppat_construct "Lident" (typing/typemod.ml[2768,101346+6]..[2768,101346+12])
                        Some
                          []
                          pattern (typing/typemod.ml[2768,101346+13]..[2768,101346+17])
                            Ppat_var "name" (typing/typemod.ml[2768,101346+13]..[2768,101346+17])
                      expression (typing/typemod.ml[2768,101346+21]..[2768,101346+56])
                        Pexp_construct "Pident" (typing/typemod.ml[2768,101346+21]..[2768,101346+27])
                        Some
                          expression (typing/typemod.ml[2768,101346+28]..[2768,101346+56])
                            Pexp_apply
                            expression (typing/typemod.ml[2768,101346+29]..[2768,101346+44])
                              Pexp_ident "String.Map.find" (typing/typemod.ml[2768,101346+29]..[2768,101346+44])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2768,101346+45]..[2768,101346+49])
                                  Pexp_ident "name" (typing/typemod.ml[2768,101346+45]..[2768,101346+49])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2768,101346+50]..[2768,101346+55])
                                  Pexp_ident "types" (typing/typemod.ml[2768,101346+50]..[2768,101346+55])
                            ]
                    <case>
                      pattern (typing/typemod.ml[2769,101403+6]..[2769,101403+19])
                        Ppat_construct "Ldot" (typing/typemod.ml[2769,101403+6]..[2769,101403+10])
                        Some
                          []
                          pattern (typing/typemod.ml[2769,101403+10]..[2769,101403+19])
                            Ppat_tuple
                            [
                              pattern (typing/typemod.ml[2769,101403+11]..[2769,101403+12])
                                Ppat_var "m" (typing/typemod.ml[2769,101403+11]..[2769,101403+12])
                              pattern (typing/typemod.ml[2769,101403+14]..[2769,101403+18])
                                Ppat_var "name" (typing/typemod.ml[2769,101403+14]..[2769,101403+18])
                            ]
                      expression (typing/typemod.ml[2769,101403+23]..[2769,101403+48])
                        Pexp_construct "Pdot" (typing/typemod.ml[2769,101403+23]..[2769,101403+27])
                        Some
                          expression (typing/typemod.ml[2769,101403+27]..[2769,101403+48])
                            Pexp_tuple
                            [
                              expression (typing/typemod.ml[2769,101403+28]..[2769,101403+41])
                                Pexp_apply
                                expression (typing/typemod.ml[2769,101403+28]..[2769,101403+39])
                                  Pexp_ident "module_path" (typing/typemod.ml[2769,101403+28]..[2769,101403+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2769,101403+40]..[2769,101403+41])
                                      Pexp_ident "m" (typing/typemod.ml[2769,101403+40]..[2769,101403+41])
                                ]
                              expression (typing/typemod.ml[2769,101403+43]..[2769,101403+47])
                                Pexp_ident "name" (typing/typemod.ml[2769,101403+43]..[2769,101403+47])
                            ]
                    <case>
                      pattern (typing/typemod.ml[2770,101452+6]..[2770,101452+14])
                        Ppat_construct "Lapply" (typing/typemod.ml[2770,101452+6]..[2770,101452+12])
                        Some
                          []
                          pattern (typing/typemod.ml[2770,101452+13]..[2770,101452+14])
                            Ppat_any
                      expression (typing/typemod.ml[2770,101452+18]..[2770,101452+30])
                        Pexp_assert
                        expression (typing/typemod.ml[2770,101452+25]..[2770,101452+30])
                          Pexp_construct "false" (typing/typemod.ml[2770,101452+25]..[2770,101452+30])
                          None
                  ]
    ]
  structure_item (typing/typemod.ml[2772,101484+0]..[2833,103526+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2772,101484+4]..[2772,101484+16])
          Ppat_var "type_package" (typing/typemod.ml[2772,101484+4]..[2772,101484+16])
        expression (typing/typemod.ml[2772,101484+17]..[2833,103526+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2772,101484+17]..[2772,101484+20])
            Ppat_var "env" (typing/typemod.ml[2772,101484+17]..[2772,101484+20])
          expression (typing/typemod.ml[2772,101484+21]..[2833,103526+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2772,101484+21]..[2772,101484+22])
              Ppat_var "m" (typing/typemod.ml[2772,101484+21]..[2772,101484+22])
            expression (typing/typemod.ml[2772,101484+23]..[2833,103526+11]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2772,101484+23]..[2772,101484+24])
                Ppat_var "p" (typing/typemod.ml[2772,101484+23]..[2772,101484+24])
              expression (typing/typemod.ml[2772,101484+25]..[2833,103526+11]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2772,101484+25]..[2772,101484+27])
                  Ppat_var "fl" (typing/typemod.ml[2772,101484+25]..[2772,101484+27])
                expression (typing/typemod.ml[2775,101577+2]..[2833,103526+11])
                  Pexp_sequence
                  expression (typing/typemod.ml[2775,101577+2]..[2775,101577+20])
                    Pexp_apply
                    expression (typing/typemod.ml[2775,101577+2]..[2775,101577+17])
                      Pexp_ident "Ctype.begin_def" (typing/typemod.ml[2775,101577+2]..[2775,101577+17])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[2775,101577+18]..[2775,101577+20])
                          Pexp_construct "()" (typing/typemod.ml[2775,101577+18]..[2775,101577+20])
                          None
                    ]
                  expression (typing/typemod.ml[2776,101599+2]..[2833,103526+11])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[2776,101599+6]..[2776,101599+13])
                          Ppat_var "context" (typing/typemod.ml[2776,101599+6]..[2776,101599+13])
                        expression (typing/typemod.ml[2776,101599+16]..[2776,101599+34])
                          Pexp_apply
                          expression (typing/typemod.ml[2776,101599+16]..[2776,101599+31])
                            Pexp_ident "Typetexp.narrow" (typing/typemod.ml[2776,101599+16]..[2776,101599+31])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[2776,101599+32]..[2776,101599+34])
                                Pexp_construct "()" (typing/typemod.ml[2776,101599+32]..[2776,101599+34])
                                None
                          ]
                    ]
                    expression (typing/typemod.ml[2777,101637+2]..[2833,103526+11])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[2777,101637+6]..[2777,101637+10])
                            Ppat_var "modl" (typing/typemod.ml[2777,101637+6]..[2777,101637+10])
                          expression (typing/typemod.ml[2777,101637+13]..[2777,101637+30])
                            Pexp_apply
                            expression (typing/typemod.ml[2777,101637+13]..[2777,101637+24])
                              Pexp_ident "type_module" (typing/typemod.ml[2777,101637+13]..[2777,101637+24])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2777,101637+25]..[2777,101637+28])
                                  Pexp_ident "env" (typing/typemod.ml[2777,101637+25]..[2777,101637+28])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2777,101637+29]..[2777,101637+30])
                                  Pexp_ident "m" (typing/typemod.ml[2777,101637+29]..[2777,101637+30])
                            ]
                      ]
                      expression (typing/typemod.ml[2778,101671+2]..[2833,103526+11])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typemod.ml[2778,101671+6]..[2778,101671+11])
                              Ppat_var "scope" (typing/typemod.ml[2778,101671+6]..[2778,101671+11])
                            expression (typing/typemod.ml[2778,101671+14]..[2778,101671+35])
                              Pexp_apply
                              expression (typing/typemod.ml[2778,101671+14]..[2778,101671+32])
                                Pexp_ident "Ctype.create_scope" (typing/typemod.ml[2778,101671+14]..[2778,101671+32])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2778,101671+33]..[2778,101671+35])
                                    Pexp_construct "()" (typing/typemod.ml[2778,101671+33]..[2778,101671+35])
                                    None
                              ]
                        ]
                        expression (typing/typemod.ml[2779,101710+2]..[2833,103526+11])
                          Pexp_sequence
                          expression (typing/typemod.ml[2779,101710+2]..[2779,101710+24])
                            Pexp_apply
                            expression (typing/typemod.ml[2779,101710+2]..[2779,101710+16])
                              Pexp_ident "Typetexp.widen" (typing/typemod.ml[2779,101710+2]..[2779,101710+16])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2779,101710+17]..[2779,101710+24])
                                  Pexp_ident "context" (typing/typemod.ml[2779,101710+17]..[2779,101710+24])
                            ]
                          expression (typing/typemod.ml[2780,101736+2]..[2833,103526+11])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[2780,101736+6]..[2780,101736+14])
                                  Ppat_tuple
                                  [
                                    pattern (typing/typemod.ml[2780,101736+6]..[2780,101736+9])
                                      Ppat_var "fl'" (typing/typemod.ml[2780,101736+6]..[2780,101736+9])
                                    pattern (typing/typemod.ml[2780,101736+11]..[2780,101736+14])
                                      Ppat_var "env" (typing/typemod.ml[2780,101736+11]..[2780,101736+14])
                                  ]
                                expression (typing/typemod.ml[2781,101753+4]..[2818,103103+14])
                                  Pexp_match
                                  expression (typing/typemod.ml[2781,101753+10]..[2781,101753+12])
                                    Pexp_ident "fl" (typing/typemod.ml[2781,101753+10]..[2781,101753+12])
                                  [
                                    <case>
                                      pattern (typing/typemod.ml[2782,101771+6]..[2782,101771+8])
                                        Ppat_construct "[]" (typing/typemod.ml[2782,101771+6]..[2782,101771+8])
                                        None
                                      expression (typing/typemod.ml[2782,101771+12]..[2782,101771+19])
                                        Pexp_tuple
                                        [
                                          expression (typing/typemod.ml[2782,101771+12]..[2782,101771+14])
                                            Pexp_construct "[]" (typing/typemod.ml[2782,101771+12]..[2782,101771+14])
                                            None
                                          expression (typing/typemod.ml[2782,101771+16]..[2782,101771+19])
                                            Pexp_ident "env" (typing/typemod.ml[2782,101771+16]..[2782,101771+19])
                                        ]
                                    <case>
                                      pattern (typing/typemod.ml[2783,101791+6]..[2783,101791+8])
                                        Ppat_var "fl" (typing/typemod.ml[2783,101791+6]..[2783,101791+8])
                                      expression (typing/typemod.ml[2784,101803+6]..[2818,103103+14])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[2784,101803+10]..[2784,101803+24])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typemod.ml[2784,101803+10]..[2784,101803+19])
                                                  Ppat_var "type_path" (typing/typemod.ml[2784,101803+10]..[2784,101803+19])
                                                pattern (typing/typemod.ml[2784,101803+21]..[2784,101803+24])
                                                  Ppat_var "env" (typing/typemod.ml[2784,101803+21]..[2784,101803+24])
                                              ]
                                            expression (typing/typemod.ml[2785,101830+8]..[2798,102452+36])
                                              Pexp_match
                                              expression (typing/typemod.ml[2785,101830+14]..[2785,101830+27])
                                                Pexp_field
                                                expression (typing/typemod.ml[2785,101830+14]..[2785,101830+18])
                                                  Pexp_ident "modl" (typing/typemod.ml[2785,101830+14]..[2785,101830+18])
                                                "mod_desc" (typing/typemod.ml[2785,101830+19]..[2785,101830+27])
                                              [
                                                <case>
                                                  pattern (typing/typemod.ml[2786,101863+10]..[2788,101917+67])
                                                    Ppat_or
                                                    pattern (typing/typemod.ml[2786,101863+10]..[2786,101863+27])
                                                      Ppat_construct "Tmod_ident" (typing/typemod.ml[2786,101863+10]..[2786,101863+20])
                                                      Some
                                                        []
                                                        pattern (typing/typemod.ml[2786,101863+21]..[2786,101863+27])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/typemod.ml[2786,101863+22]..[2786,101863+24])
                                                              Ppat_var "mp" (typing/typemod.ml[2786,101863+22]..[2786,101863+24])
                                                            pattern (typing/typemod.ml[2786,101863+25]..[2786,101863+26])
                                                              Ppat_any
                                                          ]
                                                    pattern (typing/typemod.ml[2787,101891+10]..[2788,101917+67])
                                                      Ppat_construct "Tmod_constraint" (typing/typemod.ml[2787,101891+10]..[2787,101891+25])
                                                      Some
                                                        []
                                                        pattern (typing/typemod.ml[2788,101917+12]..[2788,101917+67])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/typemod.ml[2788,101917+13]..[2788,101917+41])
                                                              Ppat_record Closed
                                                              [
                                                                "mod_desc" (typing/typemod.ml[2788,101917+14]..[2788,101917+22])
                                                                  pattern (typing/typemod.ml[2788,101917+23]..[2788,101917+40])
                                                                    Ppat_construct "Tmod_ident" (typing/typemod.ml[2788,101917+23]..[2788,101917+33])
                                                                    Some
                                                                      []
                                                                      pattern (typing/typemod.ml[2788,101917+34]..[2788,101917+40])
Ppat_tuple
[
  pattern (typing/typemod.ml[2788,101917+35]..[2788,101917+37])
    Ppat_var "mp" (typing/typemod.ml[2788,101917+35]..[2788,101917+37])
  pattern (typing/typemod.ml[2788,101917+38]..[2788,101917+39])
    Ppat_any
]
                                                              ]
                                                            pattern (typing/typemod.ml[2788,101917+43]..[2788,101917+44])
                                                              Ppat_any
                                                            pattern (typing/typemod.ml[2788,101917+46]..[2788,101917+63])
                                                              Ppat_construct "Tmodtype_implicit" (typing/typemod.ml[2788,101917+46]..[2788,101917+63])
                                                              None
                                                            pattern (typing/typemod.ml[2788,101917+65]..[2788,101917+66])
                                                              Ppat_any
                                                          ]
                                                  expression (typing/typemod.ml[2794,102276+10]..[2794,102276+29])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[2794,102276+10]..[2794,102276+24])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2794,102276+10]..[2794,102276+21])
                                                          Pexp_ident "extend_path" (typing/typemod.ml[2794,102276+10]..[2794,102276+21])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2794,102276+22]..[2794,102276+24])
                                                              Pexp_ident "mp" (typing/typemod.ml[2794,102276+22]..[2794,102276+24])
                                                        ]
                                                      expression (typing/typemod.ml[2794,102276+26]..[2794,102276+29])
                                                        Pexp_ident "env" (typing/typemod.ml[2794,102276+26]..[2794,102276+29])
                                                    ]
                                                <case>
                                                  pattern (typing/typemod.ml[2795,102306+10]..[2795,102306+11])
                                                    Ppat_any
                                                  expression (typing/typemod.ml[2796,102321+10]..[2798,102452+36])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typemod.ml[2796,102321+14]..[2796,102321+16])
                                                          Ppat_var "sg" (typing/typemod.ml[2796,102321+14]..[2796,102321+16])
                                                        expression (typing/typemod.ml[2796,102321+19]..[2796,102321+66])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[2796,102321+19]..[2796,102321+35])
                                                            Pexp_ident "extract_sig_open" (typing/typemod.ml[2796,102321+19]..[2796,102321+35])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2796,102321+36]..[2796,102321+39])
                                                                Pexp_ident "env" (typing/typemod.ml[2796,102321+36]..[2796,102321+39])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2796,102321+40]..[2796,102321+52])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[2796,102321+40]..[2796,102321+44])
                                                                  Pexp_ident "modl" (typing/typemod.ml[2796,102321+40]..[2796,102321+44])
                                                                "mod_loc" (typing/typemod.ml[2796,102321+45]..[2796,102321+52])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2796,102321+53]..[2796,102321+66])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[2796,102321+53]..[2796,102321+57])
                                                                  Pexp_ident "modl" (typing/typemod.ml[2796,102321+53]..[2796,102321+57])
                                                                "mod_type" (typing/typemod.ml[2796,102321+58]..[2796,102321+66])
                                                          ]
                                                    ]
                                                    expression (typing/typemod.ml[2797,102391+10]..[2798,102452+36])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/typemod.ml[2797,102391+14]..[2797,102391+21])
                                                            Ppat_tuple
                                                            [
                                                              pattern (typing/typemod.ml[2797,102391+14]..[2797,102391+16])
                                                                Ppat_var "sg" (typing/typemod.ml[2797,102391+14]..[2797,102391+16])
                                                              pattern (typing/typemod.ml[2797,102391+18]..[2797,102391+21])
                                                                Ppat_var "env" (typing/typemod.ml[2797,102391+18]..[2797,102391+21])
                                                            ]
                                                          expression (typing/typemod.ml[2797,102391+24]..[2797,102391+57])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[2797,102391+24]..[2797,102391+43])
                                                              Pexp_ident "Env.enter_signature" (typing/typemod.ml[2797,102391+24]..[2797,102391+43])
                                                            [
                                                              <arg>
                                                              Labelled "scope"
                                                                expression (typing/typemod.ml[2797,102391+45]..[2797,102391+50])
                                                                  Pexp_ident "scope" (typing/typemod.ml[2797,102391+45]..[2797,102391+50])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2797,102391+51]..[2797,102391+53])
                                                                  Pexp_ident "sg" (typing/typemod.ml[2797,102391+51]..[2797,102391+53])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2797,102391+54]..[2797,102391+57])
                                                                  Pexp_ident "env" (typing/typemod.ml[2797,102391+54]..[2797,102391+57])
                                                            ]
                                                      ]
                                                      expression (typing/typemod.ml[2798,102452+10]..[2798,102452+36])
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/typemod.ml[2798,102452+10]..[2798,102452+31])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[2798,102452+10]..[2798,102452+28])
                                                              Pexp_ident "lookup_type_in_sig" (typing/typemod.ml[2798,102452+10]..[2798,102452+28])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2798,102452+29]..[2798,102452+31])
                                                                  Pexp_ident "sg" (typing/typemod.ml[2798,102452+29]..[2798,102452+31])
                                                            ]
                                                          expression (typing/typemod.ml[2798,102452+33]..[2798,102452+36])
                                                            Pexp_ident "env" (typing/typemod.ml[2798,102452+33]..[2798,102452+36])
                                                        ]
                                              ]
                                        ]
                                        expression (typing/typemod.ml[2800,102498+6]..[2818,103103+14])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/typemod.ml[2800,102498+10]..[2800,102498+13])
                                                Ppat_var "fl'" (typing/typemod.ml[2800,102498+10]..[2800,102498+13])
                                              expression (typing/typemod.ml[2801,102514+8]..[2816,103078+15])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2801,102514+8]..[2801,102514+23])
                                                  Pexp_ident "List.fold_right" (typing/typemod.ml[2801,102514+8]..[2801,102514+23])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2802,102538+10]..[2815,103058+19])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (typing/typemod.ml[2802,102538+15]..[2802,102538+24])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typemod.ml[2802,102538+16]..[2802,102538+19])
                                                            Ppat_var "lid" (typing/typemod.ml[2802,102538+16]..[2802,102538+19])
                                                          pattern (typing/typemod.ml[2802,102538+21]..[2802,102538+23])
                                                            Ppat_var "_t" (typing/typemod.ml[2802,102538+21]..[2802,102538+23])
                                                        ]
                                                      expression (typing/typemod.ml[2802,102538+25]..[2815,103058+18]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (typing/typemod.ml[2802,102538+25]..[2802,102538+27])
                                                          Ppat_var "fl" (typing/typemod.ml[2802,102538+25]..[2802,102538+27])
                                                        expression (typing/typemod.ml[2803,102569+13]..[2815,103058+18])
                                                          Pexp_match
                                                          expression (typing/typemod.ml[2803,102569+19]..[2803,102569+32])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[2803,102569+19]..[2803,102569+28])
                                                              Pexp_ident "type_path" (typing/typemod.ml[2803,102569+19]..[2803,102569+28])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2803,102569+29]..[2803,102569+32])
                                                                  Pexp_ident "lid" (typing/typemod.ml[2803,102569+29]..[2803,102569+32])
                                                            ]
                                                          [
                                                            <case>
                                                              pattern (typing/typemod.ml[2804,102607+15]..[2804,102607+34])
                                                                Ppat_exception
                                                                pattern (typing/typemod.ml[2804,102607+25]..[2804,102607+34])
                                                                  Ppat_construct "Not_found" (typing/typemod.ml[2804,102607+25]..[2804,102607+34])
                                                                  None
                                                              expression (typing/typemod.ml[2804,102607+38]..[2804,102607+40])
                                                                Pexp_ident "fl" (typing/typemod.ml[2804,102607+38]..[2804,102607+40])
                                                            <case>
                                                              pattern (typing/typemod.ml[2805,102648+15]..[2805,102648+19])
                                                                Ppat_var "path" (typing/typemod.ml[2805,102648+15]..[2805,102648+19])
                                                              expression (typing/typemod.ml[2805,102648+23]..[2815,103058+18])
                                                                Pexp_match
                                                                expression (typing/typemod.ml[2806,102677+23]..[2806,102677+45])
                                                                  Pexp_apply
                                                                  expression (typing/typemod.ml[2806,102677+23]..[2806,102677+36])
                                                                    Pexp_ident "Env.find_type" (typing/typemod.ml[2806,102677+23]..[2806,102677+36])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[2806,102677+37]..[2806,102677+41])
Pexp_ident "path" (typing/typemod.ml[2806,102677+37]..[2806,102677+41])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[2806,102677+42]..[2806,102677+45])
Pexp_ident "env" (typing/typemod.ml[2806,102677+42]..[2806,102677+45])
                                                                  ]
                                                                [
                                                                  <case>
                                                                    pattern (typing/typemod.ml[2807,102728+19]..[2807,102728+38])
                                                                      Ppat_exception
                                                                      pattern (typing/typemod.ml[2807,102728+29]..[2807,102728+38])
Ppat_construct "Not_found" (typing/typemod.ml[2807,102728+29]..[2807,102728+38])
None
                                                                    expression (typing/typemod.ml[2807,102728+42]..[2807,102728+44])
                                                                      Pexp_ident "fl" (typing/typemod.ml[2807,102728+42]..[2807,102728+44])
                                                                  <case>
                                                                    pattern (typing/typemod.ml[2808,102773+19]..[2808,102773+23])
                                                                      Ppat_var "decl" (typing/typemod.ml[2808,102773+19]..[2808,102773+23])
                                                                    expression (typing/typemod.ml[2809,102800+21]..[2814,103033+24])
                                                                      Pexp_ifthenelse
                                                                      expression (typing/typemod.ml[2809,102800+24]..[2809,102800+43])
Pexp_apply
expression (typing/typemod.ml[2809,102800+40]..[2809,102800+41])
  Pexp_ident ">" (typing/typemod.ml[2809,102800+40]..[2809,102800+41])
[
  <arg>
  Nolabel
    expression (typing/typemod.ml[2809,102800+24]..[2809,102800+39])
      Pexp_field
      expression (typing/typemod.ml[2809,102800+24]..[2809,102800+28])
        Pexp_ident "decl" (typing/typemod.ml[2809,102800+24]..[2809,102800+28])
      "type_arity" (typing/typemod.ml[2809,102800+29]..[2809,102800+39])
  <arg>
  Nolabel
    expression (typing/typemod.ml[2809,102800+42]..[2809,102800+43])
      Pexp_constant PConst_int (0,None)
]
                                                                      expression (typing/typemod.ml[2809,102800+49]..[2811,102881+24])
Pexp_ident "fl" (typing/typemod.ml[2810,102855+23]..[2810,102855+25])
                                                                      Some
expression (typing/typemod.ml[2811,102881+30]..[2814,103033+24])
  Pexp_let Nonrec
  [
    <def>
      pattern (typing/typemod.ml[2812,102917+27]..[2812,102917+28])
        Ppat_var "t" (typing/typemod.ml[2812,102917+27]..[2812,102917+28])
      expression (typing/typemod.ml[2812,102917+31]..[2812,102917+74])
        Pexp_apply
        expression (typing/typemod.ml[2812,102917+31]..[2812,102917+45])
          Pexp_ident "Btype.newgenty" (typing/typemod.ml[2812,102917+31]..[2812,102917+45])
        [
          <arg>
          Nolabel
            expression (typing/typemod.ml[2812,102917+46]..[2812,102917+74])
              Pexp_construct "Tconstr" (typing/typemod.ml[2812,102917+47]..[2812,102917+54])
              Some
                expression (typing/typemod.ml[2812,102917+55]..[2812,102917+73])
                  Pexp_tuple
                  [
                    expression (typing/typemod.ml[2812,102917+56]..[2812,102917+60])
                      Pexp_ident "path" (typing/typemod.ml[2812,102917+56]..[2812,102917+60])
                    expression (typing/typemod.ml[2812,102917+61]..[2812,102917+63])
                      Pexp_construct "[]" (typing/typemod.ml[2812,102917+61]..[2812,102917+63])
                      None
                    expression (typing/typemod.ml[2812,102917+64]..[2812,102917+72])
                      Pexp_apply
                      expression (typing/typemod.ml[2812,102917+64]..[2812,102917+67])
                        Pexp_ident "ref" (typing/typemod.ml[2812,102917+64]..[2812,102917+67])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2812,102917+68]..[2812,102917+72])
                            Pexp_construct "Mnil" (typing/typemod.ml[2812,102917+68]..[2812,102917+72])
                            None
                      ]
                  ]
        ]
  ]
  expression (typing/typemod.ml[2813,102995+23]..[2813,102995+37])
    Pexp_construct "::" (typing/typemod.ml[2813,102995+32]..[2813,102995+34])
    Some
      expression (typing/typemod.ml[2813,102995+23]..[2813,102995+37]) ghost
        Pexp_tuple
        [
          expression (typing/typemod.ml[2813,102995+23]..[2813,102995+31])
            Pexp_tuple
            [
              expression (typing/typemod.ml[2813,102995+24]..[2813,102995+27])
                Pexp_ident "lid" (typing/typemod.ml[2813,102995+24]..[2813,102995+27])
              expression (typing/typemod.ml[2813,102995+29]..[2813,102995+30])
                Pexp_ident "t" (typing/typemod.ml[2813,102995+29]..[2813,102995+30])
            ]
          expression (typing/typemod.ml[2813,102995+35]..[2813,102995+37])
            Pexp_ident "fl" (typing/typemod.ml[2813,102995+35]..[2813,102995+37])
        ]
                                                                ]
                                                          ]
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2816,103078+10]..[2816,103078+12])
                                                      Pexp_ident "fl" (typing/typemod.ml[2816,103078+10]..[2816,103078+12])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2816,103078+13]..[2816,103078+15])
                                                      Pexp_construct "[]" (typing/typemod.ml[2816,103078+13]..[2816,103078+15])
                                                      None
                                                ]
                                          ]
                                          expression (typing/typemod.ml[2818,103103+6]..[2818,103103+14])
                                            Pexp_tuple
                                            [
                                              expression (typing/typemod.ml[2818,103103+6]..[2818,103103+9])
                                                Pexp_ident "fl'" (typing/typemod.ml[2818,103103+6]..[2818,103103+9])
                                              expression (typing/typemod.ml[2818,103103+11]..[2818,103103+14])
                                                Pexp_ident "env" (typing/typemod.ml[2818,103103+11]..[2818,103103+14])
                                            ]
                                  ]
                            ]
                            expression (typing/typemod.ml[2821,103157+2]..[2833,103526+11])
                              Pexp_sequence
                              expression (typing/typemod.ml[2821,103157+2]..[2821,103157+18])
                                Pexp_apply
                                expression (typing/typemod.ml[2821,103157+2]..[2821,103157+15])
                                  Pexp_ident "Ctype.end_def" (typing/typemod.ml[2821,103157+2]..[2821,103157+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2821,103157+16]..[2821,103157+18])
                                      Pexp_construct "()" (typing/typemod.ml[2821,103157+16]..[2821,103157+18])
                                      None
                                ]
                              expression (typing/typemod.ml[2822,103177+2]..[2833,103526+11])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[2822,103177+6]..[2822,103177+9])
                                      Ppat_var "mty" (typing/typemod.ml[2822,103177+6]..[2822,103177+9])
                                    expression (typing/typemod.ml[2823,103189+4]..[2824,103223+50])
                                      Pexp_ifthenelse
                                      expression (typing/typemod.ml[2823,103189+7]..[2823,103189+14])
                                        Pexp_apply
                                        expression (typing/typemod.ml[2823,103189+10]..[2823,103189+11])
                                          Pexp_ident "=" (typing/typemod.ml[2823,103189+10]..[2823,103189+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[2823,103189+7]..[2823,103189+9])
                                              Pexp_ident "fl" (typing/typemod.ml[2823,103189+7]..[2823,103189+9])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[2823,103189+12]..[2823,103189+14])
                                              Pexp_construct "[]" (typing/typemod.ml[2823,103189+12]..[2823,103189+14])
                                              None
                                        ]
                                      expression (typing/typemod.ml[2823,103189+20]..[2823,103189+33])
                                        Pexp_construct "Mty_ident" (typing/typemod.ml[2823,103189+21]..[2823,103189+30])
                                        Some
                                          expression (typing/typemod.ml[2823,103189+31]..[2823,103189+32])
                                            Pexp_ident "p" (typing/typemod.ml[2823,103189+31]..[2823,103189+32])
                                      Some
                                        expression (typing/typemod.ml[2824,103223+9]..[2824,103223+50])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2824,103223+9]..[2824,103223+27])
                                            Pexp_ident "modtype_of_package" (typing/typemod.ml[2824,103223+9]..[2824,103223+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2824,103223+28]..[2824,103223+31])
                                                Pexp_ident "env" (typing/typemod.ml[2824,103223+28]..[2824,103223+31])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2824,103223+32]..[2824,103223+44])
                                                Pexp_field
                                                expression (typing/typemod.ml[2824,103223+32]..[2824,103223+36])
                                                  Pexp_ident "modl" (typing/typemod.ml[2824,103223+32]..[2824,103223+36])
                                                "mod_loc" (typing/typemod.ml[2824,103223+37]..[2824,103223+44])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2824,103223+45]..[2824,103223+46])
                                                Pexp_ident "p" (typing/typemod.ml[2824,103223+45]..[2824,103223+46])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2824,103223+47]..[2824,103223+50])
                                                Pexp_ident "fl'" (typing/typemod.ml[2824,103223+47]..[2824,103223+50])
                                          ]
                                ]
                                expression (typing/typemod.ml[2826,103279+2]..[2833,103526+11])
                                  Pexp_sequence
                                  expression (typing/typemod.ml[2826,103279+2]..[2831,103449+7])
                                    Pexp_apply
                                    expression (typing/typemod.ml[2826,103279+2]..[2826,103279+11])
                                      Pexp_ident "List.iter" (typing/typemod.ml[2826,103279+2]..[2826,103279+11])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2827,103291+4]..[2830,103386+62])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/typemod.ml[2827,103291+9]..[2827,103291+16])
                                            Ppat_tuple
                                            [
                                              pattern (typing/typemod.ml[2827,103291+10]..[2827,103291+11])
                                                Ppat_var "n" (typing/typemod.ml[2827,103291+10]..[2827,103291+11])
                                              pattern (typing/typemod.ml[2827,103291+13]..[2827,103291+15])
                                                Ppat_var "ty" (typing/typemod.ml[2827,103291+13]..[2827,103291+15])
                                            ]
                                          expression (typing/typemod.ml[2828,103311+6]..[2830,103386+61])
                                            Pexp_try
                                            expression (typing/typemod.ml[2828,103311+10]..[2828,103311+46])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2828,103311+10]..[2828,103311+21])
                                                Pexp_ident "Ctype.unify" (typing/typemod.ml[2828,103311+10]..[2828,103311+21])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2828,103311+22]..[2828,103311+25])
                                                    Pexp_ident "env" (typing/typemod.ml[2828,103311+22]..[2828,103311+25])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2828,103311+26]..[2828,103311+28])
                                                    Pexp_ident "ty" (typing/typemod.ml[2828,103311+26]..[2828,103311+28])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2828,103311+29]..[2828,103311+46])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[2828,103311+30]..[2828,103311+42])
                                                      Pexp_ident "Ctype.newvar" (typing/typemod.ml[2828,103311+30]..[2828,103311+42])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2828,103311+43]..[2828,103311+45])
                                                          Pexp_construct "()" (typing/typemod.ml[2828,103311+43]..[2828,103311+45])
                                                          None
                                                    ]
                                              ]
                                            [
                                              <case>
                                                pattern (typing/typemod.ml[2829,103358+11]..[2829,103358+24])
                                                  Ppat_construct "Ctype.Unify" (typing/typemod.ml[2829,103358+11]..[2829,103358+22])
                                                  Some
                                                    []
                                                    pattern (typing/typemod.ml[2829,103358+23]..[2829,103358+24])
                                                      Ppat_any
                                                expression (typing/typemod.ml[2830,103386+8]..[2830,103386+61])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2830,103386+8]..[2830,103386+13])
                                                    Pexp_ident "raise" (typing/typemod.ml[2830,103386+8]..[2830,103386+13])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2830,103386+14]..[2830,103386+61])
                                                        Pexp_construct "Error" (typing/typemod.ml[2830,103386+15]..[2830,103386+20])
                                                        Some
                                                          expression (typing/typemod.ml[2830,103386+20]..[2830,103386+60])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/typemod.ml[2830,103386+21]..[2830,103386+33])
                                                                Pexp_field
                                                                expression (typing/typemod.ml[2830,103386+21]..[2830,103386+25])
                                                                  Pexp_ident "modl" (typing/typemod.ml[2830,103386+21]..[2830,103386+25])
                                                                "mod_loc" (typing/typemod.ml[2830,103386+26]..[2830,103386+33])
                                                              expression (typing/typemod.ml[2830,103386+35]..[2830,103386+38])
                                                                Pexp_ident "env" (typing/typemod.ml[2830,103386+35]..[2830,103386+38])
                                                              expression (typing/typemod.ml[2830,103386+40]..[2830,103386+59])
                                                                Pexp_construct "Scoping_pack" (typing/typemod.ml[2830,103386+40]..[2830,103386+52])
                                                                Some
                                                                  expression (typing/typemod.ml[2830,103386+53]..[2830,103386+59])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/typemod.ml[2830,103386+54]..[2830,103386+55])
Pexp_ident "n" (typing/typemod.ml[2830,103386+54]..[2830,103386+55])
                                                                      expression (typing/typemod.ml[2830,103386+56]..[2830,103386+58])
Pexp_ident "ty" (typing/typemod.ml[2830,103386+56]..[2830,103386+58])
                                                                    ]
                                                            ]
                                                  ]
                                            ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[2831,103449+4]..[2831,103449+7])
                                          Pexp_ident "fl'" (typing/typemod.ml[2831,103449+4]..[2831,103449+7])
                                    ]
                                  expression (typing/typemod.ml[2832,103458+2]..[2833,103526+11])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typemod.ml[2832,103458+6]..[2832,103458+10])
                                          Ppat_var "modl" (typing/typemod.ml[2832,103458+6]..[2832,103458+10])
                                        expression (typing/typemod.ml[2832,103458+13]..[2832,103458+64])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2832,103458+13]..[2832,103458+28])
                                            Pexp_ident "wrap_constraint" (typing/typemod.ml[2832,103458+13]..[2832,103458+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2832,103458+29]..[2832,103458+32])
                                                Pexp_ident "env" (typing/typemod.ml[2832,103458+29]..[2832,103458+32])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2832,103458+33]..[2832,103458+37])
                                                Pexp_construct "true" (typing/typemod.ml[2832,103458+33]..[2832,103458+37])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2832,103458+38]..[2832,103458+42])
                                                Pexp_ident "modl" (typing/typemod.ml[2832,103458+38]..[2832,103458+42])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2832,103458+43]..[2832,103458+46])
                                                Pexp_ident "mty" (typing/typemod.ml[2832,103458+43]..[2832,103458+46])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2832,103458+47]..[2832,103458+64])
                                                Pexp_construct "Tmodtype_implicit" (typing/typemod.ml[2832,103458+47]..[2832,103458+64])
                                                None
                                          ]
                                    ]
                                    expression (typing/typemod.ml[2833,103526+2]..[2833,103526+11])
                                      Pexp_tuple
                                      [
                                        expression (typing/typemod.ml[2833,103526+2]..[2833,103526+6])
                                          Pexp_ident "modl" (typing/typemod.ml[2833,103526+2]..[2833,103526+6])
                                        expression (typing/typemod.ml[2833,103526+8]..[2833,103526+11])
                                          Pexp_ident "fl'" (typing/typemod.ml[2833,103526+8]..[2833,103526+11])
                                      ]
    ]
  structure_item (typing/typemod.ml[2837,103579+0]..[2839,103699+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2837,103579+4]..[2837,103579+18])
          Ppat_var "type_open_decl" (typing/typemod.ml[2837,103579+4]..[2837,103579+18])
        expression (typing/typemod.ml[2837,103579+19]..[2839,103699+6]) ghost
          Pexp_fun
          Optional "used_slot"
          None
          pattern (typing/typemod.ml[2837,103579+20]..[2837,103579+29])
            Ppat_var "used_slot" (typing/typemod.ml[2837,103579+20]..[2837,103579+29])
          expression (typing/typemod.ml[2837,103579+30]..[2839,103699+6]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2837,103579+30]..[2837,103579+33])
              Ppat_var "env" (typing/typemod.ml[2837,103579+30]..[2837,103579+33])
            expression (typing/typemod.ml[2837,103579+34]..[2839,103699+6]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2837,103579+34]..[2837,103579+36])
                Ppat_var "od" (typing/typemod.ml[2837,103579+34]..[2837,103579+36])
              expression (typing/typemod.ml[2838,103618+2]..[2839,103699+6])
                Pexp_apply
                expression (typing/typemod.ml[2838,103618+2]..[2838,103618+16])
                  Pexp_ident "type_open_decl" (typing/typemod.ml[2838,103618+2]..[2838,103618+16])
                [
                  <arg>
                  Optional "used_slot"
                    expression (typing/typemod.ml[2838,103618+18]..[2838,103618+27])
                      Pexp_ident "used_slot" (typing/typemod.ml[2838,103618+18]..[2838,103618+27])
                  <arg>
                  Optional "toplevel"
                    expression (typing/typemod.ml[2838,103618+38]..[2838,103618+42])
                      Pexp_construct "None" (typing/typemod.ml[2838,103618+38]..[2838,103618+42])
                      None
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2838,103618+43]..[2838,103618+48])
                      Pexp_construct "false" (typing/typemod.ml[2838,103618+43]..[2838,103618+48])
                      None
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2838,103618+49]..[2838,103618+76])
                      Pexp_apply
                      expression (typing/typemod.ml[2838,103618+50]..[2838,103618+72])
                        Pexp_ident "Signature_names.create" (typing/typemod.ml[2838,103618+50]..[2838,103618+72])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2838,103618+73]..[2838,103618+75])
                            Pexp_construct "()" (typing/typemod.ml[2838,103618+73]..[2838,103618+75])
                            None
                      ]
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2838,103618+77]..[2838,103618+80])
                      Pexp_ident "env" (typing/typemod.ml[2838,103618+77]..[2838,103618+80])
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2839,103699+4]..[2839,103699+6])
                      Pexp_ident "od" (typing/typemod.ml[2839,103699+4]..[2839,103699+6])
                ]
    ]
  structure_item (typing/typemod.ml[2841,103707+0]..[2842,103747+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2841,103707+4]..[2841,103707+19])
          Ppat_var "type_open_descr" (typing/typemod.ml[2841,103707+4]..[2841,103707+19])
        expression (typing/typemod.ml[2841,103707+20]..[2842,103747+50]) ghost
          Pexp_fun
          Optional "used_slot"
          None
          pattern (typing/typemod.ml[2841,103707+21]..[2841,103707+30])
            Ppat_var "used_slot" (typing/typemod.ml[2841,103707+21]..[2841,103707+30])
          expression (typing/typemod.ml[2841,103707+31]..[2842,103747+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2841,103707+31]..[2841,103707+34])
              Ppat_var "env" (typing/typemod.ml[2841,103707+31]..[2841,103707+34])
            expression (typing/typemod.ml[2841,103707+35]..[2842,103747+50]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2841,103707+35]..[2841,103707+37])
                Ppat_var "od" (typing/typemod.ml[2841,103707+35]..[2841,103707+37])
              expression (typing/typemod.ml[2842,103747+2]..[2842,103747+50])
                Pexp_apply
                expression (typing/typemod.ml[2842,103747+2]..[2842,103747+17])
                  Pexp_ident "type_open_descr" (typing/typemod.ml[2842,103747+2]..[2842,103747+17])
                [
                  <arg>
                  Optional "used_slot"
                    expression (typing/typemod.ml[2842,103747+19]..[2842,103747+28])
                      Pexp_ident "used_slot" (typing/typemod.ml[2842,103747+19]..[2842,103747+28])
                  <arg>
                  Optional "toplevel"
                    expression (typing/typemod.ml[2842,103747+39]..[2842,103747+43])
                      Pexp_construct "None" (typing/typemod.ml[2842,103747+39]..[2842,103747+43])
                      None
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2842,103747+44]..[2842,103747+47])
                      Pexp_ident "env" (typing/typemod.ml[2842,103747+44]..[2842,103747+47])
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2842,103747+48]..[2842,103747+50])
                      Pexp_ident "od" (typing/typemod.ml[2842,103747+48]..[2842,103747+50])
                ]
    ]
  structure_item (typing/typemod.ml[2844,103799+0]..[2852,104148+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2844,103799+4]..[2844,103799+6])
          Ppat_construct "()" (typing/typemod.ml[2844,103799+4]..[2844,103799+6])
          None
        expression (typing/typemod.ml[2845,103808+2]..[2852,104148+48])
          Pexp_sequence
          expression (typing/typemod.ml[2845,103808+2]..[2845,103808+43])
            Pexp_apply
            expression (typing/typemod.ml[2845,103808+23]..[2845,103808+25])
              Pexp_ident ":=" (typing/typemod.ml[2845,103808+23]..[2845,103808+25])
            [
              <arg>
              Nolabel
                expression (typing/typemod.ml[2845,103808+2]..[2845,103808+22])
                  Pexp_ident "Typecore.type_module" (typing/typemod.ml[2845,103808+2]..[2845,103808+22])
              <arg>
              Nolabel
                expression (typing/typemod.ml[2845,103808+26]..[2845,103808+43])
                  Pexp_ident "type_module_alias" (typing/typemod.ml[2845,103808+26]..[2845,103808+43])
            ]
          expression (typing/typemod.ml[2846,103853+2]..[2852,104148+48])
            Pexp_sequence
            expression (typing/typemod.ml[2846,103853+2]..[2846,103853+63])
              Pexp_apply
              expression (typing/typemod.ml[2846,103853+36]..[2846,103853+38])
                Pexp_ident ":=" (typing/typemod.ml[2846,103853+36]..[2846,103853+38])
              [
                <arg>
                Nolabel
                  expression (typing/typemod.ml[2846,103853+2]..[2846,103853+35])
                    Pexp_ident "Typetexp.transl_modtype_longident" (typing/typemod.ml[2846,103853+2]..[2846,103853+35])
                <arg>
                Nolabel
                  expression (typing/typemod.ml[2846,103853+39]..[2846,103853+63])
                    Pexp_ident "transl_modtype_longident" (typing/typemod.ml[2846,103853+39]..[2846,103853+63])
              ]
            expression (typing/typemod.ml[2847,103918+2]..[2852,104148+48])
              Pexp_sequence
              expression (typing/typemod.ml[2847,103918+2]..[2847,103918+43])
                Pexp_apply
                expression (typing/typemod.ml[2847,103918+26]..[2847,103918+28])
                  Pexp_ident ":=" (typing/typemod.ml[2847,103918+26]..[2847,103918+28])
                [
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2847,103918+2]..[2847,103918+25])
                      Pexp_ident "Typetexp.transl_modtype" (typing/typemod.ml[2847,103918+2]..[2847,103918+25])
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2847,103918+29]..[2847,103918+43])
                      Pexp_ident "transl_modtype" (typing/typemod.ml[2847,103918+29]..[2847,103918+43])
                ]
              expression (typing/typemod.ml[2848,103963+2]..[2852,104148+48])
                Pexp_sequence
                expression (typing/typemod.ml[2848,103963+2]..[2848,103963+49])
                  Pexp_apply
                  expression (typing/typemod.ml[2848,103963+21]..[2848,103963+23])
                    Pexp_ident ":=" (typing/typemod.ml[2848,103963+21]..[2848,103963+23])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2848,103963+2]..[2848,103963+20])
                        Pexp_ident "Typecore.type_open" (typing/typemod.ml[2848,103963+2]..[2848,103963+20])
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2848,103963+24]..[2848,103963+49])
                        Pexp_apply
                        expression (typing/typemod.ml[2848,103963+24]..[2848,103963+34])
                          Pexp_ident "type_open_" (typing/typemod.ml[2848,103963+24]..[2848,103963+34])
                        [
                          <arg>
                          Optional "toplevel"
                            expression (typing/typemod.ml[2848,103963+45]..[2848,103963+49])
                              Pexp_construct "None" (typing/typemod.ml[2848,103963+45]..[2848,103963+49])
                              None
                        ]
                  ]
                expression (typing/typemod.ml[2849,104014+2]..[2852,104148+48])
                  Pexp_sequence
                  expression (typing/typemod.ml[2849,104014+2]..[2849,104014+43])
                    Pexp_apply
                    expression (typing/typemod.ml[2849,104014+26]..[2849,104014+28])
                      Pexp_ident ":=" (typing/typemod.ml[2849,104014+26]..[2849,104014+28])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[2849,104014+2]..[2849,104014+25])
                          Pexp_ident "Typecore.type_open_decl" (typing/typemod.ml[2849,104014+2]..[2849,104014+25])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[2849,104014+29]..[2849,104014+43])
                          Pexp_ident "type_open_decl" (typing/typemod.ml[2849,104014+29]..[2849,104014+43])
                    ]
                  expression (typing/typemod.ml[2850,104059+2]..[2852,104148+48])
                    Pexp_sequence
                    expression (typing/typemod.ml[2850,104059+2]..[2850,104059+39])
                      Pexp_apply
                      expression (typing/typemod.ml[2850,104059+24]..[2850,104059+26])
                        Pexp_ident ":=" (typing/typemod.ml[2850,104059+24]..[2850,104059+26])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2850,104059+2]..[2850,104059+23])
                            Pexp_ident "Typecore.type_package" (typing/typemod.ml[2850,104059+2]..[2850,104059+23])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2850,104059+27]..[2850,104059+39])
                            Pexp_ident "type_package" (typing/typemod.ml[2850,104059+27]..[2850,104059+39])
                      ]
                    expression (typing/typemod.ml[2851,104100+2]..[2852,104148+48])
                      Pexp_sequence
                      expression (typing/typemod.ml[2851,104100+2]..[2851,104100+46])
                        Pexp_apply
                        expression (typing/typemod.ml[2851,104100+28]..[2851,104100+30])
                          Pexp_ident ":=" (typing/typemod.ml[2851,104100+28]..[2851,104100+30])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[2851,104100+2]..[2851,104100+27])
                              Pexp_ident "Typeclass.type_open_descr" (typing/typemod.ml[2851,104100+2]..[2851,104100+27])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[2851,104100+31]..[2851,104100+46])
                              Pexp_ident "type_open_descr" (typing/typemod.ml[2851,104100+31]..[2851,104100+46])
                        ]
                      expression (typing/typemod.ml[2852,104148+2]..[2852,104148+48])
                        Pexp_apply
                        expression (typing/typemod.ml[2852,104148+26]..[2852,104148+28])
                          Pexp_ident ":=" (typing/typemod.ml[2852,104148+26]..[2852,104148+28])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[2852,104148+2]..[2852,104148+25])
                              Pexp_ident "type_module_type_of_fwd" (typing/typemod.ml[2852,104148+2]..[2852,104148+25])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[2852,104148+29]..[2852,104148+48])
                              Pexp_ident "type_module_type_of" (typing/typemod.ml[2852,104148+29]..[2852,104148+48])
                        ]
    ]
  structure_item (typing/typemod.ml[2857,104239+0]..[2859,104341+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2857,104239+4]..[2857,104239+13])
          Ppat_var "gen_annot" (typing/typemod.ml[2857,104239+4]..[2857,104239+13])
        expression (typing/typemod.ml[2857,104239+14]..[2859,104341+61]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2857,104239+14]..[2857,104239+26])
            Ppat_var "outputprefix" (typing/typemod.ml[2857,104239+14]..[2857,104239+26])
          expression (typing/typemod.ml[2857,104239+27]..[2859,104341+61]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2857,104239+27]..[2857,104239+37])
              Ppat_var "sourcefile" (typing/typemod.ml[2857,104239+27]..[2857,104239+37])
            expression (typing/typemod.ml[2857,104239+38]..[2859,104341+61]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2857,104239+38]..[2857,104239+44])
                Ppat_var "annots" (typing/typemod.ml[2857,104239+38]..[2857,104239+44])
              expression (typing/typemod.ml[2858,104286+2]..[2859,104341+61])
                Pexp_apply
                expression (typing/typemod.ml[2858,104286+2]..[2858,104286+21])
                  Pexp_ident "Cmt2annot.gen_annot" (typing/typemod.ml[2858,104286+2]..[2858,104286+21])
                [
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2858,104286+22]..[2858,104286+54])
                      Pexp_construct "Some" (typing/typemod.ml[2858,104286+23]..[2858,104286+27])
                      Some
                        expression (typing/typemod.ml[2858,104286+28]..[2858,104286+53])
                          Pexp_apply
                          expression (typing/typemod.ml[2858,104286+42]..[2858,104286+43])
                            Pexp_ident "^" (typing/typemod.ml[2858,104286+42]..[2858,104286+43])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[2858,104286+29]..[2858,104286+41])
                                Pexp_ident "outputprefix" (typing/typemod.ml[2858,104286+29]..[2858,104286+41])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[2858,104286+44]..[2858,104286+52])
                                Pexp_constant PConst_string(".annot",(typing/typemod.ml[2858,104286+45]..[2858,104286+51]),None)
                          ]
                  <arg>
                  Labelled "sourcefile"
                    expression (typing/typemod.ml[2859,104341+16]..[2859,104341+33])
                      Pexp_construct "Some" (typing/typemod.ml[2859,104341+17]..[2859,104341+21])
                      Some
                        expression (typing/typemod.ml[2859,104341+22]..[2859,104341+32])
                          Pexp_ident "sourcefile" (typing/typemod.ml[2859,104341+22]..[2859,104341+32])
                  <arg>
                  Labelled "use_summaries"
                    expression (typing/typemod.ml[2859,104341+49]..[2859,104341+54])
                      Pexp_construct "false" (typing/typemod.ml[2859,104341+49]..[2859,104341+54])
                      None
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2859,104341+55]..[2859,104341+61])
                      Pexp_ident "annots" (typing/typemod.ml[2859,104341+55]..[2859,104341+61])
                ]
    ]
  structure_item (typing/typemod.ml[2861,104404+0]..[2949,108286+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2861,104404+4]..[2861,104404+23])
          Ppat_var "type_implementation" (typing/typemod.ml[2861,104404+4]..[2861,104404+23])
        expression (typing/typemod.ml[2861,104404+24]..[2949,108286+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2861,104404+24]..[2861,104404+34])
            Ppat_var "sourcefile" (typing/typemod.ml[2861,104404+24]..[2861,104404+34])
          expression (typing/typemod.ml[2861,104404+35]..[2949,108286+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2861,104404+35]..[2861,104404+47])
              Ppat_var "outputprefix" (typing/typemod.ml[2861,104404+35]..[2861,104404+47])
            expression (typing/typemod.ml[2861,104404+48]..[2949,108286+7]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2861,104404+48]..[2861,104404+58])
                Ppat_var "modulename" (typing/typemod.ml[2861,104404+48]..[2861,104404+58])
              expression (typing/typemod.ml[2861,104404+59]..[2949,108286+7]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2861,104404+59]..[2861,104404+70])
                  Ppat_var "initial_env" (typing/typemod.ml[2861,104404+59]..[2861,104404+70])
                expression (typing/typemod.ml[2861,104404+71]..[2949,108286+7]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[2861,104404+71]..[2861,104404+74])
                    Ppat_var "ast" (typing/typemod.ml[2861,104404+71]..[2861,104404+74])
                  expression (typing/typemod.ml[2862,104481+2]..[2949,108286+7])
                    Pexp_sequence
                    expression (typing/typemod.ml[2862,104481+2]..[2862,104481+21])
                      Pexp_apply
                      expression (typing/typemod.ml[2862,104481+2]..[2862,104481+18])
                        Pexp_ident "Cmt_format.clear" (typing/typemod.ml[2862,104481+2]..[2862,104481+18])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2862,104481+19]..[2862,104481+21])
                            Pexp_construct "()" (typing/typemod.ml[2862,104481+19]..[2862,104481+21])
                            None
                      ]
                    expression (typing/typemod.ml[2863,104504+2]..[2949,108286+7])
                      Pexp_apply
                      expression (typing/typemod.ml[2863,104504+2]..[2863,104504+18])
                        Pexp_ident "Misc.try_finally" (typing/typemod.ml[2863,104504+2]..[2863,104504+18])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2863,104504+19]..[2940,107948+5])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[2863,104504+24]..[2863,104504+26])
                              Ppat_construct "()" (typing/typemod.ml[2863,104504+24]..[2863,104504+26])
                              None
                            expression (typing/typemod.ml[2864,104534+6]..[2939,107938+9])
                              Pexp_sequence
                              expression (typing/typemod.ml[2864,104534+6]..[2864,104534+38])
                                Pexp_apply
                                expression (typing/typemod.ml[2864,104534+6]..[2864,104534+35])
                                  Pexp_ident "Typecore.reset_delayed_checks" (typing/typemod.ml[2864,104534+6]..[2864,104534+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2864,104534+36]..[2864,104534+38])
                                      Pexp_construct "()" (typing/typemod.ml[2864,104534+36]..[2864,104534+38])
                                      None
                                ]
                              expression (typing/typemod.ml[2865,104574+6]..[2939,107938+9])
                                Pexp_sequence
                                expression (typing/typemod.ml[2865,104574+6]..[2865,104574+35])
                                  Pexp_apply
                                  expression (typing/typemod.ml[2865,104574+6]..[2865,104574+32])
                                    Pexp_ident "Env.reset_required_globals" (typing/typemod.ml[2865,104574+6]..[2865,104574+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2865,104574+33]..[2865,104574+35])
                                        Pexp_construct "()" (typing/typemod.ml[2865,104574+33]..[2865,104574+35])
                                        None
                                  ]
                                expression (typing/typemod.ml[2866,104611+6]..[2939,107938+9])
                                  Pexp_sequence
                                  expression (typing/typemod.ml[2866,104611+6]..[2867,104658+64])
                                    Pexp_ifthenelse
                                    expression (typing/typemod.ml[2866,104611+9]..[2866,104611+29])
                                      Pexp_apply
                                      expression (typing/typemod.ml[2866,104611+9]..[2866,104611+10])
                                        Pexp_ident "!" (typing/typemod.ml[2866,104611+9]..[2866,104611+10])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2866,104611+10]..[2866,104611+29])
                                            Pexp_ident "Clflags.print_types" (typing/typemod.ml[2866,104611+10]..[2866,104611+29])
                                      ]
                                    expression (typing/typemod.ml[2867,104658+8]..[2867,104658+64])
                                      Pexp_apply
                                      expression (typing/typemod.ml[2867,104658+15]..[2867,104658+17])
                                        Pexp_ident "@@" (typing/typemod.ml[2867,104658+15]..[2867,104658+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2867,104658+8]..[2867,104658+14])
                                            Pexp_ident "ignore" (typing/typemod.ml[2867,104658+8]..[2867,104658+14])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2867,104658+18]..[2867,104658+64])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2867,104658+18]..[2867,104658+40])
                                              Pexp_ident "Warnings.parse_options" (typing/typemod.ml[2867,104658+18]..[2867,104658+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2867,104658+41]..[2867,104658+46])
                                                  Pexp_construct "false" (typing/typemod.ml[2867,104658+41]..[2867,104658+46])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2867,104658+47]..[2867,104658+64])
                                                  Pexp_constant PConst_string("-32-34-37-38-60",(typing/typemod.ml[2867,104658+48]..[2867,104658+63]),None)
                                            ]
                                      ]
                                    None
                                  expression (typing/typemod.ml[2868,104724+6]..[2939,107938+9])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typemod.ml[2868,104724+10]..[2868,104724+36])
                                          Ppat_tuple
                                          [
                                            pattern (typing/typemod.ml[2868,104724+11]..[2868,104724+14])
                                              Ppat_var "str" (typing/typemod.ml[2868,104724+11]..[2868,104724+14])
                                            pattern (typing/typemod.ml[2868,104724+16]..[2868,104724+18])
                                              Ppat_var "sg" (typing/typemod.ml[2868,104724+16]..[2868,104724+18])
                                            pattern (typing/typemod.ml[2868,104724+20]..[2868,104724+25])
                                              Ppat_var "names" (typing/typemod.ml[2868,104724+20]..[2868,104724+25])
                                            pattern (typing/typemod.ml[2868,104724+27]..[2868,104724+35])
                                              Ppat_var "finalenv" (typing/typemod.ml[2868,104724+27]..[2868,104724+35])
                                          ]
                                        expression (typing/typemod.ml[2869,104763+8]..[2869,104763+38])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2869,104763+8]..[2869,104763+22])
                                            Pexp_ident "type_structure" (typing/typemod.ml[2869,104763+8]..[2869,104763+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2869,104763+23]..[2869,104763+34])
                                                Pexp_ident "initial_env" (typing/typemod.ml[2869,104763+23]..[2869,104763+34])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2869,104763+35]..[2869,104763+38])
                                                Pexp_ident "ast" (typing/typemod.ml[2869,104763+35]..[2869,104763+38])
                                          ]
                                    ]
                                    expression (typing/typemod.ml[2870,104805+6]..[2939,107938+9])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/typemod.ml[2870,104805+10]..[2870,104805+19])
                                            Ppat_var "simple_sg" (typing/typemod.ml[2870,104805+10]..[2870,104805+19])
                                          expression (typing/typemod.ml[2870,104805+22]..[2870,104805+64])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2870,104805+22]..[2870,104805+46])
                                              Pexp_ident "Signature_names.simplify" (typing/typemod.ml[2870,104805+22]..[2870,104805+46])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2870,104805+47]..[2870,104805+55])
                                                  Pexp_ident "finalenv" (typing/typemod.ml[2870,104805+47]..[2870,104805+55])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2870,104805+56]..[2870,104805+61])
                                                  Pexp_ident "names" (typing/typemod.ml[2870,104805+56]..[2870,104805+61])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2870,104805+62]..[2870,104805+64])
                                                  Pexp_ident "sg" (typing/typemod.ml[2870,104805+62]..[2870,104805+64])
                                            ]
                                      ]
                                      expression (typing/typemod.ml[2871,104873+6]..[2939,107938+9])
                                        Pexp_ifthenelse
                                        expression (typing/typemod.ml[2871,104873+9]..[2871,104873+29])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2871,104873+9]..[2871,104873+10])
                                            Pexp_ident "!" (typing/typemod.ml[2871,104873+9]..[2871,104873+10])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2871,104873+10]..[2871,104873+29])
                                                Pexp_ident "Clflags.print_types" (typing/typemod.ml[2871,104873+10]..[2871,104873+29])
                                          ]
                                        expression (typing/typemod.ml[2871,104873+35]..[2882,105372+9])
                                          Pexp_sequence
                                          expression (typing/typemod.ml[2872,104914+8]..[2872,104914+40])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2872,104914+8]..[2872,104914+37])
                                              Pexp_ident "Typecore.force_delayed_checks" (typing/typemod.ml[2872,104914+8]..[2872,104914+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2872,104914+38]..[2872,104914+40])
                                                  Pexp_construct "()" (typing/typemod.ml[2872,104914+38]..[2872,104914+40])
                                                  None
                                            ]
                                          expression (typing/typemod.ml[2873,104956+8]..[2881,105312+9])
                                            Pexp_sequence
                                            expression (typing/typemod.ml[2873,104956+8]..[2876,105130+11])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2873,104956+8]..[2873,104956+34])
                                                Pexp_ident "Printtyp.wrap_printing_env" (typing/typemod.ml[2873,104956+8]..[2873,104956+34])
                                              [
                                                <arg>
                                                Labelled "error"
                                                  expression (typing/typemod.ml[2873,104956+42]..[2873,104956+47])
                                                    Pexp_construct "false" (typing/typemod.ml[2873,104956+42]..[2873,104956+47])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2873,104956+48]..[2873,104956+59])
                                                    Pexp_ident "initial_env" (typing/typemod.ml[2873,104956+48]..[2873,104956+59])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2874,105016+10]..[2876,105130+11])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (typing/typemod.ml[2874,105016+15]..[2874,105016+17])
                                                      Ppat_construct "()" (typing/typemod.ml[2874,105016+15]..[2874,105016+17])
                                                      None
                                                    expression (typing/typemod.ml[2874,105016+21]..[2875,105066+63])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[2874,105016+21]..[2874,105016+28])
                                                        Pexp_ident "fprintf" (typing/typemod.ml[2874,105016+21]..[2874,105016+28])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2874,105016+29]..[2874,105016+42])
                                                            Pexp_ident "std_formatter" (typing/typemod.ml[2874,105016+29]..[2874,105016+42])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2874,105016+43]..[2874,105016+49])
                                                            Pexp_constant PConst_string("%a@.",(typing/typemod.ml[2874,105016+44]..[2874,105016+48]),None)
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2875,105066+14]..[2875,105066+53])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[2875,105066+15]..[2875,105066+41])
                                                              Pexp_ident "Printtyp.printed_signature" (typing/typemod.ml[2875,105066+15]..[2875,105066+41])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2875,105066+42]..[2875,105066+52])
                                                                  Pexp_ident "sourcefile" (typing/typemod.ml[2875,105066+42]..[2875,105066+52])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[2875,105066+54]..[2875,105066+63])
                                                            Pexp_ident "simple_sg" (typing/typemod.ml[2875,105066+54]..[2875,105066+63])
                                                      ]
                                              ]
                                            expression (typing/typemod.ml[2877,105143+8]..[2881,105312+9])
                                              Pexp_sequence
                                              expression (typing/typemod.ml[2877,105143+8]..[2877,105143+73])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2877,105143+8]..[2877,105143+17])
                                                  Pexp_ident "gen_annot" (typing/typemod.ml[2877,105143+8]..[2877,105143+17])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2877,105143+18]..[2877,105143+30])
                                                      Pexp_ident "outputprefix" (typing/typemod.ml[2877,105143+18]..[2877,105143+30])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2877,105143+31]..[2877,105143+41])
                                                      Pexp_ident "sourcefile" (typing/typemod.ml[2877,105143+31]..[2877,105143+41])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2877,105143+42]..[2877,105143+73])
                                                      Pexp_construct "Cmt_format.Implementation" (typing/typemod.ml[2877,105143+43]..[2877,105143+68])
                                                      Some
                                                        expression (typing/typemod.ml[2877,105143+69]..[2877,105143+72])
                                                          Pexp_ident "str" (typing/typemod.ml[2877,105143+69]..[2877,105143+72])
                                                ]
                                              expression (typing/typemod.ml[2878,105218+8]..[2881,105312+9])
                                                Pexp_record
                                                [
                                                  "structure" (typing/typemod.ml[2878,105218+10]..[2878,105218+19])
                                                    expression (typing/typemod.ml[2878,105218+22]..[2878,105218+25])
                                                      Pexp_ident "str" (typing/typemod.ml[2878,105218+22]..[2878,105218+25])
                                                  "coercion" (typing/typemod.ml[2879,105245+10]..[2879,105245+18])
                                                    expression (typing/typemod.ml[2879,105245+21]..[2879,105245+33])
                                                      Pexp_construct "Tcoerce_none" (typing/typemod.ml[2879,105245+21]..[2879,105245+33])
                                                      None
                                                  "signature" (typing/typemod.ml[2880,105280+10]..[2880,105280+19])
                                                    expression (typing/typemod.ml[2880,105280+22]..[2880,105280+31])
                                                      Pexp_ident "simple_sg" (typing/typemod.ml[2880,105280+22]..[2880,105280+31])
                                                ]
                                                None
                                        Some
                                          expression (typing/typemod.ml[2882,105372+15]..[2939,107938+9])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/typemod.ml[2883,105393+12]..[2883,105393+22])
                                                  Ppat_var "sourceintf" (typing/typemod.ml[2883,105393+12]..[2883,105393+22])
                                                expression (typing/typemod.ml[2884,105418+10]..[2884,105418+73])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[2884,105418+47]..[2884,105418+48])
                                                    Pexp_ident "^" (typing/typemod.ml[2884,105418+47]..[2884,105418+48])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2884,105418+10]..[2884,105418+46])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2884,105418+10]..[2884,105418+35])
                                                          Pexp_ident "Filename.remove_extension" (typing/typemod.ml[2884,105418+10]..[2884,105418+35])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2884,105418+36]..[2884,105418+46])
                                                              Pexp_ident "sourcefile" (typing/typemod.ml[2884,105418+36]..[2884,105418+46])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[2884,105418+49]..[2884,105418+73])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2884,105418+49]..[2884,105418+50])
                                                          Pexp_ident "!" (typing/typemod.ml[2884,105418+49]..[2884,105418+50])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2884,105418+50]..[2884,105418+73])
                                                              Pexp_ident "Config.interface_suffix" (typing/typemod.ml[2884,105418+50]..[2884,105418+73])
                                                        ]
                                                  ]
                                            ]
                                            expression (typing/typemod.ml[2885,105495+8]..[2938,107926+11])
                                              Pexp_ifthenelse
                                              expression (typing/typemod.ml[2885,105495+11]..[2885,105495+37])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2885,105495+11]..[2885,105495+26])
                                                  Pexp_ident "Sys.file_exists" (typing/typemod.ml[2885,105495+11]..[2885,105495+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2885,105495+27]..[2885,105495+37])
                                                      Pexp_ident "sourceintf" (typing/typemod.ml[2885,105495+27]..[2885,105495+37])
                                                ]
                                              expression (typing/typemod.ml[2885,105495+43]..[2909,106597+11])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/typemod.ml[2886,105544+14]..[2886,105544+23])
                                                      Ppat_var "intf_file" (typing/typemod.ml[2886,105544+14]..[2886,105544+23])
                                                    expression (typing/typemod.ml[2887,105570+12]..[2891,105739+61])
                                                      Pexp_try
                                                      expression (typing/typemod.ml[2888,105586+14]..[2888,105586+56])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2888,105586+14]..[2888,105586+34])
                                                          Pexp_ident "Load_path.find_uncap" (typing/typemod.ml[2888,105586+14]..[2888,105586+34])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2888,105586+35]..[2888,105586+56])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[2888,105586+47]..[2888,105586+48])
                                                                Pexp_ident "^" (typing/typemod.ml[2888,105586+47]..[2888,105586+48])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[2888,105586+36]..[2888,105586+46])
                                                                    Pexp_ident "modulename" (typing/typemod.ml[2888,105586+36]..[2888,105586+46])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[2888,105586+49]..[2888,105586+55])
                                                                    Pexp_constant PConst_string(".cmi",(typing/typemod.ml[2888,105586+50]..[2888,105586+54]),None)
                                                              ]
                                                        ]
                                                      [
                                                        <case>
                                                          pattern (typing/typemod.ml[2889,105643+17]..[2889,105643+26])
                                                            Ppat_construct "Not_found" (typing/typemod.ml[2889,105643+17]..[2889,105643+26])
                                                            None
                                                          expression (typing/typemod.ml[2890,105673+14]..[2891,105739+61])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[2890,105673+14]..[2890,105673+19])
                                                              Pexp_ident "raise" (typing/typemod.ml[2890,105673+14]..[2890,105673+19])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2890,105673+19]..[2891,105739+61])
                                                                  Pexp_construct "Error" (typing/typemod.ml[2890,105673+20]..[2890,105673+25])
                                                                  Some
                                                                    expression (typing/typemod.ml[2890,105673+25]..[2891,105739+60])
                                                                      Pexp_tuple
                                                                      [
expression (typing/typemod.ml[2890,105673+26]..[2890,105673+53])
  Pexp_apply
  expression (typing/typemod.ml[2890,105673+26]..[2890,105673+42])
    Pexp_ident "Location.in_file" (typing/typemod.ml[2890,105673+26]..[2890,105673+42])
  [
    <arg>
    Nolabel
      expression (typing/typemod.ml[2890,105673+43]..[2890,105673+53])
        Pexp_ident "sourcefile" (typing/typemod.ml[2890,105673+43]..[2890,105673+53])
  ]
expression (typing/typemod.ml[2890,105673+55]..[2890,105673+64])
  Pexp_ident "Env.empty" (typing/typemod.ml[2890,105673+55]..[2890,105673+64])
expression (typing/typemod.ml[2891,105739+26]..[2891,105739+59])
  Pexp_construct "Interface_not_compiled" (typing/typemod.ml[2891,105739+26]..[2891,105739+48])
  Some
    expression (typing/typemod.ml[2891,105739+49]..[2891,105739+59])
      Pexp_ident "sourceintf" (typing/typemod.ml[2891,105739+49]..[2891,105739+59])
                                                                      ]
                                                            ]
                                                      ]
                                                ]
                                                expression (typing/typemod.ml[2892,105804+10]..[2908,106585+11])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/typemod.ml[2892,105804+14]..[2892,105804+20])
                                                        Ppat_var "dclsig" (typing/typemod.ml[2892,105804+14]..[2892,105804+20])
                                                      expression (typing/typemod.ml[2892,105804+23]..[2892,105804+62])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2892,105804+23]..[2892,105804+41])
                                                          Pexp_ident "Env.read_signature" (typing/typemod.ml[2892,105804+23]..[2892,105804+41])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2892,105804+42]..[2892,105804+52])
                                                              Pexp_ident "modulename" (typing/typemod.ml[2892,105804+42]..[2892,105804+52])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2892,105804+53]..[2892,105804+62])
                                                              Pexp_ident "intf_file" (typing/typemod.ml[2892,105804+53]..[2892,105804+62])
                                                        ]
                                                  ]
                                                  expression (typing/typemod.ml[2893,105870+10]..[2908,106585+11])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typemod.ml[2893,105870+14]..[2893,105870+22])
                                                          Ppat_var "coercion" (typing/typemod.ml[2893,105870+14]..[2893,105870+22])
                                                        expression (typing/typemod.ml[2894,105895+12]..[2895,105959+44])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[2894,105895+12]..[2894,105895+31])
                                                            Pexp_ident "Includemod.compunit" (typing/typemod.ml[2894,105895+12]..[2894,105895+31])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2894,105895+32]..[2894,105895+43])
                                                                Pexp_ident "initial_env" (typing/typemod.ml[2894,105895+32]..[2894,105895+43])
                                                            <arg>
                                                            Labelled "mark"
                                                              expression (typing/typemod.ml[2894,105895+50]..[2894,105895+63])
                                                                Pexp_construct "Mark_positive" (typing/typemod.ml[2894,105895+50]..[2894,105895+63])
                                                                None
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2895,105959+14]..[2895,105959+24])
                                                                Pexp_ident "sourcefile" (typing/typemod.ml[2895,105959+14]..[2895,105959+24])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2895,105959+25]..[2895,105959+27])
                                                                Pexp_ident "sg" (typing/typemod.ml[2895,105959+25]..[2895,105959+27])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2895,105959+28]..[2895,105959+37])
                                                                Pexp_ident "intf_file" (typing/typemod.ml[2895,105959+28]..[2895,105959+37])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2895,105959+38]..[2895,105959+44])
                                                                Pexp_ident "dclsig" (typing/typemod.ml[2895,105959+38]..[2895,105959+44])
                                                          ]
                                                    ]
                                                    expression (typing/typemod.ml[2897,106017+10]..[2908,106585+11])
                                                      Pexp_sequence
                                                      expression (typing/typemod.ml[2897,106017+10]..[2897,106017+42])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2897,106017+10]..[2897,106017+39])
                                                          Pexp_ident "Typecore.force_delayed_checks" (typing/typemod.ml[2897,106017+10]..[2897,106017+39])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2897,106017+40]..[2897,106017+42])
                                                              Pexp_construct "()" (typing/typemod.ml[2897,106017+40]..[2897,106017+42])
                                                              None
                                                        ]
                                                      expression (typing/typemod.ml[2901,106275+10]..[2908,106585+11])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (typing/typemod.ml[2901,106275+14]..[2901,106275+20])
                                                              Ppat_var "annots" (typing/typemod.ml[2901,106275+14]..[2901,106275+20])
                                                            expression (typing/typemod.ml[2901,106275+23]..[2901,106275+52])
                                                              Pexp_construct "Cmt_format.Implementation" (typing/typemod.ml[2901,106275+23]..[2901,106275+48])
                                                              Some
                                                                expression (typing/typemod.ml[2901,106275+49]..[2901,106275+52])
                                                                  Pexp_ident "str" (typing/typemod.ml[2901,106275+49]..[2901,106275+52])
                                                        ]
                                                        expression (typing/typemod.ml[2902,106331+10]..[2908,106585+11])
                                                          Pexp_sequence
                                                          expression (typing/typemod.ml[2902,106331+10]..[2903,106396+53])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[2902,106331+10]..[2902,106331+29])
                                                              Pexp_ident "Cmt_format.save_cmt" (typing/typemod.ml[2902,106331+10]..[2902,106331+29])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2902,106331+30]..[2902,106331+53])
                                                                  Pexp_apply
                                                                  expression (typing/typemod.ml[2902,106331+44]..[2902,106331+45])
                                                                    Pexp_ident "^" (typing/typemod.ml[2902,106331+44]..[2902,106331+45])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[2902,106331+31]..[2902,106331+43])
Pexp_ident "outputprefix" (typing/typemod.ml[2902,106331+31]..[2902,106331+43])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/typemod.ml[2902,106331+46]..[2902,106331+52])
Pexp_constant PConst_string(".cmt",(typing/typemod.ml[2902,106331+47]..[2902,106331+51]),None)
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2902,106331+54]..[2902,106331+64])
                                                                  Pexp_ident "modulename" (typing/typemod.ml[2902,106331+54]..[2902,106331+64])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2903,106396+12]..[2903,106396+18])
                                                                  Pexp_ident "annots" (typing/typemod.ml[2903,106396+12]..[2903,106396+18])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2903,106396+19]..[2903,106396+36])
                                                                  Pexp_construct "Some" (typing/typemod.ml[2903,106396+20]..[2903,106396+24])
                                                                  Some
                                                                    expression (typing/typemod.ml[2903,106396+25]..[2903,106396+35])
                                                                      Pexp_ident "sourcefile" (typing/typemod.ml[2903,106396+25]..[2903,106396+35])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2903,106396+37]..[2903,106396+48])
                                                                  Pexp_ident "initial_env" (typing/typemod.ml[2903,106396+37]..[2903,106396+48])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2903,106396+49]..[2903,106396+53])
                                                                  Pexp_construct "None" (typing/typemod.ml[2903,106396+49]..[2903,106396+53])
                                                                  None
                                                            ]
                                                          expression (typing/typemod.ml[2904,106451+10]..[2908,106585+11])
                                                            Pexp_sequence
                                                            expression (typing/typemod.ml[2904,106451+10]..[2904,106451+50])
                                                              Pexp_apply
                                                              expression (typing/typemod.ml[2904,106451+10]..[2904,106451+19])
                                                                Pexp_ident "gen_annot" (typing/typemod.ml[2904,106451+10]..[2904,106451+19])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[2904,106451+20]..[2904,106451+32])
                                                                    Pexp_ident "outputprefix" (typing/typemod.ml[2904,106451+20]..[2904,106451+32])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[2904,106451+33]..[2904,106451+43])
                                                                    Pexp_ident "sourcefile" (typing/typemod.ml[2904,106451+33]..[2904,106451+43])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/typemod.ml[2904,106451+44]..[2904,106451+50])
                                                                    Pexp_ident "annots" (typing/typemod.ml[2904,106451+44]..[2904,106451+50])
                                                              ]
                                                            expression (typing/typemod.ml[2905,106503+10]..[2908,106585+11])
                                                              Pexp_record
                                                              [
                                                                "structure" (typing/typemod.ml[2905,106503+12]..[2905,106503+21])
                                                                  expression (typing/typemod.ml[2905,106503+24]..[2905,106503+27])
                                                                    Pexp_ident "str" (typing/typemod.ml[2905,106503+24]..[2905,106503+27])
                                                                "coercion" (typing/typemod.ml[2906,106532+12]..[2906,106532+20]) ghost
                                                                  expression (typing/typemod.ml[2906,106532+12]..[2906,106532+20])
                                                                    Pexp_ident "coercion" (typing/typemod.ml[2906,106532+12]..[2906,106532+20])
                                                                "signature" (typing/typemod.ml[2907,106554+12]..[2907,106554+21])
                                                                  expression (typing/typemod.ml[2907,106554+24]..[2907,106554+30])
                                                                    Pexp_ident "dclsig" (typing/typemod.ml[2907,106554+24]..[2907,106554+30])
                                                              ]
                                                              None
                                              Some
                                                expression (typing/typemod.ml[2909,106597+17]..[2938,107926+11])
                                                  Pexp_sequence
                                                  expression (typing/typemod.ml[2910,106620+10]..[2911,106683+32])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[2910,106620+10]..[2910,106620+32])
                                                      Pexp_ident "Location.prerr_warning" (typing/typemod.ml[2910,106620+10]..[2910,106620+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2910,106620+33]..[2910,106620+62])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[2910,106620+34]..[2910,106620+50])
                                                            Pexp_ident "Location.in_file" (typing/typemod.ml[2910,106620+34]..[2910,106620+50])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2910,106620+51]..[2910,106620+61])
                                                                Pexp_ident "sourcefile" (typing/typemod.ml[2910,106620+51]..[2910,106620+61])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[2911,106683+12]..[2911,106683+32])
                                                          Pexp_construct "Warnings.Missing_mli" (typing/typemod.ml[2911,106683+12]..[2911,106683+32])
                                                          None
                                                    ]
                                                  expression (typing/typemod.ml[2912,106717+10]..[2937,107914+11])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/typemod.ml[2912,106717+14]..[2912,106717+22])
                                                          Ppat_var "coercion" (typing/typemod.ml[2912,106717+14]..[2912,106717+22])
                                                        expression (typing/typemod.ml[2913,106742+12]..[2914,106806+60])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[2913,106742+12]..[2913,106742+31])
                                                            Pexp_ident "Includemod.compunit" (typing/typemod.ml[2913,106742+12]..[2913,106742+31])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2913,106742+32]..[2913,106742+43])
                                                                Pexp_ident "initial_env" (typing/typemod.ml[2913,106742+32]..[2913,106742+43])
                                                            <arg>
                                                            Labelled "mark"
                                                              expression (typing/typemod.ml[2913,106742+50]..[2913,106742+63])
                                                                Pexp_construct "Mark_positive" (typing/typemod.ml[2913,106742+50]..[2913,106742+63])
                                                                None
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2914,106806+14]..[2914,106806+24])
                                                                Pexp_ident "sourcefile" (typing/typemod.ml[2914,106806+14]..[2914,106806+24])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2914,106806+25]..[2914,106806+27])
                                                                Pexp_ident "sg" (typing/typemod.ml[2914,106806+25]..[2914,106806+27])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2914,106806+28]..[2914,106806+50])
                                                                Pexp_constant PConst_string("(inferred signature)",(typing/typemod.ml[2914,106806+29]..[2914,106806+49]),None)
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2914,106806+51]..[2914,106806+60])
                                                                Pexp_ident "simple_sg" (typing/typemod.ml[2914,106806+51]..[2914,106806+60])
                                                          ]
                                                    ]
                                                    expression (typing/typemod.ml[2916,106880+10]..[2937,107914+11])
                                                      Pexp_sequence
                                                      expression (typing/typemod.ml[2916,106880+10]..[2916,106880+51])
                                                        Pexp_apply
                                                        expression (typing/typemod.ml[2916,106880+10]..[2916,106880+32])
                                                          Pexp_ident "check_nongen_signature" (typing/typemod.ml[2916,106880+10]..[2916,106880+32])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2916,106880+33]..[2916,106880+41])
                                                              Pexp_ident "finalenv" (typing/typemod.ml[2916,106880+33]..[2916,106880+41])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/typemod.ml[2916,106880+42]..[2916,106880+51])
                                                              Pexp_ident "simple_sg" (typing/typemod.ml[2916,106880+42]..[2916,106880+51])
                                                        ]
                                                      expression (typing/typemod.ml[2917,106933+10]..[2937,107914+11])
                                                        Pexp_sequence
                                                        expression (typing/typemod.ml[2917,106933+10]..[2917,106933+39])
                                                          Pexp_apply
                                                          expression (typing/typemod.ml[2917,106933+10]..[2917,106933+29])
                                                            Pexp_ident "normalize_signature" (typing/typemod.ml[2917,106933+10]..[2917,106933+29])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/typemod.ml[2917,106933+30]..[2917,106933+39])
                                                                Pexp_ident "simple_sg" (typing/typemod.ml[2917,106933+30]..[2917,106933+39])
                                                          ]
                                                        expression (typing/typemod.ml[2918,106974+10]..[2937,107914+11])
                                                          Pexp_sequence
                                                          expression (typing/typemod.ml[2918,106974+10]..[2918,106974+42])
                                                            Pexp_apply
                                                            expression (typing/typemod.ml[2918,106974+10]..[2918,106974+39])
                                                              Pexp_ident "Typecore.force_delayed_checks" (typing/typemod.ml[2918,106974+10]..[2918,106974+39])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/typemod.ml[2918,106974+40]..[2918,106974+42])
                                                                  Pexp_construct "()" (typing/typemod.ml[2918,106974+40]..[2918,106974+42])
                                                                  None
                                                            ]
                                                          expression (typing/typemod.ml[2923,107314+10]..[2937,107914+11])
                                                            Pexp_sequence
                                                            expression (typing/typemod.ml[2923,107314+10]..[2933,107814+13])
                                                              Pexp_ifthenelse
                                                              expression (typing/typemod.ml[2923,107314+13]..[2923,107314+42])
                                                                Pexp_apply
                                                                expression (typing/typemod.ml[2923,107314+13]..[2923,107314+16])
                                                                  Pexp_ident "not" (typing/typemod.ml[2923,107314+13]..[2923,107314+16])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/typemod.ml[2923,107314+17]..[2923,107314+42])
                                                                      Pexp_apply
                                                                      expression (typing/typemod.ml[2923,107314+17]..[2923,107314+18])
Pexp_ident "!" (typing/typemod.ml[2923,107314+17]..[2923,107314+18])
                                                                      [
<arg>
Nolabel
  expression (typing/typemod.ml[2923,107314+18]..[2923,107314+42])
    Pexp_ident "Clflags.dont_write_files" (typing/typemod.ml[2923,107314+18]..[2923,107314+42])
                                                                      ]
                                                                ]
                                                              expression (typing/typemod.ml[2923,107314+48]..[2933,107814+13])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (typing/typemod.ml[2924,107368+16]..[2924,107368+22])
                                                                      Ppat_var "alerts" (typing/typemod.ml[2924,107368+16]..[2924,107368+22])
                                                                    expression (typing/typemod.ml[2924,107368+25]..[2924,107368+61])
                                                                      Pexp_apply
                                                                      expression (typing/typemod.ml[2924,107368+25]..[2924,107368+57])
Pexp_ident "Builtin_attributes.alerts_of_str" (typing/typemod.ml[2924,107368+25]..[2924,107368+57])
                                                                      [
<arg>
Nolabel
  expression (typing/typemod.ml[2924,107368+58]..[2924,107368+61])
    Pexp_ident "ast" (typing/typemod.ml[2924,107368+58]..[2924,107368+61])
                                                                      ]
                                                                ]
                                                                expression (typing/typemod.ml[2925,107433+12]..[2932,107761+52])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (typing/typemod.ml[2925,107433+16]..[2925,107433+19])
Ppat_var "cmi" (typing/typemod.ml[2925,107433+16]..[2925,107433+19])
                                                                      expression (typing/typemod.ml[2926,107455+14]..[2927,107496+60])
Pexp_apply
expression (typing/typemod.ml[2926,107455+14]..[2926,107455+32])
  Pexp_ident "Env.save_signature" (typing/typemod.ml[2926,107455+14]..[2926,107455+32])
[
  <arg>
  Labelled "alerts"
    expression (typing/typemod.ml[2926,107455+34]..[2926,107455+40])
      Pexp_ident "alerts" (typing/typemod.ml[2926,107455+34]..[2926,107455+40])
  <arg>
  Nolabel
    expression (typing/typemod.ml[2927,107496+16]..[2927,107496+25])
      Pexp_ident "simple_sg" (typing/typemod.ml[2927,107496+16]..[2927,107496+25])
  <arg>
  Nolabel
    expression (typing/typemod.ml[2927,107496+26]..[2927,107496+36])
      Pexp_ident "modulename" (typing/typemod.ml[2927,107496+26]..[2927,107496+36])
  <arg>
  Nolabel
    expression (typing/typemod.ml[2927,107496+37]..[2927,107496+60])
      Pexp_apply
      expression (typing/typemod.ml[2927,107496+51]..[2927,107496+52])
        Pexp_ident "^" (typing/typemod.ml[2927,107496+51]..[2927,107496+52])
      [
        <arg>
        Nolabel
          expression (typing/typemod.ml[2927,107496+38]..[2927,107496+50])
            Pexp_ident "outputprefix" (typing/typemod.ml[2927,107496+38]..[2927,107496+50])
        <arg>
        Nolabel
          expression (typing/typemod.ml[2927,107496+53]..[2927,107496+59])
            Pexp_constant PConst_string(".cmi",(typing/typemod.ml[2927,107496+54]..[2927,107496+58]),None)
      ]
]
                                                                  ]
                                                                  expression (typing/typemod.ml[2929,107572+12]..[2932,107761+52])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (typing/typemod.ml[2929,107572+16]..[2929,107572+22])
  Ppat_var "annots" (typing/typemod.ml[2929,107572+16]..[2929,107572+22])
expression (typing/typemod.ml[2929,107572+25]..[2929,107572+54])
  Pexp_construct "Cmt_format.Implementation" (typing/typemod.ml[2929,107572+25]..[2929,107572+50])
  Some
    expression (typing/typemod.ml[2929,107572+51]..[2929,107572+54])
      Pexp_ident "str" (typing/typemod.ml[2929,107572+51]..[2929,107572+54])
                                                                    ]
                                                                    expression (typing/typemod.ml[2930,107630+12]..[2932,107761+52])
                                                                      Pexp_sequence
                                                                      expression (typing/typemod.ml[2930,107630+12]..[2931,107698+61])
Pexp_apply
expression (typing/typemod.ml[2930,107630+12]..[2930,107630+31])
  Pexp_ident "Cmt_format.save_cmt" (typing/typemod.ml[2930,107630+12]..[2930,107630+31])
[
  <arg>
  Nolabel
    expression (typing/typemod.ml[2930,107630+33]..[2930,107630+56])
      Pexp_apply
      expression (typing/typemod.ml[2930,107630+47]..[2930,107630+48])
        Pexp_ident "^" (typing/typemod.ml[2930,107630+47]..[2930,107630+48])
      [
        <arg>
        Nolabel
          expression (typing/typemod.ml[2930,107630+34]..[2930,107630+46])
            Pexp_ident "outputprefix" (typing/typemod.ml[2930,107630+34]..[2930,107630+46])
        <arg>
        Nolabel
          expression (typing/typemod.ml[2930,107630+49]..[2930,107630+55])
            Pexp_constant PConst_string(".cmt",(typing/typemod.ml[2930,107630+50]..[2930,107630+54]),None)
      ]
  <arg>
  Nolabel
    expression (typing/typemod.ml[2930,107630+57]..[2930,107630+67])
      Pexp_ident "modulename" (typing/typemod.ml[2930,107630+57]..[2930,107630+67])
  <arg>
  Nolabel
    expression (typing/typemod.ml[2931,107698+14]..[2931,107698+20])
      Pexp_ident "annots" (typing/typemod.ml[2931,107698+14]..[2931,107698+20])
  <arg>
  Nolabel
    expression (typing/typemod.ml[2931,107698+21]..[2931,107698+38])
      Pexp_construct "Some" (typing/typemod.ml[2931,107698+22]..[2931,107698+26])
      Some
        expression (typing/typemod.ml[2931,107698+27]..[2931,107698+37])
          Pexp_ident "sourcefile" (typing/typemod.ml[2931,107698+27]..[2931,107698+37])
  <arg>
  Nolabel
    expression (typing/typemod.ml[2931,107698+39]..[2931,107698+50])
      Pexp_ident "initial_env" (typing/typemod.ml[2931,107698+39]..[2931,107698+50])
  <arg>
  Nolabel
    expression (typing/typemod.ml[2931,107698+51]..[2931,107698+61])
      Pexp_construct "Some" (typing/typemod.ml[2931,107698+52]..[2931,107698+56])
      Some
        expression (typing/typemod.ml[2931,107698+57]..[2931,107698+60])
          Pexp_ident "cmi" (typing/typemod.ml[2931,107698+57]..[2931,107698+60])
]
                                                                      expression (typing/typemod.ml[2932,107761+12]..[2932,107761+52])
Pexp_apply
expression (typing/typemod.ml[2932,107761+12]..[2932,107761+21])
  Pexp_ident "gen_annot" (typing/typemod.ml[2932,107761+12]..[2932,107761+21])
[
  <arg>
  Nolabel
    expression (typing/typemod.ml[2932,107761+22]..[2932,107761+34])
      Pexp_ident "outputprefix" (typing/typemod.ml[2932,107761+22]..[2932,107761+34])
  <arg>
  Nolabel
    expression (typing/typemod.ml[2932,107761+35]..[2932,107761+45])
      Pexp_ident "sourcefile" (typing/typemod.ml[2932,107761+35]..[2932,107761+45])
  <arg>
  Nolabel
    expression (typing/typemod.ml[2932,107761+46]..[2932,107761+52])
      Pexp_ident "annots" (typing/typemod.ml[2932,107761+46]..[2932,107761+52])
]
                                                              None
                                                            expression (typing/typemod.ml[2934,107829+10]..[2937,107914+11])
                                                              Pexp_record
                                                              [
                                                                "structure" (typing/typemod.ml[2934,107829+12]..[2934,107829+21])
                                                                  expression (typing/typemod.ml[2934,107829+24]..[2934,107829+27])
                                                                    Pexp_ident "str" (typing/typemod.ml[2934,107829+24]..[2934,107829+27])
                                                                "coercion" (typing/typemod.ml[2935,107858+12]..[2935,107858+20]) ghost
                                                                  expression (typing/typemod.ml[2935,107858+12]..[2935,107858+20])
                                                                    Pexp_ident "coercion" (typing/typemod.ml[2935,107858+12]..[2935,107858+20])
                                                                "signature" (typing/typemod.ml[2936,107880+12]..[2936,107880+21])
                                                                  expression (typing/typemod.ml[2936,107880+24]..[2936,107880+33])
                                                                    Pexp_ident "simple_sg" (typing/typemod.ml[2936,107880+24]..[2936,107880+33])
                                                              ]
                                                              None
                        <arg>
                        Labelled "exceptionally"
                          expression (typing/typemod.ml[2941,107954+19]..[2949,108286+7])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[2941,107954+24]..[2941,107954+26])
                              Ppat_construct "()" (typing/typemod.ml[2941,107954+24]..[2941,107954+26])
                              None
                            expression (typing/typemod.ml[2942,107984+8]..[2948,108237+48])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/typemod.ml[2942,107984+12]..[2942,107984+18])
                                    Ppat_var "annots" (typing/typemod.ml[2942,107984+12]..[2942,107984+18])
                                  expression (typing/typemod.ml[2943,108005+10]..[2944,108049+59])
                                    Pexp_construct "Cmt_format.Partial_implementation" (typing/typemod.ml[2943,108005+10]..[2943,108005+43])
                                    Some
                                      expression (typing/typemod.ml[2944,108049+12]..[2944,108049+59])
                                        Pexp_apply
                                        expression (typing/typemod.ml[2944,108049+13]..[2944,108049+26])
                                          Pexp_ident "Array.of_list" (typing/typemod.ml[2944,108049+13]..[2944,108049+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[2944,108049+27]..[2944,108049+58])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2944,108049+28]..[2944,108049+54])
                                                Pexp_ident "Cmt_format.get_saved_types" (typing/typemod.ml[2944,108049+28]..[2944,108049+54])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2944,108049+55]..[2944,108049+57])
                                                    Pexp_construct "()" (typing/typemod.ml[2944,108049+55]..[2944,108049+57])
                                                    None
                                              ]
                                        ]
                              ]
                              expression (typing/typemod.ml[2946,108120+8]..[2948,108237+48])
                                Pexp_sequence
                                expression (typing/typemod.ml[2946,108120+8]..[2947,108184+51])
                                  Pexp_apply
                                  expression (typing/typemod.ml[2946,108120+8]..[2946,108120+27])
                                    Pexp_ident "Cmt_format.save_cmt" (typing/typemod.ml[2946,108120+8]..[2946,108120+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2946,108120+29]..[2946,108120+52])
                                        Pexp_apply
                                        expression (typing/typemod.ml[2946,108120+43]..[2946,108120+44])
                                          Pexp_ident "^" (typing/typemod.ml[2946,108120+43]..[2946,108120+44])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[2946,108120+30]..[2946,108120+42])
                                              Pexp_ident "outputprefix" (typing/typemod.ml[2946,108120+30]..[2946,108120+42])
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[2946,108120+45]..[2946,108120+51])
                                              Pexp_constant PConst_string(".cmt",(typing/typemod.ml[2946,108120+46]..[2946,108120+50]),None)
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2946,108120+53]..[2946,108120+63])
                                        Pexp_ident "modulename" (typing/typemod.ml[2946,108120+53]..[2946,108120+63])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2947,108184+10]..[2947,108184+16])
                                        Pexp_ident "annots" (typing/typemod.ml[2947,108184+10]..[2947,108184+16])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2947,108184+17]..[2947,108184+34])
                                        Pexp_construct "Some" (typing/typemod.ml[2947,108184+18]..[2947,108184+22])
                                        Some
                                          expression (typing/typemod.ml[2947,108184+23]..[2947,108184+33])
                                            Pexp_ident "sourcefile" (typing/typemod.ml[2947,108184+23]..[2947,108184+33])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2947,108184+35]..[2947,108184+46])
                                        Pexp_ident "initial_env" (typing/typemod.ml[2947,108184+35]..[2947,108184+46])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2947,108184+47]..[2947,108184+51])
                                        Pexp_construct "None" (typing/typemod.ml[2947,108184+47]..[2947,108184+51])
                                        None
                                  ]
                                expression (typing/typemod.ml[2948,108237+8]..[2948,108237+48])
                                  Pexp_apply
                                  expression (typing/typemod.ml[2948,108237+8]..[2948,108237+17])
                                    Pexp_ident "gen_annot" (typing/typemod.ml[2948,108237+8]..[2948,108237+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2948,108237+18]..[2948,108237+30])
                                        Pexp_ident "outputprefix" (typing/typemod.ml[2948,108237+18]..[2948,108237+30])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2948,108237+31]..[2948,108237+41])
                                        Pexp_ident "sourcefile" (typing/typemod.ml[2948,108237+31]..[2948,108237+41])
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2948,108237+42]..[2948,108237+48])
                                        Pexp_ident "annots" (typing/typemod.ml[2948,108237+42]..[2948,108237+48])
                                  ]
                      ]
    ]
  structure_item (typing/typemod.ml[2951,108295+0]..[2953,108425+72])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2951,108295+4]..[2951,108295+18])
          Ppat_var "save_signature" (typing/typemod.ml[2951,108295+4]..[2951,108295+18])
        expression (typing/typemod.ml[2951,108295+19]..[2953,108425+72]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2951,108295+19]..[2951,108295+26])
            Ppat_var "modname" (typing/typemod.ml[2951,108295+19]..[2951,108295+26])
          expression (typing/typemod.ml[2951,108295+27]..[2953,108425+72]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2951,108295+27]..[2951,108295+30])
              Ppat_var "tsg" (typing/typemod.ml[2951,108295+27]..[2951,108295+30])
            expression (typing/typemod.ml[2951,108295+31]..[2953,108425+72]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2951,108295+31]..[2951,108295+43])
                Ppat_var "outputprefix" (typing/typemod.ml[2951,108295+31]..[2951,108295+43])
              expression (typing/typemod.ml[2951,108295+44]..[2953,108425+72]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2951,108295+44]..[2951,108295+55])
                  Ppat_var "source_file" (typing/typemod.ml[2951,108295+44]..[2951,108295+55])
                expression (typing/typemod.ml[2951,108295+56]..[2953,108425+72]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/typemod.ml[2951,108295+56]..[2951,108295+67])
                    Ppat_var "initial_env" (typing/typemod.ml[2951,108295+56]..[2951,108295+67])
                  expression (typing/typemod.ml[2951,108295+68]..[2953,108425+72]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/typemod.ml[2951,108295+68]..[2951,108295+71])
                      Ppat_var "cmi" (typing/typemod.ml[2951,108295+68]..[2951,108295+71])
                    expression (typing/typemod.ml[2952,108369+2]..[2953,108425+72])
                      Pexp_apply
                      expression (typing/typemod.ml[2952,108369+2]..[2952,108369+21])
                        Pexp_ident "Cmt_format.save_cmt" (typing/typemod.ml[2952,108369+2]..[2952,108369+21])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2952,108369+23]..[2952,108369+47])
                            Pexp_apply
                            expression (typing/typemod.ml[2952,108369+37]..[2952,108369+38])
                              Pexp_ident "^" (typing/typemod.ml[2952,108369+37]..[2952,108369+38])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2952,108369+24]..[2952,108369+36])
                                  Pexp_ident "outputprefix" (typing/typemod.ml[2952,108369+24]..[2952,108369+36])
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[2952,108369+39]..[2952,108369+46])
                                  Pexp_constant PConst_string(".cmti",(typing/typemod.ml[2952,108369+40]..[2952,108369+45]),None)
                            ]
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2952,108369+48]..[2952,108369+55])
                            Pexp_ident "modname" (typing/typemod.ml[2952,108369+48]..[2952,108369+55])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2953,108425+4]..[2953,108425+30])
                            Pexp_construct "Cmt_format.Interface" (typing/typemod.ml[2953,108425+5]..[2953,108425+25])
                            Some
                              expression (typing/typemod.ml[2953,108425+26]..[2953,108425+29])
                                Pexp_ident "tsg" (typing/typemod.ml[2953,108425+26]..[2953,108425+29])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2953,108425+31]..[2953,108425+49])
                            Pexp_construct "Some" (typing/typemod.ml[2953,108425+32]..[2953,108425+36])
                            Some
                              expression (typing/typemod.ml[2953,108425+37]..[2953,108425+48])
                                Pexp_ident "source_file" (typing/typemod.ml[2953,108425+37]..[2953,108425+48])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2953,108425+50]..[2953,108425+61])
                            Pexp_ident "initial_env" (typing/typemod.ml[2953,108425+50]..[2953,108425+61])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[2953,108425+62]..[2953,108425+72])
                            Pexp_construct "Some" (typing/typemod.ml[2953,108425+63]..[2953,108425+67])
                            Some
                              expression (typing/typemod.ml[2953,108425+68]..[2953,108425+71])
                                Pexp_ident "cmi" (typing/typemod.ml[2953,108425+68]..[2953,108425+71])
                      ]
    ]
  structure_item (typing/typemod.ml[2955,108499+0]..[2956,108528+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2955,108499+4]..[2955,108499+18])
          Ppat_var "type_interface" (typing/typemod.ml[2955,108499+4]..[2955,108499+18])
        expression (typing/typemod.ml[2955,108499+19]..[2956,108528+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2955,108499+19]..[2955,108499+22])
            Ppat_var "env" (typing/typemod.ml[2955,108499+19]..[2955,108499+22])
          expression (typing/typemod.ml[2955,108499+23]..[2956,108528+26]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2955,108499+23]..[2955,108499+26])
              Ppat_var "ast" (typing/typemod.ml[2955,108499+23]..[2955,108499+26])
            expression (typing/typemod.ml[2956,108528+2]..[2956,108528+26])
              Pexp_apply
              expression (typing/typemod.ml[2956,108528+2]..[2956,108528+18])
                Pexp_ident "transl_signature" (typing/typemod.ml[2956,108528+2]..[2956,108528+18])
              [
                <arg>
                Nolabel
                  expression (typing/typemod.ml[2956,108528+19]..[2956,108528+22])
                    Pexp_ident "env" (typing/typemod.ml[2956,108528+19]..[2956,108528+22])
                <arg>
                Nolabel
                  expression (typing/typemod.ml[2956,108528+23]..[2956,108528+26])
                    Pexp_ident "ast" (typing/typemod.ml[2956,108528+23]..[2956,108528+26])
              ]
    ]
  structure_item (typing/typemod.ml[2961,108650+0]..[2989,109496+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2961,108650+4]..[2961,108650+22])
          Ppat_var "package_signatures" (typing/typemod.ml[2961,108650+4]..[2961,108650+22])
        expression (typing/typemod.ml[2961,108650+23]..[2989,109496+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2961,108650+23]..[2961,108650+28])
            Ppat_var "units" (typing/typemod.ml[2961,108650+23]..[2961,108650+28])
          expression (typing/typemod.ml[2962,108681+2]..[2989,109496+18])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/typemod.ml[2962,108681+6]..[2962,108681+20])
                  Ppat_var "units_with_ids" (typing/typemod.ml[2962,108681+6]..[2962,108681+20])
                expression (typing/typemod.ml[2963,108704+4]..[2968,108869+11])
                  Pexp_apply
                  expression (typing/typemod.ml[2963,108704+4]..[2963,108704+12])
                    Pexp_ident "List.map" (typing/typemod.ml[2963,108704+4]..[2963,108704+12])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2964,108717+6]..[2967,108841+27])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/typemod.ml[2964,108717+11]..[2964,108717+21])
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[2964,108717+12]..[2964,108717+16])
                              Ppat_var "name" (typing/typemod.ml[2964,108717+12]..[2964,108717+16])
                            pattern (typing/typemod.ml[2964,108717+18]..[2964,108717+20])
                              Ppat_var "sg" (typing/typemod.ml[2964,108717+18]..[2964,108717+20])
                          ]
                        expression (typing/typemod.ml[2965,108742+8]..[2967,108841+26])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[2965,108742+12]..[2965,108742+17])
                                Ppat_var "oldid" (typing/typemod.ml[2965,108742+12]..[2965,108742+17])
                              expression (typing/typemod.ml[2965,108742+20]..[2965,108742+48])
                                Pexp_apply
                                expression (typing/typemod.ml[2965,108742+20]..[2965,108742+43])
                                  Pexp_ident "Ident.create_persistent" (typing/typemod.ml[2965,108742+20]..[2965,108742+43])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[2965,108742+44]..[2965,108742+48])
                                      Pexp_ident "name" (typing/typemod.ml[2965,108742+44]..[2965,108742+48])
                                ]
                          ]
                          expression (typing/typemod.ml[2966,108794+8]..[2967,108841+26])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/typemod.ml[2966,108794+12]..[2966,108794+17])
                                  Ppat_var "newid" (typing/typemod.ml[2966,108794+12]..[2966,108794+17])
                                expression (typing/typemod.ml[2966,108794+20]..[2966,108794+43])
                                  Pexp_apply
                                  expression (typing/typemod.ml[2966,108794+20]..[2966,108794+38])
                                    Pexp_ident "Ident.create_local" (typing/typemod.ml[2966,108794+20]..[2966,108794+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[2966,108794+39]..[2966,108794+43])
                                        Pexp_ident "name" (typing/typemod.ml[2966,108794+39]..[2966,108794+43])
                                  ]
                            ]
                            expression (typing/typemod.ml[2967,108841+8]..[2967,108841+26])
                              Pexp_tuple
                              [
                                expression (typing/typemod.ml[2967,108841+9]..[2967,108841+14])
                                  Pexp_ident "oldid" (typing/typemod.ml[2967,108841+9]..[2967,108841+14])
                                expression (typing/typemod.ml[2967,108841+16]..[2967,108841+21])
                                  Pexp_ident "newid" (typing/typemod.ml[2967,108841+16]..[2967,108841+21])
                                expression (typing/typemod.ml[2967,108841+23]..[2967,108841+25])
                                  Pexp_ident "sg" (typing/typemod.ml[2967,108841+23]..[2967,108841+25])
                              ]
                    <arg>
                    Nolabel
                      expression (typing/typemod.ml[2968,108869+6]..[2968,108869+11])
                        Pexp_ident "units" (typing/typemod.ml[2968,108869+6]..[2968,108869+11])
                  ]
            ]
            expression (typing/typemod.ml[2970,108886+2]..[2989,109496+18])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/typemod.ml[2970,108886+6]..[2970,108886+11])
                    Ppat_var "subst" (typing/typemod.ml[2970,108886+6]..[2970,108886+11])
                  expression (typing/typemod.ml[2971,108900+4]..[2974,109006+35])
                    Pexp_apply
                    expression (typing/typemod.ml[2971,108900+4]..[2971,108900+18])
                      Pexp_ident "List.fold_left" (typing/typemod.ml[2971,108900+4]..[2971,108900+18])
                    [
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[2972,108919+6]..[2973,108955+50])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/typemod.ml[2972,108919+11]..[2972,108919+14])
                            Ppat_var "acc" (typing/typemod.ml[2972,108919+11]..[2972,108919+14])
                          expression (typing/typemod.ml[2972,108919+15]..[2973,108955+49]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/typemod.ml[2972,108919+15]..[2972,108919+32])
                              Ppat_tuple
                              [
                                pattern (typing/typemod.ml[2972,108919+16]..[2972,108919+21])
                                  Ppat_var "oldid" (typing/typemod.ml[2972,108919+16]..[2972,108919+21])
                                pattern (typing/typemod.ml[2972,108919+23]..[2972,108919+28])
                                  Ppat_var "newid" (typing/typemod.ml[2972,108919+23]..[2972,108919+28])
                                pattern (typing/typemod.ml[2972,108919+30]..[2972,108919+31])
                                  Ppat_any
                              ]
                            expression (typing/typemod.ml[2973,108955+8]..[2973,108955+49])
                              Pexp_apply
                              expression (typing/typemod.ml[2973,108955+8]..[2973,108955+24])
                                Pexp_ident "Subst.add_module" (typing/typemod.ml[2973,108955+8]..[2973,108955+24])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2973,108955+25]..[2973,108955+30])
                                    Pexp_ident "oldid" (typing/typemod.ml[2973,108955+25]..[2973,108955+30])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2973,108955+31]..[2973,108955+45])
                                    Pexp_construct "Pident" (typing/typemod.ml[2973,108955+32]..[2973,108955+38])
                                    Some
                                      expression (typing/typemod.ml[2973,108955+39]..[2973,108955+44])
                                        Pexp_ident "newid" (typing/typemod.ml[2973,108955+39]..[2973,108955+44])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2973,108955+46]..[2973,108955+49])
                                    Pexp_ident "acc" (typing/typemod.ml[2973,108955+46]..[2973,108955+49])
                              ]
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[2974,109006+6]..[2974,109006+20])
                          Pexp_ident "Subst.identity" (typing/typemod.ml[2974,109006+6]..[2974,109006+20])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[2974,109006+21]..[2974,109006+35])
                          Pexp_ident "units_with_ids" (typing/typemod.ml[2974,109006+21]..[2974,109006+35])
                    ]
              ]
              expression (typing/typemod.ml[2976,109047+2]..[2989,109496+18])
                Pexp_apply
                expression (typing/typemod.ml[2976,109047+2]..[2976,109047+10])
                  Pexp_ident "List.map" (typing/typemod.ml[2976,109047+2]..[2976,109047+10])
                [
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2977,109058+4]..[2988,109435+60])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[2977,109058+9]..[2977,109058+23])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[2977,109058+10]..[2977,109058+11])
                            Ppat_any
                          pattern (typing/typemod.ml[2977,109058+13]..[2977,109058+18])
                            Ppat_var "newid" (typing/typemod.ml[2977,109058+13]..[2977,109058+18])
                          pattern (typing/typemod.ml[2977,109058+20]..[2977,109058+22])
                            Ppat_var "sg" (typing/typemod.ml[2977,109058+20]..[2977,109058+22])
                        ]
                      expression (typing/typemod.ml[2980,109187+6]..[2988,109435+59])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typemod.ml[2980,109187+10]..[2980,109187+12])
                              Ppat_var "sg" (typing/typemod.ml[2980,109187+10]..[2980,109187+12])
                            expression (typing/typemod.ml[2980,109187+15]..[2980,109187+50])
                              Pexp_apply
                              expression (typing/typemod.ml[2980,109187+15]..[2980,109187+30])
                                Pexp_ident "Subst.signature" (typing/typemod.ml[2980,109187+15]..[2980,109187+30])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2980,109187+31]..[2980,109187+41])
                                    Pexp_construct "Make_local" (typing/typemod.ml[2980,109187+31]..[2980,109187+41])
                                    None
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2980,109187+42]..[2980,109187+47])
                                    Pexp_ident "subst" (typing/typemod.ml[2980,109187+42]..[2980,109187+47])
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[2980,109187+48]..[2980,109187+50])
                                    Pexp_ident "sg" (typing/typemod.ml[2980,109187+48]..[2980,109187+50])
                              ]
                        ]
                        expression (typing/typemod.ml[2981,109241+6]..[2988,109435+59])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[2981,109241+10]..[2981,109241+12])
                                Ppat_var "md" (typing/typemod.ml[2981,109241+10]..[2981,109241+12])
                              expression (typing/typemod.ml[2982,109256+8]..[2986,109416+9])
                                Pexp_record
                                [
                                  "md_type" (typing/typemod.ml[2982,109256+10]..[2982,109256+17])
                                    expression (typing/typemod.ml[2982,109256+18]..[2982,109256+34])
                                      Pexp_construct "Mty_signature" (typing/typemod.ml[2982,109256+18]..[2982,109256+31])
                                      Some
                                        expression (typing/typemod.ml[2982,109256+32]..[2982,109256+34])
                                          Pexp_ident "sg" (typing/typemod.ml[2982,109256+32]..[2982,109256+34])
                                  "md_attributes" (typing/typemod.ml[2983,109292+10]..[2983,109292+23])
                                    expression (typing/typemod.ml[2983,109292+24]..[2983,109292+26])
                                      Pexp_construct "[]" (typing/typemod.ml[2983,109292+24]..[2983,109292+26])
                                      None
                                  "md_loc" (typing/typemod.ml[2984,109320+10]..[2984,109320+16])
                                    expression (typing/typemod.ml[2984,109320+17]..[2984,109320+30])
                                      Pexp_ident "Location.none" (typing/typemod.ml[2984,109320+17]..[2984,109320+30])
                                  "md_uid" (typing/typemod.ml[2985,109352+10]..[2985,109352+16])
                                    expression (typing/typemod.ml[2985,109352+19]..[2985,109352+62])
                                      Pexp_apply
                                      expression (typing/typemod.ml[2985,109352+19]..[2985,109352+25])
                                        Pexp_ident "Uid.mk" (typing/typemod.ml[2985,109352+19]..[2985,109352+25])
                                      [
                                        <arg>
                                        Labelled "current_unit"
                                          expression (typing/typemod.ml[2985,109352+40]..[2985,109352+62])
                                            Pexp_apply
                                            expression (typing/typemod.ml[2985,109352+41]..[2985,109352+58])
                                              Pexp_ident "Env.get_unit_name" (typing/typemod.ml[2985,109352+41]..[2985,109352+58])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[2985,109352+59]..[2985,109352+61])
                                                  Pexp_construct "()" (typing/typemod.ml[2985,109352+59]..[2985,109352+61])
                                                  None
                                            ]
                                      ]
                                ]
                                None
                          ]
                          expression (typing/typemod.ml[2988,109435+6]..[2988,109435+59])
                            Pexp_construct "Sig_module" (typing/typemod.ml[2988,109435+6]..[2988,109435+16])
                            Some
                              expression (typing/typemod.ml[2988,109435+16]..[2988,109435+59])
                                Pexp_tuple
                                [
                                  expression (typing/typemod.ml[2988,109435+17]..[2988,109435+22])
                                    Pexp_ident "newid" (typing/typemod.ml[2988,109435+17]..[2988,109435+22])
                                  expression (typing/typemod.ml[2988,109435+24]..[2988,109435+34])
                                    Pexp_construct "Mp_present" (typing/typemod.ml[2988,109435+24]..[2988,109435+34])
                                    None
                                  expression (typing/typemod.ml[2988,109435+36]..[2988,109435+38])
                                    Pexp_ident "md" (typing/typemod.ml[2988,109435+36]..[2988,109435+38])
                                  expression (typing/typemod.ml[2988,109435+40]..[2988,109435+48])
                                    Pexp_construct "Trec_not" (typing/typemod.ml[2988,109435+40]..[2988,109435+48])
                                    None
                                  expression (typing/typemod.ml[2988,109435+50]..[2988,109435+58])
                                    Pexp_construct "Exported" (typing/typemod.ml[2988,109435+50]..[2988,109435+58])
                                    None
                                ]
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[2989,109496+4]..[2989,109496+18])
                      Pexp_ident "units_with_ids" (typing/typemod.ml[2989,109496+4]..[2989,109496+18])
                ]
    ]
  structure_item (typing/typemod.ml[2991,109516+0]..[3040,111517+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[2991,109516+4]..[2991,109516+17])
          Ppat_var "package_units" (typing/typemod.ml[2991,109516+4]..[2991,109516+17])
        expression (typing/typemod.ml[2991,109516+18]..[3040,111517+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[2991,109516+18]..[2991,109516+29])
            Ppat_var "initial_env" (typing/typemod.ml[2991,109516+18]..[2991,109516+29])
          expression (typing/typemod.ml[2991,109516+30]..[3040,111517+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[2991,109516+30]..[2991,109516+38])
              Ppat_var "objfiles" (typing/typemod.ml[2991,109516+30]..[2991,109516+38])
            expression (typing/typemod.ml[2991,109516+39]..[3040,111517+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[2991,109516+39]..[2991,109516+46])
                Ppat_var "cmifile" (typing/typemod.ml[2991,109516+39]..[2991,109516+46])
              expression (typing/typemod.ml[2991,109516+47]..[3040,111517+5]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/typemod.ml[2991,109516+47]..[2991,109516+57])
                  Ppat_var "modulename" (typing/typemod.ml[2991,109516+47]..[2991,109516+57])
                expression (typing/typemod.ml[2993,109617+2]..[3040,111517+5])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/typemod.ml[2993,109617+6]..[2993,109617+11])
                        Ppat_var "units" (typing/typemod.ml[2993,109617+6]..[2993,109617+11])
                      expression (typing/typemod.ml[2994,109631+4]..[3004,110128+14])
                        Pexp_apply
                        expression (typing/typemod.ml[2994,109631+4]..[2994,109631+12])
                          Pexp_ident "List.map" (typing/typemod.ml[2994,109631+4]..[2994,109631+12])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[2995,109644+6]..[3003,110064+63])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/typemod.ml[2995,109644+11]..[2995,109644+12])
                                Ppat_var "f" (typing/typemod.ml[2995,109644+11]..[2995,109644+12])
                              expression (typing/typemod.ml[2996,109660+9]..[3003,110064+62])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[2996,109660+13]..[2996,109660+17])
                                      Ppat_var "pref" (typing/typemod.ml[2996,109660+13]..[2996,109660+17])
                                    expression (typing/typemod.ml[2996,109660+20]..[2996,109660+37])
                                      Pexp_apply
                                      expression (typing/typemod.ml[2996,109660+20]..[2996,109660+35])
                                        Pexp_ident "chop_extensions" (typing/typemod.ml[2996,109660+20]..[2996,109660+35])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[2996,109660+36]..[2996,109660+37])
                                            Pexp_ident "f" (typing/typemod.ml[2996,109660+36]..[2996,109660+37])
                                      ]
                                ]
                                expression (typing/typemod.ml[2997,109701+9]..[3003,110064+62])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typemod.ml[2997,109701+13]..[2997,109701+20])
                                        Ppat_var "modname" (typing/typemod.ml[2997,109701+13]..[2997,109701+20])
                                      expression (typing/typemod.ml[2997,109701+23]..[2997,109701+70])
                                        Pexp_apply
                                        expression (typing/typemod.ml[2997,109701+23]..[2997,109701+46])
                                          Pexp_ident "String.capitalize_ascii" (typing/typemod.ml[2997,109701+23]..[2997,109701+46])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[2997,109701+46]..[2997,109701+70])
                                              Pexp_apply
                                              expression (typing/typemod.ml[2997,109701+47]..[2997,109701+64])
                                                Pexp_ident "Filename.basename" (typing/typemod.ml[2997,109701+47]..[2997,109701+64])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[2997,109701+65]..[2997,109701+69])
                                                    Pexp_ident "pref" (typing/typemod.ml[2997,109701+65]..[2997,109701+69])
                                              ]
                                        ]
                                  ]
                                  expression (typing/typemod.ml[2998,109775+9]..[3003,110064+62])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/typemod.ml[2998,109775+13]..[2998,109775+15])
                                          Ppat_var "sg" (typing/typemod.ml[2998,109775+13]..[2998,109775+15])
                                        expression (typing/typemod.ml[2998,109775+18]..[2998,109775+60])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2998,109775+18]..[2998,109775+36])
                                            Pexp_ident "Env.read_signature" (typing/typemod.ml[2998,109775+18]..[2998,109775+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2998,109775+37]..[2998,109775+44])
                                                Pexp_ident "modname" (typing/typemod.ml[2998,109775+37]..[2998,109775+44])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2998,109775+45]..[2998,109775+60])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2998,109775+51]..[2998,109775+52])
                                                  Pexp_ident "^" (typing/typemod.ml[2998,109775+51]..[2998,109775+52])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2998,109775+46]..[2998,109775+50])
                                                      Pexp_ident "pref" (typing/typemod.ml[2998,109775+46]..[2998,109775+50])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2998,109775+53]..[2998,109775+59])
                                                      Pexp_constant PConst_string(".cmi",(typing/typemod.ml[2998,109775+54]..[2998,109775+58]),None)
                                                ]
                                          ]
                                    ]
                                    expression (typing/typemod.ml[2999,109839+9]..[3003,110064+62])
                                      Pexp_sequence
                                      expression (typing/typemod.ml[2999,109839+9]..[3002,110006+56])
                                        Pexp_ifthenelse
                                        expression (typing/typemod.ml[2999,109839+12]..[3000,109885+68])
                                          Pexp_apply
                                          expression (typing/typemod.ml[2999,109839+43]..[2999,109839+45])
                                            Pexp_ident "&&" (typing/typemod.ml[2999,109839+43]..[2999,109839+45])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[2999,109839+12]..[2999,109839+42])
                                                Pexp_apply
                                                expression (typing/typemod.ml[2999,109839+12]..[2999,109839+33])
                                                  Pexp_ident "Filename.check_suffix" (typing/typemod.ml[2999,109839+12]..[2999,109839+33])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2999,109839+34]..[2999,109839+35])
                                                      Pexp_ident "f" (typing/typemod.ml[2999,109839+34]..[2999,109839+35])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[2999,109839+36]..[2999,109839+42])
                                                      Pexp_constant PConst_string(".cmi",(typing/typemod.ml[2999,109839+37]..[2999,109839+41]),None)
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[3000,109885+12]..[3000,109885+68])
                                                Pexp_apply
                                                expression (typing/typemod.ml[3000,109885+12]..[3000,109885+15])
                                                  Pexp_ident "not" (typing/typemod.ml[3000,109885+12]..[3000,109885+15])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[3000,109885+15]..[3000,109885+68])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[3000,109885+16]..[3000,109885+40])
                                                        Pexp_ident "Mtype.no_code_needed_sig" (typing/typemod.ml[3000,109885+16]..[3000,109885+40])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[3000,109885+41]..[3000,109885+64])
                                                            Pexp_ident "Env.initial_safe_string" (typing/typemod.ml[3000,109885+41]..[3000,109885+64])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[3000,109885+65]..[3000,109885+67])
                                                            Pexp_ident "sg" (typing/typemod.ml[3000,109885+65]..[3000,109885+67])
                                                      ]
                                                ]
                                          ]
                                        expression (typing/typemod.ml[3001,109954+14]..[3002,110006+56])
                                          Pexp_apply
                                          expression (typing/typemod.ml[3001,109954+14]..[3001,109954+19])
                                            Pexp_ident "raise" (typing/typemod.ml[3001,109954+14]..[3001,109954+19])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[3001,109954+19]..[3002,110006+56])
                                                Pexp_construct "Error" (typing/typemod.ml[3001,109954+20]..[3001,109954+25])
                                                Some
                                                  expression (typing/typemod.ml[3001,109954+25]..[3002,110006+55])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[3001,109954+26]..[3001,109954+39])
                                                        Pexp_ident "Location.none" (typing/typemod.ml[3001,109954+26]..[3001,109954+39])
                                                      expression (typing/typemod.ml[3001,109954+41]..[3001,109954+50])
                                                        Pexp_ident "Env.empty" (typing/typemod.ml[3001,109954+41]..[3001,109954+50])
                                                      expression (typing/typemod.ml[3002,110006+26]..[3002,110006+54])
                                                        Pexp_construct "Implementation_is_required" (typing/typemod.ml[3002,110006+26]..[3002,110006+52])
                                                        Some
                                                          expression (typing/typemod.ml[3002,110006+53]..[3002,110006+54])
                                                            Pexp_ident "f" (typing/typemod.ml[3002,110006+53]..[3002,110006+54])
                                                    ]
                                          ]
                                        None
                                      expression (typing/typemod.ml[3003,110064+9]..[3003,110064+62])
                                        Pexp_tuple
                                        [
                                          expression (typing/typemod.ml[3003,110064+10]..[3003,110064+17])
                                            Pexp_ident "modname" (typing/typemod.ml[3003,110064+10]..[3003,110064+17])
                                          expression (typing/typemod.ml[3003,110064+19]..[3003,110064+61])
                                            Pexp_apply
                                            expression (typing/typemod.ml[3003,110064+19]..[3003,110064+37])
                                              Pexp_ident "Env.read_signature" (typing/typemod.ml[3003,110064+19]..[3003,110064+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[3003,110064+38]..[3003,110064+45])
                                                  Pexp_ident "modname" (typing/typemod.ml[3003,110064+38]..[3003,110064+45])
                                              <arg>
                                              Nolabel
                                                expression (typing/typemod.ml[3003,110064+46]..[3003,110064+61])
                                                  Pexp_apply
                                                  expression (typing/typemod.ml[3003,110064+52]..[3003,110064+53])
                                                    Pexp_ident "^" (typing/typemod.ml[3003,110064+52]..[3003,110064+53])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[3003,110064+47]..[3003,110064+51])
                                                        Pexp_ident "pref" (typing/typemod.ml[3003,110064+47]..[3003,110064+51])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/typemod.ml[3003,110064+54]..[3003,110064+60])
                                                        Pexp_constant PConst_string(".cmi",(typing/typemod.ml[3003,110064+55]..[3003,110064+59]),None)
                                                  ]
                                            ]
                                        ]
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[3004,110128+6]..[3004,110128+14])
                              Pexp_ident "objfiles" (typing/typemod.ml[3004,110128+6]..[3004,110128+14])
                        ]
                  ]
                  expression (typing/typemod.ml[3006,110189+2]..[3040,111517+5])
                    Pexp_sequence
                    expression (typing/typemod.ml[3006,110189+2]..[3006,110189+16])
                      Pexp_apply
                      expression (typing/typemod.ml[3006,110189+2]..[3006,110189+14])
                        Pexp_ident "Ident.reinit" (typing/typemod.ml[3006,110189+2]..[3006,110189+14])
                      [
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3006,110189+14]..[3006,110189+16])
                            Pexp_construct "()" (typing/typemod.ml[3006,110189+14]..[3006,110189+16])
                            None
                      ]
                    expression (typing/typemod.ml[3007,110207+2]..[3040,111517+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/typemod.ml[3007,110207+6]..[3007,110207+8])
                            Ppat_var "sg" (typing/typemod.ml[3007,110207+6]..[3007,110207+8])
                          expression (typing/typemod.ml[3007,110207+11]..[3007,110207+35])
                            Pexp_apply
                            expression (typing/typemod.ml[3007,110207+11]..[3007,110207+29])
                              Pexp_ident "package_signatures" (typing/typemod.ml[3007,110207+11]..[3007,110207+29])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[3007,110207+30]..[3007,110207+35])
                                  Pexp_ident "units" (typing/typemod.ml[3007,110207+30]..[3007,110207+35])
                            ]
                      ]
                      expression (typing/typemod.ml[3009,110292+2]..[3040,111517+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/typemod.ml[3009,110292+6]..[3009,110292+12])
                              Ppat_var "prefix" (typing/typemod.ml[3009,110292+6]..[3009,110292+12])
                            expression (typing/typemod.ml[3009,110292+15]..[3009,110292+48])
                              Pexp_apply
                              expression (typing/typemod.ml[3009,110292+15]..[3009,110292+40])
                                Pexp_ident "Filename.remove_extension" (typing/typemod.ml[3009,110292+15]..[3009,110292+40])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[3009,110292+41]..[3009,110292+48])
                                    Pexp_ident "cmifile" (typing/typemod.ml[3009,110292+41]..[3009,110292+48])
                              ]
                        ]
                        expression (typing/typemod.ml[3010,110344+2]..[3040,111517+5])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/typemod.ml[3010,110344+6]..[3010,110344+13])
                                Ppat_var "mlifile" (typing/typemod.ml[3010,110344+6]..[3010,110344+13])
                              expression (typing/typemod.ml[3010,110344+16]..[3010,110344+49])
                                Pexp_apply
                                expression (typing/typemod.ml[3010,110344+23]..[3010,110344+24])
                                  Pexp_ident "^" (typing/typemod.ml[3010,110344+23]..[3010,110344+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[3010,110344+16]..[3010,110344+22])
                                      Pexp_ident "prefix" (typing/typemod.ml[3010,110344+16]..[3010,110344+22])
                                  <arg>
                                  Nolabel
                                    expression (typing/typemod.ml[3010,110344+25]..[3010,110344+49])
                                      Pexp_apply
                                      expression (typing/typemod.ml[3010,110344+25]..[3010,110344+26])
                                        Pexp_ident "!" (typing/typemod.ml[3010,110344+25]..[3010,110344+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[3010,110344+26]..[3010,110344+49])
                                            Pexp_ident "Config.interface_suffix" (typing/typemod.ml[3010,110344+26]..[3010,110344+49])
                                      ]
                                ]
                          ]
                          expression (typing/typemod.ml[3011,110397+2]..[3040,111517+5])
                            Pexp_ifthenelse
                            expression (typing/typemod.ml[3011,110397+5]..[3011,110397+28])
                              Pexp_apply
                              expression (typing/typemod.ml[3011,110397+5]..[3011,110397+20])
                                Pexp_ident "Sys.file_exists" (typing/typemod.ml[3011,110397+5]..[3011,110397+20])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typemod.ml[3011,110397+21]..[3011,110397+28])
                                    Pexp_ident "mlifile" (typing/typemod.ml[3011,110397+21]..[3011,110397+28])
                              ]
                            expression (typing/typemod.ml[3011,110397+34]..[3021,110878+5])
                              Pexp_sequence
                              expression (typing/typemod.ml[3012,110437+4]..[3015,110591+7])
                                Pexp_ifthenelse
                                expression (typing/typemod.ml[3012,110437+7]..[3012,110437+36])
                                  Pexp_apply
                                  expression (typing/typemod.ml[3012,110437+7]..[3012,110437+10])
                                    Pexp_ident "not" (typing/typemod.ml[3012,110437+7]..[3012,110437+10])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[3012,110437+11]..[3012,110437+36])
                                        Pexp_apply
                                        expression (typing/typemod.ml[3012,110437+12]..[3012,110437+27])
                                          Pexp_ident "Sys.file_exists" (typing/typemod.ml[3012,110437+12]..[3012,110437+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[3012,110437+28]..[3012,110437+35])
                                              Pexp_ident "cmifile" (typing/typemod.ml[3012,110437+28]..[3012,110437+35])
                                        ]
                                  ]
                                expression (typing/typemod.ml[3012,110437+42]..[3015,110591+7])
                                  Pexp_apply
                                  expression (typing/typemod.ml[3013,110485+6]..[3013,110485+11])
                                    Pexp_ident "raise" (typing/typemod.ml[3013,110485+6]..[3013,110485+11])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/typemod.ml[3013,110485+11]..[3014,110540+50])
                                        Pexp_construct "Error" (typing/typemod.ml[3013,110485+12]..[3013,110485+17])
                                        Some
                                          expression (typing/typemod.ml[3013,110485+17]..[3014,110540+49])
                                            Pexp_tuple
                                            [
                                              expression (typing/typemod.ml[3013,110485+18]..[3013,110485+42])
                                                Pexp_apply
                                                expression (typing/typemod.ml[3013,110485+18]..[3013,110485+34])
                                                  Pexp_ident "Location.in_file" (typing/typemod.ml[3013,110485+18]..[3013,110485+34])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[3013,110485+35]..[3013,110485+42])
                                                      Pexp_ident "mlifile" (typing/typemod.ml[3013,110485+35]..[3013,110485+42])
                                                ]
                                              expression (typing/typemod.ml[3013,110485+44]..[3013,110485+53])
                                                Pexp_ident "Env.empty" (typing/typemod.ml[3013,110485+44]..[3013,110485+53])
                                              expression (typing/typemod.ml[3014,110540+18]..[3014,110540+48])
                                                Pexp_construct "Interface_not_compiled" (typing/typemod.ml[3014,110540+18]..[3014,110540+40])
                                                Some
                                                  expression (typing/typemod.ml[3014,110540+41]..[3014,110540+48])
                                                    Pexp_ident "mlifile" (typing/typemod.ml[3014,110540+41]..[3014,110540+48])
                                            ]
                                  ]
                                None
                              expression (typing/typemod.ml[3016,110600+4]..[3020,110830+47])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[3016,110600+8]..[3016,110600+14])
                                      Ppat_var "dclsig" (typing/typemod.ml[3016,110600+8]..[3016,110600+14])
                                    expression (typing/typemod.ml[3016,110600+17]..[3016,110600+54])
                                      Pexp_apply
                                      expression (typing/typemod.ml[3016,110600+17]..[3016,110600+35])
                                        Pexp_ident "Env.read_signature" (typing/typemod.ml[3016,110600+17]..[3016,110600+35])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[3016,110600+36]..[3016,110600+46])
                                            Pexp_ident "modulename" (typing/typemod.ml[3016,110600+36]..[3016,110600+46])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[3016,110600+47]..[3016,110600+54])
                                            Pexp_ident "cmifile" (typing/typemod.ml[3016,110600+47]..[3016,110600+54])
                                      ]
                                ]
                                expression (typing/typemod.ml[3017,110658+4]..[3020,110830+47])
                                  Pexp_sequence
                                  expression (typing/typemod.ml[3017,110658+4]..[3018,110712+63])
                                    Pexp_apply
                                    expression (typing/typemod.ml[3017,110658+4]..[3017,110658+23])
                                      Pexp_ident "Cmt_format.save_cmt" (typing/typemod.ml[3017,110658+4]..[3017,110658+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[3017,110658+25]..[3017,110658+42])
                                          Pexp_apply
                                          expression (typing/typemod.ml[3017,110658+33]..[3017,110658+34])
                                            Pexp_ident "^" (typing/typemod.ml[3017,110658+33]..[3017,110658+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[3017,110658+26]..[3017,110658+32])
                                                Pexp_ident "prefix" (typing/typemod.ml[3017,110658+26]..[3017,110658+32])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[3017,110658+35]..[3017,110658+41])
                                                Pexp_constant PConst_string(".cmt",(typing/typemod.ml[3017,110658+36]..[3017,110658+40]),None)
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[3017,110658+43]..[3017,110658+53])
                                          Pexp_ident "modulename" (typing/typemod.ml[3017,110658+43]..[3017,110658+53])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[3018,110712+6]..[3018,110712+40])
                                          Pexp_construct "Cmt_format.Packed" (typing/typemod.ml[3018,110712+7]..[3018,110712+24])
                                          Some
                                            expression (typing/typemod.ml[3018,110712+25]..[3018,110712+39])
                                              Pexp_tuple
                                              [
                                                expression (typing/typemod.ml[3018,110712+26]..[3018,110712+28])
                                                  Pexp_ident "sg" (typing/typemod.ml[3018,110712+26]..[3018,110712+28])
                                                expression (typing/typemod.ml[3018,110712+30]..[3018,110712+38])
                                                  Pexp_ident "objfiles" (typing/typemod.ml[3018,110712+30]..[3018,110712+38])
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[3018,110712+41]..[3018,110712+45])
                                          Pexp_construct "None" (typing/typemod.ml[3018,110712+41]..[3018,110712+45])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[3018,110712+46]..[3018,110712+57])
                                          Pexp_ident "initial_env" (typing/typemod.ml[3018,110712+46]..[3018,110712+57])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[3018,110712+59]..[3018,110712+63])
                                          Pexp_construct "None" (typing/typemod.ml[3018,110712+59]..[3018,110712+63])
                                          None
                                    ]
                                  expression (typing/typemod.ml[3019,110778+4]..[3020,110830+47])
                                    Pexp_apply
                                    expression (typing/typemod.ml[3019,110778+4]..[3019,110778+23])
                                      Pexp_ident "Includemod.compunit" (typing/typemod.ml[3019,110778+4]..[3019,110778+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[3019,110778+24]..[3019,110778+35])
                                          Pexp_ident "initial_env" (typing/typemod.ml[3019,110778+24]..[3019,110778+35])
                                      <arg>
                                      Labelled "mark"
                                        expression (typing/typemod.ml[3019,110778+42]..[3019,110778+51])
                                          Pexp_construct "Mark_both" (typing/typemod.ml[3019,110778+42]..[3019,110778+51])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[3020,110830+6]..[3020,110830+29])
                                          Pexp_constant PConst_string("(obtained by packing)",(typing/typemod.ml[3020,110830+7]..[3020,110830+28]),None)
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[3020,110830+30]..[3020,110830+32])
                                          Pexp_ident "sg" (typing/typemod.ml[3020,110830+30]..[3020,110830+32])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[3020,110830+33]..[3020,110830+40])
                                          Pexp_ident "mlifile" (typing/typemod.ml[3020,110830+33]..[3020,110830+40])
                                      <arg>
                                      Nolabel
                                        expression (typing/typemod.ml[3020,110830+41]..[3020,110830+47])
                                          Pexp_ident "dclsig" (typing/typemod.ml[3020,110830+41]..[3020,110830+47])
                                    ]
                            Some
                              expression (typing/typemod.ml[3021,110878+11]..[3040,111517+5])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/typemod.ml[3023,110923+8]..[3023,110923+18])
                                      Ppat_var "unit_names" (typing/typemod.ml[3023,110923+8]..[3023,110923+18])
                                    expression (typing/typemod.ml[3023,110923+21]..[3023,110923+39])
                                      Pexp_apply
                                      expression (typing/typemod.ml[3023,110923+21]..[3023,110923+29])
                                        Pexp_ident "List.map" (typing/typemod.ml[3023,110923+21]..[3023,110923+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[3023,110923+30]..[3023,110923+33])
                                            Pexp_ident "fst" (typing/typemod.ml[3023,110923+30]..[3023,110923+33])
                                        <arg>
                                        Nolabel
                                          expression (typing/typemod.ml[3023,110923+34]..[3023,110923+39])
                                            Pexp_ident "units" (typing/typemod.ml[3023,110923+34]..[3023,110923+39])
                                      ]
                                ]
                                expression (typing/typemod.ml[3024,110966+4]..[3039,111500+16])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typemod.ml[3024,110966+8]..[3024,110966+15])
                                        Ppat_var "imports" (typing/typemod.ml[3024,110966+8]..[3024,110966+15])
                                      expression (typing/typemod.ml[3025,110984+6]..[3027,111063+23])
                                        Pexp_apply
                                        expression (typing/typemod.ml[3025,110984+6]..[3025,110984+17])
                                          Pexp_ident "List.filter" (typing/typemod.ml[3025,110984+6]..[3025,110984+17])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[3026,111002+8]..[3026,111002+60])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (typing/typemod.ml[3026,111002+13]..[3026,111002+25])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/typemod.ml[3026,111002+14]..[3026,111002+18])
                                                    Ppat_var "name" (typing/typemod.ml[3026,111002+14]..[3026,111002+18])
                                                  pattern (typing/typemod.ml[3026,111002+20]..[3026,111002+24])
                                                    Ppat_var "_crc" (typing/typemod.ml[3026,111002+20]..[3026,111002+24])
                                                ]
                                              expression (typing/typemod.ml[3026,111002+29]..[3026,111002+59])
                                                Pexp_apply
                                                expression (typing/typemod.ml[3026,111002+29]..[3026,111002+32])
                                                  Pexp_ident "not" (typing/typemod.ml[3026,111002+29]..[3026,111002+32])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[3026,111002+33]..[3026,111002+59])
                                                      Pexp_apply
                                                      expression (typing/typemod.ml[3026,111002+34]..[3026,111002+42])
                                                        Pexp_ident "List.mem" (typing/typemod.ml[3026,111002+34]..[3026,111002+42])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[3026,111002+43]..[3026,111002+47])
                                                            Pexp_ident "name" (typing/typemod.ml[3026,111002+43]..[3026,111002+47])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/typemod.ml[3026,111002+48]..[3026,111002+58])
                                                            Pexp_ident "unit_names" (typing/typemod.ml[3026,111002+48]..[3026,111002+58])
                                                      ]
                                                ]
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[3027,111063+8]..[3027,111063+23])
                                              Pexp_apply
                                              expression (typing/typemod.ml[3027,111063+9]..[3027,111063+20])
                                                Pexp_ident "Env.imports" (typing/typemod.ml[3027,111063+9]..[3027,111063+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[3027,111063+20]..[3027,111063+22])
                                                    Pexp_construct "()" (typing/typemod.ml[3027,111063+20]..[3027,111063+22])
                                                    None
                                              ]
                                        ]
                                  ]
                                  expression (typing/typemod.ml[3029,111125+4]..[3039,111500+16])
                                    Pexp_sequence
                                    expression (typing/typemod.ml[3029,111125+4]..[3038,111491+7])
                                      Pexp_ifthenelse
                                      expression (typing/typemod.ml[3029,111125+7]..[3029,111125+36])
                                        Pexp_apply
                                        expression (typing/typemod.ml[3029,111125+7]..[3029,111125+10])
                                          Pexp_ident "not" (typing/typemod.ml[3029,111125+7]..[3029,111125+10])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/typemod.ml[3029,111125+11]..[3029,111125+36])
                                              Pexp_apply
                                              expression (typing/typemod.ml[3029,111125+11]..[3029,111125+12])
                                                Pexp_ident "!" (typing/typemod.ml[3029,111125+11]..[3029,111125+12])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[3029,111125+12]..[3029,111125+36])
                                                    Pexp_ident "Clflags.dont_write_files" (typing/typemod.ml[3029,111125+12]..[3029,111125+36])
                                              ]
                                        ]
                                      expression (typing/typemod.ml[3029,111125+42]..[3038,111491+7])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/typemod.ml[3030,111173+10]..[3030,111173+13])
                                              Ppat_var "cmi" (typing/typemod.ml[3030,111173+10]..[3030,111173+13])
                                            expression (typing/typemod.ml[3031,111189+8]..[3033,111290+35])
                                              Pexp_apply
                                              expression (typing/typemod.ml[3031,111189+8]..[3031,111189+39])
                                                Pexp_ident "Env.save_signature_with_imports" (typing/typemod.ml[3031,111189+8]..[3031,111189+39])
                                              [
                                                <arg>
                                                Labelled "alerts"
                                                  expression (typing/typemod.ml[3031,111189+48]..[3031,111189+76])
                                                    Pexp_ident "Misc.Stdlib.String.Map.empty" (typing/typemod.ml[3031,111189+48]..[3031,111189+76])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[3032,111266+10]..[3032,111266+12])
                                                    Pexp_ident "sg" (typing/typemod.ml[3032,111266+10]..[3032,111266+12])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[3032,111266+13]..[3032,111266+23])
                                                    Pexp_ident "modulename" (typing/typemod.ml[3032,111266+13]..[3032,111266+23])
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[3033,111290+10]..[3033,111290+27])
                                                    Pexp_apply
                                                    expression (typing/typemod.ml[3033,111290+18]..[3033,111290+19])
                                                      Pexp_ident "^" (typing/typemod.ml[3033,111290+18]..[3033,111290+19])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[3033,111290+11]..[3033,111290+17])
                                                          Pexp_ident "prefix" (typing/typemod.ml[3033,111290+11]..[3033,111290+17])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/typemod.ml[3033,111290+20]..[3033,111290+26])
                                                          Pexp_constant PConst_string(".cmi",(typing/typemod.ml[3033,111290+21]..[3033,111290+25]),None)
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/typemod.ml[3033,111290+28]..[3033,111290+35])
                                                    Pexp_ident "imports" (typing/typemod.ml[3033,111290+28]..[3033,111290+35])
                                              ]
                                        ]
                                        expression (typing/typemod.ml[3035,111335+6]..[3037,111472+18])
                                          Pexp_apply
                                          expression (typing/typemod.ml[3035,111335+6]..[3035,111335+25])
                                            Pexp_ident "Cmt_format.save_cmt" (typing/typemod.ml[3035,111335+6]..[3035,111335+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[3035,111335+26]..[3035,111335+43])
                                                Pexp_apply
                                                expression (typing/typemod.ml[3035,111335+34]..[3035,111335+35])
                                                  Pexp_ident "^" (typing/typemod.ml[3035,111335+34]..[3035,111335+35])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[3035,111335+27]..[3035,111335+33])
                                                      Pexp_ident "prefix" (typing/typemod.ml[3035,111335+27]..[3035,111335+33])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/typemod.ml[3035,111335+36]..[3035,111335+42])
                                                      Pexp_constant PConst_string(".cmt",(typing/typemod.ml[3035,111335+37]..[3035,111335+41]),None)
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[3035,111335+45]..[3035,111335+55])
                                                Pexp_ident "modulename" (typing/typemod.ml[3035,111335+45]..[3035,111335+55])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[3036,111391+8]..[3036,111391+63])
                                                Pexp_construct "Cmt_format.Packed" (typing/typemod.ml[3036,111391+9]..[3036,111391+26])
                                                Some
                                                  expression (typing/typemod.ml[3036,111391+27]..[3036,111391+62])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/typemod.ml[3036,111391+28]..[3036,111391+51])
                                                        Pexp_field
                                                        expression (typing/typemod.ml[3036,111391+28]..[3036,111391+31])
                                                          Pexp_ident "cmi" (typing/typemod.ml[3036,111391+28]..[3036,111391+31])
                                                        "Cmi_format.cmi_sign" (typing/typemod.ml[3036,111391+32]..[3036,111391+51])
                                                      expression (typing/typemod.ml[3036,111391+53]..[3036,111391+61])
                                                        Pexp_ident "objfiles" (typing/typemod.ml[3036,111391+53]..[3036,111391+61])
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[3036,111391+64]..[3036,111391+68])
                                                Pexp_construct "None" (typing/typemod.ml[3036,111391+64]..[3036,111391+68])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[3036,111391+69]..[3036,111391+80])
                                                Pexp_ident "initial_env" (typing/typemod.ml[3036,111391+69]..[3036,111391+80])
                                            <arg>
                                            Nolabel
                                              expression (typing/typemod.ml[3037,111472+8]..[3037,111472+18])
                                                Pexp_construct "Some" (typing/typemod.ml[3037,111472+9]..[3037,111472+13])
                                                Some
                                                  expression (typing/typemod.ml[3037,111472+14]..[3037,111472+17])
                                                    Pexp_ident "cmi" (typing/typemod.ml[3037,111472+14]..[3037,111472+17])
                                          ]
                                      None
                                    expression (typing/typemod.ml[3039,111500+4]..[3039,111500+16])
                                      Pexp_construct "Tcoerce_none" (typing/typemod.ml[3039,111500+4]..[3039,111500+16])
                                      None
    ]
  structure_item (typing/typemod.ml[3046,111546+0]..[3046,111546+13])
    Pstr_open Fresh
    module_expr (typing/typemod.ml[3046,111546+5]..[3046,111546+13])
      Pmod_ident "Printtyp" (typing/typemod.ml[3046,111546+5]..[3046,111546+13])
  structure_item (typing/typemod.ml[3048,111561+0]..[3185,117987+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[3048,111561+4]..[3048,111561+16])
          Ppat_var "report_error" (typing/typemod.ml[3048,111561+4]..[3048,111561+16])
        expression (typing/typemod.ml[3048,111561+17]..[3185,117987+21]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (typing/typemod.ml[3048,111561+18]..[3048,111561+21])
            Ppat_var "loc" (typing/typemod.ml[3048,111561+18]..[3048,111561+21])
          expression (typing/typemod.ml[3048,111561+22]..[3185,117987+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typemod.ml[3048,111561+22]..[3048,111561+26])
              Ppat_var "_env" (typing/typemod.ml[3048,111561+22]..[3048,111561+26])
            expression (typing/typemod.ml[3048,111561+29]..[3185,117987+21])
              Pexp_function
              [
                <case>
                  pattern (typing/typemod.ml[3049,111599+4]..[3049,111599+20])
                    Ppat_construct "Cannot_apply" (typing/typemod.ml[3049,111599+4]..[3049,111599+16])
                    Some
                      []
                      pattern (typing/typemod.ml[3049,111599+17]..[3049,111599+20])
                        Ppat_var "mty" (typing/typemod.ml[3049,111599+17]..[3049,111599+20])
                  expression (typing/typemod.ml[3050,111623+6]..[3051,111650+71])
                    Pexp_apply
                    expression (typing/typemod.ml[3050,111623+6]..[3050,111623+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3050,111623+6]..[3050,111623+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3050,111623+23]..[3050,111623+26])
                          Pexp_ident "loc" (typing/typemod.ml[3050,111623+23]..[3050,111623+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3051,111650+8]..[3051,111650+59])
                          Pexp_constant PConst_string("@[This module is not a functor; it has type@ %a@]",(typing/typemod.ml[3051,111650+9]..[3051,111650+58]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3051,111650+60]..[3051,111650+67])
                          Pexp_ident "modtype" (typing/typemod.ml[3051,111650+60]..[3051,111650+67])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3051,111650+68]..[3051,111650+71])
                          Pexp_ident "mty" (typing/typemod.ml[3051,111650+68]..[3051,111650+71])
                    ]
                <case>
                  pattern (typing/typemod.ml[3052,111722+4]..[3052,111722+21])
                    Ppat_construct "Not_included" (typing/typemod.ml[3052,111722+4]..[3052,111722+16])
                    Some
                      []
                      pattern (typing/typemod.ml[3052,111722+17]..[3052,111722+21])
                        Ppat_var "errs" (typing/typemod.ml[3052,111722+17]..[3052,111722+21])
                  expression (typing/typemod.ml[3053,111747+6]..[3054,111805+64])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[3053,111747+10]..[3053,111747+14])
                          Ppat_var "main" (typing/typemod.ml[3053,111747+10]..[3053,111747+14])
                        expression (typing/typemod.ml[3053,111747+17]..[3053,111747+54])
                          Pexp_apply
                          expression (typing/typemod.ml[3053,111747+17]..[3053,111747+49])
                            Pexp_ident "Includemod_errorprinter.err_msgs" (typing/typemod.ml[3053,111747+17]..[3053,111747+49])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[3053,111747+50]..[3053,111747+54])
                                Pexp_ident "errs" (typing/typemod.ml[3053,111747+50]..[3053,111747+54])
                          ]
                    ]
                    expression (typing/typemod.ml[3054,111805+6]..[3054,111805+64])
                      Pexp_apply
                      expression (typing/typemod.ml[3054,111805+6]..[3054,111805+21])
                        Pexp_ident "Location.errorf" (typing/typemod.ml[3054,111805+6]..[3054,111805+21])
                      [
                        <arg>
                        Labelled "loc"
                          expression (typing/typemod.ml[3054,111805+23]..[3054,111805+26])
                            Pexp_ident "loc" (typing/typemod.ml[3054,111805+23]..[3054,111805+26])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3054,111805+27]..[3054,111805+59])
                            Pexp_constant PConst_string("@[<v>Signature mismatch:@ %t@]",(typing/typemod.ml[3054,111805+28]..[3054,111805+58]),None)
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3054,111805+60]..[3054,111805+64])
                            Pexp_ident "main" (typing/typemod.ml[3054,111805+60]..[3054,111805+64])
                      ]
                <case>
                  pattern (typing/typemod.ml[3055,111870+4]..[3055,111870+35])
                    Ppat_construct "Cannot_eliminate_dependency" (typing/typemod.ml[3055,111870+4]..[3055,111870+31])
                    Some
                      []
                      pattern (typing/typemod.ml[3055,111870+32]..[3055,111870+35])
                        Ppat_var "mty" (typing/typemod.ml[3055,111870+32]..[3055,111870+35])
                  expression (typing/typemod.ml[3056,111909+6]..[3059,112045+74])
                    Pexp_apply
                    expression (typing/typemod.ml[3056,111909+6]..[3056,111909+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3056,111909+6]..[3056,111909+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3056,111909+23]..[3056,111909+26])
                          Pexp_ident "loc" (typing/typemod.ml[3056,111909+23]..[3056,111909+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3057,111936+8]..[3059,112045+62])
                          Pexp_constant PConst_string("@[This functor has type@ %a@ The parameter cannot be eliminated in the result type.@ Please bind the argument to a module identifier.@]",(typing/typemod.ml[3057,111936+9]..[3059,112045+61]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3059,112045+63]..[3059,112045+70])
                          Pexp_ident "modtype" (typing/typemod.ml[3059,112045+63]..[3059,112045+70])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3059,112045+71]..[3059,112045+74])
                          Pexp_ident "mty" (typing/typemod.ml[3059,112045+71]..[3059,112045+74])
                    ]
                <case>
                  pattern (typing/typemod.ml[3060,112120+4]..[3060,112120+22])
                    Ppat_construct "Signature_expected" (typing/typemod.ml[3060,112120+4]..[3060,112120+22])
                    None
                  expression (typing/typemod.ml[3061,112146+6]..[3061,112146+64])
                    Pexp_apply
                    expression (typing/typemod.ml[3061,112146+6]..[3061,112146+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3061,112146+6]..[3061,112146+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3061,112146+23]..[3061,112146+26])
                          Pexp_ident "loc" (typing/typemod.ml[3061,112146+23]..[3061,112146+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3061,112146+27]..[3061,112146+64])
                          Pexp_constant PConst_string("This module type is not a signature",(typing/typemod.ml[3061,112146+28]..[3061,112146+63]),None)
                    ]
                <case>
                  pattern (typing/typemod.ml[3062,112211+4]..[3062,112211+26])
                    Ppat_construct "Structure_expected" (typing/typemod.ml[3062,112211+4]..[3062,112211+22])
                    Some
                      []
                      pattern (typing/typemod.ml[3062,112211+23]..[3062,112211+26])
                        Ppat_var "mty" (typing/typemod.ml[3062,112211+23]..[3062,112211+26])
                  expression (typing/typemod.ml[3063,112241+6]..[3064,112268+71])
                    Pexp_apply
                    expression (typing/typemod.ml[3063,112241+6]..[3063,112241+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3063,112241+6]..[3063,112241+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3063,112241+23]..[3063,112241+26])
                          Pexp_ident "loc" (typing/typemod.ml[3063,112241+23]..[3063,112241+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3064,112268+8]..[3064,112268+59])
                          Pexp_constant PConst_string("@[This module is not a structure; it has type@ %a",(typing/typemod.ml[3064,112268+9]..[3064,112268+58]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3064,112268+60]..[3064,112268+67])
                          Pexp_ident "modtype" (typing/typemod.ml[3064,112268+60]..[3064,112268+67])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3064,112268+68]..[3064,112268+71])
                          Pexp_ident "mty" (typing/typemod.ml[3064,112268+68]..[3064,112268+71])
                    ]
                <case>
                  pattern (typing/typemod.ml[3065,112340+4]..[3065,112340+25])
                    Ppat_construct "With_no_component" (typing/typemod.ml[3065,112340+4]..[3065,112340+21])
                    Some
                      []
                      pattern (typing/typemod.ml[3065,112340+22]..[3065,112340+25])
                        Ppat_var "lid" (typing/typemod.ml[3065,112340+22]..[3065,112340+25])
                  expression (typing/typemod.ml[3066,112369+6]..[3068,112472+21])
                    Pexp_apply
                    expression (typing/typemod.ml[3066,112369+6]..[3066,112369+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3066,112369+6]..[3066,112369+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3066,112369+23]..[3066,112369+26])
                          Pexp_ident "loc" (typing/typemod.ml[3066,112369+23]..[3066,112369+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3067,112396+8]..[3067,112396+75])
                          Pexp_constant PConst_string("@[The signature constrained by `with' has no component named %a@]",(typing/typemod.ml[3067,112396+9]..[3067,112396+74]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3068,112472+8]..[3068,112472+17])
                          Pexp_ident "longident" (typing/typemod.ml[3068,112472+8]..[3068,112472+17])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3068,112472+18]..[3068,112472+21])
                          Pexp_ident "lid" (typing/typemod.ml[3068,112472+18]..[3068,112472+21])
                    ]
                <case>
                  pattern (typing/typemod.ml[3069,112494+4]..[3069,112494+35])
                    Ppat_construct "With_mismatch" (typing/typemod.ml[3069,112494+4]..[3069,112494+17])
                    Some
                      []
                      pattern (typing/typemod.ml[3069,112494+17]..[3069,112494+35])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[3069,112494+18]..[3069,112494+21])
                            Ppat_var "lid" (typing/typemod.ml[3069,112494+18]..[3069,112494+21])
                          pattern (typing/typemod.ml[3069,112494+23]..[3069,112494+34])
                            Ppat_var "explanation" (typing/typemod.ml[3069,112494+23]..[3069,112494+34])
                        ]
                  expression (typing/typemod.ml[3070,112533+6]..[3077,112829+26])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[3070,112533+10]..[3070,112533+14])
                          Ppat_var "main" (typing/typemod.ml[3070,112533+10]..[3070,112533+14])
                        expression (typing/typemod.ml[3070,112533+17]..[3070,112533+61])
                          Pexp_apply
                          expression (typing/typemod.ml[3070,112533+17]..[3070,112533+49])
                            Pexp_ident "Includemod_errorprinter.err_msgs" (typing/typemod.ml[3070,112533+17]..[3070,112533+49])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[3070,112533+50]..[3070,112533+61])
                                Pexp_ident "explanation" (typing/typemod.ml[3070,112533+50]..[3070,112533+61])
                          ]
                    ]
                    expression (typing/typemod.ml[3071,112598+6]..[3077,112829+26])
                      Pexp_apply
                      expression (typing/typemod.ml[3071,112598+6]..[3071,112598+21])
                        Pexp_ident "Location.errorf" (typing/typemod.ml[3071,112598+6]..[3071,112598+21])
                      [
                        <arg>
                        Labelled "loc"
                          expression (typing/typemod.ml[3071,112598+23]..[3071,112598+26])
                            Pexp_ident "loc" (typing/typemod.ml[3071,112598+23]..[3071,112598+26])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3072,112625+8]..[3076,112812+16])
                            Pexp_constant PConst_string("@[<v>@[In this `with' constraint, the new definition of %a@ does not match its original definition@ in the constrained signature:@]@ %t@]",(typing/typemod.ml[3072,112625+9]..[3076,112812+15]),None)
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3077,112829+8]..[3077,112829+17])
                            Pexp_ident "longident" (typing/typemod.ml[3077,112829+8]..[3077,112829+17])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3077,112829+18]..[3077,112829+21])
                            Pexp_ident "lid" (typing/typemod.ml[3077,112829+18]..[3077,112829+21])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3077,112829+22]..[3077,112829+26])
                            Pexp_ident "main" (typing/typemod.ml[3077,112829+22]..[3077,112829+26])
                      ]
                <case>
                  pattern (typing/typemod.ml[3078,112856+4]..[3078,112856+68])
                    Ppat_construct "With_makes_applicative_functor_ill_typed" (typing/typemod.ml[3078,112856+4]..[3078,112856+44])
                    Some
                      []
                      pattern (typing/typemod.ml[3078,112856+44]..[3078,112856+68])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[3078,112856+45]..[3078,112856+48])
                            Ppat_var "lid" (typing/typemod.ml[3078,112856+45]..[3078,112856+48])
                          pattern (typing/typemod.ml[3078,112856+50]..[3078,112856+54])
                            Ppat_var "path" (typing/typemod.ml[3078,112856+50]..[3078,112856+54])
                          pattern (typing/typemod.ml[3078,112856+56]..[3078,112856+67])
                            Ppat_var "explanation" (typing/typemod.ml[3078,112856+56]..[3078,112856+67])
                        ]
                  expression (typing/typemod.ml[3079,112928+6]..[3085,113195+43])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[3079,112928+10]..[3079,112928+14])
                          Ppat_var "main" (typing/typemod.ml[3079,112928+10]..[3079,112928+14])
                        expression (typing/typemod.ml[3079,112928+17]..[3079,112928+61])
                          Pexp_apply
                          expression (typing/typemod.ml[3079,112928+17]..[3079,112928+49])
                            Pexp_ident "Includemod_errorprinter.err_msgs" (typing/typemod.ml[3079,112928+17]..[3079,112928+49])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[3079,112928+50]..[3079,112928+61])
                                Pexp_ident "explanation" (typing/typemod.ml[3079,112928+50]..[3079,112928+61])
                          ]
                    ]
                    expression (typing/typemod.ml[3080,112993+6]..[3085,113195+43])
                      Pexp_apply
                      expression (typing/typemod.ml[3080,112993+6]..[3080,112993+21])
                        Pexp_ident "Location.errorf" (typing/typemod.ml[3080,112993+6]..[3080,112993+21])
                      [
                        <arg>
                        Labelled "loc"
                          expression (typing/typemod.ml[3080,112993+23]..[3080,112993+26])
                            Pexp_ident "loc" (typing/typemod.ml[3080,112993+23]..[3080,112993+26])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3081,113020+8]..[3084,113178+16])
                            Pexp_constant PConst_string("@[<v>@[This `with' constraint on %a makes the applicative functor @ type %s ill-typed in the constrained signature:@]@ %t@]",(typing/typemod.ml[3081,113020+9]..[3084,113178+15]),None)
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3085,113195+8]..[3085,113195+17])
                            Pexp_ident "longident" (typing/typemod.ml[3085,113195+8]..[3085,113195+17])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3085,113195+18]..[3085,113195+21])
                            Pexp_ident "lid" (typing/typemod.ml[3085,113195+18]..[3085,113195+21])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3085,113195+22]..[3085,113195+38])
                            Pexp_apply
                            expression (typing/typemod.ml[3085,113195+23]..[3085,113195+32])
                              Pexp_ident "Path.name" (typing/typemod.ml[3085,113195+23]..[3085,113195+32])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[3085,113195+33]..[3085,113195+37])
                                  Pexp_ident "path" (typing/typemod.ml[3085,113195+33]..[3085,113195+37])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3085,113195+39]..[3085,113195+43])
                            Pexp_ident "main" (typing/typemod.ml[3085,113195+39]..[3085,113195+43])
                      ]
                <case>
                  pattern (typing/typemod.ml[3086,113239+4]..[3086,113239+44])
                    Ppat_construct "With_changes_module_alias" (typing/typemod.ml[3086,113239+4]..[3086,113239+29])
                    Some
                      []
                      pattern (typing/typemod.ml[3086,113239+29]..[3086,113239+44])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[3086,113239+30]..[3086,113239+33])
                            Ppat_var "lid" (typing/typemod.ml[3086,113239+30]..[3086,113239+33])
                          pattern (typing/typemod.ml[3086,113239+35]..[3086,113239+37])
                            Ppat_var "id" (typing/typemod.ml[3086,113239+35]..[3086,113239+37])
                          pattern (typing/typemod.ml[3086,113239+39]..[3086,113239+43])
                            Ppat_var "path" (typing/typemod.ml[3086,113239+39]..[3086,113239+43])
                        ]
                  expression (typing/typemod.ml[3087,113287+6]..[3091,113461+54])
                    Pexp_apply
                    expression (typing/typemod.ml[3087,113287+6]..[3087,113287+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3087,113287+6]..[3087,113287+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3087,113287+23]..[3087,113287+26])
                          Pexp_ident "loc" (typing/typemod.ml[3087,113287+23]..[3087,113287+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3088,113314+8]..[3090,113405+55])
                          Pexp_constant PConst_string("@[<v>@[This `with' constraint on %a changes %s, which is aliased @ in the constrained signature (as %s)@].@]",(typing/typemod.ml[3088,113314+9]..[3090,113405+54]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3091,113461+8]..[3091,113461+17])
                          Pexp_ident "longident" (typing/typemod.ml[3091,113461+8]..[3091,113461+17])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3091,113461+18]..[3091,113461+21])
                          Pexp_ident "lid" (typing/typemod.ml[3091,113461+18]..[3091,113461+21])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3091,113461+22]..[3091,113461+38])
                          Pexp_apply
                          expression (typing/typemod.ml[3091,113461+23]..[3091,113461+32])
                            Pexp_ident "Path.name" (typing/typemod.ml[3091,113461+23]..[3091,113461+32])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[3091,113461+33]..[3091,113461+37])
                                Pexp_ident "path" (typing/typemod.ml[3091,113461+33]..[3091,113461+37])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3091,113461+39]..[3091,113461+54])
                          Pexp_apply
                          expression (typing/typemod.ml[3091,113461+40]..[3091,113461+50])
                            Pexp_ident "Ident.name" (typing/typemod.ml[3091,113461+40]..[3091,113461+50])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[3091,113461+51]..[3091,113461+53])
                                Pexp_ident "id" (typing/typemod.ml[3091,113461+51]..[3091,113461+53])
                          ]
                    ]
                <case>
                  pattern (typing/typemod.ml[3092,113516+4]..[3092,113516+39])
                    Ppat_construct "With_cannot_remove_constrained_type" (typing/typemod.ml[3092,113516+4]..[3092,113516+39])
                    None
                  expression (typing/typemod.ml[3093,113559+6]..[3096,113739+61])
                    Pexp_apply
                    expression (typing/typemod.ml[3093,113559+6]..[3093,113559+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3093,113559+6]..[3093,113559+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3093,113559+23]..[3093,113559+26])
                          Pexp_ident "loc" (typing/typemod.ml[3093,113559+23]..[3093,113559+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3094,113586+8]..[3096,113739+61])
                          Pexp_constant PConst_string("@[<v>Destructive substitutions are not supported for constrained @ types (other than when replacing a type constructor with @ a type constructor with the same arguments).@]",(typing/typemod.ml[3094,113586+9]..[3096,113739+60]),None)
                    ]
                <case>
                  pattern (typing/typemod.ml[3097,113801+4]..[3097,113801+45])
                    Ppat_construct "With_cannot_remove_packed_modtype" (typing/typemod.ml[3097,113801+4]..[3097,113801+37])
                    Some
                      []
                      pattern (typing/typemod.ml[3097,113801+38]..[3097,113801+45])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[3097,113801+39]..[3097,113801+40])
                            Ppat_var "p" (typing/typemod.ml[3097,113801+39]..[3097,113801+40])
                          pattern (typing/typemod.ml[3097,113801+41]..[3097,113801+44])
                            Ppat_var "mty" (typing/typemod.ml[3097,113801+41]..[3097,113801+44])
                        ]
                  expression (typing/typemod.ml[3098,113850+6]..[3100,113955+42])
                    Pexp_apply
                    expression (typing/typemod.ml[3098,113850+6]..[3098,113850+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3098,113850+6]..[3098,113850+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3098,113850+23]..[3098,113850+26])
                          Pexp_ident "loc" (typing/typemod.ml[3098,113850+23]..[3098,113850+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3099,113877+8]..[3099,113877+77])
                          Pexp_constant PConst_string("This `with' constraint@ %s := %a@ makes a packed module ill-formed.",(typing/typemod.ml[3099,113877+9]..[3099,113877+76]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3100,113955+8]..[3100,113955+21])
                          Pexp_apply
                          expression (typing/typemod.ml[3100,113955+9]..[3100,113955+18])
                            Pexp_ident "Path.name" (typing/typemod.ml[3100,113955+9]..[3100,113955+18])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[3100,113955+19]..[3100,113955+20])
                                Pexp_ident "p" (typing/typemod.ml[3100,113955+19]..[3100,113955+20])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3100,113955+22]..[3100,113955+38])
                          Pexp_ident "Printtyp.modtype" (typing/typemod.ml[3100,113955+22]..[3100,113955+38])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3100,113955+39]..[3100,113955+42])
                          Pexp_ident "mty" (typing/typemod.ml[3100,113955+39]..[3100,113955+42])
                    ]
                <case>
                  pattern (typing/typemod.ml[3101,113998+4]..[3101,113998+29])
                    Ppat_construct "Repeated_name" (typing/typemod.ml[3101,113998+4]..[3101,113998+17])
                    Some
                      []
                      pattern (typing/typemod.ml[3101,113998+17]..[3101,113998+29])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[3101,113998+18]..[3101,113998+22])
                            Ppat_var "kind" (typing/typemod.ml[3101,113998+18]..[3101,113998+22])
                          pattern (typing/typemod.ml[3101,113998+24]..[3101,113998+28])
                            Ppat_var "name" (typing/typemod.ml[3101,113998+24]..[3101,113998+28])
                        ]
                  expression (typing/typemod.ml[3102,114031+6]..[3105,114179+48])
                    Pexp_apply
                    expression (typing/typemod.ml[3102,114031+6]..[3102,114031+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3102,114031+6]..[3102,114031+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3102,114031+23]..[3102,114031+26])
                          Pexp_ident "loc" (typing/typemod.ml[3102,114031+23]..[3102,114031+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3103,114058+8]..[3104,114111+67])
                          Pexp_constant PConst_string("@[Multiple definition of the %s name %s.@ Names must be unique in a given structure or signature.@]",(typing/typemod.ml[3103,114058+9]..[3104,114111+66]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3105,114179+8]..[3105,114179+43])
                          Pexp_apply
                          expression (typing/typemod.ml[3105,114179+9]..[3105,114179+37])
                            Pexp_ident "Sig_component_kind.to_string" (typing/typemod.ml[3105,114179+9]..[3105,114179+37])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[3105,114179+38]..[3105,114179+42])
                                Pexp_ident "kind" (typing/typemod.ml[3105,114179+38]..[3105,114179+42])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3105,114179+44]..[3105,114179+48])
                          Pexp_ident "name" (typing/typemod.ml[3105,114179+44]..[3105,114179+48])
                    ]
                <case>
                  pattern (typing/typemod.ml[3106,114228+4]..[3106,114228+25])
                    Ppat_construct "Non_generalizable" (typing/typemod.ml[3106,114228+4]..[3106,114228+21])
                    Some
                      []
                      pattern (typing/typemod.ml[3106,114228+22]..[3106,114228+25])
                        Ppat_var "typ" (typing/typemod.ml[3106,114228+22]..[3106,114228+25])
                  expression (typing/typemod.ml[3107,114257+6]..[3109,114332+80])
                    Pexp_apply
                    expression (typing/typemod.ml[3107,114257+6]..[3107,114257+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3107,114257+6]..[3107,114257+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3107,114257+23]..[3107,114257+26])
                          Pexp_ident "loc" (typing/typemod.ml[3107,114257+23]..[3107,114257+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3108,114284+8]..[3109,114332+64])
                          Pexp_constant PConst_string("@[The type of this expression,@ %a,@ contains type variables that cannot be generalized@]",(typing/typemod.ml[3108,114284+9]..[3109,114332+63]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3109,114332+65]..[3109,114332+76])
                          Pexp_ident "type_scheme" (typing/typemod.ml[3109,114332+65]..[3109,114332+76])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3109,114332+77]..[3109,114332+80])
                          Pexp_ident "typ" (typing/typemod.ml[3109,114332+77]..[3109,114332+80])
                    ]
                <case>
                  pattern (typing/typemod.ml[3110,114413+4]..[3110,114413+32])
                    Ppat_construct "Non_generalizable_module" (typing/typemod.ml[3110,114413+4]..[3110,114413+28])
                    Some
                      []
                      pattern (typing/typemod.ml[3110,114413+29]..[3110,114413+32])
                        Ppat_var "mty" (typing/typemod.ml[3110,114413+29]..[3110,114413+32])
                  expression (typing/typemod.ml[3111,114449+6]..[3113,114520+76])
                    Pexp_apply
                    expression (typing/typemod.ml[3111,114449+6]..[3111,114449+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3111,114449+6]..[3111,114449+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3111,114449+23]..[3111,114449+26])
                          Pexp_ident "loc" (typing/typemod.ml[3111,114449+23]..[3111,114449+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3112,114476+8]..[3113,114520+64])
                          Pexp_constant PConst_string("@[The type of this module,@ %a,@ contains type variables that cannot be generalized@]",(typing/typemod.ml[3112,114476+9]..[3113,114520+63]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3113,114520+65]..[3113,114520+72])
                          Pexp_ident "modtype" (typing/typemod.ml[3113,114520+65]..[3113,114520+72])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3113,114520+73]..[3113,114520+76])
                          Pexp_ident "mty" (typing/typemod.ml[3113,114520+73]..[3113,114520+76])
                    ]
                <case>
                  pattern (typing/typemod.ml[3114,114597+4]..[3114,114597+40])
                    Ppat_construct "Implementation_is_required" (typing/typemod.ml[3114,114597+4]..[3114,114597+30])
                    Some
                      []
                      pattern (typing/typemod.ml[3114,114597+31]..[3114,114597+40])
                        Ppat_var "intf_name" (typing/typemod.ml[3114,114597+31]..[3114,114597+40])
                  expression (typing/typemod.ml[3115,114641+6]..[3118,114783+41])
                    Pexp_apply
                    expression (typing/typemod.ml[3115,114641+6]..[3115,114641+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3115,114641+6]..[3115,114641+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3115,114641+23]..[3115,114641+26])
                          Pexp_ident "loc" (typing/typemod.ml[3115,114641+23]..[3115,114641+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3116,114668+8]..[3117,114733+49])
                          Pexp_constant PConst_string("@[The interface %a@ declares values, not just types.@ An implementation must be provided.@]",(typing/typemod.ml[3116,114668+9]..[3117,114733+48]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3118,114783+8]..[3118,114783+31])
                          Pexp_ident "Location.print_filename" (typing/typemod.ml[3118,114783+8]..[3118,114783+31])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3118,114783+32]..[3118,114783+41])
                          Pexp_ident "intf_name" (typing/typemod.ml[3118,114783+32]..[3118,114783+41])
                    ]
                <case>
                  pattern (typing/typemod.ml[3119,114825+4]..[3119,114825+36])
                    Ppat_construct "Interface_not_compiled" (typing/typemod.ml[3119,114825+4]..[3119,114825+26])
                    Some
                      []
                      pattern (typing/typemod.ml[3119,114825+27]..[3119,114825+36])
                        Ppat_var "intf_name" (typing/typemod.ml[3119,114825+27]..[3119,114825+36])
                  expression (typing/typemod.ml[3120,114865+6]..[3122,114954+41])
                    Pexp_apply
                    expression (typing/typemod.ml[3120,114865+6]..[3120,114865+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3120,114865+6]..[3120,114865+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3120,114865+23]..[3120,114865+26])
                          Pexp_ident "loc" (typing/typemod.ml[3120,114865+23]..[3120,114865+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3121,114892+8]..[3121,114892+61])
                          Pexp_constant PConst_string("@[Could not find the .cmi file for interface@ %a.@]",(typing/typemod.ml[3121,114892+9]..[3121,114892+60]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3122,114954+8]..[3122,114954+31])
                          Pexp_ident "Location.print_filename" (typing/typemod.ml[3122,114954+8]..[3122,114954+31])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3122,114954+32]..[3122,114954+41])
                          Pexp_ident "intf_name" (typing/typemod.ml[3122,114954+32]..[3122,114954+41])
                    ]
                <case>
                  pattern (typing/typemod.ml[3123,114996+4]..[3123,114996+31])
                    Ppat_construct "Not_allowed_in_functor_body" (typing/typemod.ml[3123,114996+4]..[3123,114996+31])
                    None
                  expression (typing/typemod.ml[3124,115031+6]..[3126,115113+56])
                    Pexp_apply
                    expression (typing/typemod.ml[3124,115031+6]..[3124,115031+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3124,115031+6]..[3124,115031+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3124,115031+23]..[3124,115031+26])
                          Pexp_ident "loc" (typing/typemod.ml[3124,115031+23]..[3124,115031+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3125,115058+8]..[3125,115058+54])
                          Pexp_constant PConst_string("@[This expression creates fresh types.@ %s@]",(typing/typemod.ml[3125,115058+9]..[3125,115058+53]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3126,115113+8]..[3126,115113+56])
                          Pexp_constant PConst_string("It is not allowed inside applicative functors.",(typing/typemod.ml[3126,115113+9]..[3126,115113+55]),None)
                    ]
                <case>
                  pattern (typing/typemod.ml[3127,115170+4]..[3127,115170+26])
                    Ppat_construct "Not_a_packed_module" (typing/typemod.ml[3127,115170+4]..[3127,115170+23])
                    Some
                      []
                      pattern (typing/typemod.ml[3127,115170+24]..[3127,115170+26])
                        Ppat_var "ty" (typing/typemod.ml[3127,115170+24]..[3127,115170+26])
                  expression (typing/typemod.ml[3128,115200+6]..[3130,115293+20])
                    Pexp_apply
                    expression (typing/typemod.ml[3128,115200+6]..[3128,115200+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3128,115200+6]..[3128,115200+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3128,115200+23]..[3128,115200+26])
                          Pexp_ident "loc" (typing/typemod.ml[3128,115200+23]..[3128,115200+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3129,115227+8]..[3129,115227+65])
                          Pexp_constant PConst_string("This expression is not a packed module. It has type@ %a",(typing/typemod.ml[3129,115227+9]..[3129,115227+64]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3130,115293+8]..[3130,115293+17])
                          Pexp_ident "type_expr" (typing/typemod.ml[3130,115293+8]..[3130,115293+17])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3130,115293+18]..[3130,115293+20])
                          Pexp_ident "ty" (typing/typemod.ml[3130,115293+18]..[3130,115293+20])
                    ]
                <case>
                  pattern (typing/typemod.ml[3131,115314+4]..[3131,115314+31])
                    Ppat_construct "Incomplete_packed_module" (typing/typemod.ml[3131,115314+4]..[3131,115314+28])
                    Some
                      []
                      pattern (typing/typemod.ml[3131,115314+29]..[3131,115314+31])
                        Ppat_var "ty" (typing/typemod.ml[3131,115314+29]..[3131,115314+31])
                  expression (typing/typemod.ml[3132,115349+6]..[3134,115441+20])
                    Pexp_apply
                    expression (typing/typemod.ml[3132,115349+6]..[3132,115349+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3132,115349+6]..[3132,115349+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3132,115349+23]..[3132,115349+26])
                          Pexp_ident "loc" (typing/typemod.ml[3132,115349+23]..[3132,115349+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3133,115376+8]..[3133,115376+64])
                          Pexp_constant PConst_string("The type of this packed module contains variables:@ %a",(typing/typemod.ml[3133,115376+9]..[3133,115376+63]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3134,115441+8]..[3134,115441+17])
                          Pexp_ident "type_expr" (typing/typemod.ml[3134,115441+8]..[3134,115441+17])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3134,115441+18]..[3134,115441+20])
                          Pexp_ident "ty" (typing/typemod.ml[3134,115441+18]..[3134,115441+20])
                    ]
                <case>
                  pattern (typing/typemod.ml[3135,115462+4]..[3135,115462+26])
                    Ppat_construct "Scoping_pack" (typing/typemod.ml[3135,115462+4]..[3135,115462+16])
                    Some
                      []
                      pattern (typing/typemod.ml[3135,115462+17]..[3135,115462+26])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[3135,115462+18]..[3135,115462+21])
                            Ppat_var "lid" (typing/typemod.ml[3135,115462+18]..[3135,115462+21])
                          pattern (typing/typemod.ml[3135,115462+23]..[3135,115462+25])
                            Ppat_var "ty" (typing/typemod.ml[3135,115462+23]..[3135,115462+25])
                        ]
                  expression (typing/typemod.ml[3136,115492+6]..[3138,115578+77])
                    Pexp_apply
                    expression (typing/typemod.ml[3136,115492+6]..[3136,115492+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3136,115492+6]..[3136,115492+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3136,115492+23]..[3136,115492+26])
                          Pexp_ident "loc" (typing/typemod.ml[3136,115492+23]..[3136,115492+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3137,115519+8]..[3138,115578+50])
                          Pexp_constant PConst_string("The type %a in this module cannot be exported.@ Its type contains local dependencies:@ %a",(typing/typemod.ml[3137,115519+9]..[3138,115578+49]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3138,115578+51]..[3138,115578+60])
                          Pexp_ident "longident" (typing/typemod.ml[3138,115578+51]..[3138,115578+60])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3138,115578+61]..[3138,115578+64])
                          Pexp_ident "lid" (typing/typemod.ml[3138,115578+61]..[3138,115578+64])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3138,115578+65]..[3138,115578+74])
                          Pexp_ident "type_expr" (typing/typemod.ml[3138,115578+65]..[3138,115578+74])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3138,115578+75]..[3138,115578+77])
                          Pexp_ident "ty" (typing/typemod.ml[3138,115578+75]..[3138,115578+77])
                    ]
                <case>
                  pattern (typing/typemod.ml[3139,115656+4]..[3139,115656+42])
                    Ppat_construct "Recursive_module_require_explicit_type" (typing/typemod.ml[3139,115656+4]..[3139,115656+42])
                    None
                  expression (typing/typemod.ml[3140,115702+6]..[3140,115702+79])
                    Pexp_apply
                    expression (typing/typemod.ml[3140,115702+6]..[3140,115702+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3140,115702+6]..[3140,115702+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3140,115702+23]..[3140,115702+26])
                          Pexp_ident "loc" (typing/typemod.ml[3140,115702+23]..[3140,115702+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3140,115702+27]..[3140,115702+79])
                          Pexp_constant PConst_string("Recursive modules require an explicit module type.",(typing/typemod.ml[3140,115702+28]..[3140,115702+78]),None)
                    ]
                <case>
                  pattern (typing/typemod.ml[3141,115782+4]..[3141,115782+20])
                    Ppat_construct "Apply_generative" (typing/typemod.ml[3141,115782+4]..[3141,115782+20])
                    None
                  expression (typing/typemod.ml[3142,115806+6]..[3143,115833+68])
                    Pexp_apply
                    expression (typing/typemod.ml[3142,115806+6]..[3142,115806+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3142,115806+6]..[3142,115806+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3142,115806+23]..[3142,115806+26])
                          Pexp_ident "loc" (typing/typemod.ml[3142,115806+23]..[3142,115806+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3143,115833+8]..[3143,115833+68])
                          Pexp_constant PConst_string("This is a generative functor. It can only be applied to ()",(typing/typemod.ml[3143,115833+9]..[3143,115833+67]),None)
                    ]
                <case>
                  pattern (typing/typemod.ml[3144,115902+4]..[3144,115902+25])
                    Ppat_construct "Cannot_scrape_alias" (typing/typemod.ml[3144,115902+4]..[3144,115902+23])
                    Some
                      []
                      pattern (typing/typemod.ml[3144,115902+24]..[3144,115902+25])
                        Ppat_var "p" (typing/typemod.ml[3144,115902+24]..[3144,115902+25])
                  expression (typing/typemod.ml[3145,115931+6]..[3147,116017+14])
                    Pexp_apply
                    expression (typing/typemod.ml[3145,115931+6]..[3145,115931+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3145,115931+6]..[3145,115931+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3145,115931+23]..[3145,115931+26])
                          Pexp_ident "loc" (typing/typemod.ml[3145,115931+23]..[3145,115931+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3146,115958+8]..[3146,115958+58])
                          Pexp_constant PConst_string("This is an alias for module %a, which is missing",(typing/typemod.ml[3146,115958+9]..[3146,115958+57]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3147,116017+8]..[3147,116017+12])
                          Pexp_ident "path" (typing/typemod.ml[3147,116017+8]..[3147,116017+12])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3147,116017+13]..[3147,116017+14])
                          Pexp_ident "p" (typing/typemod.ml[3147,116017+13]..[3147,116017+14])
                    ]
                <case>
                  pattern (typing/typemod.ml[3148,116032+4]..[3148,116032+32])
                    Ppat_construct "Cannot_scrape_package_type" (typing/typemod.ml[3148,116032+4]..[3148,116032+30])
                    Some
                      []
                      pattern (typing/typemod.ml[3148,116032+31]..[3148,116032+32])
                        Ppat_var "p" (typing/typemod.ml[3148,116032+31]..[3148,116032+32])
                  expression (typing/typemod.ml[3149,116068+6]..[3151,116167+14])
                    Pexp_apply
                    expression (typing/typemod.ml[3149,116068+6]..[3149,116068+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3149,116068+6]..[3149,116068+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3149,116068+23]..[3149,116068+26])
                          Pexp_ident "loc" (typing/typemod.ml[3149,116068+23]..[3149,116068+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3150,116095+8]..[3150,116095+71])
                          Pexp_constant PConst_string("The type of this packed module refers to %a, which is missing",(typing/typemod.ml[3150,116095+9]..[3150,116095+70]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3151,116167+8]..[3151,116167+12])
                          Pexp_ident "path" (typing/typemod.ml[3151,116167+8]..[3151,116167+12])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3151,116167+13]..[3151,116167+14])
                          Pexp_ident "p" (typing/typemod.ml[3151,116167+13]..[3151,116167+14])
                    ]
                <case>
                  pattern (typing/typemod.ml[3152,116182+4]..[3152,116182+41])
                    Ppat_construct "Badly_formed_signature" (typing/typemod.ml[3152,116182+4]..[3152,116182+26])
                    Some
                      []
                      pattern (typing/typemod.ml[3152,116182+27]..[3152,116182+41])
                        Ppat_tuple
                        [
                          pattern (typing/typemod.ml[3152,116182+28]..[3152,116182+35])
                            Ppat_var "context" (typing/typemod.ml[3152,116182+28]..[3152,116182+35])
                          pattern (typing/typemod.ml[3152,116182+37]..[3152,116182+40])
                            Ppat_var "err" (typing/typemod.ml[3152,116182+37]..[3152,116182+40])
                        ]
                  expression (typing/typemod.ml[3153,116227+6]..[3153,116227+77])
                    Pexp_apply
                    expression (typing/typemod.ml[3153,116227+6]..[3153,116227+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3153,116227+6]..[3153,116227+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3153,116227+23]..[3153,116227+26])
                          Pexp_ident "loc" (typing/typemod.ml[3153,116227+23]..[3153,116227+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3153,116227+27]..[3153,116227+43])
                          Pexp_constant PConst_string("@[In %s:@ %a@]",(typing/typemod.ml[3153,116227+28]..[3153,116227+42]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3153,116227+44]..[3153,116227+51])
                          Pexp_ident "context" (typing/typemod.ml[3153,116227+44]..[3153,116227+51])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3153,116227+52]..[3153,116227+73])
                          Pexp_ident "Typedecl.report_error" (typing/typemod.ml[3153,116227+52]..[3153,116227+73])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3153,116227+74]..[3153,116227+77])
                          Pexp_ident "err" (typing/typemod.ml[3153,116227+74]..[3153,116227+77])
                    ]
                <case>
                  pattern (typing/typemod.ml[3154,116305+4]..[3156,116407+51])
                    Ppat_construct "Cannot_hide_id" (typing/typemod.ml[3154,116305+4]..[3154,116305+18])
                    Some
                      []
                      pattern (typing/typemod.ml[3154,116305+19]..[3156,116407+51])
                        Ppat_construct "Illegal_shadowing" (typing/typemod.ml[3154,116305+19]..[3154,116305+36])
                        Some
                          []
                          pattern (typing/typemod.ml[3155,116342+6]..[3156,116407+51])
                            Ppat_record Closed
                            [
                              "shadowed_item_kind" (typing/typemod.ml[3155,116342+8]..[3155,116342+26]) ghost
                                pattern (typing/typemod.ml[3155,116342+8]..[3155,116342+26])
                                  Ppat_var "shadowed_item_kind" (typing/typemod.ml[3155,116342+8]..[3155,116342+26])
                              "shadowed_item_id" (typing/typemod.ml[3155,116342+28]..[3155,116342+44]) ghost
                                pattern (typing/typemod.ml[3155,116342+28]..[3155,116342+44])
                                  Ppat_var "shadowed_item_id" (typing/typemod.ml[3155,116342+28]..[3155,116342+44])
                              "shadowed_item_loc" (typing/typemod.ml[3155,116342+46]..[3155,116342+63]) ghost
                                pattern (typing/typemod.ml[3155,116342+46]..[3155,116342+63])
                                  Ppat_var "shadowed_item_loc" (typing/typemod.ml[3155,116342+46]..[3155,116342+63])
                              "shadower_id" (typing/typemod.ml[3156,116407+8]..[3156,116407+19]) ghost
                                pattern (typing/typemod.ml[3156,116407+8]..[3156,116407+19])
                                  Ppat_var "shadower_id" (typing/typemod.ml[3156,116407+8]..[3156,116407+19])
                              "user_id" (typing/typemod.ml[3156,116407+21]..[3156,116407+28]) ghost
                                pattern (typing/typemod.ml[3156,116407+21]..[3156,116407+28])
                                  Ppat_var "user_id" (typing/typemod.ml[3156,116407+21]..[3156,116407+28])
                              "user_kind" (typing/typemod.ml[3156,116407+30]..[3156,116407+39]) ghost
                                pattern (typing/typemod.ml[3156,116407+30]..[3156,116407+39])
                                  Ppat_var "user_kind" (typing/typemod.ml[3156,116407+30]..[3156,116407+39])
                              "user_loc" (typing/typemod.ml[3156,116407+41]..[3156,116407+49]) ghost
                                pattern (typing/typemod.ml[3156,116407+41]..[3156,116407+49])
                                  Ppat_var "user_loc" (typing/typemod.ml[3156,116407+41]..[3156,116407+49])
                            ]
                  expression (typing/typemod.ml[3157,116462+6]..[3168,117069+36])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[3157,116462+10]..[3157,116462+28])
                          Ppat_var "shadowed_item_kind" (typing/typemod.ml[3157,116462+10]..[3157,116462+28])
                        expression (typing/typemod.ml[3157,116462+30]..[3157,116462+77])
                          Pexp_apply
                          expression (typing/typemod.ml[3157,116462+30]..[3157,116462+58])
                            Pexp_ident "Sig_component_kind.to_string" (typing/typemod.ml[3157,116462+30]..[3157,116462+58])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[3157,116462+59]..[3157,116462+77])
                                Pexp_ident "shadowed_item_kind" (typing/typemod.ml[3157,116462+59]..[3157,116462+77])
                          ]
                    ]
                    expression (typing/typemod.ml[3158,116543+6]..[3168,117069+36])
                      Pexp_apply
                      expression (typing/typemod.ml[3158,116543+6]..[3158,116543+21])
                        Pexp_ident "Location.errorf" (typing/typemod.ml[3158,116543+6]..[3158,116543+21])
                      [
                        <arg>
                        Labelled "loc"
                          expression (typing/typemod.ml[3158,116543+23]..[3158,116543+26])
                            Pexp_ident "loc" (typing/typemod.ml[3158,116543+23]..[3158,116543+26])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3159,116570+8]..[3161,116680+67])
                            Pexp_constant PConst_string("@[<v>Illegal shadowing of included %s %a by %a@ %a:@;<1 2>%s %a came from this include@ %a:@;<1 2>The %s %s has no valid type if %a is shadowed@]",(typing/typemod.ml[3159,116570+9]..[3161,116680+66]),None)
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3162,116748+8]..[3162,116748+26])
                            Pexp_ident "shadowed_item_kind" (typing/typemod.ml[3162,116748+8]..[3162,116748+26])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3162,116748+27]..[3162,116748+38])
                            Pexp_ident "Ident.print" (typing/typemod.ml[3162,116748+27]..[3162,116748+38])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3162,116748+39]..[3162,116748+55])
                            Pexp_ident "shadowed_item_id" (typing/typemod.ml[3162,116748+39]..[3162,116748+55])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3162,116748+56]..[3162,116748+67])
                            Pexp_ident "Ident.print" (typing/typemod.ml[3162,116748+56]..[3162,116748+67])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3162,116748+68]..[3162,116748+79])
                            Pexp_ident "shadower_id" (typing/typemod.ml[3162,116748+68]..[3162,116748+79])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3163,116828+8]..[3163,116828+26])
                            Pexp_ident "Location.print_loc" (typing/typemod.ml[3163,116828+8]..[3163,116828+26])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3163,116828+27]..[3163,116828+44])
                            Pexp_ident "shadowed_item_loc" (typing/typemod.ml[3163,116828+27]..[3163,116828+44])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3164,116873+8]..[3164,116873+52])
                            Pexp_apply
                            expression (typing/typemod.ml[3164,116873+9]..[3164,116873+32])
                              Pexp_ident "String.capitalize_ascii" (typing/typemod.ml[3164,116873+9]..[3164,116873+32])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[3164,116873+33]..[3164,116873+51])
                                  Pexp_ident "shadowed_item_kind" (typing/typemod.ml[3164,116873+33]..[3164,116873+51])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3165,116926+8]..[3165,116926+19])
                            Pexp_ident "Ident.print" (typing/typemod.ml[3165,116926+8]..[3165,116926+19])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3165,116926+20]..[3165,116926+36])
                            Pexp_ident "shadowed_item_id" (typing/typemod.ml[3165,116926+20]..[3165,116926+36])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3166,116963+8]..[3166,116963+26])
                            Pexp_ident "Location.print_loc" (typing/typemod.ml[3166,116963+8]..[3166,116963+26])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3166,116963+27]..[3166,116963+35])
                            Pexp_ident "user_loc" (typing/typemod.ml[3166,116963+27]..[3166,116963+35])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3167,116999+8]..[3167,116999+48])
                            Pexp_apply
                            expression (typing/typemod.ml[3167,116999+9]..[3167,116999+37])
                              Pexp_ident "Sig_component_kind.to_string" (typing/typemod.ml[3167,116999+9]..[3167,116999+37])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[3167,116999+38]..[3167,116999+47])
                                  Pexp_ident "user_kind" (typing/typemod.ml[3167,116999+38]..[3167,116999+47])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3167,116999+49]..[3167,116999+69])
                            Pexp_apply
                            expression (typing/typemod.ml[3167,116999+50]..[3167,116999+60])
                              Pexp_ident "Ident.name" (typing/typemod.ml[3167,116999+50]..[3167,116999+60])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[3167,116999+61]..[3167,116999+68])
                                  Pexp_ident "user_id" (typing/typemod.ml[3167,116999+61]..[3167,116999+68])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3168,117069+8]..[3168,117069+19])
                            Pexp_ident "Ident.print" (typing/typemod.ml[3168,117069+8]..[3168,117069+19])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3168,117069+20]..[3168,117069+36])
                            Pexp_ident "shadowed_item_id" (typing/typemod.ml[3168,117069+20]..[3168,117069+36])
                      ]
                <case>
                  pattern (typing/typemod.ml[3169,117106+4]..[3170,117146+72])
                    Ppat_construct "Cannot_hide_id" (typing/typemod.ml[3169,117106+4]..[3169,117106+18])
                    Some
                      []
                      pattern (typing/typemod.ml[3169,117106+19]..[3170,117146+72])
                        Ppat_construct "Appears_in_signature" (typing/typemod.ml[3169,117106+19]..[3169,117106+39])
                        Some
                          []
                          pattern (typing/typemod.ml[3170,117146+6]..[3170,117146+72])
                            Ppat_record Closed
                            [
                              "opened_item_kind" (typing/typemod.ml[3170,117146+8]..[3170,117146+24]) ghost
                                pattern (typing/typemod.ml[3170,117146+8]..[3170,117146+24])
                                  Ppat_var "opened_item_kind" (typing/typemod.ml[3170,117146+8]..[3170,117146+24])
                              "opened_item_id" (typing/typemod.ml[3170,117146+26]..[3170,117146+40]) ghost
                                pattern (typing/typemod.ml[3170,117146+26]..[3170,117146+40])
                                  Ppat_var "opened_item_id" (typing/typemod.ml[3170,117146+26]..[3170,117146+40])
                              "user_id" (typing/typemod.ml[3170,117146+42]..[3170,117146+49]) ghost
                                pattern (typing/typemod.ml[3170,117146+42]..[3170,117146+49])
                                  Ppat_var "user_id" (typing/typemod.ml[3170,117146+42]..[3170,117146+49])
                              "user_kind" (typing/typemod.ml[3170,117146+51]..[3170,117146+60]) ghost
                                pattern (typing/typemod.ml[3170,117146+51]..[3170,117146+60])
                                  Ppat_var "user_kind" (typing/typemod.ml[3170,117146+51]..[3170,117146+60])
                              "user_loc" (typing/typemod.ml[3170,117146+62]..[3170,117146+70]) ghost
                                pattern (typing/typemod.ml[3170,117146+62]..[3170,117146+70])
                                  Ppat_var "user_loc" (typing/typemod.ml[3170,117146+62]..[3170,117146+70])
                            ]
                  expression (typing/typemod.ml[3171,117222+6]..[3178,117626+34])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typemod.ml[3171,117222+10]..[3171,117222+26])
                          Ppat_var "opened_item_kind" (typing/typemod.ml[3171,117222+10]..[3171,117222+26])
                        expression (typing/typemod.ml[3171,117222+28]..[3171,117222+73])
                          Pexp_apply
                          expression (typing/typemod.ml[3171,117222+28]..[3171,117222+56])
                            Pexp_ident "Sig_component_kind.to_string" (typing/typemod.ml[3171,117222+28]..[3171,117222+56])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[3171,117222+57]..[3171,117222+73])
                                Pexp_ident "opened_item_kind" (typing/typemod.ml[3171,117222+57]..[3171,117222+73])
                          ]
                    ]
                    expression (typing/typemod.ml[3172,117299+6]..[3178,117626+34])
                      Pexp_apply
                      expression (typing/typemod.ml[3172,117299+6]..[3172,117299+21])
                        Pexp_ident "Location.errorf" (typing/typemod.ml[3172,117299+6]..[3172,117299+21])
                      [
                        <arg>
                        Labelled "loc"
                          expression (typing/typemod.ml[3172,117299+23]..[3172,117299+26])
                            Pexp_ident "loc" (typing/typemod.ml[3172,117299+23]..[3172,117299+26])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3173,117326+8]..[3174,117402+65])
                            Pexp_constant PConst_string("@[<v>The %s %a introduced by this open appears in the signature@ %a:@;<1 2>The %s %s has no valid type if %a is hidden@]",(typing/typemod.ml[3173,117326+9]..[3174,117402+64]),None)
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3175,117468+8]..[3175,117468+24])
                            Pexp_ident "opened_item_kind" (typing/typemod.ml[3175,117468+8]..[3175,117468+24])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3175,117468+25]..[3175,117468+36])
                            Pexp_ident "Ident.print" (typing/typemod.ml[3175,117468+25]..[3175,117468+36])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3175,117468+37]..[3175,117468+51])
                            Pexp_ident "opened_item_id" (typing/typemod.ml[3175,117468+37]..[3175,117468+51])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3176,117520+8]..[3176,117520+26])
                            Pexp_ident "Location.print_loc" (typing/typemod.ml[3176,117520+8]..[3176,117520+26])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3176,117520+27]..[3176,117520+35])
                            Pexp_ident "user_loc" (typing/typemod.ml[3176,117520+27]..[3176,117520+35])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3177,117556+8]..[3177,117556+48])
                            Pexp_apply
                            expression (typing/typemod.ml[3177,117556+9]..[3177,117556+37])
                              Pexp_ident "Sig_component_kind.to_string" (typing/typemod.ml[3177,117556+9]..[3177,117556+37])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[3177,117556+38]..[3177,117556+47])
                                  Pexp_ident "user_kind" (typing/typemod.ml[3177,117556+38]..[3177,117556+47])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3177,117556+49]..[3177,117556+69])
                            Pexp_apply
                            expression (typing/typemod.ml[3177,117556+50]..[3177,117556+60])
                              Pexp_ident "Ident.name" (typing/typemod.ml[3177,117556+50]..[3177,117556+60])
                            [
                              <arg>
                              Nolabel
                                expression (typing/typemod.ml[3177,117556+61]..[3177,117556+68])
                                  Pexp_ident "user_id" (typing/typemod.ml[3177,117556+61]..[3177,117556+68])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3178,117626+8]..[3178,117626+19])
                            Pexp_ident "Ident.print" (typing/typemod.ml[3178,117626+8]..[3178,117626+19])
                        <arg>
                        Nolabel
                          expression (typing/typemod.ml[3178,117626+20]..[3178,117626+34])
                            Pexp_ident "opened_item_id" (typing/typemod.ml[3178,117626+20]..[3178,117626+34])
                      ]
                <case>
                  pattern (typing/typemod.ml[3179,117661+4]..[3179,117661+26])
                    Ppat_construct "Invalid_type_subst_rhs" (typing/typemod.ml[3179,117661+4]..[3179,117661+26])
                    None
                  expression (typing/typemod.ml[3180,117691+6]..[3180,117691+78])
                    Pexp_apply
                    expression (typing/typemod.ml[3180,117691+6]..[3180,117691+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3180,117691+6]..[3180,117691+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3180,117691+23]..[3180,117691+26])
                          Pexp_ident "loc" (typing/typemod.ml[3180,117691+23]..[3180,117691+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3180,117691+27]..[3180,117691+78])
                          Pexp_constant PConst_string("Only type synonyms are allowed on the right of :=",(typing/typemod.ml[3180,117691+28]..[3180,117691+77]),None)
                    ]
                <case>
                  pattern (typing/typemod.ml[3181,117770+4]..[3181,117770+36])
                    Ppat_construct "Unpackable_local_modtype_subst" (typing/typemod.ml[3181,117770+4]..[3181,117770+34])
                    Some
                      []
                      pattern (typing/typemod.ml[3181,117770+35]..[3181,117770+36])
                        Ppat_var "p" (typing/typemod.ml[3181,117770+35]..[3181,117770+36])
                  expression (typing/typemod.ml[3182,117810+6]..[3185,117987+21])
                    Pexp_apply
                    expression (typing/typemod.ml[3182,117810+6]..[3182,117810+21])
                      Pexp_ident "Location.errorf" (typing/typemod.ml[3182,117810+6]..[3182,117810+21])
                    [
                      <arg>
                      Labelled "loc"
                        expression (typing/typemod.ml[3182,117810+23]..[3182,117810+26])
                          Pexp_ident "loc" (typing/typemod.ml[3182,117810+23]..[3182,117810+26])
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3183,117837+8]..[3184,117911+75])
                          Pexp_constant PConst_string("The module type@ %s@ is not a valid type for a packed module:@ it is defined as a local substitution for a non-path module type.",(typing/typemod.ml[3183,117837+9]..[3184,117911+74]),None)
                      <arg>
                      Nolabel
                        expression (typing/typemod.ml[3185,117987+8]..[3185,117987+21])
                          Pexp_apply
                          expression (typing/typemod.ml[3185,117987+9]..[3185,117987+18])
                            Pexp_ident "Path.name" (typing/typemod.ml[3185,117987+9]..[3185,117987+18])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[3185,117987+19]..[3185,117987+20])
                                Pexp_ident "p" (typing/typemod.ml[3185,117987+19]..[3185,117987+20])
                          ]
                    ]
              ]
    ]
  structure_item (typing/typemod.ml[3187,118010+0]..[3189,118087+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[3187,118010+4]..[3187,118010+16])
          Ppat_var "report_error" (typing/typemod.ml[3187,118010+4]..[3187,118010+16])
        expression (typing/typemod.ml[3187,118010+17]..[3189,118087+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typemod.ml[3187,118010+17]..[3187,118010+20])
            Ppat_var "env" (typing/typemod.ml[3187,118010+17]..[3187,118010+20])
          expression (typing/typemod.ml[3187,118010+21]..[3189,118087+41]) ghost
            Pexp_fun
            Labelled "loc"
            None
            pattern (typing/typemod.ml[3187,118010+22]..[3187,118010+25])
              Ppat_var "loc" (typing/typemod.ml[3187,118010+22]..[3187,118010+25])
            expression (typing/typemod.ml[3187,118010+26]..[3189,118087+41]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typemod.ml[3187,118010+26]..[3187,118010+29])
                Ppat_var "err" (typing/typemod.ml[3187,118010+26]..[3187,118010+29])
              expression (typing/typemod.ml[3188,118042+2]..[3189,118087+41])
                Pexp_apply
                expression (typing/typemod.ml[3188,118042+2]..[3188,118042+28])
                  Pexp_ident "Printtyp.wrap_printing_env" (typing/typemod.ml[3188,118042+2]..[3188,118042+28])
                [
                  <arg>
                  Labelled "error"
                    expression (typing/typemod.ml[3188,118042+36]..[3188,118042+40])
                      Pexp_construct "true" (typing/typemod.ml[3188,118042+36]..[3188,118042+40])
                      None
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[3188,118042+41]..[3188,118042+44])
                      Pexp_ident "env" (typing/typemod.ml[3188,118042+41]..[3188,118042+44])
                  <arg>
                  Nolabel
                    expression (typing/typemod.ml[3189,118087+4]..[3189,118087+41])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/typemod.ml[3189,118087+9]..[3189,118087+11])
                        Ppat_construct "()" (typing/typemod.ml[3189,118087+9]..[3189,118087+11])
                        None
                      expression (typing/typemod.ml[3189,118087+15]..[3189,118087+40])
                        Pexp_apply
                        expression (typing/typemod.ml[3189,118087+15]..[3189,118087+27])
                          Pexp_ident "report_error" (typing/typemod.ml[3189,118087+15]..[3189,118087+27])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[3189,118087+28]..[3189,118087+31])
                              Pexp_ident "env" (typing/typemod.ml[3189,118087+28]..[3189,118087+31])
                          <arg>
                          Labelled "loc"
                            expression (typing/typemod.ml[3189,118087+33]..[3189,118087+36])
                              Pexp_ident "loc" (typing/typemod.ml[3189,118087+33]..[3189,118087+36])
                          <arg>
                          Nolabel
                            expression (typing/typemod.ml[3189,118087+37]..[3189,118087+40])
                              Pexp_ident "err" (typing/typemod.ml[3189,118087+37]..[3189,118087+40])
                        ]
                ]
    ]
  structure_item (typing/typemod.ml[3191,118130+0]..[3200,118332+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typemod.ml[3191,118130+4]..[3191,118130+6])
          Ppat_construct "()" (typing/typemod.ml[3191,118130+4]..[3191,118130+6])
          None
        expression (typing/typemod.ml[3192,118139+2]..[3200,118332+5])
          Pexp_apply
          expression (typing/typemod.ml[3192,118139+2]..[3192,118139+32])
            Pexp_ident "Location.register_error_of_exn" (typing/typemod.ml[3192,118139+2]..[3192,118139+32])
          [
            <arg>
            Nolabel
              expression (typing/typemod.ml[3193,118172+4]..[3200,118332+5])
                Pexp_function
                [
                  <case>
                    pattern (typing/typemod.ml[3194,118186+8]..[3194,118186+29])
                      Ppat_construct "Error" (typing/typemod.ml[3194,118186+8]..[3194,118186+13])
                      Some
                        []
                        pattern (typing/typemod.ml[3194,118186+14]..[3194,118186+29])
                          Ppat_tuple
                          [
                            pattern (typing/typemod.ml[3194,118186+15]..[3194,118186+18])
                              Ppat_var "loc" (typing/typemod.ml[3194,118186+15]..[3194,118186+18])
                            pattern (typing/typemod.ml[3194,118186+20]..[3194,118186+23])
                              Ppat_var "env" (typing/typemod.ml[3194,118186+20]..[3194,118186+23])
                            pattern (typing/typemod.ml[3194,118186+25]..[3194,118186+28])
                              Ppat_var "err" (typing/typemod.ml[3194,118186+25]..[3194,118186+28])
                          ]
                    expression (typing/typemod.ml[3195,118219+8]..[3195,118219+40])
                      Pexp_construct "Some" (typing/typemod.ml[3195,118219+8]..[3195,118219+12])
                      Some
                        expression (typing/typemod.ml[3195,118219+13]..[3195,118219+40])
                          Pexp_apply
                          expression (typing/typemod.ml[3195,118219+14]..[3195,118219+26])
                            Pexp_ident "report_error" (typing/typemod.ml[3195,118219+14]..[3195,118219+26])
                          [
                            <arg>
                            Labelled "loc"
                              expression (typing/typemod.ml[3195,118219+28]..[3195,118219+31])
                                Pexp_ident "loc" (typing/typemod.ml[3195,118219+28]..[3195,118219+31])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[3195,118219+32]..[3195,118219+35])
                                Pexp_ident "env" (typing/typemod.ml[3195,118219+32]..[3195,118219+35])
                            <arg>
                            Nolabel
                              expression (typing/typemod.ml[3195,118219+36]..[3195,118219+39])
                                Pexp_ident "err" (typing/typemod.ml[3195,118219+36]..[3195,118219+39])
                          ]
                  <case>
                    pattern (typing/typemod.ml[3196,118260+8]..[3196,118260+25])
                      Ppat_construct "Error_forward" (typing/typemod.ml[3196,118260+8]..[3196,118260+21])
                      Some
                        []
                        pattern (typing/typemod.ml[3196,118260+22]..[3196,118260+25])
                          Ppat_var "err" (typing/typemod.ml[3196,118260+22]..[3196,118260+25])
                    expression (typing/typemod.ml[3197,118289+8]..[3197,118289+16])
                      Pexp_construct "Some" (typing/typemod.ml[3197,118289+8]..[3197,118289+12])
                      Some
                        expression (typing/typemod.ml[3197,118289+13]..[3197,118289+16])
                          Pexp_ident "err" (typing/typemod.ml[3197,118289+13]..[3197,118289+16])
                  <case>
                    pattern (typing/typemod.ml[3198,118306+8]..[3198,118306+9])
                      Ppat_any
                    expression (typing/typemod.ml[3199,118319+8]..[3199,118319+12])
                      Pexp_construct "None" (typing/typemod.ml[3199,118319+8]..[3199,118319+12])
                      None
                ]
          ]
    ]
]

