[
  structure_item (middle_end/flambda/unbox_specialised_args.ml[17,1156+0]..[17,1156+42])
    Pstr_attribute "ocaml.warning"
    [
      structure_item (middle_end/flambda/unbox_specialised_args.ml[17,1156+18]..[17,1156+41])
        Pstr_eval
        expression (middle_end/flambda/unbox_specialised_args.ml[17,1156+18]..[17,1156+41])
          Pexp_constant PConst_string("+a-4-9-30-40-41-42-66",(middle_end/flambda/unbox_specialised_args.ml[17,1156+19]..[17,1156+40]),None)
    ]
  structure_item (middle_end/flambda/unbox_specialised_args.ml[18,1199+0]..[18,1199+37])
    Pstr_open Override
    module_expr (middle_end/flambda/unbox_specialised_args.ml[18,1199+6]..[18,1199+37])
      Pmod_ident "Int_replace_polymorphic_compare" (middle_end/flambda/unbox_specialised_args.ml[18,1199+6]..[18,1199+37])
  structure_item (middle_end/flambda/unbox_specialised_args.ml[20,1238+0]..[20,1238+37])
    Pstr_module
    "ASA" (middle_end/flambda/unbox_specialised_args.ml[20,1238+7]..[20,1238+10])
      module_expr (middle_end/flambda/unbox_specialised_args.ml[20,1238+13]..[20,1238+37])
        Pmod_ident "Augment_specialised_args" (middle_end/flambda/unbox_specialised_args.ml[20,1238+13]..[20,1238+37])
  structure_item (middle_end/flambda/unbox_specialised_args.ml[21,1276+0]..[21,1276+33])
    Pstr_module
    "W" (middle_end/flambda/unbox_specialised_args.ml[21,1276+7]..[21,1276+8])
      module_expr (middle_end/flambda/unbox_specialised_args.ml[21,1276+11]..[21,1276+33])
        Pmod_ident "ASA.What_to_specialise" (middle_end/flambda/unbox_specialised_args.ml[21,1276+11]..[21,1276+33])
  structure_item (middle_end/flambda/unbox_specialised_args.ml[23,1311+0]..[101,5282+3])
    Pstr_module
    "Transform" (middle_end/flambda/unbox_specialised_args.ml[23,1311+7]..[23,1311+16])
      module_expr (middle_end/flambda/unbox_specialised_args.ml[23,1311+19]..[101,5282+3])
        Pmod_structure
        [
          structure_item (middle_end/flambda/unbox_specialised_args.ml[24,1337+2]..[24,1337+42])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/unbox_specialised_args.ml[24,1337+6]..[24,1337+15])
                  Ppat_var "pass_name" (middle_end/flambda/unbox_specialised_args.ml[24,1337+6]..[24,1337+15])
                expression (middle_end/flambda/unbox_specialised_args.ml[24,1337+18]..[24,1337+42])
                  Pexp_constant PConst_string("unbox-specialised-args",(middle_end/flambda/unbox_specialised_args.ml[24,1337+19]..[24,1337+41]),None)
            ]
          structure_item (middle_end/flambda/unbox_specialised_args.ml[26,1381+2]..[28,1490+69])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/unbox_specialised_args.ml[26,1381+6]..[26,1381+18])
                  Ppat_var "precondition" (middle_end/flambda/unbox_specialised_args.ml[26,1381+6]..[26,1381+18])
                expression (middle_end/flambda/unbox_specialised_args.ml[26,1381+19]..[28,1490+69]) ghost
                  Pexp_fun
                  Labelled "env"
                  None
                  pattern (middle_end/flambda/unbox_specialised_args.ml[26,1381+24]..[26,1381+25])
                    Ppat_any
                  expression (middle_end/flambda/unbox_specialised_args.ml[26,1381+26]..[28,1490+69]) ghost
                    Pexp_fun
                    Labelled "set_of_closures"
                    None
                    pattern (middle_end/flambda/unbox_specialised_args.ml[26,1381+28]..[26,1381+69])
                      Ppat_constraint
                      pattern (middle_end/flambda/unbox_specialised_args.ml[26,1381+28]..[26,1381+43])
                        Ppat_var "set_of_closures" (middle_end/flambda/unbox_specialised_args.ml[26,1381+28]..[26,1381+43])
                      core_type (middle_end/flambda/unbox_specialised_args.ml[26,1381+46]..[26,1381+69])
                        Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/unbox_specialised_args.ml[26,1381+46]..[26,1381+69])
                        []
                    expression (middle_end/flambda/unbox_specialised_args.ml[27,1454+4]..[28,1490+69])
                      Pexp_apply
                      expression (middle_end/flambda/unbox_specialised_args.ml[28,1490+6]..[28,1490+8])
                        Pexp_ident "&&" (middle_end/flambda/unbox_specialised_args.ml[28,1490+6]..[28,1490+8])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/unbox_specialised_args.ml[27,1454+4]..[27,1454+35])
                            Pexp_apply
                            expression (middle_end/flambda/unbox_specialised_args.ml[27,1454+4]..[27,1454+5])
                              Pexp_ident "!" (middle_end/flambda/unbox_specialised_args.ml[27,1454+4]..[27,1454+5])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/unbox_specialised_args.ml[27,1454+5]..[27,1454+35])
                                  Pexp_ident "Clflags.unbox_specialised_args" (middle_end/flambda/unbox_specialised_args.ml[27,1454+5]..[27,1454+35])
                            ]
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/unbox_specialised_args.ml[28,1490+9]..[28,1490+69])
                            Pexp_apply
                            expression (middle_end/flambda/unbox_specialised_args.ml[28,1490+9]..[28,1490+12])
                              Pexp_ident "not" (middle_end/flambda/unbox_specialised_args.ml[28,1490+9]..[28,1490+12])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/unbox_specialised_args.ml[28,1490+13]..[28,1490+69])
                                  Pexp_apply
                                  expression (middle_end/flambda/unbox_specialised_args.ml[28,1490+14]..[28,1490+35])
                                    Pexp_ident "Variable.Map.is_empty" (middle_end/flambda/unbox_specialised_args.ml[28,1490+14]..[28,1490+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/unbox_specialised_args.ml[28,1490+36]..[28,1490+68])
                                        Pexp_field
                                        expression (middle_end/flambda/unbox_specialised_args.ml[28,1490+36]..[28,1490+51])
                                          Pexp_ident "set_of_closures" (middle_end/flambda/unbox_specialised_args.ml[28,1490+36]..[28,1490+51])
                                        "specialised_args" (middle_end/flambda/unbox_specialised_args.ml[28,1490+52]..[28,1490+68])
                                  ]
                            ]
                      ]
            ]
          structure_item (middle_end/flambda/unbox_specialised_args.ml[30,1561+2]..[100,5255+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/unbox_specialised_args.ml[30,1561+6]..[30,1561+24])
                  Ppat_var "what_to_specialise" (middle_end/flambda/unbox_specialised_args.ml[30,1561+6]..[30,1561+24])
                expression (middle_end/flambda/unbox_specialised_args.ml[30,1561+25]..[100,5255+26]) ghost
                  Pexp_fun
                  Labelled "env"
                  None
                  pattern (middle_end/flambda/unbox_specialised_args.ml[30,1561+26]..[30,1561+29])
                    Ppat_var "env" (middle_end/flambda/unbox_specialised_args.ml[30,1561+26]..[30,1561+29])
                  expression (middle_end/flambda/unbox_specialised_args.ml[30,1561+30]..[100,5255+26]) ghost
                    Pexp_fun
                    Labelled "set_of_closures"
                    None
                    pattern (middle_end/flambda/unbox_specialised_args.ml[30,1561+32]..[30,1561+73])
                      Ppat_constraint
                      pattern (middle_end/flambda/unbox_specialised_args.ml[30,1561+32]..[30,1561+47])
                        Ppat_var "set_of_closures" (middle_end/flambda/unbox_specialised_args.ml[30,1561+32]..[30,1561+47])
                      core_type (middle_end/flambda/unbox_specialised_args.ml[30,1561+50]..[30,1561+73])
                        Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/unbox_specialised_args.ml[30,1561+50]..[30,1561+73])
                        []
                    expression (middle_end/flambda/unbox_specialised_args.ml[31,1638+4]..[100,5255+26])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/unbox_specialised_args.ml[31,1638+8]..[31,1638+26])
                            Ppat_var "what_to_specialise" (middle_end/flambda/unbox_specialised_args.ml[31,1638+8]..[31,1638+26])
                          expression (middle_end/flambda/unbox_specialised_args.ml[31,1638+29]..[31,1638+54])
                            Pexp_apply
                            expression (middle_end/flambda/unbox_specialised_args.ml[31,1638+29]..[31,1638+37])
                              Pexp_ident "W.create" (middle_end/flambda/unbox_specialised_args.ml[31,1638+29]..[31,1638+37])
                            [
                              <arg>
                              Labelled "set_of_closures"
                                expression (middle_end/flambda/unbox_specialised_args.ml[31,1638+39]..[31,1638+54])
                                  Pexp_ident "set_of_closures" (middle_end/flambda/unbox_specialised_args.ml[31,1638+39]..[31,1638+54])
                            ]
                      ]
                      expression (middle_end/flambda/unbox_specialised_args.ml[32,1696+4]..[100,5255+26])
                        Pexp_ifthenelse
                        expression (middle_end/flambda/unbox_specialised_args.ml[32,1696+7]..[32,1696+47])
                          Pexp_apply
                          expression (middle_end/flambda/unbox_specialised_args.ml[32,1696+7]..[32,1696+10])
                            Pexp_ident "not" (middle_end/flambda/unbox_specialised_args.ml[32,1696+7]..[32,1696+10])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/unbox_specialised_args.ml[32,1696+11]..[32,1696+47])
                                Pexp_apply
                                expression (middle_end/flambda/unbox_specialised_args.ml[32,1696+12]..[32,1696+24])
                                  Pexp_ident "precondition" (middle_end/flambda/unbox_specialised_args.ml[32,1696+12]..[32,1696+24])
                                [
                                  <arg>
                                  Labelled "env"
                                    expression (middle_end/flambda/unbox_specialised_args.ml[32,1696+26]..[32,1696+29])
                                      Pexp_ident "env" (middle_end/flambda/unbox_specialised_args.ml[32,1696+26]..[32,1696+29])
                                  <arg>
                                  Labelled "set_of_closures"
                                    expression (middle_end/flambda/unbox_specialised_args.ml[32,1696+31]..[32,1696+46])
                                      Pexp_ident "set_of_closures" (middle_end/flambda/unbox_specialised_args.ml[32,1696+31]..[32,1696+46])
                                ]
                          ]
                        expression (middle_end/flambda/unbox_specialised_args.ml[33,1749+6]..[33,1749+24])
                          Pexp_ident "what_to_specialise" (middle_end/flambda/unbox_specialised_args.ml[33,1749+6]..[33,1749+24])
                        Some
                          expression (middle_end/flambda/unbox_specialised_args.ml[35,1783+6]..[100,5255+26])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/unbox_specialised_args.ml[35,1783+10]..[35,1783+33])
                                  Ppat_var "projections_by_function" (middle_end/flambda/unbox_specialised_args.ml[35,1783+10]..[35,1783+33])
                                expression (middle_end/flambda/unbox_specialised_args.ml[36,1819+8]..[42,2128+69])
                                  Pexp_apply
                                  expression (middle_end/flambda/unbox_specialised_args.ml[36,1819+44]..[36,1819+46])
                                    Pexp_ident "|>" (middle_end/flambda/unbox_specialised_args.ml[36,1819+44]..[36,1819+46])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/unbox_specialised_args.ml[36,1819+8]..[36,1819+43])
                                        Pexp_field
                                        expression (middle_end/flambda/unbox_specialised_args.ml[36,1819+8]..[36,1819+38])
                                          Pexp_field
                                          expression (middle_end/flambda/unbox_specialised_args.ml[36,1819+8]..[36,1819+23])
                                            Pexp_ident "set_of_closures" (middle_end/flambda/unbox_specialised_args.ml[36,1819+8]..[36,1819+23])
                                          "function_decls" (middle_end/flambda/unbox_specialised_args.ml[36,1819+24]..[36,1819+38])
                                        "funs" (middle_end/flambda/unbox_specialised_args.ml[36,1819+39]..[36,1819+43])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/unbox_specialised_args.ml[36,1819+47]..[42,2128+69])
                                        Pexp_apply
                                        expression (middle_end/flambda/unbox_specialised_args.ml[36,1819+47]..[36,1819+70])
                                          Pexp_ident "Variable.Map.filter_map" (middle_end/flambda/unbox_specialised_args.ml[36,1819+47]..[36,1819+70])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/unbox_specialised_args.ml[37,1890+10]..[42,2128+69])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/flambda/unbox_specialised_args.ml[37,1890+15]..[37,1890+23])
                                                Ppat_var "_fun_var" (middle_end/flambda/unbox_specialised_args.ml[37,1890+15]..[37,1890+23])
                                              expression (middle_end/flambda/unbox_specialised_args.ml[37,1890+24]..[42,2128+68]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (middle_end/flambda/unbox_specialised_args.ml[37,1890+24]..[37,1890+70])
                                                  Ppat_constraint
                                                  pattern (middle_end/flambda/unbox_specialised_args.ml[37,1890+25]..[37,1890+38])
                                                    Ppat_var "function_decl" (middle_end/flambda/unbox_specialised_args.ml[37,1890+25]..[37,1890+38])
                                                  core_type (middle_end/flambda/unbox_specialised_args.ml[37,1890+41]..[37,1890+69])
                                                    Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/unbox_specialised_args.ml[37,1890+41]..[37,1890+69])
                                                    []
                                                expression (middle_end/flambda/unbox_specialised_args.ml[38,1964+14]..[42,2128+68])
                                                  Pexp_ifthenelse
                                                  expression (middle_end/flambda/unbox_specialised_args.ml[38,1964+17]..[38,1964+35])
                                                    Pexp_field
                                                    expression (middle_end/flambda/unbox_specialised_args.ml[38,1964+17]..[38,1964+30])
                                                      Pexp_ident "function_decl" (middle_end/flambda/unbox_specialised_args.ml[38,1964+17]..[38,1964+30])
                                                    "stub" (middle_end/flambda/unbox_specialised_args.ml[38,1964+31]..[38,1964+35])
                                                  expression (middle_end/flambda/unbox_specialised_args.ml[38,1964+41]..[38,1964+45])
                                                    Pexp_construct "None" (middle_end/flambda/unbox_specialised_args.ml[38,1964+41]..[38,1964+45])
                                                    None
                                                  Some
                                                    expression (middle_end/flambda/unbox_specialised_args.ml[40,2029+16]..[42,2128+68])
                                                      Pexp_construct "Some" (middle_end/flambda/unbox_specialised_args.ml[40,2029+16]..[40,2029+20])
                                                      Some
                                                        expression (middle_end/flambda/unbox_specialised_args.ml[40,2029+21]..[42,2128+68])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/unbox_specialised_args.ml[40,2029+22]..[40,2029+60])
                                                            Pexp_ident "Extract_projections.from_function_decl" (middle_end/flambda/unbox_specialised_args.ml[40,2029+22]..[40,2029+60])
                                                          [
                                                            <arg>
                                                            Labelled "env"
                                                              expression (middle_end/flambda/unbox_specialised_args.ml[40,2029+62]..[40,2029+65])
                                                                Pexp_ident "env" (middle_end/flambda/unbox_specialised_args.ml[40,2029+62]..[40,2029+65])
                                                            <arg>
                                                            Labelled "function_decl"
                                                              expression (middle_end/flambda/unbox_specialised_args.ml[41,2095+19]..[41,2095+32])
                                                                Pexp_ident "function_decl" (middle_end/flambda/unbox_specialised_args.ml[41,2095+19]..[41,2095+32])
                                                            <arg>
                                                            Labelled "which_variables"
                                                              expression (middle_end/flambda/unbox_specialised_args.ml[42,2128+35]..[42,2128+67])
                                                                Pexp_field
                                                                expression (middle_end/flambda/unbox_specialised_args.ml[42,2128+35]..[42,2128+50])
                                                                  Pexp_ident "set_of_closures" (middle_end/flambda/unbox_specialised_args.ml[42,2128+35]..[42,2128+50])
                                                                "specialised_args" (middle_end/flambda/unbox_specialised_args.ml[42,2128+51]..[42,2128+67])
                                                          ]
                                        ]
                                  ]
                            ]
                            expression (middle_end/flambda/unbox_specialised_args.ml[46,2331+6]..[100,5255+26])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/unbox_specialised_args.ml[46,2331+10]..[46,2331+31])
                                    Ppat_var "invariant_params_flow" (middle_end/flambda/unbox_specialised_args.ml[46,2331+10]..[46,2331+31])
                                  expression (middle_end/flambda/unbox_specialised_args.ml[47,2365+8]..[48,2445+60])
                                    Pexp_apply
                                    expression (middle_end/flambda/unbox_specialised_args.ml[47,2365+8]..[47,2365+48])
                                      Pexp_ident "Invariant_params.invariant_param_sources" (middle_end/flambda/unbox_specialised_args.ml[47,2365+8]..[47,2365+48])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/unbox_specialised_args.ml[47,2365+49]..[47,2365+79])
                                          Pexp_field
                                          expression (middle_end/flambda/unbox_specialised_args.ml[47,2365+49]..[47,2365+64])
                                            Pexp_ident "set_of_closures" (middle_end/flambda/unbox_specialised_args.ml[47,2365+49]..[47,2365+64])
                                          "function_decls" (middle_end/flambda/unbox_specialised_args.ml[47,2365+65]..[47,2365+79])
                                      <arg>
                                      Labelled "backend"
                                        expression (middle_end/flambda/unbox_specialised_args.ml[48,2445+19]..[48,2445+60])
                                          Pexp_apply
                                          expression (middle_end/flambda/unbox_specialised_args.ml[48,2445+20]..[48,2445+55])
                                            Pexp_ident "Inline_and_simplify_aux.Env.backend" (middle_end/flambda/unbox_specialised_args.ml[48,2445+20]..[48,2445+55])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/unbox_specialised_args.ml[48,2445+56]..[48,2445+59])
                                                Pexp_ident "env" (middle_end/flambda/unbox_specialised_args.ml[48,2445+56]..[48,2445+59])
                                          ]
                                    ]
                              ]
                              expression (middle_end/flambda/unbox_specialised_args.ml[50,2515+6]..[100,5255+26])
                                Pexp_apply
                                expression (middle_end/flambda/unbox_specialised_args.ml[50,2515+6]..[50,2515+23])
                                  Pexp_ident "Variable.Map.fold" (middle_end/flambda/unbox_specialised_args.ml[50,2515+6]..[50,2515+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/unbox_specialised_args.ml[50,2515+24]..[98,5191+31])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/unbox_specialised_args.ml[50,2515+29]..[50,2515+36])
                                        Ppat_var "fun_var" (middle_end/flambda/unbox_specialised_args.ml[50,2515+29]..[50,2515+36])
                                      expression (middle_end/flambda/unbox_specialised_args.ml[50,2515+37]..[98,5191+30]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/flambda/unbox_specialised_args.ml[50,2515+37]..[50,2515+48])
                                          Ppat_var "extractions" (middle_end/flambda/unbox_specialised_args.ml[50,2515+37]..[50,2515+48])
                                        expression (middle_end/flambda/unbox_specialised_args.ml[50,2515+49]..[98,5191+30]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/flambda/unbox_specialised_args.ml[50,2515+49]..[50,2515+67])
                                            Ppat_var "what_to_specialise" (middle_end/flambda/unbox_specialised_args.ml[50,2515+49]..[50,2515+67])
                                          expression (middle_end/flambda/unbox_specialised_args.ml[51,2586+10]..[98,5191+30])
                                            Pexp_apply
                                            expression (middle_end/flambda/unbox_specialised_args.ml[51,2586+10]..[51,2586+29])
                                              Pexp_ident "Projection.Set.fold" (middle_end/flambda/unbox_specialised_args.ml[51,2586+10]..[51,2586+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/unbox_specialised_args.ml[51,2586+30]..[96,5129+37])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (middle_end/flambda/unbox_specialised_args.ml[51,2586+35]..[51,2586+62])
                                                    Ppat_constraint
                                                    pattern (middle_end/flambda/unbox_specialised_args.ml[51,2586+36]..[51,2586+46])
                                                      Ppat_var "projection" (middle_end/flambda/unbox_specialised_args.ml[51,2586+36]..[51,2586+46])
                                                    core_type (middle_end/flambda/unbox_specialised_args.ml[51,2586+49]..[51,2586+61])
                                                      Ptyp_constr "Projection.t" (middle_end/flambda/unbox_specialised_args.ml[51,2586+49]..[51,2586+61])
                                                      []
                                                  expression (middle_end/flambda/unbox_specialised_args.ml[52,2649+18]..[96,5129+36]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (middle_end/flambda/unbox_specialised_args.ml[52,2649+18]..[52,2649+36])
                                                      Ppat_var "what_to_specialise" (middle_end/flambda/unbox_specialised_args.ml[52,2649+18]..[52,2649+36])
                                                    expression (middle_end/flambda/unbox_specialised_args.ml[53,2689+14]..[96,5129+36])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (middle_end/flambda/unbox_specialised_args.ml[53,2689+18]..[53,2689+23])
                                                            Ppat_var "group" (middle_end/flambda/unbox_specialised_args.ml[53,2689+18]..[53,2689+23])
                                                          expression (middle_end/flambda/unbox_specialised_args.ml[53,2689+26]..[53,2689+63])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/unbox_specialised_args.ml[53,2689+26]..[53,2689+52])
                                                              Pexp_ident "Projection.projecting_from" (middle_end/flambda/unbox_specialised_args.ml[53,2689+26]..[53,2689+52])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/unbox_specialised_args.ml[53,2689+53]..[53,2689+63])
                                                                  Pexp_ident "projection" (middle_end/flambda/unbox_specialised_args.ml[53,2689+53]..[53,2689+63])
                                                            ]
                                                      ]
                                                      expression (middle_end/flambda/unbox_specialised_args.ml[54,2756+14]..[96,5129+36])
                                                        Pexp_sequence
                                                        expression (middle_end/flambda/unbox_specialised_args.ml[54,2756+14]..[54,2756+78])
                                                          Pexp_assert
                                                          expression (middle_end/flambda/unbox_specialised_args.ml[54,2756+21]..[54,2756+78])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/unbox_specialised_args.ml[54,2756+22]..[54,2756+38])
                                                              Pexp_ident "Variable.Map.mem" (middle_end/flambda/unbox_specialised_args.ml[54,2756+22]..[54,2756+38])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/unbox_specialised_args.ml[54,2756+39]..[54,2756+44])
                                                                  Pexp_ident "group" (middle_end/flambda/unbox_specialised_args.ml[54,2756+39]..[54,2756+44])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/unbox_specialised_args.ml[54,2756+45]..[54,2756+77])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/unbox_specialised_args.ml[54,2756+45]..[54,2756+60])
                                                                    Pexp_ident "set_of_closures" (middle_end/flambda/unbox_specialised_args.ml[54,2756+45]..[54,2756+60])
                                                                  "specialised_args" (middle_end/flambda/unbox_specialised_args.ml[54,2756+61]..[54,2756+77])
                                                            ]
                                                        expression (middle_end/flambda/unbox_specialised_args.ml[55,2836+14]..[96,5129+36])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/flambda/unbox_specialised_args.ml[55,2836+18]..[55,2836+36])
                                                                Ppat_var "what_to_specialise" (middle_end/flambda/unbox_specialised_args.ml[55,2836+18]..[55,2836+36])
                                                              expression (middle_end/flambda/unbox_specialised_args.ml[56,2875+16]..[58,3020+33])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/unbox_specialised_args.ml[56,2875+16]..[56,2875+37])
                                                                  Pexp_ident "W.new_specialised_arg" (middle_end/flambda/unbox_specialised_args.ml[56,2875+16]..[56,2875+37])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/unbox_specialised_args.ml[56,2875+38]..[56,2875+56])
                                                                      Pexp_ident "what_to_specialise" (middle_end/flambda/unbox_specialised_args.ml[56,2875+38]..[56,2875+56])
                                                                  <arg>
                                                                  Labelled "fun_var"
                                                                    expression (middle_end/flambda/unbox_specialised_args.ml[56,2875+58]..[56,2875+65])
                                                                      Pexp_ident "fun_var" (middle_end/flambda/unbox_specialised_args.ml[56,2875+58]..[56,2875+65])
                                                                  <arg>
                                                                  Labelled "group"
                                                                    expression (middle_end/flambda/unbox_specialised_args.ml[56,2875+67]..[56,2875+72])
                                                                      Pexp_ident "group" (middle_end/flambda/unbox_specialised_args.ml[56,2875+67]..[56,2875+72])
                                                                  <arg>
                                                                  Labelled "definition"
                                                                    expression (middle_end/flambda/unbox_specialised_args.ml[57,2948+30]..[58,3020+33])
                                                                      Pexp_construct "Projection_from_existing_specialised_arg" (middle_end/flambda/unbox_specialised_args.ml[57,2948+31]..[57,2948+71])
                                                                      Some
expression (middle_end/flambda/unbox_specialised_args.ml[58,3020+22]..[58,3020+32])
  Pexp_ident "projection" (middle_end/flambda/unbox_specialised_args.ml[58,3020+22]..[58,3020+32])
                                                                ]
                                                          ]
                                                          expression (middle_end/flambda/unbox_specialised_args.ml[60,3071+14]..[96,5129+36])
                                                            Pexp_match
                                                            expression (middle_end/flambda/unbox_specialised_args.ml[60,3071+20]..[60,3071+65])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/unbox_specialised_args.ml[60,3071+20]..[60,3071+37])
                                                                Pexp_ident "Variable.Map.find" (middle_end/flambda/unbox_specialised_args.ml[60,3071+20]..[60,3071+37])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/unbox_specialised_args.ml[60,3071+38]..[60,3071+43])
                                                                    Pexp_ident "group" (middle_end/flambda/unbox_specialised_args.ml[60,3071+38]..[60,3071+43])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/unbox_specialised_args.ml[60,3071+44]..[60,3071+65])
                                                                    Pexp_ident "invariant_params_flow" (middle_end/flambda/unbox_specialised_args.ml[60,3071+44]..[60,3071+65])
                                                              ]
                                                            [
                                                              <case>
                                                                pattern (middle_end/flambda/unbox_specialised_args.ml[61,3142+16]..[61,3142+35])
                                                                  Ppat_exception
                                                                  pattern (middle_end/flambda/unbox_specialised_args.ml[61,3142+26]..[61,3142+35])
                                                                    Ppat_construct "Not_found" (middle_end/flambda/unbox_specialised_args.ml[61,3142+26]..[61,3142+35])
                                                                    None
                                                                expression (middle_end/flambda/unbox_specialised_args.ml[61,3142+39]..[61,3142+57])
                                                                  Pexp_ident "what_to_specialise" (middle_end/flambda/unbox_specialised_args.ml[61,3142+39]..[61,3142+57])
                                                              <case>
                                                                pattern (middle_end/flambda/unbox_specialised_args.ml[62,3200+16]..[62,3200+20])
                                                                  Ppat_var "flow" (middle_end/flambda/unbox_specialised_args.ml[62,3200+16]..[62,3200+20])
                                                                expression (middle_end/flambda/unbox_specialised_args.ml[71,3794+16]..[96,5129+36])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/unbox_specialised_args.ml[71,3794+16]..[71,3794+38])
                                                                    Pexp_ident "Variable.Pair.Set.fold" (middle_end/flambda/unbox_specialised_args.ml[71,3794+16]..[71,3794+38])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/unbox_specialised_args.ml[71,3794+39]..[94,5081+24])
Pexp_fun
Nolabel
None
pattern (middle_end/flambda/unbox_specialised_args.ml[71,3794+44]..[71,3794+77])
  Ppat_tuple
  [
    pattern (middle_end/flambda/unbox_specialised_args.ml[71,3794+45]..[71,3794+59])
      Ppat_var "target_fun_var" (middle_end/flambda/unbox_specialised_args.ml[71,3794+45]..[71,3794+59])
    pattern (middle_end/flambda/unbox_specialised_args.ml[71,3794+61]..[71,3794+76])
      Ppat_var "target_spec_arg" (middle_end/flambda/unbox_specialised_args.ml[71,3794+61]..[71,3794+76])
  ]
expression (middle_end/flambda/unbox_specialised_args.ml[72,3872+26]..[94,5081+23]) ghost
  Pexp_fun
  Nolabel
  None
  pattern (middle_end/flambda/unbox_specialised_args.ml[72,3872+26]..[72,3872+44])
    Ppat_var "what_to_specialise" (middle_end/flambda/unbox_specialised_args.ml[72,3872+26]..[72,3872+44])
  expression (middle_end/flambda/unbox_specialised_args.ml[73,3920+20]..[94,5081+23])
    Pexp_ifthenelse
    expression (middle_end/flambda/unbox_specialised_args.ml[73,3920+23]..[75,4044+59])
      Pexp_apply
      expression (middle_end/flambda/unbox_specialised_args.ml[74,3981+22]..[74,3981+24])
        Pexp_ident "||" (middle_end/flambda/unbox_specialised_args.ml[74,3981+22]..[74,3981+24])
      [
        <arg>
        Nolabel
          expression (middle_end/flambda/unbox_specialised_args.ml[73,3920+23]..[73,3920+60])
            Pexp_apply
            expression (middle_end/flambda/unbox_specialised_args.ml[73,3920+23]..[73,3920+37])
              Pexp_ident "Variable.equal" (middle_end/flambda/unbox_specialised_args.ml[73,3920+23]..[73,3920+37])
            [
              <arg>
              Nolabel
                expression (middle_end/flambda/unbox_specialised_args.ml[73,3920+38]..[73,3920+45])
                  Pexp_ident "fun_var" (middle_end/flambda/unbox_specialised_args.ml[73,3920+38]..[73,3920+45])
              <arg>
              Nolabel
                expression (middle_end/flambda/unbox_specialised_args.ml[73,3920+46]..[73,3920+60])
                  Pexp_ident "target_fun_var" (middle_end/flambda/unbox_specialised_args.ml[73,3920+46]..[73,3920+60])
            ]
        <arg>
        Nolabel
          expression (middle_end/flambda/unbox_specialised_args.ml[74,3981+25]..[75,4044+59])
            Pexp_apply
            expression (middle_end/flambda/unbox_specialised_args.ml[74,3981+25]..[74,3981+28])
              Pexp_ident "not" (middle_end/flambda/unbox_specialised_args.ml[74,3981+25]..[74,3981+28])
            [
              <arg>
              Nolabel
                expression (middle_end/flambda/unbox_specialised_args.ml[74,3981+29]..[75,4044+59])
                  Pexp_apply
                  expression (middle_end/flambda/unbox_specialised_args.ml[74,3981+30]..[74,3981+46])
                    Pexp_ident "Variable.Map.mem" (middle_end/flambda/unbox_specialised_args.ml[74,3981+30]..[74,3981+46])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/unbox_specialised_args.ml[74,3981+47]..[74,3981+62])
                        Pexp_ident "target_spec_arg" (middle_end/flambda/unbox_specialised_args.ml[74,3981+47]..[74,3981+62])
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/unbox_specialised_args.ml[75,4044+26]..[75,4044+58])
                        Pexp_field
                        expression (middle_end/flambda/unbox_specialised_args.ml[75,4044+26]..[75,4044+41])
                          Pexp_ident "set_of_closures" (middle_end/flambda/unbox_specialised_args.ml[75,4044+26]..[75,4044+41])
                        "specialised_args" (middle_end/flambda/unbox_specialised_args.ml[75,4044+42]..[75,4044+58])
                  ]
            ]
      ]
    expression (middle_end/flambda/unbox_specialised_args.ml[76,4104+25]..[78,4176+23])
      Pexp_ident "what_to_specialise" (middle_end/flambda/unbox_specialised_args.ml[77,4135+22]..[77,4135+40])
    Some
      expression (middle_end/flambda/unbox_specialised_args.ml[78,4176+29]..[94,5081+23])
        Pexp_let Nonrec
        [
          <def>
            pattern (middle_end/flambda/unbox_specialised_args.ml[84,4567+26]..[84,4567+36])
              Ppat_var "projection" (middle_end/flambda/unbox_specialised_args.ml[84,4567+26]..[84,4567+36])
            expression (middle_end/flambda/unbox_specialised_args.ml[85,4606+24]..[88,4776+44])
              Pexp_apply
              expression (middle_end/flambda/unbox_specialised_args.ml[85,4606+24]..[85,4606+54])
                Pexp_ident "Projection.map_projecting_from" (middle_end/flambda/unbox_specialised_args.ml[85,4606+24]..[85,4606+54])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/unbox_specialised_args.ml[85,4606+55]..[85,4606+65])
                    Pexp_ident "projection" (middle_end/flambda/unbox_specialised_args.ml[85,4606+55]..[85,4606+65])
                <arg>
                Labelled "f"
                  expression (middle_end/flambda/unbox_specialised_args.ml[86,4672+29]..[88,4776+44])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/unbox_specialised_args.ml[86,4672+34]..[86,4672+37])
                      Ppat_var "var" (middle_end/flambda/unbox_specialised_args.ml[86,4672+34]..[86,4672+37])
                    expression (middle_end/flambda/unbox_specialised_args.ml[87,4713+28]..[88,4776+43])
                      Pexp_sequence
                      expression (middle_end/flambda/unbox_specialised_args.ml[87,4713+28]..[87,4713+61])
                        Pexp_assert
                        expression (middle_end/flambda/unbox_specialised_args.ml[87,4713+35]..[87,4713+61])
                          Pexp_apply
                          expression (middle_end/flambda/unbox_specialised_args.ml[87,4713+36]..[87,4713+50])
                            Pexp_ident "Variable.equal" (middle_end/flambda/unbox_specialised_args.ml[87,4713+36]..[87,4713+50])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/unbox_specialised_args.ml[87,4713+51]..[87,4713+54])
                                Pexp_ident "var" (middle_end/flambda/unbox_specialised_args.ml[87,4713+51]..[87,4713+54])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/unbox_specialised_args.ml[87,4713+55]..[87,4713+60])
                                Pexp_ident "group" (middle_end/flambda/unbox_specialised_args.ml[87,4713+55]..[87,4713+60])
                          ]
                      expression (middle_end/flambda/unbox_specialised_args.ml[88,4776+28]..[88,4776+43])
                        Pexp_ident "target_spec_arg" (middle_end/flambda/unbox_specialised_args.ml[88,4776+28]..[88,4776+43])
              ]
        ]
        expression (middle_end/flambda/unbox_specialised_args.ml[90,4846+22]..[93,5001+79])
          Pexp_apply
          expression (middle_end/flambda/unbox_specialised_args.ml[90,4846+22]..[90,4846+43])
            Pexp_ident "W.new_specialised_arg" (middle_end/flambda/unbox_specialised_args.ml[90,4846+22]..[90,4846+43])
          [
            <arg>
            Nolabel
              expression (middle_end/flambda/unbox_specialised_args.ml[90,4846+44]..[90,4846+62])
                Pexp_ident "what_to_specialise" (middle_end/flambda/unbox_specialised_args.ml[90,4846+44]..[90,4846+62])
            <arg>
            Labelled "fun_var"
              expression (middle_end/flambda/unbox_specialised_args.ml[91,4909+33]..[91,4909+47])
                Pexp_ident "target_fun_var" (middle_end/flambda/unbox_specialised_args.ml[91,4909+33]..[91,4909+47])
            <arg>
            Labelled "group"
              expression (middle_end/flambda/unbox_specialised_args.ml[91,4909+49]..[91,4909+54])
                Pexp_ident "group" (middle_end/flambda/unbox_specialised_args.ml[91,4909+49]..[91,4909+54])
            <arg>
            Labelled "definition"
              expression (middle_end/flambda/unbox_specialised_args.ml[93,5001+26]..[93,5001+79])
                Pexp_construct "Projection_from_existing_specialised_arg" (middle_end/flambda/unbox_specialised_args.ml[93,5001+27]..[93,5001+67])
                Some
                  expression (middle_end/flambda/unbox_specialised_args.ml[93,5001+68]..[93,5001+78])
                    Pexp_ident "projection" (middle_end/flambda/unbox_specialised_args.ml[93,5001+68]..[93,5001+78])
          ]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/unbox_specialised_args.ml[95,5106+18]..[95,5106+22])
Pexp_ident "flow" (middle_end/flambda/unbox_specialised_args.ml[95,5106+18]..[95,5106+22])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/unbox_specialised_args.ml[96,5129+18]..[96,5129+36])
Pexp_ident "what_to_specialise" (middle_end/flambda/unbox_specialised_args.ml[96,5129+18]..[96,5129+36])
                                                                  ]
                                                            ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/unbox_specialised_args.ml[97,5167+12]..[97,5167+23])
                                                  Pexp_ident "extractions" (middle_end/flambda/unbox_specialised_args.ml[97,5167+12]..[97,5167+23])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/unbox_specialised_args.ml[98,5191+12]..[98,5191+30])
                                                  Pexp_ident "what_to_specialise" (middle_end/flambda/unbox_specialised_args.ml[98,5191+12]..[98,5191+30])
                                            ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/unbox_specialised_args.ml[99,5223+8]..[99,5223+31])
                                      Pexp_ident "projections_by_function" (middle_end/flambda/unbox_specialised_args.ml[99,5223+8]..[99,5223+31])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/unbox_specialised_args.ml[100,5255+8]..[100,5255+26])
                                      Pexp_ident "what_to_specialise" (middle_end/flambda/unbox_specialised_args.ml[100,5255+8]..[100,5255+26])
                                ]
            ]
        ]
  structure_item (middle_end/flambda/unbox_specialised_args.ml[103,5287+0]..[103,5287+28])
    Pstr_include    module_expr (middle_end/flambda/unbox_specialised_args.ml[103,5287+8]..[103,5287+28])
      Pmod_apply
      module_expr (middle_end/flambda/unbox_specialised_args.ml[103,5287+8]..[103,5287+16])
        Pmod_ident "ASA.Make" (middle_end/flambda/unbox_specialised_args.ml[103,5287+8]..[103,5287+16])
      module_expr (middle_end/flambda/unbox_specialised_args.ml[103,5287+18]..[103,5287+27])
        Pmod_ident "Transform" (middle_end/flambda/unbox_specialised_args.ml[103,5287+18]..[103,5287+27])
]

